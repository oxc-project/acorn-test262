{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "invalidControls",
        "start": 465,
        "end": 480
      },
      "generator": true,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "kind": "let",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "alpha",
                    "start": 586,
                    "end": 591
                  },
                  "init": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x00",
                    "start": 594,
                    "end": 598
                  },
                  "start": 586,
                  "end": 598
                }
              ],
              "start": 582,
              "end": 598
            },
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "alpha",
                "start": 600,
                "end": 605
              },
              "operator": "<=",
              "right": {
                "type": "Literal",
                "value": 127,
                "raw": "0x7F",
                "start": 609,
                "end": 613
              },
              "start": 600,
              "end": 613
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "alpha",
                "start": 615,
                "end": 620
              },
              "start": 615,
              "end": 622
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "let",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "letter",
                        "start": 634,
                        "end": 640
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 643,
                            "end": 649
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "fromCharCode",
                            "start": 650,
                            "end": 662
                          },
                          "optional": false,
                          "computed": false,
                          "start": 643,
                          "end": 662
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "alpha",
                            "start": 663,
                            "end": 668
                          }
                        ],
                        "optional": false,
                        "start": 643,
                        "end": 669
                      },
                      "start": 634,
                      "end": 669
                    }
                  ],
                  "start": 630,
                  "end": 670
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "letter",
                          "start": 680,
                          "end": 686
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "match",
                          "start": 687,
                          "end": 692
                        },
                        "optional": false,
                        "computed": false,
                        "start": 680,
                        "end": 692
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": null,
                          "raw": "/[0-9A-Za-z_\\$(|)\\[\\]\\/\\\\^]/",
                          "regex": {
                            "pattern": "[0-9A-Za-z_\\$(|)\\[\\]\\/\\\\^]",
                            "flags": ""
                          },
                          "start": 693,
                          "end": 721
                        }
                      ],
                      "optional": false,
                      "start": 680,
                      "end": 722
                    },
                    "prefix": true,
                    "start": 679,
                    "end": 722
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "YieldExpression",
                          "delegate": false,
                          "argument": {
                            "type": "Identifier",
                            "name": "letter",
                            "start": 738,
                            "end": 744
                          },
                          "start": 732,
                          "end": 744
                        },
                        "start": 732,
                        "end": 745
                      }
                    ],
                    "start": 724,
                    "end": 751
                  },
                  "alternate": null,
                  "start": 675,
                  "end": 751
                }
              ],
              "start": 624,
              "end": 755
            },
            "start": 577,
            "end": 755
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "YieldExpression",
              "delegate": false,
              "argument": {
                "type": "Literal",
                "value": "",
                "raw": "\"\"",
                "start": 764,
                "end": 766
              },
              "start": 758,
              "end": 766
            },
            "start": 758,
            "end": 767
          }
        ],
        "start": 483,
        "end": 769
      },
      "expression": false,
      "start": 455,
      "end": 769
    },
    {
      "type": "ForOfStatement",
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "kind": "let",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "letter",
              "start": 780,
              "end": 786
            },
            "init": null,
            "start": 780,
            "end": 786
          }
        ],
        "start": 776,
        "end": 786
      },
      "right": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "invalidControls",
          "start": 790,
          "end": 805
        },
        "arguments": [],
        "optional": false,
        "start": 790,
        "end": 807
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "source",
                  "start": 817,
                  "end": 823
                },
                "init": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": "[\\c",
                      "raw": "\"[\\\\c\"",
                      "start": 826,
                      "end": 832
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "name": "letter",
                      "start": 835,
                      "end": 841
                    },
                    "start": 826,
                    "end": 841
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "value": "]",
                    "raw": "\"]\"",
                    "start": 844,
                    "end": 847
                  },
                  "start": 826,
                  "end": 847
                },
                "start": 817,
                "end": 847
              }
            ],
            "start": 813,
            "end": 848
          },
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "re",
                  "start": 855,
                  "end": 857
                },
                "init": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "RegExp",
                    "start": 864,
                    "end": 870
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "source",
                      "start": 871,
                      "end": 877
                    }
                  ],
                  "start": 860,
                  "end": 878
                },
                "start": 855,
                "end": 878
              }
            ],
            "start": 851,
            "end": 879
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "letter",
                  "start": 887,
                  "end": 893
                },
                "property": {
                  "type": "Identifier",
                  "name": "length",
                  "start": 894,
                  "end": 900
                },
                "optional": false,
                "computed": false,
                "start": 887,
                "end": 900
              },
              "operator": ">",
              "right": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 903,
                "end": 904
              },
              "start": 887,
              "end": 904
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "char",
                        "start": 916,
                        "end": 920
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "letter",
                            "start": 923,
                            "end": 929
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "charCodeAt",
                            "start": 930,
                            "end": 940
                          },
                          "optional": false,
                          "computed": false,
                          "start": 923,
                          "end": 940
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0",
                            "start": 941,
                            "end": 942
                          }
                        ],
                        "optional": false,
                        "start": 923,
                        "end": 943
                      },
                      "start": 916,
                      "end": 943
                    }
                  ],
                  "start": 912,
                  "end": 944
                },
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "str",
                        "start": 953,
                        "end": 956
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 959,
                            "end": 965
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "fromCharCode",
                            "start": 966,
                            "end": 978
                          },
                          "optional": false,
                          "computed": false,
                          "start": 959,
                          "end": 978
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "Identifier",
                              "name": "char",
                              "start": 979,
                              "end": 983
                            },
                            "operator": "%",
                            "right": {
                              "type": "Literal",
                              "value": 32,
                              "raw": "32",
                              "start": 986,
                              "end": 988
                            },
                            "start": 979,
                            "end": 988
                          }
                        ],
                        "optional": false,
                        "start": 959,
                        "end": 989
                      },
                      "start": 953,
                      "end": 989
                    }
                  ],
                  "start": 949,
                  "end": 990
                },
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 999,
                        "end": 1002
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "re",
                            "start": 1005,
                            "end": 1007
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "exec",
                            "start": 1008,
                            "end": 1012
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1005,
                          "end": 1012
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "str",
                            "start": 1013,
                            "end": 1016
                          }
                        ],
                        "optional": false,
                        "start": 1005,
                        "end": 1017
                      },
                      "start": 999,
                      "end": 1017
                    }
                  ],
                  "start": 995,
                  "end": 1018
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "left": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "str",
                        "start": 1027,
                        "end": 1030
                      },
                      "operator": "!==",
                      "right": {
                        "type": "Identifier",
                        "name": "letter",
                        "start": 1035,
                        "end": 1041
                      },
                      "start": 1027,
                      "end": 1041
                    },
                    "operator": "&&",
                    "right": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1045,
                        "end": 1048
                      },
                      "operator": "!==",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 1053,
                        "end": 1057
                      },
                      "start": 1045,
                      "end": 1057
                    },
                    "start": 1027,
                    "end": 1057
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Test262Error",
                            "start": 1077,
                            "end": 1089
                          },
                          "arguments": [
                            {
                              "type": "TemplateLiteral",
                              "quasis": [
                                {
                                  "type": "TemplateElement",
                                  "value": {
                                    "raw": "Character ",
                                    "cooked": "Character "
                                  },
                                  "tail": false,
                                  "start": 1091,
                                  "end": 1101
                                },
                                {
                                  "type": "TemplateElement",
                                  "value": {
                                    "raw": " unreasonably wrapped around as a control character",
                                    "cooked": " unreasonably wrapped around as a control character"
                                  },
                                  "tail": true,
                                  "start": 1110,
                                  "end": 1161
                                }
                              ],
                              "expressions": [
                                {
                                  "type": "Identifier",
                                  "name": "letter",
                                  "start": 1103,
                                  "end": 1109
                                }
                              ],
                              "start": 1090,
                              "end": 1162
                            }
                          ],
                          "start": 1073,
                          "end": 1163
                        },
                        "start": 1067,
                        "end": 1164
                      }
                    ],
                    "start": 1059,
                    "end": 1170
                  },
                  "alternate": null,
                  "start": 1023,
                  "end": 1170
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "arr",
                      "start": 1176,
                      "end": 1179
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "re",
                          "start": 1182,
                          "end": 1184
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "exec",
                          "start": 1185,
                          "end": 1189
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1182,
                        "end": 1189
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "letter",
                          "start": 1190,
                          "end": 1196
                        }
                      ],
                      "optional": false,
                      "start": 1182,
                      "end": 1197
                    },
                    "start": 1176,
                    "end": 1197
                  },
                  "start": 1176,
                  "end": 1198
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "arr",
                      "start": 1207,
                      "end": 1210
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "start": 1215,
                      "end": 1219
                    },
                    "start": 1207,
                    "end": 1219
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Test262Error",
                            "start": 1239,
                            "end": 1251
                          },
                          "arguments": [
                            {
                              "type": "TemplateLiteral",
                              "quasis": [
                                {
                                  "type": "TemplateElement",
                                  "value": {
                                    "raw": "Character ",
                                    "cooked": "Character "
                                  },
                                  "tail": false,
                                  "start": 1253,
                                  "end": 1263
                                },
                                {
                                  "type": "TemplateElement",
                                  "value": {
                                    "raw": " missing from character class ",
                                    "cooked": " missing from character class "
                                  },
                                  "tail": false,
                                  "start": 1272,
                                  "end": 1302
                                },
                                {
                                  "type": "TemplateElement",
                                  "value": {
                                    "raw": "",
                                    "cooked": ""
                                  },
                                  "tail": true,
                                  "start": 1311,
                                  "end": 1311
                                }
                              ],
                              "expressions": [
                                {
                                  "type": "Identifier",
                                  "name": "letter",
                                  "start": 1265,
                                  "end": 1271
                                },
                                {
                                  "type": "Identifier",
                                  "name": "source",
                                  "start": 1304,
                                  "end": 1310
                                }
                              ],
                              "start": 1252,
                              "end": 1312
                            }
                          ],
                          "start": 1235,
                          "end": 1313
                        },
                        "start": 1229,
                        "end": 1314
                      }
                    ],
                    "start": 1221,
                    "end": 1320
                  },
                  "alternate": null,
                  "start": 1203,
                  "end": 1320
                }
              ],
              "start": 906,
              "end": 1324
            },
            "alternate": null,
            "start": 883,
            "end": 1324
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "arr",
                "start": 1327,
                "end": 1330
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "re",
                    "start": 1333,
                    "end": 1335
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "exec",
                    "start": 1336,
                    "end": 1340
                  },
                  "optional": false,
                  "computed": false,
                  "start": 1333,
                  "end": 1340
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "\\",
                    "raw": "\"\\\\\"",
                    "start": 1341,
                    "end": 1345
                  }
                ],
                "optional": false,
                "start": 1333,
                "end": 1346
              },
              "start": 1327,
              "end": 1346
            },
            "start": 1327,
            "end": 1346
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "arr",
                "start": 1353,
                "end": 1356
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 1361,
                "end": 1365
              },
              "start": 1353,
              "end": 1365
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 1383,
                      "end": 1395
                    },
                    "arguments": [
                      {
                        "type": "TemplateLiteral",
                        "quasis": [
                          {
                            "type": "TemplateElement",
                            "value": {
                              "raw": "Character \\\\ missing from character class ",
                              "cooked": "Character \\ missing from character class "
                            },
                            "tail": false,
                            "start": 1397,
                            "end": 1439
                          },
                          {
                            "type": "TemplateElement",
                            "value": {
                              "raw": "",
                              "cooked": ""
                            },
                            "tail": true,
                            "start": 1448,
                            "end": 1448
                          }
                        ],
                        "expressions": [
                          {
                            "type": "Identifier",
                            "name": "source",
                            "start": 1441,
                            "end": 1447
                          }
                        ],
                        "start": 1396,
                        "end": 1449
                      }
                    ],
                    "start": 1379,
                    "end": 1450
                  },
                  "start": 1373,
                  "end": 1451
                }
              ],
              "start": 1367,
              "end": 1455
            },
            "alternate": null,
            "start": 1349,
            "end": 1455
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "arr",
                "start": 1458,
                "end": 1461
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "re",
                    "start": 1464,
                    "end": 1466
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "exec",
                    "start": 1467,
                    "end": 1471
                  },
                  "optional": false,
                  "computed": false,
                  "start": 1464,
                  "end": 1471
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "c",
                    "raw": "\"c\"",
                    "start": 1472,
                    "end": 1475
                  }
                ],
                "optional": false,
                "start": 1464,
                "end": 1476
              },
              "start": 1458,
              "end": 1476
            },
            "start": 1458,
            "end": 1476
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "arr",
                "start": 1483,
                "end": 1486
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 1491,
                "end": 1495
              },
              "start": 1483,
              "end": 1495
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 1513,
                      "end": 1525
                    },
                    "arguments": [
                      {
                        "type": "TemplateLiteral",
                        "quasis": [
                          {
                            "type": "TemplateElement",
                            "value": {
                              "raw": "Character c missing from character class ",
                              "cooked": "Character c missing from character class "
                            },
                            "tail": false,
                            "start": 1527,
                            "end": 1568
                          },
                          {
                            "type": "TemplateElement",
                            "value": {
                              "raw": "",
                              "cooked": ""
                            },
                            "tail": true,
                            "start": 1577,
                            "end": 1577
                          }
                        ],
                        "expressions": [
                          {
                            "type": "Identifier",
                            "name": "source",
                            "start": 1570,
                            "end": 1576
                          }
                        ],
                        "start": 1526,
                        "end": 1578
                      }
                    ],
                    "start": 1509,
                    "end": 1579
                  },
                  "start": 1503,
                  "end": 1580
                }
              ],
              "start": 1497,
              "end": 1584
            },
            "alternate": null,
            "start": 1479,
            "end": 1584
          }
        ],
        "start": 809,
        "end": 1586
      },
      "start": 771,
      "end": 1586
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1588
}