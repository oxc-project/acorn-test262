{
  "type": "Program",
  "start": 0,
  "end": 1118,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1063,
      "end": 1117,
      "expression": {
        "type": "CallExpression",
        "start": 1063,
        "end": 1116,
        "callee": {
          "type": "MemberExpression",
          "start": 1063,
          "end": 1076,
          "object": {
            "type": "Identifier",
            "start": 1063,
            "end": 1069,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1070,
            "end": 1076,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1077,
            "end": 1088,
            "name": "SyntaxError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 1090,
            "end": 1115,
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 1096,
              "end": 1115,
              "callee": {
                "type": "Identifier",
                "start": 1096,
                "end": 1104,
                "name": "Function"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1105,
                  "end": 1110,
                  "value": "-->",
                  "raw": "\"-->\""
                },
                {
                  "type": "Literal",
                  "start": 1112,
                  "end": 1114,
                  "value": "",
                  "raw": "\"\""
                }
              ],
              "optional": false
            },
            "id": null,
            "generator": false
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}