{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "f",
            "start": 1147,
            "end": 1148
          },
          "init": {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1151,
            "end": 1154
          },
          "start": 1147,
          "end": 1154
        }
      ],
      "start": 1143,
      "end": 1155
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1156,
            "end": 1162
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1163,
            "end": 1172
          },
          "optional": false,
          "computed": false,
          "start": 1156,
          "end": 1172
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "f",
            "start": 1173,
            "end": 1174
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1176,
            "end": 1179
          },
          {
            "type": "Literal",
            "value": "binding is not initialized to `undefined`",
            "raw": "'binding is not initialized to `undefined`'",
            "start": 1181,
            "end": 1224
          }
        ],
        "optional": false,
        "start": 1156,
        "end": 1225
      },
      "start": 1156,
      "end": 1226
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "Literal",
        "value": true,
        "raw": "true",
        "start": 1232,
        "end": 1236
      },
      "consequent": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "f",
          "start": 1247,
          "end": 1248
        },
        "generator": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [],
          "start": 1251,
          "end": 1255
        },
        "expression": false,
        "start": 1238,
        "end": 1255
      },
      "alternate": null,
      "start": 1228,
      "end": 1255
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1257,
            "end": 1263
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1264,
            "end": 1273
          },
          "optional": false,
          "computed": false,
          "start": 1257,
          "end": 1273
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "f",
            "start": 1274,
            "end": 1275
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1277,
            "end": 1280
          },
          {
            "type": "Literal",
            "value": "value is not updated following evaluation",
            "raw": "'value is not updated following evaluation'",
            "start": 1282,
            "end": 1325
          }
        ],
        "optional": false,
        "start": 1257,
        "end": 1326
      },
      "start": 1257,
      "end": 1327
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1328
}