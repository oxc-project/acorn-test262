{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "f",
            "start": 1175,
            "end": 1176
          },
          "init": {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1179,
            "end": 1182
          },
          "start": 1175,
          "end": 1182
        }
      ],
      "start": 1171,
      "end": 1183
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1184,
            "end": 1190
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1191,
            "end": 1200
          },
          "optional": false,
          "computed": false,
          "start": 1184,
          "end": 1200
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "f",
            "start": 1201,
            "end": 1202
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1204,
            "end": 1207
          },
          {
            "type": "Literal",
            "value": "binding is not initialized to `undefined`",
            "raw": "'binding is not initialized to `undefined`'",
            "start": 1209,
            "end": 1252
          }
        ],
        "optional": false,
        "start": 1184,
        "end": 1253
      },
      "start": 1184,
      "end": 1254
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "Literal",
        "value": false,
        "raw": "false",
        "start": 1260,
        "end": 1265
      },
      "consequent": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "_f",
          "start": 1276,
          "end": 1278
        },
        "generator": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [],
          "start": 1281,
          "end": 1283
        },
        "expression": false,
        "start": 1267,
        "end": 1283
      },
      "alternate": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "f",
          "start": 1298,
          "end": 1299
        },
        "generator": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [],
          "start": 1302,
          "end": 1306
        },
        "expression": false,
        "start": 1289,
        "end": 1306
      },
      "start": 1256,
      "end": 1306
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1308,
            "end": 1314
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1315,
            "end": 1324
          },
          "optional": false,
          "computed": false,
          "start": 1308,
          "end": 1324
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "f",
            "start": 1325,
            "end": 1326
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1328,
            "end": 1331
          },
          {
            "type": "Literal",
            "value": "value is not updated following evaluation",
            "raw": "'value is not updated following evaluation'",
            "start": 1333,
            "end": 1376
          }
        ],
        "optional": false,
        "start": 1308,
        "end": 1377
      },
      "start": 1308,
      "end": 1378
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1379
}