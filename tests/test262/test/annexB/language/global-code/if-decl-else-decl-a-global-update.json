{
  "type": "Program",
  "start": 0,
  "end": 1697,
  "body": [
    {
      "type": "IfStatement",
      "start": 1547,
      "end": 1617,
      "test": {
        "type": "Literal",
        "start": 1551,
        "end": 1555,
        "value": true,
        "raw": "true"
      },
      "consequent": {
        "type": "FunctionDeclaration",
        "start": 1557,
        "end": 1595,
        "id": {
          "type": "Identifier",
          "start": 1566,
          "end": 1567,
          "name": "f"
        },
        "generator": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "start": 1570,
          "end": 1595,
          "body": [
            {
              "type": "ReturnStatement",
              "start": 1572,
              "end": 1593,
              "argument": {
                "type": "Literal",
                "start": 1579,
                "end": 1592,
                "value": "declaration",
                "raw": "'declaration'"
              }
            }
          ]
        },
        "expression": false
      },
      "alternate": {
        "type": "FunctionDeclaration",
        "start": 1601,
        "end": 1617,
        "id": {
          "type": "Identifier",
          "start": 1610,
          "end": 1612,
          "name": "_f"
        },
        "generator": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "start": 1615,
          "end": 1617,
          "body": []
        },
        "expression": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1619,
      "end": 1658,
      "expression": {
        "type": "CallExpression",
        "start": 1619,
        "end": 1657,
        "callee": {
          "type": "MemberExpression",
          "start": 1619,
          "end": 1635,
          "object": {
            "type": "Identifier",
            "start": 1619,
            "end": 1625,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1626,
            "end": 1635,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1636,
            "end": 1644,
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "start": 1643,
              "end": 1644,
              "name": "f"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 1646,
            "end": 1656,
            "value": "function",
            "raw": "'function'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1659,
      "end": 1696,
      "expression": {
        "type": "CallExpression",
        "start": 1659,
        "end": 1695,
        "callee": {
          "type": "MemberExpression",
          "start": 1659,
          "end": 1675,
          "object": {
            "type": "Identifier",
            "start": 1659,
            "end": 1665,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1666,
            "end": 1675,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1676,
            "end": 1679,
            "callee": {
              "type": "Identifier",
              "start": 1676,
              "end": 1677,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1681,
            "end": 1694,
            "value": "declaration",
            "raw": "'declaration'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}