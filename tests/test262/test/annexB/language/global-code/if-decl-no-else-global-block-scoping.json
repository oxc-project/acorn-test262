{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "initialBV",
            "start": 1524,
            "end": 1533
          },
          "init": null,
          "start": 1524,
          "end": 1533
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1535,
            "end": 1544
          },
          "init": null,
          "start": 1535,
          "end": 1544
        }
      ],
      "start": 1520,
      "end": 1545
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "Literal",
        "value": true,
        "raw": "true",
        "start": 1551,
        "end": 1555
      },
      "consequent": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "f",
          "start": 1566,
          "end": 1567
        },
        "generator": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "initialBV",
                  "start": 1572,
                  "end": 1581
                },
                "right": {
                  "type": "Identifier",
                  "name": "f",
                  "start": 1584,
                  "end": 1585
                },
                "start": 1572,
                "end": 1585
              },
              "start": 1572,
              "end": 1586
            },
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "f",
                  "start": 1587,
                  "end": 1588
                },
                "right": {
                  "type": "Literal",
                  "value": 123,
                  "raw": "123",
                  "start": 1591,
                  "end": 1594
                },
                "start": 1587,
                "end": 1594
              },
              "start": 1587,
              "end": 1595
            },
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "currentBV",
                  "start": 1596,
                  "end": 1605
                },
                "right": {
                  "type": "Identifier",
                  "name": "f",
                  "start": 1608,
                  "end": 1609
                },
                "start": 1596,
                "end": 1609
              },
              "start": 1596,
              "end": 1610
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Literal",
                "value": "decl",
                "raw": "'decl'",
                "start": 1618,
                "end": 1624
              },
              "start": 1611,
              "end": 1625
            }
          ],
          "start": 1570,
          "end": 1627
        },
        "expression": false,
        "start": 1557,
        "end": 1627
      },
      "alternate": null,
      "start": 1547,
      "end": 1627
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "f",
          "start": 1629,
          "end": 1630
        },
        "arguments": [],
        "optional": false,
        "start": 1629,
        "end": 1632
      },
      "start": 1629,
      "end": 1633
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1635,
            "end": 1641
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1642,
            "end": 1651
          },
          "optional": false,
          "computed": false,
          "start": 1635,
          "end": 1651
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "initialBV",
              "start": 1655,
              "end": 1664
            },
            "arguments": [],
            "optional": false,
            "start": 1655,
            "end": 1666
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1670,
            "end": 1676
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "start": 1680,
            "end": 1745
          }
        ],
        "optional": false,
        "start": 1635,
        "end": 1747
      },
      "start": 1635,
      "end": 1748
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1749,
            "end": 1755
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1756,
            "end": 1765
          },
          "optional": false,
          "computed": false,
          "start": 1749,
          "end": 1765
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1766,
            "end": 1775
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1777,
            "end": 1780
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "start": 1782,
            "end": 1815
          }
        ],
        "optional": false,
        "start": 1749,
        "end": 1816
      },
      "start": 1749,
      "end": 1817
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1818,
            "end": 1824
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1825,
            "end": 1834
          },
          "optional": false,
          "computed": false,
          "start": 1818,
          "end": 1834
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f",
              "start": 1838,
              "end": 1839
            },
            "arguments": [],
            "optional": false,
            "start": 1838,
            "end": 1841
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1845,
            "end": 1851
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "start": 1855,
            "end": 1920
          }
        ],
        "optional": false,
        "start": 1818,
        "end": 1922
      },
      "start": 1818,
      "end": 1923
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1924
}