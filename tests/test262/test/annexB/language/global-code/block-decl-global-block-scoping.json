{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "initialBV",
            "start": 1058,
            "end": 1067
          },
          "init": null,
          "start": 1058,
          "end": 1067
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1069,
            "end": 1078
          },
          "init": null,
          "start": 1069,
          "end": 1078
        }
      ],
      "start": 1054,
      "end": 1079
    },
    {
      "type": "BlockStatement",
      "body": [
        {
          "type": "FunctionDeclaration",
          "id": {
            "type": "Identifier",
            "name": "f",
            "start": 1094,
            "end": 1095
          },
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "initialBV",
                    "start": 1100,
                    "end": 1109
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "f",
                    "start": 1112,
                    "end": 1113
                  },
                  "start": 1100,
                  "end": 1113
                },
                "start": 1100,
                "end": 1114
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "f",
                    "start": 1115,
                    "end": 1116
                  },
                  "right": {
                    "type": "Literal",
                    "value": 123,
                    "raw": "123",
                    "start": 1119,
                    "end": 1122
                  },
                  "start": 1115,
                  "end": 1122
                },
                "start": 1115,
                "end": 1123
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "currentBV",
                    "start": 1124,
                    "end": 1133
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "f",
                    "start": 1136,
                    "end": 1137
                  },
                  "start": 1124,
                  "end": 1137
                },
                "start": 1124,
                "end": 1138
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Literal",
                  "value": "decl",
                  "raw": "'decl'",
                  "start": 1146,
                  "end": 1152
                },
                "start": 1139,
                "end": 1153
              }
            ],
            "start": 1098,
            "end": 1155
          },
          "expression": false,
          "start": 1085,
          "end": 1155
        }
      ],
      "start": 1081,
      "end": 1157
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "f",
          "start": 1159,
          "end": 1160
        },
        "arguments": [],
        "optional": false,
        "start": 1159,
        "end": 1162
      },
      "start": 1159,
      "end": 1163
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1165,
            "end": 1171
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1172,
            "end": 1181
          },
          "optional": false,
          "computed": false,
          "start": 1165,
          "end": 1181
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "initialBV",
              "start": 1185,
              "end": 1194
            },
            "arguments": [],
            "optional": false,
            "start": 1185,
            "end": 1196
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1200,
            "end": 1206
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "start": 1210,
            "end": 1275
          }
        ],
        "optional": false,
        "start": 1165,
        "end": 1277
      },
      "start": 1165,
      "end": 1278
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1279,
            "end": 1285
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1286,
            "end": 1295
          },
          "optional": false,
          "computed": false,
          "start": 1279,
          "end": 1295
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1296,
            "end": 1305
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1307,
            "end": 1310
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "start": 1312,
            "end": 1345
          }
        ],
        "optional": false,
        "start": 1279,
        "end": 1346
      },
      "start": 1279,
      "end": 1347
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1348,
            "end": 1354
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1355,
            "end": 1364
          },
          "optional": false,
          "computed": false,
          "start": 1348,
          "end": 1364
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f",
              "start": 1368,
              "end": 1369
            },
            "arguments": [],
            "optional": false,
            "start": 1368,
            "end": 1371
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1375,
            "end": 1381
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "start": 1385,
            "end": 1450
          }
        ],
        "optional": false,
        "start": 1348,
        "end": 1452
      },
      "start": 1348,
      "end": 1453
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1454
}