{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "init",
            "start": 1199,
            "end": 1203
          },
          "init": null,
          "start": 1199,
          "end": 1203
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "after",
            "start": 1205,
            "end": 1210
          },
          "init": null,
          "start": 1205,
          "end": 1210
        }
      ],
      "start": 1195,
      "end": 1211
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "let",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "f",
                        "start": 1233,
                        "end": 1234
                      },
                      "init": {
                        "type": "Literal",
                        "value": 123,
                        "raw": "123",
                        "start": 1237,
                        "end": 1240
                      },
                      "start": 1233,
                      "end": 1240
                    }
                  ],
                  "start": 1229,
                  "end": 1241
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "init",
                      "start": 1244,
                      "end": 1248
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 1251,
                      "end": 1252
                    },
                    "start": 1244,
                    "end": 1252
                  },
                  "start": 1244,
                  "end": 1253
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 1261,
                    "end": 1265
                  },
                  "consequent": {
                    "type": "FunctionDeclaration",
                    "id": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 1276,
                      "end": 1277
                    },
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [],
                      "start": 1280,
                      "end": 1284
                    },
                    "expression": false,
                    "start": 1267,
                    "end": 1284
                  },
                  "alternate": null,
                  "start": 1257,
                  "end": 1284
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "after",
                      "start": 1288,
                      "end": 1293
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 1296,
                      "end": 1297
                    },
                    "start": 1288,
                    "end": 1297
                  },
                  "start": 1288,
                  "end": 1298
                }
              ],
              "start": 1225,
              "end": 1300
            },
            "expression": false,
            "start": 1214,
            "end": 1300
          },
          "arguments": [],
          "optional": false,
          "start": 1214,
          "end": 1302
        },
        "start": 1213,
        "end": 1303
      },
      "start": 1213,
      "end": 1304
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1306,
            "end": 1312
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1313,
            "end": 1322
          },
          "optional": false,
          "computed": false,
          "start": 1306,
          "end": 1322
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "init",
            "start": 1323,
            "end": 1327
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1329,
            "end": 1332
          },
          {
            "type": "Literal",
            "value": "binding is not initialized to `undefined`",
            "raw": "'binding is not initialized to `undefined`'",
            "start": 1334,
            "end": 1377
          }
        ],
        "optional": false,
        "start": 1306,
        "end": 1378
      },
      "start": 1306,
      "end": 1379
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1380,
            "end": 1386
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1387,
            "end": 1396
          },
          "optional": false,
          "computed": false,
          "start": 1380,
          "end": 1396
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "after",
            "start": 1397,
            "end": 1402
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1404,
            "end": 1407
          },
          {
            "type": "Literal",
            "value": "value is not updated following evaluation",
            "raw": "'value is not updated following evaluation'",
            "start": 1409,
            "end": 1452
          }
        ],
        "optional": false,
        "start": 1380,
        "end": 1453
      },
      "start": 1380,
      "end": 1454
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1455
}