{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "after",
            "start": 1555,
            "end": 1560
          },
          "init": null,
          "start": 1555,
          "end": 1560
        }
      ],
      "start": 1551,
      "end": 1561
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "Literal",
                    "value": false,
                    "raw": "false",
                    "start": 1587,
                    "end": 1592
                  },
                  "consequent": {
                    "type": "EmptyStatement",
                    "start": 1594,
                    "end": 1595
                  },
                  "alternate": {
                    "type": "FunctionDeclaration",
                    "id": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 1610,
                      "end": 1611
                    },
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": "inner declaration",
                            "raw": "'inner declaration'",
                            "start": 1623,
                            "end": 1642
                          },
                          "start": 1616,
                          "end": 1643
                        }
                      ],
                      "start": 1614,
                      "end": 1645
                    },
                    "expression": false,
                    "start": 1601,
                    "end": 1645
                  },
                  "start": 1583,
                  "end": 1645
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "after",
                      "start": 1649,
                      "end": 1654
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 1657,
                      "end": 1658
                    },
                    "start": 1649,
                    "end": 1658
                  },
                  "start": 1649,
                  "end": 1659
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "f",
                    "start": 1672,
                    "end": 1673
                  },
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "outer declaration",
                          "raw": "'outer declaration'",
                          "start": 1689,
                          "end": 1708
                        },
                        "start": 1682,
                        "end": 1709
                      }
                    ],
                    "start": 1676,
                    "end": 1713
                  },
                  "expression": false,
                  "start": 1663,
                  "end": 1713
                }
              ],
              "start": 1575,
              "end": 1715
            },
            "expression": false,
            "start": 1564,
            "end": 1715
          },
          "arguments": [],
          "optional": false,
          "start": 1564,
          "end": 1717
        },
        "start": 1563,
        "end": 1718
      },
      "start": 1563,
      "end": 1719
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1721,
            "end": 1727
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1728,
            "end": 1737
          },
          "optional": false,
          "computed": false,
          "start": 1721,
          "end": 1737
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "after",
              "start": 1745,
              "end": 1750
            },
            "prefix": true,
            "start": 1738,
            "end": 1750
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 1752,
            "end": 1762
          }
        ],
        "optional": false,
        "start": 1721,
        "end": 1763
      },
      "start": 1721,
      "end": 1764
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1765,
            "end": 1771
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1772,
            "end": 1781
          },
          "optional": false,
          "computed": false,
          "start": 1765,
          "end": 1781
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "after",
              "start": 1782,
              "end": 1787
            },
            "arguments": [],
            "optional": false,
            "start": 1782,
            "end": 1789
          },
          {
            "type": "Literal",
            "value": "inner declaration",
            "raw": "'inner declaration'",
            "start": 1791,
            "end": 1810
          }
        ],
        "optional": false,
        "start": 1765,
        "end": 1811
      },
      "start": 1765,
      "end": 1812
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1813
}