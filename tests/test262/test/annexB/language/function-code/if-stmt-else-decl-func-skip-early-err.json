{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "init",
            "start": 1230,
            "end": 1234
          },
          "init": null,
          "start": 1230,
          "end": 1234
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "after",
            "start": 1236,
            "end": 1241
          },
          "init": null,
          "start": 1236,
          "end": 1241
        }
      ],
      "start": 1226,
      "end": 1242
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "let",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "f",
                        "start": 1264,
                        "end": 1265
                      },
                      "init": {
                        "type": "Literal",
                        "value": 123,
                        "raw": "123",
                        "start": 1268,
                        "end": 1271
                      },
                      "start": 1264,
                      "end": 1271
                    }
                  ],
                  "start": 1260,
                  "end": 1272
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "init",
                      "start": 1275,
                      "end": 1279
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 1282,
                      "end": 1283
                    },
                    "start": 1275,
                    "end": 1283
                  },
                  "start": 1275,
                  "end": 1284
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "Literal",
                    "value": false,
                    "raw": "false",
                    "start": 1292,
                    "end": 1297
                  },
                  "consequent": {
                    "type": "EmptyStatement",
                    "start": 1299,
                    "end": 1300
                  },
                  "alternate": {
                    "type": "FunctionDeclaration",
                    "id": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 1315,
                      "end": 1316
                    },
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [],
                      "start": 1319,
                      "end": 1323
                    },
                    "expression": false,
                    "start": 1306,
                    "end": 1323
                  },
                  "start": 1288,
                  "end": 1323
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "after",
                      "start": 1327,
                      "end": 1332
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 1335,
                      "end": 1336
                    },
                    "start": 1327,
                    "end": 1336
                  },
                  "start": 1327,
                  "end": 1337
                }
              ],
              "start": 1256,
              "end": 1339
            },
            "expression": false,
            "start": 1245,
            "end": 1339
          },
          "arguments": [],
          "optional": false,
          "start": 1245,
          "end": 1341
        },
        "start": 1244,
        "end": 1342
      },
      "start": 1244,
      "end": 1343
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1345,
            "end": 1351
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1352,
            "end": 1361
          },
          "optional": false,
          "computed": false,
          "start": 1345,
          "end": 1361
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "init",
            "start": 1362,
            "end": 1366
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1368,
            "end": 1371
          },
          {
            "type": "Literal",
            "value": "binding is not initialized to `undefined`",
            "raw": "'binding is not initialized to `undefined`'",
            "start": 1373,
            "end": 1416
          }
        ],
        "optional": false,
        "start": 1345,
        "end": 1417
      },
      "start": 1345,
      "end": 1418
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1419,
            "end": 1425
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1426,
            "end": 1435
          },
          "optional": false,
          "computed": false,
          "start": 1419,
          "end": 1435
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "after",
            "start": 1436,
            "end": 1441
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1443,
            "end": 1446
          },
          {
            "type": "Literal",
            "value": "value is not updated following evaluation",
            "raw": "'value is not updated following evaluation'",
            "start": 1448,
            "end": 1491
          }
        ],
        "optional": false,
        "start": 1419,
        "end": 1492
      },
      "start": 1419,
      "end": 1493
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1494
}