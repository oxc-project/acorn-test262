{
  "type": "Program",
  "start": 0,
  "end": 1570,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1073,
      "end": 1110,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1077,
          "end": 1086,
          "id": {
            "type": "Identifier",
            "start": 1077,
            "end": 1086,
            "name": "initialBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1088,
          "end": 1097,
          "id": {
            "type": "Identifier",
            "start": 1088,
            "end": 1097,
            "name": "currentBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1099,
          "end": 1109,
          "id": {
            "type": "Identifier",
            "start": 1099,
            "end": 1109,
            "name": "varBinding"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1112,
      "end": 1269,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 1112,
        "end": 1268,
        "expression": {
          "type": "CallExpression",
          "start": 1113,
          "end": 1267,
          "callee": {
            "type": "FunctionExpression",
            "start": 1113,
            "end": 1265,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1124,
              "end": 1265,
              "body": [
                {
                  "type": "SwitchStatement",
                  "start": 1132,
                  "end": 1237,
                  "discriminant": {
                    "type": "Literal",
                    "start": 1140,
                    "end": 1141,
                    "value": 1,
                    "raw": "1"
                  },
                  "cases": [
                    {
                      "type": "SwitchCase",
                      "start": 1149,
                      "end": 1233,
                      "test": {
                        "type": "Literal",
                        "start": 1154,
                        "end": 1155,
                        "value": 1,
                        "raw": "1"
                      },
                      "consequent": [
                        {
                          "type": "FunctionDeclaration",
                          "start": 1163,
                          "end": 1233,
                          "id": {
                            "type": "Identifier",
                            "start": 1172,
                            "end": 1173,
                            "name": "f"
                          },
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "start": 1176,
                            "end": 1233,
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "start": 1178,
                                "end": 1192,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 1178,
                                  "end": 1191,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 1178,
                                    "end": 1187,
                                    "name": "initialBV"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "start": 1190,
                                    "end": 1191,
                                    "name": "f"
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "start": 1193,
                                "end": 1201,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 1193,
                                  "end": 1200,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 1193,
                                    "end": 1194,
                                    "name": "f"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "start": 1197,
                                    "end": 1200,
                                    "value": 123,
                                    "raw": "123"
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "start": 1202,
                                "end": 1216,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 1202,
                                  "end": 1215,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 1202,
                                    "end": 1211,
                                    "name": "currentBV"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "start": 1214,
                                    "end": 1215,
                                    "name": "f"
                                  }
                                }
                              },
                              {
                                "type": "ReturnStatement",
                                "start": 1217,
                                "end": 1231,
                                "argument": {
                                  "type": "Literal",
                                  "start": 1224,
                                  "end": 1230,
                                  "value": "decl",
                                  "raw": "'decl'"
                                }
                              }
                            ]
                          },
                          "expression": false
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1241,
                  "end": 1256,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1241,
                    "end": 1255,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1241,
                      "end": 1251,
                      "name": "varBinding"
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 1254,
                      "end": 1255,
                      "name": "f"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1259,
                  "end": 1263,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1259,
                    "end": 1262,
                    "callee": {
                      "type": "Identifier",
                      "start": 1259,
                      "end": 1260,
                      "name": "f"
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1272,
      "end": 1385,
      "expression": {
        "type": "CallExpression",
        "start": 1272,
        "end": 1384,
        "callee": {
          "type": "MemberExpression",
          "start": 1272,
          "end": 1288,
          "object": {
            "type": "Identifier",
            "start": 1272,
            "end": 1278,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1279,
            "end": 1288,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1292,
            "end": 1303,
            "callee": {
              "type": "Identifier",
              "start": 1292,
              "end": 1301,
              "name": "initialBV"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1307,
            "end": 1313,
            "value": "decl",
            "raw": "'decl'"
          },
          {
            "type": "Literal",
            "start": 1317,
            "end": 1382,
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1386,
      "end": 1454,
      "expression": {
        "type": "CallExpression",
        "start": 1386,
        "end": 1453,
        "callee": {
          "type": "MemberExpression",
          "start": 1386,
          "end": 1402,
          "object": {
            "type": "Identifier",
            "start": 1386,
            "end": 1392,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1393,
            "end": 1402,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1403,
            "end": 1412,
            "name": "currentBV"
          },
          {
            "type": "Literal",
            "start": 1414,
            "end": 1417,
            "value": 123,
            "raw": "123"
          },
          {
            "type": "Literal",
            "start": 1419,
            "end": 1452,
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1455,
      "end": 1569,
      "expression": {
        "type": "CallExpression",
        "start": 1455,
        "end": 1568,
        "callee": {
          "type": "MemberExpression",
          "start": 1455,
          "end": 1471,
          "object": {
            "type": "Identifier",
            "start": 1455,
            "end": 1461,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1462,
            "end": 1471,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1475,
            "end": 1487,
            "callee": {
              "type": "Identifier",
              "start": 1475,
              "end": 1485,
              "name": "varBinding"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1491,
            "end": 1497,
            "value": "decl",
            "raw": "'decl'"
          },
          {
            "type": "Literal",
            "start": 1501,
            "end": 1566,
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}