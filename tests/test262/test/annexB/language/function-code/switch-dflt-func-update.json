{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "after",
            "start": 1071,
            "end": 1076
          },
          "init": null,
          "start": 1071,
          "end": 1076
        }
      ],
      "start": 1067,
      "end": 1077
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "SwitchStatement",
                  "discriminant": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1107,
                    "end": 1108
                  },
                  "cases": [
                    {
                      "type": "SwitchCase",
                      "test": null,
                      "consequent": [
                        {
                          "type": "FunctionDeclaration",
                          "id": {
                            "type": "Identifier",
                            "name": "f",
                            "start": 1140,
                            "end": 1141
                          },
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "Literal",
                                  "value": "declaration",
                                  "raw": "'declaration'",
                                  "start": 1153,
                                  "end": 1166
                                },
                                "start": 1146,
                                "end": 1167
                              }
                            ],
                            "start": 1144,
                            "end": 1169
                          },
                          "expression": false,
                          "start": 1131,
                          "end": 1169
                        }
                      ],
                      "start": 1116,
                      "end": 1169
                    }
                  ],
                  "start": 1099,
                  "end": 1173
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "after",
                      "start": 1177,
                      "end": 1182
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 1185,
                      "end": 1186
                    },
                    "start": 1177,
                    "end": 1186
                  },
                  "start": 1177,
                  "end": 1187
                }
              ],
              "start": 1091,
              "end": 1189
            },
            "expression": false,
            "start": 1080,
            "end": 1189
          },
          "arguments": [],
          "optional": false,
          "start": 1080,
          "end": 1191
        },
        "start": 1079,
        "end": 1192
      },
      "start": 1079,
      "end": 1193
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1195,
            "end": 1201
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1202,
            "end": 1211
          },
          "optional": false,
          "computed": false,
          "start": 1195,
          "end": 1211
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "after",
              "start": 1219,
              "end": 1224
            },
            "prefix": true,
            "start": 1212,
            "end": 1224
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 1226,
            "end": 1236
          }
        ],
        "optional": false,
        "start": 1195,
        "end": 1237
      },
      "start": 1195,
      "end": 1238
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1239,
            "end": 1245
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1246,
            "end": 1255
          },
          "optional": false,
          "computed": false,
          "start": 1239,
          "end": 1255
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "after",
              "start": 1256,
              "end": 1261
            },
            "arguments": [],
            "optional": false,
            "start": 1256,
            "end": 1263
          },
          {
            "type": "Literal",
            "value": "declaration",
            "raw": "'declaration'",
            "start": 1265,
            "end": 1278
          }
        ],
        "optional": false,
        "start": 1239,
        "end": 1279
      },
      "start": 1239,
      "end": 1280
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1281
}