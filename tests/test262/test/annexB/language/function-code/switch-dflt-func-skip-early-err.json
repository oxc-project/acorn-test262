{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "init",
            "start": 759,
            "end": 763
          },
          "init": null,
          "start": 759,
          "end": 763
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "after",
            "start": 765,
            "end": 770
          },
          "init": null,
          "start": 765,
          "end": 770
        }
      ],
      "start": 755,
      "end": 771
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "let",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "f",
                        "start": 793,
                        "end": 794
                      },
                      "init": {
                        "type": "Literal",
                        "value": 123,
                        "raw": "123",
                        "start": 797,
                        "end": 800
                      },
                      "start": 793,
                      "end": 800
                    }
                  ],
                  "start": 789,
                  "end": 801
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "init",
                      "start": 804,
                      "end": 808
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 811,
                      "end": 812
                    },
                    "start": 804,
                    "end": 812
                  },
                  "start": 804,
                  "end": 813
                },
                {
                  "type": "SwitchStatement",
                  "discriminant": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 825,
                    "end": 826
                  },
                  "cases": [
                    {
                      "type": "SwitchCase",
                      "test": null,
                      "consequent": [
                        {
                          "type": "FunctionDeclaration",
                          "id": {
                            "type": "Identifier",
                            "name": "f",
                            "start": 858,
                            "end": 859
                          },
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [],
                            "start": 862,
                            "end": 866
                          },
                          "expression": false,
                          "start": 849,
                          "end": 866
                        }
                      ],
                      "start": 834,
                      "end": 866
                    }
                  ],
                  "start": 817,
                  "end": 870
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "after",
                      "start": 874,
                      "end": 879
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 882,
                      "end": 883
                    },
                    "start": 874,
                    "end": 883
                  },
                  "start": 874,
                  "end": 884
                }
              ],
              "start": 785,
              "end": 886
            },
            "expression": false,
            "start": 774,
            "end": 886
          },
          "arguments": [],
          "optional": false,
          "start": 774,
          "end": 888
        },
        "start": 773,
        "end": 889
      },
      "start": 773,
      "end": 890
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 892,
            "end": 898
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 899,
            "end": 908
          },
          "optional": false,
          "computed": false,
          "start": 892,
          "end": 908
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "init",
            "start": 909,
            "end": 913
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 915,
            "end": 918
          },
          {
            "type": "Literal",
            "value": "binding is not initialized to `undefined`",
            "raw": "'binding is not initialized to `undefined`'",
            "start": 920,
            "end": 963
          }
        ],
        "optional": false,
        "start": 892,
        "end": 964
      },
      "start": 892,
      "end": 965
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 966,
            "end": 972
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 973,
            "end": 982
          },
          "optional": false,
          "computed": false,
          "start": 966,
          "end": 982
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "after",
            "start": 983,
            "end": 988
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 990,
            "end": 993
          },
          {
            "type": "Literal",
            "value": "value is not updated following evaluation",
            "raw": "'value is not updated following evaluation'",
            "start": 995,
            "end": 1038
          }
        ],
        "optional": false,
        "start": 966,
        "end": 1039
      },
      "start": 966,
      "end": 1040
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1041
}