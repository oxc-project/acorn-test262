{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "eval",
                      "start": 1163,
                      "end": 1167
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "Literal",
                              "value": "assert.sameValue(      f, undefined, \"Initialized binding created prior to evaluation\"    );        try {      throw null;    } catch (f) {switch (1) {",
                              "raw": "'assert.sameValue(\\\n      f, undefined, \"Initialized binding created prior to evaluation\"\\\n    );\\\n    \\\n    try {\\\n      throw null;\\\n    } catch (f) {switch (1) {'",
                              "start": 1173,
                              "end": 1338
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "value": "  default:",
                              "raw": "'  default:'",
                              "start": 1345,
                              "end": 1357
                            },
                            "start": 1173,
                            "end": 1357
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "value": "    function f() { return 123; }",
                            "raw": "'    function f() { return 123; }'",
                            "start": 1364,
                            "end": 1398
                          },
                          "start": 1173,
                          "end": 1398
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": "}    }        assert.sameValue(      typeof f,      \"function\",      \"binding value is updated following evaluation\"    );    assert.sameValue(f(), 123);",
                          "raw": "'}\\\n    }\\\n    \\\n    assert.sameValue(\\\n      typeof f,\\\n      \"function\",\\\n      \"binding value is updated following evaluation\"\\\n    );\\\n    assert.sameValue(f(), 123);'",
                          "start": 1405,
                          "end": 1576
                        },
                        "start": 1173,
                        "end": 1576
                      }
                    ],
                    "optional": false,
                    "start": 1163,
                    "end": 1580
                  },
                  "start": 1163,
                  "end": 1581
                }
              ],
              "start": 1159,
              "end": 1583
            },
            "expression": false,
            "start": 1148,
            "end": 1583
          },
          "arguments": [],
          "optional": false,
          "start": 1148,
          "end": 1585
        },
        "start": 1147,
        "end": 1586
      },
      "start": 1147,
      "end": 1587
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1588
}