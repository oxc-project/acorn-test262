{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "initialBV",
            "start": 1560,
            "end": 1569
          },
          "init": null,
          "start": 1560,
          "end": 1569
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1571,
            "end": 1580
          },
          "init": null,
          "start": 1571,
          "end": 1580
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "varBinding",
            "start": 1582,
            "end": 1592
          },
          "init": null,
          "start": 1582,
          "end": 1592
        }
      ],
      "start": 1556,
      "end": 1593
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "eval",
                      "start": 1611,
                      "end": 1615
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "if (true) function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; } else ;varBinding = f;    f();",
                        "raw": "'if (true) function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; } else ;varBinding = f;\\\n    f();'",
                        "start": 1621,
                        "end": 1735
                      }
                    ],
                    "optional": false,
                    "start": 1611,
                    "end": 1739
                  },
                  "start": 1611,
                  "end": 1740
                }
              ],
              "start": 1607,
              "end": 1742
            },
            "expression": false,
            "start": 1596,
            "end": 1742
          },
          "arguments": [],
          "optional": false,
          "start": 1596,
          "end": 1744
        },
        "start": 1595,
        "end": 1745
      },
      "start": 1595,
      "end": 1746
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1749,
            "end": 1755
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1756,
            "end": 1765
          },
          "optional": false,
          "computed": false,
          "start": 1749,
          "end": 1765
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "initialBV",
              "start": 1769,
              "end": 1778
            },
            "arguments": [],
            "optional": false,
            "start": 1769,
            "end": 1780
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1784,
            "end": 1790
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "start": 1794,
            "end": 1859
          }
        ],
        "optional": false,
        "start": 1749,
        "end": 1861
      },
      "start": 1749,
      "end": 1862
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1863,
            "end": 1869
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1870,
            "end": 1879
          },
          "optional": false,
          "computed": false,
          "start": 1863,
          "end": 1879
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1880,
            "end": 1889
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1891,
            "end": 1894
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "start": 1896,
            "end": 1929
          }
        ],
        "optional": false,
        "start": 1863,
        "end": 1930
      },
      "start": 1863,
      "end": 1931
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1932,
            "end": 1938
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1939,
            "end": 1948
          },
          "optional": false,
          "computed": false,
          "start": 1932,
          "end": 1948
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "varBinding",
              "start": 1952,
              "end": 1962
            },
            "arguments": [],
            "optional": false,
            "start": 1952,
            "end": 1964
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1968,
            "end": 1974
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "start": 1978,
            "end": 2043
          }
        ],
        "optional": false,
        "start": 1932,
        "end": 2045
      },
      "start": 1932,
      "end": 2046
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2047
}