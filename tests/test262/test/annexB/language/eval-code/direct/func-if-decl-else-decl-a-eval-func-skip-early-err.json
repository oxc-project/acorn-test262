{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "init",
            "start": 1180,
            "end": 1184
          },
          "init": null,
          "start": 1180,
          "end": 1184
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "after",
            "start": 1186,
            "end": 1191
          },
          "init": null,
          "start": 1186,
          "end": 1191
        }
      ],
      "start": 1176,
      "end": 1192
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "eval",
                      "start": 1210,
                      "end": 1214
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "let f = 123;    init = f;if (true) function f() {  } else function _f() {}after = f;",
                        "raw": "'let f = 123;\\\n    init = f;if (true) function f() {  } else function _f() {}after = f;'",
                        "start": 1220,
                        "end": 1308
                      }
                    ],
                    "optional": false,
                    "start": 1210,
                    "end": 1312
                  },
                  "start": 1210,
                  "end": 1313
                }
              ],
              "start": 1206,
              "end": 1315
            },
            "expression": false,
            "start": 1195,
            "end": 1315
          },
          "arguments": [],
          "optional": false,
          "start": 1195,
          "end": 1317
        },
        "start": 1194,
        "end": 1318
      },
      "start": 1194,
      "end": 1319
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1321,
            "end": 1327
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1328,
            "end": 1337
          },
          "optional": false,
          "computed": false,
          "start": 1321,
          "end": 1337
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "init",
            "start": 1338,
            "end": 1342
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1344,
            "end": 1347
          },
          {
            "type": "Literal",
            "value": "binding is not initialized to `undefined`",
            "raw": "'binding is not initialized to `undefined`'",
            "start": 1349,
            "end": 1392
          }
        ],
        "optional": false,
        "start": 1321,
        "end": 1393
      },
      "start": 1321,
      "end": 1394
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1395,
            "end": 1401
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1402,
            "end": 1411
          },
          "optional": false,
          "computed": false,
          "start": 1395,
          "end": 1411
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "after",
            "start": 1412,
            "end": 1417
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1419,
            "end": 1422
          },
          {
            "type": "Literal",
            "value": "value is not updated following evaluation",
            "raw": "'value is not updated following evaluation'",
            "start": 1424,
            "end": 1467
          }
        ],
        "optional": false,
        "start": 1395,
        "end": 1468
      },
      "start": 1395,
      "end": 1469
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1470
}