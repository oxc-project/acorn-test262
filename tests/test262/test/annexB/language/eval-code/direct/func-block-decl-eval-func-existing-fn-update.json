{
  "type": "Program",
  "start": 0,
  "end": 1338,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1067,
      "end": 1077,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1071,
          "end": 1076,
          "id": {
            "type": "Identifier",
            "start": 1071,
            "end": 1076,
            "name": "after"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1079,
      "end": 1244,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 1079,
        "end": 1243,
        "expression": {
          "type": "CallExpression",
          "start": 1080,
          "end": 1242,
          "callee": {
            "type": "FunctionExpression",
            "start": 1080,
            "end": 1240,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1091,
              "end": 1240,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1095,
                  "end": 1238,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1095,
                    "end": 1237,
                    "callee": {
                      "type": "Identifier",
                      "start": 1095,
                      "end": 1099,
                      "name": "eval"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1105,
                        "end": 1233,
                        "value": "{ function f() { return \"inner declaration\"; } }after = f;        function f() {      return \"outer declaration\";    }",
                        "raw": "'{ function f() { return \"inner declaration\"; } }after = f;\\\n    \\\n    function f() {\\\n      return \"outer declaration\";\\\n    }'"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1246,
      "end": 1289,
      "expression": {
        "type": "CallExpression",
        "start": 1246,
        "end": 1288,
        "callee": {
          "type": "MemberExpression",
          "start": 1246,
          "end": 1262,
          "object": {
            "type": "Identifier",
            "start": 1246,
            "end": 1252,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1253,
            "end": 1262,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1263,
            "end": 1275,
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "start": 1270,
              "end": 1275,
              "name": "after"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 1277,
            "end": 1287,
            "value": "function",
            "raw": "'function'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1290,
      "end": 1337,
      "expression": {
        "type": "CallExpression",
        "start": 1290,
        "end": 1336,
        "callee": {
          "type": "MemberExpression",
          "start": 1290,
          "end": 1306,
          "object": {
            "type": "Identifier",
            "start": 1290,
            "end": 1296,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1297,
            "end": 1306,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1307,
            "end": 1314,
            "callee": {
              "type": "Identifier",
              "start": 1307,
              "end": 1312,
              "name": "after"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1316,
            "end": 1335,
            "value": "inner declaration",
            "raw": "'inner declaration'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}