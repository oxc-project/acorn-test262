{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "init",
            "start": 925,
            "end": 929
          },
          "init": null,
          "start": 925,
          "end": 929
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "changed",
            "start": 931,
            "end": 938
          },
          "init": null,
          "start": 931,
          "end": 938
        }
      ],
      "start": 921,
      "end": 939
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "eval",
                      "start": 957,
                      "end": 961
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "Literal",
                              "value": "init = f;    f = 123;    changed = f;switch (1) {",
                              "raw": "'init = f;\\\n    f = 123;\\\n    changed = f;switch (1) {'",
                              "start": 967,
                              "end": 1022
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "value": "  default:",
                              "raw": "'  default:'",
                              "start": 1029,
                              "end": 1041
                            },
                            "start": 967,
                            "end": 1041
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "value": "    function f() {  }",
                            "raw": "'    function f() {  }'",
                            "start": 1048,
                            "end": 1071
                          },
                          "start": 967,
                          "end": 1071
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": "}    ",
                          "raw": "'}\\\n    '",
                          "start": 1078,
                          "end": 1087
                        },
                        "start": 967,
                        "end": 1087
                      }
                    ],
                    "optional": false,
                    "start": 957,
                    "end": 1091
                  },
                  "start": 957,
                  "end": 1092
                }
              ],
              "start": 953,
              "end": 1094
            },
            "expression": false,
            "start": 942,
            "end": 1094
          },
          "arguments": [],
          "optional": false,
          "start": 942,
          "end": 1096
        },
        "start": 941,
        "end": 1097
      },
      "start": 941,
      "end": 1098
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1100,
            "end": 1106
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1107,
            "end": 1116
          },
          "optional": false,
          "computed": false,
          "start": 1100,
          "end": 1116
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "init",
            "start": 1117,
            "end": 1121
          },
          {
            "type": "Identifier",
            "name": "undefined",
            "start": 1123,
            "end": 1132
          },
          {
            "type": "Literal",
            "value": "binding is initialized to `undefined`",
            "raw": "'binding is initialized to `undefined`'",
            "start": 1134,
            "end": 1173
          }
        ],
        "optional": false,
        "start": 1100,
        "end": 1174
      },
      "start": 1100,
      "end": 1175
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1176,
            "end": 1182
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1183,
            "end": 1192
          },
          "optional": false,
          "computed": false,
          "start": 1176,
          "end": 1192
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "changed",
            "start": 1193,
            "end": 1200
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1202,
            "end": 1205
          },
          {
            "type": "Literal",
            "value": "binding is mutable",
            "raw": "'binding is mutable'",
            "start": 1207,
            "end": 1227
          }
        ],
        "optional": false,
        "start": 1176,
        "end": 1228
      },
      "start": 1176,
      "end": 1229
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1230,
            "end": 1236
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1237,
            "end": 1243
          },
          "optional": false,
          "computed": false,
          "start": 1230,
          "end": 1243
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "ReferenceError",
            "start": 1244,
            "end": 1258
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Identifier",
                    "name": "f",
                    "start": 1275,
                    "end": 1276
                  },
                  "start": 1275,
                  "end": 1277
                }
              ],
              "start": 1271,
              "end": 1279
            },
            "expression": false,
            "start": 1260,
            "end": 1279
          },
          {
            "type": "Literal",
            "value": "global binding is not created",
            "raw": "'global binding is not created'",
            "start": 1281,
            "end": 1312
          }
        ],
        "optional": false,
        "start": 1230,
        "end": 1313
      },
      "start": 1230,
      "end": 1314
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1315
}