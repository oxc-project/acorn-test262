{
  "type": "Program",
  "start": 0,
  "end": 1987,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1562,
      "end": 1587,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1566,
          "end": 1575,
          "id": {
            "type": "Identifier",
            "start": 1566,
            "end": 1575,
            "name": "initialBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1577,
          "end": 1586,
          "id": {
            "type": "Identifier",
            "start": 1577,
            "end": 1586,
            "name": "currentBV"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1589,
      "end": 1690,
      "expression": {
        "type": "CallExpression",
        "start": 1589,
        "end": 1689,
        "callee": {
          "type": "Identifier",
          "start": 1589,
          "end": 1593,
          "name": "eval"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1597,
            "end": 1687,
            "value": "if (false) ; else function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }",
            "raw": "'if (false) ; else function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1692,
      "end": 1696,
      "expression": {
        "type": "CallExpression",
        "start": 1692,
        "end": 1695,
        "callee": {
          "type": "Identifier",
          "start": 1692,
          "end": 1693,
          "name": "f"
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1698,
      "end": 1811,
      "expression": {
        "type": "CallExpression",
        "start": 1698,
        "end": 1810,
        "callee": {
          "type": "MemberExpression",
          "start": 1698,
          "end": 1714,
          "object": {
            "type": "Identifier",
            "start": 1698,
            "end": 1704,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1705,
            "end": 1714,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1718,
            "end": 1729,
            "callee": {
              "type": "Identifier",
              "start": 1718,
              "end": 1727,
              "name": "initialBV"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1733,
            "end": 1739,
            "value": "decl",
            "raw": "'decl'"
          },
          {
            "type": "Literal",
            "start": 1743,
            "end": 1808,
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1812,
      "end": 1880,
      "expression": {
        "type": "CallExpression",
        "start": 1812,
        "end": 1879,
        "callee": {
          "type": "MemberExpression",
          "start": 1812,
          "end": 1828,
          "object": {
            "type": "Identifier",
            "start": 1812,
            "end": 1818,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1819,
            "end": 1828,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1829,
            "end": 1838,
            "name": "currentBV"
          },
          {
            "type": "Literal",
            "start": 1840,
            "end": 1843,
            "value": 123,
            "raw": "123"
          },
          {
            "type": "Literal",
            "start": 1845,
            "end": 1878,
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1881,
      "end": 1986,
      "expression": {
        "type": "CallExpression",
        "start": 1881,
        "end": 1985,
        "callee": {
          "type": "MemberExpression",
          "start": 1881,
          "end": 1897,
          "object": {
            "type": "Identifier",
            "start": 1881,
            "end": 1887,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1888,
            "end": 1897,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1901,
            "end": 1904,
            "callee": {
              "type": "Identifier",
              "start": 1901,
              "end": 1902,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1908,
            "end": 1914,
            "value": "decl",
            "raw": "'decl'"
          },
          {
            "type": "Literal",
            "start": 1918,
            "end": 1983,
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}