{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "initialBV",
            "start": 1062,
            "end": 1071
          },
          "init": null,
          "start": 1062,
          "end": 1071
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1073,
            "end": 1082
          },
          "init": null,
          "start": 1073,
          "end": 1082
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "varBinding",
            "start": 1084,
            "end": 1094
          },
          "init": null,
          "start": 1084,
          "end": 1094
        }
      ],
      "start": 1058,
      "end": 1095
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "eval",
                      "start": 1113,
                      "end": 1117
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "{ function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; } }varBinding = f;    f();",
                        "raw": "'{ function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; } }varBinding = f;\\\n    f();'",
                        "start": 1123,
                        "end": 1224
                      }
                    ],
                    "optional": false,
                    "start": 1113,
                    "end": 1228
                  },
                  "start": 1113,
                  "end": 1229
                }
              ],
              "start": 1109,
              "end": 1231
            },
            "expression": false,
            "start": 1098,
            "end": 1231
          },
          "arguments": [],
          "optional": false,
          "start": 1098,
          "end": 1233
        },
        "start": 1097,
        "end": 1234
      },
      "start": 1097,
      "end": 1235
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1238,
            "end": 1244
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1245,
            "end": 1254
          },
          "optional": false,
          "computed": false,
          "start": 1238,
          "end": 1254
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "initialBV",
              "start": 1258,
              "end": 1267
            },
            "arguments": [],
            "optional": false,
            "start": 1258,
            "end": 1269
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1273,
            "end": 1279
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "start": 1283,
            "end": 1348
          }
        ],
        "optional": false,
        "start": 1238,
        "end": 1350
      },
      "start": 1238,
      "end": 1351
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1352,
            "end": 1358
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1359,
            "end": 1368
          },
          "optional": false,
          "computed": false,
          "start": 1352,
          "end": 1368
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1369,
            "end": 1378
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1380,
            "end": 1383
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "start": 1385,
            "end": 1418
          }
        ],
        "optional": false,
        "start": 1352,
        "end": 1419
      },
      "start": 1352,
      "end": 1420
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1421,
            "end": 1427
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1428,
            "end": 1437
          },
          "optional": false,
          "computed": false,
          "start": 1421,
          "end": 1437
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "varBinding",
              "start": 1441,
              "end": 1451
            },
            "arguments": [],
            "optional": false,
            "start": 1441,
            "end": 1453
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1457,
            "end": 1463
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "start": 1467,
            "end": 1532
          }
        ],
        "optional": false,
        "start": 1421,
        "end": 1534
      },
      "start": 1421,
      "end": 1535
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1536
}