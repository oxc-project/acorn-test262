{
  "type": "Program",
  "start": 0,
  "end": 1613,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1080,
      "end": 1117,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1084,
          "end": 1093,
          "id": {
            "type": "Identifier",
            "start": 1084,
            "end": 1093,
            "name": "initialBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1095,
          "end": 1104,
          "id": {
            "type": "Identifier",
            "start": 1095,
            "end": 1104,
            "name": "currentBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1106,
          "end": 1116,
          "id": {
            "type": "Identifier",
            "start": 1106,
            "end": 1116,
            "name": "varBinding"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1119,
      "end": 1312,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 1119,
        "end": 1311,
        "expression": {
          "type": "CallExpression",
          "start": 1120,
          "end": 1310,
          "callee": {
            "type": "FunctionExpression",
            "start": 1120,
            "end": 1308,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1131,
              "end": 1308,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1135,
                  "end": 1306,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1135,
                    "end": 1305,
                    "callee": {
                      "type": "Identifier",
                      "start": 1135,
                      "end": 1139,
                      "name": "eval"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 1145,
                        "end": 1301,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 1145,
                          "end": 1260,
                          "left": {
                            "type": "BinaryExpression",
                            "start": 1145,
                            "end": 1177,
                            "left": {
                              "type": "Literal",
                              "start": 1145,
                              "end": 1159,
                              "value": "switch (1) {",
                              "raw": "'switch (1) {'"
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "start": 1166,
                              "end": 1177,
                              "value": "  case 1:",
                              "raw": "'  case 1:'"
                            }
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "start": 1184,
                            "end": 1260,
                            "value": "    function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }",
                            "raw": "'    function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }'"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1267,
                          "end": 1301,
                          "value": "}    varBinding = f;    f();",
                          "raw": "'}\\\n    varBinding = f;\\\n    f();'"
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1315,
      "end": 1428,
      "expression": {
        "type": "CallExpression",
        "start": 1315,
        "end": 1427,
        "callee": {
          "type": "MemberExpression",
          "start": 1315,
          "end": 1331,
          "object": {
            "type": "Identifier",
            "start": 1315,
            "end": 1321,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1322,
            "end": 1331,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1335,
            "end": 1346,
            "callee": {
              "type": "Identifier",
              "start": 1335,
              "end": 1344,
              "name": "initialBV"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1350,
            "end": 1356,
            "value": "decl",
            "raw": "'decl'"
          },
          {
            "type": "Literal",
            "start": 1360,
            "end": 1425,
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1429,
      "end": 1497,
      "expression": {
        "type": "CallExpression",
        "start": 1429,
        "end": 1496,
        "callee": {
          "type": "MemberExpression",
          "start": 1429,
          "end": 1445,
          "object": {
            "type": "Identifier",
            "start": 1429,
            "end": 1435,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1436,
            "end": 1445,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1446,
            "end": 1455,
            "name": "currentBV"
          },
          {
            "type": "Literal",
            "start": 1457,
            "end": 1460,
            "value": 123,
            "raw": "123"
          },
          {
            "type": "Literal",
            "start": 1462,
            "end": 1495,
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1498,
      "end": 1612,
      "expression": {
        "type": "CallExpression",
        "start": 1498,
        "end": 1611,
        "callee": {
          "type": "MemberExpression",
          "start": 1498,
          "end": 1514,
          "object": {
            "type": "Identifier",
            "start": 1498,
            "end": 1504,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1505,
            "end": 1514,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1518,
            "end": 1530,
            "callee": {
              "type": "Identifier",
              "start": 1518,
              "end": 1528,
              "name": "varBinding"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1534,
            "end": 1540,
            "value": "decl",
            "raw": "'decl'"
          },
          {
            "type": "Literal",
            "start": 1544,
            "end": 1609,
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}