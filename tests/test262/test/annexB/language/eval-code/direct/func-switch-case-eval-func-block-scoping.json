{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "initialBV",
            "start": 1084,
            "end": 1093
          },
          "init": null,
          "start": 1084,
          "end": 1093
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1095,
            "end": 1104
          },
          "init": null,
          "start": 1095,
          "end": 1104
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "varBinding",
            "start": 1106,
            "end": 1116
          },
          "init": null,
          "start": 1106,
          "end": 1116
        }
      ],
      "start": 1080,
      "end": 1117
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "eval",
                      "start": 1135,
                      "end": 1139
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "Literal",
                              "value": "switch (1) {",
                              "raw": "'switch (1) {'",
                              "start": 1145,
                              "end": 1159
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "value": "  case 1:",
                              "raw": "'  case 1:'",
                              "start": 1166,
                              "end": 1177
                            },
                            "start": 1145,
                            "end": 1177
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "value": "    function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }",
                            "raw": "'    function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }'",
                            "start": 1184,
                            "end": 1260
                          },
                          "start": 1145,
                          "end": 1260
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": "}    varBinding = f;    f();",
                          "raw": "'}\\\n    varBinding = f;\\\n    f();'",
                          "start": 1267,
                          "end": 1301
                        },
                        "start": 1145,
                        "end": 1301
                      }
                    ],
                    "optional": false,
                    "start": 1135,
                    "end": 1305
                  },
                  "start": 1135,
                  "end": 1306
                }
              ],
              "start": 1131,
              "end": 1308
            },
            "expression": false,
            "start": 1120,
            "end": 1308
          },
          "arguments": [],
          "optional": false,
          "start": 1120,
          "end": 1310
        },
        "start": 1119,
        "end": 1311
      },
      "start": 1119,
      "end": 1312
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1315,
            "end": 1321
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1322,
            "end": 1331
          },
          "optional": false,
          "computed": false,
          "start": 1315,
          "end": 1331
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "initialBV",
              "start": 1335,
              "end": 1344
            },
            "arguments": [],
            "optional": false,
            "start": 1335,
            "end": 1346
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1350,
            "end": 1356
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "start": 1360,
            "end": 1425
          }
        ],
        "optional": false,
        "start": 1315,
        "end": 1427
      },
      "start": 1315,
      "end": 1428
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1429,
            "end": 1435
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1436,
            "end": 1445
          },
          "optional": false,
          "computed": false,
          "start": 1429,
          "end": 1445
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1446,
            "end": 1455
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1457,
            "end": 1460
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "start": 1462,
            "end": 1495
          }
        ],
        "optional": false,
        "start": 1429,
        "end": 1496
      },
      "start": 1429,
      "end": 1497
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1498,
            "end": 1504
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1505,
            "end": 1514
          },
          "optional": false,
          "computed": false,
          "start": 1498,
          "end": 1514
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "varBinding",
              "start": 1518,
              "end": 1528
            },
            "arguments": [],
            "optional": false,
            "start": 1518,
            "end": 1530
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1534,
            "end": 1540
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "start": 1544,
            "end": 1609
          }
        ],
        "optional": false,
        "start": 1498,
        "end": 1611
      },
      "start": 1498,
      "end": 1612
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1613
}