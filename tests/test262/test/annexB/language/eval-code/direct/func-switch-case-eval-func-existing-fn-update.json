{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "after",
            "start": 1093,
            "end": 1098
          },
          "init": null,
          "start": 1093,
          "end": 1098
        }
      ],
      "start": 1089,
      "end": 1099
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "eval",
                      "start": 1117,
                      "end": 1121
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "Literal",
                              "value": "switch (1) {",
                              "raw": "'switch (1) {'",
                              "start": 1127,
                              "end": 1141
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "value": "  case 1:",
                              "raw": "'  case 1:'",
                              "start": 1148,
                              "end": 1159
                            },
                            "start": 1127,
                            "end": 1159
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "value": "    function f() { return \"inner declaration\"; }",
                            "raw": "'    function f() { return \"inner declaration\"; }'",
                            "start": 1166,
                            "end": 1216
                          },
                          "start": 1127,
                          "end": 1216
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": "}    after = f;        function f() {      return \"outer declaration\";    }",
                          "raw": "'}\\\n    after = f;\\\n    \\\n    function f() {\\\n      return \"outer declaration\";\\\n    }'",
                          "start": 1223,
                          "end": 1310
                        },
                        "start": 1127,
                        "end": 1310
                      }
                    ],
                    "optional": false,
                    "start": 1117,
                    "end": 1314
                  },
                  "start": 1117,
                  "end": 1315
                }
              ],
              "start": 1113,
              "end": 1317
            },
            "expression": false,
            "start": 1102,
            "end": 1317
          },
          "arguments": [],
          "optional": false,
          "start": 1102,
          "end": 1319
        },
        "start": 1101,
        "end": 1320
      },
      "start": 1101,
      "end": 1321
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1323,
            "end": 1329
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1330,
            "end": 1339
          },
          "optional": false,
          "computed": false,
          "start": 1323,
          "end": 1339
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "after",
              "start": 1347,
              "end": 1352
            },
            "prefix": true,
            "start": 1340,
            "end": 1352
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 1354,
            "end": 1364
          }
        ],
        "optional": false,
        "start": 1323,
        "end": 1365
      },
      "start": 1323,
      "end": 1366
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1367,
            "end": 1373
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1374,
            "end": 1383
          },
          "optional": false,
          "computed": false,
          "start": 1367,
          "end": 1383
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "after",
              "start": 1384,
              "end": 1389
            },
            "arguments": [],
            "optional": false,
            "start": 1384,
            "end": 1391
          },
          {
            "type": "Literal",
            "value": "inner declaration",
            "raw": "'inner declaration'",
            "start": 1393,
            "end": 1412
          }
        ],
        "optional": false,
        "start": 1367,
        "end": 1413
      },
      "start": 1367,
      "end": 1414
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1415
}