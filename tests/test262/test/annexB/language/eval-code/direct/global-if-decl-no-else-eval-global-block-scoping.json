{
  "type": "Program",
  "start": 0,
  "end": 1948,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1531,
      "end": 1556,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1535,
          "end": 1544,
          "id": {
            "type": "Identifier",
            "start": 1535,
            "end": 1544,
            "name": "initialBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1546,
          "end": 1555,
          "id": {
            "type": "Identifier",
            "start": 1546,
            "end": 1555,
            "name": "currentBV"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1558,
      "end": 1651,
      "expression": {
        "type": "CallExpression",
        "start": 1558,
        "end": 1650,
        "callee": {
          "type": "Identifier",
          "start": 1558,
          "end": 1562,
          "name": "eval"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1566,
            "end": 1648,
            "value": "if (true) function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }",
            "raw": "'if (true) function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1653,
      "end": 1657,
      "expression": {
        "type": "CallExpression",
        "start": 1653,
        "end": 1656,
        "callee": {
          "type": "Identifier",
          "start": 1653,
          "end": 1654,
          "name": "f"
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1659,
      "end": 1772,
      "expression": {
        "type": "CallExpression",
        "start": 1659,
        "end": 1771,
        "callee": {
          "type": "MemberExpression",
          "start": 1659,
          "end": 1675,
          "object": {
            "type": "Identifier",
            "start": 1659,
            "end": 1665,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1666,
            "end": 1675,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1679,
            "end": 1690,
            "callee": {
              "type": "Identifier",
              "start": 1679,
              "end": 1688,
              "name": "initialBV"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1694,
            "end": 1700,
            "value": "decl",
            "raw": "'decl'"
          },
          {
            "type": "Literal",
            "start": 1704,
            "end": 1769,
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1773,
      "end": 1841,
      "expression": {
        "type": "CallExpression",
        "start": 1773,
        "end": 1840,
        "callee": {
          "type": "MemberExpression",
          "start": 1773,
          "end": 1789,
          "object": {
            "type": "Identifier",
            "start": 1773,
            "end": 1779,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1780,
            "end": 1789,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1790,
            "end": 1799,
            "name": "currentBV"
          },
          {
            "type": "Literal",
            "start": 1801,
            "end": 1804,
            "value": 123,
            "raw": "123"
          },
          {
            "type": "Literal",
            "start": 1806,
            "end": 1839,
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1842,
      "end": 1947,
      "expression": {
        "type": "CallExpression",
        "start": 1842,
        "end": 1946,
        "callee": {
          "type": "MemberExpression",
          "start": 1842,
          "end": 1858,
          "object": {
            "type": "Identifier",
            "start": 1842,
            "end": 1848,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1849,
            "end": 1858,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1862,
            "end": 1865,
            "callee": {
              "type": "Identifier",
              "start": 1862,
              "end": 1863,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1869,
            "end": 1875,
            "value": "decl",
            "raw": "'decl'"
          },
          {
            "type": "Literal",
            "start": 1879,
            "end": 1944,
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}