{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "after",
            "start": 1080,
            "end": 1085
          },
          "init": null,
          "start": 1080,
          "end": 1085
        }
      ],
      "start": 1076,
      "end": 1086
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "eval",
                      "start": 1104,
                      "end": 1108
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "Literal",
                              "value": "switch (1) {",
                              "raw": "'switch (1) {'",
                              "start": 1114,
                              "end": 1128
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "value": "  case 1:",
                              "raw": "'  case 1:'",
                              "start": 1135,
                              "end": 1146
                            },
                            "start": 1114,
                            "end": 1146
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "value": "    function f() { return \"declaration\"; }",
                            "raw": "'    function f() { return \"declaration\"; }'",
                            "start": 1153,
                            "end": 1197
                          },
                          "start": 1114,
                          "end": 1197
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": "}    after = f;",
                          "raw": "'}\\\n    after = f;'",
                          "start": 1204,
                          "end": 1223
                        },
                        "start": 1114,
                        "end": 1223
                      }
                    ],
                    "optional": false,
                    "start": 1104,
                    "end": 1227
                  },
                  "start": 1104,
                  "end": 1228
                }
              ],
              "start": 1100,
              "end": 1230
            },
            "expression": false,
            "start": 1089,
            "end": 1230
          },
          "arguments": [],
          "optional": false,
          "start": 1089,
          "end": 1232
        },
        "start": 1088,
        "end": 1233
      },
      "start": 1088,
      "end": 1234
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1236,
            "end": 1242
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1243,
            "end": 1252
          },
          "optional": false,
          "computed": false,
          "start": 1236,
          "end": 1252
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "after",
              "start": 1260,
              "end": 1265
            },
            "prefix": true,
            "start": 1253,
            "end": 1265
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 1267,
            "end": 1277
          }
        ],
        "optional": false,
        "start": 1236,
        "end": 1278
      },
      "start": 1236,
      "end": 1279
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1280,
            "end": 1286
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1287,
            "end": 1296
          },
          "optional": false,
          "computed": false,
          "start": 1280,
          "end": 1296
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "after",
              "start": 1297,
              "end": 1302
            },
            "arguments": [],
            "optional": false,
            "start": 1297,
            "end": 1304
          },
          {
            "type": "Literal",
            "value": "declaration",
            "raw": "'declaration'",
            "start": 1306,
            "end": 1319
          }
        ],
        "optional": false,
        "start": 1280,
        "end": 1320
      },
      "start": 1280,
      "end": 1321
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1322
}