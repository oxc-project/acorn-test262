{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Object",
            "start": 1602,
            "end": 1608
          },
          "property": {
            "type": "Identifier",
            "name": "defineProperty",
            "start": 1609,
            "end": 1623
          },
          "optional": false,
          "computed": false,
          "start": 1602,
          "end": 1623
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "fnGlobalObject",
              "start": 1624,
              "end": 1638
            },
            "arguments": [],
            "optional": false,
            "start": 1624,
            "end": 1640
          },
          {
            "type": "Literal",
            "value": "f",
            "raw": "'f'",
            "start": 1642,
            "end": 1645
          },
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "value",
                  "start": 1651,
                  "end": 1656
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "Another function",
                          "raw": "'Another function'",
                          "start": 1678,
                          "end": 1696
                        },
                        "start": 1671,
                        "end": 1697
                      }
                    ],
                    "start": 1669,
                    "end": 1699
                  },
                  "expression": false,
                  "start": 1658,
                  "end": 1699
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 1651,
                "end": 1699
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "enumerable",
                  "start": 1703,
                  "end": 1713
                },
                "value": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1715,
                  "end": 1719
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 1703,
                "end": 1719
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "writable",
                  "start": 1723,
                  "end": 1731
                },
                "value": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1733,
                  "end": 1737
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 1723,
                "end": 1737
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "configurable",
                  "start": 1741,
                  "end": 1753
                },
                "value": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1755,
                  "end": 1760
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 1741,
                "end": 1760
              }
            ],
            "start": 1647,
            "end": 1762
          }
        ],
        "optional": false,
        "start": 1602,
        "end": 1763
      },
      "start": 1602,
      "end": 1764
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "eval",
          "start": 1766,
          "end": 1770
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "if (false) function _f() {} else function f() { return \"function declaration\"; }",
            "raw": "'if (false) function _f() {} else function f() { return \"function declaration\"; }'",
            "start": 1774,
            "end": 1856
          }
        ],
        "optional": false,
        "start": 1766,
        "end": 1858
      },
      "start": 1766,
      "end": 1859
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1861,
            "end": 1867
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1868,
            "end": 1877
          },
          "optional": false,
          "computed": false,
          "start": 1861,
          "end": 1877
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "f",
              "start": 1885,
              "end": 1886
            },
            "prefix": true,
            "start": 1878,
            "end": 1886
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 1888,
            "end": 1898
          }
        ],
        "optional": false,
        "start": 1861,
        "end": 1899
      },
      "start": 1861,
      "end": 1900
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1901,
            "end": 1907
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1908,
            "end": 1917
          },
          "optional": false,
          "computed": false,
          "start": 1901,
          "end": 1917
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f",
              "start": 1918,
              "end": 1919
            },
            "arguments": [],
            "optional": false,
            "start": 1918,
            "end": 1921
          },
          {
            "type": "Literal",
            "value": "function declaration",
            "raw": "'function declaration'",
            "start": 1923,
            "end": 1945
          }
        ],
        "optional": false,
        "start": 1901,
        "end": 1946
      },
      "start": 1901,
      "end": 1947
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1948
}