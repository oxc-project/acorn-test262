{
  "type": "Program",
  "start": 0,
  "end": 1962,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1571,
      "end": 1961,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 1571,
        "end": 1960,
        "expression": {
          "type": "CallExpression",
          "start": 1572,
          "end": 1959,
          "callee": {
            "type": "FunctionExpression",
            "start": 1572,
            "end": 1957,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1583,
              "end": 1957,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1587,
                  "end": 1955,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1587,
                    "end": 1954,
                    "callee": {
                      "type": "Identifier",
                      "start": 1587,
                      "end": 1591,
                      "name": "eval"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1597,
                        "end": 1950,
                        "value": "assert.sameValue(      f, undefined, \"Initialized binding created prior to evaluation\"    );        try {      throw null;    } catch (f) {if (true) function f() { return 123; }}        assert.sameValue(      typeof f,      \"function\",      \"binding value is updated following evaluation\"    );    assert.sameValue(f(), 123);",
                        "raw": "'assert.sameValue(\\\n      f, undefined, \"Initialized binding created prior to evaluation\"\\\n    );\\\n    \\\n    try {\\\n      throw null;\\\n    } catch (f) {if (true) function f() { return 123; }}\\\n    \\\n    assert.sameValue(\\\n      typeof f,\\\n      \"function\",\\\n      \"binding value is updated following evaluation\"\\\n    );\\\n    assert.sameValue(f(), 123);'"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          },
          "arguments": [],
          "optional": false
        }
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}