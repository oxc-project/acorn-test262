{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "init",
            "start": 706,
            "end": 710
          },
          "init": null,
          "start": 706,
          "end": 710
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "after",
            "start": 712,
            "end": 717
          },
          "init": null,
          "start": 712,
          "end": 717
        }
      ],
      "start": 702,
      "end": 718
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "eval",
                      "start": 736,
                      "end": 740
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "Literal",
                              "value": "let f = 123;    init = f;switch (1) {",
                              "raw": "'let f = 123;\\\n    init = f;switch (1) {'",
                              "start": 746,
                              "end": 787
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "value": "  case 1:",
                              "raw": "'  case 1:'",
                              "start": 794,
                              "end": 805
                            },
                            "start": 746,
                            "end": 805
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "value": "    function f() {  }",
                            "raw": "'    function f() {  }'",
                            "start": 812,
                            "end": 835
                          },
                          "start": 746,
                          "end": 835
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": "}    after = f;",
                          "raw": "'}\\\n    after = f;'",
                          "start": 842,
                          "end": 861
                        },
                        "start": 746,
                        "end": 861
                      }
                    ],
                    "optional": false,
                    "start": 736,
                    "end": 865
                  },
                  "start": 736,
                  "end": 866
                }
              ],
              "start": 732,
              "end": 868
            },
            "expression": false,
            "start": 721,
            "end": 868
          },
          "arguments": [],
          "optional": false,
          "start": 721,
          "end": 870
        },
        "start": 720,
        "end": 871
      },
      "start": 720,
      "end": 872
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 874,
            "end": 880
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 881,
            "end": 890
          },
          "optional": false,
          "computed": false,
          "start": 874,
          "end": 890
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "init",
            "start": 891,
            "end": 895
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 897,
            "end": 900
          },
          {
            "type": "Literal",
            "value": "binding is not initialized to `undefined`",
            "raw": "'binding is not initialized to `undefined`'",
            "start": 902,
            "end": 945
          }
        ],
        "optional": false,
        "start": 874,
        "end": 946
      },
      "start": 874,
      "end": 947
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 948,
            "end": 954
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 955,
            "end": 964
          },
          "optional": false,
          "computed": false,
          "start": 948,
          "end": 964
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "after",
            "start": 965,
            "end": 970
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 972,
            "end": 975
          },
          {
            "type": "Literal",
            "value": "value is not updated following evaluation",
            "raw": "'value is not updated following evaluation'",
            "start": 977,
            "end": 1020
          }
        ],
        "optional": false,
        "start": 948,
        "end": 1021
      },
      "start": 948,
      "end": 1022
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1023
}