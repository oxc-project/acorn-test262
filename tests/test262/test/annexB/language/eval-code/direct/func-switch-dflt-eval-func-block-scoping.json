{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "initialBV",
            "start": 1106,
            "end": 1115
          },
          "init": null,
          "start": 1106,
          "end": 1115
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1117,
            "end": 1126
          },
          "init": null,
          "start": 1117,
          "end": 1126
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "varBinding",
            "start": 1128,
            "end": 1138
          },
          "init": null,
          "start": 1128,
          "end": 1138
        }
      ],
      "start": 1102,
      "end": 1139
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "eval",
                      "start": 1157,
                      "end": 1161
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "Literal",
                              "value": "switch (1) {",
                              "raw": "'switch (1) {'",
                              "start": 1167,
                              "end": 1181
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "value": "  default:",
                              "raw": "'  default:'",
                              "start": 1188,
                              "end": 1200
                            },
                            "start": 1167,
                            "end": 1200
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "value": "    function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }",
                            "raw": "'    function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }'",
                            "start": 1207,
                            "end": 1283
                          },
                          "start": 1167,
                          "end": 1283
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": "}    varBinding = f;    f();",
                          "raw": "'}\\\n    varBinding = f;\\\n    f();'",
                          "start": 1290,
                          "end": 1324
                        },
                        "start": 1167,
                        "end": 1324
                      }
                    ],
                    "optional": false,
                    "start": 1157,
                    "end": 1328
                  },
                  "start": 1157,
                  "end": 1329
                }
              ],
              "start": 1153,
              "end": 1331
            },
            "expression": false,
            "start": 1142,
            "end": 1331
          },
          "arguments": [],
          "optional": false,
          "start": 1142,
          "end": 1333
        },
        "start": 1141,
        "end": 1334
      },
      "start": 1141,
      "end": 1335
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1338,
            "end": 1344
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1345,
            "end": 1354
          },
          "optional": false,
          "computed": false,
          "start": 1338,
          "end": 1354
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "initialBV",
              "start": 1358,
              "end": 1367
            },
            "arguments": [],
            "optional": false,
            "start": 1358,
            "end": 1369
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1373,
            "end": 1379
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "start": 1383,
            "end": 1448
          }
        ],
        "optional": false,
        "start": 1338,
        "end": 1450
      },
      "start": 1338,
      "end": 1451
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1452,
            "end": 1458
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1459,
            "end": 1468
          },
          "optional": false,
          "computed": false,
          "start": 1452,
          "end": 1468
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1469,
            "end": 1478
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1480,
            "end": 1483
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "start": 1485,
            "end": 1518
          }
        ],
        "optional": false,
        "start": 1452,
        "end": 1519
      },
      "start": 1452,
      "end": 1520
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1521,
            "end": 1527
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1528,
            "end": 1537
          },
          "optional": false,
          "computed": false,
          "start": 1521,
          "end": 1537
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "varBinding",
              "start": 1541,
              "end": 1551
            },
            "arguments": [],
            "optional": false,
            "start": 1541,
            "end": 1553
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1557,
            "end": 1563
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "start": 1567,
            "end": 1632
          }
        ],
        "optional": false,
        "start": 1521,
        "end": 1634
      },
      "start": 1521,
      "end": 1635
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1636
}