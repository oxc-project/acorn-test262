{
  "type": "Program",
  "start": 0,
  "end": 1292,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 899,
      "end": 917,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 903,
          "end": 907,
          "id": {
            "type": "Identifier",
            "start": 903,
            "end": 907,
            "name": "init"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 909,
          "end": 916,
          "id": {
            "type": "Identifier",
            "start": 909,
            "end": 916,
            "name": "changed"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 919,
      "end": 1075,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 919,
        "end": 1074,
        "expression": {
          "type": "CallExpression",
          "start": 920,
          "end": 1073,
          "callee": {
            "type": "FunctionExpression",
            "start": 920,
            "end": 1071,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 931,
              "end": 1071,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 935,
                  "end": 1069,
                  "expression": {
                    "type": "CallExpression",
                    "start": 935,
                    "end": 1068,
                    "callee": {
                      "type": "Identifier",
                      "start": 935,
                      "end": 939,
                      "name": "eval"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 945,
                        "end": 1064,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 945,
                          "end": 1048,
                          "left": {
                            "type": "BinaryExpression",
                            "start": 945,
                            "end": 1018,
                            "left": {
                              "type": "Literal",
                              "start": 945,
                              "end": 1000,
                              "value": "init = f;    f = 123;    changed = f;switch (1) {",
                              "raw": "'init = f;\\\n    f = 123;\\\n    changed = f;switch (1) {'"
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "start": 1007,
                              "end": 1018,
                              "value": "  case 1:",
                              "raw": "'  case 1:'"
                            }
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "start": 1025,
                            "end": 1048,
                            "value": "    function f() {  }",
                            "raw": "'    function f() {  }'"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1055,
                          "end": 1064,
                          "value": "}    ",
                          "raw": "'}\\\n    '"
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1077,
      "end": 1152,
      "expression": {
        "type": "CallExpression",
        "start": 1077,
        "end": 1151,
        "callee": {
          "type": "MemberExpression",
          "start": 1077,
          "end": 1093,
          "object": {
            "type": "Identifier",
            "start": 1077,
            "end": 1083,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1084,
            "end": 1093,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1094,
            "end": 1098,
            "name": "init"
          },
          {
            "type": "Identifier",
            "start": 1100,
            "end": 1109,
            "name": "undefined"
          },
          {
            "type": "Literal",
            "start": 1111,
            "end": 1150,
            "value": "binding is initialized to `undefined`",
            "raw": "'binding is initialized to `undefined`'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1153,
      "end": 1206,
      "expression": {
        "type": "CallExpression",
        "start": 1153,
        "end": 1205,
        "callee": {
          "type": "MemberExpression",
          "start": 1153,
          "end": 1169,
          "object": {
            "type": "Identifier",
            "start": 1153,
            "end": 1159,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1160,
            "end": 1169,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1170,
            "end": 1177,
            "name": "changed"
          },
          {
            "type": "Literal",
            "start": 1179,
            "end": 1182,
            "value": 123,
            "raw": "123"
          },
          {
            "type": "Literal",
            "start": 1184,
            "end": 1204,
            "value": "binding is mutable",
            "raw": "'binding is mutable'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1207,
      "end": 1291,
      "expression": {
        "type": "CallExpression",
        "start": 1207,
        "end": 1290,
        "callee": {
          "type": "MemberExpression",
          "start": 1207,
          "end": 1220,
          "object": {
            "type": "Identifier",
            "start": 1207,
            "end": 1213,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1214,
            "end": 1220,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1221,
            "end": 1235,
            "name": "ReferenceError"
          },
          {
            "type": "FunctionExpression",
            "start": 1237,
            "end": 1256,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1248,
              "end": 1256,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1252,
                  "end": 1254,
                  "expression": {
                    "type": "Identifier",
                    "start": 1252,
                    "end": 1253,
                    "name": "f"
                  }
                }
              ]
            },
            "expression": false
          },
          {
            "type": "Literal",
            "start": 1258,
            "end": 1289,
            "value": "global binding is not created",
            "raw": "'global binding is not created'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}