{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "SequenceExpression",
            "expressions": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1186,
                "end": 1187
              },
              {
                "type": "Identifier",
                "name": "eval",
                "start": 1188,
                "end": 1192
              }
            ],
            "start": 1186,
            "end": 1192
          },
          "start": 1185,
          "end": 1193
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "let f = 123;  assert.sameValue(f, 123, \"binding is not initialized to `undefined`\");if (true) function f() {  } else ;assert.sameValue(f, 123, \"value is not updated following evaluation\");",
            "raw": "'let f = 123;\\\n  assert.sameValue(f, 123, \"binding is not initialized to `undefined`\");if (true) function f() {  } else ;assert.sameValue(f, 123, \"value is not updated following evaluation\");'",
            "start": 1197,
            "end": 1389
          }
        ],
        "optional": false,
        "start": 1185,
        "end": 1391
      },
      "start": 1185,
      "end": 1392
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1393
}