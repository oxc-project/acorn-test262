{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "initialBV",
            "start": 1113,
            "end": 1122
          },
          "init": null,
          "start": 1113,
          "end": 1122
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1124,
            "end": 1133
          },
          "init": null,
          "start": 1124,
          "end": 1133
        }
      ],
      "start": 1109,
      "end": 1134
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "SequenceExpression",
            "expressions": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1137,
                "end": 1138
              },
              {
                "type": "Identifier",
                "name": "eval",
                "start": 1139,
                "end": 1143
              }
            ],
            "start": 1137,
            "end": 1143
          },
          "start": 1136,
          "end": 1144
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "BinaryExpression",
              "left": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": "switch (1) {",
                  "raw": "'switch (1) {'",
                  "start": 1148,
                  "end": 1162
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "value": "  default:",
                  "raw": "'  default:'",
                  "start": 1167,
                  "end": 1179
                },
                "start": 1148,
                "end": 1179
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "value": "    function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }",
                "raw": "'    function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }'",
                "start": 1184,
                "end": 1260
              },
              "start": 1148,
              "end": 1260
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "}  ",
              "raw": "'}\\\n  '",
              "start": 1265,
              "end": 1272
            },
            "start": 1148,
            "end": 1272
          }
        ],
        "optional": false,
        "start": 1136,
        "end": 1274
      },
      "start": 1136,
      "end": 1275
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "f",
          "start": 1277,
          "end": 1278
        },
        "arguments": [],
        "optional": false,
        "start": 1277,
        "end": 1280
      },
      "start": 1277,
      "end": 1281
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1283,
            "end": 1289
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1290,
            "end": 1299
          },
          "optional": false,
          "computed": false,
          "start": 1283,
          "end": 1299
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "initialBV",
              "start": 1303,
              "end": 1312
            },
            "arguments": [],
            "optional": false,
            "start": 1303,
            "end": 1314
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1318,
            "end": 1324
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "start": 1328,
            "end": 1393
          }
        ],
        "optional": false,
        "start": 1283,
        "end": 1395
      },
      "start": 1283,
      "end": 1396
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1397,
            "end": 1403
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1404,
            "end": 1413
          },
          "optional": false,
          "computed": false,
          "start": 1397,
          "end": 1413
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1414,
            "end": 1423
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1425,
            "end": 1428
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "start": 1430,
            "end": 1463
          }
        ],
        "optional": false,
        "start": 1397,
        "end": 1464
      },
      "start": 1397,
      "end": 1465
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1466,
            "end": 1472
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1473,
            "end": 1482
          },
          "optional": false,
          "computed": false,
          "start": 1466,
          "end": 1482
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f",
              "start": 1486,
              "end": 1487
            },
            "arguments": [],
            "optional": false,
            "start": 1486,
            "end": 1489
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1493,
            "end": 1499
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "start": 1503,
            "end": 1568
          }
        ],
        "optional": false,
        "start": 1466,
        "end": 1570
      },
      "start": 1466,
      "end": 1571
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1572
}