{
  "type": "Program",
  "start": 0,
  "end": 1549,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1087,
      "end": 1112,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1091,
          "end": 1100,
          "id": {
            "type": "Identifier",
            "start": 1091,
            "end": 1100,
            "name": "initialBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1102,
          "end": 1111,
          "id": {
            "type": "Identifier",
            "start": 1102,
            "end": 1111,
            "name": "currentBV"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1114,
      "end": 1252,
      "expression": {
        "type": "CallExpression",
        "start": 1114,
        "end": 1251,
        "callee": {
          "type": "ParenthesizedExpression",
          "start": 1114,
          "end": 1122,
          "expression": {
            "type": "SequenceExpression",
            "start": 1115,
            "end": 1121,
            "expressions": [
              {
                "type": "Literal",
                "start": 1115,
                "end": 1116,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Identifier",
                "start": 1117,
                "end": 1121,
                "name": "eval"
              }
            ]
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1126,
            "end": 1249,
            "left": {
              "type": "BinaryExpression",
              "start": 1126,
              "end": 1237,
              "left": {
                "type": "BinaryExpression",
                "start": 1126,
                "end": 1156,
                "left": {
                  "type": "Literal",
                  "start": 1126,
                  "end": 1140,
                  "value": "switch (1) {",
                  "raw": "'switch (1) {'"
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "start": 1145,
                  "end": 1156,
                  "value": "  case 1:",
                  "raw": "'  case 1:'"
                }
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "start": 1161,
                "end": 1237,
                "value": "    function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }",
                "raw": "'    function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }'"
              }
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 1242,
              "end": 1249,
              "value": "}  ",
              "raw": "'}\\\n  '"
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1254,
      "end": 1258,
      "expression": {
        "type": "CallExpression",
        "start": 1254,
        "end": 1257,
        "callee": {
          "type": "Identifier",
          "start": 1254,
          "end": 1255,
          "name": "f"
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1260,
      "end": 1373,
      "expression": {
        "type": "CallExpression",
        "start": 1260,
        "end": 1372,
        "callee": {
          "type": "MemberExpression",
          "start": 1260,
          "end": 1276,
          "object": {
            "type": "Identifier",
            "start": 1260,
            "end": 1266,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1267,
            "end": 1276,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1280,
            "end": 1291,
            "callee": {
              "type": "Identifier",
              "start": 1280,
              "end": 1289,
              "name": "initialBV"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1295,
            "end": 1301,
            "value": "decl",
            "raw": "'decl'"
          },
          {
            "type": "Literal",
            "start": 1305,
            "end": 1370,
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1374,
      "end": 1442,
      "expression": {
        "type": "CallExpression",
        "start": 1374,
        "end": 1441,
        "callee": {
          "type": "MemberExpression",
          "start": 1374,
          "end": 1390,
          "object": {
            "type": "Identifier",
            "start": 1374,
            "end": 1380,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1381,
            "end": 1390,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1391,
            "end": 1400,
            "name": "currentBV"
          },
          {
            "type": "Literal",
            "start": 1402,
            "end": 1405,
            "value": 123,
            "raw": "123"
          },
          {
            "type": "Literal",
            "start": 1407,
            "end": 1440,
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1443,
      "end": 1548,
      "expression": {
        "type": "CallExpression",
        "start": 1443,
        "end": 1547,
        "callee": {
          "type": "MemberExpression",
          "start": 1443,
          "end": 1459,
          "object": {
            "type": "Identifier",
            "start": 1443,
            "end": 1449,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1450,
            "end": 1459,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1463,
            "end": 1466,
            "callee": {
              "type": "Identifier",
              "start": 1463,
              "end": 1464,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1470,
            "end": 1476,
            "value": "decl",
            "raw": "'decl'"
          },
          {
            "type": "Literal",
            "start": 1480,
            "end": 1545,
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}