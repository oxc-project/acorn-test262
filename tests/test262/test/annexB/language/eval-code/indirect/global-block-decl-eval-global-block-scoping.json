{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "initialBV",
            "start": 1069,
            "end": 1078
          },
          "init": null,
          "start": 1069,
          "end": 1078
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1080,
            "end": 1089
          },
          "init": null,
          "start": 1080,
          "end": 1089
        }
      ],
      "start": 1065,
      "end": 1090
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "SequenceExpression",
            "expressions": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1093,
                "end": 1094
              },
              {
                "type": "Identifier",
                "name": "eval",
                "start": 1095,
                "end": 1099
              }
            ],
            "start": 1093,
            "end": 1099
          },
          "start": 1092,
          "end": 1100
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "{ function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; } }",
            "raw": "'{ function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; } }'",
            "start": 1104,
            "end": 1180
          }
        ],
        "optional": false,
        "start": 1092,
        "end": 1182
      },
      "start": 1092,
      "end": 1183
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "f",
          "start": 1185,
          "end": 1186
        },
        "arguments": [],
        "optional": false,
        "start": 1185,
        "end": 1188
      },
      "start": 1185,
      "end": 1189
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1191,
            "end": 1197
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1198,
            "end": 1207
          },
          "optional": false,
          "computed": false,
          "start": 1191,
          "end": 1207
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "initialBV",
              "start": 1211,
              "end": 1220
            },
            "arguments": [],
            "optional": false,
            "start": 1211,
            "end": 1222
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1226,
            "end": 1232
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "start": 1236,
            "end": 1301
          }
        ],
        "optional": false,
        "start": 1191,
        "end": 1303
      },
      "start": 1191,
      "end": 1304
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1305,
            "end": 1311
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1312,
            "end": 1321
          },
          "optional": false,
          "computed": false,
          "start": 1305,
          "end": 1321
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "currentBV",
            "start": 1322,
            "end": 1331
          },
          {
            "type": "Literal",
            "value": 123,
            "raw": "123",
            "start": 1333,
            "end": 1336
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "start": 1338,
            "end": 1371
          }
        ],
        "optional": false,
        "start": 1305,
        "end": 1372
      },
      "start": 1305,
      "end": 1373
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1374,
            "end": 1380
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1381,
            "end": 1390
          },
          "optional": false,
          "computed": false,
          "start": 1374,
          "end": 1390
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f",
              "start": 1394,
              "end": 1395
            },
            "arguments": [],
            "optional": false,
            "start": 1394,
            "end": 1397
          },
          {
            "type": "Literal",
            "value": "decl",
            "raw": "'decl'",
            "start": 1401,
            "end": 1407
          },
          {
            "type": "Literal",
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "start": 1411,
            "end": 1476
          }
        ],
        "optional": false,
        "start": 1374,
        "end": 1478
      },
      "start": 1374,
      "end": 1479
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1480
}