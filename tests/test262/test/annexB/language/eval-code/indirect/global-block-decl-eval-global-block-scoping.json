{
  "type": "Program",
  "start": 0,
  "end": 1480,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1065,
      "end": 1090,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1069,
          "end": 1078,
          "id": {
            "type": "Identifier",
            "start": 1069,
            "end": 1078,
            "name": "initialBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1080,
          "end": 1089,
          "id": {
            "type": "Identifier",
            "start": 1080,
            "end": 1089,
            "name": "currentBV"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1092,
      "end": 1183,
      "expression": {
        "type": "CallExpression",
        "start": 1092,
        "end": 1182,
        "callee": {
          "type": "ParenthesizedExpression",
          "start": 1092,
          "end": 1100,
          "expression": {
            "type": "SequenceExpression",
            "start": 1093,
            "end": 1099,
            "expressions": [
              {
                "type": "Literal",
                "start": 1093,
                "end": 1094,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Identifier",
                "start": 1095,
                "end": 1099,
                "name": "eval"
              }
            ]
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1104,
            "end": 1180,
            "value": "{ function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; } }",
            "raw": "'{ function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; } }'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1185,
      "end": 1189,
      "expression": {
        "type": "CallExpression",
        "start": 1185,
        "end": 1188,
        "callee": {
          "type": "Identifier",
          "start": 1185,
          "end": 1186,
          "name": "f"
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1191,
      "end": 1304,
      "expression": {
        "type": "CallExpression",
        "start": 1191,
        "end": 1303,
        "callee": {
          "type": "MemberExpression",
          "start": 1191,
          "end": 1207,
          "object": {
            "type": "Identifier",
            "start": 1191,
            "end": 1197,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1198,
            "end": 1207,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1211,
            "end": 1222,
            "callee": {
              "type": "Identifier",
              "start": 1211,
              "end": 1220,
              "name": "initialBV"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1226,
            "end": 1232,
            "value": "decl",
            "raw": "'decl'"
          },
          {
            "type": "Literal",
            "start": 1236,
            "end": 1301,
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1305,
      "end": 1373,
      "expression": {
        "type": "CallExpression",
        "start": 1305,
        "end": 1372,
        "callee": {
          "type": "MemberExpression",
          "start": 1305,
          "end": 1321,
          "object": {
            "type": "Identifier",
            "start": 1305,
            "end": 1311,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1312,
            "end": 1321,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1322,
            "end": 1331,
            "name": "currentBV"
          },
          {
            "type": "Literal",
            "start": 1333,
            "end": 1336,
            "value": 123,
            "raw": "123"
          },
          {
            "type": "Literal",
            "start": 1338,
            "end": 1371,
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1374,
      "end": 1479,
      "expression": {
        "type": "CallExpression",
        "start": 1374,
        "end": 1478,
        "callee": {
          "type": "MemberExpression",
          "start": 1374,
          "end": 1390,
          "object": {
            "type": "Identifier",
            "start": 1374,
            "end": 1380,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1381,
            "end": 1390,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1394,
            "end": 1397,
            "callee": {
              "type": "Identifier",
              "start": 1394,
              "end": 1395,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1401,
            "end": 1407,
            "value": "decl",
            "raw": "'decl'"
          },
          {
            "type": "Literal",
            "start": 1411,
            "end": 1476,
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}