{
  "type": "Program",
  "start": 0,
  "end": 1746,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1206,
      "end": 1318,
      "expression": {
        "type": "CallExpression",
        "start": 1206,
        "end": 1317,
        "callee": {
          "type": "MemberExpression",
          "start": 1206,
          "end": 1219,
          "object": {
            "type": "Identifier",
            "start": 1206,
            "end": 1212,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1213,
            "end": 1219,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1220,
            "end": 1234,
            "name": "ReferenceError"
          },
          {
            "type": "FunctionExpression",
            "start": 1236,
            "end": 1255,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1247,
              "end": 1255,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1251,
                  "end": 1253,
                  "expression": {
                    "type": "Identifier",
                    "start": 1251,
                    "end": 1252,
                    "name": "f"
                  }
                }
              ]
            },
            "expression": false
          },
          {
            "type": "Literal",
            "start": 1257,
            "end": 1316,
            "value": "An initialized binding is not created prior to evaluation",
            "raw": "'An initialized binding is not created prior to evaluation'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1319,
      "end": 1430,
      "expression": {
        "type": "CallExpression",
        "start": 1319,
        "end": 1429,
        "callee": {
          "type": "MemberExpression",
          "start": 1319,
          "end": 1335,
          "object": {
            "type": "Identifier",
            "start": 1319,
            "end": 1325,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1326,
            "end": 1335,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1339,
            "end": 1347,
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "start": 1346,
              "end": 1347,
              "name": "f"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 1351,
            "end": 1362,
            "value": "undefined",
            "raw": "'undefined'"
          },
          {
            "type": "Literal",
            "start": 1366,
            "end": 1427,
            "value": "An uninitialized binding is not created prior to evaluation",
            "raw": "'An uninitialized binding is not created prior to evaluation'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1432,
      "end": 1517,
      "expression": {
        "type": "CallExpression",
        "start": 1432,
        "end": 1516,
        "callee": {
          "type": "ParenthesizedExpression",
          "start": 1432,
          "end": 1440,
          "expression": {
            "type": "SequenceExpression",
            "start": 1433,
            "end": 1439,
            "expressions": [
              {
                "type": "Literal",
                "start": 1433,
                "end": 1434,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Identifier",
                "start": 1435,
                "end": 1439,
                "name": "eval"
              }
            ]
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1444,
            "end": 1514,
            "value": "{  let f = 123;if (false) function _f() {} else function f() {  }}",
            "raw": "'{\\\n  let f = 123;if (false) function _f() {} else function f() {  }}'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1519,
      "end": 1632,
      "expression": {
        "type": "CallExpression",
        "start": 1519,
        "end": 1631,
        "callee": {
          "type": "MemberExpression",
          "start": 1519,
          "end": 1532,
          "object": {
            "type": "Identifier",
            "start": 1519,
            "end": 1525,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1526,
            "end": 1532,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1533,
            "end": 1547,
            "name": "ReferenceError"
          },
          {
            "type": "FunctionExpression",
            "start": 1549,
            "end": 1568,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1560,
              "end": 1568,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1564,
                  "end": 1566,
                  "expression": {
                    "type": "Identifier",
                    "start": 1564,
                    "end": 1565,
                    "name": "f"
                  }
                }
              ]
            },
            "expression": false
          },
          {
            "type": "Literal",
            "start": 1570,
            "end": 1630,
            "value": "An initialized binding is not created following evaluation",
            "raw": "'An initialized binding is not created following evaluation'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1633,
      "end": 1745,
      "expression": {
        "type": "CallExpression",
        "start": 1633,
        "end": 1744,
        "callee": {
          "type": "MemberExpression",
          "start": 1633,
          "end": 1649,
          "object": {
            "type": "Identifier",
            "start": 1633,
            "end": 1639,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1640,
            "end": 1649,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1653,
            "end": 1661,
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "start": 1660,
              "end": 1661,
              "name": "f"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 1665,
            "end": 1676,
            "value": "undefined",
            "raw": "'undefined'"
          },
          {
            "type": "Literal",
            "start": 1680,
            "end": 1742,
            "value": "An uninitialized binding is not created following evaluation",
            "raw": "'An uninitialized binding is not created following evaluation'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}