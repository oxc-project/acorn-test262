{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 423,
            "end": 429
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 430,
            "end": 439
          },
          "optional": false,
          "computed": false,
          "start": 423,
          "end": 439
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Atomics",
                "start": 447,
                "end": 454
              },
              "property": {
                "type": "Identifier",
                "name": "waitAsync",
                "start": 455,
                "end": 464
              },
              "optional": false,
              "computed": false,
              "start": 447,
              "end": 464
            },
            "prefix": true,
            "start": 440,
            "end": 464
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 466,
            "end": 476
          },
          {
            "type": "Literal",
            "value": "The value of `typeof Atomics.waitAsync` is \"function\"",
            "raw": "'The value of `typeof Atomics.waitAsync` is \"function\"'",
            "start": 478,
            "end": 533
          }
        ],
        "optional": false,
        "start": 423,
        "end": 534
      },
      "start": 423,
      "end": 535
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "RUNNING",
            "start": 543,
            "end": 550
          },
          "init": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 553,
            "end": 554
          },
          "start": 543,
          "end": 554
        }
      ],
      "start": 537,
      "end": 555
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "TIMEOUT",
            "start": 562,
            "end": 569
          },
          "init": {
            "type": "MemberExpression",
            "object": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "$262",
                  "start": 572,
                  "end": 576
                },
                "property": {
                  "type": "Identifier",
                  "name": "agent",
                  "start": 577,
                  "end": 582
                },
                "optional": false,
                "computed": false,
                "start": 572,
                "end": 582
              },
              "property": {
                "type": "Identifier",
                "name": "timeouts",
                "start": 583,
                "end": 591
              },
              "optional": false,
              "computed": false,
              "start": 572,
              "end": 591
            },
            "property": {
              "type": "Identifier",
              "name": "huge",
              "start": 592,
              "end": 596
            },
            "optional": false,
            "computed": false,
            "start": 572,
            "end": 596
          },
          "start": 562,
          "end": 596
        }
      ],
      "start": 556,
      "end": 597
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "i32a",
            "start": 605,
            "end": 609
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Int32Array",
              "start": 616,
              "end": 626
            },
            "arguments": [
              {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "SharedArrayBuffer",
                  "start": 634,
                  "end": 651
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Int32Array",
                        "start": 652,
                        "end": 662
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "BYTES_PER_ELEMENT",
                        "start": 663,
                        "end": 680
                      },
                      "optional": false,
                      "computed": false,
                      "start": 652,
                      "end": 680
                    },
                    "operator": "*",
                    "right": {
                      "type": "Literal",
                      "value": 4,
                      "raw": "4",
                      "start": 683,
                      "end": 684
                    },
                    "start": 652,
                    "end": 684
                  }
                ],
                "start": 630,
                "end": 685
              }
            ],
            "start": 612,
            "end": 687
          },
          "start": 605,
          "end": 687
        }
      ],
      "start": 599,
      "end": 688
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "$262",
              "start": 690,
              "end": 694
            },
            "property": {
              "type": "Identifier",
              "name": "agent",
              "start": 695,
              "end": 700
            },
            "optional": false,
            "computed": false,
            "start": 690,
            "end": 700
          },
          "property": {
            "type": "Identifier",
            "name": "start",
            "start": 701,
            "end": 706
          },
          "optional": false,
          "computed": false,
          "start": 690,
          "end": 706
        },
        "arguments": [
          {
            "type": "TemplateLiteral",
            "quasis": [
              {
                "type": "TemplateElement",
                "value": {
                  "raw": "\n  $262.agent.receiveBroadcast(async (sab) => {\n    const i32a = new Int32Array(sab);\n    Atomics.add(i32a, ",
                  "cooked": "\n  $262.agent.receiveBroadcast(async (sab) => {\n    const i32a = new Int32Array(sab);\n    Atomics.add(i32a, "
                },
                "tail": false,
                "start": 708,
                "end": 816
              },
              {
                "type": "TemplateElement",
                "value": {
                  "raw": ", 1);\n\n    const before = $262.agent.monotonicNow();\n    const unpark = await Atomics.waitAsync(i32a, 0, 0, ",
                  "cooked": ", 1);\n\n    const before = $262.agent.monotonicNow();\n    const unpark = await Atomics.waitAsync(i32a, 0, 0, "
                },
                "tail": false,
                "start": 826,
                "end": 934
              },
              {
                "type": "TemplateElement",
                "value": {
                  "raw": ").value;\n    const duration = $262.agent.monotonicNow() - before;\n\n    $262.agent.report(duration);\n    $262.agent.report(unpark);\n    $262.agent.leaving();\n  });\n",
                  "cooked": ").value;\n    const duration = $262.agent.monotonicNow() - before;\n\n    $262.agent.report(duration);\n    $262.agent.report(unpark);\n    $262.agent.leaving();\n  });\n"
                },
                "tail": true,
                "start": 944,
                "end": 1107
              }
            ],
            "expressions": [
              {
                "type": "Identifier",
                "name": "RUNNING",
                "start": 818,
                "end": 825
              },
              {
                "type": "Identifier",
                "name": "TIMEOUT",
                "start": 936,
                "end": 943
              }
            ],
            "start": 707,
            "end": 1108
          }
        ],
        "optional": false,
        "start": 690,
        "end": 1109
      },
      "start": 690,
      "end": 1110
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "$262",
                      "start": 1112,
                      "end": 1116
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "agent",
                      "start": 1117,
                      "end": 1122
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1112,
                    "end": 1122
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "safeBroadcastAsync",
                    "start": 1123,
                    "end": 1141
                  },
                  "optional": false,
                  "computed": false,
                  "start": 1112,
                  "end": 1141
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "i32a",
                    "start": 1142,
                    "end": 1146
                  },
                  {
                    "type": "Identifier",
                    "name": "RUNNING",
                    "start": 1148,
                    "end": 1155
                  },
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1157,
                    "end": 1158
                  }
                ],
                "optional": false,
                "start": 1112,
                "end": 1159
              },
              "property": {
                "type": "Identifier",
                "name": "then",
                "start": 1160,
                "end": 1164
              },
              "optional": false,
              "computed": false,
              "start": 1112,
              "end": 1164
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "expression": false,
                "async": true,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "agentCount",
                    "start": 1172,
                    "end": 1182
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "assert",
                            "start": 1192,
                            "end": 1198
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sameValue",
                            "start": 1199,
                            "end": 1208
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1192,
                          "end": 1208
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "agentCount",
                            "start": 1209,
                            "end": 1219
                          },
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1221,
                            "end": 1222
                          },
                          {
                            "type": "Literal",
                            "value": "The value of `agentCount` is 1",
                            "raw": "'The value of `agentCount` is 1'",
                            "start": 1224,
                            "end": 1256
                          }
                        ],
                        "optional": false,
                        "start": 1192,
                        "end": 1257
                      },
                      "start": 1192,
                      "end": 1258
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "assert",
                            "start": 1261,
                            "end": 1267
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sameValue",
                            "start": 1268,
                            "end": 1277
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1261,
                          "end": 1277
                        },
                        "arguments": [
                          {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Atomics",
                                "start": 1278,
                                "end": 1285
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "notify",
                                "start": 1286,
                                "end": 1292
                              },
                              "optional": false,
                              "computed": false,
                              "start": 1278,
                              "end": 1292
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "i32a",
                                "start": 1293,
                                "end": 1297
                              },
                              {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0",
                                "start": 1299,
                                "end": 1300
                              }
                            ],
                            "optional": false,
                            "start": 1278,
                            "end": 1301
                          },
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1303,
                            "end": 1304
                          },
                          {
                            "type": "Literal",
                            "value": "Atomics.notify(new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * 4)), 0) must return 1",
                            "raw": "'Atomics.notify(new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * 4)), 0) must return 1'",
                            "start": 1306,
                            "end": 1412
                          }
                        ],
                        "optional": false,
                        "start": 1261,
                        "end": 1413
                      },
                      "start": 1261,
                      "end": 1414
                    },
                    {
                      "type": "VariableDeclaration",
                      "kind": "let",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "lapse",
                            "start": 1422,
                            "end": 1427
                          },
                          "init": {
                            "type": "AwaitExpression",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "object": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "$262",
                                    "start": 1436,
                                    "end": 1440
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "agent",
                                    "start": 1441,
                                    "end": 1446
                                  },
                                  "optional": false,
                                  "computed": false,
                                  "start": 1436,
                                  "end": 1446
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "getReportAsync",
                                  "start": 1447,
                                  "end": 1461
                                },
                                "optional": false,
                                "computed": false,
                                "start": 1436,
                                "end": 1461
                              },
                              "arguments": [],
                              "optional": false,
                              "start": 1436,
                              "end": 1463
                            },
                            "start": 1430,
                            "end": 1463
                          },
                          "start": 1422,
                          "end": 1463
                        }
                      ],
                      "start": 1418,
                      "end": 1464
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "assert",
                          "start": 1468,
                          "end": 1474
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "Identifier",
                              "name": "lapse",
                              "start": 1480,
                              "end": 1485
                            },
                            "operator": "<",
                            "right": {
                              "type": "Identifier",
                              "name": "TIMEOUT",
                              "start": 1488,
                              "end": 1495
                            },
                            "start": 1480,
                            "end": 1495
                          },
                          {
                            "type": "Literal",
                            "value": "The result of evaluating `(lapse < TIMEOUT)` is true",
                            "raw": "'The result of evaluating `(lapse < TIMEOUT)` is true'",
                            "start": 1501,
                            "end": 1555
                          }
                        ],
                        "optional": false,
                        "start": 1468,
                        "end": 1559
                      },
                      "start": 1468,
                      "end": 1560
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "assert",
                            "start": 1564,
                            "end": 1570
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sameValue",
                            "start": 1571,
                            "end": 1580
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1564,
                          "end": 1580
                        },
                        "arguments": [
                          {
                            "type": "AwaitExpression",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "object": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "$262",
                                    "start": 1592,
                                    "end": 1596
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "agent",
                                    "start": 1597,
                                    "end": 1602
                                  },
                                  "optional": false,
                                  "computed": false,
                                  "start": 1592,
                                  "end": 1602
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "getReportAsync",
                                  "start": 1603,
                                  "end": 1617
                                },
                                "optional": false,
                                "computed": false,
                                "start": 1592,
                                "end": 1617
                              },
                              "arguments": [],
                              "optional": false,
                              "start": 1592,
                              "end": 1619
                            },
                            "start": 1586,
                            "end": 1619
                          },
                          {
                            "type": "Literal",
                            "value": "ok",
                            "raw": "'ok'",
                            "start": 1625,
                            "end": 1629
                          },
                          {
                            "type": "Literal",
                            "value": "(await $262.agent.getReportAsync()) resolves to the value \"ok\"",
                            "raw": "'(await $262.agent.getReportAsync()) resolves to the value \"ok\"'",
                            "start": 1635,
                            "end": 1699
                          }
                        ],
                        "optional": false,
                        "start": 1564,
                        "end": 1703
                      },
                      "start": 1564,
                      "end": 1704
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "assert",
                            "start": 1707,
                            "end": 1713
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sameValue",
                            "start": 1714,
                            "end": 1723
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1707,
                          "end": 1723
                        },
                        "arguments": [
                          {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Atomics",
                                "start": 1724,
                                "end": 1731
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "notify",
                                "start": 1732,
                                "end": 1738
                              },
                              "optional": false,
                              "computed": false,
                              "start": 1724,
                              "end": 1738
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "i32a",
                                "start": 1739,
                                "end": 1743
                              },
                              {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0",
                                "start": 1745,
                                "end": 1746
                              }
                            ],
                            "optional": false,
                            "start": 1724,
                            "end": 1747
                          },
                          {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0",
                            "start": 1749,
                            "end": 1750
                          },
                          {
                            "type": "Literal",
                            "value": "Atomics.notify(new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * 4)), 0) must return 0",
                            "raw": "'Atomics.notify(new Int32Array(new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * 4)), 0) must return 0'",
                            "start": 1752,
                            "end": 1858
                          }
                        ],
                        "optional": false,
                        "start": 1707,
                        "end": 1859
                      },
                      "start": 1707,
                      "end": 1860
                    }
                  ],
                  "start": 1187,
                  "end": 1862
                },
                "id": null,
                "generator": false,
                "start": 1165,
                "end": 1862
              }
            ],
            "optional": false,
            "start": 1112,
            "end": 1863
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1864,
            "end": 1868
          },
          "optional": false,
          "computed": false,
          "start": 1112,
          "end": 1868
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1869,
            "end": 1874
          },
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1876,
            "end": 1881
          }
        ],
        "optional": false,
        "start": 1112,
        "end": 1882
      },
      "start": 1112,
      "end": 1883
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1884
}