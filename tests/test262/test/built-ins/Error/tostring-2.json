{
  "type": "Program",
  "start": 0,
  "end": 558,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 271,
      "end": 363,
      "expression": {
        "type": "CallExpression",
        "start": 271,
        "end": 362,
        "callee": {
          "type": "MemberExpression",
          "start": 271,
          "end": 287,
          "object": {
            "type": "Identifier",
            "start": 271,
            "end": 277,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 278,
            "end": 287,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 291,
            "end": 309,
            "callee": {
              "type": "MemberExpression",
              "start": 291,
              "end": 307,
              "object": {
                "type": "CallExpression",
                "start": 291,
                "end": 298,
                "callee": {
                  "type": "Identifier",
                  "start": 291,
                  "end": 296,
                  "name": "Error"
                },
                "arguments": [],
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 299,
                "end": 307,
                "name": "toString"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 313,
            "end": 320,
            "value": "Error",
            "raw": "'Error'"
          },
          {
            "type": "Literal",
            "start": 324,
            "end": 360,
            "value": "Error().toString() returns \"Error\"",
            "raw": "'Error().toString() returns \"Error\"'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 365,
      "end": 418,
      "expression": {
        "type": "AssignmentExpression",
        "start": 365,
        "end": 417,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 365,
          "end": 389,
          "object": {
            "type": "MemberExpression",
            "start": 365,
            "end": 380,
            "object": {
              "type": "Identifier",
              "start": 365,
              "end": 370,
              "name": "Error"
            },
            "property": {
              "type": "Identifier",
              "start": 371,
              "end": 380,
              "name": "prototype"
            },
            "optional": false,
            "computed": false
          },
          "property": {
            "type": "Identifier",
            "start": 381,
            "end": 389,
            "name": "toString"
          },
          "optional": false,
          "computed": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 392,
          "end": 417,
          "object": {
            "type": "MemberExpression",
            "start": 392,
            "end": 408,
            "object": {
              "type": "Identifier",
              "start": 392,
              "end": 398,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 399,
              "end": 408,
              "name": "prototype"
            },
            "optional": false,
            "computed": false
          },
          "property": {
            "type": "Identifier",
            "start": 409,
            "end": 417,
            "name": "toString"
          },
          "optional": false,
          "computed": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 419,
      "end": 557,
      "expression": {
        "type": "CallExpression",
        "start": 419,
        "end": 556,
        "callee": {
          "type": "MemberExpression",
          "start": 419,
          "end": 435,
          "object": {
            "type": "Identifier",
            "start": 419,
            "end": 425,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 426,
            "end": 435,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 439,
            "end": 457,
            "callee": {
              "type": "MemberExpression",
              "start": 439,
              "end": 455,
              "object": {
                "type": "CallExpression",
                "start": 439,
                "end": 446,
                "callee": {
                  "type": "Identifier",
                  "start": 439,
                  "end": 444,
                  "name": "Error"
                },
                "arguments": [],
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 447,
                "end": 455,
                "name": "toString"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 461,
            "end": 477,
            "value": "[object Error]",
            "raw": "'[object Error]'"
          },
          {
            "type": "Literal",
            "start": 481,
            "end": 554,
            "value": "Error().toString() returns \"[object Error]\" (Object.prototype.toString)",
            "raw": "'Error().toString() returns \"[object Error]\" (Object.prototype.toString)'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}