{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "ThisExpression",
              "start": 295,
              "end": 299
            },
            "property": {
              "type": "Identifier",
              "name": "propertyIsEnumerable",
              "start": 300,
              "end": 320
            },
            "optional": false,
            "computed": false,
            "start": 295,
            "end": 320
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "encodeURI",
              "raw": "'encodeURI'",
              "start": 321,
              "end": 332
            }
          ],
          "optional": false,
          "start": 295,
          "end": 333
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 338,
          "end": 343
        },
        "start": 295,
        "end": 343
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 359,
                "end": 371
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: this.propertyIsEnumerable('encodeURI') === false. Actual: ",
                    "raw": "'#1: this.propertyIsEnumerable(\\'encodeURI\\') === false. Actual: '",
                    "start": 372,
                    "end": 438
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "ThisExpression",
                          "start": 442,
                          "end": 446
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "propertyIsEnumerable",
                          "start": 447,
                          "end": 467
                        },
                        "optional": false,
                        "computed": false,
                        "start": 442,
                        "end": 467
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "encodeURI",
                          "raw": "'encodeURI'",
                          "start": 468,
                          "end": 479
                        }
                      ],
                      "optional": false,
                      "start": 442,
                      "end": 480
                    },
                    "start": 441,
                    "end": 481
                  },
                  "start": 372,
                  "end": 481
                }
              ],
              "start": 355,
              "end": 482
            },
            "start": 349,
            "end": 483
          }
        ],
        "start": 345,
        "end": 485
      },
      "alternate": null,
      "start": 291,
      "end": 485
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 501,
            "end": 507
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 510,
            "end": 514
          },
          "start": 501,
          "end": 514
        }
      ],
      "start": 497,
      "end": 515
    },
    {
      "type": "ForInStatement",
      "left": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "p",
              "start": 525,
              "end": 526
            },
            "init": null,
            "start": 525,
            "end": 526
          }
        ],
        "start": 521,
        "end": 526
      },
      "right": {
        "type": "ThisExpression",
        "start": 530,
        "end": 534
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "p",
                "start": 544,
                "end": 545
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "value": "encodeURI",
                "raw": "\"encodeURI\"",
                "start": 550,
                "end": 561
              },
              "start": 544,
              "end": 561
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "result",
                      "start": 569,
                      "end": 575
                    },
                    "right": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 578,
                      "end": 583
                    },
                    "start": 569,
                    "end": 583
                  },
                  "start": 569,
                  "end": 584
                }
              ],
              "start": 563,
              "end": 588
            },
            "alternate": null,
            "start": 540,
            "end": 588
          }
        ],
        "start": 536,
        "end": 590
      },
      "start": 516,
      "end": 590
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 596,
          "end": 602
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 607,
          "end": 611
        },
        "start": 596,
        "end": 611
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 627,
                "end": 639
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: result = true; for (p in this) { if (p === \"encodeURI\") result = false; }  result === true;",
                  "raw": "'#2: result = true; for (p in this) { if (p === \"encodeURI\") result = false; }  result === true;'",
                  "start": 640,
                  "end": 737
                }
              ],
              "start": 623,
              "end": 738
            },
            "start": 617,
            "end": 739
          }
        ],
        "start": 613,
        "end": 741
      },
      "alternate": null,
      "start": 592,
      "end": 741
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 742
}