{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "illegal",
            "start": 335,
            "end": 342
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "Zm.9v",
                "raw": "'Zm.9v'",
                "start": 349,
                "end": 356
              },
              {
                "type": "Literal",
                "value": "Zm9v^",
                "raw": "'Zm9v^'",
                "start": 360,
                "end": 367
              },
              {
                "type": "Literal",
                "value": "Zg==&",
                "raw": "'Zg==&'",
                "start": 371,
                "end": 378
              },
              {
                "type": "Literal",
                "value": "Z−==",
                "raw": "'Z−=='",
                "start": 382,
                "end": 388
              },
              {
                "type": "Literal",
                "value": "Z＋==",
                "raw": "'Z＋=='",
                "start": 415,
                "end": 421
              },
              {
                "type": "Literal",
                "value": "Zg ==",
                "raw": "'Zg\\u00A0=='",
                "start": 457,
                "end": 469
              },
              {
                "type": "Literal",
                "value": "Zg ==",
                "raw": "'Zg\\u2009=='",
                "start": 481,
                "end": 493
              },
              {
                "type": "Literal",
                "value": "Zg ==",
                "raw": "'Zg\\u2028=='",
                "start": 511,
                "end": 523
              }
            ],
            "start": 345,
            "end": 544
          },
          "start": 335,
          "end": 544
        }
      ],
      "start": 331,
      "end": 545
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "illegal",
            "start": 546,
            "end": 553
          },
          "property": {
            "type": "Identifier",
            "name": "forEach",
            "start": 554,
            "end": 561
          },
          "optional": false,
          "computed": false,
          "start": 546,
          "end": 561
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "value",
                "start": 571,
                "end": 576
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "assert",
                        "start": 582,
                        "end": 588
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "throws",
                        "start": 589,
                        "end": 595
                      },
                      "optional": false,
                      "computed": false,
                      "start": 582,
                      "end": 595
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "SyntaxError",
                        "start": 596,
                        "end": 607
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "Uint8Array",
                                    "start": 626,
                                    "end": 636
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fromBase64",
                                    "start": 637,
                                    "end": 647
                                  },
                                  "optional": false,
                                  "computed": false,
                                  "start": 626,
                                  "end": 647
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "value",
                                    "start": 648,
                                    "end": 653
                                  }
                                ],
                                "optional": false,
                                "start": 626,
                                "end": 654
                              },
                              "start": 626,
                              "end": 654
                            }
                          ],
                          "start": 620,
                          "end": 658
                        },
                        "expression": false,
                        "start": 609,
                        "end": 658
                      }
                    ],
                    "optional": false,
                    "start": 582,
                    "end": 659
                  },
                  "start": 582,
                  "end": 660
                }
              ],
              "start": 578,
              "end": 662
            },
            "expression": false,
            "start": 562,
            "end": 662
          }
        ],
        "optional": false,
        "start": 546,
        "end": 663
      },
      "start": 546,
      "end": 664
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 665
}