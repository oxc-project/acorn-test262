{
  "type": "Program",
  "start": 0,
  "end": 908,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 685,
      "end": 789,
      "expression": {
        "type": "CallExpression",
        "start": 685,
        "end": 788,
        "callee": {
          "type": "MemberExpression",
          "start": 685,
          "end": 701,
          "object": {
            "type": "Identifier",
            "start": 685,
            "end": 691,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 692,
            "end": 701,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 702,
            "end": 730,
            "callee": {
              "type": "Identifier",
              "start": 702,
              "end": 715,
              "name": "isConstructor"
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "start": 716,
                "end": 729,
                "object": {
                  "type": "Identifier",
                  "start": 716,
                  "end": 721,
                  "name": "Array"
                },
                "property": {
                  "type": "Identifier",
                  "start": 722,
                  "end": 729,
                  "name": "isArray"
                },
                "optional": false,
                "computed": false
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 732,
            "end": 737,
            "value": false,
            "raw": "false"
          },
          {
            "type": "Literal",
            "start": 739,
            "end": 787,
            "value": "isConstructor(Array.isArray) must return false",
            "raw": "'isConstructor(Array.isArray) must return false'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 791,
      "end": 906,
      "expression": {
        "type": "CallExpression",
        "start": 791,
        "end": 905,
        "callee": {
          "type": "MemberExpression",
          "start": 791,
          "end": 804,
          "object": {
            "type": "Identifier",
            "start": 791,
            "end": 797,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 798,
            "end": 804,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 805,
            "end": 814,
            "name": "TypeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 816,
            "end": 850,
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 822,
              "end": 850,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 826,
                  "end": 848,
                  "expression": {
                    "type": "NewExpression",
                    "start": 826,
                    "end": 847,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 830,
                      "end": 843,
                      "object": {
                        "type": "Identifier",
                        "start": 830,
                        "end": 835,
                        "name": "Array"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 836,
                        "end": 843,
                        "name": "isArray"
                      },
                      "optional": false,
                      "computed": false
                    },
                    "arguments": [
                      {
                        "type": "ArrayExpression",
                        "start": 844,
                        "end": 846,
                        "elements": []
                      }
                    ]
                  }
                }
              ]
            },
            "id": null,
            "generator": false
          },
          {
            "type": "Literal",
            "start": 852,
            "end": 904,
            "value": "new Array.isArray([]) throws a TypeError exception",
            "raw": "'new Array.isArray([]) throws a TypeError exception'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}