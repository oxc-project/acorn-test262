{
  "type": "Program",
  "start": 0,
  "end": 613,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 384,
      "end": 395,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 388,
          "end": 394,
          "id": {
            "type": "Identifier",
            "start": 388,
            "end": 389,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 392,
            "end": 394,
            "elements": []
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 396,
      "end": 406,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 400,
          "end": 405,
          "id": {
            "type": "Identifier",
            "start": 400,
            "end": 401,
            "name": "k"
          },
          "init": {
            "type": "Literal",
            "start": 404,
            "end": 405,
            "value": 1,
            "raw": "1"
          }
        }
      ]
    },
    {
      "type": "ForStatement",
      "start": 407,
      "end": 468,
      "init": {
        "type": "VariableDeclaration",
        "start": 412,
        "end": 421,
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 416,
            "end": 421,
            "id": {
              "type": "Identifier",
              "start": 416,
              "end": 417,
              "name": "i"
            },
            "init": {
              "type": "Literal",
              "start": 420,
              "end": 421,
              "value": 0,
              "raw": "0"
            }
          }
        ]
      },
      "test": {
        "type": "BinaryExpression",
        "start": 423,
        "end": 429,
        "left": {
          "type": "Identifier",
          "start": 423,
          "end": 424,
          "name": "i"
        },
        "operator": "<",
        "right": {
          "type": "Literal",
          "start": 427,
          "end": 429,
          "value": 32,
          "raw": "32"
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 431,
        "end": 434,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 431,
          "end": 432,
          "name": "i"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 436,
        "end": 468,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 440,
            "end": 450,
            "expression": {
              "type": "AssignmentExpression",
              "start": 440,
              "end": 449,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 440,
                "end": 441,
                "name": "k"
              },
              "right": {
                "type": "BinaryExpression",
                "start": 444,
                "end": 449,
                "left": {
                  "type": "Identifier",
                  "start": 444,
                  "end": 445,
                  "name": "k"
                },
                "operator": "*",
                "right": {
                  "type": "Literal",
                  "start": 448,
                  "end": 449,
                  "value": 2,
                  "raw": "2"
                }
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 453,
            "end": 466,
            "expression": {
              "type": "AssignmentExpression",
              "start": 453,
              "end": 465,
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "start": 453,
                "end": 461,
                "object": {
                  "type": "Identifier",
                  "start": 453,
                  "end": 454,
                  "name": "x"
                },
                "property": {
                  "type": "BinaryExpression",
                  "start": 455,
                  "end": 460,
                  "left": {
                    "type": "Identifier",
                    "start": 455,
                    "end": 456,
                    "name": "k"
                  },
                  "operator": "-",
                  "right": {
                    "type": "Literal",
                    "start": 459,
                    "end": 460,
                    "value": 2,
                    "raw": "2"
                  }
                },
                "optional": false,
                "computed": true
              },
              "right": {
                "type": "Identifier",
                "start": 464,
                "end": 465,
                "name": "k"
              }
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 470,
      "end": 476,
      "expression": {
        "type": "AssignmentExpression",
        "start": 470,
        "end": 475,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 470,
          "end": 471,
          "name": "k"
        },
        "right": {
          "type": "Literal",
          "start": 474,
          "end": 475,
          "value": 1,
          "raw": "1"
        }
      }
    },
    {
      "type": "ForStatement",
      "start": 477,
      "end": 612,
      "init": {
        "type": "AssignmentExpression",
        "start": 482,
        "end": 487,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 482,
          "end": 483,
          "name": "i"
        },
        "right": {
          "type": "Literal",
          "start": 486,
          "end": 487,
          "value": 0,
          "raw": "0"
        }
      },
      "test": {
        "type": "BinaryExpression",
        "start": 489,
        "end": 495,
        "left": {
          "type": "Identifier",
          "start": 489,
          "end": 490,
          "name": "i"
        },
        "operator": "<",
        "right": {
          "type": "Literal",
          "start": 493,
          "end": 495,
          "value": 32,
          "raw": "32"
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 497,
        "end": 500,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 497,
          "end": 498,
          "name": "i"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 502,
        "end": 612,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 506,
            "end": 516,
            "expression": {
              "type": "AssignmentExpression",
              "start": 506,
              "end": 515,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 506,
                "end": 507,
                "name": "k"
              },
              "right": {
                "type": "BinaryExpression",
                "start": 510,
                "end": 515,
                "left": {
                  "type": "Identifier",
                  "start": 510,
                  "end": 511,
                  "name": "k"
                },
                "operator": "*",
                "right": {
                  "type": "Literal",
                  "start": 514,
                  "end": 515,
                  "value": 2,
                  "raw": "2"
                }
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 519,
            "end": 610,
            "expression": {
              "type": "CallExpression",
              "start": 519,
              "end": 609,
              "callee": {
                "type": "MemberExpression",
                "start": 519,
                "end": 535,
                "object": {
                  "type": "Identifier",
                  "start": 519,
                  "end": 525,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 526,
                  "end": 535,
                  "name": "sameValue"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "start": 536,
                  "end": 544,
                  "object": {
                    "type": "Identifier",
                    "start": 536,
                    "end": 537,
                    "name": "x"
                  },
                  "property": {
                    "type": "BinaryExpression",
                    "start": 538,
                    "end": 543,
                    "left": {
                      "type": "Identifier",
                      "start": 538,
                      "end": 539,
                      "name": "k"
                    },
                    "operator": "-",
                    "right": {
                      "type": "Literal",
                      "start": 542,
                      "end": 543,
                      "value": 2,
                      "raw": "2"
                    }
                  },
                  "optional": false,
                  "computed": true
                },
                {
                  "type": "Identifier",
                  "start": 546,
                  "end": 547,
                  "name": "k"
                },
                {
                  "type": "Literal",
                  "start": 549,
                  "end": 608,
                  "value": "The value of x[k - 2] is expected to equal the value of k",
                  "raw": "'The value of x[k - 2] is expected to equal the value of k'"
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}