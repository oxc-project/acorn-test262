{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Array",
                "start": 377,
                "end": 382
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 383,
                  "end": 386
                }
              ],
              "start": 373,
              "end": 387
            },
            "start": 373,
            "end": 388
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 401,
                "end": 413
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1.1: new Array(NaN) throw RangeError. Actual: ",
                    "raw": "'#1.1: new Array(NaN) throw RangeError. Actual: '",
                    "start": 414,
                    "end": 463
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Array",
                        "start": 471,
                        "end": 476
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "NaN",
                          "start": 477,
                          "end": 480
                        }
                      ],
                      "start": 467,
                      "end": 481
                    },
                    "start": 466,
                    "end": 482
                  },
                  "start": 414,
                  "end": 482
                }
              ],
              "start": 397,
              "end": 483
            },
            "start": 391,
            "end": 484
          }
        ],
        "start": 369,
        "end": 486
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 494,
          "end": 495
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "assert",
                    "start": 501,
                    "end": 507
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "sameValue",
                    "start": 508,
                    "end": 517
                  },
                  "optional": false,
                  "computed": false,
                  "start": 501,
                  "end": 517
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 523,
                      "end": 524
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "name": "RangeError",
                      "start": 536,
                      "end": 546
                    },
                    "start": 523,
                    "end": 546
                  },
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 552,
                    "end": 556
                  },
                  {
                    "type": "Literal",
                    "value": "The result of evaluating (e instanceof RangeError) is expected to be true",
                    "raw": "'The result of evaluating (e instanceof RangeError) is expected to be true'",
                    "start": 562,
                    "end": 637
                  }
                ],
                "optional": false,
                "start": 501,
                "end": 641
              },
              "start": 501,
              "end": 642
            }
          ],
          "start": 497,
          "end": 644
        },
        "start": 487,
        "end": 644
      },
      "finalizer": null,
      "start": 365,
      "end": 644
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Array",
                "start": 658,
                "end": 663
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 664,
                    "end": 670
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "POSITIVE_INFINITY",
                    "start": 671,
                    "end": 688
                  },
                  "optional": false,
                  "computed": false,
                  "start": 664,
                  "end": 688
                }
              ],
              "start": 654,
              "end": 689
            },
            "start": 654,
            "end": 690
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 703,
                "end": 715
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2.1: new Array(Number.POSITIVE_INFINITY) throw RangeError. Actual: ",
                    "raw": "'#2.1: new Array(Number.POSITIVE_INFINITY) throw RangeError. Actual: '",
                    "start": 716,
                    "end": 786
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Array",
                        "start": 794,
                        "end": 799
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 800,
                            "end": 806
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "POSITIVE_INFINITY",
                            "start": 807,
                            "end": 824
                          },
                          "optional": false,
                          "computed": false,
                          "start": 800,
                          "end": 824
                        }
                      ],
                      "start": 790,
                      "end": 825
                    },
                    "start": 789,
                    "end": 826
                  },
                  "start": 716,
                  "end": 826
                }
              ],
              "start": 699,
              "end": 827
            },
            "start": 693,
            "end": 828
          }
        ],
        "start": 650,
        "end": 830
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 838,
          "end": 839
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "assert",
                    "start": 845,
                    "end": 851
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "sameValue",
                    "start": 852,
                    "end": 861
                  },
                  "optional": false,
                  "computed": false,
                  "start": 845,
                  "end": 861
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 867,
                      "end": 868
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "name": "RangeError",
                      "start": 880,
                      "end": 890
                    },
                    "start": 867,
                    "end": 890
                  },
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 896,
                    "end": 900
                  },
                  {
                    "type": "Literal",
                    "value": "The result of evaluating (e instanceof RangeError) is expected to be true",
                    "raw": "'The result of evaluating (e instanceof RangeError) is expected to be true'",
                    "start": 906,
                    "end": 981
                  }
                ],
                "optional": false,
                "start": 845,
                "end": 985
              },
              "start": 845,
              "end": 986
            }
          ],
          "start": 841,
          "end": 988
        },
        "start": 831,
        "end": 988
      },
      "finalizer": null,
      "start": 646,
      "end": 988
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Array",
                "start": 1002,
                "end": 1007
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 1008,
                    "end": 1014
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "NEGATIVE_INFINITY",
                    "start": 1015,
                    "end": 1032
                  },
                  "optional": false,
                  "computed": false,
                  "start": 1008,
                  "end": 1032
                }
              ],
              "start": 998,
              "end": 1033
            },
            "start": 998,
            "end": 1034
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1047,
                "end": 1059
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3.1: new Array(Number.NEGATIVE_INFINITY) throw RangeError. Actual: ",
                    "raw": "'#3.1: new Array(Number.NEGATIVE_INFINITY) throw RangeError. Actual: '",
                    "start": 1060,
                    "end": 1130
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Array",
                        "start": 1138,
                        "end": 1143
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1144,
                            "end": 1150
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "NEGATIVE_INFINITY",
                            "start": 1151,
                            "end": 1168
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1144,
                          "end": 1168
                        }
                      ],
                      "start": 1134,
                      "end": 1169
                    },
                    "start": 1133,
                    "end": 1170
                  },
                  "start": 1060,
                  "end": 1170
                }
              ],
              "start": 1043,
              "end": 1171
            },
            "start": 1037,
            "end": 1172
          }
        ],
        "start": 994,
        "end": 1174
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1182,
          "end": 1183
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "assert",
                    "start": 1189,
                    "end": 1195
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "sameValue",
                    "start": 1196,
                    "end": 1205
                  },
                  "optional": false,
                  "computed": false,
                  "start": 1189,
                  "end": 1205
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 1211,
                      "end": 1212
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "name": "RangeError",
                      "start": 1224,
                      "end": 1234
                    },
                    "start": 1211,
                    "end": 1234
                  },
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 1240,
                    "end": 1244
                  },
                  {
                    "type": "Literal",
                    "value": "The result of evaluating (e instanceof RangeError) is expected to be true",
                    "raw": "'The result of evaluating (e instanceof RangeError) is expected to be true'",
                    "start": 1250,
                    "end": 1325
                  }
                ],
                "optional": false,
                "start": 1189,
                "end": 1329
              },
              "start": 1189,
              "end": 1330
            }
          ],
          "start": 1185,
          "end": 1332
        },
        "start": 1175,
        "end": 1332
      },
      "finalizer": null,
      "start": 990,
      "end": 1332
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1333
}