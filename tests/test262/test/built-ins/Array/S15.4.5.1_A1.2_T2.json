{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Array",
              "start": 450,
              "end": 455
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 456,
              "end": 465
            },
            "optional": false,
            "computed": false,
            "start": 450,
            "end": 465
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 466,
            "end": 467
          },
          "optional": false,
          "computed": true,
          "start": 450,
          "end": 468
        },
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 472,
            "end": 473
          },
          "prefix": true,
          "start": 471,
          "end": 473
        },
        "start": 450,
        "end": 473
      },
      "start": 450,
      "end": 474
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 479,
            "end": 480
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 484,
                "end": 485
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 487,
                "end": 488
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 490,
                "end": 491
              }
            ],
            "start": 483,
            "end": 492
          },
          "start": 479,
          "end": 492
        }
      ],
      "start": 475,
      "end": 493
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 494,
            "end": 500
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 501,
            "end": 510
          },
          "optional": false,
          "computed": false,
          "start": 494,
          "end": 510
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "x",
              "start": 511,
              "end": 512
            },
            "property": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 513,
              "end": 514
            },
            "optional": false,
            "computed": true,
            "start": 511,
            "end": 515
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 517,
            "end": 518
          },
          {
            "type": "Literal",
            "value": "The value of x[2] is expected to be 2",
            "raw": "'The value of x[2] is expected to be 2'",
            "start": 520,
            "end": 559
          }
        ],
        "optional": false,
        "start": 494,
        "end": 560
      },
      "start": 494,
      "end": 561
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 563,
            "end": 564
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 565,
            "end": 571
          },
          "optional": false,
          "computed": false,
          "start": 563,
          "end": 571
        },
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 574,
          "end": 575
        },
        "start": 563,
        "end": 575
      },
      "start": 563,
      "end": 576
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 577,
            "end": 583
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 584,
            "end": 593
          },
          "optional": false,
          "computed": false,
          "start": 577,
          "end": 593
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "x",
              "start": 594,
              "end": 595
            },
            "property": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 596,
              "end": 597
            },
            "optional": false,
            "computed": true,
            "start": 594,
            "end": 598
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 601,
              "end": 602
            },
            "prefix": true,
            "start": 600,
            "end": 602
          },
          {
            "type": "Literal",
            "value": "The value of x[2] is expected to be -1",
            "raw": "'The value of x[2] is expected to be -1'",
            "start": 604,
            "end": 644
          }
        ],
        "optional": false,
        "start": 577,
        "end": 645
      },
      "start": 577,
      "end": 646
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 647
}