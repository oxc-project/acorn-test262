{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 266,
            "end": 267
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 271,
                "end": 272
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 274,
                "end": 275
              }
            ],
            "start": 270,
            "end": 276
          },
          "start": 266,
          "end": 276
        }
      ],
      "start": 262,
      "end": 277
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 282,
            "end": 285
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 288,
                "end": 289
              },
              "property": {
                "type": "Identifier",
                "name": "splice",
                "start": 290,
                "end": 296
              },
              "optional": false,
              "computed": false,
              "start": 288,
              "end": 296
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 297,
                "end": 298
              },
              {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 300,
                  "end": 306
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 307,
                  "end": 324
                },
                "optional": false,
                "computed": false,
                "start": 300,
                "end": 324
              }
            ],
            "optional": false,
            "start": 288,
            "end": 325
          },
          "start": 282,
          "end": 325
        }
      ],
      "start": 278,
      "end": 326
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 328,
            "end": 331
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 332,
            "end": 340
          },
          "optional": false,
          "computed": false,
          "start": 328,
          "end": 340
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 343,
              "end": 349
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 350,
              "end": 359
            },
            "optional": false,
            "computed": false,
            "start": 343,
            "end": 359
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 360,
            "end": 368
          },
          "optional": false,
          "computed": false,
          "start": 343,
          "end": 368
        },
        "start": 328,
        "end": 368
      },
      "start": 328,
      "end": 369
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 374,
              "end": 377
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 378,
              "end": 386
            },
            "optional": false,
            "computed": false,
            "start": 374,
            "end": 386
          },
          "arguments": [],
          "optional": false,
          "start": 374,
          "end": 388
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 393,
              "end": 403
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 406,
              "end": 413
            },
            "start": 393,
            "end": 413
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 416,
            "end": 419
          },
          "start": 393,
          "end": 419
        },
        "start": 374,
        "end": 419
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 435,
                "end": 447
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#0: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); arr is Array object. Actual: ",
                    "raw": "'#0: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); arr is Array object. Actual: '",
                    "start": 448,
                    "end": 546
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 550,
                          "end": 553
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 554,
                          "end": 562
                        },
                        "optional": false,
                        "computed": false,
                        "start": 550,
                        "end": 562
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 550,
                      "end": 564
                    },
                    "start": 549,
                    "end": 565
                  },
                  "start": 448,
                  "end": 565
                }
              ],
              "start": 431,
              "end": 566
            },
            "start": 425,
            "end": 567
          }
        ],
        "start": 421,
        "end": 569
      },
      "alternate": null,
      "start": 370,
      "end": 569
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 575,
            "end": 578
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 579,
            "end": 585
          },
          "optional": false,
          "computed": false,
          "start": 575,
          "end": 585
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 590,
          "end": 591
        },
        "start": 575,
        "end": 591
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 607,
                "end": 619
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); arr.length === 0. Actual: ",
                    "raw": "'#1: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); arr.length === 0. Actual: '",
                    "start": 620,
                    "end": 715
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 719,
                        "end": 722
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 723,
                        "end": 729
                      },
                      "optional": false,
                      "computed": false,
                      "start": 719,
                      "end": 729
                    },
                    "start": 718,
                    "end": 730
                  },
                  "start": 620,
                  "end": 730
                }
              ],
              "start": 603,
              "end": 731
            },
            "start": 597,
            "end": 732
          }
        ],
        "start": 593,
        "end": 734
      },
      "alternate": null,
      "start": 571,
      "end": 734
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 740,
            "end": 741
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 742,
            "end": 748
          },
          "optional": false,
          "computed": false,
          "start": 740,
          "end": 748
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 753,
          "end": 754
        },
        "start": 740,
        "end": 754
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 770,
                "end": 782
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); x.length === 2. Actual: ",
                    "raw": "'#2: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); x.length === 2. Actual: '",
                    "start": 783,
                    "end": 876
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 880,
                        "end": 881
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 882,
                        "end": 888
                      },
                      "optional": false,
                      "computed": false,
                      "start": 880,
                      "end": 888
                    },
                    "start": 879,
                    "end": 889
                  },
                  "start": 783,
                  "end": 889
                }
              ],
              "start": 766,
              "end": 890
            },
            "start": 760,
            "end": 891
          }
        ],
        "start": 756,
        "end": 893
      },
      "alternate": null,
      "start": 736,
      "end": 893
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 899,
            "end": 900
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 901,
            "end": 902
          },
          "optional": false,
          "computed": true,
          "start": 899,
          "end": 903
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 908,
          "end": 909
        },
        "start": 899,
        "end": 909
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 925,
                "end": 937
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); x[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); x[0] === 0. Actual: '",
                    "start": 938,
                    "end": 1027
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1031,
                        "end": 1032
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1033,
                        "end": 1034
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1031,
                      "end": 1035
                    },
                    "start": 1030,
                    "end": 1036
                  },
                  "start": 938,
                  "end": 1036
                }
              ],
              "start": 921,
              "end": 1037
            },
            "start": 915,
            "end": 1038
          }
        ],
        "start": 911,
        "end": 1040
      },
      "alternate": null,
      "start": 895,
      "end": 1040
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1046,
            "end": 1047
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1048,
            "end": 1049
          },
          "optional": false,
          "computed": true,
          "start": 1046,
          "end": 1050
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1055,
          "end": 1056
        },
        "start": 1046,
        "end": 1056
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1072,
                "end": 1084
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); x[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); x[1] === 1. Actual: '",
                    "start": 1085,
                    "end": 1174
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1178,
                        "end": 1179
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1180,
                        "end": 1181
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1178,
                      "end": 1182
                    },
                    "start": 1177,
                    "end": 1183
                  },
                  "start": 1085,
                  "end": 1183
                }
              ],
              "start": 1068,
              "end": 1184
            },
            "start": 1062,
            "end": 1185
          }
        ],
        "start": 1058,
        "end": 1187
      },
      "alternate": null,
      "start": 1042,
      "end": 1187
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1188
}