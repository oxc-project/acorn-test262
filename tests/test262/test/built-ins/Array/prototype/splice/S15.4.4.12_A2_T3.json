{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "obj",
            "start": 408,
            "end": 411
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 418,
                  "end": 419
                },
                "value": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 421,
                  "end": 422
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 418,
                "end": 422
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 426,
                  "end": 427
                },
                "value": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 429,
                  "end": 430
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 426,
                "end": 430
              }
            ],
            "start": 414,
            "end": 432
          },
          "start": 408,
          "end": 432
        }
      ],
      "start": 404,
      "end": 433
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "obj",
            "start": 434,
            "end": 437
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 438,
            "end": 444
          },
          "optional": false,
          "computed": false,
          "start": 434,
          "end": 444
        },
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 447,
          "end": 448
        },
        "start": 434,
        "end": 448
      },
      "start": 434,
      "end": 449
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "obj",
            "start": 450,
            "end": 453
          },
          "property": {
            "type": "Identifier",
            "name": "splice",
            "start": 454,
            "end": 460
          },
          "optional": false,
          "computed": false,
          "start": 450,
          "end": 460
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Array",
              "start": 463,
              "end": 468
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 469,
              "end": 478
            },
            "optional": false,
            "computed": false,
            "start": 463,
            "end": 478
          },
          "property": {
            "type": "Identifier",
            "name": "splice",
            "start": 479,
            "end": 485
          },
          "optional": false,
          "computed": false,
          "start": 463,
          "end": 485
        },
        "start": 450,
        "end": 485
      },
      "start": 450,
      "end": 486
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 491,
            "end": 494
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "obj",
                "start": 497,
                "end": 500
              },
              "property": {
                "type": "Identifier",
                "name": "splice",
                "start": 501,
                "end": 507
              },
              "optional": false,
              "computed": false,
              "start": 497,
              "end": 507
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 508,
                "end": 509
              },
              {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 512,
                  "end": 513
                },
                "prefix": true,
                "start": 511,
                "end": 513
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 515,
                "end": 516
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 518,
                "end": 519
              }
            ],
            "optional": false,
            "start": 497,
            "end": 520
          },
          "start": 491,
          "end": 520
        }
      ],
      "start": 487,
      "end": 521
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 523,
            "end": 526
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 527,
            "end": 535
          },
          "optional": false,
          "computed": false,
          "start": 523,
          "end": 535
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 538,
              "end": 544
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 545,
              "end": 554
            },
            "optional": false,
            "computed": false,
            "start": 538,
            "end": 554
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 555,
            "end": 563
          },
          "optional": false,
          "computed": false,
          "start": 538,
          "end": 563
        },
        "start": 523,
        "end": 563
      },
      "start": 523,
      "end": 564
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 569,
              "end": 572
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 573,
              "end": 581
            },
            "optional": false,
            "computed": false,
            "start": 569,
            "end": 581
          },
          "arguments": [],
          "optional": false,
          "start": 569,
          "end": 583
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 588,
              "end": 598
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 601,
              "end": 608
            },
            "start": 588,
            "end": 608
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 611,
            "end": 614
          },
          "start": 588,
          "end": 614
        },
        "start": 569,
        "end": 614
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 630,
                "end": 642
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#0: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); arr is Array object. Actual: ",
                    "raw": "'#0: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); arr is Array object. Actual: '",
                    "start": 643,
                    "end": 784
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 788,
                          "end": 791
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 792,
                          "end": 800
                        },
                        "optional": false,
                        "computed": false,
                        "start": 788,
                        "end": 800
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 788,
                      "end": 802
                    },
                    "start": 787,
                    "end": 803
                  },
                  "start": 643,
                  "end": 803
                }
              ],
              "start": 626,
              "end": 804
            },
            "start": 620,
            "end": 805
          }
        ],
        "start": 616,
        "end": 807
      },
      "alternate": null,
      "start": 565,
      "end": 807
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 813,
            "end": 816
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 817,
            "end": 823
          },
          "optional": false,
          "computed": false,
          "start": 813,
          "end": 823
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 828,
          "end": 829
        },
        "start": 813,
        "end": 829
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 845,
                "end": 857
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); arr.length === 0. Actual: ",
                    "raw": "'#1: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); arr.length === 0. Actual: '",
                    "start": 858,
                    "end": 996
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1000,
                        "end": 1003
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1004,
                        "end": 1010
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1000,
                      "end": 1010
                    },
                    "start": 999,
                    "end": 1011
                  },
                  "start": 858,
                  "end": 1011
                }
              ],
              "start": 841,
              "end": 1012
            },
            "start": 835,
            "end": 1013
          }
        ],
        "start": 831,
        "end": 1015
      },
      "alternate": null,
      "start": 809,
      "end": 1015
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "obj",
            "start": 1021,
            "end": 1024
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1025,
            "end": 1031
          },
          "optional": false,
          "computed": false,
          "start": 1021,
          "end": 1031
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 4,
          "raw": "4",
          "start": 1036,
          "end": 1037
        },
        "start": 1021,
        "end": 1037
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1053,
                "end": 1065
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); obj.length === 4. Actual: ",
                    "raw": "'#2: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); obj.length === 4. Actual: '",
                    "start": 1066,
                    "end": 1204
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "obj",
                        "start": 1208,
                        "end": 1211
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1212,
                        "end": 1218
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1208,
                      "end": 1218
                    },
                    "start": 1207,
                    "end": 1219
                  },
                  "start": 1066,
                  "end": 1219
                }
              ],
              "start": 1049,
              "end": 1220
            },
            "start": 1043,
            "end": 1221
          }
        ],
        "start": 1039,
        "end": 1223
      },
      "alternate": null,
      "start": 1017,
      "end": 1223
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "obj",
            "start": 1229,
            "end": 1232
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1233,
            "end": 1234
          },
          "optional": false,
          "computed": true,
          "start": 1229,
          "end": 1235
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1240,
          "end": 1241
        },
        "start": 1229,
        "end": 1241
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1257,
                "end": 1269
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); obj[0] === 2. Actual: ",
                    "raw": "'#3: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); obj[0] === 2. Actual: '",
                    "start": 1270,
                    "end": 1404
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "obj",
                        "start": 1408,
                        "end": 1411
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1412,
                        "end": 1413
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1408,
                      "end": 1414
                    },
                    "start": 1407,
                    "end": 1415
                  },
                  "start": 1270,
                  "end": 1415
                }
              ],
              "start": 1253,
              "end": 1416
            },
            "start": 1247,
            "end": 1417
          }
        ],
        "start": 1243,
        "end": 1419
      },
      "alternate": null,
      "start": 1225,
      "end": 1419
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "obj",
            "start": 1425,
            "end": 1428
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1429,
            "end": 1430
          },
          "optional": false,
          "computed": true,
          "start": 1425,
          "end": 1431
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 1436,
          "end": 1437
        },
        "start": 1425,
        "end": 1437
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1453,
                "end": 1465
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); obj[1] === 3. Actual: ",
                    "raw": "'#4: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); obj[1] === 3. Actual: '",
                    "start": 1466,
                    "end": 1600
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "obj",
                        "start": 1604,
                        "end": 1607
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1608,
                        "end": 1609
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1604,
                      "end": 1610
                    },
                    "start": 1603,
                    "end": 1611
                  },
                  "start": 1466,
                  "end": 1611
                }
              ],
              "start": 1449,
              "end": 1612
            },
            "start": 1443,
            "end": 1613
          }
        ],
        "start": 1439,
        "end": 1615
      },
      "alternate": null,
      "start": 1421,
      "end": 1615
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "obj",
            "start": 1621,
            "end": 1624
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1625,
            "end": 1626
          },
          "optional": false,
          "computed": true,
          "start": 1621,
          "end": 1627
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1632,
          "end": 1633
        },
        "start": 1621,
        "end": 1633
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1649,
                "end": 1661
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); obj[2] === 0. Actual: ",
                    "raw": "'#5: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); obj[2] === 0. Actual: '",
                    "start": 1662,
                    "end": 1796
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "obj",
                        "start": 1800,
                        "end": 1803
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1804,
                        "end": 1805
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1800,
                      "end": 1806
                    },
                    "start": 1799,
                    "end": 1807
                  },
                  "start": 1662,
                  "end": 1807
                }
              ],
              "start": 1645,
              "end": 1808
            },
            "start": 1639,
            "end": 1809
          }
        ],
        "start": 1635,
        "end": 1811
      },
      "alternate": null,
      "start": 1617,
      "end": 1811
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "obj",
            "start": 1817,
            "end": 1820
          },
          "property": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 1821,
            "end": 1822
          },
          "optional": false,
          "computed": true,
          "start": 1817,
          "end": 1823
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1828,
          "end": 1829
        },
        "start": 1817,
        "end": 1829
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1845,
                "end": 1857
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); obj[3] === 1. Actual: ",
                    "raw": "'#6: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); obj[3] === 1. Actual: '",
                    "start": 1858,
                    "end": 1992
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "obj",
                        "start": 1996,
                        "end": 1999
                      },
                      "property": {
                        "type": "Literal",
                        "value": 3,
                        "raw": "3",
                        "start": 2000,
                        "end": 2001
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1996,
                      "end": 2002
                    },
                    "start": 1995,
                    "end": 2003
                  },
                  "start": 1858,
                  "end": 2003
                }
              ],
              "start": 1841,
              "end": 2004
            },
            "start": 1835,
            "end": 2005
          }
        ],
        "start": 1831,
        "end": 2007
      },
      "alternate": null,
      "start": 1813,
      "end": 2007
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "obj",
            "start": 2013,
            "end": 2016
          },
          "property": {
            "type": "Literal",
            "value": 4,
            "raw": "4",
            "start": 2017,
            "end": 2018
          },
          "optional": false,
          "computed": true,
          "start": 2013,
          "end": 2019
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 2024,
          "end": 2033
        },
        "start": 2013,
        "end": 2033
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2049,
                "end": 2061
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); obj[4] === undefined. Actual: ",
                    "raw": "'#7: var obj = {0:0,1:1}; obj.length = 2; obj.splice = Array.prototype.splice; var arr = obj.splice(0,-1,2,3); obj[4] === undefined. Actual: '",
                    "start": 2062,
                    "end": 2204
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "obj",
                        "start": 2208,
                        "end": 2211
                      },
                      "property": {
                        "type": "Literal",
                        "value": 4,
                        "raw": "4",
                        "start": 2212,
                        "end": 2213
                      },
                      "optional": false,
                      "computed": true,
                      "start": 2208,
                      "end": 2214
                    },
                    "start": 2207,
                    "end": 2215
                  },
                  "start": 2062,
                  "end": 2215
                }
              ],
              "start": 2045,
              "end": 2216
            },
            "start": 2039,
            "end": 2217
          }
        ],
        "start": 2035,
        "end": 2219
      },
      "alternate": null,
      "start": 2009,
      "end": 2219
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2220
}