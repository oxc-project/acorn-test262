{
  "type": "Program",
  "start": 0,
  "end": 1522,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 250,
      "end": 271,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 254,
          "end": 270,
          "id": {
            "type": "Identifier",
            "start": 254,
            "end": 255,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 258,
            "end": 270,
            "elements": [
              {
                "type": "Literal",
                "start": 259,
                "end": 260,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Literal",
                "start": 262,
                "end": 263,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 265,
                "end": 266,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 268,
                "end": 269,
                "value": 3,
                "raw": "3"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 272,
      "end": 320,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 276,
          "end": 319,
          "id": {
            "type": "Identifier",
            "start": 276,
            "end": 279,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 282,
            "end": 319,
            "callee": {
              "type": "MemberExpression",
              "start": 282,
              "end": 290,
              "object": {
                "type": "Identifier",
                "start": 282,
                "end": 283,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 284,
                "end": 290,
                "name": "splice"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "start": 291,
                "end": 315,
                "object": {
                  "type": "Identifier",
                  "start": 291,
                  "end": 297,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 298,
                  "end": 315,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              },
              {
                "type": "Literal",
                "start": 317,
                "end": 318,
                "value": 3,
                "raw": "3"
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 322,
      "end": 363,
      "expression": {
        "type": "AssignmentExpression",
        "start": 322,
        "end": 362,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 322,
          "end": 334,
          "object": {
            "type": "Identifier",
            "start": 322,
            "end": 325,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 326,
            "end": 334,
            "name": "getClass"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 337,
          "end": 362,
          "object": {
            "type": "MemberExpression",
            "start": 337,
            "end": 353,
            "object": {
              "type": "Identifier",
              "start": 337,
              "end": 343,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 344,
              "end": 353,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 354,
            "end": 362,
            "name": "toString"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 364,
      "end": 567,
      "test": {
        "type": "BinaryExpression",
        "start": 368,
        "end": 413,
        "left": {
          "type": "CallExpression",
          "start": 368,
          "end": 382,
          "callee": {
            "type": "MemberExpression",
            "start": 368,
            "end": 380,
            "object": {
              "type": "Identifier",
              "start": 368,
              "end": 371,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 372,
              "end": 380,
              "name": "getClass"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 387,
          "end": 413,
          "left": {
            "type": "BinaryExpression",
            "start": 387,
            "end": 407,
            "left": {
              "type": "Literal",
              "start": 387,
              "end": 397,
              "value": "[object ",
              "raw": "\"[object \""
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 400,
              "end": 407,
              "value": "Array",
              "raw": "\"Array\""
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 410,
            "end": 413,
            "value": "]",
            "raw": "\"]\""
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 415,
        "end": 567,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 419,
            "end": 565,
            "argument": {
              "type": "NewExpression",
              "start": 425,
              "end": 564,
              "callee": {
                "type": "Identifier",
                "start": 429,
                "end": 441,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 442,
                  "end": 563,
                  "left": {
                    "type": "Literal",
                    "start": 442,
                    "end": 544,
                    "value": "#1: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr is Array object. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 547,
                    "end": 563,
                    "expression": {
                      "type": "CallExpression",
                      "start": 548,
                      "end": 562,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 548,
                        "end": 560,
                        "object": {
                          "type": "Identifier",
                          "start": 548,
                          "end": 551,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 552,
                          "end": 560,
                          "name": "getClass"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 569,
      "end": 736,
      "test": {
        "type": "BinaryExpression",
        "start": 573,
        "end": 589,
        "left": {
          "type": "MemberExpression",
          "start": 573,
          "end": 583,
          "object": {
            "type": "Identifier",
            "start": 573,
            "end": 576,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 577,
            "end": 583,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 588,
          "end": 589,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 591,
        "end": 736,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 595,
            "end": 734,
            "argument": {
              "type": "NewExpression",
              "start": 601,
              "end": 733,
              "callee": {
                "type": "Identifier",
                "start": 605,
                "end": 617,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 618,
                  "end": 732,
                  "left": {
                    "type": "Literal",
                    "start": 618,
                    "end": 717,
                    "value": "#2: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr.length === 3. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 720,
                    "end": 732,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 721,
                      "end": 731,
                      "object": {
                        "type": "Identifier",
                        "start": 721,
                        "end": 724,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 725,
                        "end": 731,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 738,
      "end": 893,
      "test": {
        "type": "BinaryExpression",
        "start": 742,
        "end": 754,
        "left": {
          "type": "MemberExpression",
          "start": 742,
          "end": 748,
          "object": {
            "type": "Identifier",
            "start": 742,
            "end": 745,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 746,
            "end": 747,
            "value": 0,
            "raw": "0"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 753,
          "end": 754,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 756,
        "end": 893,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 760,
            "end": 891,
            "argument": {
              "type": "NewExpression",
              "start": 766,
              "end": 890,
              "callee": {
                "type": "Identifier",
                "start": 770,
                "end": 782,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 783,
                  "end": 889,
                  "left": {
                    "type": "Literal",
                    "start": 783,
                    "end": 878,
                    "value": "#3: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr[0] === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 881,
                    "end": 889,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 882,
                      "end": 888,
                      "object": {
                        "type": "Identifier",
                        "start": 882,
                        "end": 885,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 886,
                        "end": 887,
                        "value": 0,
                        "raw": "0"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 895,
      "end": 1050,
      "test": {
        "type": "BinaryExpression",
        "start": 899,
        "end": 911,
        "left": {
          "type": "MemberExpression",
          "start": 899,
          "end": 905,
          "object": {
            "type": "Identifier",
            "start": 899,
            "end": 902,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 903,
            "end": 904,
            "value": 1,
            "raw": "1"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 910,
          "end": 911,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 913,
        "end": 1050,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 917,
            "end": 1048,
            "argument": {
              "type": "NewExpression",
              "start": 923,
              "end": 1047,
              "callee": {
                "type": "Identifier",
                "start": 927,
                "end": 939,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 940,
                  "end": 1046,
                  "left": {
                    "type": "Literal",
                    "start": 940,
                    "end": 1035,
                    "value": "#4: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr[1] === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1038,
                    "end": 1046,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1039,
                      "end": 1045,
                      "object": {
                        "type": "Identifier",
                        "start": 1039,
                        "end": 1042,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1043,
                        "end": 1044,
                        "value": 1,
                        "raw": "1"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1052,
      "end": 1207,
      "test": {
        "type": "BinaryExpression",
        "start": 1056,
        "end": 1068,
        "left": {
          "type": "MemberExpression",
          "start": 1056,
          "end": 1062,
          "object": {
            "type": "Identifier",
            "start": 1056,
            "end": 1059,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1060,
            "end": 1061,
            "value": 2,
            "raw": "2"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1067,
          "end": 1068,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1070,
        "end": 1207,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1074,
            "end": 1205,
            "argument": {
              "type": "NewExpression",
              "start": 1080,
              "end": 1204,
              "callee": {
                "type": "Identifier",
                "start": 1084,
                "end": 1096,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1097,
                  "end": 1203,
                  "left": {
                    "type": "Literal",
                    "start": 1097,
                    "end": 1192,
                    "value": "#5: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr[2] === 2. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1195,
                    "end": 1203,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1196,
                      "end": 1202,
                      "object": {
                        "type": "Identifier",
                        "start": 1196,
                        "end": 1199,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1200,
                        "end": 1201,
                        "value": 2,
                        "raw": "2"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1209,
      "end": 1370,
      "test": {
        "type": "BinaryExpression",
        "start": 1213,
        "end": 1227,
        "left": {
          "type": "MemberExpression",
          "start": 1213,
          "end": 1221,
          "object": {
            "type": "Identifier",
            "start": 1213,
            "end": 1214,
            "name": "x"
          },
          "property": {
            "type": "Identifier",
            "start": 1215,
            "end": 1221,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1226,
          "end": 1227,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1229,
        "end": 1370,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1233,
            "end": 1368,
            "argument": {
              "type": "NewExpression",
              "start": 1239,
              "end": 1367,
              "callee": {
                "type": "Identifier",
                "start": 1243,
                "end": 1255,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1256,
                  "end": 1366,
                  "left": {
                    "type": "Literal",
                    "start": 1256,
                    "end": 1353,
                    "value": "#6: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); x.length === 1. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); x.length === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1356,
                    "end": 1366,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1357,
                      "end": 1365,
                      "object": {
                        "type": "Identifier",
                        "start": 1357,
                        "end": 1358,
                        "name": "x"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1359,
                        "end": 1365,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1372,
      "end": 1521,
      "test": {
        "type": "BinaryExpression",
        "start": 1376,
        "end": 1386,
        "left": {
          "type": "MemberExpression",
          "start": 1376,
          "end": 1380,
          "object": {
            "type": "Identifier",
            "start": 1376,
            "end": 1377,
            "name": "x"
          },
          "property": {
            "type": "Literal",
            "start": 1378,
            "end": 1379,
            "value": 0,
            "raw": "0"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1385,
          "end": 1386,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1388,
        "end": 1521,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1392,
            "end": 1519,
            "argument": {
              "type": "NewExpression",
              "start": 1398,
              "end": 1518,
              "callee": {
                "type": "Identifier",
                "start": 1402,
                "end": 1414,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1415,
                  "end": 1517,
                  "left": {
                    "type": "Literal",
                    "start": 1415,
                    "end": 1508,
                    "value": "#7: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); x[0] === 3. Actual: ",
                    "raw": "'#7: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); x[0] === 3. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1511,
                    "end": 1517,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1512,
                      "end": 1516,
                      "object": {
                        "type": "Identifier",
                        "start": 1512,
                        "end": 1513,
                        "name": "x"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1514,
                        "end": 1515,
                        "value": 0,
                        "raw": "0"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}