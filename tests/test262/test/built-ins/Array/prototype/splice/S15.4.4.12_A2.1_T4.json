{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 254,
            "end": 255
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 259,
                "end": 260
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 262,
                "end": 263
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 265,
                "end": 266
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 268,
                "end": 269
              }
            ],
            "start": 258,
            "end": 270
          },
          "start": 254,
          "end": 270
        }
      ],
      "start": 250,
      "end": 271
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 276,
            "end": 279
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 282,
                "end": 283
              },
              "property": {
                "type": "Identifier",
                "name": "splice",
                "start": 284,
                "end": 290
              },
              "optional": false,
              "computed": false,
              "start": 282,
              "end": 290
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 291,
                  "end": 297
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 298,
                  "end": 315
                },
                "optional": false,
                "computed": false,
                "start": 291,
                "end": 315
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 317,
                "end": 318
              }
            ],
            "optional": false,
            "start": 282,
            "end": 319
          },
          "start": 276,
          "end": 319
        }
      ],
      "start": 272,
      "end": 320
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 322,
            "end": 325
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 326,
            "end": 334
          },
          "optional": false,
          "computed": false,
          "start": 322,
          "end": 334
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 337,
              "end": 343
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 344,
              "end": 353
            },
            "optional": false,
            "computed": false,
            "start": 337,
            "end": 353
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 354,
            "end": 362
          },
          "optional": false,
          "computed": false,
          "start": 337,
          "end": 362
        },
        "start": 322,
        "end": 362
      },
      "start": 322,
      "end": 363
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 368,
              "end": 371
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 372,
              "end": 380
            },
            "optional": false,
            "computed": false,
            "start": 368,
            "end": 380
          },
          "arguments": [],
          "optional": false,
          "start": 368,
          "end": 382
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 387,
              "end": 397
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 400,
              "end": 407
            },
            "start": 387,
            "end": 407
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 410,
            "end": 413
          },
          "start": 387,
          "end": 413
        },
        "start": 368,
        "end": 413
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 429,
                "end": 441
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr is Array object. Actual: '",
                    "start": 442,
                    "end": 544
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 548,
                          "end": 551
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 552,
                          "end": 560
                        },
                        "optional": false,
                        "computed": false,
                        "start": 548,
                        "end": 560
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 548,
                      "end": 562
                    },
                    "start": 547,
                    "end": 563
                  },
                  "start": 442,
                  "end": 563
                }
              ],
              "start": 425,
              "end": 564
            },
            "start": 419,
            "end": 565
          }
        ],
        "start": 415,
        "end": 567
      },
      "alternate": null,
      "start": 364,
      "end": 567
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 573,
            "end": 576
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 577,
            "end": 583
          },
          "optional": false,
          "computed": false,
          "start": 573,
          "end": 583
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 588,
          "end": 589
        },
        "start": 573,
        "end": 589
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 605,
                "end": 617
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr.length === 3. Actual: '",
                    "start": 618,
                    "end": 717
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 721,
                        "end": 724
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 725,
                        "end": 731
                      },
                      "optional": false,
                      "computed": false,
                      "start": 721,
                      "end": 731
                    },
                    "start": 720,
                    "end": 732
                  },
                  "start": 618,
                  "end": 732
                }
              ],
              "start": 601,
              "end": 733
            },
            "start": 595,
            "end": 734
          }
        ],
        "start": 591,
        "end": 736
      },
      "alternate": null,
      "start": 569,
      "end": 736
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 742,
            "end": 745
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 746,
            "end": 747
          },
          "optional": false,
          "computed": true,
          "start": 742,
          "end": 748
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 753,
          "end": 754
        },
        "start": 742,
        "end": 754
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 770,
                "end": 782
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr[0] === 0. Actual: '",
                    "start": 783,
                    "end": 878
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 882,
                        "end": 885
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 886,
                        "end": 887
                      },
                      "optional": false,
                      "computed": true,
                      "start": 882,
                      "end": 888
                    },
                    "start": 881,
                    "end": 889
                  },
                  "start": 783,
                  "end": 889
                }
              ],
              "start": 766,
              "end": 890
            },
            "start": 760,
            "end": 891
          }
        ],
        "start": 756,
        "end": 893
      },
      "alternate": null,
      "start": 738,
      "end": 893
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 899,
            "end": 902
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 903,
            "end": 904
          },
          "optional": false,
          "computed": true,
          "start": 899,
          "end": 905
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 910,
          "end": 911
        },
        "start": 899,
        "end": 911
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 927,
                "end": 939
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr[1] === 1. Actual: '",
                    "start": 940,
                    "end": 1035
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1039,
                        "end": 1042
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1043,
                        "end": 1044
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1039,
                      "end": 1045
                    },
                    "start": 1038,
                    "end": 1046
                  },
                  "start": 940,
                  "end": 1046
                }
              ],
              "start": 923,
              "end": 1047
            },
            "start": 917,
            "end": 1048
          }
        ],
        "start": 913,
        "end": 1050
      },
      "alternate": null,
      "start": 895,
      "end": 1050
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1056,
            "end": 1059
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1060,
            "end": 1061
          },
          "optional": false,
          "computed": true,
          "start": 1056,
          "end": 1062
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1067,
          "end": 1068
        },
        "start": 1056,
        "end": 1068
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1084,
                "end": 1096
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); arr[2] === 2. Actual: '",
                    "start": 1097,
                    "end": 1192
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1196,
                        "end": 1199
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1200,
                        "end": 1201
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1196,
                      "end": 1202
                    },
                    "start": 1195,
                    "end": 1203
                  },
                  "start": 1097,
                  "end": 1203
                }
              ],
              "start": 1080,
              "end": 1204
            },
            "start": 1074,
            "end": 1205
          }
        ],
        "start": 1070,
        "end": 1207
      },
      "alternate": null,
      "start": 1052,
      "end": 1207
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1213,
            "end": 1214
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1215,
            "end": 1221
          },
          "optional": false,
          "computed": false,
          "start": 1213,
          "end": 1221
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1226,
          "end": 1227
        },
        "start": 1213,
        "end": 1227
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1243,
                "end": 1255
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); x.length === 1. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); x.length === 1. Actual: '",
                    "start": 1256,
                    "end": 1353
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1357,
                        "end": 1358
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1359,
                        "end": 1365
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1357,
                      "end": 1365
                    },
                    "start": 1356,
                    "end": 1366
                  },
                  "start": 1256,
                  "end": 1366
                }
              ],
              "start": 1239,
              "end": 1367
            },
            "start": 1233,
            "end": 1368
          }
        ],
        "start": 1229,
        "end": 1370
      },
      "alternate": null,
      "start": 1209,
      "end": 1370
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1376,
            "end": 1377
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1378,
            "end": 1379
          },
          "optional": false,
          "computed": true,
          "start": 1376,
          "end": 1380
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 1385,
          "end": 1386
        },
        "start": 1376,
        "end": 1386
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1402,
                "end": 1414
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); x[0] === 3. Actual: ",
                    "raw": "'#7: var x = [0,1,2,3]; var arr = x.splice(Number.NEGATIVE_INFINITY,3); x[0] === 3. Actual: '",
                    "start": 1415,
                    "end": 1508
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1512,
                        "end": 1513
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1514,
                        "end": 1515
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1512,
                      "end": 1516
                    },
                    "start": 1511,
                    "end": 1517
                  },
                  "start": 1415,
                  "end": 1517
                }
              ],
              "start": 1398,
              "end": 1518
            },
            "start": 1392,
            "end": 1519
          }
        ],
        "start": 1388,
        "end": 1521
      },
      "alternate": null,
      "start": 1372,
      "end": 1521
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1522
}