{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 257,
            "end": 258
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 262,
                "end": 263
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 265,
                "end": 266
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 268,
                "end": 269
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 271,
                "end": 272
              }
            ],
            "start": 261,
            "end": 273
          },
          "start": 257,
          "end": 273
        }
      ],
      "start": 253,
      "end": 274
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 279,
            "end": 282
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 285,
                "end": 286
              },
              "property": {
                "type": "Identifier",
                "name": "splice",
                "start": 287,
                "end": 293
              },
              "optional": false,
              "computed": false,
              "start": 285,
              "end": 293
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1.5,
                "raw": "1.5",
                "start": 294,
                "end": 297
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 299,
                "end": 300
              }
            ],
            "optional": false,
            "start": 285,
            "end": 301
          },
          "start": 279,
          "end": 301
        }
      ],
      "start": 275,
      "end": 302
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 304,
            "end": 307
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 308,
            "end": 316
          },
          "optional": false,
          "computed": false,
          "start": 304,
          "end": 316
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 319,
              "end": 325
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 326,
              "end": 335
            },
            "optional": false,
            "computed": false,
            "start": 319,
            "end": 335
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 336,
            "end": 344
          },
          "optional": false,
          "computed": false,
          "start": 319,
          "end": 344
        },
        "start": 304,
        "end": 344
      },
      "start": 304,
      "end": 345
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 350,
              "end": 353
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 354,
              "end": 362
            },
            "optional": false,
            "computed": false,
            "start": 350,
            "end": 362
          },
          "arguments": [],
          "optional": false,
          "start": 350,
          "end": 364
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 369,
              "end": 379
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 382,
              "end": 389
            },
            "start": 369,
            "end": 389
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 392,
            "end": 395
          },
          "start": 369,
          "end": 395
        },
        "start": 350,
        "end": 395
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 411,
                "end": 423
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1,2,3]; var arr = x.splice(1.5,3); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3]; var arr = x.splice(1.5,3); arr is Array object. Actual: '",
                    "start": 424,
                    "end": 505
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 509,
                          "end": 512
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 513,
                          "end": 521
                        },
                        "optional": false,
                        "computed": false,
                        "start": 509,
                        "end": 521
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 509,
                      "end": 523
                    },
                    "start": 508,
                    "end": 524
                  },
                  "start": 424,
                  "end": 524
                }
              ],
              "start": 407,
              "end": 525
            },
            "start": 401,
            "end": 526
          }
        ],
        "start": 397,
        "end": 528
      },
      "alternate": null,
      "start": 346,
      "end": 528
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 534,
            "end": 537
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 538,
            "end": 544
          },
          "optional": false,
          "computed": false,
          "start": 534,
          "end": 544
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 549,
          "end": 550
        },
        "start": 534,
        "end": 550
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 566,
                "end": 578
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1,2,3]; var arr = x.splice(1.5,3); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3]; var arr = x.splice(1.5,3); arr.length === 3. Actual: '",
                    "start": 579,
                    "end": 657
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 661,
                        "end": 664
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 665,
                        "end": 671
                      },
                      "optional": false,
                      "computed": false,
                      "start": 661,
                      "end": 671
                    },
                    "start": 660,
                    "end": 672
                  },
                  "start": 579,
                  "end": 672
                }
              ],
              "start": 562,
              "end": 673
            },
            "start": 556,
            "end": 674
          }
        ],
        "start": 552,
        "end": 676
      },
      "alternate": null,
      "start": 530,
      "end": 676
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 682,
            "end": 685
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 686,
            "end": 687
          },
          "optional": false,
          "computed": true,
          "start": 682,
          "end": 688
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 693,
          "end": 694
        },
        "start": 682,
        "end": 694
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 710,
                "end": 722
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1,2,3]; var arr = x.splice(1.5,3); arr[0] === 1. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3]; var arr = x.splice(1.5,3); arr[0] === 1. Actual: '",
                    "start": 723,
                    "end": 797
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 801,
                        "end": 804
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 805,
                        "end": 806
                      },
                      "optional": false,
                      "computed": true,
                      "start": 801,
                      "end": 807
                    },
                    "start": 800,
                    "end": 808
                  },
                  "start": 723,
                  "end": 808
                }
              ],
              "start": 706,
              "end": 809
            },
            "start": 700,
            "end": 810
          }
        ],
        "start": 696,
        "end": 812
      },
      "alternate": null,
      "start": 678,
      "end": 812
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 818,
            "end": 821
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 822,
            "end": 823
          },
          "optional": false,
          "computed": true,
          "start": 818,
          "end": 824
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 829,
          "end": 830
        },
        "start": 818,
        "end": 830
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 846,
                "end": 858
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = [0,1,2,3]; var arr = x.splice(1.5,3); arr[1] === 2. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3]; var arr = x.splice(1.5,3); arr[1] === 2. Actual: '",
                    "start": 859,
                    "end": 933
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 937,
                        "end": 940
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 941,
                        "end": 942
                      },
                      "optional": false,
                      "computed": true,
                      "start": 937,
                      "end": 943
                    },
                    "start": 936,
                    "end": 944
                  },
                  "start": 859,
                  "end": 944
                }
              ],
              "start": 842,
              "end": 945
            },
            "start": 836,
            "end": 946
          }
        ],
        "start": 832,
        "end": 948
      },
      "alternate": null,
      "start": 814,
      "end": 948
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 954,
            "end": 957
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 958,
            "end": 959
          },
          "optional": false,
          "computed": true,
          "start": 954,
          "end": 960
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 965,
          "end": 966
        },
        "start": 954,
        "end": 966
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 982,
                "end": 994
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: var x = [0,1,2,3]; var arr = x.splice(1.5,3); arr[2] === 3. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3]; var arr = x.splice(1.5,3); arr[2] === 3. Actual: '",
                    "start": 995,
                    "end": 1069
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1073,
                        "end": 1076
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1077,
                        "end": 1078
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1073,
                      "end": 1079
                    },
                    "start": 1072,
                    "end": 1080
                  },
                  "start": 995,
                  "end": 1080
                }
              ],
              "start": 978,
              "end": 1081
            },
            "start": 972,
            "end": 1082
          }
        ],
        "start": 968,
        "end": 1084
      },
      "alternate": null,
      "start": 950,
      "end": 1084
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1090,
            "end": 1091
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1092,
            "end": 1098
          },
          "optional": false,
          "computed": false,
          "start": 1090,
          "end": 1098
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1103,
          "end": 1104
        },
        "start": 1090,
        "end": 1104
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1120,
                "end": 1132
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: var x = [0,1,2,3]; var arr = x.splice(1.5,3); x.length === 1. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3]; var arr = x.splice(1.5,3); x.length === 1. Actual: '",
                    "start": 1133,
                    "end": 1209
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1213,
                        "end": 1214
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1215,
                        "end": 1221
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1213,
                      "end": 1221
                    },
                    "start": 1212,
                    "end": 1222
                  },
                  "start": 1133,
                  "end": 1222
                }
              ],
              "start": 1116,
              "end": 1223
            },
            "start": 1110,
            "end": 1224
          }
        ],
        "start": 1106,
        "end": 1226
      },
      "alternate": null,
      "start": 1086,
      "end": 1226
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1232,
            "end": 1233
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1234,
            "end": 1235
          },
          "optional": false,
          "computed": true,
          "start": 1232,
          "end": 1236
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1241,
          "end": 1242
        },
        "start": 1232,
        "end": 1242
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1258,
                "end": 1270
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: var x = [0,1,2,3]; var arr = x.splice(1.5,3); x[0] === 0. Actual: ",
                    "raw": "'#7: var x = [0,1,2,3]; var arr = x.splice(1.5,3); x[0] === 0. Actual: '",
                    "start": 1271,
                    "end": 1343
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1347,
                        "end": 1348
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1349,
                        "end": 1350
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1347,
                      "end": 1351
                    },
                    "start": 1346,
                    "end": 1352
                  },
                  "start": 1271,
                  "end": 1352
                }
              ],
              "start": 1254,
              "end": 1353
            },
            "start": 1248,
            "end": 1354
          }
        ],
        "start": 1244,
        "end": 1356
      },
      "alternate": null,
      "start": 1228,
      "end": 1356
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1357
}