{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 259,
            "end": 260
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 264,
                "end": 265
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 267,
                "end": 268
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 270,
                "end": 271
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 273,
                "end": 274
              }
            ],
            "start": 263,
            "end": 275
          },
          "start": 259,
          "end": 275
        }
      ],
      "start": 255,
      "end": 276
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 281,
            "end": 284
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 287,
                "end": 288
              },
              "property": {
                "type": "Identifier",
                "name": "splice",
                "start": 289,
                "end": 295
              },
              "optional": false,
              "computed": false,
              "start": 287,
              "end": 295
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "name": "valueOf",
                      "start": 300,
                      "end": 307
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": 0,
                              "raw": "0",
                              "start": 333,
                              "end": 334
                            },
                            "start": 326,
                            "end": 334
                          }
                        ],
                        "start": 320,
                        "end": 338
                      },
                      "expression": false,
                      "start": 309,
                      "end": 338
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "start": 300,
                    "end": 338
                  },
                  {
                    "type": "Property",
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 342,
                      "end": 350
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": 3,
                              "raw": "3",
                              "start": 376,
                              "end": 377
                            },
                            "start": 369,
                            "end": 377
                          }
                        ],
                        "start": 363,
                        "end": 381
                      },
                      "expression": false,
                      "start": 352,
                      "end": 381
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "start": 342,
                    "end": 381
                  }
                ],
                "start": 296,
                "end": 383
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 385,
                "end": 386
              }
            ],
            "optional": false,
            "start": 287,
            "end": 387
          },
          "start": 281,
          "end": 387
        }
      ],
      "start": 277,
      "end": 388
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 390,
            "end": 393
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 394,
            "end": 402
          },
          "optional": false,
          "computed": false,
          "start": 390,
          "end": 402
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 405,
              "end": 411
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 412,
              "end": 421
            },
            "optional": false,
            "computed": false,
            "start": 405,
            "end": 421
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 422,
            "end": 430
          },
          "optional": false,
          "computed": false,
          "start": 405,
          "end": 430
        },
        "start": 390,
        "end": 430
      },
      "start": 390,
      "end": 431
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 436,
              "end": 439
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 440,
              "end": 448
            },
            "optional": false,
            "computed": false,
            "start": 436,
            "end": 448
          },
          "arguments": [],
          "optional": false,
          "start": 436,
          "end": 450
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 455,
              "end": 465
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 468,
              "end": 475
            },
            "start": 455,
            "end": 475
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 478,
            "end": 481
          },
          "start": 455,
          "end": 481
        },
        "start": 436,
        "end": 481
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 497,
                "end": 509
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr is Array object. Actual: '",
                    "start": 510,
                    "end": 653
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 657,
                          "end": 660
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 661,
                          "end": 669
                        },
                        "optional": false,
                        "computed": false,
                        "start": 657,
                        "end": 669
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 657,
                      "end": 671
                    },
                    "start": 656,
                    "end": 672
                  },
                  "start": 510,
                  "end": 672
                }
              ],
              "start": 493,
              "end": 673
            },
            "start": 487,
            "end": 674
          }
        ],
        "start": 483,
        "end": 676
      },
      "alternate": null,
      "start": 432,
      "end": 676
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 682,
            "end": 685
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 686,
            "end": 692
          },
          "optional": false,
          "computed": false,
          "start": 682,
          "end": 692
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 697,
          "end": 698
        },
        "start": 682,
        "end": 698
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 714,
                "end": 726
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr.length === 3. Actual: '",
                    "start": 727,
                    "end": 867
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 871,
                        "end": 874
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 875,
                        "end": 881
                      },
                      "optional": false,
                      "computed": false,
                      "start": 871,
                      "end": 881
                    },
                    "start": 870,
                    "end": 882
                  },
                  "start": 727,
                  "end": 882
                }
              ],
              "start": 710,
              "end": 883
            },
            "start": 704,
            "end": 884
          }
        ],
        "start": 700,
        "end": 886
      },
      "alternate": null,
      "start": 678,
      "end": 886
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 892,
            "end": 895
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 896,
            "end": 897
          },
          "optional": false,
          "computed": true,
          "start": 892,
          "end": 898
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 903,
          "end": 904
        },
        "start": 892,
        "end": 904
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 920,
                "end": 932
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[0] === 0. Actual: '",
                    "start": 933,
                    "end": 1069
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1073,
                        "end": 1076
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1077,
                        "end": 1078
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1073,
                      "end": 1079
                    },
                    "start": 1072,
                    "end": 1080
                  },
                  "start": 933,
                  "end": 1080
                }
              ],
              "start": 916,
              "end": 1081
            },
            "start": 910,
            "end": 1082
          }
        ],
        "start": 906,
        "end": 1084
      },
      "alternate": null,
      "start": 888,
      "end": 1084
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1090,
            "end": 1093
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1094,
            "end": 1095
          },
          "optional": false,
          "computed": true,
          "start": 1090,
          "end": 1096
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1101,
          "end": 1102
        },
        "start": 1090,
        "end": 1102
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1118,
                "end": 1130
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[1] === 1. Actual: '",
                    "start": 1131,
                    "end": 1267
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1271,
                        "end": 1274
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1275,
                        "end": 1276
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1271,
                      "end": 1277
                    },
                    "start": 1270,
                    "end": 1278
                  },
                  "start": 1131,
                  "end": 1278
                }
              ],
              "start": 1114,
              "end": 1279
            },
            "start": 1108,
            "end": 1280
          }
        ],
        "start": 1104,
        "end": 1282
      },
      "alternate": null,
      "start": 1086,
      "end": 1282
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1288,
            "end": 1291
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1292,
            "end": 1293
          },
          "optional": false,
          "computed": true,
          "start": 1288,
          "end": 1294
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1299,
          "end": 1300
        },
        "start": 1288,
        "end": 1300
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1316,
                "end": 1328
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[2] === 2. Actual: '",
                    "start": 1329,
                    "end": 1465
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1469,
                        "end": 1472
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1473,
                        "end": 1474
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1469,
                      "end": 1475
                    },
                    "start": 1468,
                    "end": 1476
                  },
                  "start": 1329,
                  "end": 1476
                }
              ],
              "start": 1312,
              "end": 1477
            },
            "start": 1306,
            "end": 1478
          }
        ],
        "start": 1302,
        "end": 1480
      },
      "alternate": null,
      "start": 1284,
      "end": 1480
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1486,
            "end": 1487
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1488,
            "end": 1494
          },
          "optional": false,
          "computed": false,
          "start": 1486,
          "end": 1494
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1499,
          "end": 1500
        },
        "start": 1486,
        "end": 1500
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1516,
                "end": 1528
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); x.length === 1. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); x.length === 1. Actual: '",
                    "start": 1529,
                    "end": 1667
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1671,
                        "end": 1672
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1673,
                        "end": 1679
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1671,
                      "end": 1679
                    },
                    "start": 1670,
                    "end": 1680
                  },
                  "start": 1529,
                  "end": 1680
                }
              ],
              "start": 1512,
              "end": 1681
            },
            "start": 1506,
            "end": 1682
          }
        ],
        "start": 1502,
        "end": 1684
      },
      "alternate": null,
      "start": 1482,
      "end": 1684
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1690,
            "end": 1691
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1692,
            "end": 1693
          },
          "optional": false,
          "computed": true,
          "start": 1690,
          "end": 1694
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 1699,
          "end": 1700
        },
        "start": 1690,
        "end": 1700
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1716,
                "end": 1728
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); x[0] === 3. Actual: ",
                    "raw": "'#7: var x = [0,1,2,3]; var arr = x.splice({valueOf: function() {return 0}, toString: function() {return 3}},3); x[0] === 3. Actual: '",
                    "start": 1729,
                    "end": 1863
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1867,
                        "end": 1868
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1869,
                        "end": 1870
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1867,
                      "end": 1871
                    },
                    "start": 1866,
                    "end": 1872
                  },
                  "start": 1729,
                  "end": 1872
                }
              ],
              "start": 1712,
              "end": 1873
            },
            "start": 1706,
            "end": 1874
          }
        ],
        "start": 1702,
        "end": 1876
      },
      "alternate": null,
      "start": 1686,
      "end": 1876
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1877
}