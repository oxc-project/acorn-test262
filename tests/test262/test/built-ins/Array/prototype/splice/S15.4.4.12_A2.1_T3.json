{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 253,
            "end": 254
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 258,
                "end": 259
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 261,
                "end": 262
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 264,
                "end": 265
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 267,
                "end": 268
              }
            ],
            "start": 257,
            "end": 269
          },
          "start": 253,
          "end": 269
        }
      ],
      "start": 249,
      "end": 270
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 275,
            "end": 278
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 281,
                "end": 282
              },
              "property": {
                "type": "Identifier",
                "name": "splice",
                "start": 283,
                "end": 289
              },
              "optional": false,
              "computed": false,
              "start": 281,
              "end": 289
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 290,
                  "end": 296
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 297,
                  "end": 314
                },
                "optional": false,
                "computed": false,
                "start": 290,
                "end": 314
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 316,
                "end": 317
              }
            ],
            "optional": false,
            "start": 281,
            "end": 318
          },
          "start": 275,
          "end": 318
        }
      ],
      "start": 271,
      "end": 319
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 321,
            "end": 324
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 325,
            "end": 333
          },
          "optional": false,
          "computed": false,
          "start": 321,
          "end": 333
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 336,
              "end": 342
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 343,
              "end": 352
            },
            "optional": false,
            "computed": false,
            "start": 336,
            "end": 352
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 353,
            "end": 361
          },
          "optional": false,
          "computed": false,
          "start": 336,
          "end": 361
        },
        "start": 321,
        "end": 361
      },
      "start": 321,
      "end": 362
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 367,
              "end": 370
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 371,
              "end": 379
            },
            "optional": false,
            "computed": false,
            "start": 367,
            "end": 379
          },
          "arguments": [],
          "optional": false,
          "start": 367,
          "end": 381
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 386,
              "end": 396
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 399,
              "end": 406
            },
            "start": 386,
            "end": 406
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 409,
            "end": 412
          },
          "start": 386,
          "end": 412
        },
        "start": 367,
        "end": 412
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 428,
                "end": 440
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1,2,3]; var arr = x.splice(Number.POSITIVE_INFINITY,3); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3]; var arr = x.splice(Number.POSITIVE_INFINITY,3); arr is Array object. Actual: '",
                    "start": 441,
                    "end": 543
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 547,
                          "end": 550
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 551,
                          "end": 559
                        },
                        "optional": false,
                        "computed": false,
                        "start": 547,
                        "end": 559
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 547,
                      "end": 561
                    },
                    "start": 546,
                    "end": 562
                  },
                  "start": 441,
                  "end": 562
                }
              ],
              "start": 424,
              "end": 563
            },
            "start": 418,
            "end": 564
          }
        ],
        "start": 414,
        "end": 566
      },
      "alternate": null,
      "start": 363,
      "end": 566
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 572,
            "end": 575
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 576,
            "end": 582
          },
          "optional": false,
          "computed": false,
          "start": 572,
          "end": 582
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 587,
          "end": 588
        },
        "start": 572,
        "end": 588
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 604,
                "end": 616
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1,2,3]; var arr = x.splice(Number.POSITIVE_INFINITY,3); arr.length === 0. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3]; var arr = x.splice(Number.POSITIVE_INFINITY,3); arr.length === 0. Actual: '",
                    "start": 617,
                    "end": 716
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 720,
                        "end": 723
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 724,
                        "end": 730
                      },
                      "optional": false,
                      "computed": false,
                      "start": 720,
                      "end": 730
                    },
                    "start": 719,
                    "end": 731
                  },
                  "start": 617,
                  "end": 731
                }
              ],
              "start": 600,
              "end": 732
            },
            "start": 594,
            "end": 733
          }
        ],
        "start": 590,
        "end": 735
      },
      "alternate": null,
      "start": 568,
      "end": 735
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 741,
            "end": 742
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 743,
            "end": 744
          },
          "optional": false,
          "computed": true,
          "start": 741,
          "end": 745
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 750,
          "end": 751
        },
        "start": 741,
        "end": 751
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 767,
                "end": 779
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1,2,3]; var x = x.splice(Number.POSITIVE_INFINITY,3); x[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3]; var x = x.splice(Number.POSITIVE_INFINITY,3); x[0] === 0. Actual: '",
                    "start": 780,
                    "end": 871
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 875,
                        "end": 876
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 877,
                        "end": 878
                      },
                      "optional": false,
                      "computed": true,
                      "start": 875,
                      "end": 879
                    },
                    "start": 874,
                    "end": 880
                  },
                  "start": 780,
                  "end": 880
                }
              ],
              "start": 763,
              "end": 881
            },
            "start": 757,
            "end": 882
          }
        ],
        "start": 753,
        "end": 884
      },
      "alternate": null,
      "start": 737,
      "end": 884
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 890,
            "end": 891
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 892,
            "end": 893
          },
          "optional": false,
          "computed": true,
          "start": 890,
          "end": 894
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 899,
          "end": 900
        },
        "start": 890,
        "end": 900
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 916,
                "end": 928
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = [0,1,2,3]; var x = x.splice(Number.POSITIVE_INFINITY,3); x[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3]; var x = x.splice(Number.POSITIVE_INFINITY,3); x[1] === 1. Actual: '",
                    "start": 929,
                    "end": 1020
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1024,
                        "end": 1025
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1026,
                        "end": 1027
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1024,
                      "end": 1028
                    },
                    "start": 1023,
                    "end": 1029
                  },
                  "start": 929,
                  "end": 1029
                }
              ],
              "start": 912,
              "end": 1030
            },
            "start": 906,
            "end": 1031
          }
        ],
        "start": 902,
        "end": 1033
      },
      "alternate": null,
      "start": 886,
      "end": 1033
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1039,
            "end": 1040
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1041,
            "end": 1042
          },
          "optional": false,
          "computed": true,
          "start": 1039,
          "end": 1043
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1048,
          "end": 1049
        },
        "start": 1039,
        "end": 1049
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1065,
                "end": 1077
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: var x = [0,1,2,3]; var x = x.splice(Number.POSITIVE_INFINITY,3); x[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3]; var x = x.splice(Number.POSITIVE_INFINITY,3); x[2] === 2. Actual: '",
                    "start": 1078,
                    "end": 1169
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1173,
                        "end": 1174
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1175,
                        "end": 1176
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1173,
                      "end": 1177
                    },
                    "start": 1172,
                    "end": 1178
                  },
                  "start": 1078,
                  "end": 1178
                }
              ],
              "start": 1061,
              "end": 1179
            },
            "start": 1055,
            "end": 1180
          }
        ],
        "start": 1051,
        "end": 1182
      },
      "alternate": null,
      "start": 1035,
      "end": 1182
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1188,
            "end": 1189
          },
          "property": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 1190,
            "end": 1191
          },
          "optional": false,
          "computed": true,
          "start": 1188,
          "end": 1192
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 1197,
          "end": 1198
        },
        "start": 1188,
        "end": 1198
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1214,
                "end": 1226
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: var x = [0,1,2,3]; var x = x.splice(Number.POSITIVE_INFINITY,3); x[3] === 3. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3]; var x = x.splice(Number.POSITIVE_INFINITY,3); x[3] === 3. Actual: '",
                    "start": 1227,
                    "end": 1318
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1322,
                        "end": 1323
                      },
                      "property": {
                        "type": "Literal",
                        "value": 3,
                        "raw": "3",
                        "start": 1324,
                        "end": 1325
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1322,
                      "end": 1326
                    },
                    "start": 1321,
                    "end": 1327
                  },
                  "start": 1227,
                  "end": 1327
                }
              ],
              "start": 1210,
              "end": 1328
            },
            "start": 1204,
            "end": 1329
          }
        ],
        "start": 1200,
        "end": 1331
      },
      "alternate": null,
      "start": 1184,
      "end": 1331
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1332
}