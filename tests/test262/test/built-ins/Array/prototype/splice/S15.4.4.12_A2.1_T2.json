{
  "type": "Program",
  "start": 0,
  "end": 1348,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 244,
      "end": 265,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 248,
          "end": 264,
          "id": {
            "type": "Identifier",
            "start": 248,
            "end": 249,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 252,
            "end": 264,
            "elements": [
              {
                "type": "Literal",
                "start": 253,
                "end": 254,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Literal",
                "start": 256,
                "end": 257,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 259,
                "end": 260,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 262,
                "end": 263,
                "value": 3,
                "raw": "3"
              }
            ]
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 266,
      "end": 293,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 270,
          "end": 292,
          "id": {
            "type": "Identifier",
            "start": 270,
            "end": 273,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 276,
            "end": 292,
            "callee": {
              "type": "MemberExpression",
              "start": 276,
              "end": 284,
              "object": {
                "type": "Identifier",
                "start": 276,
                "end": 277,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 278,
                "end": 284,
                "name": "splice"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 285,
                "end": 288,
                "name": "NaN"
              },
              {
                "type": "Literal",
                "start": 290,
                "end": 291,
                "value": 3,
                "raw": "3"
              }
            ],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 295,
      "end": 336,
      "expression": {
        "type": "AssignmentExpression",
        "start": 295,
        "end": 335,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 295,
          "end": 307,
          "object": {
            "type": "Identifier",
            "start": 295,
            "end": 298,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 299,
            "end": 307,
            "name": "getClass"
          },
          "optional": false,
          "computed": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 310,
          "end": 335,
          "object": {
            "type": "MemberExpression",
            "start": 310,
            "end": 326,
            "object": {
              "type": "Identifier",
              "start": 310,
              "end": 316,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 317,
              "end": 326,
              "name": "prototype"
            },
            "optional": false,
            "computed": false
          },
          "property": {
            "type": "Identifier",
            "start": 327,
            "end": 335,
            "name": "toString"
          },
          "optional": false,
          "computed": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 337,
      "end": 519,
      "test": {
        "type": "BinaryExpression",
        "start": 341,
        "end": 386,
        "left": {
          "type": "CallExpression",
          "start": 341,
          "end": 355,
          "callee": {
            "type": "MemberExpression",
            "start": 341,
            "end": 353,
            "object": {
              "type": "Identifier",
              "start": 341,
              "end": 344,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 345,
              "end": 353,
              "name": "getClass"
            },
            "optional": false,
            "computed": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 360,
          "end": 386,
          "left": {
            "type": "BinaryExpression",
            "start": 360,
            "end": 380,
            "left": {
              "type": "Literal",
              "start": 360,
              "end": 370,
              "value": "[object ",
              "raw": "\"[object \""
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 373,
              "end": 380,
              "value": "Array",
              "raw": "\"Array\""
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 383,
            "end": 386,
            "value": "]",
            "raw": "\"]\""
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 388,
        "end": 519,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 392,
            "end": 517,
            "argument": {
              "type": "NewExpression",
              "start": 398,
              "end": 516,
              "callee": {
                "type": "Identifier",
                "start": 402,
                "end": 414,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 415,
                  "end": 515,
                  "left": {
                    "type": "Literal",
                    "start": 415,
                    "end": 496,
                    "value": "#1: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr is Array object. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 499,
                    "end": 515,
                    "expression": {
                      "type": "CallExpression",
                      "start": 500,
                      "end": 514,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 500,
                        "end": 512,
                        "object": {
                          "type": "Identifier",
                          "start": 500,
                          "end": 503,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 504,
                          "end": 512,
                          "name": "getClass"
                        },
                        "optional": false,
                        "computed": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 521,
      "end": 667,
      "test": {
        "type": "BinaryExpression",
        "start": 525,
        "end": 541,
        "left": {
          "type": "MemberExpression",
          "start": 525,
          "end": 535,
          "object": {
            "type": "Identifier",
            "start": 525,
            "end": 528,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 529,
            "end": 535,
            "name": "length"
          },
          "optional": false,
          "computed": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 540,
          "end": 541,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 543,
        "end": 667,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 547,
            "end": 665,
            "argument": {
              "type": "NewExpression",
              "start": 553,
              "end": 664,
              "callee": {
                "type": "Identifier",
                "start": 557,
                "end": 569,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 570,
                  "end": 663,
                  "left": {
                    "type": "Literal",
                    "start": 570,
                    "end": 648,
                    "value": "#2: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr.length === 3. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 651,
                    "end": 663,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 652,
                      "end": 662,
                      "object": {
                        "type": "Identifier",
                        "start": 652,
                        "end": 655,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 656,
                        "end": 662,
                        "name": "length"
                      },
                      "optional": false,
                      "computed": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 669,
      "end": 803,
      "test": {
        "type": "BinaryExpression",
        "start": 673,
        "end": 685,
        "left": {
          "type": "MemberExpression",
          "start": 673,
          "end": 679,
          "object": {
            "type": "Identifier",
            "start": 673,
            "end": 676,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 677,
            "end": 678,
            "value": 0,
            "raw": "0"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 684,
          "end": 685,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 687,
        "end": 803,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 691,
            "end": 801,
            "argument": {
              "type": "NewExpression",
              "start": 697,
              "end": 800,
              "callee": {
                "type": "Identifier",
                "start": 701,
                "end": 713,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 714,
                  "end": 799,
                  "left": {
                    "type": "Literal",
                    "start": 714,
                    "end": 788,
                    "value": "#3: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr[0] === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 791,
                    "end": 799,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 792,
                      "end": 798,
                      "object": {
                        "type": "Identifier",
                        "start": 792,
                        "end": 795,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 796,
                        "end": 797,
                        "value": 0,
                        "raw": "0"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 805,
      "end": 939,
      "test": {
        "type": "BinaryExpression",
        "start": 809,
        "end": 821,
        "left": {
          "type": "MemberExpression",
          "start": 809,
          "end": 815,
          "object": {
            "type": "Identifier",
            "start": 809,
            "end": 812,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 813,
            "end": 814,
            "value": 1,
            "raw": "1"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 820,
          "end": 821,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 823,
        "end": 939,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 827,
            "end": 937,
            "argument": {
              "type": "NewExpression",
              "start": 833,
              "end": 936,
              "callee": {
                "type": "Identifier",
                "start": 837,
                "end": 849,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 850,
                  "end": 935,
                  "left": {
                    "type": "Literal",
                    "start": 850,
                    "end": 924,
                    "value": "#4: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr[1] === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 927,
                    "end": 935,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 928,
                      "end": 934,
                      "object": {
                        "type": "Identifier",
                        "start": 928,
                        "end": 931,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 932,
                        "end": 933,
                        "value": 1,
                        "raw": "1"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 941,
      "end": 1075,
      "test": {
        "type": "BinaryExpression",
        "start": 945,
        "end": 957,
        "left": {
          "type": "MemberExpression",
          "start": 945,
          "end": 951,
          "object": {
            "type": "Identifier",
            "start": 945,
            "end": 948,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 949,
            "end": 950,
            "value": 2,
            "raw": "2"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 956,
          "end": 957,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 959,
        "end": 1075,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 963,
            "end": 1073,
            "argument": {
              "type": "NewExpression",
              "start": 969,
              "end": 1072,
              "callee": {
                "type": "Identifier",
                "start": 973,
                "end": 985,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 986,
                  "end": 1071,
                  "left": {
                    "type": "Literal",
                    "start": 986,
                    "end": 1060,
                    "value": "#5: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr[2] === 2. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1063,
                    "end": 1071,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1064,
                      "end": 1070,
                      "object": {
                        "type": "Identifier",
                        "start": 1064,
                        "end": 1067,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1068,
                        "end": 1069,
                        "value": 2,
                        "raw": "2"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1077,
      "end": 1217,
      "test": {
        "type": "BinaryExpression",
        "start": 1081,
        "end": 1095,
        "left": {
          "type": "MemberExpression",
          "start": 1081,
          "end": 1089,
          "object": {
            "type": "Identifier",
            "start": 1081,
            "end": 1082,
            "name": "x"
          },
          "property": {
            "type": "Identifier",
            "start": 1083,
            "end": 1089,
            "name": "length"
          },
          "optional": false,
          "computed": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1094,
          "end": 1095,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1097,
        "end": 1217,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1101,
            "end": 1215,
            "argument": {
              "type": "NewExpression",
              "start": 1107,
              "end": 1214,
              "callee": {
                "type": "Identifier",
                "start": 1111,
                "end": 1123,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1124,
                  "end": 1213,
                  "left": {
                    "type": "Literal",
                    "start": 1124,
                    "end": 1200,
                    "value": "#6: var x = [0,1,2,3]; var arr = x.splice(NaN,3); x.length === 1. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3]; var arr = x.splice(NaN,3); x.length === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1203,
                    "end": 1213,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1204,
                      "end": 1212,
                      "object": {
                        "type": "Identifier",
                        "start": 1204,
                        "end": 1205,
                        "name": "x"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1206,
                        "end": 1212,
                        "name": "length"
                      },
                      "optional": false,
                      "computed": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1219,
      "end": 1347,
      "test": {
        "type": "BinaryExpression",
        "start": 1223,
        "end": 1233,
        "left": {
          "type": "MemberExpression",
          "start": 1223,
          "end": 1227,
          "object": {
            "type": "Identifier",
            "start": 1223,
            "end": 1224,
            "name": "x"
          },
          "property": {
            "type": "Literal",
            "start": 1225,
            "end": 1226,
            "value": 0,
            "raw": "0"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1232,
          "end": 1233,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1235,
        "end": 1347,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1239,
            "end": 1345,
            "argument": {
              "type": "NewExpression",
              "start": 1245,
              "end": 1344,
              "callee": {
                "type": "Identifier",
                "start": 1249,
                "end": 1261,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1262,
                  "end": 1343,
                  "left": {
                    "type": "Literal",
                    "start": 1262,
                    "end": 1334,
                    "value": "#7: var x = [0,1,2,3]; var arr = x.splice(NaN,3); x[0] === 3. Actual: ",
                    "raw": "'#7: var x = [0,1,2,3]; var arr = x.splice(NaN,3); x[0] === 3. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1337,
                    "end": 1343,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1338,
                      "end": 1342,
                      "object": {
                        "type": "Identifier",
                        "start": 1338,
                        "end": 1339,
                        "name": "x"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1340,
                        "end": 1341,
                        "value": 0,
                        "raw": "0"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}