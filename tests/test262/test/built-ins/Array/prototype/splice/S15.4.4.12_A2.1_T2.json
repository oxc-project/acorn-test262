{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 248,
            "end": 249
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 253,
                "end": 254
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 256,
                "end": 257
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 259,
                "end": 260
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 262,
                "end": 263
              }
            ],
            "start": 252,
            "end": 264
          },
          "start": 248,
          "end": 264
        }
      ],
      "start": 244,
      "end": 265
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 270,
            "end": 273
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 276,
                "end": 277
              },
              "property": {
                "type": "Identifier",
                "name": "splice",
                "start": 278,
                "end": 284
              },
              "optional": false,
              "computed": false,
              "start": 276,
              "end": 284
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "NaN",
                "start": 285,
                "end": 288
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 290,
                "end": 291
              }
            ],
            "optional": false,
            "start": 276,
            "end": 292
          },
          "start": 270,
          "end": 292
        }
      ],
      "start": 266,
      "end": 293
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 295,
            "end": 298
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 299,
            "end": 307
          },
          "optional": false,
          "computed": false,
          "start": 295,
          "end": 307
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 310,
              "end": 316
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 317,
              "end": 326
            },
            "optional": false,
            "computed": false,
            "start": 310,
            "end": 326
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 327,
            "end": 335
          },
          "optional": false,
          "computed": false,
          "start": 310,
          "end": 335
        },
        "start": 295,
        "end": 335
      },
      "start": 295,
      "end": 336
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 341,
              "end": 344
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 345,
              "end": 353
            },
            "optional": false,
            "computed": false,
            "start": 341,
            "end": 353
          },
          "arguments": [],
          "optional": false,
          "start": 341,
          "end": 355
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 360,
              "end": 370
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 373,
              "end": 380
            },
            "start": 360,
            "end": 380
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 383,
            "end": 386
          },
          "start": 360,
          "end": 386
        },
        "start": 341,
        "end": 386
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 402,
                "end": 414
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr is Array object. Actual: '",
                    "start": 415,
                    "end": 496
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 500,
                          "end": 503
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 504,
                          "end": 512
                        },
                        "optional": false,
                        "computed": false,
                        "start": 500,
                        "end": 512
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 500,
                      "end": 514
                    },
                    "start": 499,
                    "end": 515
                  },
                  "start": 415,
                  "end": 515
                }
              ],
              "start": 398,
              "end": 516
            },
            "start": 392,
            "end": 517
          }
        ],
        "start": 388,
        "end": 519
      },
      "alternate": null,
      "start": 337,
      "end": 519
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 525,
            "end": 528
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 529,
            "end": 535
          },
          "optional": false,
          "computed": false,
          "start": 525,
          "end": 535
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 540,
          "end": 541
        },
        "start": 525,
        "end": 541
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 557,
                "end": 569
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr.length === 3. Actual: '",
                    "start": 570,
                    "end": 648
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 652,
                        "end": 655
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 656,
                        "end": 662
                      },
                      "optional": false,
                      "computed": false,
                      "start": 652,
                      "end": 662
                    },
                    "start": 651,
                    "end": 663
                  },
                  "start": 570,
                  "end": 663
                }
              ],
              "start": 553,
              "end": 664
            },
            "start": 547,
            "end": 665
          }
        ],
        "start": 543,
        "end": 667
      },
      "alternate": null,
      "start": 521,
      "end": 667
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 673,
            "end": 676
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 677,
            "end": 678
          },
          "optional": false,
          "computed": true,
          "start": 673,
          "end": 679
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 684,
          "end": 685
        },
        "start": 673,
        "end": 685
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 701,
                "end": 713
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr[0] === 0. Actual: '",
                    "start": 714,
                    "end": 788
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 792,
                        "end": 795
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 796,
                        "end": 797
                      },
                      "optional": false,
                      "computed": true,
                      "start": 792,
                      "end": 798
                    },
                    "start": 791,
                    "end": 799
                  },
                  "start": 714,
                  "end": 799
                }
              ],
              "start": 697,
              "end": 800
            },
            "start": 691,
            "end": 801
          }
        ],
        "start": 687,
        "end": 803
      },
      "alternate": null,
      "start": 669,
      "end": 803
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 809,
            "end": 812
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 813,
            "end": 814
          },
          "optional": false,
          "computed": true,
          "start": 809,
          "end": 815
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 820,
          "end": 821
        },
        "start": 809,
        "end": 821
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 837,
                "end": 849
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr[1] === 1. Actual: '",
                    "start": 850,
                    "end": 924
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 928,
                        "end": 931
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 932,
                        "end": 933
                      },
                      "optional": false,
                      "computed": true,
                      "start": 928,
                      "end": 934
                    },
                    "start": 927,
                    "end": 935
                  },
                  "start": 850,
                  "end": 935
                }
              ],
              "start": 833,
              "end": 936
            },
            "start": 827,
            "end": 937
          }
        ],
        "start": 823,
        "end": 939
      },
      "alternate": null,
      "start": 805,
      "end": 939
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 945,
            "end": 948
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 949,
            "end": 950
          },
          "optional": false,
          "computed": true,
          "start": 945,
          "end": 951
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 956,
          "end": 957
        },
        "start": 945,
        "end": 957
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 973,
                "end": 985
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3]; var arr = x.splice(NaN,3); arr[2] === 2. Actual: '",
                    "start": 986,
                    "end": 1060
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1064,
                        "end": 1067
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1068,
                        "end": 1069
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1064,
                      "end": 1070
                    },
                    "start": 1063,
                    "end": 1071
                  },
                  "start": 986,
                  "end": 1071
                }
              ],
              "start": 969,
              "end": 1072
            },
            "start": 963,
            "end": 1073
          }
        ],
        "start": 959,
        "end": 1075
      },
      "alternate": null,
      "start": 941,
      "end": 1075
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1081,
            "end": 1082
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1083,
            "end": 1089
          },
          "optional": false,
          "computed": false,
          "start": 1081,
          "end": 1089
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1094,
          "end": 1095
        },
        "start": 1081,
        "end": 1095
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1111,
                "end": 1123
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: var x = [0,1,2,3]; var arr = x.splice(NaN,3); x.length === 1. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3]; var arr = x.splice(NaN,3); x.length === 1. Actual: '",
                    "start": 1124,
                    "end": 1200
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1204,
                        "end": 1205
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1206,
                        "end": 1212
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1204,
                      "end": 1212
                    },
                    "start": 1203,
                    "end": 1213
                  },
                  "start": 1124,
                  "end": 1213
                }
              ],
              "start": 1107,
              "end": 1214
            },
            "start": 1101,
            "end": 1215
          }
        ],
        "start": 1097,
        "end": 1217
      },
      "alternate": null,
      "start": 1077,
      "end": 1217
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1223,
            "end": 1224
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1225,
            "end": 1226
          },
          "optional": false,
          "computed": true,
          "start": 1223,
          "end": 1227
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 1232,
          "end": 1233
        },
        "start": 1223,
        "end": 1233
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1249,
                "end": 1261
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: var x = [0,1,2,3]; var arr = x.splice(NaN,3); x[0] === 3. Actual: ",
                    "raw": "'#7: var x = [0,1,2,3]; var arr = x.splice(NaN,3); x[0] === 3. Actual: '",
                    "start": 1262,
                    "end": 1334
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1338,
                        "end": 1339
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1340,
                        "end": 1341
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1338,
                      "end": 1342
                    },
                    "start": 1337,
                    "end": 1343
                  },
                  "start": 1262,
                  "end": 1343
                }
              ],
              "start": 1245,
              "end": 1344
            },
            "start": 1239,
            "end": 1345
          }
        ],
        "start": 1235,
        "end": 1347
      },
      "alternate": null,
      "start": 1219,
      "end": 1347
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1348
}