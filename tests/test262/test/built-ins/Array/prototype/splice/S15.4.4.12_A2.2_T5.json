{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 265,
            "end": 266
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 270,
                "end": 271
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 273,
                "end": 274
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 276,
                "end": 277
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 279,
                "end": 280
              }
            ],
            "start": 269,
            "end": 281
          },
          "start": 265,
          "end": 281
        }
      ],
      "start": 261,
      "end": 282
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 287,
            "end": 290
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 293,
                "end": 294
              },
              "property": {
                "type": "Identifier",
                "name": "splice",
                "start": 295,
                "end": 301
              },
              "optional": false,
              "computed": false,
              "start": 293,
              "end": 301
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 302,
                "end": 303
              },
              {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "name": "valueOf",
                      "start": 309,
                      "end": 316
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": 3,
                              "raw": "3",
                              "start": 342,
                              "end": 343
                            },
                            "start": 335,
                            "end": 343
                          }
                        ],
                        "start": 329,
                        "end": 347
                      },
                      "expression": false,
                      "start": 318,
                      "end": 347
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "start": 309,
                    "end": 347
                  },
                  {
                    "type": "Property",
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 351,
                      "end": 359
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": 0,
                              "raw": "0",
                              "start": 385,
                              "end": 386
                            },
                            "start": 378,
                            "end": 386
                          }
                        ],
                        "start": 372,
                        "end": 390
                      },
                      "expression": false,
                      "start": 361,
                      "end": 390
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "start": 351,
                    "end": 390
                  }
                ],
                "start": 305,
                "end": 392
              }
            ],
            "optional": false,
            "start": 293,
            "end": 393
          },
          "start": 287,
          "end": 393
        }
      ],
      "start": 283,
      "end": 394
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 396,
            "end": 399
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 400,
            "end": 408
          },
          "optional": false,
          "computed": false,
          "start": 396,
          "end": 408
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 411,
              "end": 417
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 418,
              "end": 427
            },
            "optional": false,
            "computed": false,
            "start": 411,
            "end": 427
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 428,
            "end": 436
          },
          "optional": false,
          "computed": false,
          "start": 411,
          "end": 436
        },
        "start": 396,
        "end": 436
      },
      "start": 396,
      "end": 437
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 442,
              "end": 445
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 446,
              "end": 454
            },
            "optional": false,
            "computed": false,
            "start": 442,
            "end": 454
          },
          "arguments": [],
          "optional": false,
          "start": 442,
          "end": 456
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 461,
              "end": 471
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 474,
              "end": 481
            },
            "start": 461,
            "end": 481
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 484,
            "end": 487
          },
          "start": 461,
          "end": 487
        },
        "start": 442,
        "end": 487
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 503,
                "end": 515
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr is Array object. Actual: '",
                    "start": 516,
                    "end": 659
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 663,
                          "end": 666
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 667,
                          "end": 675
                        },
                        "optional": false,
                        "computed": false,
                        "start": 663,
                        "end": 675
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 663,
                      "end": 677
                    },
                    "start": 662,
                    "end": 678
                  },
                  "start": 516,
                  "end": 678
                }
              ],
              "start": 499,
              "end": 679
            },
            "start": 493,
            "end": 680
          }
        ],
        "start": 489,
        "end": 682
      },
      "alternate": null,
      "start": 438,
      "end": 682
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 688,
            "end": 691
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 692,
            "end": 698
          },
          "optional": false,
          "computed": false,
          "start": 688,
          "end": 698
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 703,
          "end": 704
        },
        "start": 688,
        "end": 704
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 720,
                "end": 732
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr.length === 3. Actual: '",
                    "start": 733,
                    "end": 873
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 877,
                        "end": 880
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 881,
                        "end": 887
                      },
                      "optional": false,
                      "computed": false,
                      "start": 877,
                      "end": 887
                    },
                    "start": 876,
                    "end": 888
                  },
                  "start": 733,
                  "end": 888
                }
              ],
              "start": 716,
              "end": 889
            },
            "start": 710,
            "end": 890
          }
        ],
        "start": 706,
        "end": 892
      },
      "alternate": null,
      "start": 684,
      "end": 892
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 898,
            "end": 901
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 902,
            "end": 903
          },
          "optional": false,
          "computed": true,
          "start": 898,
          "end": 904
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 909,
          "end": 910
        },
        "start": 898,
        "end": 910
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 926,
                "end": 938
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[0] === 0. Actual: '",
                    "start": 939,
                    "end": 1075
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1079,
                        "end": 1082
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1083,
                        "end": 1084
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1079,
                      "end": 1085
                    },
                    "start": 1078,
                    "end": 1086
                  },
                  "start": 939,
                  "end": 1086
                }
              ],
              "start": 922,
              "end": 1087
            },
            "start": 916,
            "end": 1088
          }
        ],
        "start": 912,
        "end": 1090
      },
      "alternate": null,
      "start": 894,
      "end": 1090
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1096,
            "end": 1099
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1100,
            "end": 1101
          },
          "optional": false,
          "computed": true,
          "start": 1096,
          "end": 1102
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1107,
          "end": 1108
        },
        "start": 1096,
        "end": 1108
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1124,
                "end": 1136
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[1] === 1. Actual: '",
                    "start": 1137,
                    "end": 1273
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1277,
                        "end": 1280
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1281,
                        "end": 1282
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1277,
                      "end": 1283
                    },
                    "start": 1276,
                    "end": 1284
                  },
                  "start": 1137,
                  "end": 1284
                }
              ],
              "start": 1120,
              "end": 1285
            },
            "start": 1114,
            "end": 1286
          }
        ],
        "start": 1110,
        "end": 1288
      },
      "alternate": null,
      "start": 1092,
      "end": 1288
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1294,
            "end": 1297
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1298,
            "end": 1299
          },
          "optional": false,
          "computed": true,
          "start": 1294,
          "end": 1300
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1305,
          "end": 1306
        },
        "start": 1294,
        "end": 1306
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1322,
                "end": 1334
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[2] === 2. Actual: '",
                    "start": 1335,
                    "end": 1471
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1475,
                        "end": 1478
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1479,
                        "end": 1480
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1475,
                      "end": 1481
                    },
                    "start": 1474,
                    "end": 1482
                  },
                  "start": 1335,
                  "end": 1482
                }
              ],
              "start": 1318,
              "end": 1483
            },
            "start": 1312,
            "end": 1484
          }
        ],
        "start": 1308,
        "end": 1486
      },
      "alternate": null,
      "start": 1290,
      "end": 1486
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1492,
            "end": 1493
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1494,
            "end": 1500
          },
          "optional": false,
          "computed": false,
          "start": 1492,
          "end": 1500
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1505,
          "end": 1506
        },
        "start": 1492,
        "end": 1506
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1522,
                "end": 1534
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); x.length === 1. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); x.length === 1. Actual: '",
                    "start": 1535,
                    "end": 1673
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1677,
                        "end": 1678
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1679,
                        "end": 1685
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1677,
                      "end": 1685
                    },
                    "start": 1676,
                    "end": 1686
                  },
                  "start": 1535,
                  "end": 1686
                }
              ],
              "start": 1518,
              "end": 1687
            },
            "start": 1512,
            "end": 1688
          }
        ],
        "start": 1508,
        "end": 1690
      },
      "alternate": null,
      "start": 1488,
      "end": 1690
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1696,
            "end": 1697
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1698,
            "end": 1699
          },
          "optional": false,
          "computed": true,
          "start": 1696,
          "end": 1700
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 1705,
          "end": 1706
        },
        "start": 1696,
        "end": 1706
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1722,
                "end": 1734
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); x[0] === 3. Actual: ",
                    "raw": "'#7: var x = [0,1,2,3]; var arr = x.splice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); x[0] === 3. Actual: '",
                    "start": 1735,
                    "end": 1869
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1873,
                        "end": 1874
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1875,
                        "end": 1876
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1873,
                      "end": 1877
                    },
                    "start": 1872,
                    "end": 1878
                  },
                  "start": 1735,
                  "end": 1878
                }
              ],
              "start": 1718,
              "end": 1879
            },
            "start": 1712,
            "end": 1880
          }
        ],
        "start": 1708,
        "end": 1882
      },
      "alternate": null,
      "start": 1692,
      "end": 1882
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1883
}