{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 260,
            "end": 261
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 265,
                "end": 266
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 268,
                "end": 269
              }
            ],
            "start": 264,
            "end": 270
          },
          "start": 260,
          "end": 270
        }
      ],
      "start": 256,
      "end": 271
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 276,
            "end": 279
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 282,
                "end": 283
              },
              "property": {
                "type": "Identifier",
                "name": "splice",
                "start": 284,
                "end": 290
              },
              "optional": false,
              "computed": false,
              "start": 282,
              "end": 290
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 291,
                "end": 292
              },
              {
                "type": "Identifier",
                "name": "NaN",
                "start": 294,
                "end": 297
              }
            ],
            "optional": false,
            "start": 282,
            "end": 298
          },
          "start": 276,
          "end": 298
        }
      ],
      "start": 272,
      "end": 299
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 301,
            "end": 304
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 305,
            "end": 313
          },
          "optional": false,
          "computed": false,
          "start": 301,
          "end": 313
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 316,
              "end": 322
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 323,
              "end": 332
            },
            "optional": false,
            "computed": false,
            "start": 316,
            "end": 332
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 333,
            "end": 341
          },
          "optional": false,
          "computed": false,
          "start": 316,
          "end": 341
        },
        "start": 301,
        "end": 341
      },
      "start": 301,
      "end": 342
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 347,
              "end": 350
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 351,
              "end": 359
            },
            "optional": false,
            "computed": false,
            "start": 347,
            "end": 359
          },
          "arguments": [],
          "optional": false,
          "start": 347,
          "end": 361
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 366,
              "end": 376
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 379,
              "end": 386
            },
            "start": 366,
            "end": 386
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 389,
            "end": 392
          },
          "start": 366,
          "end": 392
        },
        "start": 347,
        "end": 392
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 408,
                "end": 420
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#0: var x = [0,1]; var arr = x.splice(0,NaN); arr is Array object. Actual: ",
                    "raw": "'#0: var x = [0,1]; var arr = x.splice(0,NaN); arr is Array object. Actual: '",
                    "start": 421,
                    "end": 498
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 502,
                          "end": 505
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 506,
                          "end": 514
                        },
                        "optional": false,
                        "computed": false,
                        "start": 502,
                        "end": 514
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 502,
                      "end": 516
                    },
                    "start": 501,
                    "end": 517
                  },
                  "start": 421,
                  "end": 517
                }
              ],
              "start": 404,
              "end": 518
            },
            "start": 398,
            "end": 519
          }
        ],
        "start": 394,
        "end": 521
      },
      "alternate": null,
      "start": 343,
      "end": 521
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 527,
            "end": 530
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 531,
            "end": 537
          },
          "optional": false,
          "computed": false,
          "start": 527,
          "end": 537
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 542,
          "end": 543
        },
        "start": 527,
        "end": 543
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 559,
                "end": 571
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1]; var arr = x.splice(0,NaN); arr.length === 0. Actual: ",
                    "raw": "'#1: var x = [0,1]; var arr = x.splice(0,NaN); arr.length === 0. Actual: '",
                    "start": 572,
                    "end": 646
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 650,
                        "end": 653
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 654,
                        "end": 660
                      },
                      "optional": false,
                      "computed": false,
                      "start": 650,
                      "end": 660
                    },
                    "start": 649,
                    "end": 661
                  },
                  "start": 572,
                  "end": 661
                }
              ],
              "start": 555,
              "end": 662
            },
            "start": 549,
            "end": 663
          }
        ],
        "start": 545,
        "end": 665
      },
      "alternate": null,
      "start": 523,
      "end": 665
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 671,
            "end": 672
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 673,
            "end": 679
          },
          "optional": false,
          "computed": false,
          "start": 671,
          "end": 679
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 684,
          "end": 685
        },
        "start": 671,
        "end": 685
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 701,
                "end": 713
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1]; var arr = x.splice(0,NaN); x.length === 2. Actual: ",
                    "raw": "'#2: var x = [0,1]; var arr = x.splice(0,NaN); x.length === 2. Actual: '",
                    "start": 714,
                    "end": 786
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 790,
                        "end": 791
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 792,
                        "end": 798
                      },
                      "optional": false,
                      "computed": false,
                      "start": 790,
                      "end": 798
                    },
                    "start": 789,
                    "end": 799
                  },
                  "start": 714,
                  "end": 799
                }
              ],
              "start": 697,
              "end": 800
            },
            "start": 691,
            "end": 801
          }
        ],
        "start": 687,
        "end": 803
      },
      "alternate": null,
      "start": 667,
      "end": 803
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 809,
            "end": 810
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 811,
            "end": 812
          },
          "optional": false,
          "computed": true,
          "start": 809,
          "end": 813
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 818,
          "end": 819
        },
        "start": 809,
        "end": 819
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 835,
                "end": 847
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1]; var arr = x.splice(0,NaN); x[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1]; var arr = x.splice(0,NaN); x[0] === 0. Actual: '",
                    "start": 848,
                    "end": 916
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 920,
                        "end": 921
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 922,
                        "end": 923
                      },
                      "optional": false,
                      "computed": true,
                      "start": 920,
                      "end": 924
                    },
                    "start": 919,
                    "end": 925
                  },
                  "start": 848,
                  "end": 925
                }
              ],
              "start": 831,
              "end": 926
            },
            "start": 825,
            "end": 927
          }
        ],
        "start": 821,
        "end": 929
      },
      "alternate": null,
      "start": 805,
      "end": 929
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 935,
            "end": 936
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 937,
            "end": 938
          },
          "optional": false,
          "computed": true,
          "start": 935,
          "end": 939
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 944,
          "end": 945
        },
        "start": 935,
        "end": 945
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 961,
                "end": 973
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = [0,1]; var arr = x.splice(0,NaN); x[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1]; var arr = x.splice(0,NaN); x[1] === 1. Actual: '",
                    "start": 974,
                    "end": 1042
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1046,
                        "end": 1047
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1048,
                        "end": 1049
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1046,
                      "end": 1050
                    },
                    "start": 1045,
                    "end": 1051
                  },
                  "start": 974,
                  "end": 1051
                }
              ],
              "start": 957,
              "end": 1052
            },
            "start": 951,
            "end": 1053
          }
        ],
        "start": 947,
        "end": 1055
      },
      "alternate": null,
      "start": 931,
      "end": 1055
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1056
}