{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 265,
            "end": 266
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 270,
                "end": 271
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 273,
                "end": 274
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 276,
                "end": 277
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 279,
                "end": 280
              }
            ],
            "start": 269,
            "end": 281
          },
          "start": 265,
          "end": 281
        }
      ],
      "start": 261,
      "end": 282
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 287,
            "end": 290
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 293,
                "end": 294
              },
              "property": {
                "type": "Identifier",
                "name": "splice",
                "start": 295,
                "end": 301
              },
              "optional": false,
              "computed": false,
              "start": 293,
              "end": 301
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 302,
                "end": 303
              },
              {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 305,
                  "end": 311
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 312,
                  "end": 329
                },
                "optional": false,
                "computed": false,
                "start": 305,
                "end": 329
              }
            ],
            "optional": false,
            "start": 293,
            "end": 330
          },
          "start": 287,
          "end": 330
        }
      ],
      "start": 283,
      "end": 331
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 333,
            "end": 336
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 337,
            "end": 345
          },
          "optional": false,
          "computed": false,
          "start": 333,
          "end": 345
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 348,
              "end": 354
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 355,
              "end": 364
            },
            "optional": false,
            "computed": false,
            "start": 348,
            "end": 364
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 365,
            "end": 373
          },
          "optional": false,
          "computed": false,
          "start": 348,
          "end": 373
        },
        "start": 333,
        "end": 373
      },
      "start": 333,
      "end": 374
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 379,
              "end": 382
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 383,
              "end": 391
            },
            "optional": false,
            "computed": false,
            "start": 379,
            "end": 391
          },
          "arguments": [],
          "optional": false,
          "start": 379,
          "end": 393
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 398,
              "end": 408
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 411,
              "end": 418
            },
            "start": 398,
            "end": 418
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 421,
            "end": 424
          },
          "start": 398,
          "end": 424
        },
        "start": 379,
        "end": 424
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 440,
                "end": 452
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); arr is Array object. Actual: '",
                    "start": 453,
                    "end": 555
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 559,
                          "end": 562
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 563,
                          "end": 571
                        },
                        "optional": false,
                        "computed": false,
                        "start": 559,
                        "end": 571
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 559,
                      "end": 573
                    },
                    "start": 558,
                    "end": 574
                  },
                  "start": 453,
                  "end": 574
                }
              ],
              "start": 436,
              "end": 575
            },
            "start": 430,
            "end": 576
          }
        ],
        "start": 426,
        "end": 578
      },
      "alternate": null,
      "start": 375,
      "end": 578
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 584,
            "end": 587
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 588,
            "end": 594
          },
          "optional": false,
          "computed": false,
          "start": 584,
          "end": 594
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 4,
          "raw": "4",
          "start": 599,
          "end": 600
        },
        "start": 584,
        "end": 600
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 616,
                "end": 628
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); arr.length === 4. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); arr.length === 4. Actual: '",
                    "start": 629,
                    "end": 728
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 732,
                        "end": 735
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 736,
                        "end": 742
                      },
                      "optional": false,
                      "computed": false,
                      "start": 732,
                      "end": 742
                    },
                    "start": 731,
                    "end": 743
                  },
                  "start": 629,
                  "end": 743
                }
              ],
              "start": 612,
              "end": 744
            },
            "start": 606,
            "end": 745
          }
        ],
        "start": 602,
        "end": 747
      },
      "alternate": null,
      "start": 580,
      "end": 747
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 753,
            "end": 756
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 757,
            "end": 758
          },
          "optional": false,
          "computed": true,
          "start": 753,
          "end": 759
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 764,
          "end": 765
        },
        "start": 753,
        "end": 765
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 781,
                "end": 793
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); arr[0] === 0. Actual: '",
                    "start": 794,
                    "end": 889
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 893,
                        "end": 896
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 897,
                        "end": 898
                      },
                      "optional": false,
                      "computed": true,
                      "start": 893,
                      "end": 899
                    },
                    "start": 892,
                    "end": 900
                  },
                  "start": 794,
                  "end": 900
                }
              ],
              "start": 777,
              "end": 901
            },
            "start": 771,
            "end": 902
          }
        ],
        "start": 767,
        "end": 904
      },
      "alternate": null,
      "start": 749,
      "end": 904
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 910,
            "end": 913
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 914,
            "end": 915
          },
          "optional": false,
          "computed": true,
          "start": 910,
          "end": 916
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 921,
          "end": 922
        },
        "start": 910,
        "end": 922
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 938,
                "end": 950
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); arr[1] === 1. Actual: '",
                    "start": 951,
                    "end": 1046
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1050,
                        "end": 1053
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1054,
                        "end": 1055
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1050,
                      "end": 1056
                    },
                    "start": 1049,
                    "end": 1057
                  },
                  "start": 951,
                  "end": 1057
                }
              ],
              "start": 934,
              "end": 1058
            },
            "start": 928,
            "end": 1059
          }
        ],
        "start": 924,
        "end": 1061
      },
      "alternate": null,
      "start": 906,
      "end": 1061
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1067,
            "end": 1070
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1071,
            "end": 1072
          },
          "optional": false,
          "computed": true,
          "start": 1067,
          "end": 1073
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1078,
          "end": 1079
        },
        "start": 1067,
        "end": 1079
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1095,
                "end": 1107
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); arr[2] === 2. Actual: '",
                    "start": 1108,
                    "end": 1203
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1207,
                        "end": 1210
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1211,
                        "end": 1212
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1207,
                      "end": 1213
                    },
                    "start": 1206,
                    "end": 1214
                  },
                  "start": 1108,
                  "end": 1214
                }
              ],
              "start": 1091,
              "end": 1215
            },
            "start": 1085,
            "end": 1216
          }
        ],
        "start": 1081,
        "end": 1218
      },
      "alternate": null,
      "start": 1063,
      "end": 1218
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1224,
            "end": 1227
          },
          "property": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 1228,
            "end": 1229
          },
          "optional": false,
          "computed": true,
          "start": 1224,
          "end": 1230
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 1235,
          "end": 1236
        },
        "start": 1224,
        "end": 1236
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1252,
                "end": 1264
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); arr[3] === 3. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); arr[3] === 3. Actual: '",
                    "start": 1265,
                    "end": 1360
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1364,
                        "end": 1367
                      },
                      "property": {
                        "type": "Literal",
                        "value": 3,
                        "raw": "3",
                        "start": 1368,
                        "end": 1369
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1364,
                      "end": 1370
                    },
                    "start": 1363,
                    "end": 1371
                  },
                  "start": 1265,
                  "end": 1371
                }
              ],
              "start": 1248,
              "end": 1372
            },
            "start": 1242,
            "end": 1373
          }
        ],
        "start": 1238,
        "end": 1375
      },
      "alternate": null,
      "start": 1220,
      "end": 1375
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1381,
            "end": 1382
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1383,
            "end": 1389
          },
          "optional": false,
          "computed": false,
          "start": 1381,
          "end": 1389
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1394,
          "end": 1395
        },
        "start": 1381,
        "end": 1395
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1411,
                "end": 1423
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); x.length === 0. Actual: ",
                    "raw": "'#7: var x = [0,1,2,3]; var arr = x.splice(0,Number.POSITIVE_INFINITY); x.length === 0. Actual: '",
                    "start": 1424,
                    "end": 1521
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1525,
                        "end": 1526
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1527,
                        "end": 1533
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1525,
                      "end": 1533
                    },
                    "start": 1524,
                    "end": 1534
                  },
                  "start": 1424,
                  "end": 1534
                }
              ],
              "start": 1407,
              "end": 1535
            },
            "start": 1401,
            "end": 1536
          }
        ],
        "start": 1397,
        "end": 1538
      },
      "alternate": null,
      "start": 1377,
      "end": 1538
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1539
}