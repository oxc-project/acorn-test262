{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Array",
              "start": 353,
              "end": 358
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 359,
              "end": 368
            },
            "optional": false,
            "computed": false,
            "start": 353,
            "end": 368
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 369,
            "end": 370
          },
          "optional": false,
          "computed": true,
          "start": 353,
          "end": 371
        },
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 375,
            "end": 376
          },
          "prefix": true,
          "start": 374,
          "end": 376
        },
        "start": 353,
        "end": 376
      },
      "start": 353,
      "end": 377
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 382,
            "end": 383
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 387,
                "end": 388
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 390,
                "end": 391
              }
            ],
            "start": 386,
            "end": 392
          },
          "start": 382,
          "end": 392
        }
      ],
      "start": 378,
      "end": 393
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 398,
            "end": 401
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 404,
                "end": 405
              },
              "property": {
                "type": "Identifier",
                "name": "splice",
                "start": 406,
                "end": 412
              },
              "optional": false,
              "computed": false,
              "start": 404,
              "end": 412
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 413,
                "end": 414
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 416,
                "end": 417
              }
            ],
            "optional": false,
            "start": 404,
            "end": 418
          },
          "start": 398,
          "end": 418
        }
      ],
      "start": 394,
      "end": 419
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 425,
            "end": 428
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 429,
            "end": 435
          },
          "optional": false,
          "computed": false,
          "start": 425,
          "end": 435
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 440,
          "end": 441
        },
        "start": 425,
        "end": 441
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 457,
                "end": 469
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1); arr.length === 1. Actual: ",
                    "raw": "'#1: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1); arr.length === 1. Actual: '",
                    "start": 470,
                    "end": 563
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 567,
                        "end": 570
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 571,
                        "end": 577
                      },
                      "optional": false,
                      "computed": false,
                      "start": 567,
                      "end": 577
                    },
                    "start": 566,
                    "end": 578
                  },
                  "start": 470,
                  "end": 578
                }
              ],
              "start": 453,
              "end": 579
            },
            "start": 447,
            "end": 580
          }
        ],
        "start": 443,
        "end": 582
      },
      "alternate": null,
      "start": 421,
      "end": 582
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 588,
            "end": 591
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 592,
            "end": 593
          },
          "optional": false,
          "computed": true,
          "start": 588,
          "end": 594
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 599,
          "end": 600
        },
        "start": 588,
        "end": 600
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 616,
                "end": 628
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1); arr[0] === 1. Actual: ",
                    "raw": "'#2: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1); arr[0] === 1. Actual: '",
                    "start": 629,
                    "end": 718
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 722,
                        "end": 725
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 726,
                        "end": 727
                      },
                      "optional": false,
                      "computed": true,
                      "start": 722,
                      "end": 728
                    },
                    "start": 721,
                    "end": 729
                  },
                  "start": 629,
                  "end": 729
                }
              ],
              "start": 612,
              "end": 730
            },
            "start": 606,
            "end": 731
          }
        ],
        "start": 602,
        "end": 733
      },
      "alternate": null,
      "start": 584,
      "end": 733
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 739,
            "end": 742
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 743,
            "end": 744
          },
          "optional": false,
          "computed": true,
          "start": 739,
          "end": 745
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 751,
            "end": 752
          },
          "prefix": true,
          "start": 750,
          "end": 752
        },
        "start": 739,
        "end": 752
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 768,
                "end": 780
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1); arr[1] === -1. Actual: ",
                    "raw": "'#3: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1); arr[1] === -1. Actual: '",
                    "start": 781,
                    "end": 871
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 875,
                        "end": 878
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 879,
                        "end": 880
                      },
                      "optional": false,
                      "computed": true,
                      "start": 875,
                      "end": 881
                    },
                    "start": 874,
                    "end": 882
                  },
                  "start": 781,
                  "end": 882
                }
              ],
              "start": 764,
              "end": 883
            },
            "start": 758,
            "end": 884
          }
        ],
        "start": 754,
        "end": 886
      },
      "alternate": null,
      "start": 735,
      "end": 886
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 892,
            "end": 893
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 894,
            "end": 900
          },
          "optional": false,
          "computed": false,
          "start": 892,
          "end": 900
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 905,
          "end": 906
        },
        "start": 892,
        "end": 906
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 922,
                "end": 934
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1); x.length === 1. Actual: ",
                    "raw": "'#4: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1); x.length === 1. Actual: '",
                    "start": 935,
                    "end": 1026
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1030,
                        "end": 1031
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1032,
                        "end": 1038
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1030,
                      "end": 1038
                    },
                    "start": 1029,
                    "end": 1039
                  },
                  "start": 935,
                  "end": 1039
                }
              ],
              "start": 918,
              "end": 1040
            },
            "start": 912,
            "end": 1041
          }
        ],
        "start": 908,
        "end": 1043
      },
      "alternate": null,
      "start": 888,
      "end": 1043
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1049,
            "end": 1050
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1051,
            "end": 1052
          },
          "optional": false,
          "computed": true,
          "start": 1049,
          "end": 1053
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1058,
          "end": 1059
        },
        "start": 1049,
        "end": 1059
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1075,
                "end": 1087
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1); x[0] === 0. Actual: ",
                    "raw": "'#5: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1); x[0] === 0. Actual: '",
                    "start": 1088,
                    "end": 1175
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1179,
                        "end": 1180
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1181,
                        "end": 1182
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1179,
                      "end": 1183
                    },
                    "start": 1178,
                    "end": 1184
                  },
                  "start": 1088,
                  "end": 1184
                }
              ],
              "start": 1071,
              "end": 1185
            },
            "start": 1065,
            "end": 1186
          }
        ],
        "start": 1061,
        "end": 1188
      },
      "alternate": null,
      "start": 1045,
      "end": 1188
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1194,
            "end": 1195
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1196,
            "end": 1197
          },
          "optional": false,
          "computed": true,
          "start": 1194,
          "end": 1198
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1204,
            "end": 1205
          },
          "prefix": true,
          "start": 1203,
          "end": 1205
        },
        "start": 1194,
        "end": 1205
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1221,
                "end": 1233
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1); x[1] === -1. Actual: ",
                    "raw": "'#6: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1); x[1] === -1. Actual: '",
                    "start": 1234,
                    "end": 1322
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1326,
                        "end": 1327
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1328,
                        "end": 1329
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1326,
                      "end": 1330
                    },
                    "start": 1325,
                    "end": 1331
                  },
                  "start": 1234,
                  "end": 1331
                }
              ],
              "start": 1217,
              "end": 1332
            },
            "start": 1211,
            "end": 1333
          }
        ],
        "start": 1207,
        "end": 1335
      },
      "alternate": null,
      "start": 1190,
      "end": 1335
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 1338,
              "end": 1344
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 1345,
              "end": 1354
            },
            "optional": false,
            "computed": false,
            "start": 1338,
            "end": 1354
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1355,
            "end": 1356
          },
          "optional": false,
          "computed": true,
          "start": 1338,
          "end": 1357
        },
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1361,
            "end": 1362
          },
          "prefix": true,
          "start": 1360,
          "end": 1362
        },
        "start": 1338,
        "end": 1362
      },
      "start": 1338,
      "end": 1363
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 1364,
              "end": 1370
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 1371,
              "end": 1380
            },
            "optional": false,
            "computed": false,
            "start": 1364,
            "end": 1380
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1381,
            "end": 1387
          },
          "optional": false,
          "computed": false,
          "start": 1364,
          "end": 1387
        },
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1390,
          "end": 1391
        },
        "start": 1364,
        "end": 1391
      },
      "start": 1364,
      "end": 1392
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 1393,
              "end": 1399
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 1400,
              "end": 1409
            },
            "optional": false,
            "computed": false,
            "start": 1393,
            "end": 1409
          },
          "property": {
            "type": "Identifier",
            "name": "splice",
            "start": 1410,
            "end": 1416
          },
          "optional": false,
          "computed": false,
          "start": 1393,
          "end": 1416
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Array",
              "start": 1419,
              "end": 1424
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 1425,
              "end": 1434
            },
            "optional": false,
            "computed": false,
            "start": 1419,
            "end": 1434
          },
          "property": {
            "type": "Identifier",
            "name": "splice",
            "start": 1435,
            "end": 1441
          },
          "optional": false,
          "computed": false,
          "start": 1419,
          "end": 1441
        },
        "start": 1393,
        "end": 1441
      },
      "start": 1393,
      "end": 1442
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1443,
          "end": 1444
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "kind": "init",
              "key": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1451,
                "end": 1452
              },
              "value": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1454,
                "end": 1455
              },
              "method": false,
              "shorthand": false,
              "computed": false,
              "start": 1451,
              "end": 1455
            },
            {
              "type": "Property",
              "kind": "init",
              "key": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1459,
                "end": 1460
              },
              "value": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1462,
                "end": 1463
              },
              "method": false,
              "shorthand": false,
              "computed": false,
              "start": 1459,
              "end": 1463
            }
          ],
          "start": 1447,
          "end": 1465
        },
        "start": 1443,
        "end": 1465
      },
      "start": 1443,
      "end": 1466
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 1471,
            "end": 1474
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 1477,
                "end": 1478
              },
              "property": {
                "type": "Identifier",
                "name": "splice",
                "start": 1479,
                "end": 1485
              },
              "optional": false,
              "computed": false,
              "start": 1477,
              "end": 1485
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1486,
                "end": 1487
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1489,
                "end": 1490
              }
            ],
            "optional": false,
            "start": 1477,
            "end": 1491
          },
          "start": 1471,
          "end": 1491
        }
      ],
      "start": 1467,
      "end": 1492
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1498,
            "end": 1501
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1502,
            "end": 1508
          },
          "optional": false,
          "computed": false,
          "start": 1498,
          "end": 1508
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1513,
          "end": 1514
        },
        "start": 1498,
        "end": 1514
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1530,
                "end": 1542
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1); arr.length === 1. Actual: ",
                    "raw": "'#7: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1); arr.length === 1. Actual: '",
                    "start": 1543,
                    "end": 1721
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1725,
                        "end": 1728
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1729,
                        "end": 1735
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1725,
                      "end": 1735
                    },
                    "start": 1724,
                    "end": 1736
                  },
                  "start": 1543,
                  "end": 1736
                }
              ],
              "start": 1526,
              "end": 1737
            },
            "start": 1520,
            "end": 1738
          }
        ],
        "start": 1516,
        "end": 1740
      },
      "alternate": null,
      "start": 1494,
      "end": 1740
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1746,
            "end": 1749
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1750,
            "end": 1751
          },
          "optional": false,
          "computed": true,
          "start": 1746,
          "end": 1752
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1757,
          "end": 1758
        },
        "start": 1746,
        "end": 1758
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1774,
                "end": 1786
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1); arr[0] === 1. Actual: ",
                    "raw": "'#8: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1); arr[0] === 1. Actual: '",
                    "start": 1787,
                    "end": 1961
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1965,
                        "end": 1968
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1969,
                        "end": 1970
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1965,
                      "end": 1971
                    },
                    "start": 1964,
                    "end": 1972
                  },
                  "start": 1787,
                  "end": 1972
                }
              ],
              "start": 1770,
              "end": 1973
            },
            "start": 1764,
            "end": 1974
          }
        ],
        "start": 1760,
        "end": 1976
      },
      "alternate": null,
      "start": 1742,
      "end": 1976
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1982,
            "end": 1985
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1986,
            "end": 1987
          },
          "optional": false,
          "computed": true,
          "start": 1982,
          "end": 1988
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1994,
            "end": 1995
          },
          "prefix": true,
          "start": 1993,
          "end": 1995
        },
        "start": 1982,
        "end": 1995
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2011,
                "end": 2023
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1); arr[1] === -1. Actual: ",
                    "raw": "'#9: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1); arr[1] === -1. Actual: '",
                    "start": 2024,
                    "end": 2199
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 2203,
                        "end": 2206
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 2207,
                        "end": 2208
                      },
                      "optional": false,
                      "computed": true,
                      "start": 2203,
                      "end": 2209
                    },
                    "start": 2202,
                    "end": 2210
                  },
                  "start": 2024,
                  "end": 2210
                }
              ],
              "start": 2007,
              "end": 2211
            },
            "start": 2001,
            "end": 2212
          }
        ],
        "start": 1997,
        "end": 2214
      },
      "alternate": null,
      "start": 1978,
      "end": 2214
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 2220,
            "end": 2221
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 2222,
            "end": 2228
          },
          "optional": false,
          "computed": false,
          "start": 2220,
          "end": 2228
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 2233,
          "end": 2234
        },
        "start": 2220,
        "end": 2234
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2250,
                "end": 2262
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1); x.length === 1. Actual: ",
                    "raw": "'#10: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1); x.length === 1. Actual: '",
                    "start": 2263,
                    "end": 2440
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 2444,
                        "end": 2445
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 2446,
                        "end": 2452
                      },
                      "optional": false,
                      "computed": false,
                      "start": 2444,
                      "end": 2452
                    },
                    "start": 2443,
                    "end": 2453
                  },
                  "start": 2263,
                  "end": 2453
                }
              ],
              "start": 2246,
              "end": 2454
            },
            "start": 2240,
            "end": 2455
          }
        ],
        "start": 2236,
        "end": 2457
      },
      "alternate": null,
      "start": 2216,
      "end": 2457
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 2463,
            "end": 2464
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 2465,
            "end": 2466
          },
          "optional": false,
          "computed": true,
          "start": 2463,
          "end": 2467
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 2472,
          "end": 2473
        },
        "start": 2463,
        "end": 2473
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2489,
                "end": 2501
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#11: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1); x[0] === 0. Actual: ",
                    "raw": "'#11: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1); x[0] === 0. Actual: '",
                    "start": 2502,
                    "end": 2675
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 2679,
                        "end": 2680
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 2681,
                        "end": 2682
                      },
                      "optional": false,
                      "computed": true,
                      "start": 2679,
                      "end": 2683
                    },
                    "start": 2678,
                    "end": 2684
                  },
                  "start": 2502,
                  "end": 2684
                }
              ],
              "start": 2485,
              "end": 2685
            },
            "start": 2479,
            "end": 2686
          }
        ],
        "start": 2475,
        "end": 2688
      },
      "alternate": null,
      "start": 2459,
      "end": 2688
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 2694,
            "end": 2695
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 2696,
            "end": 2697
          },
          "optional": false,
          "computed": true,
          "start": 2694,
          "end": 2698
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 2704,
            "end": 2705
          },
          "prefix": true,
          "start": 2703,
          "end": 2705
        },
        "start": 2694,
        "end": 2705
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2721,
                "end": 2733
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#12: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1); x[1] === -1. Actual: ",
                    "raw": "'#12: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1); x[1] === -1. Actual: '",
                    "start": 2734,
                    "end": 2908
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 2912,
                        "end": 2913
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 2914,
                        "end": 2915
                      },
                      "optional": false,
                      "computed": true,
                      "start": 2912,
                      "end": 2916
                    },
                    "start": 2911,
                    "end": 2917
                  },
                  "start": 2734,
                  "end": 2917
                }
              ],
              "start": 2717,
              "end": 2918
            },
            "start": 2711,
            "end": 2919
          }
        ],
        "start": 2707,
        "end": 2921
      },
      "alternate": null,
      "start": 2690,
      "end": 2921
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2922
}