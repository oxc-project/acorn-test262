{
  "type": "Program",
  "start": 0,
  "end": 491,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 247,
      "end": 268,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 251,
          "end": 267,
          "id": {
            "type": "Identifier",
            "start": 251,
            "end": 259,
            "name": "accessed"
          },
          "init": {
            "type": "Literal",
            "start": 262,
            "end": 267,
            "value": false,
            "raw": "false"
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "start": 270,
      "end": 361,
      "id": {
        "type": "Identifier",
        "start": 279,
        "end": 289,
        "name": "callbackfn"
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 290,
          "end": 297,
          "name": "prevVal"
        },
        {
          "type": "Identifier",
          "start": 299,
          "end": 305,
          "name": "curVal"
        },
        {
          "type": "Identifier",
          "start": 307,
          "end": 310,
          "name": "idx"
        },
        {
          "type": "Identifier",
          "start": 312,
          "end": 315,
          "name": "obj"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 317,
        "end": 361,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 321,
            "end": 337,
            "expression": {
              "type": "AssignmentExpression",
              "start": 321,
              "end": 336,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 321,
                "end": 329,
                "name": "accessed"
              },
              "right": {
                "type": "Literal",
                "start": 332,
                "end": 336,
                "value": true,
                "raw": "true"
              }
            }
          },
          {
            "type": "ReturnStatement",
            "start": 340,
            "end": 359,
            "argument": {
              "type": "BinaryExpression",
              "start": 347,
              "end": 358,
              "left": {
                "type": "Identifier",
                "start": 347,
                "end": 353,
                "name": "curVal"
              },
              "operator": ">",
              "right": {
                "type": "Literal",
                "start": 356,
                "end": 358,
                "value": 10,
                "raw": "10"
              }
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "start": 363,
      "end": 451,
      "expression": {
        "type": "CallExpression",
        "start": 363,
        "end": 450,
        "callee": {
          "type": "MemberExpression",
          "start": 363,
          "end": 379,
          "object": {
            "type": "Identifier",
            "start": 363,
            "end": 369,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 370,
            "end": 379,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 380,
            "end": 409,
            "callee": {
              "type": "MemberExpression",
              "start": 380,
              "end": 394,
              "object": {
                "type": "ArrayExpression",
                "start": 380,
                "end": 387,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 381,
                    "end": 383,
                    "value": 11,
                    "raw": "11"
                  },
                  {
                    "type": "Literal",
                    "start": 385,
                    "end": 386,
                    "value": 9,
                    "raw": "9"
                  }
                ]
              },
              "property": {
                "type": "Identifier",
                "start": 388,
                "end": 394,
                "name": "reduce"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 395,
                "end": 405,
                "name": "callbackfn"
              },
              {
                "type": "Literal",
                "start": 407,
                "end": 408,
                "value": 1,
                "raw": "1"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 411,
            "end": 416,
            "value": false,
            "raw": "false"
          },
          {
            "type": "Literal",
            "start": 418,
            "end": 449,
            "value": "[11, 9].reduce(callbackfn, 1)",
            "raw": "'[11, 9].reduce(callbackfn, 1)'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 452,
      "end": 490,
      "expression": {
        "type": "CallExpression",
        "start": 452,
        "end": 489,
        "callee": {
          "type": "Identifier",
          "start": 452,
          "end": 458,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 459,
            "end": 467,
            "name": "accessed"
          },
          {
            "type": "Literal",
            "start": 469,
            "end": 488,
            "value": "accessed !== true",
            "raw": "'accessed !== true'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}