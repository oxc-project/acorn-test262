{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 318,
            "end": 324
          },
          "property": {
            "type": "Identifier",
            "name": "compareArray",
            "start": 325,
            "end": 337
          },
          "optional": false,
          "computed": false,
          "start": 318,
          "end": 337
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 339,
                    "end": 340
                  },
                  {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 342,
                    "end": 343
                  }
                ],
                "start": 338,
                "end": 344
              },
              "property": {
                "type": "Identifier",
                "name": "flatMap",
                "start": 345,
                "end": 352
              },
              "optional": false,
              "computed": false,
              "start": 338,
              "end": 352
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "e",
                    "start": 362,
                    "end": 363
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Identifier",
                            "name": "e",
                            "start": 377,
                            "end": 378
                          },
                          {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "Identifier",
                              "name": "e",
                              "start": 380,
                              "end": 381
                            },
                            "operator": "*",
                            "right": {
                              "type": "Literal",
                              "value": 2,
                              "raw": "2",
                              "start": 384,
                              "end": 385
                            },
                            "start": 380,
                            "end": 385
                          }
                        ],
                        "start": 376,
                        "end": 386
                      },
                      "start": 369,
                      "end": 387
                    }
                  ],
                  "start": 365,
                  "end": 389
                },
                "expression": false,
                "start": 353,
                "end": 389
              }
            ],
            "optional": false,
            "start": 338,
            "end": 390
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 393,
                "end": 394
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 396,
                "end": 397
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 399,
                "end": 400
              },
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 402,
                "end": 403
              }
            ],
            "start": 392,
            "end": 404
          },
          {
            "type": "Literal",
            "value": "[1, 2].flatMap(function(e) {return [e, e * 2];}) must return [1, 2, 2, 4]",
            "raw": "'[1, 2].flatMap(function(e) {return [e, e * 2];}) must return [1, 2, 2, 4]'",
            "start": 406,
            "end": 481
          }
        ],
        "optional": false,
        "start": 318,
        "end": 482
      },
      "start": 318,
      "end": 483
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 489,
            "end": 495
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 499,
                    "end": 500
                  },
                  {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 502,
                    "end": 503
                  },
                  {
                    "type": "Literal",
                    "value": 3,
                    "raw": "3",
                    "start": 505,
                    "end": 506
                  }
                ],
                "start": 498,
                "end": 507
              },
              "property": {
                "type": "Identifier",
                "name": "flatMap",
                "start": 508,
                "end": 515
              },
              "optional": false,
              "computed": false,
              "start": 498,
              "end": 515
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "ele",
                    "start": 525,
                    "end": 528
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Identifier",
                                  "name": "ele",
                                  "start": 548,
                                  "end": 551
                                },
                                "operator": "*",
                                "right": {
                                  "type": "Literal",
                                  "value": 2,
                                  "raw": "2",
                                  "start": 554,
                                  "end": 555
                                },
                                "start": 548,
                                "end": 555
                              }
                            ],
                            "start": 547,
                            "end": 556
                          }
                        ],
                        "start": 541,
                        "end": 560
                      },
                      "start": 534,
                      "end": 561
                    }
                  ],
                  "start": 530,
                  "end": 563
                },
                "expression": false,
                "start": 516,
                "end": 563
              }
            ],
            "optional": false,
            "start": 498,
            "end": 564
          },
          "start": 489,
          "end": 564
        }
      ],
      "start": 485,
      "end": 565
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 566,
            "end": 572
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 573,
            "end": 582
          },
          "optional": false,
          "computed": false,
          "start": 566,
          "end": 582
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "result",
              "start": 583,
              "end": 589
            },
            "property": {
              "type": "Identifier",
              "name": "length",
              "start": 590,
              "end": 596
            },
            "optional": false,
            "computed": false,
            "start": 583,
            "end": 596
          },
          {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 598,
            "end": 599
          },
          {
            "type": "Literal",
            "value": "The value of result.length is expected to be 3",
            "raw": "'The value of result.length is expected to be 3'",
            "start": 601,
            "end": 649
          }
        ],
        "optional": false,
        "start": 566,
        "end": 650
      },
      "start": 566,
      "end": 651
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 652,
            "end": 658
          },
          "property": {
            "type": "Identifier",
            "name": "compareArray",
            "start": 659,
            "end": 671
          },
          "optional": false,
          "computed": false,
          "start": 652,
          "end": 671
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "result",
              "start": 672,
              "end": 678
            },
            "property": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 679,
              "end": 680
            },
            "optional": false,
            "computed": true,
            "start": 672,
            "end": 681
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 684,
                "end": 685
              }
            ],
            "start": 683,
            "end": 686
          },
          {
            "type": "Literal",
            "value": "The value of result[0] is expected to be [2]",
            "raw": "'The value of result[0] is expected to be [2]'",
            "start": 688,
            "end": 734
          }
        ],
        "optional": false,
        "start": 652,
        "end": 735
      },
      "start": 652,
      "end": 736
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 737,
            "end": 743
          },
          "property": {
            "type": "Identifier",
            "name": "compareArray",
            "start": 744,
            "end": 756
          },
          "optional": false,
          "computed": false,
          "start": 737,
          "end": 756
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "result",
              "start": 757,
              "end": 763
            },
            "property": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 764,
              "end": 765
            },
            "optional": false,
            "computed": true,
            "start": 757,
            "end": 766
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 769,
                "end": 770
              }
            ],
            "start": 768,
            "end": 771
          },
          {
            "type": "Literal",
            "value": "The value of result[1] is expected to be [4]",
            "raw": "'The value of result[1] is expected to be [4]'",
            "start": 773,
            "end": 819
          }
        ],
        "optional": false,
        "start": 737,
        "end": 820
      },
      "start": 737,
      "end": 821
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 822,
            "end": 828
          },
          "property": {
            "type": "Identifier",
            "name": "compareArray",
            "start": 829,
            "end": 841
          },
          "optional": false,
          "computed": false,
          "start": 822,
          "end": 841
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "result",
              "start": 842,
              "end": 848
            },
            "property": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 849,
              "end": 850
            },
            "optional": false,
            "computed": true,
            "start": 842,
            "end": 851
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 6,
                "raw": "6",
                "start": 854,
                "end": 855
              }
            ],
            "start": 853,
            "end": 856
          },
          {
            "type": "Literal",
            "value": "The value of result[2] is expected to be [6]",
            "raw": "'The value of result[2] is expected to be [6]'",
            "start": 858,
            "end": 904
          }
        ],
        "optional": false,
        "start": 822,
        "end": 905
      },
      "start": 822,
      "end": 906
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 907
}