{
  "type": "Program",
  "start": 0,
  "end": 1664,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 318,
      "end": 348,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 322,
          "end": 347,
          "id": {
            "type": "Identifier",
            "start": 322,
            "end": 323,
            "name": "x"
          },
          "init": {
            "type": "NewExpression",
            "start": 326,
            "end": 347,
            "callee": {
              "type": "Identifier",
              "start": 330,
              "end": 335,
              "name": "Array"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 336,
                "end": 337,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Literal",
                "start": 339,
                "end": 340,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 342,
                "end": 343,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 345,
                "end": 346,
                "value": 3,
                "raw": "3"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 349,
      "end": 483,
      "test": {
        "type": "BinaryExpression",
        "start": 353,
        "end": 374,
        "left": {
          "type": "CallExpression",
          "start": 353,
          "end": 363,
          "callee": {
            "type": "MemberExpression",
            "start": 353,
            "end": 359,
            "object": {
              "type": "Identifier",
              "start": 353,
              "end": 354,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 355,
              "end": 359,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 360,
              "end": 362,
              "value": "",
              "raw": "\"\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 368,
          "end": 374,
          "value": "0123",
          "raw": "\"0123\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 376,
        "end": 483,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 380,
            "end": 481,
            "argument": {
              "type": "NewExpression",
              "start": 386,
              "end": 480,
              "callee": {
                "type": "Identifier",
                "start": 390,
                "end": 402,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 403,
                  "end": 479,
                  "left": {
                    "type": "Literal",
                    "start": 403,
                    "end": 464,
                    "value": "#0: x = new Array(0,1,2,3); x.join(\"\") === \"0123\". Actual: ",
                    "raw": "'#0: x = new Array(0,1,2,3); x.join(\"\") === \"0123\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 467,
                    "end": 479,
                    "expression": {
                      "type": "CallExpression",
                      "start": 468,
                      "end": 478,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 468,
                        "end": 474,
                        "object": {
                          "type": "Identifier",
                          "start": 468,
                          "end": 469,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 470,
                          "end": 474,
                          "name": "join"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 475,
                          "end": 477,
                          "value": "",
                          "raw": "\"\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 485,
      "end": 511,
      "expression": {
        "type": "AssignmentExpression",
        "start": 485,
        "end": 510,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 485,
          "end": 486,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 489,
          "end": 510,
          "callee": {
            "type": "Identifier",
            "start": 493,
            "end": 498,
            "name": "Array"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 499,
              "end": 500,
              "value": 0,
              "raw": "0"
            },
            {
              "type": "Literal",
              "start": 502,
              "end": 503,
              "value": 1,
              "raw": "1"
            },
            {
              "type": "Literal",
              "start": 505,
              "end": 506,
              "value": 2,
              "raw": "2"
            },
            {
              "type": "Literal",
              "start": 508,
              "end": 509,
              "value": 3,
              "raw": "3"
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 512,
      "end": 664,
      "test": {
        "type": "BinaryExpression",
        "start": 516,
        "end": 545,
        "left": {
          "type": "CallExpression",
          "start": 516,
          "end": 528,
          "callee": {
            "type": "MemberExpression",
            "start": 516,
            "end": 522,
            "object": {
              "type": "Identifier",
              "start": 516,
              "end": 517,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 518,
              "end": 522,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 523,
              "end": 527,
              "value": "\\",
              "raw": "\"\\\\\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 533,
          "end": 545,
          "value": "0\\1\\2\\3",
          "raw": "\"0\\\\1\\\\2\\\\3\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 547,
        "end": 664,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 551,
            "end": 662,
            "argument": {
              "type": "NewExpression",
              "start": 557,
              "end": 661,
              "callee": {
                "type": "Identifier",
                "start": 561,
                "end": 573,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 574,
                  "end": 660,
                  "left": {
                    "type": "Literal",
                    "start": 574,
                    "end": 643,
                    "value": "#1: x = new Array(0,1,2,3); x.join(\"\\\") === \"0\\1\\2\\3\". Actual: ",
                    "raw": "'#1: x = new Array(0,1,2,3); x.join(\"\\\\\") === \"0\\\\1\\\\2\\\\3\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 646,
                    "end": 660,
                    "expression": {
                      "type": "CallExpression",
                      "start": 647,
                      "end": 659,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 647,
                        "end": 653,
                        "object": {
                          "type": "Identifier",
                          "start": 647,
                          "end": 648,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 649,
                          "end": 653,
                          "name": "join"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 654,
                          "end": 658,
                          "value": "\\",
                          "raw": "\"\\\\\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 666,
      "end": 809,
      "test": {
        "type": "BinaryExpression",
        "start": 670,
        "end": 695,
        "left": {
          "type": "CallExpression",
          "start": 670,
          "end": 681,
          "callee": {
            "type": "MemberExpression",
            "start": 670,
            "end": 676,
            "object": {
              "type": "Identifier",
              "start": 670,
              "end": 671,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 672,
              "end": 676,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 677,
              "end": 680,
              "value": "&",
              "raw": "\"&\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 686,
          "end": 695,
          "value": "0&1&2&3",
          "raw": "\"0&1&2&3\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 697,
        "end": 809,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 701,
            "end": 807,
            "argument": {
              "type": "NewExpression",
              "start": 707,
              "end": 806,
              "callee": {
                "type": "Identifier",
                "start": 711,
                "end": 723,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 724,
                  "end": 805,
                  "left": {
                    "type": "Literal",
                    "start": 724,
                    "end": 789,
                    "value": "#2: x = new Array(0,1,2,3); x.join(\"&\") === \"0&1&2&3\". Actual: ",
                    "raw": "'#2: x = new Array(0,1,2,3); x.join(\"&\") === \"0&1&2&3\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 792,
                    "end": 805,
                    "expression": {
                      "type": "CallExpression",
                      "start": 793,
                      "end": 804,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 793,
                        "end": 799,
                        "object": {
                          "type": "Identifier",
                          "start": 793,
                          "end": 794,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 795,
                          "end": 799,
                          "name": "join"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 800,
                          "end": 803,
                          "value": "&",
                          "raw": "\"&\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 811,
      "end": 975,
      "test": {
        "type": "BinaryExpression",
        "start": 815,
        "end": 850,
        "left": {
          "type": "CallExpression",
          "start": 815,
          "end": 827,
          "callee": {
            "type": "MemberExpression",
            "start": 815,
            "end": 821,
            "object": {
              "type": "Identifier",
              "start": 815,
              "end": 816,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 817,
              "end": 821,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 822,
              "end": 826,
              "value": true,
              "raw": "true"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 832,
          "end": 850,
          "value": "0true1true2true3",
          "raw": "\"0true1true2true3\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 852,
        "end": 975,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 856,
            "end": 973,
            "argument": {
              "type": "NewExpression",
              "start": 862,
              "end": 972,
              "callee": {
                "type": "Identifier",
                "start": 866,
                "end": 878,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 879,
                  "end": 971,
                  "left": {
                    "type": "Literal",
                    "start": 879,
                    "end": 954,
                    "value": "#3: x = new Array(0,1,2,3); x.join(true) === \"0true1true2true3\". Actual: ",
                    "raw": "'#3: x = new Array(0,1,2,3); x.join(true) === \"0true1true2true3\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 957,
                    "end": 971,
                    "expression": {
                      "type": "CallExpression",
                      "start": 958,
                      "end": 970,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 958,
                        "end": 964,
                        "object": {
                          "type": "Identifier",
                          "start": 958,
                          "end": 959,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 960,
                          "end": 964,
                          "name": "join"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 965,
                          "end": 969,
                          "value": true,
                          "raw": "true"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 977,
      "end": 1177,
      "test": {
        "type": "BinaryExpression",
        "start": 981,
        "end": 1032,
        "left": {
          "type": "CallExpression",
          "start": 981,
          "end": 997,
          "callee": {
            "type": "MemberExpression",
            "start": 981,
            "end": 987,
            "object": {
              "type": "Identifier",
              "start": 981,
              "end": 982,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 983,
              "end": 987,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 988,
              "end": 996,
              "name": "Infinity"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1002,
          "end": 1032,
          "value": "0Infinity1Infinity2Infinity3",
          "raw": "\"0Infinity1Infinity2Infinity3\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1034,
        "end": 1177,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1038,
            "end": 1175,
            "argument": {
              "type": "NewExpression",
              "start": 1044,
              "end": 1174,
              "callee": {
                "type": "Identifier",
                "start": 1048,
                "end": 1060,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1061,
                  "end": 1173,
                  "left": {
                    "type": "Literal",
                    "start": 1061,
                    "end": 1152,
                    "value": "#4: x = new Array(0,1,2,3); x.join(Infinity) === \"0Infinity1Infinity2Infinity3\". Actual: ",
                    "raw": "'#4: x = new Array(0,1,2,3); x.join(Infinity) === \"0Infinity1Infinity2Infinity3\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1155,
                    "end": 1173,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1156,
                      "end": 1172,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1156,
                        "end": 1162,
                        "object": {
                          "type": "Identifier",
                          "start": 1156,
                          "end": 1157,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1158,
                          "end": 1162,
                          "name": "join"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1163,
                          "end": 1171,
                          "name": "Infinity"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1179,
      "end": 1343,
      "test": {
        "type": "BinaryExpression",
        "start": 1183,
        "end": 1218,
        "left": {
          "type": "CallExpression",
          "start": 1183,
          "end": 1195,
          "callee": {
            "type": "MemberExpression",
            "start": 1183,
            "end": 1189,
            "object": {
              "type": "Identifier",
              "start": 1183,
              "end": 1184,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 1185,
              "end": 1189,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1190,
              "end": 1194,
              "value": null,
              "raw": "null"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1200,
          "end": 1218,
          "value": "0null1null2null3",
          "raw": "\"0null1null2null3\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1220,
        "end": 1343,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1224,
            "end": 1341,
            "argument": {
              "type": "NewExpression",
              "start": 1230,
              "end": 1340,
              "callee": {
                "type": "Identifier",
                "start": 1234,
                "end": 1246,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1247,
                  "end": 1339,
                  "left": {
                    "type": "Literal",
                    "start": 1247,
                    "end": 1322,
                    "value": "#3: 5 = new Array(0,1,2,3); x.join(null) === \"0null1null2null3\". Actual: ",
                    "raw": "'#3: 5 = new Array(0,1,2,3); x.join(null) === \"0null1null2null3\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1325,
                    "end": 1339,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1326,
                      "end": 1338,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1326,
                        "end": 1332,
                        "object": {
                          "type": "Identifier",
                          "start": 1326,
                          "end": 1327,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1328,
                          "end": 1332,
                          "name": "join"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1333,
                          "end": 1337,
                          "value": null,
                          "raw": "null"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1345,
      "end": 1506,
      "test": {
        "type": "BinaryExpression",
        "start": 1349,
        "end": 1380,
        "left": {
          "type": "CallExpression",
          "start": 1349,
          "end": 1366,
          "callee": {
            "type": "MemberExpression",
            "start": 1349,
            "end": 1355,
            "object": {
              "type": "Identifier",
              "start": 1349,
              "end": 1350,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 1351,
              "end": 1355,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 1356,
              "end": 1365,
              "name": "undefined"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1371,
          "end": 1380,
          "value": "0,1,2,3",
          "raw": "\"0,1,2,3\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1382,
        "end": 1506,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1386,
            "end": 1504,
            "argument": {
              "type": "NewExpression",
              "start": 1392,
              "end": 1503,
              "callee": {
                "type": "Identifier",
                "start": 1396,
                "end": 1408,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1409,
                  "end": 1502,
                  "left": {
                    "type": "Literal",
                    "start": 1409,
                    "end": 1480,
                    "value": "#6: x = new Array(0,1,2,3); x.join(undefined) === \"0,1,2,3\". Actual: ",
                    "raw": "'#6: x = new Array(0,1,2,3); x.join(undefined) === \"0,1,2,3\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1483,
                    "end": 1502,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1484,
                      "end": 1501,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1484,
                        "end": 1490,
                        "object": {
                          "type": "Identifier",
                          "start": 1484,
                          "end": 1485,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1486,
                          "end": 1490,
                          "name": "join"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1491,
                          "end": 1500,
                          "name": "undefined"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1508,
      "end": 1663,
      "test": {
        "type": "BinaryExpression",
        "start": 1512,
        "end": 1543,
        "left": {
          "type": "CallExpression",
          "start": 1512,
          "end": 1523,
          "callee": {
            "type": "MemberExpression",
            "start": 1512,
            "end": 1518,
            "object": {
              "type": "Identifier",
              "start": 1512,
              "end": 1513,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 1514,
              "end": 1518,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 1519,
              "end": 1522,
              "name": "NaN"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1528,
          "end": 1543,
          "value": "0NaN1NaN2NaN3",
          "raw": "\"0NaN1NaN2NaN3\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1545,
        "end": 1663,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1549,
            "end": 1661,
            "argument": {
              "type": "NewExpression",
              "start": 1555,
              "end": 1660,
              "callee": {
                "type": "Identifier",
                "start": 1559,
                "end": 1571,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1572,
                  "end": 1659,
                  "left": {
                    "type": "Literal",
                    "start": 1572,
                    "end": 1643,
                    "value": "#7: x = new Array(0,1,2,3); x.join(NaN) === \"0NaN1NaN2NaN3\". Actual: ",
                    "raw": "'#7: x = new Array(0,1,2,3); x.join(NaN) === \"0NaN1NaN2NaN3\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1646,
                    "end": 1659,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1647,
                      "end": 1658,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1647,
                        "end": 1653,
                        "object": {
                          "type": "Identifier",
                          "start": 1647,
                          "end": 1648,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1649,
                          "end": 1653,
                          "name": "join"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1654,
                          "end": 1657,
                          "name": "NaN"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}