{
  "type": "Program",
  "start": 0,
  "end": 661,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 307,
      "end": 330,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 311,
          "end": 329,
          "id": {
            "type": "Identifier",
            "start": 311,
            "end": 321,
            "name": "testResult"
          },
          "init": {
            "type": "Literal",
            "start": 324,
            "end": 329,
            "value": false,
            "raw": "false"
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "start": 332,
      "end": 438,
      "id": {
        "type": "Identifier",
        "start": 341,
        "end": 351,
        "name": "callbackfn"
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 352,
          "end": 359,
          "name": "prevVal"
        },
        {
          "type": "Identifier",
          "start": 361,
          "end": 367,
          "name": "curVal"
        },
        {
          "type": "Identifier",
          "start": 369,
          "end": 372,
          "name": "idx"
        },
        {
          "type": "Identifier",
          "start": 374,
          "end": 377,
          "name": "obj"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 379,
        "end": 438,
        "body": [
          {
            "type": "IfStatement",
            "start": 383,
            "end": 436,
            "test": {
              "type": "BinaryExpression",
              "start": 387,
              "end": 396,
              "left": {
                "type": "Identifier",
                "start": 387,
                "end": 390,
                "name": "idx"
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "start": 395,
                "end": 396,
                "value": 1,
                "raw": "1"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 398,
              "end": 436,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 404,
                  "end": 432,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 404,
                    "end": 431,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 404,
                      "end": 414,
                      "name": "testResult"
                    },
                    "right": {
                      "type": "ParenthesizedExpression",
                      "start": 417,
                      "end": 431,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 418,
                        "end": 430,
                        "left": {
                          "type": "Identifier",
                          "start": 418,
                          "end": 424,
                          "name": "curVal"
                        },
                        "operator": "===",
                        "right": {
                          "type": "Literal",
                          "start": 429,
                          "end": 430,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      },
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "start": 440,
      "end": 549,
      "expression": {
        "type": "CallExpression",
        "start": 440,
        "end": 548,
        "callee": {
          "type": "MemberExpression",
          "start": 440,
          "end": 461,
          "object": {
            "type": "Identifier",
            "start": 440,
            "end": 446,
            "name": "Object"
          },
          "property": {
            "type": "Identifier",
            "start": 447,
            "end": 461,
            "name": "defineProperty"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 462,
            "end": 477,
            "object": {
              "type": "Identifier",
              "start": 462,
              "end": 467,
              "name": "Array"
            },
            "property": {
              "type": "Identifier",
              "start": 468,
              "end": 477,
              "name": "prototype"
            },
            "optional": false,
            "computed": false
          },
          {
            "type": "Literal",
            "start": 479,
            "end": 482,
            "value": "1",
            "raw": "\"1\""
          },
          {
            "type": "ObjectExpression",
            "start": 484,
            "end": 547,
            "properties": [
              {
                "type": "Property",
                "start": 488,
                "end": 523,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 488,
                  "end": 491,
                  "name": "get"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 493,
                  "end": 523,
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 504,
                    "end": 523,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 510,
                        "end": 519,
                        "argument": {
                          "type": "Literal",
                          "start": 517,
                          "end": 518,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    ]
                  },
                  "expression": false
                },
                "method": false,
                "shorthand": false,
                "computed": false
              },
              {
                "type": "Property",
                "start": 527,
                "end": 545,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 527,
                  "end": 539,
                  "name": "configurable"
                },
                "value": {
                  "type": "Literal",
                  "start": 541,
                  "end": 545,
                  "value": true,
                  "raw": "true"
                },
                "method": false,
                "shorthand": false,
                "computed": false
              }
            ]
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 551,
      "end": 570,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 555,
          "end": 569,
          "id": {
            "type": "Identifier",
            "start": 555,
            "end": 558,
            "name": "arr"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 561,
            "end": 569,
            "elements": [
              {
                "type": "Literal",
                "start": 562,
                "end": 563,
                "value": 0,
                "raw": "0"
              },
              null,
              {
                "type": "Literal",
                "start": 567,
                "end": 568,
                "value": 2,
                "raw": "2"
              }
            ]
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 572,
      "end": 616,
      "expression": {
        "type": "CallExpression",
        "start": 572,
        "end": 615,
        "callee": {
          "type": "MemberExpression",
          "start": 572,
          "end": 587,
          "object": {
            "type": "Identifier",
            "start": 572,
            "end": 575,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 576,
            "end": 587,
            "name": "reduceRight"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 588,
            "end": 598,
            "name": "callbackfn"
          },
          {
            "type": "Literal",
            "start": 600,
            "end": 614,
            "value": "initialValue",
            "raw": "\"initialValue\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 618,
      "end": 660,
      "expression": {
        "type": "CallExpression",
        "start": 618,
        "end": 659,
        "callee": {
          "type": "Identifier",
          "start": 618,
          "end": 624,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 625,
            "end": 635,
            "name": "testResult"
          },
          {
            "type": "Literal",
            "start": 637,
            "end": 658,
            "value": "testResult !== true",
            "raw": "'testResult !== true'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}