{
  "type": "Program",
  "start": 0,
  "end": 925,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 271,
      "end": 418,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 275,
          "end": 417,
          "id": {
            "type": "Identifier",
            "start": 275,
            "end": 284,
            "name": "alphabetR"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 287,
            "end": 417,
            "elements": [
              {
                "type": "Literal",
                "start": 288,
                "end": 291,
                "value": "z",
                "raw": "\"z\""
              },
              {
                "type": "Literal",
                "start": 293,
                "end": 296,
                "value": "y",
                "raw": "\"y\""
              },
              {
                "type": "Literal",
                "start": 298,
                "end": 301,
                "value": "x",
                "raw": "\"x\""
              },
              {
                "type": "Literal",
                "start": 303,
                "end": 306,
                "value": "w",
                "raw": "\"w\""
              },
              {
                "type": "Literal",
                "start": 308,
                "end": 311,
                "value": "v",
                "raw": "\"v\""
              },
              {
                "type": "Literal",
                "start": 313,
                "end": 316,
                "value": "u",
                "raw": "\"u\""
              },
              {
                "type": "Literal",
                "start": 318,
                "end": 321,
                "value": "t",
                "raw": "\"t\""
              },
              {
                "type": "Literal",
                "start": 323,
                "end": 326,
                "value": "s",
                "raw": "\"s\""
              },
              {
                "type": "Literal",
                "start": 328,
                "end": 331,
                "value": "r",
                "raw": "\"r\""
              },
              {
                "type": "Literal",
                "start": 333,
                "end": 336,
                "value": "q",
                "raw": "\"q\""
              },
              {
                "type": "Literal",
                "start": 338,
                "end": 341,
                "value": "p",
                "raw": "\"p\""
              },
              {
                "type": "Literal",
                "start": 343,
                "end": 346,
                "value": "o",
                "raw": "\"o\""
              },
              {
                "type": "Literal",
                "start": 348,
                "end": 351,
                "value": "n",
                "raw": "\"n\""
              },
              {
                "type": "Literal",
                "start": 353,
                "end": 356,
                "value": "M",
                "raw": "\"M\""
              },
              {
                "type": "Literal",
                "start": 358,
                "end": 361,
                "value": "L",
                "raw": "\"L\""
              },
              {
                "type": "Literal",
                "start": 363,
                "end": 366,
                "value": "K",
                "raw": "\"K\""
              },
              {
                "type": "Literal",
                "start": 368,
                "end": 371,
                "value": "J",
                "raw": "\"J\""
              },
              {
                "type": "Literal",
                "start": 373,
                "end": 376,
                "value": "I",
                "raw": "\"I\""
              },
              {
                "type": "Literal",
                "start": 378,
                "end": 381,
                "value": "H",
                "raw": "\"H\""
              },
              {
                "type": "Literal",
                "start": 383,
                "end": 386,
                "value": "G",
                "raw": "\"G\""
              },
              {
                "type": "Literal",
                "start": 388,
                "end": 391,
                "value": "F",
                "raw": "\"F\""
              },
              {
                "type": "Literal",
                "start": 393,
                "end": 396,
                "value": "E",
                "raw": "\"E\""
              },
              {
                "type": "Literal",
                "start": 398,
                "end": 401,
                "value": "D",
                "raw": "\"D\""
              },
              {
                "type": "Literal",
                "start": 403,
                "end": 406,
                "value": "C",
                "raw": "\"C\""
              },
              {
                "type": "Literal",
                "start": 408,
                "end": 411,
                "value": "B",
                "raw": "\"B\""
              },
              {
                "type": "Literal",
                "start": 413,
                "end": 416,
                "value": "A",
                "raw": "\"A\""
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 419,
      "end": 565,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 423,
          "end": 564,
          "id": {
            "type": "Identifier",
            "start": 423,
            "end": 431,
            "name": "alphabet"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 434,
            "end": 564,
            "elements": [
              {
                "type": "Literal",
                "start": 435,
                "end": 438,
                "value": "A",
                "raw": "\"A\""
              },
              {
                "type": "Literal",
                "start": 440,
                "end": 443,
                "value": "B",
                "raw": "\"B\""
              },
              {
                "type": "Literal",
                "start": 445,
                "end": 448,
                "value": "C",
                "raw": "\"C\""
              },
              {
                "type": "Literal",
                "start": 450,
                "end": 453,
                "value": "D",
                "raw": "\"D\""
              },
              {
                "type": "Literal",
                "start": 455,
                "end": 458,
                "value": "E",
                "raw": "\"E\""
              },
              {
                "type": "Literal",
                "start": 460,
                "end": 463,
                "value": "F",
                "raw": "\"F\""
              },
              {
                "type": "Literal",
                "start": 465,
                "end": 468,
                "value": "G",
                "raw": "\"G\""
              },
              {
                "type": "Literal",
                "start": 470,
                "end": 473,
                "value": "H",
                "raw": "\"H\""
              },
              {
                "type": "Literal",
                "start": 475,
                "end": 478,
                "value": "I",
                "raw": "\"I\""
              },
              {
                "type": "Literal",
                "start": 480,
                "end": 483,
                "value": "J",
                "raw": "\"J\""
              },
              {
                "type": "Literal",
                "start": 485,
                "end": 488,
                "value": "K",
                "raw": "\"K\""
              },
              {
                "type": "Literal",
                "start": 490,
                "end": 493,
                "value": "L",
                "raw": "\"L\""
              },
              {
                "type": "Literal",
                "start": 495,
                "end": 498,
                "value": "M",
                "raw": "\"M\""
              },
              {
                "type": "Literal",
                "start": 500,
                "end": 503,
                "value": "n",
                "raw": "\"n\""
              },
              {
                "type": "Literal",
                "start": 505,
                "end": 508,
                "value": "o",
                "raw": "\"o\""
              },
              {
                "type": "Literal",
                "start": 510,
                "end": 513,
                "value": "p",
                "raw": "\"p\""
              },
              {
                "type": "Literal",
                "start": 515,
                "end": 518,
                "value": "q",
                "raw": "\"q\""
              },
              {
                "type": "Literal",
                "start": 520,
                "end": 523,
                "value": "r",
                "raw": "\"r\""
              },
              {
                "type": "Literal",
                "start": 525,
                "end": 528,
                "value": "s",
                "raw": "\"s\""
              },
              {
                "type": "Literal",
                "start": 530,
                "end": 533,
                "value": "t",
                "raw": "\"t\""
              },
              {
                "type": "Literal",
                "start": 535,
                "end": 538,
                "value": "u",
                "raw": "\"u\""
              },
              {
                "type": "Literal",
                "start": 540,
                "end": 543,
                "value": "v",
                "raw": "\"v\""
              },
              {
                "type": "Literal",
                "start": 545,
                "end": 548,
                "value": "w",
                "raw": "\"w\""
              },
              {
                "type": "Literal",
                "start": 550,
                "end": 553,
                "value": "x",
                "raw": "\"x\""
              },
              {
                "type": "Literal",
                "start": 555,
                "end": 558,
                "value": "y",
                "raw": "\"y\""
              },
              {
                "type": "Literal",
                "start": 560,
                "end": 563,
                "value": "z",
                "raw": "\"z\""
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 567,
      "end": 709,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 571,
          "end": 709,
          "id": {
            "type": "Identifier",
            "start": 571,
            "end": 582,
            "name": "myComparefn"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 585,
            "end": 709,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 594,
                "end": 595,
                "name": "x"
              },
              {
                "type": "Identifier",
                "start": 597,
                "end": 598,
                "name": "y"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 600,
              "end": 709,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 604,
                  "end": 623,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 608,
                      "end": 622,
                      "id": {
                        "type": "Identifier",
                        "start": 608,
                        "end": 610,
                        "name": "xS"
                      },
                      "init": {
                        "type": "CallExpression",
                        "start": 613,
                        "end": 622,
                        "callee": {
                          "type": "Identifier",
                          "start": 613,
                          "end": 619,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 620,
                            "end": 621,
                            "name": "x"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 626,
                  "end": 645,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 630,
                      "end": 644,
                      "id": {
                        "type": "Identifier",
                        "start": 630,
                        "end": 632,
                        "name": "yS"
                      },
                      "init": {
                        "type": "CallExpression",
                        "start": 635,
                        "end": 644,
                        "callee": {
                          "type": "Identifier",
                          "start": 635,
                          "end": 641,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 642,
                            "end": 643,
                            "name": "y"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "start": 648,
                  "end": 669,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 652,
                    "end": 659,
                    "left": {
                      "type": "Identifier",
                      "start": 652,
                      "end": 654,
                      "name": "xS"
                    },
                    "operator": "<",
                    "right": {
                      "type": "Identifier",
                      "start": 657,
                      "end": 659,
                      "name": "yS"
                    }
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "start": 661,
                    "end": 669,
                    "argument": {
                      "type": "Literal",
                      "start": 668,
                      "end": 669,
                      "value": 1,
                      "raw": "1"
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "start": 672,
                  "end": 695,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 676,
                    "end": 683,
                    "left": {
                      "type": "Identifier",
                      "start": 676,
                      "end": 678,
                      "name": "xS"
                    },
                    "operator": ">",
                    "right": {
                      "type": "Identifier",
                      "start": 681,
                      "end": 683,
                      "name": "yS"
                    }
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "start": 685,
                    "end": 695,
                    "argument": {
                      "type": "UnaryExpression",
                      "start": 692,
                      "end": 694,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 693,
                        "end": 694,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "ReturnStatement",
                  "start": 698,
                  "end": 707,
                  "argument": {
                    "type": "Literal",
                    "start": 705,
                    "end": 706,
                    "value": 0,
                    "raw": "0"
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 711,
      "end": 738,
      "expression": {
        "type": "CallExpression",
        "start": 711,
        "end": 737,
        "callee": {
          "type": "MemberExpression",
          "start": 711,
          "end": 724,
          "object": {
            "type": "Identifier",
            "start": 711,
            "end": 719,
            "name": "alphabet"
          },
          "property": {
            "type": "Identifier",
            "start": 720,
            "end": 724,
            "name": "sort"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 725,
            "end": 736,
            "name": "myComparefn"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 739,
      "end": 757,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 743,
          "end": 756,
          "id": {
            "type": "Identifier",
            "start": 743,
            "end": 749,
            "name": "result"
          },
          "init": {
            "type": "Literal",
            "start": 752,
            "end": 756,
            "value": true,
            "raw": "true"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ForStatement",
      "start": 758,
      "end": 842,
      "init": {
        "type": "VariableDeclaration",
        "start": 763,
        "end": 772,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 767,
            "end": 772,
            "id": {
              "type": "Identifier",
              "start": 767,
              "end": 768,
              "name": "i"
            },
            "init": {
              "type": "Literal",
              "start": 771,
              "end": 772,
              "value": 0,
              "raw": "0"
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 774,
        "end": 780,
        "left": {
          "type": "Identifier",
          "start": 774,
          "end": 775,
          "name": "i"
        },
        "operator": "<",
        "right": {
          "type": "Literal",
          "start": 778,
          "end": 780,
          "value": 26,
          "raw": "26"
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 782,
        "end": 785,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 782,
          "end": 783,
          "name": "i"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 787,
        "end": 842,
        "body": [
          {
            "type": "IfStatement",
            "start": 791,
            "end": 840,
            "test": {
              "type": "BinaryExpression",
              "start": 795,
              "end": 823,
              "left": {
                "type": "MemberExpression",
                "start": 795,
                "end": 807,
                "object": {
                  "type": "Identifier",
                  "start": 795,
                  "end": 804,
                  "name": "alphabetR"
                },
                "property": {
                  "type": "Identifier",
                  "start": 805,
                  "end": 806,
                  "name": "i"
                },
                "computed": true,
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "start": 812,
                "end": 823,
                "object": {
                  "type": "Identifier",
                  "start": 812,
                  "end": 820,
                  "name": "alphabet"
                },
                "property": {
                  "type": "Identifier",
                  "start": 821,
                  "end": 822,
                  "name": "i"
                },
                "computed": true,
                "optional": false
              }
            },
            "consequent": {
              "type": "ExpressionStatement",
              "start": 825,
              "end": 840,
              "expression": {
                "type": "AssignmentExpression",
                "start": 825,
                "end": 839,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 825,
                  "end": 831,
                  "name": "result"
                },
                "right": {
                  "type": "Literal",
                  "start": 834,
                  "end": 839,
                  "value": false,
                  "raw": "false"
                }
              }
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 844,
      "end": 924,
      "test": {
        "type": "BinaryExpression",
        "start": 848,
        "end": 863,
        "left": {
          "type": "Identifier",
          "start": 848,
          "end": 854,
          "name": "result"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 859,
          "end": 863,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 865,
        "end": 924,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 869,
            "end": 922,
            "argument": {
              "type": "NewExpression",
              "start": 875,
              "end": 921,
              "callee": {
                "type": "Identifier",
                "start": 879,
                "end": 891,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 892,
                  "end": 920,
                  "value": "#1: CHECK ENGLISH ALPHABET",
                  "raw": "'#1: CHECK ENGLISH ALPHABET'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}