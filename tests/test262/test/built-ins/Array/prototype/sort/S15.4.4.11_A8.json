{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "global",
            "start": 333,
            "end": 339
          },
          "init": {
            "type": "ThisExpression",
            "start": 342,
            "end": 346
          },
          "start": 333,
          "end": 346
        }
      ],
      "start": 329,
      "end": 347
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 349,
                "end": 350
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 352,
                "end": 353
              }
            ],
            "start": 348,
            "end": 354
          },
          "property": {
            "type": "Identifier",
            "name": "sort",
            "start": 355,
            "end": 359
          },
          "optional": false,
          "computed": false,
          "start": 348,
          "end": 359
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "x",
                "start": 369,
                "end": 370
              },
              {
                "type": "Identifier",
                "name": "y",
                "start": 372,
                "end": 373
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Literal",
                    "value": "use strict",
                    "raw": "\"use strict\"",
                    "start": 379,
                    "end": 391
                  },
                  "directive": "use strict",
                  "start": 379,
                  "end": 392
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ThisExpression",
                      "start": 400,
                      "end": 404
                    },
                    "operator": "===",
                    "right": {
                      "type": "Identifier",
                      "name": "global",
                      "start": 409,
                      "end": 415
                    },
                    "start": 400,
                    "end": 415
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Test262Error",
                            "start": 433,
                            "end": 445
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "#1: Sort leaks global",
                              "raw": "'#1: Sort leaks global'",
                              "start": 446,
                              "end": 469
                            }
                          ],
                          "start": 429,
                          "end": 470
                        },
                        "start": 423,
                        "end": 471
                      }
                    ],
                    "start": 417,
                    "end": 475
                  },
                  "alternate": null,
                  "start": 396,
                  "end": 475
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ThisExpression",
                      "start": 482,
                      "end": 486
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "undefined",
                      "start": 491,
                      "end": 500
                    },
                    "start": 482,
                    "end": 500
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Test262Error",
                            "start": 518,
                            "end": 530
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Literal",
                                  "value": "#2: Sort comparefn should be called with this===undefined. ",
                                  "raw": "'#2: Sort comparefn should be called with this===undefined. '",
                                  "start": 531,
                                  "end": 592
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "value": "Actual: ",
                                  "raw": "'Actual: '",
                                  "start": 601,
                                  "end": 611
                                },
                                "start": 531,
                                "end": 611
                              },
                              "operator": "+",
                              "right": {
                                "type": "ThisExpression",
                                "start": 614,
                                "end": 618
                              },
                              "start": 531,
                              "end": 618
                            }
                          ],
                          "start": 514,
                          "end": 619
                        },
                        "start": 508,
                        "end": 620
                      }
                    ],
                    "start": 502,
                    "end": 624
                  },
                  "alternate": null,
                  "start": 478,
                  "end": 624
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 634,
                      "end": 635
                    },
                    "operator": "-",
                    "right": {
                      "type": "Identifier",
                      "name": "y",
                      "start": 638,
                      "end": 639
                    },
                    "start": 634,
                    "end": 639
                  },
                  "start": 627,
                  "end": 640
                }
              ],
              "start": 375,
              "end": 642
            },
            "expression": false,
            "start": 360,
            "end": 642
          }
        ],
        "optional": false,
        "start": 348,
        "end": 643
      },
      "start": 348,
      "end": 644
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 645
}