{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 428,
            "end": 429
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [],
            "start": 432,
            "end": 434
          },
          "start": 428,
          "end": 434
        }
      ],
      "start": 424,
      "end": 435
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 440,
            "end": 441
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 442,
            "end": 448
          },
          "optional": false,
          "computed": false,
          "start": 440,
          "end": 448
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 453,
          "end": 454
        },
        "start": 440,
        "end": 454
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 470,
                "end": 482
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = []; x.length === 0. Actual: ",
                    "raw": "'#1: x = []; x.length === 0. Actual: '",
                    "start": 483,
                    "end": 521
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 525,
                        "end": 526
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 527,
                        "end": 533
                      },
                      "optional": false,
                      "computed": false,
                      "start": 525,
                      "end": 533
                    },
                    "start": 524,
                    "end": 534
                  },
                  "start": 483,
                  "end": 534
                }
              ],
              "start": 466,
              "end": 535
            },
            "start": 460,
            "end": 536
          }
        ],
        "start": 456,
        "end": 538
      },
      "alternate": null,
      "start": 436,
      "end": 538
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 540,
            "end": 541
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 542,
            "end": 543
          },
          "optional": false,
          "computed": true,
          "start": 540,
          "end": 544
        },
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 547,
          "end": 548
        },
        "start": 540,
        "end": 548
      },
      "start": 540,
      "end": 549
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "unshift",
            "start": 554,
            "end": 561
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 564,
                "end": 565
              },
              "property": {
                "type": "Identifier",
                "name": "unshift",
                "start": 566,
                "end": 573
              },
              "optional": false,
              "computed": false,
              "start": 564,
              "end": 573
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 574,
                "end": 578
              },
              {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 580,
                  "end": 586
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 587,
                  "end": 604
                },
                "optional": false,
                "computed": false,
                "start": 580,
                "end": 604
              },
              {
                "type": "Literal",
                "value": "NaN",
                "raw": "\"NaN\"",
                "start": 606,
                "end": 611
              },
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 613,
                "end": 616
              },
              {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 619,
                  "end": 620
                },
                "prefix": true,
                "start": 618,
                "end": 620
              }
            ],
            "optional": false,
            "start": 564,
            "end": 621
          },
          "start": 554,
          "end": 621
        }
      ],
      "start": 550,
      "end": 622
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "unshift",
          "start": 627,
          "end": 634
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 6,
          "raw": "6",
          "start": 639,
          "end": 640
        },
        "start": 627,
        "end": 640
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 656,
                "end": 668
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1) === 6. Actual: ",
                    "raw": "'#2: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1) === 6. Actual: '",
                    "start": 669,
                    "end": 766
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "unshift",
                      "start": 770,
                      "end": 777
                    },
                    "start": 769,
                    "end": 778
                  },
                  "start": 669,
                  "end": 778
                }
              ],
              "start": 652,
              "end": 779
            },
            "start": 646,
            "end": 780
          }
        ],
        "start": 642,
        "end": 782
      },
      "alternate": null,
      "start": 623,
      "end": 782
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 788,
            "end": 789
          },
          "property": {
            "type": "Literal",
            "value": 5,
            "raw": "5",
            "start": 790,
            "end": 791
          },
          "optional": false,
          "computed": true,
          "start": 788,
          "end": 792
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 797,
          "end": 798
        },
        "start": 788,
        "end": 798
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 814,
                "end": 826
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x[5] === 0. Actual: ",
                    "raw": "'#3: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x[5] === 0. Actual: '",
                    "start": 827,
                    "end": 930
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 934,
                        "end": 935
                      },
                      "property": {
                        "type": "Literal",
                        "value": 5,
                        "raw": "5",
                        "start": 936,
                        "end": 937
                      },
                      "optional": false,
                      "computed": true,
                      "start": 934,
                      "end": 938
                    },
                    "start": 933,
                    "end": 939
                  },
                  "start": 827,
                  "end": 939
                }
              ],
              "start": 810,
              "end": 940
            },
            "start": 804,
            "end": 941
          }
        ],
        "start": 800,
        "end": 943
      },
      "alternate": null,
      "start": 784,
      "end": 943
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 949,
            "end": 950
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 951,
            "end": 952
          },
          "optional": false,
          "computed": true,
          "start": 949,
          "end": 953
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 958,
          "end": 962
        },
        "start": 949,
        "end": 962
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 978,
                "end": 990
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x[0] === true. Actual: ",
                    "raw": "'#4: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x[0] === true. Actual: '",
                    "start": 991,
                    "end": 1097
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1101,
                        "end": 1102
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1103,
                        "end": 1104
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1101,
                      "end": 1105
                    },
                    "start": 1100,
                    "end": 1106
                  },
                  "start": 991,
                  "end": 1106
                }
              ],
              "start": 974,
              "end": 1107
            },
            "start": 968,
            "end": 1108
          }
        ],
        "start": 964,
        "end": 1110
      },
      "alternate": null,
      "start": 945,
      "end": 1110
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1116,
            "end": 1117
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1118,
            "end": 1119
          },
          "optional": false,
          "computed": true,
          "start": 1116,
          "end": 1120
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 1125,
            "end": 1131
          },
          "property": {
            "type": "Identifier",
            "name": "POSITIVE_INFINITY",
            "start": 1132,
            "end": 1149
          },
          "optional": false,
          "computed": false,
          "start": 1125,
          "end": 1149
        },
        "start": 1116,
        "end": 1149
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1165,
                "end": 1177
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x[1] === Number.POSITIVE_INFINITY. Actual: ",
                    "raw": "'#5: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x[1] === Number.POSITIVE_INFINITY. Actual: '",
                    "start": 1178,
                    "end": 1304
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1308,
                        "end": 1309
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1310,
                        "end": 1311
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1308,
                      "end": 1312
                    },
                    "start": 1307,
                    "end": 1313
                  },
                  "start": 1178,
                  "end": 1313
                }
              ],
              "start": 1161,
              "end": 1314
            },
            "start": 1155,
            "end": 1315
          }
        ],
        "start": 1151,
        "end": 1317
      },
      "alternate": null,
      "start": 1112,
      "end": 1317
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1323,
            "end": 1324
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1325,
            "end": 1326
          },
          "optional": false,
          "computed": true,
          "start": 1323,
          "end": 1327
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "NaN",
          "raw": "\"NaN\"",
          "start": 1332,
          "end": 1337
        },
        "start": 1323,
        "end": 1337
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1353,
                "end": 1365
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x[2] === \"NaN\". Actual: ",
                    "raw": "'#6: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x[2] === \"NaN\". Actual: '",
                    "start": 1366,
                    "end": 1473
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1477,
                        "end": 1478
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1479,
                        "end": 1480
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1477,
                      "end": 1481
                    },
                    "start": 1476,
                    "end": 1482
                  },
                  "start": 1366,
                  "end": 1482
                }
              ],
              "start": 1349,
              "end": 1483
            },
            "start": 1343,
            "end": 1484
          }
        ],
        "start": 1339,
        "end": 1486
      },
      "alternate": null,
      "start": 1319,
      "end": 1486
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1492,
            "end": 1493
          },
          "property": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 1494,
            "end": 1495
          },
          "optional": false,
          "computed": true,
          "start": 1492,
          "end": 1496
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 1501,
          "end": 1504
        },
        "start": 1492,
        "end": 1504
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1520,
                "end": 1532
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x[3] === \"1\". Actual: ",
                    "raw": "'#7: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x[3] === \"1\". Actual: '",
                    "start": 1533,
                    "end": 1638
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1642,
                        "end": 1643
                      },
                      "property": {
                        "type": "Literal",
                        "value": 3,
                        "raw": "3",
                        "start": 1644,
                        "end": 1645
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1642,
                      "end": 1646
                    },
                    "start": 1641,
                    "end": 1647
                  },
                  "start": 1533,
                  "end": 1647
                }
              ],
              "start": 1516,
              "end": 1648
            },
            "start": 1510,
            "end": 1649
          }
        ],
        "start": 1506,
        "end": 1651
      },
      "alternate": null,
      "start": 1488,
      "end": 1651
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1657,
            "end": 1658
          },
          "property": {
            "type": "Literal",
            "value": 4,
            "raw": "4",
            "start": 1659,
            "end": 1660
          },
          "optional": false,
          "computed": true,
          "start": 1657,
          "end": 1661
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1667,
            "end": 1668
          },
          "prefix": true,
          "start": 1666,
          "end": 1668
        },
        "start": 1657,
        "end": 1668
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1684,
                "end": 1696
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x[4] === -1. Actual: ",
                    "raw": "'#8: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x[4] === -1. Actual: '",
                    "start": 1697,
                    "end": 1801
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1805,
                        "end": 1806
                      },
                      "property": {
                        "type": "Literal",
                        "value": 4,
                        "raw": "4",
                        "start": 1807,
                        "end": 1808
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1805,
                      "end": 1809
                    },
                    "start": 1804,
                    "end": 1810
                  },
                  "start": 1697,
                  "end": 1810
                }
              ],
              "start": 1680,
              "end": 1811
            },
            "start": 1674,
            "end": 1812
          }
        ],
        "start": 1670,
        "end": 1814
      },
      "alternate": null,
      "start": 1653,
      "end": 1814
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1820,
            "end": 1821
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1822,
            "end": 1828
          },
          "optional": false,
          "computed": false,
          "start": 1820,
          "end": 1828
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 6,
          "raw": "6",
          "start": 1833,
          "end": 1834
        },
        "start": 1820,
        "end": 1834
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1850,
                "end": 1862
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x.length === 6. Actual: ",
                    "raw": "'#9: x = []; x[0] = 0; x.unshift(true, Number.POSITIVE_INFINITY, \"NaN\", \"1\", -1); x.length === 6. Actual: '",
                    "start": 1863,
                    "end": 1970
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1974,
                        "end": 1975
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1976,
                        "end": 1982
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1974,
                      "end": 1982
                    },
                    "start": 1973,
                    "end": 1983
                  },
                  "start": 1863,
                  "end": 1983
                }
              ],
              "start": 1846,
              "end": 1984
            },
            "start": 1840,
            "end": 1985
          }
        ],
        "start": 1836,
        "end": 1987
      },
      "alternate": null,
      "start": 1816,
      "end": 1987
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1988
}