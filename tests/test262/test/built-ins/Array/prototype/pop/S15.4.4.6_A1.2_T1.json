{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 315,
            "end": 316
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Array",
              "start": 323,
              "end": 328
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 329,
                "end": 330
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 332,
                "end": 333
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 335,
                "end": 336
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 338,
                "end": 339
              }
            ],
            "start": 319,
            "end": 340
          },
          "start": 315,
          "end": 340
        }
      ],
      "start": 311,
      "end": 341
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "pop",
            "start": 346,
            "end": 349
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 352,
                "end": 353
              },
              "property": {
                "type": "Identifier",
                "name": "pop",
                "start": 354,
                "end": 357
              },
              "optional": false,
              "computed": false,
              "start": 352,
              "end": 357
            },
            "arguments": [],
            "optional": false,
            "start": 352,
            "end": 359
          },
          "start": 346,
          "end": 359
        }
      ],
      "start": 342,
      "end": 360
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "pop",
          "start": 365,
          "end": 368
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 373,
          "end": 374
        },
        "start": 365,
        "end": 374
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 390,
                "end": 402
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = new Array(0,1,2,3); x.pop() === 3. Actual: ",
                    "raw": "'#1: x = new Array(0,1,2,3); x.pop() === 3. Actual: '",
                    "start": 403,
                    "end": 456
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "pop",
                      "start": 460,
                      "end": 463
                    },
                    "start": 459,
                    "end": 464
                  },
                  "start": 403,
                  "end": 464
                }
              ],
              "start": 386,
              "end": 465
            },
            "start": 380,
            "end": 466
          }
        ],
        "start": 376,
        "end": 468
      },
      "alternate": null,
      "start": 361,
      "end": 468
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 474,
            "end": 475
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 476,
            "end": 482
          },
          "optional": false,
          "computed": false,
          "start": 474,
          "end": 482
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 487,
          "end": 488
        },
        "start": 474,
        "end": 488
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 504,
                "end": 516
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: x = new Array(0,1,2,3); x.pop(); x.length == 3",
                  "raw": "'#2: x = new Array(0,1,2,3); x.pop(); x.length == 3'",
                  "start": 517,
                  "end": 569
                }
              ],
              "start": 500,
              "end": 570
            },
            "start": 494,
            "end": 571
          }
        ],
        "start": 490,
        "end": 573
      },
      "alternate": null,
      "start": 470,
      "end": 573
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 579,
            "end": 580
          },
          "property": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 581,
            "end": 582
          },
          "optional": false,
          "computed": true,
          "start": 579,
          "end": 583
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 588,
          "end": 597
        },
        "start": 579,
        "end": 597
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 613,
                "end": 625
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: x = new Array(0,1,2,3); x.pop(); x[3] == undefined",
                  "raw": "'#3: x = new Array(0,1,2,3); x.pop(); x[3] == undefined'",
                  "start": 626,
                  "end": 682
                }
              ],
              "start": 609,
              "end": 683
            },
            "start": 603,
            "end": 684
          }
        ],
        "start": 599,
        "end": 686
      },
      "alternate": null,
      "start": 575,
      "end": 686
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 692,
            "end": 693
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 694,
            "end": 695
          },
          "optional": false,
          "computed": true,
          "start": 692,
          "end": 696
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 701,
          "end": 702
        },
        "start": 692,
        "end": 702
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 718,
                "end": 730
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4: x = new Array(0,1,2,3); x.pop(); x[2] == 2",
                  "raw": "'#4: x = new Array(0,1,2,3); x.pop(); x[2] == 2'",
                  "start": 731,
                  "end": 779
                }
              ],
              "start": 714,
              "end": 780
            },
            "start": 708,
            "end": 781
          }
        ],
        "start": 704,
        "end": 783
      },
      "alternate": null,
      "start": 688,
      "end": 783
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 785,
          "end": 786
        },
        "right": {
          "type": "ArrayExpression",
          "elements": [],
          "start": 789,
          "end": 791
        },
        "start": 785,
        "end": 791
      },
      "start": 785,
      "end": 792
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 793,
            "end": 794
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 795,
            "end": 796
          },
          "optional": false,
          "computed": true,
          "start": 793,
          "end": 797
        },
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 800,
          "end": 801
        },
        "start": 793,
        "end": 801
      },
      "start": 793,
      "end": 802
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 803,
            "end": 804
          },
          "property": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 805,
            "end": 806
          },
          "optional": false,
          "computed": true,
          "start": 803,
          "end": 807
        },
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 810,
          "end": 811
        },
        "start": 803,
        "end": 811
      },
      "start": 803,
      "end": 812
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "pop",
            "start": 817,
            "end": 820
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 823,
                "end": 824
              },
              "property": {
                "type": "Identifier",
                "name": "pop",
                "start": 825,
                "end": 828
              },
              "optional": false,
              "computed": false,
              "start": 823,
              "end": 828
            },
            "arguments": [],
            "optional": false,
            "start": 823,
            "end": 830
          },
          "start": 817,
          "end": 830
        }
      ],
      "start": 813,
      "end": 831
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "pop",
          "start": 836,
          "end": 839
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 844,
          "end": 845
        },
        "start": 836,
        "end": 845
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 861,
                "end": 873
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = []; x[0] = 0; x[3] = 3; x.pop() === 3. Actual: ",
                    "raw": "'#5: x = []; x[0] = 0; x[3] = 3; x.pop() === 3. Actual: '",
                    "start": 874,
                    "end": 931
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "pop",
                      "start": 935,
                      "end": 938
                    },
                    "start": 934,
                    "end": 939
                  },
                  "start": 874,
                  "end": 939
                }
              ],
              "start": 857,
              "end": 940
            },
            "start": 851,
            "end": 941
          }
        ],
        "start": 847,
        "end": 943
      },
      "alternate": null,
      "start": 832,
      "end": 943
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 949,
            "end": 950
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 951,
            "end": 957
          },
          "optional": false,
          "computed": false,
          "start": 949,
          "end": 957
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 962,
          "end": 963
        },
        "start": 949,
        "end": 963
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 979,
                "end": 991
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#6: x = []; x[0] = 0; x[3] = 3; x.pop(); x.length == 3",
                  "raw": "'#6: x = []; x[0] = 0; x[3] = 3; x.pop(); x.length == 3'",
                  "start": 992,
                  "end": 1048
                }
              ],
              "start": 975,
              "end": 1049
            },
            "start": 969,
            "end": 1050
          }
        ],
        "start": 965,
        "end": 1052
      },
      "alternate": null,
      "start": 945,
      "end": 1052
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1058,
            "end": 1059
          },
          "property": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 1060,
            "end": 1061
          },
          "optional": false,
          "computed": true,
          "start": 1058,
          "end": 1062
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 1067,
          "end": 1076
        },
        "start": 1058,
        "end": 1076
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1092,
                "end": 1104
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#7: x = []; x[0] = 0; x[3] = 3; x.pop(); x[3] == undefined",
                  "raw": "'#7: x = []; x[0] = 0; x[3] = 3; x.pop(); x[3] == undefined'",
                  "start": 1105,
                  "end": 1165
                }
              ],
              "start": 1088,
              "end": 1166
            },
            "start": 1082,
            "end": 1167
          }
        ],
        "start": 1078,
        "end": 1169
      },
      "alternate": null,
      "start": 1054,
      "end": 1169
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1175,
            "end": 1176
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1177,
            "end": 1178
          },
          "optional": false,
          "computed": true,
          "start": 1175,
          "end": 1179
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 1184,
          "end": 1193
        },
        "start": 1175,
        "end": 1193
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1209,
                "end": 1221
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#8: x = []; x[0] = 0; x[3] = 3; x.pop(); x[2] == undefined",
                  "raw": "'#8: x = []; x[0] = 0; x[3] = 3; x.pop(); x[2] == undefined'",
                  "start": 1222,
                  "end": 1282
                }
              ],
              "start": 1205,
              "end": 1283
            },
            "start": 1199,
            "end": 1284
          }
        ],
        "start": 1195,
        "end": 1286
      },
      "alternate": null,
      "start": 1171,
      "end": 1286
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1288,
            "end": 1289
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1290,
            "end": 1296
          },
          "optional": false,
          "computed": false,
          "start": 1288,
          "end": 1296
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1299,
          "end": 1300
        },
        "start": 1288,
        "end": 1300
      },
      "start": 1288,
      "end": 1301
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "pop",
            "start": 1306,
            "end": 1309
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 1312,
                "end": 1313
              },
              "property": {
                "type": "Identifier",
                "name": "pop",
                "start": 1314,
                "end": 1317
              },
              "optional": false,
              "computed": false,
              "start": 1312,
              "end": 1317
            },
            "arguments": [],
            "optional": false,
            "start": 1312,
            "end": 1319
          },
          "start": 1306,
          "end": 1319
        }
      ],
      "start": 1302,
      "end": 1320
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "pop",
          "start": 1325,
          "end": 1328
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1333,
          "end": 1334
        },
        "start": 1325,
        "end": 1334
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1350,
                "end": 1362
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: x = []; x[0] = 0; x[3] = 3; x.pop(); x.length = 1; x.pop() === 0. Actual: ",
                    "raw": "'#9: x = []; x[0] = 0; x[3] = 3; x.pop(); x.length = 1; x.pop() === 0. Actual: '",
                    "start": 1363,
                    "end": 1443
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "pop",
                      "start": 1447,
                      "end": 1450
                    },
                    "start": 1446,
                    "end": 1451
                  },
                  "start": 1363,
                  "end": 1451
                }
              ],
              "start": 1346,
              "end": 1452
            },
            "start": 1340,
            "end": 1453
          }
        ],
        "start": 1336,
        "end": 1455
      },
      "alternate": null,
      "start": 1321,
      "end": 1455
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "x",
            "start": 1461,
            "end": 1462
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1463,
            "end": 1469
          },
          "optional": false,
          "computed": false,
          "start": 1461,
          "end": 1469
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1474,
          "end": 1475
        },
        "start": 1461,
        "end": 1475
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1491,
                "end": 1503
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: x = []; x[0] = 0; x[3] = 3; x.pop(); x.length = 1; x.pop(); x.length === 0. Actual: ",
                    "raw": "'#10: x = []; x[0] = 0; x[3] = 3; x.pop(); x.length = 1; x.pop(); x.length === 0. Actual: '",
                    "start": 1504,
                    "end": 1595
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1599,
                        "end": 1600
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1601,
                        "end": 1607
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1599,
                      "end": 1607
                    },
                    "start": 1598,
                    "end": 1608
                  },
                  "start": 1504,
                  "end": 1608
                }
              ],
              "start": 1487,
              "end": 1609
            },
            "start": 1481,
            "end": 1610
          }
        ],
        "start": 1477,
        "end": 1612
      },
      "alternate": null,
      "start": 1457,
      "end": 1612
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1613
}