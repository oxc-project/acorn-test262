{
  "type": "Program",
  "start": 0,
  "end": 578,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 350,
      "end": 385,
      "expression": {
        "type": "AssignmentExpression",
        "start": 350,
        "end": 384,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 350,
          "end": 363,
          "object": {
            "type": "Identifier",
            "start": 350,
            "end": 353,
            "name": "foo"
          },
          "property": {
            "type": "Identifier",
            "start": 354,
            "end": 363,
            "name": "prototype"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "NewExpression",
          "start": 366,
          "end": 384,
          "callee": {
            "type": "Identifier",
            "start": 370,
            "end": 375,
            "name": "Array"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 376,
              "end": 377,
              "value": 1,
              "raw": "1"
            },
            {
              "type": "Literal",
              "start": 379,
              "end": 380,
              "value": 2,
              "raw": "2"
            },
            {
              "type": "Literal",
              "start": 382,
              "end": 383,
              "value": 3,
              "raw": "3"
            }
          ]
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "start": 387,
      "end": 404,
      "id": {
        "type": "Identifier",
        "start": 396,
        "end": 399,
        "name": "foo"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 402,
        "end": 404,
        "body": []
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 405,
      "end": 423,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 409,
          "end": 422,
          "id": {
            "type": "Identifier",
            "start": 409,
            "end": 410,
            "name": "f"
          },
          "init": {
            "type": "NewExpression",
            "start": 413,
            "end": 422,
            "callee": {
              "type": "Identifier",
              "start": 417,
              "end": 420,
              "name": "foo"
            },
            "arguments": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 424,
      "end": 437,
      "expression": {
        "type": "AssignmentExpression",
        "start": 424,
        "end": 436,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 424,
          "end": 432,
          "object": {
            "type": "Identifier",
            "start": 424,
            "end": 425,
            "name": "f"
          },
          "property": {
            "type": "Identifier",
            "start": 426,
            "end": 432,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 435,
          "end": 436,
          "value": 0,
          "raw": "0"
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "start": 439,
      "end": 455,
      "id": {
        "type": "Identifier",
        "start": 448,
        "end": 450,
        "name": "cb"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 453,
        "end": 455,
        "body": []
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 456,
      "end": 477,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 460,
          "end": 476,
          "id": {
            "type": "Identifier",
            "start": 460,
            "end": 461,
            "name": "a"
          },
          "init": {
            "type": "CallExpression",
            "start": 464,
            "end": 476,
            "callee": {
              "type": "MemberExpression",
              "start": 464,
              "end": 472,
              "object": {
                "type": "Identifier",
                "start": 464,
                "end": 465,
                "name": "f"
              },
              "property": {
                "type": "Identifier",
                "start": 466,
                "end": 472,
                "name": "filter"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 473,
                "end": 475,
                "name": "cb"
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 480,
      "end": 534,
      "expression": {
        "type": "CallExpression",
        "start": 480,
        "end": 533,
        "callee": {
          "type": "Identifier",
          "start": 480,
          "end": 486,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 487,
            "end": 503,
            "callee": {
              "type": "MemberExpression",
              "start": 487,
              "end": 500,
              "object": {
                "type": "Identifier",
                "start": 487,
                "end": 492,
                "name": "Array"
              },
              "property": {
                "type": "Identifier",
                "start": 493,
                "end": 500,
                "name": "isArray"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 501,
                "end": 502,
                "name": "a"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 505,
            "end": 532,
            "value": "Array.isArray(a) !== true",
            "raw": "'Array.isArray(a) !== true'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 535,
      "end": 577,
      "expression": {
        "type": "CallExpression",
        "start": 535,
        "end": 576,
        "callee": {
          "type": "MemberExpression",
          "start": 535,
          "end": 551,
          "object": {
            "type": "Identifier",
            "start": 535,
            "end": 541,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 542,
            "end": 551,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 552,
            "end": 560,
            "object": {
              "type": "Identifier",
              "start": 552,
              "end": 553,
              "name": "a"
            },
            "property": {
              "type": "Identifier",
              "start": 554,
              "end": 560,
              "name": "length"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 562,
            "end": 563,
            "value": 0,
            "raw": "0"
          },
          {
            "type": "Literal",
            "start": 565,
            "end": 575,
            "value": "a.length",
            "raw": "'a.length'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}