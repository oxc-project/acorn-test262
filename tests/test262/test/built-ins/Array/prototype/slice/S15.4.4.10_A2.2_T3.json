{
  "type": "Program",
  "start": 0,
  "end": 1699,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 244,
      "end": 268,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 248,
          "end": 267,
          "id": {
            "type": "Identifier",
            "start": 248,
            "end": 249,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 252,
            "end": 267,
            "elements": [
              {
                "type": "Literal",
                "start": 253,
                "end": 254,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Literal",
                "start": 256,
                "end": 257,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 259,
                "end": 260,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 262,
                "end": 263,
                "value": 3,
                "raw": "3"
              },
              {
                "type": "Literal",
                "start": 265,
                "end": 266,
                "value": 4,
                "raw": "4"
              }
            ]
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 269,
      "end": 316,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 273,
          "end": 315,
          "id": {
            "type": "Identifier",
            "start": 273,
            "end": 276,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 279,
            "end": 315,
            "callee": {
              "type": "MemberExpression",
              "start": 279,
              "end": 286,
              "object": {
                "type": "Identifier",
                "start": 279,
                "end": 280,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 281,
                "end": 286,
                "name": "slice"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 287,
                "end": 288,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "MemberExpression",
                "start": 290,
                "end": 314,
                "object": {
                  "type": "Identifier",
                  "start": 290,
                  "end": 296,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 297,
                  "end": 314,
                  "name": "POSITIVE_INFINITY"
                },
                "optional": false,
                "computed": false
              }
            ],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 318,
      "end": 359,
      "expression": {
        "type": "AssignmentExpression",
        "start": 318,
        "end": 358,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 318,
          "end": 330,
          "object": {
            "type": "Identifier",
            "start": 318,
            "end": 321,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 322,
            "end": 330,
            "name": "getClass"
          },
          "optional": false,
          "computed": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 333,
          "end": 358,
          "object": {
            "type": "MemberExpression",
            "start": 333,
            "end": 349,
            "object": {
              "type": "Identifier",
              "start": 333,
              "end": 339,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 340,
              "end": 349,
              "name": "prototype"
            },
            "optional": false,
            "computed": false
          },
          "property": {
            "type": "Identifier",
            "start": 350,
            "end": 358,
            "name": "toString"
          },
          "optional": false,
          "computed": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 360,
      "end": 564,
      "test": {
        "type": "BinaryExpression",
        "start": 364,
        "end": 409,
        "left": {
          "type": "CallExpression",
          "start": 364,
          "end": 378,
          "callee": {
            "type": "MemberExpression",
            "start": 364,
            "end": 376,
            "object": {
              "type": "Identifier",
              "start": 364,
              "end": 367,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 368,
              "end": 376,
              "name": "getClass"
            },
            "optional": false,
            "computed": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 383,
          "end": 409,
          "left": {
            "type": "BinaryExpression",
            "start": 383,
            "end": 403,
            "left": {
              "type": "Literal",
              "start": 383,
              "end": 393,
              "value": "[object ",
              "raw": "\"[object \""
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 396,
              "end": 403,
              "value": "Array",
              "raw": "\"Array\""
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 406,
            "end": 409,
            "value": "]",
            "raw": "\"]\""
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 411,
        "end": 564,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 415,
            "end": 562,
            "argument": {
              "type": "NewExpression",
              "start": 421,
              "end": 561,
              "callee": {
                "type": "Identifier",
                "start": 425,
                "end": 437,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 438,
                  "end": 560,
                  "left": {
                    "type": "Literal",
                    "start": 438,
                    "end": 541,
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr is Array object. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 544,
                    "end": 560,
                    "expression": {
                      "type": "CallExpression",
                      "start": 545,
                      "end": 559,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 545,
                        "end": 557,
                        "object": {
                          "type": "Identifier",
                          "start": 545,
                          "end": 548,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 549,
                          "end": 557,
                          "name": "getClass"
                        },
                        "optional": false,
                        "computed": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 566,
      "end": 734,
      "test": {
        "type": "BinaryExpression",
        "start": 570,
        "end": 586,
        "left": {
          "type": "MemberExpression",
          "start": 570,
          "end": 580,
          "object": {
            "type": "Identifier",
            "start": 570,
            "end": 573,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 574,
            "end": 580,
            "name": "length"
          },
          "optional": false,
          "computed": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 585,
          "end": 586,
          "value": 5,
          "raw": "5"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 588,
        "end": 734,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 592,
            "end": 732,
            "argument": {
              "type": "NewExpression",
              "start": 598,
              "end": 731,
              "callee": {
                "type": "Identifier",
                "start": 602,
                "end": 614,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 615,
                  "end": 730,
                  "left": {
                    "type": "Literal",
                    "start": 615,
                    "end": 715,
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr.length === 5. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr.length === 5. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 718,
                    "end": 730,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 719,
                      "end": 729,
                      "object": {
                        "type": "Identifier",
                        "start": 719,
                        "end": 722,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 723,
                        "end": 729,
                        "name": "length"
                      },
                      "optional": false,
                      "computed": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 736,
      "end": 892,
      "test": {
        "type": "BinaryExpression",
        "start": 740,
        "end": 752,
        "left": {
          "type": "MemberExpression",
          "start": 740,
          "end": 746,
          "object": {
            "type": "Identifier",
            "start": 740,
            "end": 743,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 744,
            "end": 745,
            "value": 0,
            "raw": "0"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 751,
          "end": 752,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 754,
        "end": 892,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 758,
            "end": 890,
            "argument": {
              "type": "NewExpression",
              "start": 764,
              "end": 889,
              "callee": {
                "type": "Identifier",
                "start": 768,
                "end": 780,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 781,
                  "end": 888,
                  "left": {
                    "type": "Literal",
                    "start": 781,
                    "end": 877,
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[0] === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 880,
                    "end": 888,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 881,
                      "end": 887,
                      "object": {
                        "type": "Identifier",
                        "start": 881,
                        "end": 884,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 885,
                        "end": 886,
                        "value": 0,
                        "raw": "0"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 894,
      "end": 1050,
      "test": {
        "type": "BinaryExpression",
        "start": 898,
        "end": 910,
        "left": {
          "type": "MemberExpression",
          "start": 898,
          "end": 904,
          "object": {
            "type": "Identifier",
            "start": 898,
            "end": 901,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 902,
            "end": 903,
            "value": 1,
            "raw": "1"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 909,
          "end": 910,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 912,
        "end": 1050,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 916,
            "end": 1048,
            "argument": {
              "type": "NewExpression",
              "start": 922,
              "end": 1047,
              "callee": {
                "type": "Identifier",
                "start": 926,
                "end": 938,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 939,
                  "end": 1046,
                  "left": {
                    "type": "Literal",
                    "start": 939,
                    "end": 1035,
                    "value": "#4: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[1] === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1038,
                    "end": 1046,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1039,
                      "end": 1045,
                      "object": {
                        "type": "Identifier",
                        "start": 1039,
                        "end": 1042,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1043,
                        "end": 1044,
                        "value": 1,
                        "raw": "1"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1052,
      "end": 1208,
      "test": {
        "type": "BinaryExpression",
        "start": 1056,
        "end": 1068,
        "left": {
          "type": "MemberExpression",
          "start": 1056,
          "end": 1062,
          "object": {
            "type": "Identifier",
            "start": 1056,
            "end": 1059,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1060,
            "end": 1061,
            "value": 2,
            "raw": "2"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1067,
          "end": 1068,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1070,
        "end": 1208,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1074,
            "end": 1206,
            "argument": {
              "type": "NewExpression",
              "start": 1080,
              "end": 1205,
              "callee": {
                "type": "Identifier",
                "start": 1084,
                "end": 1096,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1097,
                  "end": 1204,
                  "left": {
                    "type": "Literal",
                    "start": 1097,
                    "end": 1193,
                    "value": "#5: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[2] === 2. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1196,
                    "end": 1204,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1197,
                      "end": 1203,
                      "object": {
                        "type": "Identifier",
                        "start": 1197,
                        "end": 1200,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1201,
                        "end": 1202,
                        "value": 2,
                        "raw": "2"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1210,
      "end": 1366,
      "test": {
        "type": "BinaryExpression",
        "start": 1214,
        "end": 1226,
        "left": {
          "type": "MemberExpression",
          "start": 1214,
          "end": 1220,
          "object": {
            "type": "Identifier",
            "start": 1214,
            "end": 1217,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1218,
            "end": 1219,
            "value": 3,
            "raw": "3"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1225,
          "end": 1226,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1228,
        "end": 1366,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1232,
            "end": 1364,
            "argument": {
              "type": "NewExpression",
              "start": 1238,
              "end": 1363,
              "callee": {
                "type": "Identifier",
                "start": 1242,
                "end": 1254,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1255,
                  "end": 1362,
                  "left": {
                    "type": "Literal",
                    "start": 1255,
                    "end": 1351,
                    "value": "#6: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[3] === 3. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[3] === 3. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1354,
                    "end": 1362,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1355,
                      "end": 1361,
                      "object": {
                        "type": "Identifier",
                        "start": 1355,
                        "end": 1358,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1359,
                        "end": 1360,
                        "value": 3,
                        "raw": "3"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1368,
      "end": 1524,
      "test": {
        "type": "BinaryExpression",
        "start": 1372,
        "end": 1384,
        "left": {
          "type": "MemberExpression",
          "start": 1372,
          "end": 1378,
          "object": {
            "type": "Identifier",
            "start": 1372,
            "end": 1375,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1376,
            "end": 1377,
            "value": 4,
            "raw": "4"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1383,
          "end": 1384,
          "value": 4,
          "raw": "4"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1386,
        "end": 1524,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1390,
            "end": 1522,
            "argument": {
              "type": "NewExpression",
              "start": 1396,
              "end": 1521,
              "callee": {
                "type": "Identifier",
                "start": 1400,
                "end": 1412,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1413,
                  "end": 1520,
                  "left": {
                    "type": "Literal",
                    "start": 1413,
                    "end": 1509,
                    "value": "#7: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[4] === 4. Actual: ",
                    "raw": "'#7: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[4] === 4. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1512,
                    "end": 1520,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1513,
                      "end": 1519,
                      "object": {
                        "type": "Identifier",
                        "start": 1513,
                        "end": 1516,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1517,
                        "end": 1518,
                        "value": 4,
                        "raw": "4"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1526,
      "end": 1698,
      "test": {
        "type": "BinaryExpression",
        "start": 1530,
        "end": 1550,
        "left": {
          "type": "MemberExpression",
          "start": 1530,
          "end": 1536,
          "object": {
            "type": "Identifier",
            "start": 1530,
            "end": 1533,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1534,
            "end": 1535,
            "value": 5,
            "raw": "5"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 1541,
          "end": 1550,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1552,
        "end": 1698,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1556,
            "end": 1696,
            "argument": {
              "type": "NewExpression",
              "start": 1562,
              "end": 1695,
              "callee": {
                "type": "Identifier",
                "start": 1566,
                "end": 1578,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1579,
                  "end": 1694,
                  "left": {
                    "type": "Literal",
                    "start": 1579,
                    "end": 1683,
                    "value": "#8: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[5] === undefined. Actual: ",
                    "raw": "'#8: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[5] === undefined. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1686,
                    "end": 1694,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1687,
                      "end": 1693,
                      "object": {
                        "type": "Identifier",
                        "start": 1687,
                        "end": 1690,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1691,
                        "end": 1692,
                        "value": 5,
                        "raw": "5"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}