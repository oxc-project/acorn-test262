{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 248,
            "end": 249
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 253,
                "end": 254
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 256,
                "end": 257
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 259,
                "end": 260
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 262,
                "end": 263
              },
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 265,
                "end": 266
              }
            ],
            "start": 252,
            "end": 267
          },
          "start": 248,
          "end": 267
        }
      ],
      "start": 244,
      "end": 268
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 273,
            "end": 276
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 279,
                "end": 280
              },
              "property": {
                "type": "Identifier",
                "name": "slice",
                "start": 281,
                "end": 286
              },
              "optional": false,
              "computed": false,
              "start": 279,
              "end": 286
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 287,
                "end": 288
              },
              {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 290,
                  "end": 296
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 297,
                  "end": 314
                },
                "optional": false,
                "computed": false,
                "start": 290,
                "end": 314
              }
            ],
            "optional": false,
            "start": 279,
            "end": 315
          },
          "start": 273,
          "end": 315
        }
      ],
      "start": 269,
      "end": 316
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 318,
            "end": 321
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 322,
            "end": 330
          },
          "optional": false,
          "computed": false,
          "start": 318,
          "end": 330
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 333,
              "end": 339
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 340,
              "end": 349
            },
            "optional": false,
            "computed": false,
            "start": 333,
            "end": 349
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 350,
            "end": 358
          },
          "optional": false,
          "computed": false,
          "start": 333,
          "end": 358
        },
        "start": 318,
        "end": 358
      },
      "start": 318,
      "end": 359
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 364,
              "end": 367
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 368,
              "end": 376
            },
            "optional": false,
            "computed": false,
            "start": 364,
            "end": 376
          },
          "arguments": [],
          "optional": false,
          "start": 364,
          "end": 378
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 383,
              "end": 393
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 396,
              "end": 403
            },
            "start": 383,
            "end": 403
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 406,
            "end": 409
          },
          "start": 383,
          "end": 409
        },
        "start": 364,
        "end": 409
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 425,
                "end": 437
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr is Array object. Actual: '",
                    "start": 438,
                    "end": 541
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 545,
                          "end": 548
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 549,
                          "end": 557
                        },
                        "optional": false,
                        "computed": false,
                        "start": 545,
                        "end": 557
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 545,
                      "end": 559
                    },
                    "start": 544,
                    "end": 560
                  },
                  "start": 438,
                  "end": 560
                }
              ],
              "start": 421,
              "end": 561
            },
            "start": 415,
            "end": 562
          }
        ],
        "start": 411,
        "end": 564
      },
      "alternate": null,
      "start": 360,
      "end": 564
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 570,
            "end": 573
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 574,
            "end": 580
          },
          "optional": false,
          "computed": false,
          "start": 570,
          "end": 580
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 5,
          "raw": "5",
          "start": 585,
          "end": 586
        },
        "start": 570,
        "end": 586
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 602,
                "end": 614
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr.length === 5. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr.length === 5. Actual: '",
                    "start": 615,
                    "end": 715
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 719,
                        "end": 722
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 723,
                        "end": 729
                      },
                      "optional": false,
                      "computed": false,
                      "start": 719,
                      "end": 729
                    },
                    "start": 718,
                    "end": 730
                  },
                  "start": 615,
                  "end": 730
                }
              ],
              "start": 598,
              "end": 731
            },
            "start": 592,
            "end": 732
          }
        ],
        "start": 588,
        "end": 734
      },
      "alternate": null,
      "start": 566,
      "end": 734
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 740,
            "end": 743
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 744,
            "end": 745
          },
          "optional": false,
          "computed": true,
          "start": 740,
          "end": 746
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 751,
          "end": 752
        },
        "start": 740,
        "end": 752
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 768,
                "end": 780
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[0] === 0. Actual: '",
                    "start": 781,
                    "end": 877
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 881,
                        "end": 884
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 885,
                        "end": 886
                      },
                      "optional": false,
                      "computed": true,
                      "start": 881,
                      "end": 887
                    },
                    "start": 880,
                    "end": 888
                  },
                  "start": 781,
                  "end": 888
                }
              ],
              "start": 764,
              "end": 889
            },
            "start": 758,
            "end": 890
          }
        ],
        "start": 754,
        "end": 892
      },
      "alternate": null,
      "start": 736,
      "end": 892
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 898,
            "end": 901
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 902,
            "end": 903
          },
          "optional": false,
          "computed": true,
          "start": 898,
          "end": 904
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 909,
          "end": 910
        },
        "start": 898,
        "end": 910
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 926,
                "end": 938
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[1] === 1. Actual: '",
                    "start": 939,
                    "end": 1035
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1039,
                        "end": 1042
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1043,
                        "end": 1044
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1039,
                      "end": 1045
                    },
                    "start": 1038,
                    "end": 1046
                  },
                  "start": 939,
                  "end": 1046
                }
              ],
              "start": 922,
              "end": 1047
            },
            "start": 916,
            "end": 1048
          }
        ],
        "start": 912,
        "end": 1050
      },
      "alternate": null,
      "start": 894,
      "end": 1050
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1056,
            "end": 1059
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1060,
            "end": 1061
          },
          "optional": false,
          "computed": true,
          "start": 1056,
          "end": 1062
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1067,
          "end": 1068
        },
        "start": 1056,
        "end": 1068
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1084,
                "end": 1096
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[2] === 2. Actual: '",
                    "start": 1097,
                    "end": 1193
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1197,
                        "end": 1200
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1201,
                        "end": 1202
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1197,
                      "end": 1203
                    },
                    "start": 1196,
                    "end": 1204
                  },
                  "start": 1097,
                  "end": 1204
                }
              ],
              "start": 1080,
              "end": 1205
            },
            "start": 1074,
            "end": 1206
          }
        ],
        "start": 1070,
        "end": 1208
      },
      "alternate": null,
      "start": 1052,
      "end": 1208
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1214,
            "end": 1217
          },
          "property": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 1218,
            "end": 1219
          },
          "optional": false,
          "computed": true,
          "start": 1214,
          "end": 1220
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 1225,
          "end": 1226
        },
        "start": 1214,
        "end": 1226
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1242,
                "end": 1254
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[3] === 3. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[3] === 3. Actual: '",
                    "start": 1255,
                    "end": 1351
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1355,
                        "end": 1358
                      },
                      "property": {
                        "type": "Literal",
                        "value": 3,
                        "raw": "3",
                        "start": 1359,
                        "end": 1360
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1355,
                      "end": 1361
                    },
                    "start": 1354,
                    "end": 1362
                  },
                  "start": 1255,
                  "end": 1362
                }
              ],
              "start": 1238,
              "end": 1363
            },
            "start": 1232,
            "end": 1364
          }
        ],
        "start": 1228,
        "end": 1366
      },
      "alternate": null,
      "start": 1210,
      "end": 1366
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1372,
            "end": 1375
          },
          "property": {
            "type": "Literal",
            "value": 4,
            "raw": "4",
            "start": 1376,
            "end": 1377
          },
          "optional": false,
          "computed": true,
          "start": 1372,
          "end": 1378
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 4,
          "raw": "4",
          "start": 1383,
          "end": 1384
        },
        "start": 1372,
        "end": 1384
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1400,
                "end": 1412
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[4] === 4. Actual: ",
                    "raw": "'#7: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[4] === 4. Actual: '",
                    "start": 1413,
                    "end": 1509
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1513,
                        "end": 1516
                      },
                      "property": {
                        "type": "Literal",
                        "value": 4,
                        "raw": "4",
                        "start": 1517,
                        "end": 1518
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1513,
                      "end": 1519
                    },
                    "start": 1512,
                    "end": 1520
                  },
                  "start": 1413,
                  "end": 1520
                }
              ],
              "start": 1396,
              "end": 1521
            },
            "start": 1390,
            "end": 1522
          }
        ],
        "start": 1386,
        "end": 1524
      },
      "alternate": null,
      "start": 1368,
      "end": 1524
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1530,
            "end": 1533
          },
          "property": {
            "type": "Literal",
            "value": 5,
            "raw": "5",
            "start": 1534,
            "end": 1535
          },
          "optional": false,
          "computed": true,
          "start": 1530,
          "end": 1536
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 1541,
          "end": 1550
        },
        "start": 1530,
        "end": 1550
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1566,
                "end": 1578
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[5] === undefined. Actual: ",
                    "raw": "'#8: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.POSITIVE_INFINITY); arr[5] === undefined. Actual: '",
                    "start": 1579,
                    "end": 1683
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1687,
                        "end": 1690
                      },
                      "property": {
                        "type": "Literal",
                        "value": 5,
                        "raw": "5",
                        "start": 1691,
                        "end": 1692
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1687,
                      "end": 1693
                    },
                    "start": 1686,
                    "end": 1694
                  },
                  "start": 1579,
                  "end": 1694
                }
              ],
              "start": 1562,
              "end": 1695
            },
            "start": 1556,
            "end": 1696
          }
        ],
        "start": 1552,
        "end": 1698
      },
      "alternate": null,
      "start": 1526,
      "end": 1698
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1699
}