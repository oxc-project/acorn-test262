{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 247,
            "end": 248
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 252,
                "end": 253
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 255,
                "end": 256
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 258,
                "end": 259
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 261,
                "end": 262
              },
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 264,
                "end": 265
              }
            ],
            "start": 251,
            "end": 266
          },
          "start": 247,
          "end": 266
        }
      ],
      "start": 243,
      "end": 267
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 272,
            "end": 275
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 278,
                "end": 279
              },
              "property": {
                "type": "Identifier",
                "name": "slice",
                "start": 280,
                "end": 285
              },
              "optional": false,
              "computed": false,
              "start": 278,
              "end": 285
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "NaN",
                "start": 286,
                "end": 289
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 291,
                "end": 292
              }
            ],
            "optional": false,
            "start": 278,
            "end": 293
          },
          "start": 272,
          "end": 293
        }
      ],
      "start": 268,
      "end": 294
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 296,
            "end": 299
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 300,
            "end": 308
          },
          "optional": false,
          "computed": false,
          "start": 296,
          "end": 308
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 311,
              "end": 317
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 318,
              "end": 327
            },
            "optional": false,
            "computed": false,
            "start": 311,
            "end": 327
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 328,
            "end": 336
          },
          "optional": false,
          "computed": false,
          "start": 311,
          "end": 336
        },
        "start": 296,
        "end": 336
      },
      "start": 296,
      "end": 337
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 342,
              "end": 345
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 346,
              "end": 354
            },
            "optional": false,
            "computed": false,
            "start": 342,
            "end": 354
          },
          "arguments": [],
          "optional": false,
          "start": 342,
          "end": 356
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 361,
              "end": 371
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 374,
              "end": 381
            },
            "start": 361,
            "end": 381
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 384,
            "end": 387
          },
          "start": 361,
          "end": 387
        },
        "start": 342,
        "end": 387
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 403,
                "end": 415
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice(NaN,3); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice(NaN,3); arr is Array object. Actual: '",
                    "start": 416,
                    "end": 498
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 502,
                          "end": 505
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 506,
                          "end": 514
                        },
                        "optional": false,
                        "computed": false,
                        "start": 502,
                        "end": 514
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 502,
                      "end": 516
                    },
                    "start": 501,
                    "end": 517
                  },
                  "start": 416,
                  "end": 517
                }
              ],
              "start": 399,
              "end": 518
            },
            "start": 393,
            "end": 519
          }
        ],
        "start": 389,
        "end": 521
      },
      "alternate": null,
      "start": 338,
      "end": 521
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 527,
            "end": 530
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 531,
            "end": 537
          },
          "optional": false,
          "computed": false,
          "start": 527,
          "end": 537
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 542,
          "end": 543
        },
        "start": 527,
        "end": 543
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 559,
                "end": 571
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice(NaN,3); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice(NaN,3); arr.length === 3. Actual: '",
                    "start": 572,
                    "end": 651
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 655,
                        "end": 658
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 659,
                        "end": 665
                      },
                      "optional": false,
                      "computed": false,
                      "start": 655,
                      "end": 665
                    },
                    "start": 654,
                    "end": 666
                  },
                  "start": 572,
                  "end": 666
                }
              ],
              "start": 555,
              "end": 667
            },
            "start": 549,
            "end": 668
          }
        ],
        "start": 545,
        "end": 670
      },
      "alternate": null,
      "start": 523,
      "end": 670
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 676,
            "end": 679
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 680,
            "end": 681
          },
          "optional": false,
          "computed": true,
          "start": 676,
          "end": 682
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 687,
          "end": 688
        },
        "start": 676,
        "end": 688
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 704,
                "end": 716
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice(NaN,3); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice(NaN,3); arr[0] === 0. Actual: '",
                    "start": 717,
                    "end": 792
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 796,
                        "end": 799
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 800,
                        "end": 801
                      },
                      "optional": false,
                      "computed": true,
                      "start": 796,
                      "end": 802
                    },
                    "start": 795,
                    "end": 803
                  },
                  "start": 717,
                  "end": 803
                }
              ],
              "start": 700,
              "end": 804
            },
            "start": 694,
            "end": 805
          }
        ],
        "start": 690,
        "end": 807
      },
      "alternate": null,
      "start": 672,
      "end": 807
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 813,
            "end": 816
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 817,
            "end": 818
          },
          "optional": false,
          "computed": true,
          "start": 813,
          "end": 819
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 824,
          "end": 825
        },
        "start": 813,
        "end": 825
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 841,
                "end": 853
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = [0,1,2,3,4]; var arr = x.slice(NaN,3); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3,4]; var arr = x.slice(NaN,3); arr[1] === 1. Actual: '",
                    "start": 854,
                    "end": 929
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 933,
                        "end": 936
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 937,
                        "end": 938
                      },
                      "optional": false,
                      "computed": true,
                      "start": 933,
                      "end": 939
                    },
                    "start": 932,
                    "end": 940
                  },
                  "start": 854,
                  "end": 940
                }
              ],
              "start": 837,
              "end": 941
            },
            "start": 831,
            "end": 942
          }
        ],
        "start": 827,
        "end": 944
      },
      "alternate": null,
      "start": 809,
      "end": 944
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 950,
            "end": 953
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 954,
            "end": 955
          },
          "optional": false,
          "computed": true,
          "start": 950,
          "end": 956
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 961,
          "end": 962
        },
        "start": 950,
        "end": 962
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 978,
                "end": 990
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: var x = [0,1,2,3,4]; var arr = x.slice(NaN,3); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3,4]; var arr = x.slice(NaN,3); arr[2] === 2. Actual: '",
                    "start": 991,
                    "end": 1066
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1070,
                        "end": 1073
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1074,
                        "end": 1075
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1070,
                      "end": 1076
                    },
                    "start": 1069,
                    "end": 1077
                  },
                  "start": 991,
                  "end": 1077
                }
              ],
              "start": 974,
              "end": 1078
            },
            "start": 968,
            "end": 1079
          }
        ],
        "start": 964,
        "end": 1081
      },
      "alternate": null,
      "start": 946,
      "end": 1081
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1087,
            "end": 1090
          },
          "property": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 1091,
            "end": 1092
          },
          "optional": false,
          "computed": true,
          "start": 1087,
          "end": 1093
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 1098,
          "end": 1107
        },
        "start": 1087,
        "end": 1107
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1123,
                "end": 1135
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: var x = [0,1,2,3,4]; var arr = x.slice(NaN,3); arr[3] === undefined. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3,4]; var arr = x.slice(NaN,3); arr[3] === undefined. Actual: '",
                    "start": 1136,
                    "end": 1219
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1223,
                        "end": 1226
                      },
                      "property": {
                        "type": "Literal",
                        "value": 3,
                        "raw": "3",
                        "start": 1227,
                        "end": 1228
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1223,
                      "end": 1229
                    },
                    "start": 1222,
                    "end": 1230
                  },
                  "start": 1136,
                  "end": 1230
                }
              ],
              "start": 1119,
              "end": 1231
            },
            "start": 1113,
            "end": 1232
          }
        ],
        "start": 1109,
        "end": 1234
      },
      "alternate": null,
      "start": 1083,
      "end": 1234
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1235
}