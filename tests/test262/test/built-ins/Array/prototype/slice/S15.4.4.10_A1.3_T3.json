{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 341,
            "end": 342
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 346,
                "end": 347
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 349,
                "end": 350
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 352,
                "end": 353
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 355,
                "end": 356
              },
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 358,
                "end": 359
              }
            ],
            "start": 345,
            "end": 360
          },
          "start": 341,
          "end": 360
        }
      ],
      "start": 337,
      "end": 361
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 366,
            "end": 369
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 372,
                "end": 373
              },
              "property": {
                "type": "Identifier",
                "name": "slice",
                "start": 374,
                "end": 379
              },
              "optional": false,
              "computed": false,
              "start": 372,
              "end": 379
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 380,
                "end": 381
              },
              {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 5,
                  "raw": "5",
                  "start": 384,
                  "end": 385
                },
                "prefix": true,
                "start": 383,
                "end": 385
              }
            ],
            "optional": false,
            "start": 372,
            "end": 386
          },
          "start": 366,
          "end": 386
        }
      ],
      "start": 362,
      "end": 387
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 389,
            "end": 392
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 393,
            "end": 401
          },
          "optional": false,
          "computed": false,
          "start": 389,
          "end": 401
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 404,
              "end": 410
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 411,
              "end": 420
            },
            "optional": false,
            "computed": false,
            "start": 404,
            "end": 420
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 421,
            "end": 429
          },
          "optional": false,
          "computed": false,
          "start": 404,
          "end": 429
        },
        "start": 389,
        "end": 429
      },
      "start": 389,
      "end": 430
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 435,
              "end": 438
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 439,
              "end": 447
            },
            "optional": false,
            "computed": false,
            "start": 435,
            "end": 447
          },
          "arguments": [],
          "optional": false,
          "start": 435,
          "end": 449
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 454,
              "end": 464
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 467,
              "end": 474
            },
            "start": 454,
            "end": 474
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 477,
            "end": 480
          },
          "start": 454,
          "end": 480
        },
        "start": 435,
        "end": 480
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 496,
                "end": 508
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice(0,-5); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice(0,-5); arr is Array object. Actual: '",
                    "start": 509,
                    "end": 590
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 594,
                          "end": 597
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 598,
                          "end": 606
                        },
                        "optional": false,
                        "computed": false,
                        "start": 594,
                        "end": 606
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 594,
                      "end": 608
                    },
                    "start": 593,
                    "end": 609
                  },
                  "start": 509,
                  "end": 609
                }
              ],
              "start": 492,
              "end": 610
            },
            "start": 486,
            "end": 611
          }
        ],
        "start": 482,
        "end": 613
      },
      "alternate": null,
      "start": 431,
      "end": 613
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 619,
            "end": 622
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 623,
            "end": 629
          },
          "optional": false,
          "computed": false,
          "start": 619,
          "end": 629
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 634,
          "end": 635
        },
        "start": 619,
        "end": 635
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 651,
                "end": 663
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice(0,-5); arr.length === 0. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice(0,-5); arr.length === 0. Actual: '",
                    "start": 664,
                    "end": 742
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 746,
                        "end": 749
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 750,
                        "end": 756
                      },
                      "optional": false,
                      "computed": false,
                      "start": 746,
                      "end": 756
                    },
                    "start": 745,
                    "end": 757
                  },
                  "start": 664,
                  "end": 757
                }
              ],
              "start": 647,
              "end": 758
            },
            "start": 641,
            "end": 759
          }
        ],
        "start": 637,
        "end": 761
      },
      "alternate": null,
      "start": 615,
      "end": 761
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 767,
            "end": 770
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 771,
            "end": 772
          },
          "optional": false,
          "computed": true,
          "start": 767,
          "end": 773
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 778,
          "end": 787
        },
        "start": 767,
        "end": 787
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 803,
                "end": 815
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice(0,-5); arr[0] === undefined. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice(0,-5); arr[0] === undefined. Actual: '",
                    "start": 816,
                    "end": 898
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 902,
                        "end": 905
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 906,
                        "end": 907
                      },
                      "optional": false,
                      "computed": true,
                      "start": 902,
                      "end": 908
                    },
                    "start": 901,
                    "end": 909
                  },
                  "start": 816,
                  "end": 909
                }
              ],
              "start": 799,
              "end": 910
            },
            "start": 793,
            "end": 911
          }
        ],
        "start": 789,
        "end": 913
      },
      "alternate": null,
      "start": 763,
      "end": 913
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 914
}