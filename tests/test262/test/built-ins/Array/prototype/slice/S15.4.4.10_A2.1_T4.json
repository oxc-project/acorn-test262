{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 253,
            "end": 254
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 258,
                "end": 259
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 261,
                "end": 262
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 264,
                "end": 265
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 267,
                "end": 268
              },
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 270,
                "end": 271
              }
            ],
            "start": 257,
            "end": 272
          },
          "start": 253,
          "end": 272
        }
      ],
      "start": 249,
      "end": 273
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 278,
            "end": 281
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 284,
                "end": 285
              },
              "property": {
                "type": "Identifier",
                "name": "slice",
                "start": 286,
                "end": 291
              },
              "optional": false,
              "computed": false,
              "start": 284,
              "end": 291
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 292,
                  "end": 298
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 299,
                  "end": 316
                },
                "optional": false,
                "computed": false,
                "start": 292,
                "end": 316
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 318,
                "end": 319
              }
            ],
            "optional": false,
            "start": 284,
            "end": 320
          },
          "start": 278,
          "end": 320
        }
      ],
      "start": 274,
      "end": 321
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 323,
            "end": 326
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 327,
            "end": 335
          },
          "optional": false,
          "computed": false,
          "start": 323,
          "end": 335
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 338,
              "end": 344
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 345,
              "end": 354
            },
            "optional": false,
            "computed": false,
            "start": 338,
            "end": 354
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 355,
            "end": 363
          },
          "optional": false,
          "computed": false,
          "start": 338,
          "end": 363
        },
        "start": 323,
        "end": 363
      },
      "start": 323,
      "end": 364
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 369,
              "end": 372
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 373,
              "end": 381
            },
            "optional": false,
            "computed": false,
            "start": 369,
            "end": 381
          },
          "arguments": [],
          "optional": false,
          "start": 369,
          "end": 383
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 388,
              "end": 398
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 401,
              "end": 408
            },
            "start": 388,
            "end": 408
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 411,
            "end": 414
          },
          "start": 388,
          "end": 414
        },
        "start": 369,
        "end": 414
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 430,
                "end": 442
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr is Array object. Actual: '",
                    "start": 443,
                    "end": 546
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 550,
                          "end": 553
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 554,
                          "end": 562
                        },
                        "optional": false,
                        "computed": false,
                        "start": 550,
                        "end": 562
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 550,
                      "end": 564
                    },
                    "start": 549,
                    "end": 565
                  },
                  "start": 443,
                  "end": 565
                }
              ],
              "start": 426,
              "end": 566
            },
            "start": 420,
            "end": 567
          }
        ],
        "start": 416,
        "end": 569
      },
      "alternate": null,
      "start": 365,
      "end": 569
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 575,
            "end": 578
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 579,
            "end": 585
          },
          "optional": false,
          "computed": false,
          "start": 575,
          "end": 585
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 590,
          "end": 591
        },
        "start": 575,
        "end": 591
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 607,
                "end": 619
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr.length === 3. Actual: '",
                    "start": 620,
                    "end": 720
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 724,
                        "end": 727
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 728,
                        "end": 734
                      },
                      "optional": false,
                      "computed": false,
                      "start": 724,
                      "end": 734
                    },
                    "start": 723,
                    "end": 735
                  },
                  "start": 620,
                  "end": 735
                }
              ],
              "start": 603,
              "end": 736
            },
            "start": 597,
            "end": 737
          }
        ],
        "start": 593,
        "end": 739
      },
      "alternate": null,
      "start": 571,
      "end": 739
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 745,
            "end": 748
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 749,
            "end": 750
          },
          "optional": false,
          "computed": true,
          "start": 745,
          "end": 751
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 756,
          "end": 757
        },
        "start": 745,
        "end": 757
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 773,
                "end": 785
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[0] === 0. Actual: '",
                    "start": 786,
                    "end": 882
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 886,
                        "end": 889
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 890,
                        "end": 891
                      },
                      "optional": false,
                      "computed": true,
                      "start": 886,
                      "end": 892
                    },
                    "start": 885,
                    "end": 893
                  },
                  "start": 786,
                  "end": 893
                }
              ],
              "start": 769,
              "end": 894
            },
            "start": 763,
            "end": 895
          }
        ],
        "start": 759,
        "end": 897
      },
      "alternate": null,
      "start": 741,
      "end": 897
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 903,
            "end": 906
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 907,
            "end": 908
          },
          "optional": false,
          "computed": true,
          "start": 903,
          "end": 909
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 914,
          "end": 915
        },
        "start": 903,
        "end": 915
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 931,
                "end": 943
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[1] === 1. Actual: '",
                    "start": 944,
                    "end": 1040
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1044,
                        "end": 1047
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1048,
                        "end": 1049
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1044,
                      "end": 1050
                    },
                    "start": 1043,
                    "end": 1051
                  },
                  "start": 944,
                  "end": 1051
                }
              ],
              "start": 927,
              "end": 1052
            },
            "start": 921,
            "end": 1053
          }
        ],
        "start": 917,
        "end": 1055
      },
      "alternate": null,
      "start": 899,
      "end": 1055
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1061,
            "end": 1064
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1065,
            "end": 1066
          },
          "optional": false,
          "computed": true,
          "start": 1061,
          "end": 1067
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1072,
          "end": 1073
        },
        "start": 1061,
        "end": 1073
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1089,
                "end": 1101
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[2] === 2. Actual: '",
                    "start": 1102,
                    "end": 1198
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1202,
                        "end": 1205
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1206,
                        "end": 1207
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1202,
                      "end": 1208
                    },
                    "start": 1201,
                    "end": 1209
                  },
                  "start": 1102,
                  "end": 1209
                }
              ],
              "start": 1085,
              "end": 1210
            },
            "start": 1079,
            "end": 1211
          }
        ],
        "start": 1075,
        "end": 1213
      },
      "alternate": null,
      "start": 1057,
      "end": 1213
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 1219,
            "end": 1222
          },
          "property": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 1223,
            "end": 1224
          },
          "optional": false,
          "computed": true,
          "start": 1219,
          "end": 1225
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 1230,
          "end": 1239
        },
        "start": 1219,
        "end": 1239
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1255,
                "end": 1267
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[3] === undefined. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[3] === undefined. Actual: '",
                    "start": 1268,
                    "end": 1372
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 1376,
                        "end": 1379
                      },
                      "property": {
                        "type": "Literal",
                        "value": 3,
                        "raw": "3",
                        "start": 1380,
                        "end": 1381
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1376,
                      "end": 1382
                    },
                    "start": 1375,
                    "end": 1383
                  },
                  "start": 1268,
                  "end": 1383
                }
              ],
              "start": 1251,
              "end": 1384
            },
            "start": 1245,
            "end": 1385
          }
        ],
        "start": 1241,
        "end": 1387
      },
      "alternate": null,
      "start": 1215,
      "end": 1387
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1388
}