{
  "type": "Program",
  "start": 0,
  "end": 1388,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 249,
      "end": 273,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 253,
          "end": 272,
          "id": {
            "type": "Identifier",
            "start": 253,
            "end": 254,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 257,
            "end": 272,
            "elements": [
              {
                "type": "Literal",
                "start": 258,
                "end": 259,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Literal",
                "start": 261,
                "end": 262,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 264,
                "end": 265,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 267,
                "end": 268,
                "value": 3,
                "raw": "3"
              },
              {
                "type": "Literal",
                "start": 270,
                "end": 271,
                "value": 4,
                "raw": "4"
              }
            ]
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 274,
      "end": 321,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 278,
          "end": 320,
          "id": {
            "type": "Identifier",
            "start": 278,
            "end": 281,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 284,
            "end": 320,
            "callee": {
              "type": "MemberExpression",
              "start": 284,
              "end": 291,
              "object": {
                "type": "Identifier",
                "start": 284,
                "end": 285,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 286,
                "end": 291,
                "name": "slice"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "start": 292,
                "end": 316,
                "object": {
                  "type": "Identifier",
                  "start": 292,
                  "end": 298,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 299,
                  "end": 316,
                  "name": "NEGATIVE_INFINITY"
                },
                "optional": false,
                "computed": false
              },
              {
                "type": "Literal",
                "start": 318,
                "end": 319,
                "value": 3,
                "raw": "3"
              }
            ],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 323,
      "end": 364,
      "expression": {
        "type": "AssignmentExpression",
        "start": 323,
        "end": 363,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 323,
          "end": 335,
          "object": {
            "type": "Identifier",
            "start": 323,
            "end": 326,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 327,
            "end": 335,
            "name": "getClass"
          },
          "optional": false,
          "computed": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 338,
          "end": 363,
          "object": {
            "type": "MemberExpression",
            "start": 338,
            "end": 354,
            "object": {
              "type": "Identifier",
              "start": 338,
              "end": 344,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 345,
              "end": 354,
              "name": "prototype"
            },
            "optional": false,
            "computed": false
          },
          "property": {
            "type": "Identifier",
            "start": 355,
            "end": 363,
            "name": "toString"
          },
          "optional": false,
          "computed": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 365,
      "end": 569,
      "test": {
        "type": "BinaryExpression",
        "start": 369,
        "end": 414,
        "left": {
          "type": "CallExpression",
          "start": 369,
          "end": 383,
          "callee": {
            "type": "MemberExpression",
            "start": 369,
            "end": 381,
            "object": {
              "type": "Identifier",
              "start": 369,
              "end": 372,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 373,
              "end": 381,
              "name": "getClass"
            },
            "optional": false,
            "computed": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 388,
          "end": 414,
          "left": {
            "type": "BinaryExpression",
            "start": 388,
            "end": 408,
            "left": {
              "type": "Literal",
              "start": 388,
              "end": 398,
              "value": "[object ",
              "raw": "\"[object \""
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 401,
              "end": 408,
              "value": "Array",
              "raw": "\"Array\""
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 411,
            "end": 414,
            "value": "]",
            "raw": "\"]\""
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 416,
        "end": 569,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 420,
            "end": 567,
            "argument": {
              "type": "NewExpression",
              "start": 426,
              "end": 566,
              "callee": {
                "type": "Identifier",
                "start": 430,
                "end": 442,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 443,
                  "end": 565,
                  "left": {
                    "type": "Literal",
                    "start": 443,
                    "end": 546,
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr is Array object. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 549,
                    "end": 565,
                    "expression": {
                      "type": "CallExpression",
                      "start": 550,
                      "end": 564,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 550,
                        "end": 562,
                        "object": {
                          "type": "Identifier",
                          "start": 550,
                          "end": 553,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 554,
                          "end": 562,
                          "name": "getClass"
                        },
                        "optional": false,
                        "computed": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 571,
      "end": 739,
      "test": {
        "type": "BinaryExpression",
        "start": 575,
        "end": 591,
        "left": {
          "type": "MemberExpression",
          "start": 575,
          "end": 585,
          "object": {
            "type": "Identifier",
            "start": 575,
            "end": 578,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 579,
            "end": 585,
            "name": "length"
          },
          "optional": false,
          "computed": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 590,
          "end": 591,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 593,
        "end": 739,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 597,
            "end": 737,
            "argument": {
              "type": "NewExpression",
              "start": 603,
              "end": 736,
              "callee": {
                "type": "Identifier",
                "start": 607,
                "end": 619,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 620,
                  "end": 735,
                  "left": {
                    "type": "Literal",
                    "start": 620,
                    "end": 720,
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr.length === 3. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 723,
                    "end": 735,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 724,
                      "end": 734,
                      "object": {
                        "type": "Identifier",
                        "start": 724,
                        "end": 727,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 728,
                        "end": 734,
                        "name": "length"
                      },
                      "optional": false,
                      "computed": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 741,
      "end": 897,
      "test": {
        "type": "BinaryExpression",
        "start": 745,
        "end": 757,
        "left": {
          "type": "MemberExpression",
          "start": 745,
          "end": 751,
          "object": {
            "type": "Identifier",
            "start": 745,
            "end": 748,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 749,
            "end": 750,
            "value": 0,
            "raw": "0"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 756,
          "end": 757,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 759,
        "end": 897,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 763,
            "end": 895,
            "argument": {
              "type": "NewExpression",
              "start": 769,
              "end": 894,
              "callee": {
                "type": "Identifier",
                "start": 773,
                "end": 785,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 786,
                  "end": 893,
                  "left": {
                    "type": "Literal",
                    "start": 786,
                    "end": 882,
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[0] === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 885,
                    "end": 893,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 886,
                      "end": 892,
                      "object": {
                        "type": "Identifier",
                        "start": 886,
                        "end": 889,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 890,
                        "end": 891,
                        "value": 0,
                        "raw": "0"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 899,
      "end": 1055,
      "test": {
        "type": "BinaryExpression",
        "start": 903,
        "end": 915,
        "left": {
          "type": "MemberExpression",
          "start": 903,
          "end": 909,
          "object": {
            "type": "Identifier",
            "start": 903,
            "end": 906,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 907,
            "end": 908,
            "value": 1,
            "raw": "1"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 914,
          "end": 915,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 917,
        "end": 1055,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 921,
            "end": 1053,
            "argument": {
              "type": "NewExpression",
              "start": 927,
              "end": 1052,
              "callee": {
                "type": "Identifier",
                "start": 931,
                "end": 943,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 944,
                  "end": 1051,
                  "left": {
                    "type": "Literal",
                    "start": 944,
                    "end": 1040,
                    "value": "#4: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[1] === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1043,
                    "end": 1051,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1044,
                      "end": 1050,
                      "object": {
                        "type": "Identifier",
                        "start": 1044,
                        "end": 1047,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1048,
                        "end": 1049,
                        "value": 1,
                        "raw": "1"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1057,
      "end": 1213,
      "test": {
        "type": "BinaryExpression",
        "start": 1061,
        "end": 1073,
        "left": {
          "type": "MemberExpression",
          "start": 1061,
          "end": 1067,
          "object": {
            "type": "Identifier",
            "start": 1061,
            "end": 1064,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1065,
            "end": 1066,
            "value": 2,
            "raw": "2"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1072,
          "end": 1073,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1075,
        "end": 1213,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1079,
            "end": 1211,
            "argument": {
              "type": "NewExpression",
              "start": 1085,
              "end": 1210,
              "callee": {
                "type": "Identifier",
                "start": 1089,
                "end": 1101,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1102,
                  "end": 1209,
                  "left": {
                    "type": "Literal",
                    "start": 1102,
                    "end": 1198,
                    "value": "#5: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[2] === 2. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1201,
                    "end": 1209,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1202,
                      "end": 1208,
                      "object": {
                        "type": "Identifier",
                        "start": 1202,
                        "end": 1205,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1206,
                        "end": 1207,
                        "value": 2,
                        "raw": "2"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1215,
      "end": 1387,
      "test": {
        "type": "BinaryExpression",
        "start": 1219,
        "end": 1239,
        "left": {
          "type": "MemberExpression",
          "start": 1219,
          "end": 1225,
          "object": {
            "type": "Identifier",
            "start": 1219,
            "end": 1222,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1223,
            "end": 1224,
            "value": 3,
            "raw": "3"
          },
          "optional": false,
          "computed": true
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 1230,
          "end": 1239,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1241,
        "end": 1387,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1245,
            "end": 1385,
            "argument": {
              "type": "NewExpression",
              "start": 1251,
              "end": 1384,
              "callee": {
                "type": "Identifier",
                "start": 1255,
                "end": 1267,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1268,
                  "end": 1383,
                  "left": {
                    "type": "Literal",
                    "start": 1268,
                    "end": 1372,
                    "value": "#6: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[3] === undefined. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3,4]; var arr = x.slice(Number.NEGATIVE_INFINITY,3); arr[3] === undefined. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1375,
                    "end": 1383,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1376,
                      "end": 1382,
                      "object": {
                        "type": "Identifier",
                        "start": 1376,
                        "end": 1379,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1380,
                        "end": 1381,
                        "value": 3,
                        "raw": "3"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}