{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 252,
            "end": 253
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 257,
                "end": 258
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 260,
                "end": 261
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 263,
                "end": 264
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 266,
                "end": 267
              },
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 269,
                "end": 270
              }
            ],
            "start": 256,
            "end": 271
          },
          "start": 252,
          "end": 271
        }
      ],
      "start": 248,
      "end": 272
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "arr",
            "start": 277,
            "end": 280
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "x",
                "start": 283,
                "end": 284
              },
              "property": {
                "type": "Identifier",
                "name": "slice",
                "start": 285,
                "end": 290
              },
              "optional": false,
              "computed": false,
              "start": 283,
              "end": 290
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 291,
                  "end": 297
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 298,
                  "end": 315
                },
                "optional": false,
                "computed": false,
                "start": 291,
                "end": 315
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 317,
                "end": 318
              }
            ],
            "optional": false,
            "start": 283,
            "end": 319
          },
          "start": 277,
          "end": 319
        }
      ],
      "start": 273,
      "end": 320
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 322,
            "end": 325
          },
          "property": {
            "type": "Identifier",
            "name": "getClass",
            "start": 326,
            "end": 334
          },
          "optional": false,
          "computed": false,
          "start": 322,
          "end": 334
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 337,
              "end": 343
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 344,
              "end": 353
            },
            "optional": false,
            "computed": false,
            "start": 337,
            "end": 353
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 354,
            "end": 362
          },
          "optional": false,
          "computed": false,
          "start": 337,
          "end": 362
        },
        "start": 322,
        "end": 362
      },
      "start": 322,
      "end": 363
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "arr",
              "start": 368,
              "end": 371
            },
            "property": {
              "type": "Identifier",
              "name": "getClass",
              "start": 372,
              "end": 380
            },
            "optional": false,
            "computed": false,
            "start": 368,
            "end": 380
          },
          "arguments": [],
          "optional": false,
          "start": 368,
          "end": 382
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "[object ",
              "raw": "\"[object \"",
              "start": 387,
              "end": 397
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "Array",
              "raw": "\"Array\"",
              "start": 400,
              "end": 407
            },
            "start": 387,
            "end": 407
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "]",
            "raw": "\"]\"",
            "start": 410,
            "end": 413
          },
          "start": 387,
          "end": 413
        },
        "start": 368,
        "end": 413
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 429,
                "end": 441
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice(Number.POSITIVE_INFINITY,3); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice(Number.POSITIVE_INFINITY,3); arr is Array object. Actual: '",
                    "start": 442,
                    "end": 545
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "arr",
                          "start": 549,
                          "end": 552
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClass",
                          "start": 553,
                          "end": 561
                        },
                        "optional": false,
                        "computed": false,
                        "start": 549,
                        "end": 561
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 549,
                      "end": 563
                    },
                    "start": 548,
                    "end": 564
                  },
                  "start": 442,
                  "end": 564
                }
              ],
              "start": 425,
              "end": 565
            },
            "start": 419,
            "end": 566
          }
        ],
        "start": 415,
        "end": 568
      },
      "alternate": null,
      "start": 364,
      "end": 568
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 574,
            "end": 577
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 578,
            "end": 584
          },
          "optional": false,
          "computed": false,
          "start": 574,
          "end": 584
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 589,
          "end": 590
        },
        "start": 574,
        "end": 590
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 606,
                "end": 618
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice(Number.POSITIVE_INFINITY,3); arr.length === 0. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice(Number.POSITIVE_INFINITY,3); arr.length === 0. Actual: '",
                    "start": 619,
                    "end": 719
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 723,
                        "end": 726
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 727,
                        "end": 733
                      },
                      "optional": false,
                      "computed": false,
                      "start": 723,
                      "end": 733
                    },
                    "start": 722,
                    "end": 734
                  },
                  "start": 619,
                  "end": 734
                }
              ],
              "start": 602,
              "end": 735
            },
            "start": 596,
            "end": 736
          }
        ],
        "start": 592,
        "end": 738
      },
      "alternate": null,
      "start": 570,
      "end": 738
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "arr",
            "start": 744,
            "end": 747
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 748,
            "end": 749
          },
          "optional": false,
          "computed": true,
          "start": 744,
          "end": 750
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 755,
          "end": 764
        },
        "start": 744,
        "end": 764
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 780,
                "end": 792
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice(Number.POSITIVE_INFINITY,3); arr[0] === undefined. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice(Number.POSITIVE_INFINITY,3); arr[0] === undefined. Actual: '",
                    "start": 793,
                    "end": 897
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "arr",
                        "start": 901,
                        "end": 904
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 905,
                        "end": 906
                      },
                      "optional": false,
                      "computed": true,
                      "start": 901,
                      "end": 907
                    },
                    "start": 900,
                    "end": 908
                  },
                  "start": 793,
                  "end": 908
                }
              ],
              "start": 776,
              "end": 909
            },
            "start": 770,
            "end": 910
          }
        ],
        "start": 766,
        "end": 912
      },
      "alternate": null,
      "start": 740,
      "end": 912
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 913
}