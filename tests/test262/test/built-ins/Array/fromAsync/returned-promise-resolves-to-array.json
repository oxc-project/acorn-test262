{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "asyncTest",
          "start": 463,
          "end": 472
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": true,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "const",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "promise",
                        "start": 501,
                        "end": 508
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "Array",
                            "start": 511,
                            "end": 516
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "fromAsync",
                            "start": 517,
                            "end": 526
                          },
                          "optional": false,
                          "computed": false,
                          "start": 511,
                          "end": 526
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0",
                                "start": 528,
                                "end": 529
                              },
                              {
                                "type": "Literal",
                                "value": 1,
                                "raw": "1",
                                "start": 531,
                                "end": 532
                              },
                              {
                                "type": "Literal",
                                "value": 2,
                                "raw": "2",
                                "start": 534,
                                "end": 535
                              }
                            ],
                            "start": 527,
                            "end": 536
                          }
                        ],
                        "optional": false,
                        "start": 511,
                        "end": 537
                      },
                      "start": 501,
                      "end": 537
                    }
                  ],
                  "start": 495,
                  "end": 538
                },
                {
                  "type": "VariableDeclaration",
                  "kind": "const",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "array",
                        "start": 547,
                        "end": 552
                      },
                      "init": {
                        "type": "AwaitExpression",
                        "argument": {
                          "type": "Identifier",
                          "name": "promise",
                          "start": 561,
                          "end": 568
                        },
                        "start": 555,
                        "end": 568
                      },
                      "start": 547,
                      "end": 568
                    }
                  ],
                  "start": 541,
                  "end": 569
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "assert",
                      "start": 572,
                      "end": 578
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "Array",
                            "start": 579,
                            "end": 584
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isArray",
                            "start": 585,
                            "end": 592
                          },
                          "optional": false,
                          "computed": false,
                          "start": 579,
                          "end": 592
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "array",
                            "start": 593,
                            "end": 598
                          }
                        ],
                        "optional": false,
                        "start": 579,
                        "end": 599
                      },
                      {
                        "type": "Literal",
                        "value": "Array.fromAsync returns a Promise that resolves to an Array",
                        "raw": "\"Array.fromAsync returns a Promise that resolves to an Array\"",
                        "start": 601,
                        "end": 662
                      }
                    ],
                    "optional": false,
                    "start": 572,
                    "end": 663
                  },
                  "start": 572,
                  "end": 664
                }
              ],
              "start": 491,
              "end": 666
            },
            "expression": false,
            "start": 473,
            "end": 666
          }
        ],
        "optional": false,
        "start": 463,
        "end": 667
      },
      "start": 463,
      "end": 668
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 669
}