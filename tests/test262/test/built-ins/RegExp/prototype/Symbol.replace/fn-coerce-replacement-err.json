{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "replacer",
            "start": 859,
            "end": 867
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "kind": "init",
                        "key": {
                          "type": "Identifier",
                          "name": "toString",
                          "start": 898,
                          "end": 906
                        },
                        "value": {
                          "type": "FunctionExpression",
                          "id": null,
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ThrowStatement",
                                "argument": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Test262Error",
                                    "start": 937,
                                    "end": 949
                                  },
                                  "arguments": [],
                                  "start": 933,
                                  "end": 951
                                },
                                "start": 927,
                                "end": 952
                              }
                            ],
                            "start": 919,
                            "end": 958
                          },
                          "expression": false,
                          "start": 908,
                          "end": 958
                        },
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "start": 898,
                        "end": 958
                      }
                    ],
                    "start": 892,
                    "end": 962
                  },
                  "start": 885,
                  "end": 963
                }
              ],
              "start": 881,
              "end": 965
            },
            "expression": false,
            "start": 870,
            "end": 965
          },
          "start": 859,
          "end": 965
        }
      ],
      "start": 855,
      "end": 966
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 968,
            "end": 974
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 975,
            "end": 981
          },
          "optional": false,
          "computed": false,
          "start": 968,
          "end": 981
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 982,
            "end": 994
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Literal",
                        "value": null,
                        "raw": "/x/",
                        "regex": {
                          "pattern": "x",
                          "flags": ""
                        },
                        "start": 1011,
                        "end": 1014
                      },
                      "property": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Symbol",
                          "start": 1015,
                          "end": 1021
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "replace",
                          "start": 1022,
                          "end": 1029
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1015,
                        "end": 1029
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1011,
                      "end": 1030
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "[x]",
                        "raw": "'[x]'",
                        "start": 1031,
                        "end": 1036
                      },
                      {
                        "type": "Identifier",
                        "name": "replacer",
                        "start": 1038,
                        "end": 1046
                      }
                    ],
                    "optional": false,
                    "start": 1011,
                    "end": 1047
                  },
                  "start": 1011,
                  "end": 1048
                }
              ],
              "start": 1007,
              "end": 1050
            },
            "expression": false,
            "start": 996,
            "end": 1050
          }
        ],
        "optional": false,
        "start": 968,
        "end": 1051
      },
      "start": 968,
      "end": 1052
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1053
}