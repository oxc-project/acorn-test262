{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 343,
            "end": 349
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 350,
            "end": 359
          },
          "optional": false,
          "computed": false,
          "start": 343,
          "end": 359
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "RegExp",
                    "start": 363,
                    "end": 369
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "prototype",
                    "start": 370,
                    "end": 379
                  },
                  "optional": false,
                  "computed": false,
                  "start": 363,
                  "end": 379
                },
                "property": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 380,
                  "end": 388
                },
                "optional": false,
                "computed": false,
                "start": 363,
                "end": 388
              },
              "property": {
                "type": "Identifier",
                "name": "hasOwnProperty",
                "start": 389,
                "end": 403
              },
              "optional": false,
              "computed": false,
              "start": 363,
              "end": 403
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "length",
                "raw": "'length'",
                "start": 404,
                "end": 412
              }
            ],
            "optional": false,
            "start": 363,
            "end": 413
          },
          {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 417,
            "end": 421
          },
          {
            "type": "Literal",
            "value": "RegExp.prototype.toString.hasOwnProperty('length') must return true",
            "raw": "'RegExp.prototype.toString.hasOwnProperty(\\'length\\') must return true'",
            "start": 425,
            "end": 496
          }
        ],
        "optional": false,
        "start": 343,
        "end": 498
      },
      "start": 343,
      "end": 499
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 501,
            "end": 507
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 508,
            "end": 517
          },
          "optional": false,
          "computed": false,
          "start": 501,
          "end": 517
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "RegExp",
                    "start": 521,
                    "end": 527
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "prototype",
                    "start": 528,
                    "end": 537
                  },
                  "optional": false,
                  "computed": false,
                  "start": 521,
                  "end": 537
                },
                "property": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 538,
                  "end": 546
                },
                "optional": false,
                "computed": false,
                "start": 521,
                "end": 546
              },
              "property": {
                "type": "Identifier",
                "name": "propertyIsEnumerable",
                "start": 547,
                "end": 567
              },
              "optional": false,
              "computed": false,
              "start": 521,
              "end": 567
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "length",
                "raw": "'length'",
                "start": 568,
                "end": 576
              }
            ],
            "optional": false,
            "start": 521,
            "end": 577
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 581,
            "end": 586
          },
          {
            "type": "Literal",
            "value": "RegExp.prototype.toString.propertyIsEnumerable('length') must return false",
            "raw": "'RegExp.prototype.toString.propertyIsEnumerable(\\'length\\') must return false'",
            "start": 590,
            "end": 668
          }
        ],
        "optional": false,
        "start": 501,
        "end": 670
      },
      "start": 501,
      "end": 671
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "count",
            "start": 677,
            "end": 682
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 683,
            "end": 684
          },
          "start": 677,
          "end": 684
        }
      ],
      "start": 673,
      "end": 685
    },
    {
      "type": "ForInStatement",
      "left": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "p",
              "start": 696,
              "end": 697
            },
            "init": null,
            "start": 696,
            "end": 697
          }
        ],
        "start": 692,
        "end": 697
      },
      "right": {
        "type": "MemberExpression",
        "object": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "RegExp",
            "start": 701,
            "end": 707
          },
          "property": {
            "type": "Identifier",
            "name": "prototype",
            "start": 708,
            "end": 717
          },
          "optional": false,
          "computed": false,
          "start": 701,
          "end": 717
        },
        "property": {
          "type": "Identifier",
          "name": "toString",
          "start": 718,
          "end": 726
        },
        "optional": false,
        "computed": false,
        "start": 701,
        "end": 726
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "p",
                "start": 737,
                "end": 738
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "value": "length",
                "raw": "\"length\"",
                "start": 741,
                "end": 749
              },
              "start": 737,
              "end": 749
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "prefix": false,
                    "argument": {
                      "type": "Identifier",
                      "name": "count",
                      "start": 759,
                      "end": 764
                    },
                    "start": 759,
                    "end": 766
                  },
                  "start": 759,
                  "end": 767
                }
              ],
              "start": 751,
              "end": 773
            },
            "alternate": null,
            "start": 733,
            "end": 773
          }
        ],
        "start": 727,
        "end": 775
      },
      "start": 687,
      "end": 775
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 777,
            "end": 783
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 784,
            "end": 793
          },
          "optional": false,
          "computed": false,
          "start": 777,
          "end": 793
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "count",
            "start": 794,
            "end": 799
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 801,
            "end": 802
          },
          {
            "type": "Literal",
            "value": "The value of count is expected to be 0",
            "raw": "'The value of count is expected to be 0'",
            "start": 804,
            "end": 844
          }
        ],
        "optional": false,
        "start": 777,
        "end": 845
      },
      "start": 777,
      "end": 846
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 893
}