{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 330,
            "end": 336
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 337,
            "end": 346
          },
          "optional": false,
          "computed": false,
          "start": 330,
          "end": 346
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 347,
                "end": 353
              },
              "property": {
                "type": "Identifier",
                "name": "hasOwnProperty",
                "start": 354,
                "end": 368
              },
              "optional": false,
              "computed": false,
              "start": 347,
              "end": 368
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "prototype",
                "raw": "'prototype'",
                "start": 369,
                "end": 380
              }
            ],
            "optional": false,
            "start": 347,
            "end": 381
          },
          {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 383,
            "end": 387
          }
        ],
        "optional": false,
        "start": 330,
        "end": 388
      },
      "start": 330,
      "end": 389
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "verifyNotConfigurable",
          "start": 391,
          "end": 412
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "RegExp",
            "start": 413,
            "end": 419
          },
          {
            "type": "Literal",
            "value": "prototype",
            "raw": "\"prototype\"",
            "start": 421,
            "end": 432
          }
        ],
        "optional": false,
        "start": 391,
        "end": 433
      },
      "start": 391,
      "end": 434
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 444,
                  "end": 450
                },
                "property": {
                  "type": "Identifier",
                  "name": "sameValue",
                  "start": 451,
                  "end": 460
                },
                "optional": false,
                "computed": false,
                "start": 444,
                "end": 460
              },
              "arguments": [
                {
                  "type": "UnaryExpression",
                  "operator": "delete",
                  "argument": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "RegExp",
                      "start": 468,
                      "end": 474
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "prototype",
                      "start": 475,
                      "end": 484
                    },
                    "optional": false,
                    "computed": false,
                    "start": 468,
                    "end": 484
                  },
                  "prefix": true,
                  "start": 461,
                  "end": 484
                },
                {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 486,
                  "end": 491
                }
              ],
              "optional": false,
              "start": 444,
              "end": 492
            },
            "start": 444,
            "end": 493
          }
        ],
        "start": 440,
        "end": 495
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 503,
          "end": 504
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 514,
                  "end": 515
                },
                "operator": "instanceof",
                "right": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 527,
                  "end": 539
                },
                "start": 514,
                "end": 539
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 553,
                      "end": 554
                    },
                    "start": 547,
                    "end": 555
                  }
                ],
                "start": 541,
                "end": 559
              },
              "alternate": null,
              "start": 510,
              "end": 559
            },
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 562,
                  "end": 568
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 569,
                      "end": 570
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "name": "TypeError",
                      "start": 582,
                      "end": 591
                    },
                    "start": 569,
                    "end": 591
                  }
                ],
                "optional": false,
                "start": 562,
                "end": 592
              },
              "start": 562,
              "end": 593
            }
          ],
          "start": 506,
          "end": 595
        },
        "start": 496,
        "end": 595
      },
      "finalizer": null,
      "start": 436,
      "end": 595
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "RegExp",
              "start": 601,
              "end": 607
            },
            "property": {
              "type": "Identifier",
              "name": "hasOwnProperty",
              "start": 608,
              "end": 622
            },
            "optional": false,
            "computed": false,
            "start": 601,
            "end": 622
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "prototype",
              "raw": "'prototype'",
              "start": 623,
              "end": 634
            }
          ],
          "optional": false,
          "start": 601,
          "end": 635
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 640,
          "end": 644
        },
        "start": 601,
        "end": 644
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 662,
                "end": 674
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: delete RegExp.prototype; RegExp.hasOwnProperty('prototype') === true",
                  "raw": "'#2: delete RegExp.prototype; RegExp.hasOwnProperty(\\'prototype\\') === true'",
                  "start": 675,
                  "end": 751
                }
              ],
              "start": 658,
              "end": 752
            },
            "start": 652,
            "end": 753
          }
        ],
        "start": 646,
        "end": 755
      },
      "alternate": null,
      "start": 597,
      "end": 755
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 846
}