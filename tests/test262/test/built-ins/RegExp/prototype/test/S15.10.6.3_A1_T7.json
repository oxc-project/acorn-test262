{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 364,
                "end": 376
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1.1: /[a-z]/.test({toString:function(){throw \"intostr\";}}) throw \"intostr\". Actual: ",
                    "raw": "'#1.1: /[a-z]/.test({toString:function(){throw \"intostr\";}}) throw \"intostr\". Actual: '",
                    "start": 377,
                    "end": 464
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Literal",
                          "value": null,
                          "raw": "/[a-z]/",
                          "regex": {
                            "pattern": "[a-z]",
                            "flags": ""
                          },
                          "start": 468,
                          "end": 475
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "test",
                          "start": 476,
                          "end": 480
                        },
                        "optional": false,
                        "computed": false,
                        "start": 468,
                        "end": 480
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "kind": "init",
                              "key": {
                                "type": "Identifier",
                                "name": "toString",
                                "start": 482,
                                "end": 490
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "generator": false,
                                "async": false,
                                "params": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ThrowStatement",
                                      "argument": {
                                        "type": "Literal",
                                        "value": "intostr",
                                        "raw": "\"intostr\"",
                                        "start": 508,
                                        "end": 517
                                      },
                                      "start": 502,
                                      "end": 518
                                    }
                                  ],
                                  "start": 501,
                                  "end": 519
                                },
                                "expression": false,
                                "start": 491,
                                "end": 519
                              },
                              "method": false,
                              "shorthand": false,
                              "computed": false,
                              "start": 482,
                              "end": 519
                            }
                          ],
                          "start": 481,
                          "end": 520
                        }
                      ],
                      "optional": false,
                      "start": 468,
                      "end": 521
                    },
                    "start": 467,
                    "end": 522
                  },
                  "start": 377,
                  "end": 522
                }
              ],
              "start": 360,
              "end": 523
            },
            "start": 354,
            "end": 524
          }
        ],
        "start": 348,
        "end": 526
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 534,
          "end": 535
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "assert",
                    "start": 541,
                    "end": 547
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "sameValue",
                    "start": 548,
                    "end": 557
                  },
                  "optional": false,
                  "computed": false,
                  "start": 541,
                  "end": 557
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "e",
                    "start": 558,
                    "end": 559
                  },
                  {
                    "type": "Literal",
                    "value": "intostr",
                    "raw": "\"intostr\"",
                    "start": 561,
                    "end": 570
                  },
                  {
                    "type": "Literal",
                    "value": "The value of e is expected to be \"intostr\"",
                    "raw": "'The value of e is expected to be \"intostr\"'",
                    "start": 572,
                    "end": 616
                  }
                ],
                "optional": false,
                "start": 541,
                "end": 617
              },
              "start": 541,
              "end": 618
            }
          ],
          "start": 537,
          "end": 620
        },
        "start": 527,
        "end": 620
      },
      "finalizer": null,
      "start": 344,
      "end": 620
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 666
}