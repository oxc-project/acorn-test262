{
  "type": "Program",
  "start": 0,
  "end": 817,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 358,
      "end": 380,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 362,
          "end": 379,
          "id": {
            "type": "Identifier",
            "start": 362,
            "end": 372,
            "name": "__instance"
          },
          "init": {
            "type": "Identifier",
            "start": 375,
            "end": 379,
            "name": "Math"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 382,
      "end": 422,
      "expression": {
        "type": "AssignmentExpression",
        "start": 382,
        "end": 421,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 382,
          "end": 397,
          "object": {
            "type": "Identifier",
            "start": 382,
            "end": 392,
            "name": "__instance"
          },
          "property": {
            "type": "Identifier",
            "start": 393,
            "end": 397,
            "name": "test"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 400,
          "end": 421,
          "object": {
            "type": "MemberExpression",
            "start": 400,
            "end": 416,
            "object": {
              "type": "Identifier",
              "start": 400,
              "end": 406,
              "name": "RegExp"
            },
            "property": {
              "type": "Identifier",
              "start": 407,
              "end": 416,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 417,
            "end": 421,
            "name": "test"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "TryStatement",
      "start": 424,
      "end": 771,
      "block": {
        "type": "BlockStatement",
        "start": 428,
        "end": 615,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 433,
            "end": 475,
            "expression": {
              "type": "CallExpression",
              "start": 433,
              "end": 474,
              "callee": {
                "type": "MemberExpression",
                "start": 433,
                "end": 448,
                "object": {
                  "type": "Identifier",
                  "start": 433,
                  "end": 443,
                  "name": "__instance"
                },
                "property": {
                  "type": "Identifier",
                  "start": 444,
                  "end": 448,
                  "name": "test"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 449,
                  "end": 473,
                  "value": "message to investigate",
                  "raw": "\"message to investigate\""
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ThrowStatement",
            "start": 478,
            "end": 613,
            "argument": {
              "type": "NewExpression",
              "start": 484,
              "end": 612,
              "callee": {
                "type": "Identifier",
                "start": 488,
                "end": 500,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 501,
                  "end": 611,
                  "value": "#1.1: __instance = Math; __instance.test = RegExp.prototype.test;  __instance.test(\"message to investigate\")",
                  "raw": "'#1.1: __instance = Math; __instance.test = RegExp.prototype.test;  __instance.test(\"message to investigate\")'"
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 616,
        "end": 771,
        "param": {
          "type": "Identifier",
          "start": 623,
          "end": 624,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 626,
          "end": 771,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 630,
              "end": 769,
              "expression": {
                "type": "CallExpression",
                "start": 630,
                "end": 768,
                "callee": {
                  "type": "MemberExpression",
                  "start": 630,
                  "end": 646,
                  "object": {
                    "type": "Identifier",
                    "start": 630,
                    "end": 636,
                    "name": "assert"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 637,
                    "end": 646,
                    "name": "sameValue"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 652,
                    "end": 674,
                    "left": {
                      "type": "Identifier",
                      "start": 652,
                      "end": 653,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 665,
                      "end": 674,
                      "name": "TypeError"
                    }
                  },
                  {
                    "type": "Literal",
                    "start": 680,
                    "end": 684,
                    "value": true,
                    "raw": "true"
                  },
                  {
                    "type": "Literal",
                    "start": 690,
                    "end": 764,
                    "value": "The result of evaluating (e instanceof TypeError) is expected to be true",
                    "raw": "'The result of evaluating (e instanceof TypeError) is expected to be true'"
                  }
                ],
                "optional": false
              }
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}