{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 335,
            "end": 341
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 342,
            "end": 351
          },
          "optional": false,
          "computed": false,
          "start": 335,
          "end": 351
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "RegExp",
                    "start": 355,
                    "end": 361
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "prototype",
                    "start": 362,
                    "end": 371
                  },
                  "optional": false,
                  "computed": false,
                  "start": 355,
                  "end": 371
                },
                "property": {
                  "type": "Identifier",
                  "name": "exec",
                  "start": 372,
                  "end": 376
                },
                "optional": false,
                "computed": false,
                "start": 355,
                "end": 376
              },
              "property": {
                "type": "Identifier",
                "name": "hasOwnProperty",
                "start": 377,
                "end": 391
              },
              "optional": false,
              "computed": false,
              "start": 355,
              "end": 391
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "length",
                "raw": "'length'",
                "start": 392,
                "end": 400
              }
            ],
            "optional": false,
            "start": 355,
            "end": 401
          },
          {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 405,
            "end": 409
          },
          {
            "type": "Literal",
            "value": "RegExp.prototype.exec.hasOwnProperty('length') must return true",
            "raw": "'RegExp.prototype.exec.hasOwnProperty(\\'length\\') must return true'",
            "start": 413,
            "end": 480
          }
        ],
        "optional": false,
        "start": 335,
        "end": 482
      },
      "start": 335,
      "end": 483
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 485,
            "end": 491
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 492,
            "end": 501
          },
          "optional": false,
          "computed": false,
          "start": 485,
          "end": 501
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "RegExp",
                    "start": 505,
                    "end": 511
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "prototype",
                    "start": 512,
                    "end": 521
                  },
                  "optional": false,
                  "computed": false,
                  "start": 505,
                  "end": 521
                },
                "property": {
                  "type": "Identifier",
                  "name": "exec",
                  "start": 522,
                  "end": 526
                },
                "optional": false,
                "computed": false,
                "start": 505,
                "end": 526
              },
              "property": {
                "type": "Identifier",
                "name": "propertyIsEnumerable",
                "start": 527,
                "end": 547
              },
              "optional": false,
              "computed": false,
              "start": 505,
              "end": 547
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "length",
                "raw": "'length'",
                "start": 548,
                "end": 556
              }
            ],
            "optional": false,
            "start": 505,
            "end": 557
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 561,
            "end": 566
          },
          {
            "type": "Literal",
            "value": "RegExp.prototype.exec.propertyIsEnumerable('length') must return false",
            "raw": "'RegExp.prototype.exec.propertyIsEnumerable(\\'length\\') must return false'",
            "start": 570,
            "end": 644
          }
        ],
        "optional": false,
        "start": 485,
        "end": 646
      },
      "start": 485,
      "end": 647
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "count",
            "start": 653,
            "end": 658
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 659,
            "end": 660
          },
          "start": 653,
          "end": 660
        }
      ],
      "start": 649,
      "end": 661
    },
    {
      "type": "ForInStatement",
      "left": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "p",
              "start": 672,
              "end": 673
            },
            "init": null,
            "start": 672,
            "end": 673
          }
        ],
        "start": 668,
        "end": 673
      },
      "right": {
        "type": "MemberExpression",
        "object": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "RegExp",
            "start": 677,
            "end": 683
          },
          "property": {
            "type": "Identifier",
            "name": "prototype",
            "start": 684,
            "end": 693
          },
          "optional": false,
          "computed": false,
          "start": 677,
          "end": 693
        },
        "property": {
          "type": "Identifier",
          "name": "exec",
          "start": 694,
          "end": 698
        },
        "optional": false,
        "computed": false,
        "start": 677,
        "end": 698
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "p",
                "start": 707,
                "end": 708
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "value": "length",
                "raw": "\"length\"",
                "start": 711,
                "end": 719
              },
              "start": 707,
              "end": 719
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "prefix": false,
                    "argument": {
                      "type": "Identifier",
                      "name": "count",
                      "start": 727,
                      "end": 732
                    },
                    "start": 727,
                    "end": 734
                  },
                  "start": 727,
                  "end": 735
                }
              ],
              "start": 721,
              "end": 739
            },
            "alternate": null,
            "start": 703,
            "end": 739
          }
        ],
        "start": 699,
        "end": 741
      },
      "start": 663,
      "end": 741
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 743,
            "end": 749
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 750,
            "end": 759
          },
          "optional": false,
          "computed": false,
          "start": 743,
          "end": 759
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "count",
            "start": 760,
            "end": 765
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 767,
            "end": 768
          },
          {
            "type": "Literal",
            "value": "The value of count is expected to be 0",
            "raw": "'The value of count is expected to be 0'",
            "start": 770,
            "end": 810
          }
        ],
        "optional": false,
        "start": 743,
        "end": 811
      },
      "start": 743,
      "end": 812
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 859
}