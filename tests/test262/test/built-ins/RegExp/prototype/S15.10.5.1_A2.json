{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 301,
            "end": 307
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 308,
            "end": 317
          },
          "optional": false,
          "computed": false,
          "start": 301,
          "end": 317
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 318,
                "end": 324
              },
              "property": {
                "type": "Identifier",
                "name": "hasOwnProperty",
                "start": 325,
                "end": 339
              },
              "optional": false,
              "computed": false,
              "start": 318,
              "end": 339
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "prototype",
                "raw": "'prototype'",
                "start": 340,
                "end": 351
              }
            ],
            "optional": false,
            "start": 318,
            "end": 352
          },
          {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 354,
            "end": 358
          },
          {
            "type": "Literal",
            "value": "RegExp.hasOwnProperty('prototype') must return true",
            "raw": "'RegExp.hasOwnProperty(\\'prototype\\') must return true'",
            "start": 360,
            "end": 415
          }
        ],
        "optional": false,
        "start": 301,
        "end": 416
      },
      "start": 301,
      "end": 417
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 419,
            "end": 425
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 426,
            "end": 435
          },
          "optional": false,
          "computed": false,
          "start": 419,
          "end": 435
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 439,
                "end": 445
              },
              "property": {
                "type": "Identifier",
                "name": "propertyIsEnumerable",
                "start": 446,
                "end": 466
              },
              "optional": false,
              "computed": false,
              "start": 439,
              "end": 466
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "prototype",
                "raw": "'prototype'",
                "start": 467,
                "end": 478
              }
            ],
            "optional": false,
            "start": 439,
            "end": 479
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 483,
            "end": 488
          },
          {
            "type": "Literal",
            "value": "RegExp.propertyIsEnumerable('prototype') must return false",
            "raw": "'RegExp.propertyIsEnumerable(\\'prototype\\') must return false'",
            "start": 492,
            "end": 554
          }
        ],
        "optional": false,
        "start": 419,
        "end": 556
      },
      "start": 419,
      "end": 557
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "count",
            "start": 563,
            "end": 568
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 569,
            "end": 570
          },
          "start": 563,
          "end": 570
        }
      ],
      "start": 559,
      "end": 571
    },
    {
      "type": "ForInStatement",
      "left": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "p",
              "start": 581,
              "end": 582
            },
            "init": null,
            "start": 581,
            "end": 582
          }
        ],
        "start": 577,
        "end": 582
      },
      "right": {
        "type": "Identifier",
        "name": "RegExp",
        "start": 586,
        "end": 592
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "p",
                "start": 603,
                "end": 604
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "value": "prototype",
                "raw": "\"prototype\"",
                "start": 607,
                "end": 618
              },
              "start": 603,
              "end": 618
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "prefix": false,
                    "argument": {
                      "type": "Identifier",
                      "name": "count",
                      "start": 628,
                      "end": 633
                    },
                    "start": 628,
                    "end": 635
                  },
                  "start": 628,
                  "end": 636
                }
              ],
              "start": 620,
              "end": 642
            },
            "alternate": null,
            "start": 599,
            "end": 642
          }
        ],
        "start": 593,
        "end": 644
      },
      "start": 572,
      "end": 644
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 646,
            "end": 652
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 653,
            "end": 662
          },
          "optional": false,
          "computed": false,
          "start": 646,
          "end": 662
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "count",
            "start": 663,
            "end": 668
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 670,
            "end": 671
          },
          {
            "type": "Literal",
            "value": "The value of count is expected to be 0",
            "raw": "'The value of count is expected to be 0'",
            "start": 673,
            "end": 713
          }
        ],
        "optional": false,
        "start": 646,
        "end": 714
      },
      "start": 646,
      "end": 715
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 762
}