{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "input",
            "start": 1020,
            "end": 1025
          },
          "init": {
            "type": "Literal",
            "value": "ab",
            "raw": "\"ab\"",
            "start": 1028,
            "end": 1032
          },
          "start": 1020,
          "end": 1032
        }
      ],
      "start": 1016,
      "end": 1033
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "regex",
            "start": 1038,
            "end": 1043
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "/(a?b??)*/",
            "regex": {
              "pattern": "(a?b??)*",
              "flags": ""
            },
            "start": 1046,
            "end": 1056
          },
          "start": 1038,
          "end": 1056
        }
      ],
      "start": 1034,
      "end": 1057
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "match",
            "start": 1062,
            "end": 1067
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "regex",
                "start": 1070,
                "end": 1075
              },
              "property": {
                "type": "Identifier",
                "name": "exec",
                "start": 1076,
                "end": 1080
              },
              "optional": false,
              "computed": false,
              "start": 1070,
              "end": 1080
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "input",
                "start": 1081,
                "end": 1086
              }
            ],
            "optional": false,
            "start": 1070,
            "end": 1087
          },
          "start": 1062,
          "end": 1087
        }
      ],
      "start": 1058,
      "end": 1088
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "expected",
            "start": 1093,
            "end": 1101
          },
          "init": {
            "type": "Literal",
            "value": "ab",
            "raw": "\"ab\"",
            "start": 1104,
            "end": 1108
          },
          "start": 1093,
          "end": 1108
        }
      ],
      "start": 1089,
      "end": 1109
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1111,
            "end": 1117
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1118,
            "end": 1127
          },
          "optional": false,
          "computed": false,
          "start": 1111,
          "end": 1127
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "match",
              "start": 1128,
              "end": 1133
            },
            "property": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1134,
              "end": 1135
            },
            "optional": false,
            "computed": true,
            "start": 1128,
            "end": 1136
          },
          {
            "type": "Identifier",
            "name": "expected",
            "start": 1138,
            "end": 1146
          },
          {
            "type": "Literal",
            "value": "The regex is expected to match the whole string",
            "raw": "\"The regex is expected to match the whole string\"",
            "start": 1148,
            "end": 1197
          }
        ],
        "optional": false,
        "start": 1111,
        "end": 1198
      },
      "start": 1111,
      "end": 1199
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1200
}