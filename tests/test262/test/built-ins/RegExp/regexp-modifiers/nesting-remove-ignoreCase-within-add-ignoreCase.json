{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "re1",
            "start": 1700,
            "end": 1703
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "/(?i:a(?-i:b))c/",
            "regex": {
              "pattern": "(?i:a(?-i:b))c",
              "flags": ""
            },
            "start": 1706,
            "end": 1722
          },
          "start": 1700,
          "end": 1722
        }
      ],
      "start": 1696,
      "end": 1723
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 1724,
          "end": 1730
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "!",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "re1",
                  "start": 1732,
                  "end": 1735
                },
                "property": {
                  "type": "Identifier",
                  "name": "test",
                  "start": 1736,
                  "end": 1740
                },
                "optional": false,
                "computed": false,
                "start": 1732,
                "end": 1740
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "ABC",
                  "raw": "\"ABC\"",
                  "start": 1741,
                  "end": 1746
                }
              ],
              "optional": false,
              "start": 1732,
              "end": 1747
            },
            "prefix": true,
            "start": 1731,
            "end": 1747
          },
          {
            "type": "Literal",
            "value": "b should not match B in ABC",
            "raw": "\"b should not match B in ABC\"",
            "start": 1749,
            "end": 1778
          }
        ],
        "optional": false,
        "start": 1724,
        "end": 1779
      },
      "start": 1724,
      "end": 1780
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 1781,
          "end": 1787
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "!",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "re1",
                  "start": 1789,
                  "end": 1792
                },
                "property": {
                  "type": "Identifier",
                  "name": "test",
                  "start": 1793,
                  "end": 1797
                },
                "optional": false,
                "computed": false,
                "start": 1789,
                "end": 1797
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "ABc",
                  "raw": "\"ABc\"",
                  "start": 1798,
                  "end": 1803
                }
              ],
              "optional": false,
              "start": 1789,
              "end": 1804
            },
            "prefix": true,
            "start": 1788,
            "end": 1804
          },
          {
            "type": "Literal",
            "value": "b should not match B in ABc",
            "raw": "\"b should not match B in ABc\"",
            "start": 1806,
            "end": 1835
          }
        ],
        "optional": false,
        "start": 1781,
        "end": 1836
      },
      "start": 1781,
      "end": 1837
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 1838,
          "end": 1844
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "re1",
                "start": 1845,
                "end": 1848
              },
              "property": {
                "type": "Identifier",
                "name": "test",
                "start": 1849,
                "end": 1853
              },
              "optional": false,
              "computed": false,
              "start": 1845,
              "end": 1853
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "Abc",
                "raw": "\"Abc\"",
                "start": 1854,
                "end": 1859
              }
            ],
            "optional": false,
            "start": 1845,
            "end": 1860
          },
          {
            "type": "Literal",
            "value": "a should match A in Abc",
            "raw": "\"a should match A in Abc\"",
            "start": 1862,
            "end": 1887
          }
        ],
        "optional": false,
        "start": 1838,
        "end": 1888
      },
      "start": 1838,
      "end": 1889
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 1890,
          "end": 1896
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "!",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "re1",
                  "start": 1898,
                  "end": 1901
                },
                "property": {
                  "type": "Identifier",
                  "name": "test",
                  "start": 1902,
                  "end": 1906
                },
                "optional": false,
                "computed": false,
                "start": 1898,
                "end": 1906
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "aBc",
                  "raw": "\"aBc\"",
                  "start": 1907,
                  "end": 1912
                }
              ],
              "optional": false,
              "start": 1898,
              "end": 1913
            },
            "prefix": true,
            "start": 1897,
            "end": 1913
          },
          {
            "type": "Literal",
            "value": "b should not match B in aBc",
            "raw": "\"b should not match B in aBc\"",
            "start": 1915,
            "end": 1944
          }
        ],
        "optional": false,
        "start": 1890,
        "end": 1945
      },
      "start": 1890,
      "end": 1946
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 1947,
          "end": 1953
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "!",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "re1",
                  "start": 1955,
                  "end": 1958
                },
                "property": {
                  "type": "Identifier",
                  "name": "test",
                  "start": 1959,
                  "end": 1963
                },
                "optional": false,
                "computed": false,
                "start": 1955,
                "end": 1963
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "abC",
                  "raw": "\"abC\"",
                  "start": 1964,
                  "end": 1969
                }
              ],
              "optional": false,
              "start": 1955,
              "end": 1970
            },
            "prefix": true,
            "start": 1954,
            "end": 1970
          },
          {
            "type": "Literal",
            "value": "c should not match C in abC",
            "raw": "\"c should not match C in abC\"",
            "start": 1972,
            "end": 2001
          }
        ],
        "optional": false,
        "start": 1947,
        "end": 2002
      },
      "start": 1947,
      "end": 2003
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 2004,
          "end": 2010
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "re1",
                "start": 2011,
                "end": 2014
              },
              "property": {
                "type": "Identifier",
                "name": "test",
                "start": 2015,
                "end": 2019
              },
              "optional": false,
              "computed": false,
              "start": 2011,
              "end": 2019
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "abc",
                "raw": "\"abc\"",
                "start": 2020,
                "end": 2025
              }
            ],
            "optional": false,
            "start": 2011,
            "end": 2026
          },
          {
            "type": "Literal",
            "value": "should match abc",
            "raw": "\"should match abc\"",
            "start": 2028,
            "end": 2046
          }
        ],
        "optional": false,
        "start": 2004,
        "end": 2047
      },
      "start": 2004,
      "end": 2048
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2049
}