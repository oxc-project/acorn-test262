{
  "type": "Program",
  "start": 0,
  "end": 1481,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 453,
      "end": 580,
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 459,
          "end": 579,
          "id": {
            "type": "Identifier",
            "start": 459,
            "end": 471,
            "name": "matchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 474,
            "end": 579,
            "callee": {
              "type": "Identifier",
              "start": 474,
              "end": 485,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 486,
                "end": 578,
                "properties": [
                  {
                    "type": "Property",
                    "start": 490,
                    "end": 508,
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "start": 490,
                      "end": 504,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 506,
                      "end": 508,
                      "elements": []
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false
                  },
                  {
                    "type": "Property",
                    "start": 512,
                    "end": 576,
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "start": 512,
                      "end": 518,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 520,
                      "end": 576,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 526,
                          "end": 546,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 527,
                              "end": 535,
                              "value": 6912,
                              "raw": "0x001B00"
                            },
                            {
                              "type": "Literal",
                              "start": 537,
                              "end": 545,
                              "value": 6988,
                              "raw": "0x001B4C"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 552,
                          "end": 572,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 553,
                              "end": 561,
                              "value": 6990,
                              "raw": "0x001B4E"
                            },
                            {
                              "type": "Literal",
                              "start": 563,
                              "end": 571,
                              "value": 7039,
                              "raw": "0x001B7F"
                            }
                          ]
                        }
                      ]
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 581,
      "end": 674,
      "expression": {
        "type": "CallExpression",
        "start": 581,
        "end": 673,
        "callee": {
          "type": "Identifier",
          "start": 581,
          "end": 600,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 604,
            "end": 629,
            "value": null,
            "raw": "/^\\p{Script=Balinese}+$/u",
            "regex": {
              "pattern": "^\\p{Script=Balinese}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 633,
            "end": 645,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 649,
            "end": 671,
            "value": "\\p{Script=Balinese}",
            "raw": "\"\\\\p{Script=Balinese}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 675,
      "end": 760,
      "expression": {
        "type": "CallExpression",
        "start": 675,
        "end": 759,
        "callee": {
          "type": "Identifier",
          "start": 675,
          "end": 694,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 698,
            "end": 719,
            "value": null,
            "raw": "/^\\p{Script=Bali}+$/u",
            "regex": {
              "pattern": "^\\p{Script=Bali}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 723,
            "end": 735,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 739,
            "end": 757,
            "value": "\\p{Script=Bali}",
            "raw": "\"\\\\p{Script=Bali}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 761,
      "end": 846,
      "expression": {
        "type": "CallExpression",
        "start": 761,
        "end": 845,
        "callee": {
          "type": "Identifier",
          "start": 761,
          "end": 780,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 784,
            "end": 805,
            "value": null,
            "raw": "/^\\p{sc=Balinese}+$/u",
            "regex": {
              "pattern": "^\\p{sc=Balinese}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 809,
            "end": 821,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 825,
            "end": 843,
            "value": "\\p{sc=Balinese}",
            "raw": "\"\\\\p{sc=Balinese}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 847,
      "end": 924,
      "expression": {
        "type": "CallExpression",
        "start": 847,
        "end": 923,
        "callee": {
          "type": "Identifier",
          "start": 847,
          "end": 866,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 870,
            "end": 887,
            "value": null,
            "raw": "/^\\p{sc=Bali}+$/u",
            "regex": {
              "pattern": "^\\p{sc=Bali}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 891,
            "end": 903,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 907,
            "end": 921,
            "value": "\\p{sc=Bali}",
            "raw": "\"\\\\p{sc=Bali}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 926,
      "end": 1124,
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 932,
          "end": 1123,
          "id": {
            "type": "Identifier",
            "start": 932,
            "end": 947,
            "name": "nonMatchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 950,
            "end": 1123,
            "callee": {
              "type": "Identifier",
              "start": 950,
              "end": 961,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 962,
                "end": 1122,
                "properties": [
                  {
                    "type": "Property",
                    "start": 966,
                    "end": 1000,
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "start": 966,
                      "end": 980,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 982,
                      "end": 1000,
                      "elements": [
                        {
                          "type": "Literal",
                          "start": 988,
                          "end": 996,
                          "value": 6989,
                          "raw": "0x001B4D"
                        }
                      ]
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false
                  },
                  {
                    "type": "Property",
                    "start": 1004,
                    "end": 1120,
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "start": 1004,
                      "end": 1010,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 1012,
                      "end": 1120,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 1018,
                          "end": 1038,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1019,
                              "end": 1027,
                              "value": 56320,
                              "raw": "0x00DC00"
                            },
                            {
                              "type": "Literal",
                              "start": 1029,
                              "end": 1037,
                              "value": 57343,
                              "raw": "0x00DFFF"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1044,
                          "end": 1064,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1045,
                              "end": 1053,
                              "value": 0,
                              "raw": "0x000000"
                            },
                            {
                              "type": "Literal",
                              "start": 1055,
                              "end": 1063,
                              "value": 6911,
                              "raw": "0x001AFF"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1070,
                          "end": 1090,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1071,
                              "end": 1079,
                              "value": 7040,
                              "raw": "0x001B80"
                            },
                            {
                              "type": "Literal",
                              "start": 1081,
                              "end": 1089,
                              "value": 56319,
                              "raw": "0x00DBFF"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1096,
                          "end": 1116,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1097,
                              "end": 1105,
                              "value": 57344,
                              "raw": "0x00E000"
                            },
                            {
                              "type": "Literal",
                              "start": 1107,
                              "end": 1115,
                              "value": 1114111,
                              "raw": "0x10FFFF"
                            }
                          ]
                        }
                      ]
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1125,
      "end": 1221,
      "expression": {
        "type": "CallExpression",
        "start": 1125,
        "end": 1220,
        "callee": {
          "type": "Identifier",
          "start": 1125,
          "end": 1144,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1148,
            "end": 1173,
            "value": null,
            "raw": "/^\\P{Script=Balinese}+$/u",
            "regex": {
              "pattern": "^\\P{Script=Balinese}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1177,
            "end": 1192,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1196,
            "end": 1218,
            "value": "\\P{Script=Balinese}",
            "raw": "\"\\\\P{Script=Balinese}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1222,
      "end": 1310,
      "expression": {
        "type": "CallExpression",
        "start": 1222,
        "end": 1309,
        "callee": {
          "type": "Identifier",
          "start": 1222,
          "end": 1241,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1245,
            "end": 1266,
            "value": null,
            "raw": "/^\\P{Script=Bali}+$/u",
            "regex": {
              "pattern": "^\\P{Script=Bali}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1270,
            "end": 1285,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1289,
            "end": 1307,
            "value": "\\P{Script=Bali}",
            "raw": "\"\\\\P{Script=Bali}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1311,
      "end": 1399,
      "expression": {
        "type": "CallExpression",
        "start": 1311,
        "end": 1398,
        "callee": {
          "type": "Identifier",
          "start": 1311,
          "end": 1330,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1334,
            "end": 1355,
            "value": null,
            "raw": "/^\\P{sc=Balinese}+$/u",
            "regex": {
              "pattern": "^\\P{sc=Balinese}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1359,
            "end": 1374,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1378,
            "end": 1396,
            "value": "\\P{sc=Balinese}",
            "raw": "\"\\\\P{sc=Balinese}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1400,
      "end": 1480,
      "expression": {
        "type": "CallExpression",
        "start": 1400,
        "end": 1479,
        "callee": {
          "type": "Identifier",
          "start": 1400,
          "end": 1419,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1423,
            "end": 1440,
            "value": null,
            "raw": "/^\\P{sc=Bali}+$/u",
            "regex": {
              "pattern": "^\\P{sc=Bali}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1444,
            "end": 1459,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1463,
            "end": 1477,
            "value": "\\P{sc=Bali}",
            "raw": "\"\\\\P{sc=Bali}\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}