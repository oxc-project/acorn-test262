{
  "type": "Program",
  "start": 0,
  "end": 1616,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 466,
      "end": 593,
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 472,
          "end": 592,
          "id": {
            "type": "Identifier",
            "start": 472,
            "end": 484,
            "name": "matchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 487,
            "end": 592,
            "callee": {
              "type": "Identifier",
              "start": 487,
              "end": 498,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 499,
                "end": 591,
                "properties": [
                  {
                    "type": "Property",
                    "start": 503,
                    "end": 521,
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "start": 503,
                      "end": 517,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 519,
                      "end": 521,
                      "elements": []
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false
                  },
                  {
                    "type": "Property",
                    "start": 525,
                    "end": 589,
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "start": 525,
                      "end": 531,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 533,
                      "end": 589,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 539,
                          "end": 559,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 540,
                              "end": 548,
                              "value": 66304,
                              "raw": "0x010300"
                            },
                            {
                              "type": "Literal",
                              "start": 550,
                              "end": 558,
                              "value": 66339,
                              "raw": "0x010323"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 565,
                          "end": 585,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 566,
                              "end": 574,
                              "value": 66349,
                              "raw": "0x01032D"
                            },
                            {
                              "type": "Literal",
                              "start": 576,
                              "end": 584,
                              "value": 66351,
                              "raw": "0x01032F"
                            }
                          ]
                        }
                      ]
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 594,
      "end": 713,
      "expression": {
        "type": "CallExpression",
        "start": 594,
        "end": 712,
        "callee": {
          "type": "Identifier",
          "start": 594,
          "end": 613,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 617,
            "end": 655,
            "value": null,
            "raw": "/^\\p{Script_Extensions=Old_Italic}+$/u",
            "regex": {
              "pattern": "^\\p{Script_Extensions=Old_Italic}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 659,
            "end": 671,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 675,
            "end": 710,
            "value": "\\p{Script_Extensions=Old_Italic}",
            "raw": "\"\\\\p{Script_Extensions=Old_Italic}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 714,
      "end": 821,
      "expression": {
        "type": "CallExpression",
        "start": 714,
        "end": 820,
        "callee": {
          "type": "Identifier",
          "start": 714,
          "end": 733,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 737,
            "end": 769,
            "value": null,
            "raw": "/^\\p{Script_Extensions=Ital}+$/u",
            "regex": {
              "pattern": "^\\p{Script_Extensions=Ital}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 773,
            "end": 785,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 789,
            "end": 818,
            "value": "\\p{Script_Extensions=Ital}",
            "raw": "\"\\\\p{Script_Extensions=Ital}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 822,
      "end": 913,
      "expression": {
        "type": "CallExpression",
        "start": 822,
        "end": 912,
        "callee": {
          "type": "Identifier",
          "start": 822,
          "end": 841,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 845,
            "end": 869,
            "value": null,
            "raw": "/^\\p{scx=Old_Italic}+$/u",
            "regex": {
              "pattern": "^\\p{scx=Old_Italic}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 873,
            "end": 885,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 889,
            "end": 910,
            "value": "\\p{scx=Old_Italic}",
            "raw": "\"\\\\p{scx=Old_Italic}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 914,
      "end": 993,
      "expression": {
        "type": "CallExpression",
        "start": 914,
        "end": 992,
        "callee": {
          "type": "Identifier",
          "start": 914,
          "end": 933,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 937,
            "end": 955,
            "value": null,
            "raw": "/^\\p{scx=Ital}+$/u",
            "regex": {
              "pattern": "^\\p{scx=Ital}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 959,
            "end": 971,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 975,
            "end": 990,
            "value": "\\p{scx=Ital}",
            "raw": "\"\\\\p{scx=Ital}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 995,
      "end": 1203,
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1001,
          "end": 1202,
          "id": {
            "type": "Identifier",
            "start": 1001,
            "end": 1016,
            "name": "nonMatchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 1019,
            "end": 1202,
            "callee": {
              "type": "Identifier",
              "start": 1019,
              "end": 1030,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 1031,
                "end": 1201,
                "properties": [
                  {
                    "type": "Property",
                    "start": 1035,
                    "end": 1053,
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "start": 1035,
                      "end": 1049,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 1051,
                      "end": 1053,
                      "elements": []
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false
                  },
                  {
                    "type": "Property",
                    "start": 1057,
                    "end": 1199,
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "start": 1057,
                      "end": 1063,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 1065,
                      "end": 1199,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 1071,
                          "end": 1091,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1072,
                              "end": 1080,
                              "value": 56320,
                              "raw": "0x00DC00"
                            },
                            {
                              "type": "Literal",
                              "start": 1082,
                              "end": 1090,
                              "value": 57343,
                              "raw": "0x00DFFF"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1097,
                          "end": 1117,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1098,
                              "end": 1106,
                              "value": 0,
                              "raw": "0x000000"
                            },
                            {
                              "type": "Literal",
                              "start": 1108,
                              "end": 1116,
                              "value": 56319,
                              "raw": "0x00DBFF"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1123,
                          "end": 1143,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1124,
                              "end": 1132,
                              "value": 57344,
                              "raw": "0x00E000"
                            },
                            {
                              "type": "Literal",
                              "start": 1134,
                              "end": 1142,
                              "value": 66303,
                              "raw": "0x0102FF"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1149,
                          "end": 1169,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1150,
                              "end": 1158,
                              "value": 66340,
                              "raw": "0x010324"
                            },
                            {
                              "type": "Literal",
                              "start": 1160,
                              "end": 1168,
                              "value": 66348,
                              "raw": "0x01032C"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1175,
                          "end": 1195,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1176,
                              "end": 1184,
                              "value": 66352,
                              "raw": "0x010330"
                            },
                            {
                              "type": "Literal",
                              "start": 1186,
                              "end": 1194,
                              "value": 1114111,
                              "raw": "0x10FFFF"
                            }
                          ]
                        }
                      ]
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1204,
      "end": 1326,
      "expression": {
        "type": "CallExpression",
        "start": 1204,
        "end": 1325,
        "callee": {
          "type": "Identifier",
          "start": 1204,
          "end": 1223,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1227,
            "end": 1265,
            "value": null,
            "raw": "/^\\P{Script_Extensions=Old_Italic}+$/u",
            "regex": {
              "pattern": "^\\P{Script_Extensions=Old_Italic}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1269,
            "end": 1284,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1288,
            "end": 1323,
            "value": "\\P{Script_Extensions=Old_Italic}",
            "raw": "\"\\\\P{Script_Extensions=Old_Italic}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1327,
      "end": 1437,
      "expression": {
        "type": "CallExpression",
        "start": 1327,
        "end": 1436,
        "callee": {
          "type": "Identifier",
          "start": 1327,
          "end": 1346,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1350,
            "end": 1382,
            "value": null,
            "raw": "/^\\P{Script_Extensions=Ital}+$/u",
            "regex": {
              "pattern": "^\\P{Script_Extensions=Ital}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1386,
            "end": 1401,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1405,
            "end": 1434,
            "value": "\\P{Script_Extensions=Ital}",
            "raw": "\"\\\\P{Script_Extensions=Ital}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1438,
      "end": 1532,
      "expression": {
        "type": "CallExpression",
        "start": 1438,
        "end": 1531,
        "callee": {
          "type": "Identifier",
          "start": 1438,
          "end": 1457,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1461,
            "end": 1485,
            "value": null,
            "raw": "/^\\P{scx=Old_Italic}+$/u",
            "regex": {
              "pattern": "^\\P{scx=Old_Italic}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1489,
            "end": 1504,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1508,
            "end": 1529,
            "value": "\\P{scx=Old_Italic}",
            "raw": "\"\\\\P{scx=Old_Italic}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1533,
      "end": 1615,
      "expression": {
        "type": "CallExpression",
        "start": 1533,
        "end": 1614,
        "callee": {
          "type": "Identifier",
          "start": 1533,
          "end": 1552,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1556,
            "end": 1574,
            "value": null,
            "raw": "/^\\P{scx=Ital}+$/u",
            "regex": {
              "pattern": "^\\P{scx=Ital}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1578,
            "end": 1593,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1597,
            "end": 1612,
            "value": "\\P{scx=Ital}",
            "raw": "\"\\\\P{scx=Ital}\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}