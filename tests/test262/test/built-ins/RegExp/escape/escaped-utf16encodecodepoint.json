{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "codePoints",
            "start": 707,
            "end": 717
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "String",
                "start": 720,
                "end": 726
              },
              "property": {
                "type": "Identifier",
                "name": "fromCharCode",
                "start": 727,
                "end": 739
              },
              "optional": false,
              "computed": false,
              "start": 720,
              "end": 739
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 256,
                "raw": "0x100",
                "start": 740,
                "end": 745
              },
              {
                "type": "Literal",
                "value": 512,
                "raw": "0x200",
                "start": 747,
                "end": 752
              },
              {
                "type": "Literal",
                "value": 768,
                "raw": "0x300",
                "start": 754,
                "end": 759
              }
            ],
            "optional": false,
            "start": 720,
            "end": 760
          },
          "start": 707,
          "end": 760
        }
      ],
      "start": 701,
      "end": 761
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 763,
            "end": 769
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 770,
            "end": 779
          },
          "optional": false,
          "computed": false,
          "start": 763,
          "end": 779
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 780,
                "end": 786
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 787,
                "end": 793
              },
              "optional": false,
              "computed": false,
              "start": 780,
              "end": 793
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "codePoints",
                "start": 794,
                "end": 804
              }
            ],
            "optional": false,
            "start": 780,
            "end": 805
          },
          {
            "type": "Identifier",
            "name": "codePoints",
            "start": 807,
            "end": 817
          },
          {
            "type": "Literal",
            "value": "characters are correctly not escaped",
            "raw": "'characters are correctly not escaped'",
            "start": 819,
            "end": 857
          }
        ],
        "optional": false,
        "start": 763,
        "end": 858
      },
      "start": 763,
      "end": 859
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 861,
            "end": 867
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 868,
            "end": 877
          },
          "optional": false,
          "computed": false,
          "start": 861,
          "end": 877
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 878,
                "end": 884
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 885,
                "end": 891
              },
              "optional": false,
              "computed": false,
              "start": 878,
              "end": 891
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "你好",
                "raw": "'你好'",
                "start": 892,
                "end": 896
              }
            ],
            "optional": false,
            "start": 878,
            "end": 897
          },
          {
            "type": "Literal",
            "value": "你好",
            "raw": "'你好'",
            "start": 899,
            "end": 903
          },
          {
            "type": "Literal",
            "value": "Chinese characters are correctly not escaped",
            "raw": "'Chinese characters are correctly not escaped'",
            "start": 905,
            "end": 951
          }
        ],
        "optional": false,
        "start": 861,
        "end": 952
      },
      "start": 861,
      "end": 953
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 954,
            "end": 960
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 961,
            "end": 970
          },
          "optional": false,
          "computed": false,
          "start": 954,
          "end": 970
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 971,
                "end": 977
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 978,
                "end": 984
              },
              "optional": false,
              "computed": false,
              "start": 971,
              "end": 984
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "こんにちは",
                "raw": "'こんにちは'",
                "start": 985,
                "end": 992
              }
            ],
            "optional": false,
            "start": 971,
            "end": 993
          },
          {
            "type": "Literal",
            "value": "こんにちは",
            "raw": "'こんにちは'",
            "start": 995,
            "end": 1002
          },
          {
            "type": "Literal",
            "value": "Japanese characters are correctly not escaped",
            "raw": "'Japanese characters are correctly not escaped'",
            "start": 1004,
            "end": 1051
          }
        ],
        "optional": false,
        "start": 954,
        "end": 1052
      },
      "start": 954,
      "end": 1053
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1054,
            "end": 1060
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1061,
            "end": 1070
          },
          "optional": false,
          "computed": false,
          "start": 1054,
          "end": 1070
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 1071,
                "end": 1077
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 1078,
                "end": 1084
              },
              "optional": false,
              "computed": false,
              "start": 1071,
              "end": 1084
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "안녕하세요",
                "raw": "'안녕하세요'",
                "start": 1085,
                "end": 1092
              }
            ],
            "optional": false,
            "start": 1071,
            "end": 1093
          },
          {
            "type": "Literal",
            "value": "안녕하세요",
            "raw": "'안녕하세요'",
            "start": 1095,
            "end": 1102
          },
          {
            "type": "Literal",
            "value": "Korean characters are correctly not escaped",
            "raw": "'Korean characters are correctly not escaped'",
            "start": 1104,
            "end": 1149
          }
        ],
        "optional": false,
        "start": 1054,
        "end": 1150
      },
      "start": 1054,
      "end": 1151
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1152,
            "end": 1158
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1159,
            "end": 1168
          },
          "optional": false,
          "computed": false,
          "start": 1152,
          "end": 1168
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 1169,
                "end": 1175
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 1176,
                "end": 1182
              },
              "optional": false,
              "computed": false,
              "start": 1169,
              "end": 1182
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "Привет",
                "raw": "'Привет'",
                "start": 1183,
                "end": 1191
              }
            ],
            "optional": false,
            "start": 1169,
            "end": 1192
          },
          {
            "type": "Literal",
            "value": "Привет",
            "raw": "'Привет'",
            "start": 1194,
            "end": 1202
          },
          {
            "type": "Literal",
            "value": "Cyrillic characters are correctly not escaped",
            "raw": "'Cyrillic characters are correctly not escaped'",
            "start": 1204,
            "end": 1251
          }
        ],
        "optional": false,
        "start": 1152,
        "end": 1252
      },
      "start": 1152,
      "end": 1253
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1254,
            "end": 1260
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1261,
            "end": 1270
          },
          "optional": false,
          "computed": false,
          "start": 1254,
          "end": 1270
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 1271,
                "end": 1277
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 1278,
                "end": 1284
              },
              "optional": false,
              "computed": false,
              "start": 1271,
              "end": 1284
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "مرحبا",
                "raw": "'مرحبا'",
                "start": 1285,
                "end": 1292
              }
            ],
            "optional": false,
            "start": 1271,
            "end": 1293
          },
          {
            "type": "Literal",
            "value": "مرحبا",
            "raw": "'مرحبا'",
            "start": 1295,
            "end": 1302
          },
          {
            "type": "Literal",
            "value": "Arabic characters are correctly not escaped",
            "raw": "'Arabic characters are correctly not escaped'",
            "start": 1304,
            "end": 1349
          }
        ],
        "optional": false,
        "start": 1254,
        "end": 1350
      },
      "start": 1254,
      "end": 1351
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1352,
            "end": 1358
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1359,
            "end": 1368
          },
          "optional": false,
          "computed": false,
          "start": 1352,
          "end": 1368
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 1369,
                "end": 1375
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 1376,
                "end": 1382
              },
              "optional": false,
              "computed": false,
              "start": 1369,
              "end": 1382
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "हेलो",
                "raw": "'हेलो'",
                "start": 1383,
                "end": 1389
              }
            ],
            "optional": false,
            "start": 1369,
            "end": 1390
          },
          {
            "type": "Literal",
            "value": "हेलो",
            "raw": "'हेलो'",
            "start": 1392,
            "end": 1398
          },
          {
            "type": "Literal",
            "value": "Devanagari characters are correctly not escaped",
            "raw": "'Devanagari characters are correctly not escaped'",
            "start": 1400,
            "end": 1449
          }
        ],
        "optional": false,
        "start": 1352,
        "end": 1450
      },
      "start": 1352,
      "end": 1451
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1452,
            "end": 1458
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1459,
            "end": 1468
          },
          "optional": false,
          "computed": false,
          "start": 1452,
          "end": 1468
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 1469,
                "end": 1475
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 1476,
                "end": 1482
              },
              "optional": false,
              "computed": false,
              "start": 1469,
              "end": 1482
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "Γειά σου",
                "raw": "'Γειά σου'",
                "start": 1483,
                "end": 1493
              }
            ],
            "optional": false,
            "start": 1469,
            "end": 1494
          },
          {
            "type": "Literal",
            "value": "Γειά\\x20σου",
            "raw": "'Γειά\\\\x20σου'",
            "start": 1496,
            "end": 1510
          },
          {
            "type": "Literal",
            "value": "Greek characters are correctly not escaped",
            "raw": "'Greek characters are correctly not escaped'",
            "start": 1512,
            "end": 1556
          }
        ],
        "optional": false,
        "start": 1452,
        "end": 1557
      },
      "start": 1452,
      "end": 1558
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1559,
            "end": 1565
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1566,
            "end": 1575
          },
          "optional": false,
          "computed": false,
          "start": 1559,
          "end": 1575
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 1576,
                "end": 1582
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 1583,
                "end": 1589
              },
              "optional": false,
              "computed": false,
              "start": 1576,
              "end": 1589
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "שלום",
                "raw": "'שלום'",
                "start": 1590,
                "end": 1596
              }
            ],
            "optional": false,
            "start": 1576,
            "end": 1597
          },
          {
            "type": "Literal",
            "value": "שלום",
            "raw": "'שלום'",
            "start": 1599,
            "end": 1605
          },
          {
            "type": "Literal",
            "value": "Hebrew characters are correctly not escaped",
            "raw": "'Hebrew characters are correctly not escaped'",
            "start": 1607,
            "end": 1652
          }
        ],
        "optional": false,
        "start": 1559,
        "end": 1653
      },
      "start": 1559,
      "end": 1654
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1655,
            "end": 1661
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1662,
            "end": 1671
          },
          "optional": false,
          "computed": false,
          "start": 1655,
          "end": 1671
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 1672,
                "end": 1678
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 1679,
                "end": 1685
              },
              "optional": false,
              "computed": false,
              "start": 1672,
              "end": 1685
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "สวัสดี",
                "raw": "'สวัสดี'",
                "start": 1686,
                "end": 1694
              }
            ],
            "optional": false,
            "start": 1672,
            "end": 1695
          },
          {
            "type": "Literal",
            "value": "สวัสดี",
            "raw": "'สวัสดี'",
            "start": 1697,
            "end": 1705
          },
          {
            "type": "Literal",
            "value": "Thai characters are correctly not escaped",
            "raw": "'Thai characters are correctly not escaped'",
            "start": 1707,
            "end": 1750
          }
        ],
        "optional": false,
        "start": 1655,
        "end": 1751
      },
      "start": 1655,
      "end": 1752
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1753,
            "end": 1759
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1760,
            "end": 1769
          },
          "optional": false,
          "computed": false,
          "start": 1753,
          "end": 1769
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 1770,
                "end": 1776
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 1777,
                "end": 1783
              },
              "optional": false,
              "computed": false,
              "start": 1770,
              "end": 1783
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "नमस्ते",
                "raw": "'नमस्ते'",
                "start": 1784,
                "end": 1792
              }
            ],
            "optional": false,
            "start": 1770,
            "end": 1793
          },
          {
            "type": "Literal",
            "value": "नमस्ते",
            "raw": "'नमस्ते'",
            "start": 1795,
            "end": 1803
          },
          {
            "type": "Literal",
            "value": "Hindi characters are correctly not escaped",
            "raw": "'Hindi characters are correctly not escaped'",
            "start": 1805,
            "end": 1849
          }
        ],
        "optional": false,
        "start": 1753,
        "end": 1850
      },
      "start": 1753,
      "end": 1851
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1852,
            "end": 1858
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1859,
            "end": 1868
          },
          "optional": false,
          "computed": false,
          "start": 1852,
          "end": 1868
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 1869,
                "end": 1875
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 1876,
                "end": 1882
              },
              "optional": false,
              "computed": false,
              "start": 1869,
              "end": 1882
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "ሰላም",
                "raw": "'ሰላም'",
                "start": 1883,
                "end": 1888
              }
            ],
            "optional": false,
            "start": 1869,
            "end": 1889
          },
          {
            "type": "Literal",
            "value": "ሰላም",
            "raw": "'ሰላም'",
            "start": 1891,
            "end": 1896
          },
          {
            "type": "Literal",
            "value": "Amharic characters are correctly not escaped",
            "raw": "'Amharic characters are correctly not escaped'",
            "start": 1898,
            "end": 1944
          }
        ],
        "optional": false,
        "start": 1852,
        "end": 1945
      },
      "start": 1852,
      "end": 1946
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1947,
            "end": 1953
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1954,
            "end": 1963
          },
          "optional": false,
          "computed": false,
          "start": 1947,
          "end": 1963
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 1964,
                "end": 1970
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 1971,
                "end": 1977
              },
              "optional": false,
              "computed": false,
              "start": 1964,
              "end": 1977
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "हैलो",
                "raw": "'हैलो'",
                "start": 1978,
                "end": 1984
              }
            ],
            "optional": false,
            "start": 1964,
            "end": 1985
          },
          {
            "type": "Literal",
            "value": "हैलो",
            "raw": "'हैलो'",
            "start": 1987,
            "end": 1993
          },
          {
            "type": "Literal",
            "value": "Hindi characters with diacritics are correctly not escaped",
            "raw": "'Hindi characters with diacritics are correctly not escaped'",
            "start": 1995,
            "end": 2055
          }
        ],
        "optional": false,
        "start": 1947,
        "end": 2056
      },
      "start": 1947,
      "end": 2057
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2058,
            "end": 2064
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2065,
            "end": 2074
          },
          "optional": false,
          "computed": false,
          "start": 2058,
          "end": 2074
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 2075,
                "end": 2081
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 2082,
                "end": 2088
              },
              "optional": false,
              "computed": false,
              "start": 2075,
              "end": 2088
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "안녕!",
                "raw": "'안녕!'",
                "start": 2089,
                "end": 2094
              }
            ],
            "optional": false,
            "start": 2075,
            "end": 2095
          },
          {
            "type": "Literal",
            "value": "안녕\\x21",
            "raw": "'안녕\\\\x21'",
            "start": 2097,
            "end": 2106
          },
          {
            "type": "Literal",
            "value": "Korean character with special character is correctly escaped",
            "raw": "'Korean character with special character is correctly escaped'",
            "start": 2108,
            "end": 2170
          }
        ],
        "optional": false,
        "start": 2058,
        "end": 2171
      },
      "start": 2058,
      "end": 2172
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2173,
            "end": 2179
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2180,
            "end": 2189
          },
          "optional": false,
          "computed": false,
          "start": 2173,
          "end": 2189
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "RegExp",
                "start": 2190,
                "end": 2196
              },
              "property": {
                "type": "Identifier",
                "name": "escape",
                "start": 2197,
                "end": 2203
              },
              "optional": false,
              "computed": false,
              "start": 2190,
              "end": 2203
            },
            "arguments": [
              {
                "type": "Literal",
                "value": ".hello퟿world",
                "raw": "'.hello\\uD7FFworld'",
                "start": 2204,
                "end": 2223
              }
            ],
            "optional": false,
            "start": 2190,
            "end": 2224
          },
          {
            "type": "Literal",
            "value": "\\.hello퟿world",
            "raw": "'\\\\.hello\\uD7FFworld'",
            "start": 2226,
            "end": 2247
          },
          {
            "type": "Literal",
            "value": "Mixed ASCII and Unicode characters are correctly escaped",
            "raw": "'Mixed ASCII and Unicode characters are correctly escaped'",
            "start": 2249,
            "end": 2307
          }
        ],
        "optional": false,
        "start": 2173,
        "end": 2308
      },
      "start": 2173,
      "end": 2309
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2310
}