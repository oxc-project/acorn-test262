{
  "type": "Program",
  "start": 0,
  "end": 890,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 464,
      "end": 576,
      "expression": {
        "type": "CallExpression",
        "start": 464,
        "end": 575,
        "callee": {
          "type": "MemberExpression",
          "start": 464,
          "end": 480,
          "object": {
            "type": "Identifier",
            "start": 464,
            "end": 470,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 471,
            "end": 480,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 481,
            "end": 502,
            "callee": {
              "type": "MemberExpression",
              "start": 481,
              "end": 494,
              "object": {
                "type": "Identifier",
                "start": 481,
                "end": 487,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 488,
                "end": 494,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 495,
                "end": 501,
                "value": ".a/b",
                "raw": "'.a/b'"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 504,
            "end": 514,
            "value": "\\.a\\/b",
            "raw": "'\\\\.a\\\\/b'"
          },
          {
            "type": "Literal",
            "start": 516,
            "end": 574,
            "value": "mixed string with solidus character is escaped correctly",
            "raw": "'mixed string with solidus character is escaped correctly'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 577,
      "end": 688,
      "expression": {
        "type": "CallExpression",
        "start": 577,
        "end": 687,
        "callee": {
          "type": "MemberExpression",
          "start": 577,
          "end": 593,
          "object": {
            "type": "Identifier",
            "start": 577,
            "end": 583,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 584,
            "end": 593,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 594,
            "end": 614,
            "callee": {
              "type": "MemberExpression",
              "start": 594,
              "end": 607,
              "object": {
                "type": "Identifier",
                "start": 594,
                "end": 600,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 601,
                "end": 607,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 608,
                "end": 613,
                "value": "/./",
                "raw": "'/./'"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 616,
            "end": 627,
            "value": "\\/\\.\\/",
            "raw": "'\\\\/\\\\.\\\\/'"
          },
          {
            "type": "Literal",
            "start": 629,
            "end": 686,
            "value": "solidus character is escaped correctly - regexp similar",
            "raw": "'solidus character is escaped correctly - regexp similar'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 689,
      "end": 889,
      "expression": {
        "type": "CallExpression",
        "start": 689,
        "end": 888,
        "callee": {
          "type": "MemberExpression",
          "start": 689,
          "end": 705,
          "object": {
            "type": "Identifier",
            "start": 689,
            "end": 695,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 696,
            "end": 705,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 706,
            "end": 752,
            "callee": {
              "type": "MemberExpression",
              "start": 706,
              "end": 719,
              "object": {
                "type": "Identifier",
                "start": 706,
                "end": 712,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 713,
                "end": 719,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 720,
                "end": 751,
                "value": "./a\\/*b+c?d^e$f|g{2}h[i]j\\k",
                "raw": "'./a\\\\/*b+c?d^e$f|g{2}h[i]j\\\\k'"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 754,
            "end": 815,
            "value": "\\.\\/a\\\\\\/\\*b\\+c\\?d\\^e\\$f\\|g\\{2\\}h\\[i\\]j\\\\k",
            "raw": "'\\\\.\\\\/a\\\\\\\\\\\\/\\\\*b\\\\+c\\\\?d\\\\^e\\\\$f\\\\|g\\\\{2\\\\}h\\\\[i\\\\]j\\\\\\\\k'"
          },
          {
            "type": "Literal",
            "start": 817,
            "end": 887,
            "value": "complex string with multiple special characters is escaped correctly",
            "raw": "'complex string with multiple special characters is escaped correctly'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}