{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 296,
                "end": 308
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1.1: /[^a]*/() throw TypeError. Actual: ",
                    "raw": "'#1.1: /[^a]*/() throw TypeError. Actual: '",
                    "start": 309,
                    "end": 352
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Literal",
                        "value": null,
                        "raw": "/[^a]*/",
                        "regex": {
                          "pattern": "[^a]*",
                          "flags": ""
                        },
                        "start": 356,
                        "end": 363
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 356,
                      "end": 365
                    },
                    "start": 355,
                    "end": 366
                  },
                  "start": 309,
                  "end": 366
                }
              ],
              "start": 292,
              "end": 367
            },
            "start": 286,
            "end": 368
          }
        ],
        "start": 280,
        "end": 370
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 378,
          "end": 379
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "assert",
                    "start": 385,
                    "end": 391
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "sameValue",
                    "start": 392,
                    "end": 401
                  },
                  "optional": false,
                  "computed": false,
                  "start": 385,
                  "end": 401
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 407,
                      "end": 408
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "name": "TypeError",
                      "start": 420,
                      "end": 429
                    },
                    "start": 407,
                    "end": 429
                  },
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 435,
                    "end": 439
                  },
                  {
                    "type": "Literal",
                    "value": "The result of evaluating (e instanceof TypeError) is expected to be true",
                    "raw": "'The result of evaluating (e instanceof TypeError) is expected to be true'",
                    "start": 445,
                    "end": 519
                  }
                ],
                "optional": false,
                "start": 385,
                "end": 523
              },
              "start": 385,
              "end": 524
            }
          ],
          "start": 381,
          "end": 526
        },
        "start": 371,
        "end": 526
      },
      "finalizer": null,
      "start": 276,
      "end": 526
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 572
}