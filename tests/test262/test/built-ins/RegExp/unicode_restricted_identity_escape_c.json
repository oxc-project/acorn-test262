{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "isAlpha",
        "start": 457,
        "end": 464
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "c",
          "start": 465,
          "end": 466
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "left": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "LogicalExpression",
                  "left": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": "A",
                      "raw": "\"A\"",
                      "start": 480,
                      "end": 483
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Identifier",
                      "name": "c",
                      "start": 487,
                      "end": 488
                    },
                    "start": 480,
                    "end": 488
                  },
                  "operator": "&&",
                  "right": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "c",
                      "start": 492,
                      "end": 493
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Literal",
                      "value": "Z",
                      "raw": "\"Z\"",
                      "start": 497,
                      "end": 500
                    },
                    "start": 492,
                    "end": 500
                  },
                  "start": 480,
                  "end": 500
                },
                "start": 479,
                "end": 501
              },
              "operator": "||",
              "right": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "LogicalExpression",
                  "left": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": "a",
                      "raw": "\"a\"",
                      "start": 506,
                      "end": 509
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Identifier",
                      "name": "c",
                      "start": 513,
                      "end": 514
                    },
                    "start": 506,
                    "end": 514
                  },
                  "operator": "&&",
                  "right": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "c",
                      "start": 518,
                      "end": 519
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Literal",
                      "value": "z",
                      "raw": "\"z\"",
                      "start": 523,
                      "end": 526
                    },
                    "start": 518,
                    "end": 526
                  },
                  "start": 506,
                  "end": 526
                },
                "start": 505,
                "end": 527
              },
              "start": 479,
              "end": 527
            },
            "start": 472,
            "end": 528
          }
        ],
        "start": 468,
        "end": 530
      },
      "expression": false,
      "start": 448,
      "end": 530
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 662,
            "end": 668
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 669,
            "end": 675
          },
          "optional": false,
          "computed": false,
          "start": 662,
          "end": 675
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "SyntaxError",
            "start": 676,
            "end": 687
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "RegExp",
                      "start": 702,
                      "end": 708
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "\\c",
                        "raw": "\"\\\\c\"",
                        "start": 709,
                        "end": 714
                      },
                      {
                        "type": "Literal",
                        "value": "u",
                        "raw": "\"u\"",
                        "start": 716,
                        "end": 719
                      }
                    ],
                    "optional": false,
                    "start": 702,
                    "end": 720
                  },
                  "start": 702,
                  "end": 721
                }
              ],
              "start": 700,
              "end": 723
            },
            "expression": false,
            "start": 689,
            "end": 723
          }
        ],
        "optional": false,
        "start": 662,
        "end": 724
      },
      "start": 662,
      "end": 725
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "cu",
              "start": 735,
              "end": 737
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0x00",
              "start": 740,
              "end": 744
            },
            "start": 735,
            "end": 744
          }
        ],
        "start": 731,
        "end": 744
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "cu",
          "start": 746,
          "end": 748
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "value": 127,
          "raw": "0x7f",
          "start": 752,
          "end": 756
        },
        "start": 746,
        "end": 756
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "name": "cu",
          "start": 760,
          "end": 762
        },
        "start": 758,
        "end": 762
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "s",
                  "start": 772,
                  "end": 773
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "String",
                      "start": 776,
                      "end": 782
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "fromCharCode",
                      "start": 783,
                      "end": 795
                    },
                    "optional": false,
                    "computed": false,
                    "start": 776,
                    "end": 795
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "cu",
                      "start": 796,
                      "end": 798
                    }
                  ],
                  "optional": false,
                  "start": 776,
                  "end": 799
                },
                "start": 772,
                "end": 799
              }
            ],
            "start": 768,
            "end": 800
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "isAlpha",
                  "start": 808,
                  "end": 815
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "s",
                    "start": 816,
                    "end": 817
                  }
                ],
                "optional": false,
                "start": 808,
                "end": 818
              },
              "prefix": true,
              "start": 807,
              "end": 818
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "assert",
                        "start": 826,
                        "end": 832
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "throws",
                        "start": 833,
                        "end": 839
                      },
                      "optional": false,
                      "computed": false,
                      "start": 826,
                      "end": 839
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "SyntaxError",
                        "start": 840,
                        "end": 851
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "RegExp",
                                  "start": 872,
                                  "end": 878
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "left": {
                                      "type": "Literal",
                                      "value": "\\c",
                                      "raw": "\"\\\\c\"",
                                      "start": 879,
                                      "end": 884
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Identifier",
                                      "name": "s",
                                      "start": 887,
                                      "end": 888
                                    },
                                    "start": 879,
                                    "end": 888
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "u",
                                    "raw": "\"u\"",
                                    "start": 890,
                                    "end": 893
                                  }
                                ],
                                "optional": false,
                                "start": 872,
                                "end": 894
                              },
                              "start": 872,
                              "end": 895
                            }
                          ],
                          "start": 864,
                          "end": 901
                        },
                        "expression": false,
                        "start": 853,
                        "end": 901
                      },
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "ControlLetter escape in AtomEscape: '",
                            "raw": "\"ControlLetter escape in AtomEscape: '\"",
                            "start": 903,
                            "end": 942
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "s",
                            "start": 945,
                            "end": 946
                          },
                          "start": 903,
                          "end": 946
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": "'",
                          "raw": "\"'\"",
                          "start": 949,
                          "end": 952
                        },
                        "start": 903,
                        "end": 952
                      }
                    ],
                    "optional": false,
                    "start": 826,
                    "end": 953
                  },
                  "start": 826,
                  "end": 954
                }
              ],
              "start": 820,
              "end": 958
            },
            "alternate": null,
            "start": 803,
            "end": 958
          }
        ],
        "start": 764,
        "end": 960
      },
      "start": 726,
      "end": 960
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1094,
            "end": 1100
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1101,
            "end": 1107
          },
          "optional": false,
          "computed": false,
          "start": 1094,
          "end": 1107
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "SyntaxError",
            "start": 1108,
            "end": 1119
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "RegExp",
                      "start": 1134,
                      "end": 1140
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "[\\c]",
                        "raw": "\"[\\\\c]\"",
                        "start": 1141,
                        "end": 1148
                      },
                      {
                        "type": "Literal",
                        "value": "u",
                        "raw": "\"u\"",
                        "start": 1150,
                        "end": 1153
                      }
                    ],
                    "optional": false,
                    "start": 1134,
                    "end": 1154
                  },
                  "start": 1134,
                  "end": 1155
                }
              ],
              "start": 1132,
              "end": 1157
            },
            "expression": false,
            "start": 1121,
            "end": 1157
          }
        ],
        "optional": false,
        "start": 1094,
        "end": 1158
      },
      "start": 1094,
      "end": 1159
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "cu",
              "start": 1169,
              "end": 1171
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0x00",
              "start": 1174,
              "end": 1178
            },
            "start": 1169,
            "end": 1178
          }
        ],
        "start": 1165,
        "end": 1178
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "cu",
          "start": 1180,
          "end": 1182
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "value": 127,
          "raw": "0x7f",
          "start": 1186,
          "end": 1190
        },
        "start": 1180,
        "end": 1190
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "name": "cu",
          "start": 1194,
          "end": 1196
        },
        "start": 1192,
        "end": 1196
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "s",
                  "start": 1206,
                  "end": 1207
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "String",
                      "start": 1210,
                      "end": 1216
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "fromCharCode",
                      "start": 1217,
                      "end": 1229
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1210,
                    "end": 1229
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "cu",
                      "start": 1230,
                      "end": 1232
                    }
                  ],
                  "optional": false,
                  "start": 1210,
                  "end": 1233
                },
                "start": 1206,
                "end": 1233
              }
            ],
            "start": 1202,
            "end": 1234
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "isAlpha",
                  "start": 1242,
                  "end": 1249
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "s",
                    "start": 1250,
                    "end": 1251
                  }
                ],
                "optional": false,
                "start": 1242,
                "end": 1252
              },
              "prefix": true,
              "start": 1241,
              "end": 1252
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "assert",
                        "start": 1260,
                        "end": 1266
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "throws",
                        "start": 1267,
                        "end": 1273
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1260,
                      "end": 1273
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "SyntaxError",
                        "start": 1274,
                        "end": 1285
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "RegExp",
                                  "start": 1306,
                                  "end": 1312
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "left": {
                                        "type": "Literal",
                                        "value": "[\\c",
                                        "raw": "\"[\\\\c\"",
                                        "start": 1313,
                                        "end": 1319
                                      },
                                      "operator": "+",
                                      "right": {
                                        "type": "Identifier",
                                        "name": "s",
                                        "start": 1322,
                                        "end": 1323
                                      },
                                      "start": 1313,
                                      "end": 1323
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Literal",
                                      "value": "]",
                                      "raw": "\"]\"",
                                      "start": 1326,
                                      "end": 1329
                                    },
                                    "start": 1313,
                                    "end": 1329
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "u",
                                    "raw": "\"u\"",
                                    "start": 1331,
                                    "end": 1334
                                  }
                                ],
                                "optional": false,
                                "start": 1306,
                                "end": 1335
                              },
                              "start": 1306,
                              "end": 1336
                            }
                          ],
                          "start": 1298,
                          "end": 1342
                        },
                        "expression": false,
                        "start": 1287,
                        "end": 1342
                      },
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "ControlLetter escape in ClassEscape: '",
                            "raw": "\"ControlLetter escape in ClassEscape: '\"",
                            "start": 1344,
                            "end": 1384
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "s",
                            "start": 1387,
                            "end": 1388
                          },
                          "start": 1344,
                          "end": 1388
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": "'",
                          "raw": "\"'\"",
                          "start": 1391,
                          "end": 1394
                        },
                        "start": 1344,
                        "end": 1394
                      }
                    ],
                    "optional": false,
                    "start": 1260,
                    "end": 1395
                  },
                  "start": 1260,
                  "end": 1396
                }
              ],
              "start": 1254,
              "end": 1400
            },
            "alternate": null,
            "start": 1237,
            "end": 1400
          }
        ],
        "start": 1198,
        "end": 1402
      },
      "start": 1160,
      "end": 1402
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1403
}