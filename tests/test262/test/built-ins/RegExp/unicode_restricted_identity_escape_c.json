{
  "type": "Program",
  "start": 0,
  "end": 1403,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 448,
      "end": 530,
      "id": {
        "type": "Identifier",
        "start": 457,
        "end": 464,
        "name": "isAlpha"
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 465,
          "end": 466,
          "name": "c"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 468,
        "end": 530,
        "body": [
          {
            "type": "ReturnStatement",
            "start": 472,
            "end": 528,
            "argument": {
              "type": "LogicalExpression",
              "start": 479,
              "end": 527,
              "left": {
                "type": "ParenthesizedExpression",
                "start": 479,
                "end": 501,
                "expression": {
                  "type": "LogicalExpression",
                  "start": 480,
                  "end": 500,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 480,
                    "end": 488,
                    "left": {
                      "type": "Literal",
                      "start": 480,
                      "end": 483,
                      "value": "A",
                      "raw": "\"A\""
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Identifier",
                      "start": 487,
                      "end": 488,
                      "name": "c"
                    }
                  },
                  "operator": "&&",
                  "right": {
                    "type": "BinaryExpression",
                    "start": 492,
                    "end": 500,
                    "left": {
                      "type": "Identifier",
                      "start": 492,
                      "end": 493,
                      "name": "c"
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Literal",
                      "start": 497,
                      "end": 500,
                      "value": "Z",
                      "raw": "\"Z\""
                    }
                  }
                }
              },
              "operator": "||",
              "right": {
                "type": "ParenthesizedExpression",
                "start": 505,
                "end": 527,
                "expression": {
                  "type": "LogicalExpression",
                  "start": 506,
                  "end": 526,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 506,
                    "end": 514,
                    "left": {
                      "type": "Literal",
                      "start": 506,
                      "end": 509,
                      "value": "a",
                      "raw": "\"a\""
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Identifier",
                      "start": 513,
                      "end": 514,
                      "name": "c"
                    }
                  },
                  "operator": "&&",
                  "right": {
                    "type": "BinaryExpression",
                    "start": 518,
                    "end": 526,
                    "left": {
                      "type": "Identifier",
                      "start": 518,
                      "end": 519,
                      "name": "c"
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Literal",
                      "start": 523,
                      "end": 526,
                      "value": "z",
                      "raw": "\"z\""
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "start": 662,
      "end": 725,
      "expression": {
        "type": "CallExpression",
        "start": 662,
        "end": 724,
        "callee": {
          "type": "MemberExpression",
          "start": 662,
          "end": 675,
          "object": {
            "type": "Identifier",
            "start": 662,
            "end": 668,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 669,
            "end": 675,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 676,
            "end": 687,
            "name": "SyntaxError"
          },
          {
            "type": "FunctionExpression",
            "start": 689,
            "end": 723,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 700,
              "end": 723,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 702,
                  "end": 721,
                  "expression": {
                    "type": "CallExpression",
                    "start": 702,
                    "end": 720,
                    "callee": {
                      "type": "Identifier",
                      "start": 702,
                      "end": 708,
                      "name": "RegExp"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 709,
                        "end": 714,
                        "value": "\\c",
                        "raw": "\"\\\\c\""
                      },
                      {
                        "type": "Literal",
                        "start": 716,
                        "end": 719,
                        "value": "u",
                        "raw": "\"u\""
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ForStatement",
      "start": 726,
      "end": 960,
      "init": {
        "type": "VariableDeclaration",
        "start": 731,
        "end": 744,
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 735,
            "end": 744,
            "id": {
              "type": "Identifier",
              "start": 735,
              "end": 737,
              "name": "cu"
            },
            "init": {
              "type": "Literal",
              "start": 740,
              "end": 744,
              "value": 0,
              "raw": "0x00"
            }
          }
        ]
      },
      "test": {
        "type": "BinaryExpression",
        "start": 746,
        "end": 756,
        "left": {
          "type": "Identifier",
          "start": 746,
          "end": 748,
          "name": "cu"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 752,
          "end": 756,
          "value": 127,
          "raw": "0x7f"
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 758,
        "end": 762,
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 760,
          "end": 762,
          "name": "cu"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 764,
        "end": 960,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 768,
            "end": 800,
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 772,
                "end": 799,
                "id": {
                  "type": "Identifier",
                  "start": 772,
                  "end": 773,
                  "name": "s"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 776,
                  "end": 799,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 776,
                    "end": 795,
                    "object": {
                      "type": "Identifier",
                      "start": 776,
                      "end": 782,
                      "name": "String"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 783,
                      "end": 795,
                      "name": "fromCharCode"
                    },
                    "optional": false,
                    "computed": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 796,
                      "end": 798,
                      "name": "cu"
                    }
                  ],
                  "optional": false
                }
              }
            ]
          },
          {
            "type": "IfStatement",
            "start": 803,
            "end": 958,
            "test": {
              "type": "UnaryExpression",
              "start": 807,
              "end": 818,
              "operator": "!",
              "argument": {
                "type": "CallExpression",
                "start": 808,
                "end": 818,
                "callee": {
                  "type": "Identifier",
                  "start": 808,
                  "end": 815,
                  "name": "isAlpha"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 816,
                    "end": 817,
                    "name": "s"
                  }
                ],
                "optional": false
              },
              "prefix": true
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 820,
              "end": 958,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 826,
                  "end": 954,
                  "expression": {
                    "type": "CallExpression",
                    "start": 826,
                    "end": 953,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 826,
                      "end": 839,
                      "object": {
                        "type": "Identifier",
                        "start": 826,
                        "end": 832,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 833,
                        "end": 839,
                        "name": "throws"
                      },
                      "optional": false,
                      "computed": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 840,
                        "end": 851,
                        "name": "SyntaxError"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 853,
                        "end": 901,
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 864,
                          "end": 901,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 872,
                              "end": 895,
                              "expression": {
                                "type": "CallExpression",
                                "start": 872,
                                "end": 894,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 872,
                                  "end": 878,
                                  "name": "RegExp"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "start": 879,
                                    "end": 888,
                                    "left": {
                                      "type": "Literal",
                                      "start": 879,
                                      "end": 884,
                                      "value": "\\c",
                                      "raw": "\"\\\\c\""
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Identifier",
                                      "start": 887,
                                      "end": 888,
                                      "name": "s"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "start": 890,
                                    "end": 893,
                                    "value": "u",
                                    "raw": "\"u\""
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ]
                        },
                        "expression": false
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 903,
                        "end": 952,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 903,
                          "end": 946,
                          "left": {
                            "type": "Literal",
                            "start": 903,
                            "end": 942,
                            "value": "ControlLetter escape in AtomEscape: '",
                            "raw": "\"ControlLetter escape in AtomEscape: '\""
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 945,
                            "end": 946,
                            "name": "s"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 949,
                          "end": 952,
                          "value": "'",
                          "raw": "\"'\""
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1094,
      "end": 1159,
      "expression": {
        "type": "CallExpression",
        "start": 1094,
        "end": 1158,
        "callee": {
          "type": "MemberExpression",
          "start": 1094,
          "end": 1107,
          "object": {
            "type": "Identifier",
            "start": 1094,
            "end": 1100,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1101,
            "end": 1107,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1108,
            "end": 1119,
            "name": "SyntaxError"
          },
          {
            "type": "FunctionExpression",
            "start": 1121,
            "end": 1157,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1132,
              "end": 1157,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1134,
                  "end": 1155,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1134,
                    "end": 1154,
                    "callee": {
                      "type": "Identifier",
                      "start": 1134,
                      "end": 1140,
                      "name": "RegExp"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1141,
                        "end": 1148,
                        "value": "[\\c]",
                        "raw": "\"[\\\\c]\""
                      },
                      {
                        "type": "Literal",
                        "start": 1150,
                        "end": 1153,
                        "value": "u",
                        "raw": "\"u\""
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ForStatement",
      "start": 1160,
      "end": 1402,
      "init": {
        "type": "VariableDeclaration",
        "start": 1165,
        "end": 1178,
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1169,
            "end": 1178,
            "id": {
              "type": "Identifier",
              "start": 1169,
              "end": 1171,
              "name": "cu"
            },
            "init": {
              "type": "Literal",
              "start": 1174,
              "end": 1178,
              "value": 0,
              "raw": "0x00"
            }
          }
        ]
      },
      "test": {
        "type": "BinaryExpression",
        "start": 1180,
        "end": 1190,
        "left": {
          "type": "Identifier",
          "start": 1180,
          "end": 1182,
          "name": "cu"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 1186,
          "end": 1190,
          "value": 127,
          "raw": "0x7f"
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 1192,
        "end": 1196,
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 1194,
          "end": 1196,
          "name": "cu"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 1198,
        "end": 1402,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 1202,
            "end": 1234,
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1206,
                "end": 1233,
                "id": {
                  "type": "Identifier",
                  "start": 1206,
                  "end": 1207,
                  "name": "s"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1210,
                  "end": 1233,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1210,
                    "end": 1229,
                    "object": {
                      "type": "Identifier",
                      "start": 1210,
                      "end": 1216,
                      "name": "String"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1217,
                      "end": 1229,
                      "name": "fromCharCode"
                    },
                    "optional": false,
                    "computed": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1230,
                      "end": 1232,
                      "name": "cu"
                    }
                  ],
                  "optional": false
                }
              }
            ]
          },
          {
            "type": "IfStatement",
            "start": 1237,
            "end": 1400,
            "test": {
              "type": "UnaryExpression",
              "start": 1241,
              "end": 1252,
              "operator": "!",
              "argument": {
                "type": "CallExpression",
                "start": 1242,
                "end": 1252,
                "callee": {
                  "type": "Identifier",
                  "start": 1242,
                  "end": 1249,
                  "name": "isAlpha"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 1250,
                    "end": 1251,
                    "name": "s"
                  }
                ],
                "optional": false
              },
              "prefix": true
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1254,
              "end": 1400,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1260,
                  "end": 1396,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1260,
                    "end": 1395,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1260,
                      "end": 1273,
                      "object": {
                        "type": "Identifier",
                        "start": 1260,
                        "end": 1266,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1267,
                        "end": 1273,
                        "name": "throws"
                      },
                      "optional": false,
                      "computed": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1274,
                        "end": 1285,
                        "name": "SyntaxError"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 1287,
                        "end": 1342,
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 1298,
                          "end": 1342,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 1306,
                              "end": 1336,
                              "expression": {
                                "type": "CallExpression",
                                "start": 1306,
                                "end": 1335,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 1306,
                                  "end": 1312,
                                  "name": "RegExp"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "start": 1313,
                                    "end": 1329,
                                    "left": {
                                      "type": "BinaryExpression",
                                      "start": 1313,
                                      "end": 1323,
                                      "left": {
                                        "type": "Literal",
                                        "start": 1313,
                                        "end": 1319,
                                        "value": "[\\c",
                                        "raw": "\"[\\\\c\""
                                      },
                                      "operator": "+",
                                      "right": {
                                        "type": "Identifier",
                                        "start": 1322,
                                        "end": 1323,
                                        "name": "s"
                                      }
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Literal",
                                      "start": 1326,
                                      "end": 1329,
                                      "value": "]",
                                      "raw": "\"]\""
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "start": 1331,
                                    "end": 1334,
                                    "value": "u",
                                    "raw": "\"u\""
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ]
                        },
                        "expression": false
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 1344,
                        "end": 1394,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 1344,
                          "end": 1388,
                          "left": {
                            "type": "Literal",
                            "start": 1344,
                            "end": 1384,
                            "value": "ControlLetter escape in ClassEscape: '",
                            "raw": "\"ControlLetter escape in ClassEscape: '\""
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 1387,
                            "end": 1388,
                            "name": "s"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1391,
                          "end": 1394,
                          "value": "'",
                          "raw": "\"'\""
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}