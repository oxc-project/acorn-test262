{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "non_w",
            "start": 357,
            "end": 362
          },
          "init": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "\f\n\r\t\u000b~`!@#$%^&*()-+={[}]|\\:;'<,>./? ",
              "raw": "\"\\f\\n\\r\\t\\v~`!@#$%^&*()-+={[}]|\\\\:;'<,>./? \"",
              "start": 365,
              "end": 409
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "\"",
              "raw": "'\"'",
              "start": 412,
              "end": 415
            },
            "start": 365,
            "end": 415
          },
          "start": 357,
          "end": 415
        }
      ],
      "start": 353,
      "end": 416
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 418,
            "end": 424
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 425,
            "end": 434
          },
          "optional": false,
          "computed": false,
          "start": 418,
          "end": 434
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Literal",
                "value": null,
                "raw": "/\\w/",
                "regex": {
                  "pattern": "\\w",
                  "flags": ""
                },
                "start": 438,
                "end": 442
              },
              "property": {
                "type": "Identifier",
                "name": "exec",
                "start": 443,
                "end": 447
              },
              "optional": false,
              "computed": false,
              "start": 438,
              "end": 447
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "non_w",
                "start": 448,
                "end": 453
              }
            ],
            "optional": false,
            "start": 438,
            "end": 454
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 458,
            "end": 462
          },
          {
            "type": "Literal",
            "value": "/w/.exec(\"\"fnrtv~`!@#$%^&*()-+={[}]|:;'<,>./? \" + '\"'\") must return null",
            "raw": "'/w/.exec(\"\"fnrtv~`!@#$%^&*()-+={[}]|:;\\'<,>./? \" + \\'\"\\'\") must return null'",
            "start": 466,
            "end": 543
          }
        ],
        "optional": false,
        "start": 418,
        "end": 545
      },
      "start": 418,
      "end": 546
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "non_W",
            "start": 552,
            "end": 557
          },
          "init": {
            "type": "Literal",
            "value": "_0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "raw": "\"_0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"",
            "start": 560,
            "end": 626
          },
          "start": 552,
          "end": 626
        }
      ],
      "start": 548,
      "end": 627
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "regexp_w",
            "start": 632,
            "end": 640
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "/\\w/g",
            "regex": {
              "pattern": "\\w",
              "flags": "g"
            },
            "start": 643,
            "end": 648
          },
          "start": 632,
          "end": 648
        }
      ],
      "start": 628,
      "end": 649
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "k",
            "start": 654,
            "end": 655
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 658,
            "end": 659
          },
          "start": 654,
          "end": 659
        }
      ],
      "start": 650,
      "end": 660
    },
    {
      "type": "WhileStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "regexp_w",
              "start": 668,
              "end": 676
            },
            "property": {
              "type": "Identifier",
              "name": "exec",
              "start": 677,
              "end": 681
            },
            "optional": false,
            "computed": false,
            "start": 668,
            "end": 681
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "non_W",
              "start": 682,
              "end": 687
            }
          ],
          "optional": false,
          "start": 668,
          "end": 688
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 693,
          "end": 697
        },
        "start": 668,
        "end": 697
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "k",
                "start": 704,
                "end": 705
              },
              "start": 704,
              "end": 707
            },
            "start": 704,
            "end": 708
          }
        ],
        "start": 699,
        "end": 710
      },
      "start": 661,
      "end": 710
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 712,
            "end": 718
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 719,
            "end": 728
          },
          "optional": false,
          "computed": false,
          "start": 712,
          "end": 728
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "non_W",
              "start": 729,
              "end": 734
            },
            "property": {
              "type": "Identifier",
              "name": "length",
              "start": 735,
              "end": 741
            },
            "optional": false,
            "computed": false,
            "start": 729,
            "end": 741
          },
          {
            "type": "Identifier",
            "name": "k",
            "start": 743,
            "end": 744
          },
          {
            "type": "Literal",
            "value": "The value of non_W.length is expected to equal the value of k",
            "raw": "'The value of non_W.length is expected to equal the value of k'",
            "start": 746,
            "end": 809
          }
        ],
        "optional": false,
        "start": 712,
        "end": 810
      },
      "start": 712,
      "end": 811
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 812
}