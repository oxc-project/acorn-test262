{
  "type": "Program",
  "start": 0,
  "end": 365,
  "body": [
    {
      "type": "ForInStatement",
      "start": 243,
      "end": 364,
      "left": {
        "type": "VariableDeclaration",
        "start": 248,
        "end": 256,
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 252,
            "end": 256,
            "id": {
              "type": "Identifier",
              "start": 252,
              "end": 256,
              "name": "prop"
            },
            "init": null
          }
        ]
      },
      "right": {
        "type": "ThisExpression",
        "start": 260,
        "end": 264
      },
      "body": {
        "type": "BlockStatement",
        "start": 266,
        "end": 364,
        "body": [
          {
            "type": "IfStatement",
            "start": 270,
            "end": 362,
            "test": {
              "type": "BinaryExpression",
              "start": 274,
              "end": 294,
              "left": {
                "type": "Identifier",
                "start": 274,
                "end": 278,
                "name": "prop"
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "start": 283,
                "end": 294,
                "value": "undefined",
                "raw": "\"undefined\""
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 296,
              "end": 362,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 302,
                  "end": 358,
                  "argument": {
                    "type": "NewExpression",
                    "start": 308,
                    "end": 357,
                    "callee": {
                      "type": "Identifier",
                      "start": 312,
                      "end": 324,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 325,
                        "end": 356,
                        "value": "#1: The undefined is DontEnum",
                        "raw": "'#1: The undefined is DontEnum'"
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}