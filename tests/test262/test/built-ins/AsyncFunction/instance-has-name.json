{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "foo",
        "start": 339,
        "end": 342
      },
      "generator": false,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [],
        "start": 345,
        "end": 347
      },
      "expression": false,
      "start": 324,
      "end": 347
    },
    {
      "type": "EmptyStatement",
      "start": 347,
      "end": 348
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "verifyProperty",
          "start": 350,
          "end": 364
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "foo",
            "start": 365,
            "end": 368
          },
          {
            "type": "Literal",
            "value": "name",
            "raw": "\"name\"",
            "start": 370,
            "end": 376
          },
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "value",
                  "start": 382,
                  "end": 387
                },
                "value": {
                  "type": "Literal",
                  "value": "foo",
                  "raw": "\"foo\"",
                  "start": 389,
                  "end": 394
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 382,
                "end": 394
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "writable",
                  "start": 398,
                  "end": 406
                },
                "value": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 408,
                  "end": 413
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 398,
                "end": 413
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "enumerable",
                  "start": 417,
                  "end": 427
                },
                "value": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 429,
                  "end": 434
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 417,
                "end": 434
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "configurable",
                  "start": 438,
                  "end": 450
                },
                "value": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 452,
                  "end": 456
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 438,
                "end": 456
              }
            ],
            "start": 378,
            "end": 458
          }
        ],
        "optional": false,
        "start": 350,
        "end": 459
      },
      "start": 350,
      "end": 460
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 461
}