{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "log",
            "start": 545,
            "end": 548
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [],
            "start": 551,
            "end": 553
          },
          "start": 545,
          "end": 553
        }
      ],
      "start": 541,
      "end": 554
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "invalidKeys",
            "start": 559,
            "end": 570
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 574,
                "end": 575
              },
              {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 577,
                "end": 582
              },
              {
                "type": "Identifier",
                "name": "undefined",
                "start": 584,
                "end": 593
              },
              {
                "type": "Literal",
                "value": "string",
                "raw": "'string'",
                "start": 595,
                "end": 603
              },
              {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 605,
                "end": 609
              }
            ],
            "start": 573,
            "end": 610
          },
          "start": 559,
          "end": 610
        }
      ],
      "start": 555,
      "end": 611
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "s",
            "start": 617,
            "end": 618
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "WeakMap",
              "start": 625,
              "end": 632
            },
            "arguments": [],
            "start": 621,
            "end": 634
          },
          "start": 617,
          "end": 634
        }
      ],
      "start": 613,
      "end": 635
    },
    {
      "type": "ForOfStatement",
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "kind": "let",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "invalidKey",
              "start": 646,
              "end": 656
            },
            "init": null,
            "start": 646,
            "end": 656
          }
        ],
        "start": 642,
        "end": 656
      },
      "right": {
        "type": "Identifier",
        "name": "invalidKeys",
        "start": 660,
        "end": 671
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 677,
                  "end": 683
                },
                "property": {
                  "type": "Identifier",
                  "name": "throws",
                  "start": 684,
                  "end": 690
                },
                "optional": false,
                "computed": false,
                "start": 677,
                "end": 690
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "TypeError",
                  "start": 691,
                  "end": 700
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "s",
                              "start": 720,
                              "end": 721
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "getOrInsertComputed",
                              "start": 722,
                              "end": 741
                            },
                            "optional": false,
                            "computed": false,
                            "start": 720,
                            "end": 741
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "invalidKey",
                              "start": 742,
                              "end": 752
                            },
                            {
                              "type": "ArrowFunctionExpression",
                              "expression": true,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "log",
                                    "start": 766,
                                    "end": 769
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "push",
                                    "start": 770,
                                    "end": 774
                                  },
                                  "optional": false,
                                  "computed": false,
                                  "start": 766,
                                  "end": 774
                                },
                                "arguments": [
                                  {
                                    "type": "TemplateLiteral",
                                    "quasis": [
                                      {
                                        "type": "TemplateElement",
                                        "value": {
                                          "raw": "Unexpected evaluation of callback function, key: ",
                                          "cooked": "Unexpected evaluation of callback function, key: "
                                        },
                                        "tail": false,
                                        "start": 776,
                                        "end": 825
                                      },
                                      {
                                        "type": "TemplateElement",
                                        "value": {
                                          "raw": "",
                                          "cooked": ""
                                        },
                                        "tail": true,
                                        "start": 838,
                                        "end": 838
                                      }
                                    ],
                                    "expressions": [
                                      {
                                        "type": "Identifier",
                                        "name": "invalidKey",
                                        "start": 827,
                                        "end": 837
                                      }
                                    ],
                                    "start": 775,
                                    "end": 839
                                  }
                                ],
                                "optional": false,
                                "start": 766,
                                "end": 840
                              },
                              "id": null,
                              "generator": false,
                              "start": 760,
                              "end": 840
                            }
                          ],
                          "optional": false,
                          "start": 720,
                          "end": 841
                        },
                        "start": 720,
                        "end": 842
                      }
                    ],
                    "start": 714,
                    "end": 846
                  },
                  "expression": false,
                  "start": 702,
                  "end": 846
                },
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false,
                      "start": 849,
                      "end": 849
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": " not allowed as WeakMap key",
                        "cooked": " not allowed as WeakMap key"
                      },
                      "tail": true,
                      "start": 869,
                      "end": 896
                    }
                  ],
                  "expressions": [
                    {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "invalidKey",
                        "start": 858,
                        "end": 868
                      },
                      "prefix": true,
                      "start": 851,
                      "end": 868
                    }
                  ],
                  "start": 848,
                  "end": 897
                }
              ],
              "optional": false,
              "start": 677,
              "end": 898
            },
            "start": 677,
            "end": 899
          }
        ],
        "start": 673,
        "end": 901
      },
      "start": 637,
      "end": 901
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 903,
            "end": 909
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 910,
            "end": 916
          },
          "optional": false,
          "computed": false,
          "start": 903,
          "end": 916
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 917,
            "end": 926
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "s",
                        "start": 944,
                        "end": 945
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "getOrInsertComputed",
                        "start": 946,
                        "end": 965
                      },
                      "optional": false,
                      "computed": false,
                      "start": 944,
                      "end": 965
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 966,
                            "end": 972
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "for",
                            "start": 973,
                            "end": 976
                          },
                          "optional": false,
                          "computed": false,
                          "start": 966,
                          "end": 976
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "registered symbol",
                            "raw": "'registered symbol'",
                            "start": 977,
                            "end": 996
                          }
                        ],
                        "optional": false,
                        "start": 966,
                        "end": 997
                      },
                      {
                        "type": "ArrowFunctionExpression",
                        "expression": true,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "log",
                              "start": 1009,
                              "end": 1012
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "push",
                              "start": 1013,
                              "end": 1017
                            },
                            "optional": false,
                            "computed": false,
                            "start": 1009,
                            "end": 1017
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "Unexpected callback evaluation",
                              "raw": "\"Unexpected callback evaluation\"",
                              "start": 1018,
                              "end": 1050
                            }
                          ],
                          "optional": false,
                          "start": 1009,
                          "end": 1051
                        },
                        "id": null,
                        "generator": false,
                        "start": 1003,
                        "end": 1051
                      }
                    ],
                    "optional": false,
                    "start": 944,
                    "end": 1052
                  },
                  "start": 944,
                  "end": 1053
                }
              ],
              "start": 940,
              "end": 1055
            },
            "expression": false,
            "start": 928,
            "end": 1055
          },
          {
            "type": "Literal",
            "value": "Registered symbol not allowed as WeakMap key",
            "raw": "'Registered symbol not allowed as WeakMap key'",
            "start": 1057,
            "end": 1103
          }
        ],
        "optional": false,
        "start": 903,
        "end": 1104
      },
      "start": 903,
      "end": 1105
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1107,
            "end": 1113
          },
          "property": {
            "type": "Identifier",
            "name": "compareArray",
            "start": 1114,
            "end": 1126
          },
          "optional": false,
          "computed": false,
          "start": 1107,
          "end": 1126
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "log",
            "start": 1127,
            "end": 1130
          },
          {
            "type": "ArrayExpression",
            "elements": [],
            "start": 1132,
            "end": 1134
          }
        ],
        "optional": false,
        "start": 1107,
        "end": 1135
      },
      "start": 1107,
      "end": 1136
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1137
}