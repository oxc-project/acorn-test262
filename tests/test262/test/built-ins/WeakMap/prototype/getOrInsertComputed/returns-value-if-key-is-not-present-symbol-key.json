{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "foo",
            "start": 568,
            "end": 571
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "Symbol",
              "start": 574,
              "end": 580
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "a description",
                "raw": "'a description'",
                "start": 581,
                "end": 596
              }
            ],
            "optional": false,
            "start": 574,
            "end": 597
          },
          "start": 568,
          "end": 597
        }
      ],
      "start": 564,
      "end": 598
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "bar",
            "start": 603,
            "end": 606
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "Symbol",
              "start": 609,
              "end": 615
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "a description",
                "raw": "'a description'",
                "start": 616,
                "end": 631
              }
            ],
            "optional": false,
            "start": 609,
            "end": 632
          },
          "start": 603,
          "end": 632
        }
      ],
      "start": 599,
      "end": 633
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "baz",
            "start": 638,
            "end": 641
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "Symbol",
              "start": 644,
              "end": 650
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "different description",
                "raw": "'different description'",
                "start": 651,
                "end": 674
              }
            ],
            "optional": false,
            "start": 644,
            "end": 675
          },
          "start": 638,
          "end": 675
        }
      ],
      "start": 634,
      "end": 676
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "map",
            "start": 681,
            "end": 684
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "WeakMap",
              "start": 691,
              "end": 698
            },
            "arguments": [],
            "start": 687,
            "end": 700
          },
          "start": 681,
          "end": 700
        }
      ],
      "start": 677,
      "end": 701
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 703,
            "end": 709
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 710,
            "end": 719
          },
          "optional": false,
          "computed": false,
          "start": 703,
          "end": 719
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "map",
                "start": 720,
                "end": 723
              },
              "property": {
                "type": "Identifier",
                "name": "getOrInsertComputed",
                "start": 724,
                "end": 743
              },
              "optional": false,
              "computed": false,
              "start": 720,
              "end": 743
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "foo",
                "start": 744,
                "end": 747
              },
              {
                "type": "ArrowFunctionExpression",
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 755,
                  "end": 756
                },
                "id": null,
                "generator": false,
                "start": 749,
                "end": 756
              }
            ],
            "optional": false,
            "start": 720,
            "end": 757
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 759,
            "end": 760
          },
          {
            "type": "Literal",
            "value": "Regular symbol as key, added in constructor",
            "raw": "'Regular symbol as key, added in constructor'",
            "start": 762,
            "end": 807
          }
        ],
        "optional": false,
        "start": 703,
        "end": 808
      },
      "start": 703,
      "end": 809
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 810,
            "end": 816
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 817,
            "end": 826
          },
          "optional": false,
          "computed": false,
          "start": 810,
          "end": 826
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "map",
                "start": 827,
                "end": 830
              },
              "property": {
                "type": "Identifier",
                "name": "getOrInsertComputed",
                "start": 831,
                "end": 850
              },
              "optional": false,
              "computed": false,
              "start": 827,
              "end": 850
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "baz",
                "start": 851,
                "end": 854
              },
              {
                "type": "ArrowFunctionExpression",
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 862,
                  "end": 863
                },
                "id": null,
                "generator": false,
                "start": 856,
                "end": 863
              }
            ],
            "optional": false,
            "start": 827,
            "end": 864
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 866,
            "end": 867
          },
          {
            "type": "Literal",
            "value": "Regular symbol as key, added with set()",
            "raw": "'Regular symbol as key, added with set()'",
            "start": 869,
            "end": 910
          }
        ],
        "optional": false,
        "start": 810,
        "end": 911
      },
      "start": 810,
      "end": 912
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 913,
            "end": 919
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 920,
            "end": 929
          },
          "optional": false,
          "computed": false,
          "start": 913,
          "end": 929
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "map",
                "start": 930,
                "end": 933
              },
              "property": {
                "type": "Identifier",
                "name": "getOrInsertComputed",
                "start": 934,
                "end": 953
              },
              "optional": false,
              "computed": false,
              "start": 930,
              "end": 953
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "bar",
                "start": 954,
                "end": 957
              },
              {
                "type": "ArrowFunctionExpression",
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 965,
                  "end": 966
                },
                "id": null,
                "generator": false,
                "start": 959,
                "end": 966
              }
            ],
            "optional": false,
            "start": 930,
            "end": 967
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 969,
            "end": 970
          },
          {
            "type": "Literal",
            "value": "Symbols with the same description don't overwrite each other",
            "raw": "\"Symbols with the same description don't overwrite each other\"",
            "start": 972,
            "end": 1034
          }
        ],
        "optional": false,
        "start": 913,
        "end": 1035
      },
      "start": 913,
      "end": 1036
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1037,
            "end": 1043
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1044,
            "end": 1053
          },
          "optional": false,
          "computed": false,
          "start": 1037,
          "end": 1053
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "map",
                "start": 1054,
                "end": 1057
              },
              "property": {
                "type": "Identifier",
                "name": "getOrInsertComputed",
                "start": 1058,
                "end": 1077
              },
              "optional": false,
              "computed": false,
              "start": 1054,
              "end": 1077
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Symbol",
                  "start": 1078,
                  "end": 1084
                },
                "property": {
                  "type": "Identifier",
                  "name": "hasInstance",
                  "start": 1085,
                  "end": 1096
                },
                "optional": false,
                "computed": false,
                "start": 1078,
                "end": 1096
              },
              {
                "type": "ArrowFunctionExpression",
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "Literal",
                  "value": 3,
                  "raw": "3",
                  "start": 1104,
                  "end": 1105
                },
                "id": null,
                "generator": false,
                "start": 1098,
                "end": 1105
              }
            ],
            "optional": false,
            "start": 1054,
            "end": 1106
          },
          {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 1108,
            "end": 1109
          },
          {
            "type": "Literal",
            "value": "Well-known symbol as key",
            "raw": "'Well-known symbol as key'",
            "start": 1111,
            "end": 1137
          }
        ],
        "optional": false,
        "start": 1037,
        "end": 1138
      },
      "start": 1037,
      "end": 1139
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1141
}