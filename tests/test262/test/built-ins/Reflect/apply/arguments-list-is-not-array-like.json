{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "count",
            "start": 601,
            "end": 606
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 609,
            "end": 610
          },
          "start": 601,
          "end": 610
        }
      ],
      "start": 597,
      "end": 611
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "fn",
        "start": 622,
        "end": 624
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "count",
                "start": 631,
                "end": 636
              },
              "start": 631,
              "end": 638
            },
            "start": 631,
            "end": 639
          }
        ],
        "start": 627,
        "end": 641
      },
      "expression": false,
      "start": 613,
      "end": 641
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 643,
            "end": 649
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 650,
            "end": 656
          },
          "optional": false,
          "computed": false,
          "start": 643,
          "end": 656
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 657,
            "end": 669
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Reflect",
                        "start": 681,
                        "end": 688
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "apply",
                        "start": 689,
                        "end": 694
                      },
                      "optional": false,
                      "computed": false,
                      "start": 681,
                      "end": 694
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "fn",
                        "start": 695,
                        "end": 697
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 699,
                        "end": 703
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "get",
                            "key": {
                              "type": "Identifier",
                              "name": "length",
                              "start": 715,
                              "end": 721
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ThrowStatement",
                                    "argument": {
                                      "type": "NewExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Test262Error",
                                        "start": 742,
                                        "end": 754
                                      },
                                      "arguments": [],
                                      "start": 738,
                                      "end": 756
                                    },
                                    "start": 732,
                                    "end": 757
                                  }
                                ],
                                "start": 724,
                                "end": 763
                              },
                              "expression": false,
                              "start": 721,
                              "end": 763
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 711,
                            "end": 763
                          }
                        ],
                        "start": 705,
                        "end": 767
                      }
                    ],
                    "optional": false,
                    "start": 681,
                    "end": 768
                  },
                  "start": 681,
                  "end": 769
                }
              ],
              "start": 677,
              "end": 771
            },
            "id": null,
            "generator": false,
            "start": 671,
            "end": 771
          },
          {
            "type": "Literal",
            "value": "`Reflect.apply(fn, null, {get length() {throw new Test262Error();}})` throws a Test262Error exception",
            "raw": "'`Reflect.apply(fn, null, {get length() {throw new Test262Error();}})` throws a Test262Error exception'",
            "start": 773,
            "end": 876
          }
        ],
        "optional": false,
        "start": 643,
        "end": 877
      },
      "start": 643,
      "end": 878
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 880,
            "end": 886
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 887,
            "end": 893
          },
          "optional": false,
          "computed": false,
          "start": 880,
          "end": 893
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 894,
            "end": 903
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Reflect",
                        "start": 915,
                        "end": 922
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "apply",
                        "start": 923,
                        "end": 928
                      },
                      "optional": false,
                      "computed": false,
                      "start": 915,
                      "end": 928
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "fn",
                        "start": 929,
                        "end": 931
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 933,
                        "end": 937
                      }
                    ],
                    "optional": false,
                    "start": 915,
                    "end": 950
                  },
                  "start": 915,
                  "end": 951
                }
              ],
              "start": 911,
              "end": 953
            },
            "id": null,
            "generator": false,
            "start": 905,
            "end": 953
          },
          {
            "type": "Literal",
            "value": "`Reflect.apply(fn, null /* empty */)` throws a TypeError exception",
            "raw": "'`Reflect.apply(fn, null /* empty */)` throws a TypeError exception'",
            "start": 955,
            "end": 1023
          }
        ],
        "optional": false,
        "start": 880,
        "end": 1024
      },
      "start": 880,
      "end": 1025
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1027,
            "end": 1033
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1034,
            "end": 1040
          },
          "optional": false,
          "computed": false,
          "start": 1027,
          "end": 1040
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1041,
            "end": 1050
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Reflect",
                        "start": 1062,
                        "end": 1069
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "apply",
                        "start": 1070,
                        "end": 1075
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1062,
                      "end": 1075
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "fn",
                        "start": 1076,
                        "end": 1078
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 1080,
                        "end": 1084
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Symbol",
                          "start": 1086,
                          "end": 1092
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 1086,
                        "end": 1094
                      }
                    ],
                    "optional": false,
                    "start": 1062,
                    "end": 1095
                  },
                  "start": 1062,
                  "end": 1096
                }
              ],
              "start": 1058,
              "end": 1098
            },
            "id": null,
            "generator": false,
            "start": 1052,
            "end": 1098
          },
          {
            "type": "Literal",
            "value": "`Reflect.apply(fn, null, Symbol())` throws a TypeError exception",
            "raw": "'`Reflect.apply(fn, null, Symbol())` throws a TypeError exception'",
            "start": 1100,
            "end": 1166
          }
        ],
        "optional": false,
        "start": 1027,
        "end": 1167
      },
      "start": 1027,
      "end": 1168
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1170,
            "end": 1176
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1177,
            "end": 1183
          },
          "optional": false,
          "computed": false,
          "start": 1170,
          "end": 1183
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1184,
            "end": 1193
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Reflect",
                        "start": 1205,
                        "end": 1212
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "apply",
                        "start": 1213,
                        "end": 1218
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1205,
                      "end": 1218
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "fn",
                        "start": 1219,
                        "end": 1221
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 1223,
                        "end": 1227
                      },
                      {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1229,
                        "end": 1230
                      }
                    ],
                    "optional": false,
                    "start": 1205,
                    "end": 1231
                  },
                  "start": 1205,
                  "end": 1232
                }
              ],
              "start": 1201,
              "end": 1234
            },
            "id": null,
            "generator": false,
            "start": 1195,
            "end": 1234
          },
          {
            "type": "Literal",
            "value": "`Reflect.apply(fn, null, 1)` throws a TypeError exception",
            "raw": "'`Reflect.apply(fn, null, 1)` throws a TypeError exception'",
            "start": 1236,
            "end": 1295
          }
        ],
        "optional": false,
        "start": 1170,
        "end": 1296
      },
      "start": 1170,
      "end": 1297
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1299,
            "end": 1305
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1306,
            "end": 1312
          },
          "optional": false,
          "computed": false,
          "start": 1299,
          "end": 1312
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1313,
            "end": 1322
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Reflect",
                        "start": 1334,
                        "end": 1341
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "apply",
                        "start": 1342,
                        "end": 1347
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1334,
                      "end": 1347
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "fn",
                        "start": 1348,
                        "end": 1350
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 1352,
                        "end": 1356
                      },
                      {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 1358,
                        "end": 1366
                      }
                    ],
                    "optional": false,
                    "start": 1334,
                    "end": 1367
                  },
                  "start": 1334,
                  "end": 1368
                }
              ],
              "start": 1330,
              "end": 1370
            },
            "id": null,
            "generator": false,
            "start": 1324,
            "end": 1370
          },
          {
            "type": "Literal",
            "value": "`Reflect.apply(fn, null, Infinity)` throws a TypeError exception",
            "raw": "'`Reflect.apply(fn, null, Infinity)` throws a TypeError exception'",
            "start": 1372,
            "end": 1438
          }
        ],
        "optional": false,
        "start": 1299,
        "end": 1439
      },
      "start": 1299,
      "end": 1440
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1442,
            "end": 1448
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1449,
            "end": 1455
          },
          "optional": false,
          "computed": false,
          "start": 1442,
          "end": 1455
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1456,
            "end": 1465
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Reflect",
                        "start": 1477,
                        "end": 1484
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "apply",
                        "start": 1485,
                        "end": 1490
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1477,
                      "end": 1490
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "fn",
                        "start": 1491,
                        "end": 1493
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 1495,
                        "end": 1499
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 1501,
                        "end": 1505
                      }
                    ],
                    "optional": false,
                    "start": 1477,
                    "end": 1506
                  },
                  "start": 1477,
                  "end": 1507
                }
              ],
              "start": 1473,
              "end": 1509
            },
            "id": null,
            "generator": false,
            "start": 1467,
            "end": 1509
          },
          {
            "type": "Literal",
            "value": "`Reflect.apply(fn, null, null)` throws a TypeError exception",
            "raw": "'`Reflect.apply(fn, null, null)` throws a TypeError exception'",
            "start": 1511,
            "end": 1573
          }
        ],
        "optional": false,
        "start": 1442,
        "end": 1574
      },
      "start": 1442,
      "end": 1575
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1577,
            "end": 1583
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1584,
            "end": 1590
          },
          "optional": false,
          "computed": false,
          "start": 1577,
          "end": 1590
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1591,
            "end": 1600
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Reflect",
                        "start": 1612,
                        "end": 1619
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "apply",
                        "start": 1620,
                        "end": 1625
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1612,
                      "end": 1625
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "fn",
                        "start": 1626,
                        "end": 1628
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 1630,
                        "end": 1634
                      },
                      {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 1636,
                        "end": 1645
                      }
                    ],
                    "optional": false,
                    "start": 1612,
                    "end": 1646
                  },
                  "start": 1612,
                  "end": 1647
                }
              ],
              "start": 1608,
              "end": 1649
            },
            "id": null,
            "generator": false,
            "start": 1602,
            "end": 1649
          },
          {
            "type": "Literal",
            "value": "`Reflect.apply(fn, null, undefined)` throws a TypeError exception",
            "raw": "'`Reflect.apply(fn, null, undefined)` throws a TypeError exception'",
            "start": 1651,
            "end": 1718
          }
        ],
        "optional": false,
        "start": 1577,
        "end": 1719
      },
      "start": 1577,
      "end": 1720
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1722,
            "end": 1728
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1729,
            "end": 1735
          },
          "optional": false,
          "computed": false,
          "start": 1722,
          "end": 1735
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1736,
            "end": 1745
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Reflect",
                        "start": 1757,
                        "end": 1764
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "apply",
                        "start": 1765,
                        "end": 1770
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1757,
                      "end": 1770
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "fn",
                        "start": 1771,
                        "end": 1773
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 1775,
                        "end": 1779
                      },
                      {
                        "type": "Literal",
                        "value": false,
                        "raw": "false",
                        "start": 1781,
                        "end": 1786
                      }
                    ],
                    "optional": false,
                    "start": 1757,
                    "end": 1787
                  },
                  "start": 1757,
                  "end": 1788
                }
              ],
              "start": 1753,
              "end": 1790
            },
            "id": null,
            "generator": false,
            "start": 1747,
            "end": 1790
          },
          {
            "type": "Literal",
            "value": "`Reflect.apply(fn, null, false)` throws a TypeError exception",
            "raw": "'`Reflect.apply(fn, null, false)` throws a TypeError exception'",
            "start": 1792,
            "end": 1855
          }
        ],
        "optional": false,
        "start": 1722,
        "end": 1856
      },
      "start": 1722,
      "end": 1857
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1859,
            "end": 1865
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1866,
            "end": 1872
          },
          "optional": false,
          "computed": false,
          "start": 1859,
          "end": 1872
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1873,
            "end": 1882
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Reflect",
                        "start": 1894,
                        "end": 1901
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "apply",
                        "start": 1902,
                        "end": 1907
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1894,
                      "end": 1907
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "fn",
                        "start": 1908,
                        "end": 1910
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 1912,
                        "end": 1916
                      },
                      {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 1918,
                        "end": 1922
                      }
                    ],
                    "optional": false,
                    "start": 1894,
                    "end": 1923
                  },
                  "start": 1894,
                  "end": 1924
                }
              ],
              "start": 1890,
              "end": 1926
            },
            "id": null,
            "generator": false,
            "start": 1884,
            "end": 1926
          },
          {
            "type": "Literal",
            "value": "`Reflect.apply(fn, null, true)` throws a TypeError exception",
            "raw": "'`Reflect.apply(fn, null, true)` throws a TypeError exception'",
            "start": 1928,
            "end": 1990
          }
        ],
        "optional": false,
        "start": 1859,
        "end": 1991
      },
      "start": 1859,
      "end": 1992
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1994,
            "end": 2000
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 2001,
            "end": 2007
          },
          "optional": false,
          "computed": false,
          "start": 1994,
          "end": 2007
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 2008,
            "end": 2017
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Reflect",
                        "start": 2029,
                        "end": 2036
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "apply",
                        "start": 2037,
                        "end": 2042
                      },
                      "optional": false,
                      "computed": false,
                      "start": 2029,
                      "end": 2042
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "fn",
                        "start": 2043,
                        "end": 2045
                      },
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 2047,
                        "end": 2051
                      },
                      {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 2053,
                        "end": 2056
                      }
                    ],
                    "optional": false,
                    "start": 2029,
                    "end": 2057
                  },
                  "start": 2029,
                  "end": 2058
                }
              ],
              "start": 2025,
              "end": 2060
            },
            "id": null,
            "generator": false,
            "start": 2019,
            "end": 2060
          },
          {
            "type": "Literal",
            "value": "`Reflect.apply(fn, null, NaN)` throws a TypeError exception",
            "raw": "'`Reflect.apply(fn, null, NaN)` throws a TypeError exception'",
            "start": 2062,
            "end": 2123
          }
        ],
        "optional": false,
        "start": 1994,
        "end": 2124
      },
      "start": 1994,
      "end": 2125
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2128,
            "end": 2134
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2135,
            "end": 2144
          },
          "optional": false,
          "computed": false,
          "start": 2128,
          "end": 2144
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "count",
            "start": 2145,
            "end": 2150
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 2152,
            "end": 2153
          },
          {
            "type": "Literal",
            "value": "The value of `count` is 0",
            "raw": "'The value of `count` is 0'",
            "start": 2155,
            "end": 2182
          }
        ],
        "optional": false,
        "start": 2128,
        "end": 2183
      },
      "start": 2128,
      "end": 2184
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2185
}