{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "first",
            "start": 517,
            "end": 522
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 525,
            "end": 529
          },
          "start": 517,
          "end": 529
        }
      ],
      "start": 513,
      "end": 530
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "v",
            "start": 535,
            "end": 536
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Symbol",
                    "start": 544,
                    "end": 550
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "toPrimitive",
                    "start": 551,
                    "end": 562
                  },
                  "optional": false,
                  "computed": false,
                  "start": 544,
                  "end": 562
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "Identifier",
                          "name": "first",
                          "start": 586,
                          "end": 591
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "first",
                                  "start": 601,
                                  "end": 606
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": false,
                                  "raw": "false",
                                  "start": 609,
                                  "end": 614
                                },
                                "start": 601,
                                "end": 614
                              },
                              "start": 601,
                              "end": 615
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Literal",
                                "value": "42",
                                "raw": "\"42\"",
                                "start": 629,
                                "end": 633
                              },
                              "start": 622,
                              "end": 634
                            }
                          ],
                          "start": 593,
                          "end": 640
                        },
                        "alternate": null,
                        "start": 582,
                        "end": 640
                      },
                      {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Test262Error",
                            "start": 655,
                            "end": 667
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "Symbol.toPrimitive should only be invoked once",
                              "raw": "\"Symbol.toPrimitive should only be invoked once\"",
                              "start": 668,
                              "end": 716
                            }
                          ],
                          "start": 651,
                          "end": 717
                        },
                        "start": 645,
                        "end": 718
                      }
                    ],
                    "start": 576,
                    "end": 722
                  },
                  "expression": false,
                  "start": 565,
                  "end": 722
                },
                "method": false,
                "shorthand": false,
                "computed": true,
                "start": 543,
                "end": 722
              }
            ],
            "start": 539,
            "end": 725
          },
          "start": 535,
          "end": 725
        }
      ],
      "start": 531,
      "end": 726
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 728,
            "end": 734
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 735,
            "end": 744
          },
          "optional": false,
          "computed": false,
          "start": 728,
          "end": 744
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "BigInt",
              "start": 745,
              "end": 751
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "v",
                "start": 752,
                "end": 753
              }
            ],
            "optional": false,
            "start": 745,
            "end": 754
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "42n",
            "bigint": "42",
            "start": 756,
            "end": 759
          },
          {
            "type": "Literal",
            "value": "BigInt constructor should use the post-ToPrimitive value as the argument to ToBigInt",
            "raw": "\"BigInt constructor should use the post-ToPrimitive value as the argument to ToBigInt\"",
            "start": 761,
            "end": 847
          }
        ],
        "optional": false,
        "start": 728,
        "end": 848
      },
      "start": 728,
      "end": 849
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 850
}