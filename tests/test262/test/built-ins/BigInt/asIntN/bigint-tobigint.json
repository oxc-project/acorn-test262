{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 322,
            "end": 328
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 329,
            "end": 338
          },
          "optional": false,
          "computed": false,
          "start": 322,
          "end": 338
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 339,
                "end": 345
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 346,
                "end": 352
              },
              "optional": false,
              "computed": false,
              "start": 339,
              "end": 352
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 353,
                "end": 354
              },
              {
                "type": "Literal",
                "value": null,
                "raw": "0n",
                "bigint": "0",
                "start": 356,
                "end": 358
              }
            ],
            "optional": false,
            "start": 339,
            "end": 359
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 361,
            "end": 363
          }
        ],
        "optional": false,
        "start": 322,
        "end": 364
      },
      "start": 322,
      "end": 365
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 366,
            "end": 372
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 373,
            "end": 382
          },
          "optional": false,
          "computed": false,
          "start": 366,
          "end": 382
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 383,
                "end": 389
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 390,
                "end": 396
              },
              "optional": false,
              "computed": false,
              "start": 383,
              "end": 396
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 397,
                "end": 398
              },
              {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": null,
                  "raw": "0n",
                  "bigint": "0",
                  "start": 401,
                  "end": 403
                },
                "prefix": true,
                "start": 400,
                "end": 403
              }
            ],
            "optional": false,
            "start": 383,
            "end": 404
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 406,
            "end": 408
          }
        ],
        "optional": false,
        "start": 366,
        "end": 409
      },
      "start": 366,
      "end": 410
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 411,
            "end": 417
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 418,
            "end": 427
          },
          "optional": false,
          "computed": false,
          "start": 411,
          "end": 427
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 428,
                "end": 434
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 435,
                "end": 441
              },
              "optional": false,
              "computed": false,
              "start": 428,
              "end": 441
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 442,
                "end": 443
              },
              {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 445,
                "end": 450
              }
            ],
            "optional": false,
            "start": 428,
            "end": 451
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 453,
            "end": 455
          },
          {
            "type": "Literal",
            "value": "ToBigInt: false => 0n",
            "raw": "\"ToBigInt: false => 0n\"",
            "start": 457,
            "end": 480
          }
        ],
        "optional": false,
        "start": 411,
        "end": 481
      },
      "start": 411,
      "end": 482
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 483,
            "end": 489
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 490,
            "end": 499
          },
          "optional": false,
          "computed": false,
          "start": 483,
          "end": 499
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 500,
                "end": 506
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 507,
                "end": 513
              },
              "optional": false,
              "computed": false,
              "start": 500,
              "end": 513
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 514,
                "end": 515
              },
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 517,
                "end": 521
              }
            ],
            "optional": false,
            "start": 500,
            "end": 522
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 524,
            "end": 526
          },
          {
            "type": "Literal",
            "value": "ToBigInt: true => 1n",
            "raw": "\"ToBigInt: true => 1n\"",
            "start": 528,
            "end": 550
          }
        ],
        "optional": false,
        "start": 483,
        "end": 551
      },
      "start": 483,
      "end": 552
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 553,
            "end": 559
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 560,
            "end": 569
          },
          "optional": false,
          "computed": false,
          "start": 553,
          "end": 569
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 570,
                "end": 576
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 577,
                "end": 583
              },
              "optional": false,
              "computed": false,
              "start": 570,
              "end": 583
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 584,
                "end": 585
              },
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 587,
                "end": 590
              }
            ],
            "optional": false,
            "start": 570,
            "end": 591
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 593,
            "end": 595
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt",
            "raw": "\"ToBigInt: parse BigInt\"",
            "start": 597,
            "end": 621
          }
        ],
        "optional": false,
        "start": 553,
        "end": 622
      },
      "start": 553,
      "end": 623
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 624,
            "end": 630
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 631,
            "end": 640
          },
          "optional": false,
          "computed": false,
          "start": 624,
          "end": 640
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 641,
                "end": 647
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 648,
                "end": 654
              },
              "optional": false,
              "computed": false,
              "start": 641,
              "end": 654
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 655,
                "end": 656
              },
              {
                "type": "Literal",
                "value": "-0",
                "raw": "\"-0\"",
                "start": 658,
                "end": 662
              }
            ],
            "optional": false,
            "start": 641,
            "end": 663
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 665,
            "end": 667
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt",
            "raw": "\"ToBigInt: parse BigInt\"",
            "start": 669,
            "end": 693
          }
        ],
        "optional": false,
        "start": 624,
        "end": 694
      },
      "start": 624,
      "end": 695
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 696,
            "end": 702
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 703,
            "end": 712
          },
          "optional": false,
          "computed": false,
          "start": 696,
          "end": 712
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 713,
                "end": 719
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 720,
                "end": 726
              },
              "optional": false,
              "computed": false,
              "start": 713,
              "end": 726
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 727,
                "end": 728
              },
              {
                "type": "Literal",
                "value": "",
                "raw": "\"\"",
                "start": 730,
                "end": 732
              }
            ],
            "optional": false,
            "start": 713,
            "end": 733
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 735,
            "end": 737
          },
          {
            "type": "Literal",
            "value": "ToBigInt: empty String => 0n",
            "raw": "\"ToBigInt: empty String => 0n\"",
            "start": 739,
            "end": 769
          }
        ],
        "optional": false,
        "start": 696,
        "end": 770
      },
      "start": 696,
      "end": 771
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 772,
            "end": 778
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 779,
            "end": 788
          },
          "optional": false,
          "computed": false,
          "start": 772,
          "end": 788
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 789,
                "end": 795
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 796,
                "end": 802
              },
              "optional": false,
              "computed": false,
              "start": 789,
              "end": 802
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 803,
                "end": 804
              },
              {
                "type": "Literal",
                "value": "     ",
                "raw": "\"     \"",
                "start": 806,
                "end": 813
              }
            ],
            "optional": false,
            "start": 789,
            "end": 814
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 816,
            "end": 818
          },
          {
            "type": "Literal",
            "value": "ToBigInt: String with only whitespace => 0n",
            "raw": "\"ToBigInt: String with only whitespace => 0n\"",
            "start": 820,
            "end": 865
          }
        ],
        "optional": false,
        "start": 772,
        "end": 866
      },
      "start": 772,
      "end": 867
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 868,
            "end": 874
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 875,
            "end": 884
          },
          "optional": false,
          "computed": false,
          "start": 868,
          "end": 884
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 885,
                "end": 891
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 892,
                "end": 898
              },
              "optional": false,
              "computed": false,
              "start": 885,
              "end": 898
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 899,
                "end": 900
              },
              {
                "type": "ArrayExpression",
                "elements": [],
                "start": 902,
                "end": 904
              }
            ],
            "optional": false,
            "start": 885,
            "end": 905
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 907,
            "end": 909
          },
          {
            "type": "Literal",
            "value": "ToBigInt: .toString() => empty String => 0n",
            "raw": "\"ToBigInt: .toString() => empty String => 0n\"",
            "start": 911,
            "end": 956
          }
        ],
        "optional": false,
        "start": 868,
        "end": 957
      },
      "start": 868,
      "end": 958
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 959,
            "end": 965
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 966,
            "end": 975
          },
          "optional": false,
          "computed": false,
          "start": 959,
          "end": 975
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 976,
                "end": 982
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 983,
                "end": 989
              },
              "optional": false,
              "computed": false,
              "start": 976,
              "end": 989
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 990,
                "end": 991
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 994,
                    "end": 995
                  }
                ],
                "start": 993,
                "end": 996
              }
            ],
            "optional": false,
            "start": 976,
            "end": 997
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 999,
            "end": 1001
          },
          {
            "type": "Literal",
            "value": "ToBigInt: .toString() => parse BigInt",
            "raw": "\"ToBigInt: .toString() => parse BigInt\"",
            "start": 1003,
            "end": 1042
          }
        ],
        "optional": false,
        "start": 959,
        "end": 1043
      },
      "start": 959,
      "end": 1044
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1045,
            "end": 1051
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1052,
            "end": 1061
          },
          "optional": false,
          "computed": false,
          "start": 1045,
          "end": 1061
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1062,
                "end": 1068
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 1069,
                "end": 1075
              },
              "optional": false,
              "computed": false,
              "start": 1062,
              "end": 1075
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1076,
                "end": 1077
              },
              {
                "type": "Literal",
                "value": null,
                "raw": "10n",
                "bigint": "10",
                "start": 1079,
                "end": 1082
              }
            ],
            "optional": false,
            "start": 1062,
            "end": 1083
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1085,
            "end": 1087
          }
        ],
        "optional": false,
        "start": 1045,
        "end": 1088
      },
      "start": 1045,
      "end": 1089
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1090,
            "end": 1096
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1097,
            "end": 1106
          },
          "optional": false,
          "computed": false,
          "start": 1090,
          "end": 1106
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1107,
                "end": 1113
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 1114,
                "end": 1120
              },
              "optional": false,
              "computed": false,
              "start": 1107,
              "end": 1120
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1121,
                "end": 1122
              },
              {
                "type": "Literal",
                "value": "10",
                "raw": "\"10\"",
                "start": 1124,
                "end": 1128
              }
            ],
            "optional": false,
            "start": 1107,
            "end": 1129
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1131,
            "end": 1133
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt",
            "raw": "\"ToBigInt: parse BigInt\"",
            "start": 1135,
            "end": 1159
          }
        ],
        "optional": false,
        "start": 1090,
        "end": 1160
      },
      "start": 1090,
      "end": 1161
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1162,
            "end": 1168
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1169,
            "end": 1178
          },
          "optional": false,
          "computed": false,
          "start": 1162,
          "end": 1178
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1179,
                "end": 1185
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 1186,
                "end": 1192
              },
              "optional": false,
              "computed": false,
              "start": 1179,
              "end": 1192
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1193,
                "end": 1194
              },
              {
                "type": "Literal",
                "value": "0b1010",
                "raw": "\"0b1010\"",
                "start": 1196,
                "end": 1204
              }
            ],
            "optional": false,
            "start": 1179,
            "end": 1205
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1207,
            "end": 1209
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt binary",
            "raw": "\"ToBigInt: parse BigInt binary\"",
            "start": 1211,
            "end": 1242
          }
        ],
        "optional": false,
        "start": 1162,
        "end": 1243
      },
      "start": 1162,
      "end": 1244
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1245,
            "end": 1251
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1252,
            "end": 1261
          },
          "optional": false,
          "computed": false,
          "start": 1245,
          "end": 1261
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1262,
                "end": 1268
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 1269,
                "end": 1275
              },
              "optional": false,
              "computed": false,
              "start": 1262,
              "end": 1275
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1276,
                "end": 1277
              },
              {
                "type": "Literal",
                "value": "0o12",
                "raw": "\"0o12\"",
                "start": 1279,
                "end": 1285
              }
            ],
            "optional": false,
            "start": 1262,
            "end": 1286
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1288,
            "end": 1290
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt octal",
            "raw": "\"ToBigInt: parse BigInt octal\"",
            "start": 1292,
            "end": 1322
          }
        ],
        "optional": false,
        "start": 1245,
        "end": 1323
      },
      "start": 1245,
      "end": 1324
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1325,
            "end": 1331
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1332,
            "end": 1341
          },
          "optional": false,
          "computed": false,
          "start": 1325,
          "end": 1341
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1342,
                "end": 1348
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 1349,
                "end": 1355
              },
              "optional": false,
              "computed": false,
              "start": 1342,
              "end": 1355
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1356,
                "end": 1357
              },
              {
                "type": "Literal",
                "value": "0xa",
                "raw": "\"0xa\"",
                "start": 1359,
                "end": 1364
              }
            ],
            "optional": false,
            "start": 1342,
            "end": 1365
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1367,
            "end": 1369
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt hex",
            "raw": "\"ToBigInt: parse BigInt hex\"",
            "start": 1371,
            "end": 1399
          }
        ],
        "optional": false,
        "start": 1325,
        "end": 1400
      },
      "start": 1325,
      "end": 1401
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1402,
            "end": 1408
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1409,
            "end": 1418
          },
          "optional": false,
          "computed": false,
          "start": 1402,
          "end": 1418
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1419,
                "end": 1425
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 1426,
                "end": 1432
              },
              "optional": false,
              "computed": false,
              "start": 1419,
              "end": 1432
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1433,
                "end": 1434
              },
              {
                "type": "Literal",
                "value": "    0xa    ",
                "raw": "\"    0xa    \"",
                "start": 1436,
                "end": 1449
              }
            ],
            "optional": false,
            "start": 1419,
            "end": 1450
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1452,
            "end": 1454
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt ignore leading/trailing whitespace",
            "raw": "\"ToBigInt: parse BigInt ignore leading/trailing whitespace\"",
            "start": 1458,
            "end": 1517
          }
        ],
        "optional": false,
        "start": 1402,
        "end": 1518
      },
      "start": 1402,
      "end": 1519
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1520,
            "end": 1526
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1527,
            "end": 1536
          },
          "optional": false,
          "computed": false,
          "start": 1520,
          "end": 1536
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1537,
                "end": 1543
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 1544,
                "end": 1550
              },
              "optional": false,
              "computed": false,
              "start": 1537,
              "end": 1550
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1551,
                "end": 1552
              },
              {
                "type": "Literal",
                "value": "     10     ",
                "raw": "\"     10     \"",
                "start": 1554,
                "end": 1568
              }
            ],
            "optional": false,
            "start": 1537,
            "end": 1569
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1571,
            "end": 1573
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt ignore leading/trailing whitespace",
            "raw": "\"ToBigInt: parse BigInt ignore leading/trailing whitespace\"",
            "start": 1577,
            "end": 1636
          }
        ],
        "optional": false,
        "start": 1520,
        "end": 1637
      },
      "start": 1520,
      "end": 1638
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1639,
            "end": 1645
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1646,
            "end": 1655
          },
          "optional": false,
          "computed": false,
          "start": 1639,
          "end": 1655
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1656,
                "end": 1662
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 1663,
                "end": 1669
              },
              "optional": false,
              "computed": false,
              "start": 1656,
              "end": 1669
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1670,
                "end": 1671
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": null,
                    "raw": "10n",
                    "bigint": "10",
                    "start": 1674,
                    "end": 1677
                  }
                ],
                "start": 1673,
                "end": 1678
              }
            ],
            "optional": false,
            "start": 1656,
            "end": 1679
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1681,
            "end": 1683
          },
          {
            "type": "Literal",
            "value": "ToBigInt: .toString() => parse BigInt",
            "raw": "\"ToBigInt: .toString() => parse BigInt\"",
            "start": 1685,
            "end": 1724
          }
        ],
        "optional": false,
        "start": 1639,
        "end": 1725
      },
      "start": 1639,
      "end": 1726
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1727,
            "end": 1733
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1734,
            "end": 1743
          },
          "optional": false,
          "computed": false,
          "start": 1727,
          "end": 1743
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1744,
                "end": 1750
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 1751,
                "end": 1757
              },
              "optional": false,
              "computed": false,
              "start": 1744,
              "end": 1757
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1758,
                "end": 1759
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "10",
                    "raw": "\"10\"",
                    "start": 1762,
                    "end": 1766
                  }
                ],
                "start": 1761,
                "end": 1767
              }
            ],
            "optional": false,
            "start": 1744,
            "end": 1768
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1770,
            "end": 1772
          },
          {
            "type": "Literal",
            "value": "ToBigInt: .toString() => parse BigInt",
            "raw": "\"ToBigInt: .toString() => parse BigInt\"",
            "start": 1774,
            "end": 1813
          }
        ],
        "optional": false,
        "start": 1727,
        "end": 1814
      },
      "start": 1727,
      "end": 1815
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1816,
            "end": 1822
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1823,
            "end": 1832
          },
          "optional": false,
          "computed": false,
          "start": 1816,
          "end": 1832
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1833,
                "end": 1839
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 1840,
                "end": 1846
              },
              "optional": false,
              "computed": false,
              "start": 1833,
              "end": 1846
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 1847,
                "end": 1848
              },
              {
                "type": "Literal",
                "value": null,
                "raw": "12345678901234567890003n",
                "bigint": "12345678901234567890003",
                "start": 1850,
                "end": 1874
              }
            ],
            "optional": false,
            "start": 1833,
            "end": 1875
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 1877,
            "end": 1879
          }
        ],
        "optional": false,
        "start": 1816,
        "end": 1880
      },
      "start": 1816,
      "end": 1881
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1882,
            "end": 1888
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1889,
            "end": 1898
          },
          "optional": false,
          "computed": false,
          "start": 1882,
          "end": 1898
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1899,
                "end": 1905
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 1906,
                "end": 1912
              },
              "optional": false,
              "computed": false,
              "start": 1899,
              "end": 1912
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 1913,
                "end": 1914
              },
              {
                "type": "Literal",
                "value": "12345678901234567890003",
                "raw": "\"12345678901234567890003\"",
                "start": 1916,
                "end": 1941
              }
            ],
            "optional": false,
            "start": 1899,
            "end": 1942
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 1944,
            "end": 1946
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt",
            "raw": "\"ToBigInt: parse BigInt\"",
            "start": 1948,
            "end": 1972
          }
        ],
        "optional": false,
        "start": 1882,
        "end": 1973
      },
      "start": 1882,
      "end": 1974
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1975,
            "end": 1981
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1982,
            "end": 1991
          },
          "optional": false,
          "computed": false,
          "start": 1975,
          "end": 1991
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1992,
                "end": 1998
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 1999,
                "end": 2005
              },
              "optional": false,
              "computed": false,
              "start": 1992,
              "end": 2005
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2006,
                "end": 2007
              },
              {
                "type": "Literal",
                "value": "0b10100111010100001010110110010011100111011001110001010000100100010001010011",
                "raw": "\"0b10100111010100001010110110010011100111011001110001010000100100010001010011\"",
                "start": 2013,
                "end": 2091
              }
            ],
            "optional": false,
            "start": 1992,
            "end": 2092
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2094,
            "end": 2096
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt binary",
            "raw": "\"ToBigInt: parse BigInt binary\"",
            "start": 2100,
            "end": 2131
          }
        ],
        "optional": false,
        "start": 1975,
        "end": 2132
      },
      "start": 1975,
      "end": 2133
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2134,
            "end": 2140
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2141,
            "end": 2150
          },
          "optional": false,
          "computed": false,
          "start": 2134,
          "end": 2150
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2151,
                "end": 2157
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 2158,
                "end": 2164
              },
              "optional": false,
              "computed": false,
              "start": 2151,
              "end": 2164
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2165,
                "end": 2166
              },
              {
                "type": "Literal",
                "value": "0o2472412662347316120442123",
                "raw": "\"0o2472412662347316120442123\"",
                "start": 2168,
                "end": 2197
              }
            ],
            "optional": false,
            "start": 2151,
            "end": 2198
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2200,
            "end": 2202
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt octal",
            "raw": "\"ToBigInt: parse BigInt octal\"",
            "start": 2206,
            "end": 2236
          }
        ],
        "optional": false,
        "start": 2134,
        "end": 2237
      },
      "start": 2134,
      "end": 2238
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2239,
            "end": 2245
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2246,
            "end": 2255
          },
          "optional": false,
          "computed": false,
          "start": 2239,
          "end": 2255
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2256,
                "end": 2262
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 2263,
                "end": 2269
              },
              "optional": false,
              "computed": false,
              "start": 2256,
              "end": 2269
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2270,
                "end": 2271
              },
              {
                "type": "Literal",
                "value": "0x29d42b64e7671424453",
                "raw": "\"0x29d42b64e7671424453\"",
                "start": 2273,
                "end": 2296
              }
            ],
            "optional": false,
            "start": 2256,
            "end": 2297
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2299,
            "end": 2301
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt hex",
            "raw": "\"ToBigInt: parse BigInt hex\"",
            "start": 2303,
            "end": 2331
          }
        ],
        "optional": false,
        "start": 2239,
        "end": 2332
      },
      "start": 2239,
      "end": 2333
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2334,
            "end": 2340
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2341,
            "end": 2350
          },
          "optional": false,
          "computed": false,
          "start": 2334,
          "end": 2350
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2351,
                "end": 2357
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 2358,
                "end": 2364
              },
              "optional": false,
              "computed": false,
              "start": 2351,
              "end": 2364
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2365,
                "end": 2366
              },
              {
                "type": "Literal",
                "value": "    0x29d42b64e7671424453    ",
                "raw": "\"    0x29d42b64e7671424453    \"",
                "start": 2368,
                "end": 2399
              }
            ],
            "optional": false,
            "start": 2351,
            "end": 2400
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2402,
            "end": 2404
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt ignore leading/trailing whitespace",
            "raw": "\"ToBigInt: parse BigInt ignore leading/trailing whitespace\"",
            "start": 2408,
            "end": 2467
          }
        ],
        "optional": false,
        "start": 2334,
        "end": 2468
      },
      "start": 2334,
      "end": 2469
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2470,
            "end": 2476
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2477,
            "end": 2486
          },
          "optional": false,
          "computed": false,
          "start": 2470,
          "end": 2486
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2487,
                "end": 2493
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 2494,
                "end": 2500
              },
              "optional": false,
              "computed": false,
              "start": 2487,
              "end": 2500
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2501,
                "end": 2502
              },
              {
                "type": "Literal",
                "value": "     12345678901234567890003     ",
                "raw": "\"     12345678901234567890003     \"",
                "start": 2504,
                "end": 2539
              }
            ],
            "optional": false,
            "start": 2487,
            "end": 2540
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2542,
            "end": 2544
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt ignore leading/trailing whitespace",
            "raw": "\"ToBigInt: parse BigInt ignore leading/trailing whitespace\"",
            "start": 2548,
            "end": 2607
          }
        ],
        "optional": false,
        "start": 2470,
        "end": 2608
      },
      "start": 2470,
      "end": 2609
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2610,
            "end": 2616
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2617,
            "end": 2626
          },
          "optional": false,
          "computed": false,
          "start": 2610,
          "end": 2626
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2627,
                "end": 2633
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 2634,
                "end": 2640
              },
              "optional": false,
              "computed": false,
              "start": 2627,
              "end": 2640
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2641,
                "end": 2642
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": null,
                    "raw": "12345678901234567890003n",
                    "bigint": "12345678901234567890003",
                    "start": 2645,
                    "end": 2669
                  }
                ],
                "start": 2644,
                "end": 2670
              }
            ],
            "optional": false,
            "start": 2627,
            "end": 2671
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2673,
            "end": 2675
          },
          {
            "type": "Literal",
            "value": "ToBigInt: .toString() => parse BigInt",
            "raw": "\"ToBigInt: .toString() => parse BigInt\"",
            "start": 2679,
            "end": 2718
          }
        ],
        "optional": false,
        "start": 2610,
        "end": 2719
      },
      "start": 2610,
      "end": 2720
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2721,
            "end": 2727
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2728,
            "end": 2737
          },
          "optional": false,
          "computed": false,
          "start": 2721,
          "end": 2737
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2738,
                "end": 2744
              },
              "property": {
                "type": "Identifier",
                "name": "asIntN",
                "start": 2745,
                "end": 2751
              },
              "optional": false,
              "computed": false,
              "start": 2738,
              "end": 2751
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2752,
                "end": 2753
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "12345678901234567890003",
                    "raw": "\"12345678901234567890003\"",
                    "start": 2756,
                    "end": 2781
                  }
                ],
                "start": 2755,
                "end": 2782
              }
            ],
            "optional": false,
            "start": 2738,
            "end": 2783
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2785,
            "end": 2787
          },
          {
            "type": "Literal",
            "value": "ToBigInt: .toString() => parse BigInt",
            "raw": "\"ToBigInt: .toString() => parse BigInt\"",
            "start": 2791,
            "end": 2830
          }
        ],
        "optional": false,
        "start": 2721,
        "end": 2831
      },
      "start": 2721,
      "end": 2832
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2833
}