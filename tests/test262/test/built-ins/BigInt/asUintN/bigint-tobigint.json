{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 325,
            "end": 331
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 332,
            "end": 341
          },
          "optional": false,
          "computed": false,
          "start": 325,
          "end": 341
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 342,
                "end": 348
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 349,
                "end": 356
              },
              "optional": false,
              "computed": false,
              "start": 342,
              "end": 356
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 357,
                "end": 358
              },
              {
                "type": "Literal",
                "value": null,
                "raw": "0n",
                "bigint": "0",
                "start": 360,
                "end": 362
              }
            ],
            "optional": false,
            "start": 342,
            "end": 363
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 365,
            "end": 367
          }
        ],
        "optional": false,
        "start": 325,
        "end": 368
      },
      "start": 325,
      "end": 369
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 370,
            "end": 376
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 377,
            "end": 386
          },
          "optional": false,
          "computed": false,
          "start": 370,
          "end": 386
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 387,
                "end": 393
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 394,
                "end": 401
              },
              "optional": false,
              "computed": false,
              "start": 387,
              "end": 401
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 402,
                "end": 403
              },
              {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": null,
                  "raw": "0n",
                  "bigint": "0",
                  "start": 406,
                  "end": 408
                },
                "prefix": true,
                "start": 405,
                "end": 408
              }
            ],
            "optional": false,
            "start": 387,
            "end": 409
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 411,
            "end": 413
          }
        ],
        "optional": false,
        "start": 370,
        "end": 414
      },
      "start": 370,
      "end": 415
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 416,
            "end": 422
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 423,
            "end": 432
          },
          "optional": false,
          "computed": false,
          "start": 416,
          "end": 432
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 433,
                "end": 439
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 440,
                "end": 447
              },
              "optional": false,
              "computed": false,
              "start": 433,
              "end": 447
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 448,
                "end": 449
              },
              {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 451,
                "end": 456
              }
            ],
            "optional": false,
            "start": 433,
            "end": 457
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 459,
            "end": 461
          },
          {
            "type": "Literal",
            "value": "ToBigInt: false => 0n",
            "raw": "\"ToBigInt: false => 0n\"",
            "start": 463,
            "end": 486
          }
        ],
        "optional": false,
        "start": 416,
        "end": 487
      },
      "start": 416,
      "end": 488
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 489,
            "end": 495
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 496,
            "end": 505
          },
          "optional": false,
          "computed": false,
          "start": 489,
          "end": 505
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 506,
                "end": 512
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 513,
                "end": 520
              },
              "optional": false,
              "computed": false,
              "start": 506,
              "end": 520
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 521,
                "end": 522
              },
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 524,
                "end": 528
              }
            ],
            "optional": false,
            "start": 506,
            "end": 529
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 531,
            "end": 533
          },
          {
            "type": "Literal",
            "value": "ToBigInt: true => 1n",
            "raw": "\"ToBigInt: true => 1n\"",
            "start": 535,
            "end": 557
          }
        ],
        "optional": false,
        "start": 489,
        "end": 558
      },
      "start": 489,
      "end": 559
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 560,
            "end": 566
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 567,
            "end": 576
          },
          "optional": false,
          "computed": false,
          "start": 560,
          "end": 576
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 577,
                "end": 583
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 584,
                "end": 591
              },
              "optional": false,
              "computed": false,
              "start": 577,
              "end": 591
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 592,
                "end": 593
              },
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 595,
                "end": 598
              }
            ],
            "optional": false,
            "start": 577,
            "end": 599
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 601,
            "end": 603
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt",
            "raw": "\"ToBigInt: parse BigInt\"",
            "start": 605,
            "end": 629
          }
        ],
        "optional": false,
        "start": 560,
        "end": 630
      },
      "start": 560,
      "end": 631
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 632,
            "end": 638
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 639,
            "end": 648
          },
          "optional": false,
          "computed": false,
          "start": 632,
          "end": 648
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 649,
                "end": 655
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 656,
                "end": 663
              },
              "optional": false,
              "computed": false,
              "start": 649,
              "end": 663
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 664,
                "end": 665
              },
              {
                "type": "Literal",
                "value": "-0",
                "raw": "\"-0\"",
                "start": 667,
                "end": 671
              }
            ],
            "optional": false,
            "start": 649,
            "end": 672
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 674,
            "end": 676
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt",
            "raw": "\"ToBigInt: parse BigInt\"",
            "start": 678,
            "end": 702
          }
        ],
        "optional": false,
        "start": 632,
        "end": 703
      },
      "start": 632,
      "end": 704
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 705,
            "end": 711
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 712,
            "end": 721
          },
          "optional": false,
          "computed": false,
          "start": 705,
          "end": 721
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 722,
                "end": 728
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 729,
                "end": 736
              },
              "optional": false,
              "computed": false,
              "start": 722,
              "end": 736
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 737,
                "end": 738
              },
              {
                "type": "Literal",
                "value": "",
                "raw": "\"\"",
                "start": 740,
                "end": 742
              }
            ],
            "optional": false,
            "start": 722,
            "end": 743
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 745,
            "end": 747
          },
          {
            "type": "Literal",
            "value": "ToBigInt: empty String => 0n",
            "raw": "\"ToBigInt: empty String => 0n\"",
            "start": 749,
            "end": 779
          }
        ],
        "optional": false,
        "start": 705,
        "end": 780
      },
      "start": 705,
      "end": 781
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 782,
            "end": 788
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 789,
            "end": 798
          },
          "optional": false,
          "computed": false,
          "start": 782,
          "end": 798
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 799,
                "end": 805
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 806,
                "end": 813
              },
              "optional": false,
              "computed": false,
              "start": 799,
              "end": 813
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 814,
                "end": 815
              },
              {
                "type": "Literal",
                "value": "     ",
                "raw": "\"     \"",
                "start": 817,
                "end": 824
              }
            ],
            "optional": false,
            "start": 799,
            "end": 825
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 827,
            "end": 829
          },
          {
            "type": "Literal",
            "value": "ToBigInt: String with only whitespace => 0n",
            "raw": "\"ToBigInt: String with only whitespace => 0n\"",
            "start": 831,
            "end": 876
          }
        ],
        "optional": false,
        "start": 782,
        "end": 877
      },
      "start": 782,
      "end": 878
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 879,
            "end": 885
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 886,
            "end": 895
          },
          "optional": false,
          "computed": false,
          "start": 879,
          "end": 895
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 896,
                "end": 902
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 903,
                "end": 910
              },
              "optional": false,
              "computed": false,
              "start": 896,
              "end": 910
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 911,
                "end": 912
              },
              {
                "type": "ArrayExpression",
                "elements": [],
                "start": 914,
                "end": 916
              }
            ],
            "optional": false,
            "start": 896,
            "end": 917
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 919,
            "end": 921
          },
          {
            "type": "Literal",
            "value": "ToBigInt: .toString() => empty String => 0n",
            "raw": "\"ToBigInt: .toString() => empty String => 0n\"",
            "start": 923,
            "end": 968
          }
        ],
        "optional": false,
        "start": 879,
        "end": 969
      },
      "start": 879,
      "end": 970
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 971,
            "end": 977
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 978,
            "end": 987
          },
          "optional": false,
          "computed": false,
          "start": 971,
          "end": 987
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 988,
                "end": 994
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 995,
                "end": 1002
              },
              "optional": false,
              "computed": false,
              "start": 988,
              "end": 1002
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1003,
                "end": 1004
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1007,
                    "end": 1008
                  }
                ],
                "start": 1006,
                "end": 1009
              }
            ],
            "optional": false,
            "start": 988,
            "end": 1010
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 1012,
            "end": 1014
          },
          {
            "type": "Literal",
            "value": "ToBigInt: .toString() => parse BigInt",
            "raw": "\"ToBigInt: .toString() => parse BigInt\"",
            "start": 1016,
            "end": 1055
          }
        ],
        "optional": false,
        "start": 971,
        "end": 1056
      },
      "start": 971,
      "end": 1057
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1058,
            "end": 1064
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1065,
            "end": 1074
          },
          "optional": false,
          "computed": false,
          "start": 1058,
          "end": 1074
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1075,
                "end": 1081
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 1082,
                "end": 1089
              },
              "optional": false,
              "computed": false,
              "start": 1075,
              "end": 1089
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1090,
                "end": 1091
              },
              {
                "type": "Literal",
                "value": null,
                "raw": "10n",
                "bigint": "10",
                "start": 1093,
                "end": 1096
              }
            ],
            "optional": false,
            "start": 1075,
            "end": 1097
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1099,
            "end": 1101
          }
        ],
        "optional": false,
        "start": 1058,
        "end": 1102
      },
      "start": 1058,
      "end": 1103
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1104,
            "end": 1110
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1111,
            "end": 1120
          },
          "optional": false,
          "computed": false,
          "start": 1104,
          "end": 1120
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1121,
                "end": 1127
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 1128,
                "end": 1135
              },
              "optional": false,
              "computed": false,
              "start": 1121,
              "end": 1135
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1136,
                "end": 1137
              },
              {
                "type": "Literal",
                "value": "10",
                "raw": "\"10\"",
                "start": 1139,
                "end": 1143
              }
            ],
            "optional": false,
            "start": 1121,
            "end": 1144
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1146,
            "end": 1148
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt",
            "raw": "\"ToBigInt: parse BigInt\"",
            "start": 1150,
            "end": 1174
          }
        ],
        "optional": false,
        "start": 1104,
        "end": 1175
      },
      "start": 1104,
      "end": 1176
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1177,
            "end": 1183
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1184,
            "end": 1193
          },
          "optional": false,
          "computed": false,
          "start": 1177,
          "end": 1193
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1194,
                "end": 1200
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 1201,
                "end": 1208
              },
              "optional": false,
              "computed": false,
              "start": 1194,
              "end": 1208
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1209,
                "end": 1210
              },
              {
                "type": "Literal",
                "value": "0b1010",
                "raw": "\"0b1010\"",
                "start": 1212,
                "end": 1220
              }
            ],
            "optional": false,
            "start": 1194,
            "end": 1221
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1223,
            "end": 1225
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt binary",
            "raw": "\"ToBigInt: parse BigInt binary\"",
            "start": 1227,
            "end": 1258
          }
        ],
        "optional": false,
        "start": 1177,
        "end": 1259
      },
      "start": 1177,
      "end": 1260
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1261,
            "end": 1267
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1268,
            "end": 1277
          },
          "optional": false,
          "computed": false,
          "start": 1261,
          "end": 1277
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1278,
                "end": 1284
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 1285,
                "end": 1292
              },
              "optional": false,
              "computed": false,
              "start": 1278,
              "end": 1292
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1293,
                "end": 1294
              },
              {
                "type": "Literal",
                "value": "0o12",
                "raw": "\"0o12\"",
                "start": 1296,
                "end": 1302
              }
            ],
            "optional": false,
            "start": 1278,
            "end": 1303
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1305,
            "end": 1307
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt octal",
            "raw": "\"ToBigInt: parse BigInt octal\"",
            "start": 1309,
            "end": 1339
          }
        ],
        "optional": false,
        "start": 1261,
        "end": 1340
      },
      "start": 1261,
      "end": 1341
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1342,
            "end": 1348
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1349,
            "end": 1358
          },
          "optional": false,
          "computed": false,
          "start": 1342,
          "end": 1358
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1359,
                "end": 1365
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 1366,
                "end": 1373
              },
              "optional": false,
              "computed": false,
              "start": 1359,
              "end": 1373
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1374,
                "end": 1375
              },
              {
                "type": "Literal",
                "value": "0xa",
                "raw": "\"0xa\"",
                "start": 1377,
                "end": 1382
              }
            ],
            "optional": false,
            "start": 1359,
            "end": 1383
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1385,
            "end": 1387
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt hex",
            "raw": "\"ToBigInt: parse BigInt hex\"",
            "start": 1389,
            "end": 1417
          }
        ],
        "optional": false,
        "start": 1342,
        "end": 1418
      },
      "start": 1342,
      "end": 1419
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1420,
            "end": 1426
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1427,
            "end": 1436
          },
          "optional": false,
          "computed": false,
          "start": 1420,
          "end": 1436
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1437,
                "end": 1443
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 1444,
                "end": 1451
              },
              "optional": false,
              "computed": false,
              "start": 1437,
              "end": 1451
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1452,
                "end": 1453
              },
              {
                "type": "Literal",
                "value": "    0xa    ",
                "raw": "\"    0xa    \"",
                "start": 1455,
                "end": 1468
              }
            ],
            "optional": false,
            "start": 1437,
            "end": 1469
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1471,
            "end": 1473
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt ignore leading/trailing whitespace",
            "raw": "\"ToBigInt: parse BigInt ignore leading/trailing whitespace\"",
            "start": 1477,
            "end": 1536
          }
        ],
        "optional": false,
        "start": 1420,
        "end": 1537
      },
      "start": 1420,
      "end": 1538
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1539,
            "end": 1545
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1546,
            "end": 1555
          },
          "optional": false,
          "computed": false,
          "start": 1539,
          "end": 1555
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1556,
                "end": 1562
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 1563,
                "end": 1570
              },
              "optional": false,
              "computed": false,
              "start": 1556,
              "end": 1570
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1571,
                "end": 1572
              },
              {
                "type": "Literal",
                "value": "     10     ",
                "raw": "\"     10     \"",
                "start": 1574,
                "end": 1588
              }
            ],
            "optional": false,
            "start": 1556,
            "end": 1589
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1591,
            "end": 1593
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt ignore leading/trailing whitespace",
            "raw": "\"ToBigInt: parse BigInt ignore leading/trailing whitespace\"",
            "start": 1597,
            "end": 1656
          }
        ],
        "optional": false,
        "start": 1539,
        "end": 1657
      },
      "start": 1539,
      "end": 1658
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1659,
            "end": 1665
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1666,
            "end": 1675
          },
          "optional": false,
          "computed": false,
          "start": 1659,
          "end": 1675
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1676,
                "end": 1682
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 1683,
                "end": 1690
              },
              "optional": false,
              "computed": false,
              "start": 1676,
              "end": 1690
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1691,
                "end": 1692
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": null,
                    "raw": "10n",
                    "bigint": "10",
                    "start": 1695,
                    "end": 1698
                  }
                ],
                "start": 1694,
                "end": 1699
              }
            ],
            "optional": false,
            "start": 1676,
            "end": 1700
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1702,
            "end": 1704
          },
          {
            "type": "Literal",
            "value": "ToBigInt: .toString() => parse BigInt",
            "raw": "\"ToBigInt: .toString() => parse BigInt\"",
            "start": 1706,
            "end": 1745
          }
        ],
        "optional": false,
        "start": 1659,
        "end": 1746
      },
      "start": 1659,
      "end": 1747
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1748,
            "end": 1754
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1755,
            "end": 1764
          },
          "optional": false,
          "computed": false,
          "start": 1748,
          "end": 1764
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1765,
                "end": 1771
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 1772,
                "end": 1779
              },
              "optional": false,
              "computed": false,
              "start": 1765,
              "end": 1779
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1780,
                "end": 1781
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "10",
                    "raw": "\"10\"",
                    "start": 1784,
                    "end": 1788
                  }
                ],
                "start": 1783,
                "end": 1789
              }
            ],
            "optional": false,
            "start": 1765,
            "end": 1790
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 1792,
            "end": 1794
          },
          {
            "type": "Literal",
            "value": "ToBigInt: .toString() => parse BigInt",
            "raw": "\"ToBigInt: .toString() => parse BigInt\"",
            "start": 1796,
            "end": 1835
          }
        ],
        "optional": false,
        "start": 1748,
        "end": 1836
      },
      "start": 1748,
      "end": 1837
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1838,
            "end": 1844
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1845,
            "end": 1854
          },
          "optional": false,
          "computed": false,
          "start": 1838,
          "end": 1854
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1855,
                "end": 1861
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 1862,
                "end": 1869
              },
              "optional": false,
              "computed": false,
              "start": 1855,
              "end": 1869
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 1870,
                "end": 1871
              },
              {
                "type": "Literal",
                "value": null,
                "raw": "12345678901234567890003n",
                "bigint": "12345678901234567890003",
                "start": 1873,
                "end": 1897
              }
            ],
            "optional": false,
            "start": 1855,
            "end": 1898
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 1900,
            "end": 1902
          }
        ],
        "optional": false,
        "start": 1838,
        "end": 1903
      },
      "start": 1838,
      "end": 1904
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1905,
            "end": 1911
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1912,
            "end": 1921
          },
          "optional": false,
          "computed": false,
          "start": 1905,
          "end": 1921
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 1922,
                "end": 1928
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 1929,
                "end": 1936
              },
              "optional": false,
              "computed": false,
              "start": 1922,
              "end": 1936
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 1937,
                "end": 1938
              },
              {
                "type": "Literal",
                "value": "12345678901234567890003",
                "raw": "\"12345678901234567890003\"",
                "start": 1940,
                "end": 1965
              }
            ],
            "optional": false,
            "start": 1922,
            "end": 1966
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 1968,
            "end": 1970
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt",
            "raw": "\"ToBigInt: parse BigInt\"",
            "start": 1972,
            "end": 1996
          }
        ],
        "optional": false,
        "start": 1905,
        "end": 1997
      },
      "start": 1905,
      "end": 1998
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1999,
            "end": 2005
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2006,
            "end": 2015
          },
          "optional": false,
          "computed": false,
          "start": 1999,
          "end": 2015
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2016,
                "end": 2022
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 2023,
                "end": 2030
              },
              "optional": false,
              "computed": false,
              "start": 2016,
              "end": 2030
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2031,
                "end": 2032
              },
              {
                "type": "Literal",
                "value": "0b10100111010100001010110110010011100111011001110001010000100100010001010011",
                "raw": "\"0b10100111010100001010110110010011100111011001110001010000100100010001010011\"",
                "start": 2038,
                "end": 2116
              }
            ],
            "optional": false,
            "start": 2016,
            "end": 2117
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2119,
            "end": 2121
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt binary",
            "raw": "\"ToBigInt: parse BigInt binary\"",
            "start": 2125,
            "end": 2156
          }
        ],
        "optional": false,
        "start": 1999,
        "end": 2157
      },
      "start": 1999,
      "end": 2158
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2159,
            "end": 2165
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2166,
            "end": 2175
          },
          "optional": false,
          "computed": false,
          "start": 2159,
          "end": 2175
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2176,
                "end": 2182
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 2183,
                "end": 2190
              },
              "optional": false,
              "computed": false,
              "start": 2176,
              "end": 2190
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2191,
                "end": 2192
              },
              {
                "type": "Literal",
                "value": "0o2472412662347316120442123",
                "raw": "\"0o2472412662347316120442123\"",
                "start": 2194,
                "end": 2223
              }
            ],
            "optional": false,
            "start": 2176,
            "end": 2224
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2226,
            "end": 2228
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt octal",
            "raw": "\"ToBigInt: parse BigInt octal\"",
            "start": 2232,
            "end": 2262
          }
        ],
        "optional": false,
        "start": 2159,
        "end": 2263
      },
      "start": 2159,
      "end": 2264
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2265,
            "end": 2271
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2272,
            "end": 2281
          },
          "optional": false,
          "computed": false,
          "start": 2265,
          "end": 2281
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2282,
                "end": 2288
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 2289,
                "end": 2296
              },
              "optional": false,
              "computed": false,
              "start": 2282,
              "end": 2296
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2297,
                "end": 2298
              },
              {
                "type": "Literal",
                "value": "0x29d42b64e7671424453",
                "raw": "\"0x29d42b64e7671424453\"",
                "start": 2300,
                "end": 2323
              }
            ],
            "optional": false,
            "start": 2282,
            "end": 2324
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2326,
            "end": 2328
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt hex",
            "raw": "\"ToBigInt: parse BigInt hex\"",
            "start": 2330,
            "end": 2358
          }
        ],
        "optional": false,
        "start": 2265,
        "end": 2359
      },
      "start": 2265,
      "end": 2360
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2361,
            "end": 2367
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2368,
            "end": 2377
          },
          "optional": false,
          "computed": false,
          "start": 2361,
          "end": 2377
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2378,
                "end": 2384
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 2385,
                "end": 2392
              },
              "optional": false,
              "computed": false,
              "start": 2378,
              "end": 2392
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2393,
                "end": 2394
              },
              {
                "type": "Literal",
                "value": "    0x29d42b64e7671424453    ",
                "raw": "\"    0x29d42b64e7671424453    \"",
                "start": 2396,
                "end": 2427
              }
            ],
            "optional": false,
            "start": 2378,
            "end": 2428
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2430,
            "end": 2432
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt ignore leading/trailing whitespace",
            "raw": "\"ToBigInt: parse BigInt ignore leading/trailing whitespace\"",
            "start": 2436,
            "end": 2495
          }
        ],
        "optional": false,
        "start": 2361,
        "end": 2496
      },
      "start": 2361,
      "end": 2497
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2498,
            "end": 2504
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2505,
            "end": 2514
          },
          "optional": false,
          "computed": false,
          "start": 2498,
          "end": 2514
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2515,
                "end": 2521
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 2522,
                "end": 2529
              },
              "optional": false,
              "computed": false,
              "start": 2515,
              "end": 2529
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2530,
                "end": 2531
              },
              {
                "type": "Literal",
                "value": "     12345678901234567890003     ",
                "raw": "\"     12345678901234567890003     \"",
                "start": 2533,
                "end": 2568
              }
            ],
            "optional": false,
            "start": 2515,
            "end": 2569
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2571,
            "end": 2573
          },
          {
            "type": "Literal",
            "value": "ToBigInt: parse BigInt ignore leading/trailing whitespace",
            "raw": "\"ToBigInt: parse BigInt ignore leading/trailing whitespace\"",
            "start": 2577,
            "end": 2636
          }
        ],
        "optional": false,
        "start": 2498,
        "end": 2637
      },
      "start": 2498,
      "end": 2638
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2639,
            "end": 2645
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2646,
            "end": 2655
          },
          "optional": false,
          "computed": false,
          "start": 2639,
          "end": 2655
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2656,
                "end": 2662
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 2663,
                "end": 2670
              },
              "optional": false,
              "computed": false,
              "start": 2656,
              "end": 2670
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2671,
                "end": 2672
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": null,
                    "raw": "12345678901234567890003n",
                    "bigint": "12345678901234567890003",
                    "start": 2675,
                    "end": 2699
                  }
                ],
                "start": 2674,
                "end": 2700
              }
            ],
            "optional": false,
            "start": 2656,
            "end": 2701
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2703,
            "end": 2705
          },
          {
            "type": "Literal",
            "value": "ToBigInt: .toString() => parse BigInt",
            "raw": "\"ToBigInt: .toString() => parse BigInt\"",
            "start": 2709,
            "end": 2748
          }
        ],
        "optional": false,
        "start": 2639,
        "end": 2749
      },
      "start": 2639,
      "end": 2750
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2751,
            "end": 2757
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2758,
            "end": 2767
          },
          "optional": false,
          "computed": false,
          "start": 2751,
          "end": 2767
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "BigInt",
                "start": 2768,
                "end": 2774
              },
              "property": {
                "type": "Identifier",
                "name": "asUintN",
                "start": 2775,
                "end": 2782
              },
              "optional": false,
              "computed": false,
              "start": 2768,
              "end": 2782
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 2783,
                "end": 2784
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "12345678901234567890003",
                    "raw": "\"12345678901234567890003\"",
                    "start": 2787,
                    "end": 2812
                  }
                ],
                "start": 2786,
                "end": 2813
              }
            ],
            "optional": false,
            "start": 2768,
            "end": 2814
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 2816,
            "end": 2818
          },
          {
            "type": "Literal",
            "value": "ToBigInt: .toString() => parse BigInt",
            "raw": "\"ToBigInt: .toString() => parse BigInt\"",
            "start": 2822,
            "end": 2861
          }
        ],
        "optional": false,
        "start": 2751,
        "end": 2862
      },
      "start": 2751,
      "end": 2863
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2864
}