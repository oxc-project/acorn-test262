{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__string",
            "start": 299,
            "end": 307
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "String",
              "start": 314,
              "end": 320
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "",
                "raw": "\"\"",
                "start": 321,
                "end": 323
              }
            ],
            "start": 310,
            "end": 324
          },
          "start": 299,
          "end": 324
        }
      ],
      "start": 295,
      "end": 325
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "__string",
              "start": 420,
              "end": 428
            },
            "property": {
              "type": "Identifier",
              "name": "slice",
              "start": 429,
              "end": 434
            },
            "optional": false,
            "computed": false,
            "start": 420,
            "end": 434
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 435,
              "end": 436
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 438,
              "end": 439
            }
          ],
          "optional": false,
          "start": 420,
          "end": 440
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "",
          "raw": "\"\"",
          "start": 445,
          "end": 447
        },
        "start": 420,
        "end": 447
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 463,
                "end": 475
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: __string = new String(\"\"); __string.slice(1,0) === \"\". Actual: ",
                    "raw": "'#1: __string = new String(\"\"); __string.slice(1,0) === \"\". Actual: '",
                    "start": 476,
                    "end": 545
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "__string",
                        "start": 548,
                        "end": 556
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "slice",
                        "start": 557,
                        "end": 562
                      },
                      "optional": false,
                      "computed": false,
                      "start": 548,
                      "end": 562
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 563,
                        "end": 564
                      },
                      {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 566,
                        "end": 567
                      }
                    ],
                    "optional": false,
                    "start": 548,
                    "end": 568
                  },
                  "start": 476,
                  "end": 568
                }
              ],
              "start": 459,
              "end": 569
            },
            "start": 453,
            "end": 570
          }
        ],
        "start": 449,
        "end": 572
      },
      "alternate": null,
      "start": 416,
      "end": 572
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 655
}