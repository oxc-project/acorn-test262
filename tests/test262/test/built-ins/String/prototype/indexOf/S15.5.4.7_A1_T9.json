{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__obj",
            "start": 342,
            "end": 347
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "valueOf",
                  "start": 354,
                  "end": 361
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [],
                    "start": 374,
                    "end": 376
                  },
                  "expression": false,
                  "start": 363,
                  "end": 376
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 354,
                "end": 376
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 380,
                  "end": 388
                },
                "value": {
                  "type": "UnaryExpression",
                  "operator": "void",
                  "argument": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0",
                    "start": 395,
                    "end": 396
                  },
                  "prefix": true,
                  "start": 390,
                  "end": 396
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 380,
                "end": 396
              }
            ],
            "start": 350,
            "end": 398
          },
          "start": 342,
          "end": 398
        }
      ],
      "start": 338,
      "end": 399
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 604,
                "end": 610
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "__obj",
                  "start": 611,
                  "end": 616
                }
              ],
              "start": 600,
              "end": 617
            },
            "property": {
              "type": "Identifier",
              "name": "indexOf",
              "start": 618,
              "end": 625
            },
            "optional": false,
            "computed": false,
            "start": 600,
            "end": 625
          },
          "arguments": [
            {
              "type": "CallExpression",
              "callee": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [],
                  "start": 637,
                  "end": 639
                },
                "expression": false,
                "start": 626,
                "end": 639
              },
              "arguments": [],
              "optional": false,
              "start": 626,
              "end": 641
            }
          ],
          "optional": false,
          "start": 600,
          "end": 642
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 647,
          "end": 648
        },
        "start": 600,
        "end": 648
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 664,
                "end": 676
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: __obj = {valueOf:function(){}, toString:void 0}; new String(__obj).indexOf(function(){}()) === 0. Actual: ",
                    "raw": "'#1: __obj = {valueOf:function(){}, toString:void 0}; new String(__obj).indexOf(function(){}()) === 0. Actual: '",
                    "start": 677,
                    "end": 789
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 796,
                          "end": 802
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "__obj",
                            "start": 803,
                            "end": 808
                          }
                        ],
                        "start": 792,
                        "end": 809
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "indexOf",
                        "start": 810,
                        "end": 817
                      },
                      "optional": false,
                      "computed": false,
                      "start": 792,
                      "end": 817
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "FunctionExpression",
                          "id": null,
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [],
                            "start": 829,
                            "end": 831
                          },
                          "expression": false,
                          "start": 818,
                          "end": 831
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 818,
                        "end": 833
                      }
                    ],
                    "optional": false,
                    "start": 792,
                    "end": 834
                  },
                  "start": 677,
                  "end": 834
                }
              ],
              "start": 660,
              "end": 835
            },
            "start": 654,
            "end": 836
          }
        ],
        "start": 650,
        "end": 838
      },
      "alternate": null,
      "start": 596,
      "end": 838
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 921
}