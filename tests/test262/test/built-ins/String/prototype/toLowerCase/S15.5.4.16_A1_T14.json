{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__reg",
            "start": 270,
            "end": 275
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "RegExp",
              "start": 282,
              "end": 288
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "ABC",
                "raw": "\"ABC\"",
                "start": 289,
                "end": 294
              }
            ],
            "start": 278,
            "end": 295
          },
          "start": 270,
          "end": 295
        }
      ],
      "start": 266,
      "end": 296
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "__reg",
            "start": 297,
            "end": 302
          },
          "property": {
            "type": "Identifier",
            "name": "toLowerCase",
            "start": 303,
            "end": 314
          },
          "optional": false,
          "computed": false,
          "start": 297,
          "end": 314
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "String",
              "start": 317,
              "end": 323
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 324,
              "end": 333
            },
            "optional": false,
            "computed": false,
            "start": 317,
            "end": 333
          },
          "property": {
            "type": "Identifier",
            "name": "toLowerCase",
            "start": 334,
            "end": 345
          },
          "optional": false,
          "computed": false,
          "start": 317,
          "end": 345
        },
        "start": 297,
        "end": 345
      },
      "start": 297,
      "end": 346
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "__reg",
              "start": 441,
              "end": 446
            },
            "property": {
              "type": "Identifier",
              "name": "toLowerCase",
              "start": 447,
              "end": 458
            },
            "optional": false,
            "computed": false,
            "start": 441,
            "end": 458
          },
          "arguments": [],
          "optional": false,
          "start": 441,
          "end": 460
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "/abc/",
          "raw": "\"/abc/\"",
          "start": 465,
          "end": 472
        },
        "start": 441,
        "end": 472
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 488,
                "end": 500
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var __reg = new RegExp(\"ABC\"); __reg.toLowerCase = String.prototype.toLowerCase; __reg.toLowerCase() === \"/abc/\". Actual: ",
                    "raw": "'#1: var __reg = new RegExp(\"ABC\"); __reg.toLowerCase = String.prototype.toLowerCase; __reg.toLowerCase() === \"/abc/\". Actual: '",
                    "start": 501,
                    "end": 629
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "__reg",
                        "start": 632,
                        "end": 637
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "toLowerCase",
                        "start": 638,
                        "end": 649
                      },
                      "optional": false,
                      "computed": false,
                      "start": 632,
                      "end": 649
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 632,
                    "end": 651
                  },
                  "start": 501,
                  "end": 651
                }
              ],
              "start": 484,
              "end": 652
            },
            "start": 478,
            "end": 653
          }
        ],
        "start": 474,
        "end": 655
      },
      "alternate": null,
      "start": 437,
      "end": 655
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 738
}