{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "ExpectedError",
        "start": 327,
        "end": 340
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "message",
          "start": 341,
          "end": 348
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "ThisExpression",
                  "start": 354,
                  "end": 358
                },
                "property": {
                  "type": "Identifier",
                  "name": "message",
                  "start": 359,
                  "end": 366
                },
                "optional": false,
                "computed": false,
                "start": 354,
                "end": 366
              },
              "right": {
                "type": "LogicalExpression",
                "left": {
                  "type": "Identifier",
                  "name": "message",
                  "start": 369,
                  "end": 376
                },
                "operator": "||",
                "right": {
                  "type": "Literal",
                  "value": "",
                  "raw": "\"\"",
                  "start": 380,
                  "end": 382
                },
                "start": 369,
                "end": 382
              },
              "start": 354,
              "end": 382
            },
            "start": 354,
            "end": 383
          }
        ],
        "start": 350,
        "end": 385
      },
      "expression": false,
      "start": 318,
      "end": 385
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "ExpectedError",
              "start": 386,
              "end": 399
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 400,
              "end": 409
            },
            "optional": false,
            "computed": false,
            "start": 386,
            "end": 409
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 410,
            "end": 418
          },
          "optional": false,
          "computed": false,
          "start": 386,
          "end": 418
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "ExpectedError: ",
                    "raw": "\"ExpectedError: \"",
                    "start": 444,
                    "end": 461
                  },
                  "operator": "+",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "ThisExpression",
                      "start": 464,
                      "end": 468
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "message",
                      "start": 469,
                      "end": 476
                    },
                    "optional": false,
                    "computed": false,
                    "start": 464,
                    "end": 476
                  },
                  "start": 444,
                  "end": 476
                },
                "start": 437,
                "end": 477
              }
            ],
            "start": 433,
            "end": 479
          },
          "expression": false,
          "start": 421,
          "end": 479
        },
        "start": 386,
        "end": 479
      },
      "start": 386,
      "end": 480
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "nonStringableSeparator",
            "start": 486,
            "end": 508
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 511,
            "end": 513
          },
          "start": 486,
          "end": 513
        }
      ],
      "start": 482,
      "end": 514
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "nonStringableSeparator",
            "start": 515,
            "end": 537
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 538,
            "end": 546
          },
          "optional": false,
          "computed": false,
          "start": 515,
          "end": 546
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "ExpectedError",
                    "start": 572,
                    "end": 585
                  },
                  "arguments": [],
                  "start": 568,
                  "end": 587
                },
                "start": 562,
                "end": 588
              }
            ],
            "start": 560,
            "end": 590
          },
          "expression": false,
          "start": 549,
          "end": 590
        },
        "start": 515,
        "end": 590
      },
      "start": 515,
      "end": 591
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 593,
            "end": 599
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 600,
            "end": 606
          },
          "optional": false,
          "computed": false,
          "start": 593,
          "end": 606
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "ExpectedError",
            "start": 607,
            "end": 620
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Literal",
                        "value": "foo",
                        "raw": "\"foo\"",
                        "start": 637,
                        "end": 642
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "split",
                        "start": 643,
                        "end": 648
                      },
                      "optional": false,
                      "computed": false,
                      "start": 637,
                      "end": 648
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "nonStringableSeparator",
                        "start": 649,
                        "end": 671
                      },
                      {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 673,
                        "end": 674
                      }
                    ],
                    "optional": false,
                    "start": 637,
                    "end": 675
                  },
                  "start": 637,
                  "end": 676
                }
              ],
              "start": 633,
              "end": 678
            },
            "expression": false,
            "start": 622,
            "end": 678
          },
          {
            "type": "Literal",
            "value": "ToString should be called on the separator before checking if the limit is zero.",
            "raw": "'ToString should be called on the separator before checking if the limit is zero.'",
            "start": 680,
            "end": 762
          }
        ],
        "optional": false,
        "start": 593,
        "end": 763
      },
      "start": 593,
      "end": 764
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 765
}