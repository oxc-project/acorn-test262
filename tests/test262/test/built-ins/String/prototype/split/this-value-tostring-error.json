{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "ExpectedError",
        "start": 645,
        "end": 658
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "message",
          "start": 659,
          "end": 666
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "ThisExpression",
                  "start": 672,
                  "end": 676
                },
                "property": {
                  "type": "Identifier",
                  "name": "message",
                  "start": 677,
                  "end": 684
                },
                "optional": false,
                "computed": false,
                "start": 672,
                "end": 684
              },
              "right": {
                "type": "LogicalExpression",
                "left": {
                  "type": "Identifier",
                  "name": "message",
                  "start": 687,
                  "end": 694
                },
                "operator": "||",
                "right": {
                  "type": "Literal",
                  "value": "",
                  "raw": "\"\"",
                  "start": 698,
                  "end": 700
                },
                "start": 687,
                "end": 700
              },
              "start": 672,
              "end": 700
            },
            "start": 672,
            "end": 701
          }
        ],
        "start": 668,
        "end": 703
      },
      "expression": false,
      "start": 636,
      "end": 703
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "ExpectedError",
              "start": 704,
              "end": 717
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 718,
              "end": 727
            },
            "optional": false,
            "computed": false,
            "start": 704,
            "end": 727
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 728,
            "end": 736
          },
          "optional": false,
          "computed": false,
          "start": 704,
          "end": 736
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "ExpectedError: ",
                    "raw": "\"ExpectedError: \"",
                    "start": 762,
                    "end": 779
                  },
                  "operator": "+",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "ThisExpression",
                      "start": 782,
                      "end": 786
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "message",
                      "start": 787,
                      "end": 794
                    },
                    "optional": false,
                    "computed": false,
                    "start": 782,
                    "end": 794
                  },
                  "start": 762,
                  "end": 794
                },
                "start": 755,
                "end": 795
              }
            ],
            "start": 751,
            "end": 797
          },
          "expression": false,
          "start": 739,
          "end": 797
        },
        "start": 704,
        "end": 797
      },
      "start": 704,
      "end": 798
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "split",
            "start": 804,
            "end": 809
          },
          "init": {
            "type": "MemberExpression",
            "object": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "String",
                "start": 812,
                "end": 818
              },
              "property": {
                "type": "Identifier",
                "name": "prototype",
                "start": 819,
                "end": 828
              },
              "optional": false,
              "computed": false,
              "start": 812,
              "end": 828
            },
            "property": {
              "type": "Identifier",
              "name": "split",
              "start": 829,
              "end": 834
            },
            "optional": false,
            "computed": false,
            "start": 812,
            "end": 834
          },
          "start": 804,
          "end": 834
        }
      ],
      "start": 800,
      "end": 835
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "nonStringableReceiver",
            "start": 841,
            "end": 862
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 865,
            "end": 867
          },
          "start": 841,
          "end": 867
        }
      ],
      "start": 837,
      "end": 868
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "nonStringableReceiver",
            "start": 869,
            "end": 890
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 891,
            "end": 899
          },
          "optional": false,
          "computed": false,
          "start": 869,
          "end": 899
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "ExpectedError",
                    "start": 925,
                    "end": 938
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "receiver.toString",
                      "raw": "\"receiver.toString\"",
                      "start": 939,
                      "end": 958
                    }
                  ],
                  "start": 921,
                  "end": 959
                },
                "start": 915,
                "end": 960
              }
            ],
            "start": 913,
            "end": 962
          },
          "expression": false,
          "start": 902,
          "end": 962
        },
        "start": 869,
        "end": 962
      },
      "start": 869,
      "end": 963
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "splitter",
            "start": 969,
            "end": 977
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 980,
            "end": 982
          },
          "start": 969,
          "end": 982
        }
      ],
      "start": 965,
      "end": 983
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "splitter",
            "start": 984,
            "end": 992
          },
          "property": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Symbol",
              "start": 993,
              "end": 999
            },
            "property": {
              "type": "Identifier",
              "name": "split",
              "start": 1000,
              "end": 1005
            },
            "optional": false,
            "computed": false,
            "start": 993,
            "end": 1005
          },
          "optional": false,
          "computed": true,
          "start": 984,
          "end": 1006
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [],
            "start": 1020,
            "end": 1022
          },
          "expression": false,
          "start": 1009,
          "end": 1022
        },
        "start": 984,
        "end": 1022
      },
      "start": 984,
      "end": 1023
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "split",
                  "start": 1033,
                  "end": 1038
                },
                "property": {
                  "type": "Identifier",
                  "name": "call",
                  "start": 1039,
                  "end": 1043
                },
                "optional": false,
                "computed": false,
                "start": 1033,
                "end": 1043
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "nonStringableReceiver",
                  "start": 1044,
                  "end": 1065
                },
                {
                  "type": "Identifier",
                  "name": "splitter",
                  "start": 1067,
                  "end": 1075
                },
                {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Symbol",
                    "start": 1077,
                    "end": 1083
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 1077,
                  "end": 1085
                }
              ],
              "optional": false,
              "start": 1033,
              "end": 1086
            },
            "start": 1033,
            "end": 1087
          }
        ],
        "start": 1029,
        "end": 1089
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1097,
          "end": 1098
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "assert",
                    "start": 1104,
                    "end": 1110
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "sameValue",
                    "start": 1111,
                    "end": 1120
                  },
                  "optional": false,
                  "computed": false,
                  "start": 1104,
                  "end": 1120
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "e",
                    "start": 1121,
                    "end": 1122
                  },
                  {
                    "type": "Identifier",
                    "name": "undefined",
                    "start": 1124,
                    "end": 1133
                  },
                  {
                    "type": "Literal",
                    "value": "ToString should not be called on the receiver when the separator has a @@split method.",
                    "raw": "'ToString should not be called on the receiver when the separator has a @@split method.'",
                    "start": 1141,
                    "end": 1229
                  }
                ],
                "optional": false,
                "start": 1104,
                "end": 1230
              },
              "start": 1104,
              "end": 1231
            }
          ],
          "start": 1100,
          "end": 1233
        },
        "start": 1090,
        "end": 1233
      },
      "finalizer": null,
      "start": 1025,
      "end": 1233
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "nonStringableSeparator",
            "start": 1239,
            "end": 1261
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 1264,
            "end": 1266
          },
          "start": 1239,
          "end": 1266
        }
      ],
      "start": 1235,
      "end": 1267
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "nonStringableSeparator",
            "start": 1268,
            "end": 1290
          },
          "property": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Symbol",
              "start": 1291,
              "end": 1297
            },
            "property": {
              "type": "Identifier",
              "name": "toPrimitive",
              "start": 1298,
              "end": 1309
            },
            "optional": false,
            "computed": false,
            "start": 1291,
            "end": 1309
          },
          "optional": false,
          "computed": true,
          "start": 1268,
          "end": 1310
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 1338,
                    "end": 1350
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "separator[Symbol.toPrimitive]",
                      "raw": "\"separator[Symbol.toPrimitive]\"",
                      "start": 1351,
                      "end": 1382
                    }
                  ],
                  "start": 1334,
                  "end": 1383
                },
                "start": 1328,
                "end": 1384
              }
            ],
            "start": 1326,
            "end": 1386
          },
          "expression": false,
          "start": 1315,
          "end": 1386
        },
        "start": 1268,
        "end": 1386
      },
      "start": 1268,
      "end": 1387
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "nonStringableSeparator",
            "start": 1388,
            "end": 1410
          },
          "property": {
            "type": "Identifier",
            "name": "toString",
            "start": 1411,
            "end": 1419
          },
          "optional": false,
          "computed": false,
          "start": 1388,
          "end": 1419
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 1445,
                    "end": 1457
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "separator.toString",
                      "raw": "\"separator.toString\"",
                      "start": 1458,
                      "end": 1478
                    }
                  ],
                  "start": 1441,
                  "end": 1479
                },
                "start": 1435,
                "end": 1480
              }
            ],
            "start": 1433,
            "end": 1482
          },
          "expression": false,
          "start": 1422,
          "end": 1482
        },
        "start": 1388,
        "end": 1482
      },
      "start": 1388,
      "end": 1483
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "nonStringableSeparator",
            "start": 1484,
            "end": 1506
          },
          "property": {
            "type": "Identifier",
            "name": "valueOf",
            "start": 1507,
            "end": 1514
          },
          "optional": false,
          "computed": false,
          "start": 1484,
          "end": 1514
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 1540,
                    "end": 1552
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "separator.valueOf",
                      "raw": "\"separator.valueOf\"",
                      "start": 1553,
                      "end": 1572
                    }
                  ],
                  "start": 1536,
                  "end": 1573
                },
                "start": 1530,
                "end": 1574
              }
            ],
            "start": 1528,
            "end": 1576
          },
          "expression": false,
          "start": 1517,
          "end": 1576
        },
        "start": 1484,
        "end": 1576
      },
      "start": 1484,
      "end": 1577
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1579,
            "end": 1585
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1586,
            "end": 1592
          },
          "optional": false,
          "computed": false,
          "start": 1579,
          "end": 1592
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "ExpectedError",
            "start": 1593,
            "end": 1606
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "split",
                        "start": 1623,
                        "end": 1628
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "call",
                        "start": 1629,
                        "end": 1633
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1623,
                      "end": 1633
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "nonStringableReceiver",
                        "start": 1634,
                        "end": 1655
                      },
                      {
                        "type": "Identifier",
                        "name": "nonStringableSeparator",
                        "start": 1657,
                        "end": 1679
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Symbol",
                          "start": 1681,
                          "end": 1687
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 1681,
                        "end": 1689
                      }
                    ],
                    "optional": false,
                    "start": 1623,
                    "end": 1690
                  },
                  "start": 1623,
                  "end": 1691
                }
              ],
              "start": 1619,
              "end": 1693
            },
            "expression": false,
            "start": 1608,
            "end": 1693
          },
          {
            "type": "Literal",
            "value": "ToString should be called on the receiver before processing the separator or limit.",
            "raw": "'ToString should be called on the receiver before processing the separator or limit.'",
            "start": 1695,
            "end": 1780
          }
        ],
        "optional": false,
        "start": 1579,
        "end": 1781
      },
      "start": 1579,
      "end": 1782
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1783
}