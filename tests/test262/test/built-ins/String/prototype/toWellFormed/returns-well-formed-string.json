{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 894,
            "end": 900
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 901,
            "end": 910
          },
          "optional": false,
          "computed": false,
          "start": 894,
          "end": 910
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 918,
                  "end": 924
                },
                "property": {
                  "type": "Identifier",
                  "name": "prototype",
                  "start": 925,
                  "end": 934
                },
                "optional": false,
                "computed": false,
                "start": 918,
                "end": 934
              },
              "property": {
                "type": "Identifier",
                "name": "toWellFormed",
                "start": 935,
                "end": 947
              },
              "optional": false,
              "computed": false,
              "start": 918,
              "end": 947
            },
            "prefix": true,
            "start": 911,
            "end": 947
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 949,
            "end": 959
          }
        ],
        "optional": false,
        "start": 894,
        "end": 960
      },
      "start": 894,
      "end": 961
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "replacementChar",
            "start": 967,
            "end": 982
          },
          "init": {
            "type": "Literal",
            "value": "ï¿½",
            "raw": "'\\uFFFD'",
            "start": 985,
            "end": 993
          },
          "start": 967,
          "end": 993
        }
      ],
      "start": 963,
      "end": 994
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "leadingPoo",
            "start": 999,
            "end": 1009
          },
          "init": {
            "type": "Literal",
            "value": "\ud83d",
            "raw": "'\\uD83D'",
            "start": 1012,
            "end": 1020
          },
          "start": 999,
          "end": 1020
        }
      ],
      "start": 995,
      "end": 1021
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "trailingPoo",
            "start": 1026,
            "end": 1037
          },
          "init": {
            "type": "Literal",
            "value": "\udca9",
            "raw": "'\\uDCA9'",
            "start": 1040,
            "end": 1048
          },
          "start": 1026,
          "end": 1048
        }
      ],
      "start": 1022,
      "end": 1049
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "wholePoo",
            "start": 1054,
            "end": 1062
          },
          "init": {
            "type": "BinaryExpression",
            "left": {
              "type": "Identifier",
              "name": "leadingPoo",
              "start": 1065,
              "end": 1075
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "name": "trailingPoo",
              "start": 1078,
              "end": 1089
            },
            "start": 1065,
            "end": 1089
          },
          "start": 1054,
          "end": 1089
        }
      ],
      "start": 1050,
      "end": 1090
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1092,
            "end": 1098
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1099,
            "end": 1108
          },
          "optional": false,
          "computed": false,
          "start": 1092,
          "end": 1108
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": "a",
                          "raw": "'a'",
                          "start": 1113,
                          "end": 1116
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "name": "leadingPoo",
                          "start": 1119,
                          "end": 1129
                        },
                        "start": 1113,
                        "end": 1129
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "c",
                        "raw": "'c'",
                        "start": 1132,
                        "end": 1135
                      },
                      "start": 1113,
                      "end": 1135
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "name": "leadingPoo",
                      "start": 1138,
                      "end": 1148
                    },
                    "start": 1113,
                    "end": 1148
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "value": "e",
                    "raw": "'e'",
                    "start": 1151,
                    "end": 1154
                  },
                  "start": 1113,
                  "end": 1154
                },
                "start": 1112,
                "end": 1155
              },
              "property": {
                "type": "Identifier",
                "name": "toWellFormed",
                "start": 1156,
                "end": 1168
              },
              "optional": false,
              "computed": false,
              "start": 1112,
              "end": 1168
            },
            "arguments": [],
            "optional": false,
            "start": 1112,
            "end": 1170
          },
          {
            "type": "BinaryExpression",
            "left": {
              "type": "BinaryExpression",
              "left": {
                "type": "BinaryExpression",
                "left": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "a",
                    "raw": "'a'",
                    "start": 1174,
                    "end": 1177
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "name": "replacementChar",
                    "start": 1180,
                    "end": 1195
                  },
                  "start": 1174,
                  "end": 1195
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "value": "c",
                  "raw": "'c'",
                  "start": 1198,
                  "end": 1201
                },
                "start": 1174,
                "end": 1201
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "replacementChar",
                "start": 1204,
                "end": 1219
              },
              "start": 1174,
              "end": 1219
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "e",
              "raw": "'e'",
              "start": 1222,
              "end": 1225
            },
            "start": 1174,
            "end": 1225
          },
          {
            "type": "Literal",
            "value": "lone leading surrogates are replaced with the expected replacement character",
            "raw": "'lone leading surrogates are replaced with the expected replacement character'",
            "start": 1229,
            "end": 1307
          }
        ],
        "optional": false,
        "start": 1092,
        "end": 1309
      },
      "start": 1092,
      "end": 1310
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1311,
            "end": 1317
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1318,
            "end": 1327
          },
          "optional": false,
          "computed": false,
          "start": 1311,
          "end": 1327
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": "a",
                          "raw": "'a'",
                          "start": 1332,
                          "end": 1335
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "name": "trailingPoo",
                          "start": 1338,
                          "end": 1349
                        },
                        "start": 1332,
                        "end": 1349
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "c",
                        "raw": "'c'",
                        "start": 1352,
                        "end": 1355
                      },
                      "start": 1332,
                      "end": 1355
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "name": "trailingPoo",
                      "start": 1358,
                      "end": 1369
                    },
                    "start": 1332,
                    "end": 1369
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "value": "e",
                    "raw": "'e'",
                    "start": 1372,
                    "end": 1375
                  },
                  "start": 1332,
                  "end": 1375
                },
                "start": 1331,
                "end": 1376
              },
              "property": {
                "type": "Identifier",
                "name": "toWellFormed",
                "start": 1377,
                "end": 1389
              },
              "optional": false,
              "computed": false,
              "start": 1331,
              "end": 1389
            },
            "arguments": [],
            "optional": false,
            "start": 1331,
            "end": 1391
          },
          {
            "type": "BinaryExpression",
            "left": {
              "type": "BinaryExpression",
              "left": {
                "type": "BinaryExpression",
                "left": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "a",
                    "raw": "'a'",
                    "start": 1395,
                    "end": 1398
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "name": "replacementChar",
                    "start": 1401,
                    "end": 1416
                  },
                  "start": 1395,
                  "end": 1416
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "value": "c",
                  "raw": "'c'",
                  "start": 1419,
                  "end": 1422
                },
                "start": 1395,
                "end": 1422
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "replacementChar",
                "start": 1425,
                "end": 1440
              },
              "start": 1395,
              "end": 1440
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "e",
              "raw": "'e'",
              "start": 1443,
              "end": 1446
            },
            "start": 1395,
            "end": 1446
          },
          {
            "type": "Literal",
            "value": "lone trailing surrogates are replaced with the expected replacement character",
            "raw": "'lone trailing surrogates are replaced with the expected replacement character'",
            "start": 1450,
            "end": 1529
          }
        ],
        "optional": false,
        "start": 1311,
        "end": 1531
      },
      "start": 1311,
      "end": 1532
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1533,
            "end": 1539
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1540,
            "end": 1549
          },
          "optional": false,
          "computed": false,
          "start": 1533,
          "end": 1549
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "a",
                        "raw": "'a'",
                        "start": 1554,
                        "end": 1557
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "trailingPoo",
                        "start": 1560,
                        "end": 1571
                      },
                      "start": 1554,
                      "end": 1571
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "name": "leadingPoo",
                      "start": 1574,
                      "end": 1584
                    },
                    "start": 1554,
                    "end": 1584
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "value": "d",
                    "raw": "'d'",
                    "start": 1587,
                    "end": 1590
                  },
                  "start": 1554,
                  "end": 1590
                },
                "start": 1553,
                "end": 1591
              },
              "property": {
                "type": "Identifier",
                "name": "toWellFormed",
                "start": 1592,
                "end": 1604
              },
              "optional": false,
              "computed": false,
              "start": 1553,
              "end": 1604
            },
            "arguments": [],
            "optional": false,
            "start": 1553,
            "end": 1606
          },
          {
            "type": "BinaryExpression",
            "left": {
              "type": "BinaryExpression",
              "left": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": "a",
                  "raw": "'a'",
                  "start": 1610,
                  "end": 1613
                },
                "operator": "+",
                "right": {
                  "type": "Identifier",
                  "name": "replacementChar",
                  "start": 1616,
                  "end": 1631
                },
                "start": 1610,
                "end": 1631
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "replacementChar",
                "start": 1634,
                "end": 1649
              },
              "start": 1610,
              "end": 1649
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "d",
              "raw": "'d'",
              "start": 1652,
              "end": 1655
            },
            "start": 1610,
            "end": 1655
          },
          {
            "type": "Literal",
            "value": "a wrong-ordered surrogate pair is replaced with two replacement characters",
            "raw": "'a wrong-ordered surrogate pair is replaced with two replacement characters'",
            "start": 1659,
            "end": 1735
          }
        ],
        "optional": false,
        "start": 1533,
        "end": 1737
      },
      "start": 1533,
      "end": 1737
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1739,
            "end": 1745
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1746,
            "end": 1755
          },
          "optional": false,
          "computed": false,
          "start": 1739,
          "end": 1755
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Literal",
                "value": "að©c",
                "raw": "'að©c'",
                "start": 1756,
                "end": 1762
              },
              "property": {
                "type": "Identifier",
                "name": "toWellFormed",
                "start": 1763,
                "end": 1775
              },
              "optional": false,
              "computed": false,
              "start": 1756,
              "end": 1775
            },
            "arguments": [],
            "optional": false,
            "start": 1756,
            "end": 1777
          },
          {
            "type": "Literal",
            "value": "að©c",
            "raw": "'að©c'",
            "start": 1779,
            "end": 1785
          },
          {
            "type": "Literal",
            "value": "a surrogate pair using a literal code point is already well-formed",
            "raw": "'a surrogate pair using a literal code point is already well-formed'",
            "start": 1787,
            "end": 1855
          }
        ],
        "optional": false,
        "start": 1739,
        "end": 1856
      },
      "start": 1739,
      "end": 1857
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1858,
            "end": 1864
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1865,
            "end": 1874
          },
          "optional": false,
          "computed": false,
          "start": 1858,
          "end": 1874
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Literal",
                "value": "að©c",
                "raw": "'a\\uD83D\\uDCA9c'",
                "start": 1875,
                "end": 1891
              },
              "property": {
                "type": "Identifier",
                "name": "toWellFormed",
                "start": 1892,
                "end": 1904
              },
              "optional": false,
              "computed": false,
              "start": 1875,
              "end": 1904
            },
            "arguments": [],
            "optional": false,
            "start": 1875,
            "end": 1906
          },
          {
            "type": "Literal",
            "value": "að©c",
            "raw": "'a\\uD83D\\uDCA9c'",
            "start": 1908,
            "end": 1924
          },
          {
            "type": "Literal",
            "value": "a surrogate pair formed by escape sequences is already well-formed",
            "raw": "'a surrogate pair formed by escape sequences is already well-formed'",
            "start": 1926,
            "end": 1994
          }
        ],
        "optional": false,
        "start": 1858,
        "end": 1995
      },
      "start": 1858,
      "end": 1996
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1997,
            "end": 2003
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2004,
            "end": 2013
          },
          "optional": false,
          "computed": false,
          "start": 1997,
          "end": 2013
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "a",
                        "raw": "'a'",
                        "start": 2015,
                        "end": 2018
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "leadingPoo",
                        "start": 2021,
                        "end": 2031
                      },
                      "start": 2015,
                      "end": 2031
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "name": "trailingPoo",
                      "start": 2034,
                      "end": 2045
                    },
                    "start": 2015,
                    "end": 2045
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "value": "d",
                    "raw": "'d'",
                    "start": 2048,
                    "end": 2051
                  },
                  "start": 2015,
                  "end": 2051
                },
                "start": 2014,
                "end": 2052
              },
              "property": {
                "type": "Identifier",
                "name": "toWellFormed",
                "start": 2053,
                "end": 2065
              },
              "optional": false,
              "computed": false,
              "start": 2014,
              "end": 2065
            },
            "arguments": [],
            "optional": false,
            "start": 2014,
            "end": 2067
          },
          {
            "type": "BinaryExpression",
            "left": {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": "a",
                "raw": "'a'",
                "start": 2069,
                "end": 2072
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "wholePoo",
                "start": 2075,
                "end": 2083
              },
              "start": 2069,
              "end": 2083
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "d",
              "raw": "'d'",
              "start": 2086,
              "end": 2089
            },
            "start": 2069,
            "end": 2089
          },
          {
            "type": "Literal",
            "value": "a surrogate pair formed by concatenation is already well-formed",
            "raw": "'a surrogate pair formed by concatenation is already well-formed'",
            "start": 2091,
            "end": 2156
          }
        ],
        "optional": false,
        "start": 1997,
        "end": 2157
      },
      "start": 1997,
      "end": 2158
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2159,
            "end": 2165
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2166,
            "end": 2175
          },
          "optional": false,
          "computed": false,
          "start": 2159,
          "end": 2175
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "wholePoo",
                    "start": 2176,
                    "end": 2184
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "slice",
                    "start": 2185,
                    "end": 2190
                  },
                  "optional": false,
                  "computed": false,
                  "start": 2176,
                  "end": 2190
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0",
                    "start": 2191,
                    "end": 2192
                  },
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 2194,
                    "end": 2195
                  }
                ],
                "optional": false,
                "start": 2176,
                "end": 2196
              },
              "property": {
                "type": "Identifier",
                "name": "toWellFormed",
                "start": 2197,
                "end": 2209
              },
              "optional": false,
              "computed": false,
              "start": 2176,
              "end": 2209
            },
            "arguments": [],
            "optional": false,
            "start": 2176,
            "end": 2211
          },
          {
            "type": "Identifier",
            "name": "replacementChar",
            "start": 2213,
            "end": 2228
          },
          {
            "type": "Literal",
            "value": "a surrogate pair sliced to the leading surrogate is replaced with the expected replacement character",
            "raw": "'a surrogate pair sliced to the leading surrogate is replaced with the expected replacement character'",
            "start": 2230,
            "end": 2332
          }
        ],
        "optional": false,
        "start": 2159,
        "end": 2333
      },
      "start": 2159,
      "end": 2334
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2335,
            "end": 2341
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2342,
            "end": 2351
          },
          "optional": false,
          "computed": false,
          "start": 2335,
          "end": 2351
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "wholePoo",
                    "start": 2352,
                    "end": 2360
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "slice",
                    "start": 2361,
                    "end": 2366
                  },
                  "optional": false,
                  "computed": false,
                  "start": 2352,
                  "end": 2366
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 2367,
                    "end": 2368
                  }
                ],
                "optional": false,
                "start": 2352,
                "end": 2369
              },
              "property": {
                "type": "Identifier",
                "name": "toWellFormed",
                "start": 2370,
                "end": 2382
              },
              "optional": false,
              "computed": false,
              "start": 2352,
              "end": 2382
            },
            "arguments": [],
            "optional": false,
            "start": 2352,
            "end": 2384
          },
          {
            "type": "Identifier",
            "name": "replacementChar",
            "start": 2386,
            "end": 2401
          },
          {
            "type": "Literal",
            "value": "a surrogate pair sliced to the trailing surrogate is replaced with the expected replacement character",
            "raw": "'a surrogate pair sliced to the trailing surrogate is replaced with the expected replacement character'",
            "start": 2403,
            "end": 2506
          }
        ],
        "optional": false,
        "start": 2335,
        "end": 2507
      },
      "start": 2335,
      "end": 2508
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2509,
            "end": 2515
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2516,
            "end": 2525
          },
          "optional": false,
          "computed": false,
          "start": 2509,
          "end": 2525
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Literal",
                "value": "abc",
                "raw": "'abc'",
                "start": 2526,
                "end": 2531
              },
              "property": {
                "type": "Identifier",
                "name": "toWellFormed",
                "start": 2532,
                "end": 2544
              },
              "optional": false,
              "computed": false,
              "start": 2526,
              "end": 2544
            },
            "arguments": [],
            "optional": false,
            "start": 2526,
            "end": 2546
          },
          {
            "type": "Literal",
            "value": "abc",
            "raw": "'abc'",
            "start": 2548,
            "end": 2553
          },
          {
            "type": "Literal",
            "value": "a latin-1 string is already well-formed",
            "raw": "'a latin-1 string is already well-formed'",
            "start": 2555,
            "end": 2596
          }
        ],
        "optional": false,
        "start": 2509,
        "end": 2597
      },
      "start": 2509,
      "end": 2598
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2599,
            "end": 2605
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2606,
            "end": 2615
          },
          "optional": false,
          "computed": false,
          "start": 2599,
          "end": 2615
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Literal",
                "value": "aâ¨c",
                "raw": "'a\\u25A8c'",
                "start": 2616,
                "end": 2626
              },
              "property": {
                "type": "Identifier",
                "name": "toWellFormed",
                "start": 2627,
                "end": 2639
              },
              "optional": false,
              "computed": false,
              "start": 2616,
              "end": 2639
            },
            "arguments": [],
            "optional": false,
            "start": 2616,
            "end": 2641
          },
          {
            "type": "Literal",
            "value": "aâ¨c",
            "raw": "'a\\u25A8c'",
            "start": 2643,
            "end": 2653
          },
          {
            "type": "Literal",
            "value": "a string with a non-ASCII character is already well-formed",
            "raw": "'a string with a non-ASCII character is already well-formed'",
            "start": 2655,
            "end": 2715
          }
        ],
        "optional": false,
        "start": 2599,
        "end": 2716
      },
      "start": 2599,
      "end": 2717
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2718
}