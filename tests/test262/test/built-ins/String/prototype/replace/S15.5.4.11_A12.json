{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "global",
            "start": 314,
            "end": 320
          },
          "init": {
            "type": "ThisExpression",
            "start": 323,
            "end": 327
          },
          "start": 314,
          "end": 327
        }
      ],
      "start": 310,
      "end": 328
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Literal",
            "value": "x",
            "raw": "'x'",
            "start": 329,
            "end": 332
          },
          "property": {
            "type": "Identifier",
            "name": "replace",
            "start": 333,
            "end": 340
          },
          "optional": false,
          "computed": false,
          "start": 329,
          "end": 340
        },
        "arguments": [
          {
            "type": "Literal",
            "value": null,
            "raw": "/x/",
            "regex": {
              "pattern": "x",
              "flags": ""
            },
            "start": 341,
            "end": 344
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Literal",
                    "value": "use strict",
                    "raw": "\"use strict\"",
                    "start": 361,
                    "end": 373
                  },
                  "directive": "use strict",
                  "start": 361,
                  "end": 374
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ThisExpression",
                      "start": 382,
                      "end": 386
                    },
                    "operator": "===",
                    "right": {
                      "type": "Identifier",
                      "name": "global",
                      "start": 391,
                      "end": 397
                    },
                    "start": 382,
                    "end": 397
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Test262Error",
                            "start": 415,
                            "end": 427
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "#1: String replace leaks global",
                              "raw": "'#1: String replace leaks global'",
                              "start": 428,
                              "end": 461
                            }
                          ],
                          "start": 411,
                          "end": 462
                        },
                        "start": 405,
                        "end": 463
                      }
                    ],
                    "start": 399,
                    "end": 467
                  },
                  "alternate": null,
                  "start": 378,
                  "end": 467
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ThisExpression",
                      "start": 474,
                      "end": 478
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "undefined",
                      "start": 483,
                      "end": 492
                    },
                    "start": 474,
                    "end": 492
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Test262Error",
                            "start": 510,
                            "end": 522
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Literal",
                                  "value": "#2: replaceValue should be called with this===undefined. ",
                                  "raw": "'#2: replaceValue should be called with this===undefined. '",
                                  "start": 523,
                                  "end": 582
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "value": "Actual: ",
                                  "raw": "'Actual: '",
                                  "start": 591,
                                  "end": 601
                                },
                                "start": 523,
                                "end": 601
                              },
                              "operator": "+",
                              "right": {
                                "type": "ThisExpression",
                                "start": 604,
                                "end": 608
                              },
                              "start": 523,
                              "end": 608
                            }
                          ],
                          "start": 506,
                          "end": 609
                        },
                        "start": 500,
                        "end": 610
                      }
                    ],
                    "start": 494,
                    "end": 614
                  },
                  "alternate": null,
                  "start": 470,
                  "end": 614
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "y",
                    "raw": "'y'",
                    "start": 624,
                    "end": 627
                  },
                  "start": 617,
                  "end": 628
                }
              ],
              "start": 357,
              "end": 630
            },
            "expression": false,
            "start": 346,
            "end": 630
          }
        ],
        "optional": false,
        "start": 329,
        "end": 631
      },
      "start": 329,
      "end": 632
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 633
}