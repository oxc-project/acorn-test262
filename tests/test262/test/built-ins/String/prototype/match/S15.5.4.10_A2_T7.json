{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__matches",
            "start": 290,
            "end": 299
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "02134",
                "raw": "\"02134\"",
                "start": 303,
                "end": 310
              }
            ],
            "start": 302,
            "end": 311
          },
          "start": 290,
          "end": 311
        }
      ],
      "start": 286,
      "end": 312
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__string",
            "start": 318,
            "end": 326
          },
          "init": {
            "type": "Literal",
            "value": "Boston, Mass. 02134",
            "raw": "\"Boston, Mass. 02134\"",
            "start": 329,
            "end": 350
          },
          "start": 318,
          "end": 350
        }
      ],
      "start": 314,
      "end": 351
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "__string",
                "start": 446,
                "end": 454
              },
              "property": {
                "type": "Identifier",
                "name": "match",
                "start": 455,
                "end": 460
              },
              "optional": false,
              "computed": false,
              "start": 446,
              "end": 460
            },
            "arguments": [
              {
                "type": "Literal",
                "value": null,
                "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/g",
                "regex": {
                  "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                  "flags": "g"
                },
                "start": 461,
                "end": 490
              }
            ],
            "optional": false,
            "start": 446,
            "end": 491
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 492,
            "end": 498
          },
          "optional": false,
          "computed": false,
          "start": 446,
          "end": 498
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 503,
          "end": 504
        },
        "start": 446,
        "end": 504
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 520,
                "end": 532
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: __string = \"Boston, Mass. 02134\"; __string.match(/([\\d]{5})([-\\ ]?[\\d]{4})?$/g).length=== 1. Actual: ",
                    "raw": "'#1: __string = \"Boston, Mass. 02134\"; __string.match(/([\\\\d]{5})([-\\\\ ]?[\\\\d]{4})?$/g).length=== 1. Actual: '",
                    "start": 533,
                    "end": 643
                  },
                  "operator": "+",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "__string",
                          "start": 646,
                          "end": 654
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "match",
                          "start": 655,
                          "end": 660
                        },
                        "optional": false,
                        "computed": false,
                        "start": 646,
                        "end": 660
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": null,
                          "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/g",
                          "regex": {
                            "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                            "flags": "g"
                          },
                          "start": 661,
                          "end": 690
                        }
                      ],
                      "optional": false,
                      "start": 646,
                      "end": 691
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "start": 692,
                      "end": 698
                    },
                    "optional": false,
                    "computed": false,
                    "start": 646,
                    "end": 698
                  },
                  "start": 533,
                  "end": 698
                }
              ],
              "start": 516,
              "end": 699
            },
            "start": 510,
            "end": 700
          }
        ],
        "start": 506,
        "end": 702
      },
      "alternate": null,
      "start": 442,
      "end": 702
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "__string",
                "start": 879,
                "end": 887
              },
              "property": {
                "type": "Identifier",
                "name": "match",
                "start": 888,
                "end": 893
              },
              "optional": false,
              "computed": false,
              "start": 879,
              "end": 893
            },
            "arguments": [
              {
                "type": "Literal",
                "value": null,
                "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/g",
                "regex": {
                  "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                  "flags": "g"
                },
                "start": 894,
                "end": 923
              }
            ],
            "optional": false,
            "start": 879,
            "end": 924
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 925,
            "end": 926
          },
          "optional": false,
          "computed": true,
          "start": 879,
          "end": 927
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "__matches",
            "start": 932,
            "end": 941
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 942,
            "end": 943
          },
          "optional": false,
          "computed": true,
          "start": 932,
          "end": 944
        },
        "start": 879,
        "end": 944
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 960,
                "end": 972
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: __matches=[\"02134\"]; __string = \"Boston, Mass. 02134\"; __string.match(/([\\d]{5})([-\\ ]?[\\d]{4})?$/g)[0]===__matches[0]. Actual: ",
                    "raw": "'#2: __matches=[\"02134\"]; __string = \"Boston, Mass. 02134\"; __string.match(/([\\\\d]{5})([-\\\\ ]?[\\\\d]{4})?$/g)[0]===__matches[0]. Actual: '",
                    "start": 973,
                    "end": 1110
                  },
                  "operator": "+",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "__string",
                          "start": 1113,
                          "end": 1121
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "match",
                          "start": 1122,
                          "end": 1127
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1113,
                        "end": 1127
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": null,
                          "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/g",
                          "regex": {
                            "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                            "flags": "g"
                          },
                          "start": 1128,
                          "end": 1157
                        }
                      ],
                      "optional": false,
                      "start": 1113,
                      "end": 1158
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 1159,
                      "end": 1160
                    },
                    "optional": false,
                    "computed": true,
                    "start": 1113,
                    "end": 1161
                  },
                  "start": 973,
                  "end": 1161
                }
              ],
              "start": 956,
              "end": 1162
            },
            "start": 950,
            "end": 1163
          }
        ],
        "start": 946,
        "end": 1165
      },
      "alternate": null,
      "start": 875,
      "end": 1165
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1248
}