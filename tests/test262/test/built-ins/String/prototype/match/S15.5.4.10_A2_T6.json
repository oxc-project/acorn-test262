{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__string",
            "start": 321,
            "end": 329
          },
          "init": {
            "type": "Literal",
            "value": "Boston, Mass. 02134",
            "raw": "\"Boston, Mass. 02134\"",
            "start": 332,
            "end": 353
          },
          "start": 321,
          "end": 353
        }
      ],
      "start": 317,
      "end": 354
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "__string",
                "start": 449,
                "end": 457
              },
              "property": {
                "type": "Identifier",
                "name": "match",
                "start": 458,
                "end": 463
              },
              "optional": false,
              "computed": false,
              "start": 449,
              "end": 463
            },
            "arguments": [
              {
                "type": "Literal",
                "value": null,
                "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/",
                "regex": {
                  "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                  "flags": ""
                },
                "start": 464,
                "end": 492
              }
            ],
            "optional": false,
            "start": 449,
            "end": 493
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 494,
            "end": 495
          },
          "optional": false,
          "computed": true,
          "start": 449,
          "end": 496
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "02134",
          "raw": "\"02134\"",
          "start": 501,
          "end": 508
        },
        "start": 449,
        "end": 508
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 524,
                "end": 536
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: __string = \"Boston, Mass. 02134\"; __string.match(/([\\d]{5})([-\\ ]?[\\d]{4})?$/)[0]=== \"02134\". Actual: ",
                    "raw": "'#1: __string = \"Boston, Mass. 02134\"; __string.match(/([\\\\d]{5})([-\\\\ ]?[\\\\d]{4})?$/)[0]=== \"02134\". Actual: '",
                    "start": 537,
                    "end": 648
                  },
                  "operator": "+",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "__string",
                          "start": 651,
                          "end": 659
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "match",
                          "start": 660,
                          "end": 665
                        },
                        "optional": false,
                        "computed": false,
                        "start": 651,
                        "end": 665
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": null,
                          "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/",
                          "regex": {
                            "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                            "flags": ""
                          },
                          "start": 666,
                          "end": 694
                        }
                      ],
                      "optional": false,
                      "start": 651,
                      "end": 695
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 696,
                      "end": 697
                    },
                    "optional": false,
                    "computed": true,
                    "start": 651,
                    "end": 698
                  },
                  "start": 537,
                  "end": 698
                }
              ],
              "start": 520,
              "end": 699
            },
            "start": 514,
            "end": 700
          }
        ],
        "start": 510,
        "end": 702
      },
      "alternate": null,
      "start": 445,
      "end": 702
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "__string",
                "start": 879,
                "end": 887
              },
              "property": {
                "type": "Identifier",
                "name": "match",
                "start": 888,
                "end": 893
              },
              "optional": false,
              "computed": false,
              "start": 879,
              "end": 893
            },
            "arguments": [
              {
                "type": "Literal",
                "value": null,
                "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/",
                "regex": {
                  "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                  "flags": ""
                },
                "start": 894,
                "end": 922
              }
            ],
            "optional": false,
            "start": 879,
            "end": 923
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 924,
            "end": 925
          },
          "optional": false,
          "computed": true,
          "start": 879,
          "end": 926
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "02134",
          "raw": "\"02134\"",
          "start": 931,
          "end": 938
        },
        "start": 879,
        "end": 938
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 954,
                "end": 966
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: __string = \"Boston, Mass. 02134\"; __string.match(/([\\d]{5})([-\\ ]?[\\d]{4})?$/)[1]=== \"02134\". Actual: ",
                    "raw": "'#2: __string = \"Boston, Mass. 02134\"; __string.match(/([\\\\d]{5})([-\\\\ ]?[\\\\d]{4})?$/)[1]=== \"02134\". Actual: '",
                    "start": 967,
                    "end": 1078
                  },
                  "operator": "+",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "__string",
                          "start": 1081,
                          "end": 1089
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "match",
                          "start": 1090,
                          "end": 1095
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1081,
                        "end": 1095
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": null,
                          "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/",
                          "regex": {
                            "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                            "flags": ""
                          },
                          "start": 1096,
                          "end": 1124
                        }
                      ],
                      "optional": false,
                      "start": 1081,
                      "end": 1125
                    },
                    "property": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1126,
                      "end": 1127
                    },
                    "optional": false,
                    "computed": true,
                    "start": 1081,
                    "end": 1128
                  },
                  "start": 967,
                  "end": 1128
                }
              ],
              "start": 950,
              "end": 1129
            },
            "start": 944,
            "end": 1130
          }
        ],
        "start": 940,
        "end": 1132
      },
      "alternate": null,
      "start": 875,
      "end": 1132
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "__string",
                "start": 1309,
                "end": 1317
              },
              "property": {
                "type": "Identifier",
                "name": "match",
                "start": 1318,
                "end": 1323
              },
              "optional": false,
              "computed": false,
              "start": 1309,
              "end": 1323
            },
            "arguments": [
              {
                "type": "Literal",
                "value": null,
                "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/",
                "regex": {
                  "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                  "flags": ""
                },
                "start": 1324,
                "end": 1352
              }
            ],
            "optional": false,
            "start": 1309,
            "end": 1353
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1354,
            "end": 1355
          },
          "optional": false,
          "computed": true,
          "start": 1309,
          "end": 1356
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "void",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1366,
            "end": 1367
          },
          "prefix": true,
          "start": 1361,
          "end": 1367
        },
        "start": 1309,
        "end": 1367
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1383,
                "end": 1395
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: __string = \"Boston, Mass. 02134\"; __string.match(/([\\d]{5})([-\\ ]?[\\d]{4})?$/)[2]=== void 0. Actual: ",
                    "raw": "'#3: __string = \"Boston, Mass. 02134\"; __string.match(/([\\\\d]{5})([-\\\\ ]?[\\\\d]{4})?$/)[2]=== void 0. Actual: '",
                    "start": 1396,
                    "end": 1506
                  },
                  "operator": "+",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "__string",
                          "start": 1509,
                          "end": 1517
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "match",
                          "start": 1518,
                          "end": 1523
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1509,
                        "end": 1523
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": null,
                          "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/",
                          "regex": {
                            "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                            "flags": ""
                          },
                          "start": 1524,
                          "end": 1552
                        }
                      ],
                      "optional": false,
                      "start": 1509,
                      "end": 1553
                    },
                    "property": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1554,
                      "end": 1555
                    },
                    "optional": false,
                    "computed": true,
                    "start": 1509,
                    "end": 1556
                  },
                  "start": 1396,
                  "end": 1556
                }
              ],
              "start": 1379,
              "end": 1557
            },
            "start": 1373,
            "end": 1558
          }
        ],
        "start": 1369,
        "end": 1560
      },
      "alternate": null,
      "start": 1305,
      "end": 1560
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "__string",
                "start": 1737,
                "end": 1745
              },
              "property": {
                "type": "Identifier",
                "name": "match",
                "start": 1746,
                "end": 1751
              },
              "optional": false,
              "computed": false,
              "start": 1737,
              "end": 1751
            },
            "arguments": [
              {
                "type": "Literal",
                "value": null,
                "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/",
                "regex": {
                  "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                  "flags": ""
                },
                "start": 1752,
                "end": 1780
              }
            ],
            "optional": false,
            "start": 1737,
            "end": 1781
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 1782,
            "end": 1788
          },
          "optional": false,
          "computed": false,
          "start": 1737,
          "end": 1788
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 1793,
          "end": 1794
        },
        "start": 1737,
        "end": 1794
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1810,
                "end": 1822
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: __string = \"Boston, Mass. 02134\"; __string.match(/([\\d]{5})([-\\ ]?[\\d]{4})?$/).length ===3. Actual: ",
                    "raw": "'#4: __string = \"Boston, Mass. 02134\"; __string.match(/([\\\\d]{5})([-\\\\ ]?[\\\\d]{4})?$/).length ===3. Actual: '",
                    "start": 1823,
                    "end": 1932
                  },
                  "operator": "+",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "__string",
                          "start": 1935,
                          "end": 1943
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "match",
                          "start": 1944,
                          "end": 1949
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1935,
                        "end": 1949
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": null,
                          "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/",
                          "regex": {
                            "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                            "flags": ""
                          },
                          "start": 1950,
                          "end": 1978
                        }
                      ],
                      "optional": false,
                      "start": 1935,
                      "end": 1979
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "start": 1980,
                      "end": 1986
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1935,
                    "end": 1986
                  },
                  "start": 1823,
                  "end": 1986
                }
              ],
              "start": 1806,
              "end": 1987
            },
            "start": 1800,
            "end": 1988
          }
        ],
        "start": 1796,
        "end": 1990
      },
      "alternate": null,
      "start": 1733,
      "end": 1990
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "__string",
                "start": 2167,
                "end": 2175
              },
              "property": {
                "type": "Identifier",
                "name": "match",
                "start": 2176,
                "end": 2181
              },
              "optional": false,
              "computed": false,
              "start": 2167,
              "end": 2181
            },
            "arguments": [
              {
                "type": "Literal",
                "value": null,
                "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/",
                "regex": {
                  "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                  "flags": ""
                },
                "start": 2182,
                "end": 2210
              }
            ],
            "optional": false,
            "start": 2167,
            "end": 2211
          },
          "property": {
            "type": "Identifier",
            "name": "index",
            "start": 2212,
            "end": 2217
          },
          "optional": false,
          "computed": false,
          "start": 2167,
          "end": 2217
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 14,
          "raw": "14",
          "start": 2222,
          "end": 2224
        },
        "start": 2167,
        "end": 2224
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2240,
                "end": 2252
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: __string = \"Boston, Mass. 02134\"; __string.match(/([\\d]{5})([-\\ ]?[\\d]{4})?$/).index ===14. Actual: ",
                    "raw": "'#5: __string = \"Boston, Mass. 02134\"; __string.match(/([\\\\d]{5})([-\\\\ ]?[\\\\d]{4})?$/).index ===14. Actual: '",
                    "start": 2253,
                    "end": 2362
                  },
                  "operator": "+",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "__string",
                          "start": 2365,
                          "end": 2373
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "match",
                          "start": 2374,
                          "end": 2379
                        },
                        "optional": false,
                        "computed": false,
                        "start": 2365,
                        "end": 2379
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": null,
                          "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/",
                          "regex": {
                            "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                            "flags": ""
                          },
                          "start": 2380,
                          "end": 2408
                        }
                      ],
                      "optional": false,
                      "start": 2365,
                      "end": 2409
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "index",
                      "start": 2410,
                      "end": 2415
                    },
                    "optional": false,
                    "computed": false,
                    "start": 2365,
                    "end": 2415
                  },
                  "start": 2253,
                  "end": 2415
                }
              ],
              "start": 2236,
              "end": 2416
            },
            "start": 2230,
            "end": 2417
          }
        ],
        "start": 2226,
        "end": 2419
      },
      "alternate": null,
      "start": 2163,
      "end": 2419
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "__string",
                "start": 2596,
                "end": 2604
              },
              "property": {
                "type": "Identifier",
                "name": "match",
                "start": 2605,
                "end": 2610
              },
              "optional": false,
              "computed": false,
              "start": 2596,
              "end": 2610
            },
            "arguments": [
              {
                "type": "Literal",
                "value": null,
                "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/",
                "regex": {
                  "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                  "flags": ""
                },
                "start": 2611,
                "end": 2639
              }
            ],
            "optional": false,
            "start": 2596,
            "end": 2640
          },
          "property": {
            "type": "Identifier",
            "name": "input",
            "start": 2641,
            "end": 2646
          },
          "optional": false,
          "computed": false,
          "start": 2596,
          "end": 2646
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "__string",
          "start": 2651,
          "end": 2659
        },
        "start": 2596,
        "end": 2659
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2675,
                "end": 2687
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: __string = \"Boston, Mass. 02134\"; __string.match(/([\\d]{5})([-\\ ]?[\\d]{4})?$/).input ===__string. Actual: ",
                    "raw": "'#6: __string = \"Boston, Mass. 02134\"; __string.match(/([\\\\d]{5})([-\\\\ ]?[\\\\d]{4})?$/).input ===__string. Actual: '",
                    "start": 2688,
                    "end": 2803
                  },
                  "operator": "+",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "__string",
                          "start": 2806,
                          "end": 2814
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "match",
                          "start": 2815,
                          "end": 2820
                        },
                        "optional": false,
                        "computed": false,
                        "start": 2806,
                        "end": 2820
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": null,
                          "raw": "/([\\d]{5})([-\\ ]?[\\d]{4})?$/",
                          "regex": {
                            "pattern": "([\\d]{5})([-\\ ]?[\\d]{4})?$",
                            "flags": ""
                          },
                          "start": 2821,
                          "end": 2849
                        }
                      ],
                      "optional": false,
                      "start": 2806,
                      "end": 2850
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "input",
                      "start": 2851,
                      "end": 2856
                    },
                    "optional": false,
                    "computed": false,
                    "start": 2806,
                    "end": 2856
                  },
                  "start": 2688,
                  "end": 2856
                }
              ],
              "start": 2671,
              "end": 2857
            },
            "start": 2665,
            "end": 2858
          }
        ],
        "start": 2661,
        "end": 2860
      },
      "alternate": null,
      "start": 2592,
      "end": 2860
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2943
}