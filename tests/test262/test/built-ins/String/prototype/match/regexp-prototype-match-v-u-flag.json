{
  "type": "Program",
  "start": 0,
  "end": 1793,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 327,
      "end": 364,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 333,
          "end": 363,
          "id": {
            "type": "Identifier",
            "start": 333,
            "end": 337,
            "name": "text"
          },
          "init": {
            "type": "Literal",
            "start": 340,
            "end": 363,
            "value": "†Æ∑a†Æ∑b†Æ∑cüë®‚Äçüë©‚Äçüëß‚Äçüë¶d",
            "raw": "'†Æ∑a†Æ∑b†Æ∑cüë®‚Äçüë©‚Äçüëß‚Äçüë¶d'"
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "FunctionDeclaration",
      "start": 366,
      "end": 452,
      "id": {
        "type": "Identifier",
        "start": 375,
        "end": 382,
        "name": "doMatch"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 383,
          "end": 388,
          "name": "regex"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 390,
        "end": 452,
        "body": [
          {
            "type": "ReturnStatement",
            "start": 394,
            "end": 450,
            "argument": {
              "type": "CallExpression",
              "start": 401,
              "end": 449,
              "callee": {
                "type": "MemberExpression",
                "start": 401,
                "end": 436,
                "object": {
                  "type": "MemberExpression",
                  "start": 401,
                  "end": 431,
                  "object": {
                    "type": "MemberExpression",
                    "start": 401,
                    "end": 417,
                    "object": {
                      "type": "Identifier",
                      "start": 401,
                      "end": 407,
                      "name": "RegExp"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 408,
                      "end": 417,
                      "name": "prototype"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "property": {
                    "type": "MemberExpression",
                    "start": 418,
                    "end": 430,
                    "object": {
                      "type": "Identifier",
                      "start": 418,
                      "end": 424,
                      "name": "Symbol"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 425,
                      "end": 430,
                      "name": "match"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "computed": true,
                  "optional": false
                },
                "property": {
                  "type": "Identifier",
                  "start": 432,
                  "end": 436,
                  "name": "call"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 437,
                  "end": 442,
                  "name": "regex"
                },
                {
                  "type": "Identifier",
                  "start": 444,
                  "end": 448,
                  "name": "text"
                }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 454,
      "end": 537,
      "expression": {
        "type": "CallExpression",
        "start": 454,
        "end": 536,
        "callee": {
          "type": "MemberExpression",
          "start": 454,
          "end": 473,
          "object": {
            "type": "Identifier",
            "start": 454,
            "end": 460,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 461,
            "end": 473,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 474,
            "end": 488,
            "callee": {
              "type": "Identifier",
              "start": 474,
              "end": 481,
              "name": "doMatch"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 482,
                "end": 487,
                "value": null,
                "raw": "/†Æ∑/g",
                "regex": {
                  "pattern": "†Æ∑",
                  "flags": "g"
                }
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 490,
            "end": 508,
            "elements": [
              {
                "type": "Literal",
                "start": 491,
                "end": 495,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              },
              {
                "type": "Literal",
                "start": 497,
                "end": 501,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              },
              {
                "type": "Literal",
                "start": 503,
                "end": 507,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 510,
            "end": 535,
            "value": "Basic match with g flag",
            "raw": "\"Basic match with g flag\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 538,
      "end": 603,
      "expression": {
        "type": "CallExpression",
        "start": 538,
        "end": 602,
        "callee": {
          "type": "MemberExpression",
          "start": 538,
          "end": 557,
          "object": {
            "type": "Identifier",
            "start": 538,
            "end": 544,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 545,
            "end": 557,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 558,
            "end": 572,
            "callee": {
              "type": "Identifier",
              "start": 558,
              "end": 565,
              "name": "doMatch"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 566,
                "end": 571,
                "value": null,
                "raw": "/†Æ∑/u",
                "regex": {
                  "pattern": "†Æ∑",
                  "flags": "u"
                }
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 574,
            "end": 580,
            "elements": [
              {
                "type": "Literal",
                "start": 575,
                "end": 579,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 582,
            "end": 601,
            "value": "Match with u flag",
            "raw": "\"Match with u flag\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 604,
      "end": 669,
      "expression": {
        "type": "CallExpression",
        "start": 604,
        "end": 668,
        "callee": {
          "type": "MemberExpression",
          "start": 604,
          "end": 623,
          "object": {
            "type": "Identifier",
            "start": 604,
            "end": 610,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 611,
            "end": 623,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 624,
            "end": 638,
            "callee": {
              "type": "Identifier",
              "start": 624,
              "end": 631,
              "name": "doMatch"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 632,
                "end": 637,
                "value": null,
                "raw": "/†Æ∑/v",
                "regex": {
                  "pattern": "†Æ∑",
                  "flags": "v"
                }
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 640,
            "end": 646,
            "elements": [
              {
                "type": "Literal",
                "start": 641,
                "end": 645,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 648,
            "end": 667,
            "value": "Match with v flag",
            "raw": "\"Match with v flag\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 671,
      "end": 780,
      "expression": {
        "type": "CallExpression",
        "start": 671,
        "end": 779,
        "callee": {
          "type": "MemberExpression",
          "start": 671,
          "end": 690,
          "object": {
            "type": "Identifier",
            "start": 671,
            "end": 677,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 678,
            "end": 690,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 691,
            "end": 718,
            "callee": {
              "type": "Identifier",
              "start": 691,
              "end": 698,
              "name": "doMatch"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 699,
                "end": 717,
                "value": null,
                "raw": "/\\p{Script=Han}/gu",
                "regex": {
                  "pattern": "\\p{Script=Han}",
                  "flags": "gu"
                }
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 720,
            "end": 738,
            "elements": [
              {
                "type": "Literal",
                "start": 721,
                "end": 725,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              },
              {
                "type": "Literal",
                "start": 727,
                "end": 731,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              },
              {
                "type": "Literal",
                "start": 733,
                "end": 737,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 740,
            "end": 778,
            "value": "Unicode property escapes with u flag",
            "raw": "\"Unicode property escapes with u flag\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 781,
      "end": 890,
      "expression": {
        "type": "CallExpression",
        "start": 781,
        "end": 889,
        "callee": {
          "type": "MemberExpression",
          "start": 781,
          "end": 800,
          "object": {
            "type": "Identifier",
            "start": 781,
            "end": 787,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 788,
            "end": 800,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 801,
            "end": 828,
            "callee": {
              "type": "Identifier",
              "start": 801,
              "end": 808,
              "name": "doMatch"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 809,
                "end": 827,
                "value": null,
                "raw": "/\\p{Script=Han}/gv",
                "regex": {
                  "pattern": "\\p{Script=Han}",
                  "flags": "gv"
                }
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 830,
            "end": 848,
            "elements": [
              {
                "type": "Literal",
                "start": 831,
                "end": 835,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              },
              {
                "type": "Literal",
                "start": 837,
                "end": 841,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              },
              {
                "type": "Literal",
                "start": 843,
                "end": 847,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 850,
            "end": 888,
            "value": "Unicode property escapes with v flag",
            "raw": "\"Unicode property escapes with v flag\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 892,
      "end": 1146,
      "expression": {
        "type": "CallExpression",
        "start": 892,
        "end": 1145,
        "callee": {
          "type": "MemberExpression",
          "start": 892,
          "end": 911,
          "object": {
            "type": "Identifier",
            "start": 892,
            "end": 898,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 899,
            "end": 911,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 912,
            "end": 925,
            "callee": {
              "type": "Identifier",
              "start": 912,
              "end": 919,
              "name": "doMatch"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 920,
                "end": 924,
                "value": null,
                "raw": "/./g",
                "regex": {
                  "pattern": ".",
                  "flags": "g"
                }
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 927,
            "end": 1117,
            "elements": [
              {
                "type": "Literal",
                "start": 928,
                "end": 936,
                "value": "\ud842",
                "raw": "\"\\uD842\""
              },
              {
                "type": "Literal",
                "start": 938,
                "end": 946,
                "value": "\udfb7",
                "raw": "\"\\uDFB7\""
              },
              {
                "type": "Literal",
                "start": 948,
                "end": 951,
                "value": "a",
                "raw": "\"a\""
              },
              {
                "type": "Literal",
                "start": 953,
                "end": 961,
                "value": "\ud842",
                "raw": "\"\\uD842\""
              },
              {
                "type": "Literal",
                "start": 963,
                "end": 971,
                "value": "\udfb7",
                "raw": "\"\\uDFB7\""
              },
              {
                "type": "Literal",
                "start": 973,
                "end": 976,
                "value": "b",
                "raw": "\"b\""
              },
              {
                "type": "Literal",
                "start": 978,
                "end": 986,
                "value": "\ud842",
                "raw": "\"\\uD842\""
              },
              {
                "type": "Literal",
                "start": 988,
                "end": 996,
                "value": "\udfb7",
                "raw": "\"\\uDFB7\""
              },
              {
                "type": "Literal",
                "start": 998,
                "end": 1001,
                "value": "c",
                "raw": "\"c\""
              },
              {
                "type": "Literal",
                "start": 1003,
                "end": 1011,
                "value": "\ud83d",
                "raw": "\"\\uD83D\""
              },
              {
                "type": "Literal",
                "start": 1013,
                "end": 1021,
                "value": "\udc68",
                "raw": "\"\\uDC68\""
              },
              {
                "type": "Literal",
                "start": 1023,
                "end": 1031,
                "value": "‚Äç",
                "raw": "\"\\u200D\""
              },
              {
                "type": "Literal",
                "start": 1033,
                "end": 1041,
                "value": "\ud83d",
                "raw": "\"\\uD83D\""
              },
              {
                "type": "Literal",
                "start": 1043,
                "end": 1051,
                "value": "\udc69",
                "raw": "\"\\uDC69\""
              },
              {
                "type": "Literal",
                "start": 1053,
                "end": 1061,
                "value": "‚Äç",
                "raw": "\"\\u200D\""
              },
              {
                "type": "Literal",
                "start": 1063,
                "end": 1071,
                "value": "\ud83d",
                "raw": "\"\\uD83D\""
              },
              {
                "type": "Literal",
                "start": 1073,
                "end": 1081,
                "value": "\udc67",
                "raw": "\"\\uDC67\""
              },
              {
                "type": "Literal",
                "start": 1083,
                "end": 1091,
                "value": "‚Äç",
                "raw": "\"\\u200D\""
              },
              {
                "type": "Literal",
                "start": 1093,
                "end": 1101,
                "value": "\ud83d",
                "raw": "\"\\uD83D\""
              },
              {
                "type": "Literal",
                "start": 1103,
                "end": 1111,
                "value": "\udc66",
                "raw": "\"\\uDC66\""
              },
              {
                "type": "Literal",
                "start": 1113,
                "end": 1116,
                "value": "d",
                "raw": "\"d\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1119,
            "end": 1144,
            "value": "Dot without u or v flag",
            "raw": "\"Dot without u or v flag\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1147,
      "end": 1281,
      "expression": {
        "type": "CallExpression",
        "start": 1147,
        "end": 1280,
        "callee": {
          "type": "MemberExpression",
          "start": 1147,
          "end": 1166,
          "object": {
            "type": "Identifier",
            "start": 1147,
            "end": 1153,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1154,
            "end": 1166,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1167,
            "end": 1181,
            "callee": {
              "type": "Identifier",
              "start": 1167,
              "end": 1174,
              "name": "doMatch"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1175,
                "end": 1180,
                "value": null,
                "raw": "/./gu",
                "regex": {
                  "pattern": ".",
                  "flags": "gu"
                }
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 1183,
            "end": 1260,
            "elements": [
              {
                "type": "Literal",
                "start": 1184,
                "end": 1188,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              },
              {
                "type": "Literal",
                "start": 1190,
                "end": 1193,
                "value": "a",
                "raw": "\"a\""
              },
              {
                "type": "Literal",
                "start": 1195,
                "end": 1199,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              },
              {
                "type": "Literal",
                "start": 1201,
                "end": 1204,
                "value": "b",
                "raw": "\"b\""
              },
              {
                "type": "Literal",
                "start": 1206,
                "end": 1210,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              },
              {
                "type": "Literal",
                "start": 1212,
                "end": 1215,
                "value": "c",
                "raw": "\"c\""
              },
              {
                "type": "Literal",
                "start": 1217,
                "end": 1221,
                "value": "üë®",
                "raw": "\"üë®\""
              },
              {
                "type": "Literal",
                "start": 1223,
                "end": 1226,
                "value": "‚Äç",
                "raw": "\"‚Äç\""
              },
              {
                "type": "Literal",
                "start": 1228,
                "end": 1232,
                "value": "üë©",
                "raw": "\"üë©\""
              },
              {
                "type": "Literal",
                "start": 1234,
                "end": 1237,
                "value": "‚Äç",
                "raw": "\"‚Äç\""
              },
              {
                "type": "Literal",
                "start": 1239,
                "end": 1243,
                "value": "üëß",
                "raw": "\"üëß\""
              },
              {
                "type": "Literal",
                "start": 1245,
                "end": 1248,
                "value": "‚Äç",
                "raw": "\"‚Äç\""
              },
              {
                "type": "Literal",
                "start": 1250,
                "end": 1254,
                "value": "üë¶",
                "raw": "\"üë¶\""
              },
              {
                "type": "Literal",
                "start": 1256,
                "end": 1259,
                "value": "d",
                "raw": "\"d\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1262,
            "end": 1279,
            "value": "Dot with u flag",
            "raw": "\"Dot with u flag\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1282,
      "end": 1416,
      "expression": {
        "type": "CallExpression",
        "start": 1282,
        "end": 1415,
        "callee": {
          "type": "MemberExpression",
          "start": 1282,
          "end": 1301,
          "object": {
            "type": "Identifier",
            "start": 1282,
            "end": 1288,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1289,
            "end": 1301,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1302,
            "end": 1316,
            "callee": {
              "type": "Identifier",
              "start": 1302,
              "end": 1309,
              "name": "doMatch"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1310,
                "end": 1315,
                "value": null,
                "raw": "/./gv",
                "regex": {
                  "pattern": ".",
                  "flags": "gv"
                }
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 1318,
            "end": 1395,
            "elements": [
              {
                "type": "Literal",
                "start": 1319,
                "end": 1323,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              },
              {
                "type": "Literal",
                "start": 1325,
                "end": 1328,
                "value": "a",
                "raw": "\"a\""
              },
              {
                "type": "Literal",
                "start": 1330,
                "end": 1334,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              },
              {
                "type": "Literal",
                "start": 1336,
                "end": 1339,
                "value": "b",
                "raw": "\"b\""
              },
              {
                "type": "Literal",
                "start": 1341,
                "end": 1345,
                "value": "†Æ∑",
                "raw": "\"†Æ∑\""
              },
              {
                "type": "Literal",
                "start": 1347,
                "end": 1350,
                "value": "c",
                "raw": "\"c\""
              },
              {
                "type": "Literal",
                "start": 1352,
                "end": 1356,
                "value": "üë®",
                "raw": "\"üë®\""
              },
              {
                "type": "Literal",
                "start": 1358,
                "end": 1361,
                "value": "‚Äç",
                "raw": "\"‚Äç\""
              },
              {
                "type": "Literal",
                "start": 1363,
                "end": 1367,
                "value": "üë©",
                "raw": "\"üë©\""
              },
              {
                "type": "Literal",
                "start": 1369,
                "end": 1372,
                "value": "‚Äç",
                "raw": "\"‚Äç\""
              },
              {
                "type": "Literal",
                "start": 1374,
                "end": 1378,
                "value": "üëß",
                "raw": "\"üëß\""
              },
              {
                "type": "Literal",
                "start": 1380,
                "end": 1383,
                "value": "‚Äç",
                "raw": "\"‚Äç\""
              },
              {
                "type": "Literal",
                "start": 1385,
                "end": 1389,
                "value": "üë¶",
                "raw": "\"üë¶\""
              },
              {
                "type": "Literal",
                "start": 1391,
                "end": 1394,
                "value": "d",
                "raw": "\"d\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1397,
            "end": 1414,
            "value": "Dot with v flag",
            "raw": "\"Dot with v flag\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1418,
      "end": 1527,
      "expression": {
        "type": "CallExpression",
        "start": 1418,
        "end": 1526,
        "callee": {
          "type": "MemberExpression",
          "start": 1418,
          "end": 1437,
          "object": {
            "type": "Identifier",
            "start": 1418,
            "end": 1424,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1425,
            "end": 1437,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1438,
            "end": 1463,
            "callee": {
              "type": "Identifier",
              "start": 1438,
              "end": 1445,
              "name": "doMatch"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1446,
                "end": 1462,
                "value": null,
                "raw": "/[üë®‚Äçüë©‚Äçüëß‚Äçüë¶]/v",
                "regex": {
                  "pattern": "[üë®‚Äçüë©‚Äçüëß‚Äçüë¶]",
                  "flags": "v"
                }
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 1465,
            "end": 1471,
            "elements": [
              {
                "type": "Literal",
                "start": 1466,
                "end": 1470,
                "value": "üë®",
                "raw": "\"üë®\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1473,
            "end": 1525,
            "value": "Complex emoji sequence in set notation with v flag",
            "raw": "\"Complex emoji sequence in set notation with v flag\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1528,
      "end": 1644,
      "expression": {
        "type": "CallExpression",
        "start": 1528,
        "end": 1643,
        "callee": {
          "type": "MemberExpression",
          "start": 1528,
          "end": 1547,
          "object": {
            "type": "Identifier",
            "start": 1528,
            "end": 1534,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1535,
            "end": 1547,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1548,
            "end": 1573,
            "callee": {
              "type": "Identifier",
              "start": 1548,
              "end": 1555,
              "name": "doMatch"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1556,
                "end": 1572,
                "value": null,
                "raw": "/[üë®‚Äçüë©‚Äçüëß‚Äçüë¶]/u",
                "regex": {
                  "pattern": "[üë®‚Äçüë©‚Äçüëß‚Äçüë¶]",
                  "flags": "u"
                }
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 1575,
            "end": 1581,
            "elements": [
              {
                "type": "Literal",
                "start": 1576,
                "end": 1580,
                "value": "üë®",
                "raw": "\"üë®\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1583,
            "end": 1642,
            "value": "Complex emoji sequence in set notation with u flag throws",
            "raw": "\"Complex emoji sequence in set notation with u flag throws\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1646,
      "end": 1718,
      "expression": {
        "type": "CallExpression",
        "start": 1646,
        "end": 1717,
        "callee": {
          "type": "MemberExpression",
          "start": 1646,
          "end": 1662,
          "object": {
            "type": "Identifier",
            "start": 1646,
            "end": 1652,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1653,
            "end": 1662,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1663,
            "end": 1676,
            "callee": {
              "type": "Identifier",
              "start": 1663,
              "end": 1670,
              "name": "doMatch"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1671,
                "end": 1675,
                "value": null,
                "raw": "/x/u",
                "regex": {
                  "pattern": "x",
                  "flags": "u"
                }
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1678,
            "end": 1682,
            "value": null,
            "raw": "null"
          },
          {
            "type": "Literal",
            "start": 1684,
            "end": 1716,
            "value": "Non-matching regex with u flag",
            "raw": "\"Non-matching regex with u flag\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1719,
      "end": 1791,
      "expression": {
        "type": "CallExpression",
        "start": 1719,
        "end": 1790,
        "callee": {
          "type": "MemberExpression",
          "start": 1719,
          "end": 1735,
          "object": {
            "type": "Identifier",
            "start": 1719,
            "end": 1725,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1726,
            "end": 1735,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1736,
            "end": 1749,
            "callee": {
              "type": "Identifier",
              "start": 1736,
              "end": 1743,
              "name": "doMatch"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1744,
                "end": 1748,
                "value": null,
                "raw": "/x/v",
                "regex": {
                  "pattern": "x",
                  "flags": "v"
                }
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1751,
            "end": 1755,
            "value": null,
            "raw": "null"
          },
          {
            "type": "Literal",
            "start": 1757,
            "end": 1789,
            "value": "Non-matching regex with v flag",
            "raw": "\"Non-matching regex with v flag\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}