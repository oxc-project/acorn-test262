{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 346,
            "end": 352
          },
          "arguments": [
            {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 357,
                "end": 363
              },
              "arguments": [],
              "start": 353,
              "end": 365
            }
          ],
          "optional": false,
          "start": 346,
          "end": 366
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "0",
          "raw": "\"0\"",
          "start": 371,
          "end": 374
        },
        "start": 346,
        "end": 374
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 390,
                "end": 402
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: String(new Number()) === \"0\". Actual: ",
                    "raw": "'#1: String(new Number()) === \"0\". Actual: '",
                    "start": 403,
                    "end": 447
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 451,
                        "end": 457
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 462,
                            "end": 468
                          },
                          "arguments": [],
                          "start": 458,
                          "end": 470
                        }
                      ],
                      "optional": false,
                      "start": 451,
                      "end": 471
                    },
                    "start": 450,
                    "end": 472
                  },
                  "start": 403,
                  "end": 472
                }
              ],
              "start": 386,
              "end": 473
            },
            "start": 380,
            "end": 474
          }
        ],
        "start": 376,
        "end": 476
      },
      "alternate": null,
      "start": 342,
      "end": 476
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 493,
            "end": 499
          },
          "arguments": [
            {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 504,
                "end": 510
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 511,
                  "end": 512
                }
              ],
              "start": 500,
              "end": 513
            }
          ],
          "optional": false,
          "start": 493,
          "end": 514
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "0",
          "raw": "\"0\"",
          "start": 519,
          "end": 522
        },
        "start": 493,
        "end": 522
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 538,
                "end": 550
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: String(new Number(0)) === \"0\". Actual: ",
                    "raw": "'#2: String(new Number(0)) === \"0\". Actual: '",
                    "start": 551,
                    "end": 596
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 600,
                        "end": 606
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 611,
                            "end": 617
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 0,
                              "raw": "0",
                              "start": 618,
                              "end": 619
                            }
                          ],
                          "start": 607,
                          "end": 620
                        }
                      ],
                      "optional": false,
                      "start": 600,
                      "end": 621
                    },
                    "start": 599,
                    "end": 622
                  },
                  "start": 551,
                  "end": 622
                }
              ],
              "start": 534,
              "end": 623
            },
            "start": 528,
            "end": 624
          }
        ],
        "start": 524,
        "end": 626
      },
      "alternate": null,
      "start": 489,
      "end": 626
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 643,
            "end": 649
          },
          "arguments": [
            {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 654,
                "end": 660
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 661,
                    "end": 667
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "NaN",
                    "start": 668,
                    "end": 671
                  },
                  "optional": false,
                  "computed": false,
                  "start": 661,
                  "end": 671
                }
              ],
              "start": 650,
              "end": 672
            }
          ],
          "optional": false,
          "start": 643,
          "end": 673
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "NaN",
          "raw": "\"NaN\"",
          "start": 678,
          "end": 683
        },
        "start": 643,
        "end": 683
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 699,
                "end": 711
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: String(new Number(Number.NaN)) === Not-a-Number. Actual: ",
                    "raw": "'#3: String(new Number(Number.NaN)) === Not-a-Number. Actual: '",
                    "start": 712,
                    "end": 775
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 779,
                        "end": 785
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 790,
                            "end": 796
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Number",
                                "start": 797,
                                "end": 803
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "NaN",
                                "start": 804,
                                "end": 807
                              },
                              "optional": false,
                              "computed": false,
                              "start": 797,
                              "end": 807
                            }
                          ],
                          "start": 786,
                          "end": 808
                        }
                      ],
                      "optional": false,
                      "start": 779,
                      "end": 809
                    },
                    "start": 778,
                    "end": 810
                  },
                  "start": 712,
                  "end": 810
                }
              ],
              "start": 695,
              "end": 811
            },
            "start": 689,
            "end": 812
          }
        ],
        "start": 685,
        "end": 814
      },
      "alternate": null,
      "start": 639,
      "end": 814
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 831,
            "end": 837
          },
          "arguments": [
            {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 842,
                "end": 848
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "null",
                  "start": 849,
                  "end": 853
                }
              ],
              "start": 838,
              "end": 854
            }
          ],
          "optional": false,
          "start": 831,
          "end": 855
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "0",
          "raw": "\"0\"",
          "start": 860,
          "end": 863
        },
        "start": 831,
        "end": 863
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 879,
                "end": 891
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: String(new Number(null)) === \"0\". Actual: ",
                    "raw": "'#4: String(new Number(null)) === \"0\". Actual: '",
                    "start": 892,
                    "end": 940
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 944,
                        "end": 950
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 955,
                            "end": 961
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": null,
                              "raw": "null",
                              "start": 962,
                              "end": 966
                            }
                          ],
                          "start": 951,
                          "end": 967
                        }
                      ],
                      "optional": false,
                      "start": 944,
                      "end": 968
                    },
                    "start": 943,
                    "end": 969
                  },
                  "start": 892,
                  "end": 969
                }
              ],
              "start": 875,
              "end": 970
            },
            "start": 869,
            "end": 971
          }
        ],
        "start": 865,
        "end": 973
      },
      "alternate": null,
      "start": 827,
      "end": 973
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 990,
            "end": 996
          },
          "arguments": [
            {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 1001,
                "end": 1007
              },
              "arguments": [
                {
                  "type": "UnaryExpression",
                  "operator": "void",
                  "argument": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0",
                    "start": 1013,
                    "end": 1014
                  },
                  "prefix": true,
                  "start": 1008,
                  "end": 1014
                }
              ],
              "start": 997,
              "end": 1015
            }
          ],
          "optional": false,
          "start": 990,
          "end": 1016
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "NaN",
          "raw": "\"NaN\"",
          "start": 1021,
          "end": 1026
        },
        "start": 990,
        "end": 1026
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1042,
                "end": 1054
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: String(new Number(void 0)) === Not-a-Number. Actual: ",
                    "raw": "'#5: String(new Number(void 0)) === Not-a-Number. Actual: '",
                    "start": 1055,
                    "end": 1114
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 1118,
                        "end": 1124
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1129,
                            "end": 1135
                          },
                          "arguments": [
                            {
                              "type": "UnaryExpression",
                              "operator": "void",
                              "argument": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0",
                                "start": 1141,
                                "end": 1142
                              },
                              "prefix": true,
                              "start": 1136,
                              "end": 1142
                            }
                          ],
                          "start": 1125,
                          "end": 1143
                        }
                      ],
                      "optional": false,
                      "start": 1118,
                      "end": 1144
                    },
                    "start": 1117,
                    "end": 1145
                  },
                  "start": 1055,
                  "end": 1145
                }
              ],
              "start": 1038,
              "end": 1146
            },
            "start": 1032,
            "end": 1147
          }
        ],
        "start": 1028,
        "end": 1149
      },
      "alternate": null,
      "start": 986,
      "end": 1149
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1166,
            "end": 1172
          },
          "arguments": [
            {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 1177,
                "end": 1183
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1184,
                  "end": 1188
                }
              ],
              "start": 1173,
              "end": 1189
            }
          ],
          "optional": false,
          "start": 1166,
          "end": 1190
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 1195,
          "end": 1198
        },
        "start": 1166,
        "end": 1198
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1214,
                "end": 1226
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: String(new Number(true)) === \"1\". Actual: ",
                    "raw": "'#6: String(new Number(true)) === \"1\". Actual: '",
                    "start": 1227,
                    "end": 1275
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 1279,
                        "end": 1285
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1290,
                            "end": 1296
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 1297,
                              "end": 1301
                            }
                          ],
                          "start": 1286,
                          "end": 1302
                        }
                      ],
                      "optional": false,
                      "start": 1279,
                      "end": 1303
                    },
                    "start": 1278,
                    "end": 1304
                  },
                  "start": 1227,
                  "end": 1304
                }
              ],
              "start": 1210,
              "end": 1305
            },
            "start": 1204,
            "end": 1306
          }
        ],
        "start": 1200,
        "end": 1308
      },
      "alternate": null,
      "start": 1162,
      "end": 1308
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1325,
            "end": 1331
          },
          "arguments": [
            {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 1336,
                "end": 1342
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1343,
                  "end": 1348
                }
              ],
              "start": 1332,
              "end": 1349
            }
          ],
          "optional": false,
          "start": 1325,
          "end": 1350
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "0",
          "raw": "\"0\"",
          "start": 1355,
          "end": 1358
        },
        "start": 1325,
        "end": 1358
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1374,
                "end": 1386
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: String(new Number(false)) === \"0\". Actual: ",
                    "raw": "'#7: String(new Number(false)) === \"0\". Actual: '",
                    "start": 1387,
                    "end": 1436
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 1440,
                        "end": 1446
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1451,
                            "end": 1457
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "start": 1458,
                              "end": 1463
                            }
                          ],
                          "start": 1447,
                          "end": 1464
                        }
                      ],
                      "optional": false,
                      "start": 1440,
                      "end": 1465
                    },
                    "start": 1439,
                    "end": 1466
                  },
                  "start": 1387,
                  "end": 1466
                }
              ],
              "start": 1370,
              "end": 1467
            },
            "start": 1364,
            "end": 1468
          }
        ],
        "start": 1360,
        "end": 1470
      },
      "alternate": null,
      "start": 1321,
      "end": 1470
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1487,
            "end": 1493
          },
          "arguments": [
            {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 1498,
                "end": 1505
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1506,
                  "end": 1510
                }
              ],
              "start": 1494,
              "end": 1511
            }
          ],
          "optional": false,
          "start": 1487,
          "end": 1512
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "true",
          "raw": "\"true\"",
          "start": 1517,
          "end": 1523
        },
        "start": 1487,
        "end": 1523
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1539,
                "end": 1551
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: String(new Boolean(true)) === \"true\". Actual: ",
                    "raw": "'#8: String(new Boolean(true)) === \"true\". Actual: '",
                    "start": 1552,
                    "end": 1604
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 1608,
                        "end": 1614
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 1619,
                            "end": 1626
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 1627,
                              "end": 1631
                            }
                          ],
                          "start": 1615,
                          "end": 1632
                        }
                      ],
                      "optional": false,
                      "start": 1608,
                      "end": 1633
                    },
                    "start": 1607,
                    "end": 1634
                  },
                  "start": 1552,
                  "end": 1634
                }
              ],
              "start": 1535,
              "end": 1635
            },
            "start": 1529,
            "end": 1636
          }
        ],
        "start": 1525,
        "end": 1638
      },
      "alternate": null,
      "start": 1483,
      "end": 1638
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1655,
            "end": 1661
          },
          "arguments": [
            {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 1666,
                "end": 1673
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1674,
                  "end": 1679
                }
              ],
              "start": 1662,
              "end": 1680
            }
          ],
          "optional": false,
          "start": 1655,
          "end": 1681
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "false",
          "raw": "\"false\"",
          "start": 1686,
          "end": 1693
        },
        "start": 1655,
        "end": 1693
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1709,
                "end": 1721
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: Number(new Boolean(false)) === \"false\". Actual: ",
                    "raw": "'#9: Number(new Boolean(false)) === \"false\". Actual: '",
                    "start": 1722,
                    "end": 1776
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Number",
                        "start": 1780,
                        "end": 1786
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 1791,
                            "end": 1798
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "start": 1799,
                              "end": 1804
                            }
                          ],
                          "start": 1787,
                          "end": 1805
                        }
                      ],
                      "optional": false,
                      "start": 1780,
                      "end": 1806
                    },
                    "start": 1779,
                    "end": 1807
                  },
                  "start": 1722,
                  "end": 1807
                }
              ],
              "start": 1705,
              "end": 1808
            },
            "start": 1699,
            "end": 1809
          }
        ],
        "start": 1695,
        "end": 1811
      },
      "alternate": null,
      "start": 1651,
      "end": 1811
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1829,
            "end": 1835
          },
          "arguments": [
            {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Array",
                "start": 1840,
                "end": 1845
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1846,
                  "end": 1847
                },
                {
                  "type": "Literal",
                  "value": 4,
                  "raw": "4",
                  "start": 1849,
                  "end": 1850
                },
                {
                  "type": "Literal",
                  "value": 8,
                  "raw": "8",
                  "start": 1852,
                  "end": 1853
                },
                {
                  "type": "Literal",
                  "value": 16,
                  "raw": "16",
                  "start": 1855,
                  "end": 1857
                },
                {
                  "type": "Literal",
                  "value": 32,
                  "raw": "32",
                  "start": 1859,
                  "end": 1861
                }
              ],
              "start": 1836,
              "end": 1862
            }
          ],
          "optional": false,
          "start": 1829,
          "end": 1863
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "2,4,8,16,32",
          "raw": "\"2,4,8,16,32\"",
          "start": 1868,
          "end": 1881
        },
        "start": 1829,
        "end": 1881
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1897,
                "end": 1909
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: String(new Array(2,4,8,16,32)) === \"2,4,8,16,32\". Actual: ",
                    "raw": "'#10: String(new Array(2,4,8,16,32)) === \"2,4,8,16,32\". Actual: '",
                    "start": 1910,
                    "end": 1975
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 1979,
                        "end": 1985
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Array",
                            "start": 1990,
                            "end": 1995
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2,
                              "raw": "2",
                              "start": 1996,
                              "end": 1997
                            },
                            {
                              "type": "Literal",
                              "value": 4,
                              "raw": "4",
                              "start": 1999,
                              "end": 2000
                            },
                            {
                              "type": "Literal",
                              "value": 8,
                              "raw": "8",
                              "start": 2002,
                              "end": 2003
                            },
                            {
                              "type": "Literal",
                              "value": 16,
                              "raw": "16",
                              "start": 2005,
                              "end": 2007
                            },
                            {
                              "type": "Literal",
                              "value": 32,
                              "raw": "32",
                              "start": 2009,
                              "end": 2011
                            }
                          ],
                          "start": 1986,
                          "end": 2012
                        }
                      ],
                      "optional": false,
                      "start": 1979,
                      "end": 2013
                    },
                    "start": 1978,
                    "end": 2014
                  },
                  "start": 1910,
                  "end": 2014
                }
              ],
              "start": 1893,
              "end": 2015
            },
            "start": 1887,
            "end": 2016
          }
        ],
        "start": 1883,
        "end": 2018
      },
      "alternate": null,
      "start": 1825,
      "end": 2018
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myobj1",
            "start": 2036,
            "end": 2042
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toNumber",
                  "start": 2049,
                  "end": 2057
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 12345,
                          "raw": "12345",
                          "start": 2083,
                          "end": 2088
                        },
                        "start": 2076,
                        "end": 2089
                      }
                    ],
                    "start": 2070,
                    "end": 2093
                  },
                  "expression": false,
                  "start": 2059,
                  "end": 2093
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2049,
                "end": 2093
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 2097,
                  "end": 2105
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 67890,
                          "raw": "67890",
                          "start": 2131,
                          "end": 2136
                        },
                        "start": 2124,
                        "end": 2137
                      }
                    ],
                    "start": 2118,
                    "end": 2141
                  },
                  "expression": false,
                  "start": 2107,
                  "end": 2141
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2097,
                "end": 2141
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "valueOf",
                  "start": 2145,
                  "end": 2152
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "[object MyObj]",
                          "raw": "\"[object MyObj]\"",
                          "start": 2178,
                          "end": 2194
                        },
                        "start": 2171,
                        "end": 2195
                      }
                    ],
                    "start": 2165,
                    "end": 2199
                  },
                  "expression": false,
                  "start": 2154,
                  "end": 2199
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2145,
                "end": 2199
              }
            ],
            "start": 2045,
            "end": 2201
          },
          "start": 2036,
          "end": 2201
        }
      ],
      "start": 2032,
      "end": 2202
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 2208,
            "end": 2214
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "myobj1",
              "start": 2215,
              "end": 2221
            }
          ],
          "optional": false,
          "start": 2208,
          "end": 2222
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "67890",
          "raw": "\"67890\"",
          "start": 2227,
          "end": 2234
        },
        "start": 2208,
        "end": 2234
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2250,
                "end": 2262
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#11: String(myobj) calls ToPrimitive with hint String",
                  "raw": "\"#11: String(myobj) calls ToPrimitive with hint String\"",
                  "start": 2263,
                  "end": 2318
                }
              ],
              "start": 2246,
              "end": 2319
            },
            "start": 2240,
            "end": 2320
          }
        ],
        "start": 2236,
        "end": 2322
      },
      "alternate": null,
      "start": 2204,
      "end": 2322
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myobj2",
            "start": 2340,
            "end": 2346
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toNumber",
                  "start": 2353,
                  "end": 2361
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 12345,
                          "raw": "12345",
                          "start": 2387,
                          "end": 2392
                        },
                        "start": 2380,
                        "end": 2393
                      }
                    ],
                    "start": 2374,
                    "end": 2397
                  },
                  "expression": false,
                  "start": 2363,
                  "end": 2397
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2353,
                "end": 2397
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 2401,
                  "end": 2409
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "ObjectExpression",
                          "properties": [],
                          "start": 2435,
                          "end": 2437
                        },
                        "start": 2428,
                        "end": 2437
                      }
                    ],
                    "start": 2422,
                    "end": 2441
                  },
                  "expression": false,
                  "start": 2411,
                  "end": 2441
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2401,
                "end": 2441
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "valueOf",
                  "start": 2445,
                  "end": 2452
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "[object MyObj]",
                          "raw": "\"[object MyObj]\"",
                          "start": 2478,
                          "end": 2494
                        },
                        "start": 2471,
                        "end": 2495
                      }
                    ],
                    "start": 2465,
                    "end": 2499
                  },
                  "expression": false,
                  "start": 2454,
                  "end": 2499
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2445,
                "end": 2499
              }
            ],
            "start": 2349,
            "end": 2501
          },
          "start": 2340,
          "end": 2501
        }
      ],
      "start": 2336,
      "end": 2502
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 2508,
            "end": 2514
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "myobj2",
              "start": 2515,
              "end": 2521
            }
          ],
          "optional": false,
          "start": 2508,
          "end": 2522
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "[object MyObj]",
          "raw": "\"[object MyObj]\"",
          "start": 2527,
          "end": 2543
        },
        "start": 2508,
        "end": 2543
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2559,
                "end": 2571
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#12: String(myobj) calls ToPrimitive with hint String",
                  "raw": "\"#12: String(myobj) calls ToPrimitive with hint String\"",
                  "start": 2572,
                  "end": 2627
                }
              ],
              "start": 2555,
              "end": 2628
            },
            "start": 2549,
            "end": 2629
          }
        ],
        "start": 2545,
        "end": 2631
      },
      "alternate": null,
      "start": 2504,
      "end": 2631
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myobj3",
            "start": 2649,
            "end": 2655
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toNumber",
                  "start": 2662,
                  "end": 2670
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 12345,
                          "raw": "12345",
                          "start": 2696,
                          "end": 2701
                        },
                        "start": 2689,
                        "end": 2702
                      }
                    ],
                    "start": 2683,
                    "end": 2706
                  },
                  "expression": false,
                  "start": 2672,
                  "end": 2706
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2662,
                "end": 2706
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "valueOf",
                  "start": 2710,
                  "end": 2717
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "[object MyObj]",
                          "raw": "\"[object MyObj]\"",
                          "start": 2743,
                          "end": 2759
                        },
                        "start": 2736,
                        "end": 2760
                      }
                    ],
                    "start": 2730,
                    "end": 2764
                  },
                  "expression": false,
                  "start": 2719,
                  "end": 2764
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2710,
                "end": 2764
              }
            ],
            "start": 2658,
            "end": 2766
          },
          "start": 2649,
          "end": 2766
        }
      ],
      "start": 2645,
      "end": 2767
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 2773,
            "end": 2779
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "myobj3",
              "start": 2780,
              "end": 2786
            }
          ],
          "optional": false,
          "start": 2773,
          "end": 2787
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "[object Object]",
          "raw": "\"[object Object]\"",
          "start": 2792,
          "end": 2809
        },
        "start": 2773,
        "end": 2809
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2825,
                "end": 2837
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#13: String(myobj) calls ToPrimitive with hint String",
                  "raw": "\"#13: String(myobj) calls ToPrimitive with hint String\"",
                  "start": 2838,
                  "end": 2893
                }
              ],
              "start": 2821,
              "end": 2894
            },
            "start": 2815,
            "end": 2895
          }
        ],
        "start": 2811,
        "end": 2897
      },
      "alternate": null,
      "start": 2769,
      "end": 2897
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2898
}