{
  "type": "Program",
  "start": 0,
  "end": 713,
  "body": [
    {
      "type": "IfStatement",
      "start": 278,
      "end": 395,
      "test": {
        "type": "BinaryExpression",
        "start": 282,
        "end": 303,
        "left": {
          "type": "CallExpression",
          "start": 282,
          "end": 293,
          "callee": {
            "type": "Identifier",
            "start": 282,
            "end": 288,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 289,
              "end": 292,
              "name": "NaN"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 298,
          "end": 303,
          "value": "NaN",
          "raw": "\"NaN\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 305,
        "end": 395,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 309,
            "end": 393,
            "argument": {
              "type": "NewExpression",
              "start": 315,
              "end": 392,
              "callee": {
                "type": "Identifier",
                "start": 319,
                "end": 331,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 332,
                  "end": 391,
                  "left": {
                    "type": "Literal",
                    "start": 332,
                    "end": 375,
                    "value": "#1: String(NaN) === Not-a-Number Actual: ",
                    "raw": "'#1: String(NaN) === Not-a-Number Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 378,
                    "end": 391,
                    "expression": {
                      "type": "CallExpression",
                      "start": 379,
                      "end": 390,
                      "callee": {
                        "type": "Identifier",
                        "start": 379,
                        "end": 385,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 386,
                          "end": 389,
                          "name": "NaN"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 408,
      "end": 546,
      "test": {
        "type": "BinaryExpression",
        "start": 412,
        "end": 440,
        "left": {
          "type": "CallExpression",
          "start": 412,
          "end": 430,
          "callee": {
            "type": "Identifier",
            "start": 412,
            "end": 418,
            "name": "String"
          },
          "arguments": [
            {
              "type": "MemberExpression",
              "start": 419,
              "end": 429,
              "object": {
                "type": "Identifier",
                "start": 419,
                "end": 425,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 426,
                "end": 429,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 435,
          "end": 440,
          "value": "NaN",
          "raw": "\"NaN\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 442,
        "end": 546,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 446,
            "end": 544,
            "argument": {
              "type": "NewExpression",
              "start": 452,
              "end": 543,
              "callee": {
                "type": "Identifier",
                "start": 456,
                "end": 468,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 469,
                  "end": 542,
                  "left": {
                    "type": "Literal",
                    "start": 469,
                    "end": 519,
                    "value": "#2: String(Number.NaN) === Not-a-Number Actual: ",
                    "raw": "'#2: String(Number.NaN) === Not-a-Number Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 522,
                    "end": 542,
                    "expression": {
                      "type": "CallExpression",
                      "start": 523,
                      "end": 541,
                      "callee": {
                        "type": "Identifier",
                        "start": 523,
                        "end": 529,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "start": 530,
                          "end": 540,
                          "object": {
                            "type": "Identifier",
                            "start": 530,
                            "end": 536,
                            "name": "Number"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 537,
                            "end": 540,
                            "name": "NaN"
                          },
                          "computed": false,
                          "optional": false
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 559,
      "end": 712,
      "test": {
        "type": "BinaryExpression",
        "start": 563,
        "end": 596,
        "left": {
          "type": "CallExpression",
          "start": 563,
          "end": 586,
          "callee": {
            "type": "Identifier",
            "start": 563,
            "end": 569,
            "name": "String"
          },
          "arguments": [
            {
              "type": "CallExpression",
              "start": 570,
              "end": 585,
              "callee": {
                "type": "Identifier",
                "start": 570,
                "end": 576,
                "name": "Number"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 577,
                  "end": 584,
                  "value": "asasa",
                  "raw": "\"asasa\""
                }
              ],
              "optional": false
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 591,
          "end": 596,
          "value": "NaN",
          "raw": "\"NaN\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 598,
        "end": 712,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 602,
            "end": 710,
            "argument": {
              "type": "NewExpression",
              "start": 608,
              "end": 709,
              "callee": {
                "type": "Identifier",
                "start": 612,
                "end": 624,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 625,
                  "end": 708,
                  "left": {
                    "type": "Literal",
                    "start": 625,
                    "end": 680,
                    "value": "#3: String(Number(\"asasa\")) === Not-a-Number Actual: ",
                    "raw": "'#3: String(Number(\"asasa\")) === Not-a-Number Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 683,
                    "end": 708,
                    "expression": {
                      "type": "CallExpression",
                      "start": 684,
                      "end": 707,
                      "callee": {
                        "type": "Identifier",
                        "start": 684,
                        "end": 690,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "start": 691,
                          "end": 706,
                          "callee": {
                            "type": "Identifier",
                            "start": 691,
                            "end": 697,
                            "name": "Number"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 698,
                              "end": 705,
                              "value": "asasa",
                              "raw": "\"asasa\""
                            }
                          ],
                          "optional": false
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}