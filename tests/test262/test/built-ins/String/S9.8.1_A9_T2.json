{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 585,
            "end": 591
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1e-7,
              "raw": "0.0000001",
              "start": 592,
              "end": 601
            }
          ],
          "optional": false,
          "start": 585,
          "end": 602
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "1e-7",
          "raw": "\"1e-7\"",
          "start": 607,
          "end": 613
        },
        "start": 585,
        "end": 613
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 629,
                "end": 641
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: String(0.0000001) === \"1e-7\". Actual: ",
                    "raw": "'#1: String(0.0000001) === \"1e-7\". Actual: '",
                    "start": 642,
                    "end": 686
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 690,
                        "end": 696
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": 1e-7,
                          "raw": "0.0000001",
                          "start": 697,
                          "end": 706
                        }
                      ],
                      "optional": false,
                      "start": 690,
                      "end": 707
                    },
                    "start": 689,
                    "end": 708
                  },
                  "start": 642,
                  "end": 708
                }
              ],
              "start": 625,
              "end": 709
            },
            "start": 619,
            "end": 710
          }
        ],
        "start": 615,
        "end": 712
      },
      "alternate": null,
      "start": 581,
      "end": 712
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 729,
            "end": 735
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1e-10,
              "raw": "0.000000000100000000000",
              "start": 736,
              "end": 759
            }
          ],
          "optional": false,
          "start": 729,
          "end": 760
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "1e-10",
          "raw": "\"1e-10\"",
          "start": 765,
          "end": 772
        },
        "start": 729,
        "end": 772
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 788,
                "end": 800
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: String(0.000000000100000000000) === \"1e-10\". Actual: ",
                    "raw": "'#2: String(0.000000000100000000000) === \"1e-10\". Actual: '",
                    "start": 801,
                    "end": 860
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 864,
                        "end": 870
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": 1e-10,
                          "raw": "0.000000000100000000000",
                          "start": 871,
                          "end": 894
                        }
                      ],
                      "optional": false,
                      "start": 864,
                      "end": 895
                    },
                    "start": 863,
                    "end": 896
                  },
                  "start": 801,
                  "end": 896
                }
              ],
              "start": 784,
              "end": 897
            },
            "start": 778,
            "end": 898
          }
        ],
        "start": 774,
        "end": 900
      },
      "alternate": null,
      "start": 725,
      "end": 900
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 917,
            "end": 923
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1e-7,
              "raw": "1e-7",
              "start": 924,
              "end": 928
            }
          ],
          "optional": false,
          "start": 917,
          "end": 929
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "1e-7",
          "raw": "\"1e-7\"",
          "start": 934,
          "end": 940
        },
        "start": 917,
        "end": 940
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 956,
                "end": 968
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: String(1e-7) === \"1e-7\". Actual: ",
                    "raw": "'#3: String(1e-7) === \"1e-7\". Actual: '",
                    "start": 969,
                    "end": 1008
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 1012,
                        "end": 1018
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": 1e-7,
                          "raw": "1e-7",
                          "start": 1019,
                          "end": 1023
                        }
                      ],
                      "optional": false,
                      "start": 1012,
                      "end": 1024
                    },
                    "start": 1011,
                    "end": 1025
                  },
                  "start": 969,
                  "end": 1025
                }
              ],
              "start": 952,
              "end": 1026
            },
            "start": 946,
            "end": 1027
          }
        ],
        "start": 942,
        "end": 1029
      },
      "alternate": null,
      "start": 913,
      "end": 1029
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1046,
            "end": 1052
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1e-10,
              "raw": "1.0e-10",
              "start": 1053,
              "end": 1060
            }
          ],
          "optional": false,
          "start": 1046,
          "end": 1061
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "1e-10",
          "raw": "\"1e-10\"",
          "start": 1066,
          "end": 1073
        },
        "start": 1046,
        "end": 1073
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1089,
                "end": 1101
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: String(1.0e-10) === \"1e-10\". Actual: ",
                    "raw": "'#4: String(1.0e-10) === \"1e-10\". Actual: '",
                    "start": 1102,
                    "end": 1145
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 1149,
                        "end": 1155
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": 1e-10,
                          "raw": "1.0e-10",
                          "start": 1156,
                          "end": 1163
                        }
                      ],
                      "optional": false,
                      "start": 1149,
                      "end": 1164
                    },
                    "start": 1148,
                    "end": 1165
                  },
                  "start": 1102,
                  "end": 1165
                }
              ],
              "start": 1085,
              "end": 1166
            },
            "start": 1079,
            "end": 1167
          }
        ],
        "start": 1075,
        "end": 1169
      },
      "alternate": null,
      "start": 1042,
      "end": 1169
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1186,
            "end": 1192
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1e-7,
              "raw": "1E-7",
              "start": 1193,
              "end": 1197
            }
          ],
          "optional": false,
          "start": 1186,
          "end": 1198
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "1e-7",
          "raw": "\"1e-7\"",
          "start": 1203,
          "end": 1209
        },
        "start": 1186,
        "end": 1209
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1225,
                "end": 1237
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: String(1E-7) === \"1e-7\". Actual: ",
                    "raw": "'#5: String(1E-7) === \"1e-7\". Actual: '",
                    "start": 1238,
                    "end": 1277
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 1281,
                        "end": 1287
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": 1e-7,
                          "raw": "1E-7",
                          "start": 1288,
                          "end": 1292
                        }
                      ],
                      "optional": false,
                      "start": 1281,
                      "end": 1293
                    },
                    "start": 1280,
                    "end": 1294
                  },
                  "start": 1238,
                  "end": 1294
                }
              ],
              "start": 1221,
              "end": 1295
            },
            "start": 1215,
            "end": 1296
          }
        ],
        "start": 1211,
        "end": 1298
      },
      "alternate": null,
      "start": 1182,
      "end": 1298
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1315,
            "end": 1321
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1e-10,
              "raw": "1.0E-10",
              "start": 1322,
              "end": 1329
            }
          ],
          "optional": false,
          "start": 1315,
          "end": 1330
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "1e-10",
          "raw": "\"1e-10\"",
          "start": 1335,
          "end": 1342
        },
        "start": 1315,
        "end": 1342
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1358,
                "end": 1370
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: String(1.0E-10) === \"1e-10\". Actual: ",
                    "raw": "'#6: String(1.0E-10) === \"1e-10\". Actual: '",
                    "start": 1371,
                    "end": 1414
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 1418,
                        "end": 1424
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": 1e-10,
                          "raw": "1.0E-10",
                          "start": 1425,
                          "end": 1432
                        }
                      ],
                      "optional": false,
                      "start": 1418,
                      "end": 1433
                    },
                    "start": 1417,
                    "end": 1434
                  },
                  "start": 1371,
                  "end": 1434
                }
              ],
              "start": 1354,
              "end": 1435
            },
            "start": 1348,
            "end": 1436
          }
        ],
        "start": 1344,
        "end": 1438
      },
      "alternate": null,
      "start": 1311,
      "end": 1438
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1455,
            "end": 1461
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1e-7,
                "raw": "0.0000001",
                "start": 1463,
                "end": 1472
              },
              "prefix": true,
              "start": 1462,
              "end": 1472
            }
          ],
          "optional": false,
          "start": 1455,
          "end": 1473
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "-1e-7",
          "raw": "\"-1e-7\"",
          "start": 1478,
          "end": 1485
        },
        "start": 1455,
        "end": 1485
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1501,
                "end": 1513
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: String(-0.0000001) === \"1e-7\". Actual: ",
                    "raw": "'#7: String(-0.0000001) === \"1e-7\". Actual: '",
                    "start": 1514,
                    "end": 1559
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 1563,
                        "end": 1569
                      },
                      "arguments": [
                        {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 1e-7,
                            "raw": "0.0000001",
                            "start": 1571,
                            "end": 1580
                          },
                          "prefix": true,
                          "start": 1570,
                          "end": 1580
                        }
                      ],
                      "optional": false,
                      "start": 1563,
                      "end": 1581
                    },
                    "start": 1562,
                    "end": 1582
                  },
                  "start": 1514,
                  "end": 1582
                }
              ],
              "start": 1497,
              "end": 1583
            },
            "start": 1491,
            "end": 1584
          }
        ],
        "start": 1487,
        "end": 1586
      },
      "alternate": null,
      "start": 1451,
      "end": 1586
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1603,
            "end": 1609
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1e-10,
                "raw": "0.000000000100000000000",
                "start": 1611,
                "end": 1634
              },
              "prefix": true,
              "start": 1610,
              "end": 1634
            }
          ],
          "optional": false,
          "start": 1603,
          "end": 1635
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "-1e-10",
          "raw": "\"-1e-10\"",
          "start": 1640,
          "end": 1648
        },
        "start": 1603,
        "end": 1648
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1664,
                "end": 1676
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: String(-0.000000000100000000000) === \"1e-10\". Actual: ",
                    "raw": "'#8: String(-0.000000000100000000000) === \"1e-10\". Actual: '",
                    "start": 1677,
                    "end": 1737
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 1741,
                        "end": 1747
                      },
                      "arguments": [
                        {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 1e-10,
                            "raw": "0.000000000100000000000",
                            "start": 1749,
                            "end": 1772
                          },
                          "prefix": true,
                          "start": 1748,
                          "end": 1772
                        }
                      ],
                      "optional": false,
                      "start": 1741,
                      "end": 1773
                    },
                    "start": 1740,
                    "end": 1774
                  },
                  "start": 1677,
                  "end": 1774
                }
              ],
              "start": 1660,
              "end": 1775
            },
            "start": 1654,
            "end": 1776
          }
        ],
        "start": 1650,
        "end": 1778
      },
      "alternate": null,
      "start": 1599,
      "end": 1778
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1795,
            "end": 1801
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1e-7,
                "raw": "1e-7",
                "start": 1803,
                "end": 1807
              },
              "prefix": true,
              "start": 1802,
              "end": 1807
            }
          ],
          "optional": false,
          "start": 1795,
          "end": 1808
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "-1e-7",
          "raw": "\"-1e-7\"",
          "start": 1813,
          "end": 1820
        },
        "start": 1795,
        "end": 1820
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1836,
                "end": 1848
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: String(-1e-7) === \"-1e-7\". Actual: ",
                    "raw": "'#9: String(-1e-7) === \"-1e-7\". Actual: '",
                    "start": 1849,
                    "end": 1890
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 1894,
                        "end": 1900
                      },
                      "arguments": [
                        {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 1e-7,
                            "raw": "1e-7",
                            "start": 1902,
                            "end": 1906
                          },
                          "prefix": true,
                          "start": 1901,
                          "end": 1906
                        }
                      ],
                      "optional": false,
                      "start": 1894,
                      "end": 1907
                    },
                    "start": 1893,
                    "end": 1908
                  },
                  "start": 1849,
                  "end": 1908
                }
              ],
              "start": 1832,
              "end": 1909
            },
            "start": 1826,
            "end": 1910
          }
        ],
        "start": 1822,
        "end": 1912
      },
      "alternate": null,
      "start": 1791,
      "end": 1912
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1930,
            "end": 1936
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1e-10,
                "raw": "1.0e-10",
                "start": 1938,
                "end": 1945
              },
              "prefix": true,
              "start": 1937,
              "end": 1945
            }
          ],
          "optional": false,
          "start": 1930,
          "end": 1946
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "-1e-10",
          "raw": "\"-1e-10\"",
          "start": 1951,
          "end": 1959
        },
        "start": 1930,
        "end": 1959
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1975,
                "end": 1987
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: String(-1.0e-10) === \"-1e-10\". Actual: ",
                    "raw": "'#10: String(-1.0e-10) === \"-1e-10\". Actual: '",
                    "start": 1988,
                    "end": 2034
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 2038,
                        "end": 2044
                      },
                      "arguments": [
                        {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 1e-10,
                            "raw": "1.0e-10",
                            "start": 2046,
                            "end": 2053
                          },
                          "prefix": true,
                          "start": 2045,
                          "end": 2053
                        }
                      ],
                      "optional": false,
                      "start": 2038,
                      "end": 2054
                    },
                    "start": 2037,
                    "end": 2055
                  },
                  "start": 1988,
                  "end": 2055
                }
              ],
              "start": 1971,
              "end": 2056
            },
            "start": 1965,
            "end": 2057
          }
        ],
        "start": 1961,
        "end": 2059
      },
      "alternate": null,
      "start": 1926,
      "end": 2059
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 2077,
            "end": 2083
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1e-7,
                "raw": "1E-7",
                "start": 2085,
                "end": 2089
              },
              "prefix": true,
              "start": 2084,
              "end": 2089
            }
          ],
          "optional": false,
          "start": 2077,
          "end": 2090
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "-1e-7",
          "raw": "\"-1e-7\"",
          "start": 2095,
          "end": 2102
        },
        "start": 2077,
        "end": 2102
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2118,
                "end": 2130
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#11: String(-1E-7) === \"-1e-7\". Actual: ",
                    "raw": "'#11: String(-1E-7) === \"-1e-7\". Actual: '",
                    "start": 2131,
                    "end": 2173
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 2177,
                        "end": 2183
                      },
                      "arguments": [
                        {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 1e-7,
                            "raw": "1E-7",
                            "start": 2185,
                            "end": 2189
                          },
                          "prefix": true,
                          "start": 2184,
                          "end": 2189
                        }
                      ],
                      "optional": false,
                      "start": 2177,
                      "end": 2190
                    },
                    "start": 2176,
                    "end": 2191
                  },
                  "start": 2131,
                  "end": 2191
                }
              ],
              "start": 2114,
              "end": 2192
            },
            "start": 2108,
            "end": 2193
          }
        ],
        "start": 2104,
        "end": 2195
      },
      "alternate": null,
      "start": 2073,
      "end": 2195
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 2213,
            "end": 2219
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1e-10,
                "raw": "1.0E-10",
                "start": 2221,
                "end": 2228
              },
              "prefix": true,
              "start": 2220,
              "end": 2228
            }
          ],
          "optional": false,
          "start": 2213,
          "end": 2229
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "-1e-10",
          "raw": "\"-1e-10\"",
          "start": 2234,
          "end": 2242
        },
        "start": 2213,
        "end": 2242
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2258,
                "end": 2270
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#12: String(-1.0E-10) === \"-1e-10\". Actual: ",
                    "raw": "'#12: String(-1.0E-10) === \"-1e-10\". Actual: '",
                    "start": 2271,
                    "end": 2317
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 2321,
                        "end": 2327
                      },
                      "arguments": [
                        {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 1e-10,
                            "raw": "1.0E-10",
                            "start": 2329,
                            "end": 2336
                          },
                          "prefix": true,
                          "start": 2328,
                          "end": 2336
                        }
                      ],
                      "optional": false,
                      "start": 2321,
                      "end": 2337
                    },
                    "start": 2320,
                    "end": 2338
                  },
                  "start": 2271,
                  "end": 2338
                }
              ],
              "start": 2254,
              "end": 2339
            },
            "start": 2248,
            "end": 2340
          }
        ],
        "start": 2244,
        "end": 2342
      },
      "alternate": null,
      "start": 2209,
      "end": 2342
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2343
}