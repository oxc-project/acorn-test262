{
  "type": "Program",
  "start": 0,
  "end": 728,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 503,
      "end": 727,
      "expression": {
        "type": "CallExpression",
        "start": 503,
        "end": 726,
        "callee": {
          "type": "Identifier",
          "start": 503,
          "end": 533,
          "name": "testWithTypedArrayConstructors"
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 534,
            "end": 725,
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 543,
                "end": 545,
                "name": "TA"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 547,
              "end": 725,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 551,
                  "end": 574,
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 555,
                      "end": 573,
                      "id": {
                        "type": "Identifier",
                        "start": 555,
                        "end": 561,
                        "name": "sample"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 564,
                        "end": 573,
                        "callee": {
                          "type": "Identifier",
                          "start": 568,
                          "end": 570,
                          "name": "TA"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 571,
                            "end": 572,
                            "value": 1,
                            "raw": "1"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "VariableDeclaration",
                  "start": 578,
                  "end": 641,
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 582,
                      "end": 640,
                      "id": {
                        "type": "Identifier",
                        "start": 582,
                        "end": 591,
                        "name": "predicate"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "start": 594,
                        "end": 640,
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 605,
                          "end": 640,
                          "body": [
                            {
                              "type": "ThrowStatement",
                              "start": 611,
                              "end": 636,
                              "argument": {
                                "type": "NewExpression",
                                "start": 617,
                                "end": 635,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 621,
                                  "end": 633,
                                  "name": "Test262Error"
                                },
                                "arguments": []
                              }
                            }
                          ]
                        },
                        "expression": false
                      }
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "start": 645,
                  "end": 723,
                  "expression": {
                    "type": "CallExpression",
                    "start": 645,
                    "end": 722,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 645,
                      "end": 658,
                      "object": {
                        "type": "Identifier",
                        "start": 645,
                        "end": 651,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 652,
                        "end": 658,
                        "name": "throws"
                      },
                      "optional": false,
                      "computed": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 659,
                        "end": 671,
                        "name": "Test262Error"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 673,
                        "end": 721,
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 684,
                          "end": 721,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 690,
                              "end": 717,
                              "expression": {
                                "type": "CallExpression",
                                "start": 690,
                                "end": 716,
                                "callee": {
                                  "type": "MemberExpression",
                                  "start": 690,
                                  "end": 705,
                                  "object": {
                                    "type": "Identifier",
                                    "start": 690,
                                    "end": 696,
                                    "name": "sample"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 697,
                                    "end": 705,
                                    "name": "findLast"
                                  },
                                  "optional": false,
                                  "computed": false
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "start": 706,
                                    "end": 715,
                                    "name": "predicate"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ]
                        },
                        "expression": false
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}