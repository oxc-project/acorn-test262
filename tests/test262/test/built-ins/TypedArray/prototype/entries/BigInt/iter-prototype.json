{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "ArrayIteratorProto",
            "start": 473,
            "end": 491
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Object",
                "start": 494,
                "end": 500
              },
              "property": {
                "type": "Identifier",
                "name": "getPrototypeOf",
                "start": 501,
                "end": 515
              },
              "optional": false,
              "computed": false,
              "start": 494,
              "end": 515
            },
            "arguments": [
              {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "ArrayExpression",
                    "elements": [],
                    "start": 516,
                    "end": 518
                  },
                  "property": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 519,
                      "end": 525
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "iterator",
                      "start": 526,
                      "end": 534
                    },
                    "optional": false,
                    "computed": false,
                    "start": 519,
                    "end": 534
                  },
                  "optional": false,
                  "computed": true,
                  "start": 516,
                  "end": 535
                },
                "arguments": [],
                "optional": false,
                "start": 516,
                "end": 537
              }
            ],
            "optional": false,
            "start": 494,
            "end": 538
          },
          "start": 473,
          "end": 538
        }
      ],
      "start": 469,
      "end": 539
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "testWithBigIntTypedArrayConstructors",
          "start": 541,
          "end": 577
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "TA",
                "start": 587,
                "end": 589
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "sample",
                        "start": 599,
                        "end": 605
                      },
                      "init": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "TA",
                          "start": 612,
                          "end": 614
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": null,
                                "raw": "0n",
                                "bigint": "0",
                                "start": 616,
                                "end": 618
                              },
                              {
                                "type": "Literal",
                                "value": null,
                                "raw": "42n",
                                "bigint": "42",
                                "start": 620,
                                "end": 623
                              },
                              {
                                "type": "Literal",
                                "value": null,
                                "raw": "64n",
                                "bigint": "64",
                                "start": 625,
                                "end": 628
                              }
                            ],
                            "start": 615,
                            "end": 629
                          }
                        ],
                        "start": 608,
                        "end": 630
                      },
                      "start": 599,
                      "end": 630
                    }
                  ],
                  "start": 595,
                  "end": 631
                },
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "iter",
                        "start": 638,
                        "end": 642
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "sample",
                            "start": 645,
                            "end": 651
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "entries",
                            "start": 652,
                            "end": 659
                          },
                          "optional": false,
                          "computed": false,
                          "start": 645,
                          "end": 659
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 645,
                        "end": 661
                      },
                      "start": 638,
                      "end": 661
                    }
                  ],
                  "start": 634,
                  "end": 662
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "assert",
                        "start": 666,
                        "end": 672
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "sameValue",
                        "start": 673,
                        "end": 682
                      },
                      "optional": false,
                      "computed": false,
                      "start": 666,
                      "end": 682
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "Object",
                            "start": 683,
                            "end": 689
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "getPrototypeOf",
                            "start": 690,
                            "end": 704
                          },
                          "optional": false,
                          "computed": false,
                          "start": 683,
                          "end": 704
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "iter",
                            "start": 705,
                            "end": 709
                          }
                        ],
                        "optional": false,
                        "start": 683,
                        "end": 710
                      },
                      {
                        "type": "Identifier",
                        "name": "ArrayIteratorProto",
                        "start": 712,
                        "end": 730
                      }
                    ],
                    "optional": false,
                    "start": 666,
                    "end": 731
                  },
                  "start": 666,
                  "end": 732
                }
              ],
              "start": 591,
              "end": 734
            },
            "expression": false,
            "start": 578,
            "end": 734
          }
        ],
        "optional": false,
        "start": 541,
        "end": 735
      },
      "start": 541,
      "end": 736
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 737
}