{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 358,
            "end": 364
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 367,
            "end": 371
          },
          "start": 358,
          "end": 371
        }
      ],
      "start": 354,
      "end": 372
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "interval",
            "start": 377,
            "end": 385
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x00",
                    "start": 393,
                    "end": 397
                  },
                  {
                    "type": "Literal",
                    "value": 47,
                    "raw": "0x2F",
                    "start": 399,
                    "end": 403
                  }
                ],
                "start": 392,
                "end": 404
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 58,
                    "raw": "0x3A",
                    "start": 409,
                    "end": 413
                  },
                  {
                    "type": "Literal",
                    "value": 64,
                    "raw": "0x40",
                    "start": 415,
                    "end": 419
                  }
                ],
                "start": 408,
                "end": 420
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 71,
                    "raw": "0x47",
                    "start": 425,
                    "end": 429
                  },
                  {
                    "type": "Literal",
                    "value": 96,
                    "raw": "0x60",
                    "start": 431,
                    "end": 435
                  }
                ],
                "start": 424,
                "end": 436
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 103,
                    "raw": "0x67",
                    "start": 441,
                    "end": 445
                  },
                  {
                    "type": "Literal",
                    "value": 65535,
                    "raw": "0xFFFF",
                    "start": 447,
                    "end": 453
                  }
                ],
                "start": 440,
                "end": 454
              }
            ],
            "start": 388,
            "end": 456
          },
          "start": 377,
          "end": 456
        }
      ],
      "start": 373,
      "end": 457
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "indexI",
              "start": 467,
              "end": 473
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 476,
              "end": 477
            },
            "start": 467,
            "end": 477
          }
        ],
        "start": 463,
        "end": 477
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "indexI",
          "start": 479,
          "end": 485
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "interval",
            "start": 488,
            "end": 496
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 497,
            "end": 503
          },
          "optional": false,
          "computed": false,
          "start": 488,
          "end": 503
        },
        "start": 479,
        "end": 503
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "indexI",
          "start": 505,
          "end": 511
        },
        "start": 505,
        "end": 513
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "indexJ",
                    "start": 528,
                    "end": 534
                  },
                  "init": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "interval",
                        "start": 537,
                        "end": 545
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "indexI",
                        "start": 546,
                        "end": 552
                      },
                      "optional": false,
                      "computed": true,
                      "start": 537,
                      "end": 553
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 554,
                      "end": 555
                    },
                    "optional": false,
                    "computed": true,
                    "start": 537,
                    "end": 556
                  },
                  "start": 528,
                  "end": 556
                }
              ],
              "start": 524,
              "end": 556
            },
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 558,
                "end": 564
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "interval",
                    "start": 568,
                    "end": 576
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "indexI",
                    "start": 577,
                    "end": 583
                  },
                  "optional": false,
                  "computed": true,
                  "start": 568,
                  "end": 584
                },
                "property": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 585,
                  "end": 586
                },
                "optional": false,
                "computed": true,
                "start": 568,
                "end": 587
              },
              "start": 558,
              "end": 587
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 589,
                "end": 595
              },
              "start": 589,
              "end": 597
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "decodeURI",
                            "start": 617,
                            "end": 626
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "Literal",
                                "value": "%C0%",
                                "raw": "\"%C0%\"",
                                "start": 627,
                                "end": 633
                              },
                              "operator": "+",
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "String",
                                    "start": 636,
                                    "end": 642
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fromCharCode",
                                    "start": 643,
                                    "end": 655
                                  },
                                  "optional": false,
                                  "computed": false,
                                  "start": 636,
                                  "end": 655
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "indexJ",
                                    "start": 656,
                                    "end": 662
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "indexJ",
                                    "start": 664,
                                    "end": 670
                                  }
                                ],
                                "optional": false,
                                "start": 636,
                                "end": 671
                              },
                              "start": 627,
                              "end": 671
                            }
                          ],
                          "optional": false,
                          "start": 617,
                          "end": 672
                        },
                        "start": 617,
                        "end": 673
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "result",
                            "start": 680,
                            "end": 686
                          },
                          "right": {
                            "type": "Literal",
                            "value": false,
                            "raw": "false",
                            "start": 689,
                            "end": 694
                          },
                          "start": 680,
                          "end": 694
                        },
                        "start": 680,
                        "end": 695
                      }
                    ],
                    "start": 609,
                    "end": 701
                  },
                  "handler": {
                    "type": "CatchClause",
                    "param": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 709,
                      "end": 710
                    },
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "ParenthesizedExpression",
                              "expression": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Identifier",
                                  "name": "e",
                                  "start": 725,
                                  "end": 726
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "name": "URIError",
                                  "start": 738,
                                  "end": 746
                                },
                                "start": 725,
                                "end": 746
                              },
                              "start": 724,
                              "end": 747
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 752,
                              "end": 756
                            },
                            "start": 724,
                            "end": 756
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "result",
                                    "start": 768,
                                    "end": 774
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": false,
                                    "raw": "false",
                                    "start": 777,
                                    "end": 782
                                  },
                                  "start": 768,
                                  "end": 782
                                },
                                "start": 768,
                                "end": 783
                              }
                            ],
                            "start": 758,
                            "end": 791
                          },
                          "alternate": null,
                          "start": 720,
                          "end": 791
                        }
                      ],
                      "start": 712,
                      "end": 797
                    },
                    "start": 702,
                    "end": 797
                  },
                  "finalizer": null,
                  "start": 605,
                  "end": 797
                }
              ],
              "start": 599,
              "end": 801
            },
            "start": 519,
            "end": 801
          }
        ],
        "start": 515,
        "end": 803
      },
      "start": 458,
      "end": 803
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 809,
          "end": 815
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 820,
          "end": 824
        },
        "start": 809,
        "end": 824
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 840,
                "end": 852
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: If B = 110xxxxx (n = 2) and (string.charAt(k + 4) and  string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If B = 110xxxxx (n = 2) and (string.charAt(k + 4) and  string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError'",
                  "start": 853,
                  "end": 987
                }
              ],
              "start": 836,
              "end": 988
            },
            "start": 830,
            "end": 989
          }
        ],
        "start": 826,
        "end": 991
      },
      "alternate": null,
      "start": 805,
      "end": 991
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 992
}