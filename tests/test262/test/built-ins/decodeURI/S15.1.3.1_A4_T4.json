{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "decodeURI",
            "start": 234,
            "end": 243
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "",
              "raw": "\"\"",
              "start": 244,
              "end": 246
            }
          ],
          "optional": false,
          "start": 234,
          "end": 247
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "",
          "raw": "\"\"",
          "start": 252,
          "end": 254
        },
        "start": 234,
        "end": 254
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 270,
                "end": 282
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: \"\"",
                  "raw": "'#1: \"\"'",
                  "start": 283,
                  "end": 291
                }
              ],
              "start": 266,
              "end": 292
            },
            "start": 260,
            "end": 293
          }
        ],
        "start": 256,
        "end": 295
      },
      "alternate": null,
      "start": 230,
      "end": 295
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "decodeURI",
            "start": 311,
            "end": 320
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "http:%2f%2Funipro.ru",
              "raw": "\"http:%2f%2Funipro.ru\"",
              "start": 321,
              "end": 343
            }
          ],
          "optional": false,
          "start": 311,
          "end": 344
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "http:%2f%2Funipro.ru",
          "raw": "\"http:%2f%2Funipro.ru\"",
          "start": 349,
          "end": 371
        },
        "start": 311,
        "end": 371
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 387,
                "end": 399
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: http:%2f%2Funipro.ru",
                  "raw": "'#2: http:%2f%2Funipro.ru'",
                  "start": 400,
                  "end": 426
                }
              ],
              "start": 383,
              "end": 427
            },
            "start": 377,
            "end": 428
          }
        ],
        "start": 373,
        "end": 430
      },
      "alternate": null,
      "start": 307,
      "end": 430
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "decodeURI",
            "start": 446,
            "end": 455
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "http://www.google.ru/support/jobs/bin/static.py%3Fpage%3dwhy-ru.html%26sid%3Dliveandwork",
              "raw": "\"http://www.google.ru/support/jobs/bin/static.py%3Fpage%3dwhy-ru.html%26sid%3Dliveandwork\"",
              "start": 456,
              "end": 546
            }
          ],
          "optional": false,
          "start": 446,
          "end": 547
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "http://www.google.ru/support/jobs/bin/static.py%3Fpage%3dwhy-ru.html%26sid%3Dliveandwork",
          "raw": "\"http://www.google.ru/support/jobs/bin/static.py%3Fpage%3dwhy-ru.html%26sid%3Dliveandwork\"",
          "start": 552,
          "end": 642
        },
        "start": 446,
        "end": 642
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 658,
                "end": 670
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: http://www.google.ru/support/jobs/bin/static.py%3Fpage%3dwhy-ru.html%26sid%3Dliveandwork\"",
                  "raw": "'#3: http://www.google.ru/support/jobs/bin/static.py%3Fpage%3dwhy-ru.html%26sid%3Dliveandwork\"'",
                  "start": 671,
                  "end": 766
                }
              ],
              "start": 654,
              "end": 767
            },
            "start": 648,
            "end": 768
          }
        ],
        "start": 644,
        "end": 770
      },
      "alternate": null,
      "start": 442,
      "end": 770
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "decodeURI",
            "start": 788,
            "end": 797
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "http://en.wikipedia.org/wiki/UTF-8%23Description",
              "raw": "\"http://en.wikipedia.org/wiki/UTF-8%23Description\"",
              "start": 798,
              "end": 848
            }
          ],
          "optional": false,
          "start": 788,
          "end": 849
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "http://en.wikipedia.org/wiki/UTF-8%23Description",
          "raw": "\"http://en.wikipedia.org/wiki/UTF-8%23Description\"",
          "start": 854,
          "end": 904
        },
        "start": 788,
        "end": 904
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 920,
                "end": 932
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "%234: http://en.wikipedia.org/wiki/UTF-8%23Description",
                  "raw": "'%234: http://en.wikipedia.org/wiki/UTF-8%23Description'",
                  "start": 933,
                  "end": 989
                }
              ],
              "start": 916,
              "end": 990
            },
            "start": 910,
            "end": 991
          }
        ],
        "start": 906,
        "end": 993
      },
      "alternate": null,
      "start": 784,
      "end": 993
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 994
}