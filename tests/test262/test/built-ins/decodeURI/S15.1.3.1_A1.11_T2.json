{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 509,
            "end": 515
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 518,
            "end": 522
          },
          "start": 509,
          "end": 522
        }
      ],
      "start": 505,
      "end": 523
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "interval",
            "start": 528,
            "end": 536
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x00",
                    "start": 544,
                    "end": 548
                  },
                  {
                    "type": "Literal",
                    "value": 47,
                    "raw": "0x2F",
                    "start": 550,
                    "end": 554
                  }
                ],
                "start": 543,
                "end": 555
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 58,
                    "raw": "0x3A",
                    "start": 560,
                    "end": 564
                  },
                  {
                    "type": "Literal",
                    "value": 64,
                    "raw": "0x40",
                    "start": 566,
                    "end": 570
                  }
                ],
                "start": 559,
                "end": 571
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 71,
                    "raw": "0x47",
                    "start": 576,
                    "end": 580
                  },
                  {
                    "type": "Literal",
                    "value": 96,
                    "raw": "0x60",
                    "start": 582,
                    "end": 586
                  }
                ],
                "start": 575,
                "end": 587
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 103,
                    "raw": "0x67",
                    "start": 592,
                    "end": 596
                  },
                  {
                    "type": "Literal",
                    "value": 65535,
                    "raw": "0xFFFF",
                    "start": 598,
                    "end": 604
                  }
                ],
                "start": 591,
                "end": 605
              }
            ],
            "start": 539,
            "end": 607
          },
          "start": 528,
          "end": 607
        }
      ],
      "start": 524,
      "end": 608
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "indexI",
              "start": 618,
              "end": 624
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 627,
              "end": 628
            },
            "start": 618,
            "end": 628
          }
        ],
        "start": 614,
        "end": 628
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "indexI",
          "start": 630,
          "end": 636
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "interval",
            "start": 639,
            "end": 647
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 648,
            "end": 654
          },
          "optional": false,
          "computed": false,
          "start": 639,
          "end": 654
        },
        "start": 630,
        "end": 654
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "indexI",
          "start": 656,
          "end": 662
        },
        "start": 656,
        "end": 664
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "indexJ",
                    "start": 679,
                    "end": 685
                  },
                  "init": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "interval",
                        "start": 688,
                        "end": 696
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "indexI",
                        "start": 697,
                        "end": 703
                      },
                      "optional": false,
                      "computed": true,
                      "start": 688,
                      "end": 704
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 705,
                      "end": 706
                    },
                    "optional": false,
                    "computed": true,
                    "start": 688,
                    "end": 707
                  },
                  "start": 679,
                  "end": 707
                }
              ],
              "start": 675,
              "end": 707
            },
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 709,
                "end": 715
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "interval",
                    "start": 719,
                    "end": 727
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "indexI",
                    "start": 728,
                    "end": 734
                  },
                  "optional": false,
                  "computed": true,
                  "start": 719,
                  "end": 735
                },
                "property": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 736,
                  "end": 737
                },
                "optional": false,
                "computed": true,
                "start": 719,
                "end": 738
              },
              "start": 709,
              "end": 738
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 740,
                "end": 746
              },
              "start": 740,
              "end": 748
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "decodeURI",
                            "start": 768,
                            "end": 777
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Literal",
                                  "value": "%E0",
                                  "raw": "\"%E0\"",
                                  "start": 778,
                                  "end": 783
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "value": "%A0%",
                                  "raw": "\"%A0%\"",
                                  "start": 786,
                                  "end": 792
                                },
                                "start": 778,
                                "end": 792
                              },
                              "operator": "+",
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "String",
                                    "start": 795,
                                    "end": 801
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fromCharCode",
                                    "start": 802,
                                    "end": 814
                                  },
                                  "optional": false,
                                  "computed": false,
                                  "start": 795,
                                  "end": 814
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "indexJ",
                                    "start": 815,
                                    "end": 821
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "indexJ",
                                    "start": 823,
                                    "end": 829
                                  }
                                ],
                                "optional": false,
                                "start": 795,
                                "end": 830
                              },
                              "start": 778,
                              "end": 830
                            }
                          ],
                          "optional": false,
                          "start": 768,
                          "end": 831
                        },
                        "start": 768,
                        "end": 832
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "result",
                            "start": 839,
                            "end": 845
                          },
                          "right": {
                            "type": "Literal",
                            "value": false,
                            "raw": "false",
                            "start": 848,
                            "end": 853
                          },
                          "start": 839,
                          "end": 853
                        },
                        "start": 839,
                        "end": 854
                      }
                    ],
                    "start": 760,
                    "end": 860
                  },
                  "handler": {
                    "type": "CatchClause",
                    "param": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 868,
                      "end": 869
                    },
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "ParenthesizedExpression",
                              "expression": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Identifier",
                                  "name": "e",
                                  "start": 884,
                                  "end": 885
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "name": "URIError",
                                  "start": 897,
                                  "end": 905
                                },
                                "start": 884,
                                "end": 905
                              },
                              "start": 883,
                              "end": 906
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 911,
                              "end": 915
                            },
                            "start": 883,
                            "end": 915
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "result",
                                    "start": 927,
                                    "end": 933
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": false,
                                    "raw": "false",
                                    "start": 936,
                                    "end": 941
                                  },
                                  "start": 927,
                                  "end": 941
                                },
                                "start": 927,
                                "end": 942
                              }
                            ],
                            "start": 917,
                            "end": 950
                          },
                          "alternate": null,
                          "start": 879,
                          "end": 950
                        }
                      ],
                      "start": 871,
                      "end": 956
                    },
                    "start": 861,
                    "end": 956
                  },
                  "finalizer": null,
                  "start": 756,
                  "end": 956
                }
              ],
              "start": 750,
              "end": 960
            },
            "start": 670,
            "end": 960
          }
        ],
        "start": 666,
        "end": 962
      },
      "start": 609,
      "end": 962
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 968,
          "end": 974
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 979,
          "end": 983
        },
        "start": 968,
        "end": 983
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 999,
                "end": 1011
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: If B = 1110xxxx (n = 3) and (string.charAt(k + 7) and  string.charAt(k + 8)) do not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If B = 1110xxxx (n = 3) and (string.charAt(k + 7) and  string.charAt(k + 8)) do not represent hexadecimal digits, throw URIError'",
                  "start": 1012,
                  "end": 1146
                }
              ],
              "start": 995,
              "end": 1147
            },
            "start": 989,
            "end": 1148
          }
        ],
        "start": 985,
        "end": 1150
      },
      "alternate": null,
      "start": 964,
      "end": 1150
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1151
}