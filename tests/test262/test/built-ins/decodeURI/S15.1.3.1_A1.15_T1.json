{
  "type": "Program",
  "start": 0,
  "end": 1785,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 380,
      "end": 399,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 384,
          "end": 398,
          "id": {
            "type": "Identifier",
            "start": 384,
            "end": 394,
            "name": "errorCount"
          },
          "init": {
            "type": "Literal",
            "start": 397,
            "end": 398,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 400,
      "end": 414,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 404,
          "end": 413,
          "id": {
            "type": "Identifier",
            "start": 404,
            "end": 409,
            "name": "count"
          },
          "init": {
            "type": "Literal",
            "start": 412,
            "end": 413,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 415,
      "end": 426,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 419,
          "end": 425,
          "id": {
            "type": "Identifier",
            "start": 419,
            "end": 425,
            "name": "indexP"
          },
          "init": null
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 427,
      "end": 442,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 431,
          "end": 441,
          "id": {
            "type": "Identifier",
            "start": 431,
            "end": 437,
            "name": "indexO"
          },
          "init": {
            "type": "Literal",
            "start": 440,
            "end": 441,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "ForStatement",
      "start": 444,
      "end": 1376,
      "init": {
        "type": "VariableDeclaration",
        "start": 449,
        "end": 466,
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 453,
            "end": 466,
            "id": {
              "type": "Identifier",
              "start": 453,
              "end": 459,
              "name": "indexB"
            },
            "init": {
              "type": "Literal",
              "start": 462,
              "end": 466,
              "value": 240,
              "raw": "0xF0"
            }
          }
        ]
      },
      "test": {
        "type": "BinaryExpression",
        "start": 468,
        "end": 482,
        "left": {
          "type": "Identifier",
          "start": 468,
          "end": 474,
          "name": "indexB"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 478,
          "end": 482,
          "value": 247,
          "raw": "0xF7"
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 484,
        "end": 492,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 484,
          "end": 490,
          "name": "indexB"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 494,
        "end": 1376,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 498,
            "end": 506,
            "expression": {
              "type": "UpdateExpression",
              "start": 498,
              "end": 505,
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "start": 498,
                "end": 503,
                "name": "count"
              }
            }
          },
          {
            "type": "VariableDeclaration",
            "start": 509,
            "end": 554,
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 513,
                "end": 553,
                "id": {
                  "type": "Identifier",
                  "start": 513,
                  "end": 517,
                  "name": "hexB"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 520,
                  "end": 553,
                  "callee": {
                    "type": "Identifier",
                    "start": 520,
                    "end": 545,
                    "name": "decimalToPercentHexString"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 546,
                      "end": 552,
                      "name": "indexB"
                    }
                  ],
                  "optional": false
                }
              }
            ]
          },
          {
            "type": "VariableDeclaration",
            "start": 557,
            "end": 575,
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 561,
                "end": 574,
                "id": {
                  "type": "Identifier",
                  "start": 561,
                  "end": 567,
                  "name": "result"
                },
                "init": {
                  "type": "Literal",
                  "start": 570,
                  "end": 574,
                  "value": true,
                  "raw": "true"
                }
              }
            ]
          },
          {
            "type": "ForStatement",
            "start": 578,
            "end": 832,
            "init": {
              "type": "VariableDeclaration",
              "start": 583,
              "end": 600,
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 587,
                  "end": 600,
                  "id": {
                    "type": "Identifier",
                    "start": 587,
                    "end": 593,
                    "name": "indexC"
                  },
                  "init": {
                    "type": "Literal",
                    "start": 596,
                    "end": 600,
                    "value": 0,
                    "raw": "0x00"
                  }
                }
              ]
            },
            "test": {
              "type": "BinaryExpression",
              "start": 602,
              "end": 616,
              "left": {
                "type": "Identifier",
                "start": 602,
                "end": 608,
                "name": "indexC"
              },
              "operator": "<=",
              "right": {
                "type": "Literal",
                "start": 612,
                "end": 616,
                "value": 127,
                "raw": "0x7F"
              }
            },
            "update": {
              "type": "UpdateExpression",
              "start": 618,
              "end": 626,
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "start": 618,
                "end": 624,
                "name": "indexC"
              }
            },
            "body": {
              "type": "BlockStatement",
              "start": 628,
              "end": 832,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 634,
                  "end": 679,
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 638,
                      "end": 678,
                      "id": {
                        "type": "Identifier",
                        "start": 638,
                        "end": 642,
                        "name": "hexC"
                      },
                      "init": {
                        "type": "CallExpression",
                        "start": 645,
                        "end": 678,
                        "callee": {
                          "type": "Identifier",
                          "start": 645,
                          "end": 670,
                          "name": "decimalToPercentHexString"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 671,
                            "end": 677,
                            "name": "indexC"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "start": 684,
                  "end": 808,
                  "block": {
                    "type": "BlockStatement",
                    "start": 688,
                    "end": 736,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 696,
                        "end": 730,
                        "expression": {
                          "type": "CallExpression",
                          "start": 696,
                          "end": 729,
                          "callee": {
                            "type": "Identifier",
                            "start": 696,
                            "end": 705,
                            "name": "decodeURI"
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "start": 706,
                              "end": 728,
                              "left": {
                                "type": "BinaryExpression",
                                "start": 706,
                                "end": 717,
                                "left": {
                                  "type": "Identifier",
                                  "start": 706,
                                  "end": 710,
                                  "name": "hexB"
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Identifier",
                                  "start": 713,
                                  "end": 717,
                                  "name": "hexC"
                                }
                              },
                              "operator": "+",
                              "right": {
                                "type": "Literal",
                                "start": 720,
                                "end": 728,
                                "value": "%A0%A0",
                                "raw": "\"%A0%A0\""
                              }
                            }
                          ],
                          "optional": false
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 737,
                    "end": 808,
                    "param": {
                      "type": "Identifier",
                      "start": 744,
                      "end": 745,
                      "name": "e"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 747,
                      "end": 808,
                      "body": [
                        {
                          "type": "IfStatement",
                          "start": 755,
                          "end": 802,
                          "test": {
                            "type": "BinaryExpression",
                            "start": 759,
                            "end": 791,
                            "left": {
                              "type": "ParenthesizedExpression",
                              "start": 759,
                              "end": 782,
                              "expression": {
                                "type": "BinaryExpression",
                                "start": 760,
                                "end": 781,
                                "left": {
                                  "type": "Identifier",
                                  "start": 760,
                                  "end": 761,
                                  "name": "e"
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "start": 773,
                                  "end": 781,
                                  "name": "URIError"
                                }
                              }
                            },
                            "operator": "===",
                            "right": {
                              "type": "Literal",
                              "start": 787,
                              "end": 791,
                              "value": true,
                              "raw": "true"
                            }
                          },
                          "consequent": {
                            "type": "ContinueStatement",
                            "start": 793,
                            "end": 802,
                            "label": null
                          },
                          "alternate": null
                        }
                      ]
                    }
                  },
                  "finalizer": null
                },
                {
                  "type": "ExpressionStatement",
                  "start": 813,
                  "end": 828,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 813,
                    "end": 827,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 813,
                      "end": 819,
                      "name": "result"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 822,
                      "end": 827,
                      "value": false,
                      "raw": "false"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "IfStatement",
            "start": 835,
            "end": 1374,
            "test": {
              "type": "BinaryExpression",
              "start": 839,
              "end": 854,
              "left": {
                "type": "Identifier",
                "start": 839,
                "end": 845,
                "name": "result"
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 850,
                "end": 854,
                "value": true,
                "raw": "true"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 856,
              "end": 1374,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 862,
                  "end": 1331,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 866,
                    "end": 878,
                    "left": {
                      "type": "Identifier",
                      "start": 866,
                      "end": 872,
                      "name": "indexO"
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "start": 877,
                      "end": 878,
                      "value": 0,
                      "raw": "0"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 880,
                    "end": 910,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 888,
                        "end": 904,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 888,
                          "end": 903,
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "start": 888,
                            "end": 894,
                            "name": "indexO"
                          },
                          "right": {
                            "type": "Identifier",
                            "start": 897,
                            "end": 903,
                            "name": "indexB"
                          }
                        }
                      }
                    ]
                  },
                  "alternate": {
                    "type": "BlockStatement",
                    "start": 916,
                    "end": 1331,
                    "body": [
                      {
                        "type": "IfStatement",
                        "start": 924,
                        "end": 1325,
                        "test": {
                          "type": "BinaryExpression",
                          "start": 928,
                          "end": 951,
                          "left": {
                            "type": "ParenthesizedExpression",
                            "start": 928,
                            "end": 945,
                            "expression": {
                              "type": "BinaryExpression",
                              "start": 929,
                              "end": 944,
                              "left": {
                                "type": "Identifier",
                                "start": 929,
                                "end": 935,
                                "name": "indexB"
                              },
                              "operator": "-",
                              "right": {
                                "type": "Identifier",
                                "start": 938,
                                "end": 944,
                                "name": "indexP"
                              }
                            }
                          },
                          "operator": "!==",
                          "right": {
                            "type": "Literal",
                            "start": 950,
                            "end": 951,
                            "value": 1,
                            "raw": "1"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "start": 953,
                          "end": 1325,
                          "body": [
                            {
                              "type": "IfStatement",
                              "start": 963,
                              "end": 1292,
                              "test": {
                                "type": "BinaryExpression",
                                "start": 967,
                                "end": 990,
                                "left": {
                                  "type": "ParenthesizedExpression",
                                  "start": 967,
                                  "end": 984,
                                  "expression": {
                                    "type": "BinaryExpression",
                                    "start": 968,
                                    "end": 983,
                                    "left": {
                                      "type": "Identifier",
                                      "start": 968,
                                      "end": 974,
                                      "name": "indexP"
                                    },
                                    "operator": "-",
                                    "right": {
                                      "type": "Identifier",
                                      "start": 977,
                                      "end": 983,
                                      "name": "indexO"
                                    }
                                  }
                                },
                                "operator": "!==",
                                "right": {
                                  "type": "Literal",
                                  "start": 989,
                                  "end": 990,
                                  "value": 0,
                                  "raw": "0"
                                }
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "start": 992,
                                "end": 1166,
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "start": 1004,
                                    "end": 1042,
                                    "kind": "var",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "start": 1008,
                                        "end": 1041,
                                        "id": {
                                          "type": "Identifier",
                                          "start": 1008,
                                          "end": 1012,
                                          "name": "hexP"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "start": 1015,
                                          "end": 1041,
                                          "callee": {
                                            "type": "Identifier",
                                            "start": 1015,
                                            "end": 1033,
                                            "name": "decimalToHexString"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "start": 1034,
                                              "end": 1040,
                                              "name": "indexP"
                                            }
                                          ],
                                          "optional": false
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "start": 1053,
                                    "end": 1091,
                                    "kind": "var",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "start": 1057,
                                        "end": 1090,
                                        "id": {
                                          "type": "Identifier",
                                          "start": 1057,
                                          "end": 1061,
                                          "name": "hexO"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "start": 1064,
                                          "end": 1090,
                                          "callee": {
                                            "type": "Identifier",
                                            "start": 1064,
                                            "end": 1082,
                                            "name": "decimalToHexString"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "start": 1083,
                                              "end": 1089,
                                              "name": "indexO"
                                            }
                                          ],
                                          "optional": false
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ThrowStatement",
                                    "start": 1102,
                                    "end": 1156,
                                    "argument": {
                                      "type": "NewExpression",
                                      "start": 1108,
                                      "end": 1155,
                                      "callee": {
                                        "type": "Identifier",
                                        "start": 1112,
                                        "end": 1124,
                                        "name": "Test262Error"
                                      },
                                      "arguments": [
                                        {
                                          "type": "BinaryExpression",
                                          "start": 1125,
                                          "end": 1154,
                                          "left": {
                                            "type": "BinaryExpression",
                                            "start": 1125,
                                            "end": 1148,
                                            "left": {
                                              "type": "BinaryExpression",
                                              "start": 1125,
                                              "end": 1141,
                                              "left": {
                                                "type": "BinaryExpression",
                                                "start": 1125,
                                                "end": 1135,
                                                "left": {
                                                  "type": "Literal",
                                                  "start": 1125,
                                                  "end": 1128,
                                                  "value": "#",
                                                  "raw": "'#'"
                                                },
                                                "operator": "+",
                                                "right": {
                                                  "type": "Identifier",
                                                  "start": 1131,
                                                  "end": 1135,
                                                  "name": "hexO"
                                                }
                                              },
                                              "operator": "+",
                                              "right": {
                                                "type": "Literal",
                                                "start": 1138,
                                                "end": 1141,
                                                "value": "-",
                                                "raw": "'-'"
                                              }
                                            },
                                            "operator": "+",
                                            "right": {
                                              "type": "Identifier",
                                              "start": 1144,
                                              "end": 1148,
                                              "name": "hexP"
                                            }
                                          },
                                          "operator": "+",
                                          "right": {
                                            "type": "Literal",
                                            "start": 1151,
                                            "end": 1154,
                                            "value": " ",
                                            "raw": "' '"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "alternate": {
                                "type": "BlockStatement",
                                "start": 1180,
                                "end": 1292,
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "start": 1192,
                                    "end": 1230,
                                    "kind": "var",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "start": 1196,
                                        "end": 1229,
                                        "id": {
                                          "type": "Identifier",
                                          "start": 1196,
                                          "end": 1200,
                                          "name": "hexP"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "start": 1203,
                                          "end": 1229,
                                          "callee": {
                                            "type": "Identifier",
                                            "start": 1203,
                                            "end": 1221,
                                            "name": "decimalToHexString"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "start": 1222,
                                              "end": 1228,
                                              "name": "indexP"
                                            }
                                          ],
                                          "optional": false
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ThrowStatement",
                                    "start": 1241,
                                    "end": 1282,
                                    "argument": {
                                      "type": "NewExpression",
                                      "start": 1247,
                                      "end": 1281,
                                      "callee": {
                                        "type": "Identifier",
                                        "start": 1251,
                                        "end": 1263,
                                        "name": "Test262Error"
                                      },
                                      "arguments": [
                                        {
                                          "type": "BinaryExpression",
                                          "start": 1264,
                                          "end": 1280,
                                          "left": {
                                            "type": "BinaryExpression",
                                            "start": 1264,
                                            "end": 1274,
                                            "left": {
                                              "type": "Literal",
                                              "start": 1264,
                                              "end": 1267,
                                              "value": "#",
                                              "raw": "'#'"
                                            },
                                            "operator": "+",
                                            "right": {
                                              "type": "Identifier",
                                              "start": 1270,
                                              "end": 1274,
                                              "name": "hexP"
                                            }
                                          },
                                          "operator": "+",
                                          "right": {
                                            "type": "Literal",
                                            "start": 1277,
                                            "end": 1280,
                                            "value": " ",
                                            "raw": "' '"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "start": 1301,
                              "end": 1317,
                              "expression": {
                                "type": "AssignmentExpression",
                                "start": 1301,
                                "end": 1316,
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "start": 1301,
                                  "end": 1307,
                                  "name": "indexO"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "start": 1310,
                                  "end": 1316,
                                  "name": "indexB"
                                }
                              }
                            }
                          ]
                        },
                        "alternate": null
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1336,
                  "end": 1352,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1336,
                    "end": 1351,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1336,
                      "end": 1342,
                      "name": "indexP"
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 1345,
                      "end": 1351,
                      "name": "indexB"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1357,
                  "end": 1370,
                  "expression": {
                    "type": "UpdateExpression",
                    "start": 1357,
                    "end": 1369,
                    "operator": "++",
                    "prefix": false,
                    "argument": {
                      "type": "Identifier",
                      "start": 1357,
                      "end": 1367,
                      "name": "errorCount"
                    }
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 1378,
      "end": 1784,
      "test": {
        "type": "BinaryExpression",
        "start": 1382,
        "end": 1396,
        "left": {
          "type": "Identifier",
          "start": 1382,
          "end": 1392,
          "name": "errorCount"
        },
        "operator": ">",
        "right": {
          "type": "Literal",
          "start": 1395,
          "end": 1396,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1398,
        "end": 1784,
        "body": [
          {
            "type": "IfStatement",
            "start": 1402,
            "end": 1681,
            "test": {
              "type": "BinaryExpression",
              "start": 1406,
              "end": 1429,
              "left": {
                "type": "ParenthesizedExpression",
                "start": 1406,
                "end": 1423,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 1407,
                  "end": 1422,
                  "left": {
                    "type": "Identifier",
                    "start": 1407,
                    "end": 1413,
                    "name": "indexP"
                  },
                  "operator": "-",
                  "right": {
                    "type": "Identifier",
                    "start": 1416,
                    "end": 1422,
                    "name": "indexO"
                  }
                }
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 1428,
                "end": 1429,
                "value": 0,
                "raw": "0"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1431,
              "end": 1581,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 1437,
                  "end": 1475,
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1441,
                      "end": 1474,
                      "id": {
                        "type": "Identifier",
                        "start": 1441,
                        "end": 1445,
                        "name": "hexP"
                      },
                      "init": {
                        "type": "CallExpression",
                        "start": 1448,
                        "end": 1474,
                        "callee": {
                          "type": "Identifier",
                          "start": 1448,
                          "end": 1466,
                          "name": "decimalToHexString"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1467,
                            "end": 1473,
                            "name": "indexP"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                {
                  "type": "VariableDeclaration",
                  "start": 1480,
                  "end": 1518,
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1484,
                      "end": 1517,
                      "id": {
                        "type": "Identifier",
                        "start": 1484,
                        "end": 1488,
                        "name": "hexO"
                      },
                      "init": {
                        "type": "CallExpression",
                        "start": 1491,
                        "end": 1517,
                        "callee": {
                          "type": "Identifier",
                          "start": 1491,
                          "end": 1509,
                          "name": "decimalToHexString"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1510,
                            "end": 1516,
                            "name": "indexO"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                {
                  "type": "ThrowStatement",
                  "start": 1523,
                  "end": 1577,
                  "argument": {
                    "type": "NewExpression",
                    "start": 1529,
                    "end": 1576,
                    "callee": {
                      "type": "Identifier",
                      "start": 1533,
                      "end": 1545,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 1546,
                        "end": 1575,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 1546,
                          "end": 1569,
                          "left": {
                            "type": "BinaryExpression",
                            "start": 1546,
                            "end": 1562,
                            "left": {
                              "type": "BinaryExpression",
                              "start": 1546,
                              "end": 1556,
                              "left": {
                                "type": "Literal",
                                "start": 1546,
                                "end": 1549,
                                "value": "#",
                                "raw": "'#'"
                              },
                              "operator": "+",
                              "right": {
                                "type": "Identifier",
                                "start": 1552,
                                "end": 1556,
                                "name": "hexO"
                              }
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "start": 1559,
                              "end": 1562,
                              "value": "-",
                              "raw": "'-'"
                            }
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 1565,
                            "end": 1569,
                            "name": "hexP"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1572,
                          "end": 1575,
                          "value": " ",
                          "raw": "' '"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": {
              "type": "BlockStatement",
              "start": 1587,
              "end": 1681,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 1593,
                  "end": 1631,
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1597,
                      "end": 1630,
                      "id": {
                        "type": "Identifier",
                        "start": 1597,
                        "end": 1601,
                        "name": "hexP"
                      },
                      "init": {
                        "type": "CallExpression",
                        "start": 1604,
                        "end": 1630,
                        "callee": {
                          "type": "Identifier",
                          "start": 1604,
                          "end": 1622,
                          "name": "decimalToHexString"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1623,
                            "end": 1629,
                            "name": "indexP"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                {
                  "type": "ThrowStatement",
                  "start": 1636,
                  "end": 1677,
                  "argument": {
                    "type": "NewExpression",
                    "start": 1642,
                    "end": 1676,
                    "callee": {
                      "type": "Identifier",
                      "start": 1646,
                      "end": 1658,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 1659,
                        "end": 1675,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 1659,
                          "end": 1669,
                          "left": {
                            "type": "Literal",
                            "start": 1659,
                            "end": 1662,
                            "value": "#",
                            "raw": "'#'"
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 1665,
                            "end": 1669,
                            "name": "hexP"
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1672,
                          "end": 1675,
                          "value": " ",
                          "raw": "' '"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "ThrowStatement",
            "start": 1684,
            "end": 1782,
            "argument": {
              "type": "NewExpression",
              "start": 1690,
              "end": 1781,
              "callee": {
                "type": "Identifier",
                "start": 1694,
                "end": 1706,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1707,
                  "end": 1780,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 1707,
                    "end": 1774,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 1707,
                      "end": 1766,
                      "left": {
                        "type": "BinaryExpression",
                        "start": 1707,
                        "end": 1735,
                        "left": {
                          "type": "Literal",
                          "start": 1707,
                          "end": 1722,
                          "value": "Total error: ",
                          "raw": "'Total error: '"
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "start": 1725,
                          "end": 1735,
                          "name": "errorCount"
                        }
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 1738,
                        "end": 1766,
                        "value": " bad Unicode character in ",
                        "raw": "' bad Unicode character in '"
                      }
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 1769,
                      "end": 1774,
                      "name": "count"
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 1777,
                    "end": 1780,
                    "value": " ",
                    "raw": "' '"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}