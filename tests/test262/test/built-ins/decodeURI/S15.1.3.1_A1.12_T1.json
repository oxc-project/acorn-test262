{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 566,
            "end": 572
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 575,
            "end": 579
          },
          "start": 566,
          "end": 579
        }
      ],
      "start": 562,
      "end": 580
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "interval",
            "start": 585,
            "end": 593
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x00",
                    "start": 601,
                    "end": 605
                  },
                  {
                    "type": "Literal",
                    "value": 47,
                    "raw": "0x2F",
                    "start": 607,
                    "end": 611
                  }
                ],
                "start": 600,
                "end": 612
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 58,
                    "raw": "0x3A",
                    "start": 617,
                    "end": 621
                  },
                  {
                    "type": "Literal",
                    "value": 64,
                    "raw": "0x40",
                    "start": 623,
                    "end": 627
                  }
                ],
                "start": 616,
                "end": 628
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 71,
                    "raw": "0x47",
                    "start": 633,
                    "end": 637
                  },
                  {
                    "type": "Literal",
                    "value": 96,
                    "raw": "0x60",
                    "start": 639,
                    "end": 643
                  }
                ],
                "start": 632,
                "end": 644
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 103,
                    "raw": "0x67",
                    "start": 649,
                    "end": 653
                  },
                  {
                    "type": "Literal",
                    "value": 65535,
                    "raw": "0xFFFF",
                    "start": 655,
                    "end": 661
                  }
                ],
                "start": 648,
                "end": 662
              }
            ],
            "start": 596,
            "end": 664
          },
          "start": 585,
          "end": 664
        }
      ],
      "start": 581,
      "end": 665
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "indexI",
              "start": 675,
              "end": 681
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 684,
              "end": 685
            },
            "start": 675,
            "end": 685
          }
        ],
        "start": 671,
        "end": 685
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "indexI",
          "start": 687,
          "end": 693
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "interval",
            "start": 696,
            "end": 704
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 705,
            "end": 711
          },
          "optional": false,
          "computed": false,
          "start": 696,
          "end": 711
        },
        "start": 687,
        "end": 711
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "indexI",
          "start": 713,
          "end": 719
        },
        "start": 713,
        "end": 721
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "indexJ",
                    "start": 736,
                    "end": 742
                  },
                  "init": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "interval",
                        "start": 745,
                        "end": 753
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "indexI",
                        "start": 754,
                        "end": 760
                      },
                      "optional": false,
                      "computed": true,
                      "start": 745,
                      "end": 761
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 762,
                      "end": 763
                    },
                    "optional": false,
                    "computed": true,
                    "start": 745,
                    "end": 764
                  },
                  "start": 736,
                  "end": 764
                }
              ],
              "start": 732,
              "end": 764
            },
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 766,
                "end": 772
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "interval",
                    "start": 776,
                    "end": 784
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "indexI",
                    "start": 785,
                    "end": 791
                  },
                  "optional": false,
                  "computed": true,
                  "start": 776,
                  "end": 792
                },
                "property": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 793,
                  "end": 794
                },
                "optional": false,
                "computed": true,
                "start": 776,
                "end": 795
              },
              "start": 766,
              "end": 795
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 797,
                "end": 803
              },
              "start": 797,
              "end": 805
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "decodeURI",
                            "start": 825,
                            "end": 834
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Literal",
                                  "value": "%F0%",
                                  "raw": "\"%F0%\"",
                                  "start": 835,
                                  "end": 841
                                },
                                "operator": "+",
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "object": {
                                      "type": "Identifier",
                                      "name": "String",
                                      "start": 844,
                                      "end": 850
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "fromCharCode",
                                      "start": 851,
                                      "end": 863
                                    },
                                    "optional": false,
                                    "computed": false,
                                    "start": 844,
                                    "end": 863
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "indexJ",
                                      "start": 864,
                                      "end": 870
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "indexJ",
                                      "start": 872,
                                      "end": 878
                                    }
                                  ],
                                  "optional": false,
                                  "start": 844,
                                  "end": 879
                                },
                                "start": 835,
                                "end": 879
                              },
                              "operator": "+",
                              "right": {
                                "type": "Literal",
                                "value": "%A0%A0",
                                "raw": "\"%A0%A0\"",
                                "start": 882,
                                "end": 890
                              },
                              "start": 835,
                              "end": 890
                            }
                          ],
                          "optional": false,
                          "start": 825,
                          "end": 891
                        },
                        "start": 825,
                        "end": 892
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "result",
                            "start": 899,
                            "end": 905
                          },
                          "right": {
                            "type": "Literal",
                            "value": false,
                            "raw": "false",
                            "start": 908,
                            "end": 913
                          },
                          "start": 899,
                          "end": 913
                        },
                        "start": 899,
                        "end": 914
                      }
                    ],
                    "start": 817,
                    "end": 920
                  },
                  "handler": {
                    "type": "CatchClause",
                    "param": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 928,
                      "end": 929
                    },
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "ParenthesizedExpression",
                              "expression": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Identifier",
                                  "name": "e",
                                  "start": 944,
                                  "end": 945
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "name": "URIError",
                                  "start": 957,
                                  "end": 965
                                },
                                "start": 944,
                                "end": 965
                              },
                              "start": 943,
                              "end": 966
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 971,
                              "end": 975
                            },
                            "start": 943,
                            "end": 975
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "result",
                                    "start": 987,
                                    "end": 993
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": false,
                                    "raw": "false",
                                    "start": 996,
                                    "end": 1001
                                  },
                                  "start": 987,
                                  "end": 1001
                                },
                                "start": 987,
                                "end": 1002
                              }
                            ],
                            "start": 977,
                            "end": 1010
                          },
                          "alternate": null,
                          "start": 939,
                          "end": 1010
                        }
                      ],
                      "start": 931,
                      "end": 1016
                    },
                    "start": 921,
                    "end": 1016
                  },
                  "finalizer": null,
                  "start": 813,
                  "end": 1016
                }
              ],
              "start": 807,
              "end": 1020
            },
            "start": 727,
            "end": 1020
          }
        ],
        "start": 723,
        "end": 1022
      },
      "start": 666,
      "end": 1022
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 1028,
          "end": 1034
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1039,
          "end": 1043
        },
        "start": 1028,
        "end": 1043
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1059,
                "end": 1071
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: If B = 11110xxx (n = 4) and (string.charAt(k + 4) and string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If B = 11110xxx (n = 4) and (string.charAt(k + 4) and string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError'",
                  "start": 1072,
                  "end": 1205
                }
              ],
              "start": 1055,
              "end": 1206
            },
            "start": 1049,
            "end": 1207
          }
        ],
        "start": 1045,
        "end": 1209
      },
      "alternate": null,
      "start": 1024,
      "end": 1209
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1210
}