{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 568,
            "end": 574
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 577,
            "end": 581
          },
          "start": 568,
          "end": 581
        }
      ],
      "start": 564,
      "end": 582
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "interval",
            "start": 587,
            "end": 595
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x00",
                    "start": 603,
                    "end": 607
                  },
                  {
                    "type": "Literal",
                    "value": 47,
                    "raw": "0x2F",
                    "start": 609,
                    "end": 613
                  }
                ],
                "start": 602,
                "end": 614
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 58,
                    "raw": "0x3A",
                    "start": 619,
                    "end": 623
                  },
                  {
                    "type": "Literal",
                    "value": 64,
                    "raw": "0x40",
                    "start": 625,
                    "end": 629
                  }
                ],
                "start": 618,
                "end": 630
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 71,
                    "raw": "0x47",
                    "start": 635,
                    "end": 639
                  },
                  {
                    "type": "Literal",
                    "value": 96,
                    "raw": "0x60",
                    "start": 641,
                    "end": 645
                  }
                ],
                "start": 634,
                "end": 646
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 103,
                    "raw": "0x67",
                    "start": 651,
                    "end": 655
                  },
                  {
                    "type": "Literal",
                    "value": 65535,
                    "raw": "0xFFFF",
                    "start": 657,
                    "end": 663
                  }
                ],
                "start": 650,
                "end": 664
              }
            ],
            "start": 598,
            "end": 666
          },
          "start": 587,
          "end": 666
        }
      ],
      "start": 583,
      "end": 667
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "indexI",
              "start": 677,
              "end": 683
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 686,
              "end": 687
            },
            "start": 677,
            "end": 687
          }
        ],
        "start": 673,
        "end": 687
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "indexI",
          "start": 689,
          "end": 695
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "interval",
            "start": 698,
            "end": 706
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 707,
            "end": 713
          },
          "optional": false,
          "computed": false,
          "start": 698,
          "end": 713
        },
        "start": 689,
        "end": 713
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "indexI",
          "start": 715,
          "end": 721
        },
        "start": 715,
        "end": 723
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "indexJ",
                    "start": 738,
                    "end": 744
                  },
                  "init": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "interval",
                        "start": 747,
                        "end": 755
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "indexI",
                        "start": 756,
                        "end": 762
                      },
                      "optional": false,
                      "computed": true,
                      "start": 747,
                      "end": 763
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 764,
                      "end": 765
                    },
                    "optional": false,
                    "computed": true,
                    "start": 747,
                    "end": 766
                  },
                  "start": 738,
                  "end": 766
                }
              ],
              "start": 734,
              "end": 766
            },
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 768,
                "end": 774
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "interval",
                    "start": 778,
                    "end": 786
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "indexI",
                    "start": 787,
                    "end": 793
                  },
                  "optional": false,
                  "computed": true,
                  "start": 778,
                  "end": 794
                },
                "property": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 795,
                  "end": 796
                },
                "optional": false,
                "computed": true,
                "start": 778,
                "end": 797
              },
              "start": 768,
              "end": 797
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 799,
                "end": 805
              },
              "start": 799,
              "end": 807
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "decodeURI",
                            "start": 827,
                            "end": 836
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Literal",
                                  "value": "%F0",
                                  "raw": "\"%F0\"",
                                  "start": 837,
                                  "end": 842
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "value": "%A0%A0%",
                                  "raw": "\"%A0%A0%\"",
                                  "start": 845,
                                  "end": 854
                                },
                                "start": 837,
                                "end": 854
                              },
                              "operator": "+",
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "String",
                                    "start": 857,
                                    "end": 863
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fromCharCode",
                                    "start": 864,
                                    "end": 876
                                  },
                                  "optional": false,
                                  "computed": false,
                                  "start": 857,
                                  "end": 876
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "indexJ",
                                    "start": 877,
                                    "end": 883
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "indexJ",
                                    "start": 885,
                                    "end": 891
                                  }
                                ],
                                "optional": false,
                                "start": 857,
                                "end": 892
                              },
                              "start": 837,
                              "end": 892
                            }
                          ],
                          "optional": false,
                          "start": 827,
                          "end": 893
                        },
                        "start": 827,
                        "end": 894
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "result",
                            "start": 901,
                            "end": 907
                          },
                          "right": {
                            "type": "Literal",
                            "value": false,
                            "raw": "false",
                            "start": 910,
                            "end": 915
                          },
                          "start": 901,
                          "end": 915
                        },
                        "start": 901,
                        "end": 916
                      }
                    ],
                    "start": 819,
                    "end": 922
                  },
                  "handler": {
                    "type": "CatchClause",
                    "param": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 930,
                      "end": 931
                    },
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "ParenthesizedExpression",
                              "expression": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Identifier",
                                  "name": "e",
                                  "start": 946,
                                  "end": 947
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "name": "URIError",
                                  "start": 959,
                                  "end": 967
                                },
                                "start": 946,
                                "end": 967
                              },
                              "start": 945,
                              "end": 968
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 973,
                              "end": 977
                            },
                            "start": 945,
                            "end": 977
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "result",
                                    "start": 989,
                                    "end": 995
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": false,
                                    "raw": "false",
                                    "start": 998,
                                    "end": 1003
                                  },
                                  "start": 989,
                                  "end": 1003
                                },
                                "start": 989,
                                "end": 1004
                              }
                            ],
                            "start": 979,
                            "end": 1012
                          },
                          "alternate": null,
                          "start": 941,
                          "end": 1012
                        }
                      ],
                      "start": 933,
                      "end": 1018
                    },
                    "start": 923,
                    "end": 1018
                  },
                  "finalizer": null,
                  "start": 815,
                  "end": 1018
                }
              ],
              "start": 809,
              "end": 1022
            },
            "start": 729,
            "end": 1022
          }
        ],
        "start": 725,
        "end": 1024
      },
      "start": 668,
      "end": 1024
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 1030,
          "end": 1036
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1041,
          "end": 1045
        },
        "start": 1030,
        "end": 1045
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1061,
                "end": 1073
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: If B = 11110xxx (n = 4) and (string.charAt(k + 10) and string.charAt(k + 11)) do not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If B = 11110xxx (n = 4) and (string.charAt(k + 10) and string.charAt(k + 11)) do not represent hexadecimal digits, throw URIError'",
                  "start": 1074,
                  "end": 1209
                }
              ],
              "start": 1057,
              "end": 1210
            },
            "start": 1051,
            "end": 1211
          }
        ],
        "start": 1047,
        "end": 1213
      },
      "alternate": null,
      "start": 1026,
      "end": 1213
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1214
}