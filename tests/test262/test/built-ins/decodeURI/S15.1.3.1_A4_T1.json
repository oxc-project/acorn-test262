{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "decodeURI",
            "start": 246,
            "end": 255
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "http://unipro.ru/0123456789",
              "raw": "\"http://unipro.ru/0123456789\"",
              "start": 256,
              "end": 285
            }
          ],
          "optional": false,
          "start": 246,
          "end": 286
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "http://unipro.ru/0123456789",
          "raw": "\"http://unipro.ru/0123456789\"",
          "start": 291,
          "end": 320
        },
        "start": 246,
        "end": 320
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 336,
                "end": 348
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: http://unipro.ru/0123456789",
                  "raw": "'#1: http://unipro.ru/0123456789'",
                  "start": 349,
                  "end": 382
                }
              ],
              "start": 332,
              "end": 383
            },
            "start": 326,
            "end": 384
          }
        ],
        "start": 322,
        "end": 386
      },
      "alternate": null,
      "start": 242,
      "end": 386
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "decodeURI",
            "start": 402,
            "end": 411
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "%41%42%43%44%45%46%47%48%49%4A%4B%4C%4D%4E%4F%50%51%52%53%54%55%56%57%58%59%5A",
              "raw": "\"%41%42%43%44%45%46%47%48%49%4A%4B%4C%4D%4E%4F%50%51%52%53%54%55%56%57%58%59%5A\"",
              "start": 412,
              "end": 492
            }
          ],
          "optional": false,
          "start": 402,
          "end": 493
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
          "raw": "\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"",
          "start": 498,
          "end": 526
        },
        "start": 402,
        "end": 526
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 542,
                "end": 554
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                  "raw": "'#2: ABCDEFGHIJKLMNOPQRSTUVWXYZ'",
                  "start": 555,
                  "end": 587
                }
              ],
              "start": 538,
              "end": 588
            },
            "start": 532,
            "end": 589
          }
        ],
        "start": 528,
        "end": 591
      },
      "alternate": null,
      "start": 398,
      "end": 591
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "decodeURI",
            "start": 607,
            "end": 616
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "%61%62%63%64%65%66%67%68%69%6A%6B%6C%6D%6E%6F%70%71%72%73%74%75%76%77%78%79%7A",
              "raw": "\"%61%62%63%64%65%66%67%68%69%6A%6B%6C%6D%6E%6F%70%71%72%73%74%75%76%77%78%79%7A\"",
              "start": 617,
              "end": 697
            }
          ],
          "optional": false,
          "start": 607,
          "end": 698
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "abcdefghijklmnopqrstuvwxyz",
          "raw": "\"abcdefghijklmnopqrstuvwxyz\"",
          "start": 703,
          "end": 731
        },
        "start": 607,
        "end": 731
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 747,
                "end": 759
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: abcdefghijklmnopqrstuvwxyz",
                  "raw": "'#3: abcdefghijklmnopqrstuvwxyz'",
                  "start": 760,
                  "end": 792
                }
              ],
              "start": 743,
              "end": 793
            },
            "start": 737,
            "end": 794
          }
        ],
        "start": 733,
        "end": 796
      },
      "alternate": null,
      "start": 603,
      "end": 796
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 797
}