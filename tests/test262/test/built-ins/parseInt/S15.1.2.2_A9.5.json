{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 288,
            "end": 294
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 295,
            "end": 304
          },
          "optional": false,
          "computed": false,
          "start": 288,
          "end": 304
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ThisExpression",
                "start": 308,
                "end": 312
              },
              "property": {
                "type": "Identifier",
                "name": "propertyIsEnumerable",
                "start": 313,
                "end": 333
              },
              "optional": false,
              "computed": false,
              "start": 308,
              "end": 333
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "parseInt",
                "raw": "'parseInt'",
                "start": 334,
                "end": 344
              }
            ],
            "optional": false,
            "start": 308,
            "end": 345
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 349,
            "end": 354
          },
          {
            "type": "Literal",
            "value": "this.propertyIsEnumerable('parseInt') must return false",
            "raw": "'this.propertyIsEnumerable(\\'parseInt\\') must return false'",
            "start": 358,
            "end": 417
          }
        ],
        "optional": false,
        "start": 288,
        "end": 419
      },
      "start": 288,
      "end": 420
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 436,
            "end": 442
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 445,
            "end": 449
          },
          "start": 436,
          "end": 449
        }
      ],
      "start": 432,
      "end": 450
    },
    {
      "type": "ForInStatement",
      "left": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "p",
              "start": 460,
              "end": 461
            },
            "init": null,
            "start": 460,
            "end": 461
          }
        ],
        "start": 456,
        "end": 461
      },
      "right": {
        "type": "ThisExpression",
        "start": 465,
        "end": 469
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "p",
                "start": 479,
                "end": 480
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "value": "parseInt",
                "raw": "\"parseInt\"",
                "start": 485,
                "end": 495
              },
              "start": 479,
              "end": 495
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "result",
                      "start": 503,
                      "end": 509
                    },
                    "right": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 512,
                      "end": 517
                    },
                    "start": 503,
                    "end": 517
                  },
                  "start": 503,
                  "end": 518
                }
              ],
              "start": 497,
              "end": 522
            },
            "alternate": null,
            "start": 475,
            "end": 522
          }
        ],
        "start": 471,
        "end": 524
      },
      "start": 451,
      "end": 524
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 526,
            "end": 532
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 533,
            "end": 542
          },
          "optional": false,
          "computed": false,
          "start": 526,
          "end": 542
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "result",
            "start": 543,
            "end": 549
          },
          {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 551,
            "end": 555
          },
          {
            "type": "Literal",
            "value": "The value of `result` is true",
            "raw": "'The value of `result` is true'",
            "start": 557,
            "end": 588
          }
        ],
        "optional": false,
        "start": 526,
        "end": 589
      },
      "start": 526,
      "end": 590
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 591
}