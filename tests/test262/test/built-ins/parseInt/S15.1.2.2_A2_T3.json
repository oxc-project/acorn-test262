{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 276,
            "end": 282
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 283,
            "end": 292
          },
          "optional": false,
          "computed": false,
          "start": 276,
          "end": 292
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "parseInt",
              "start": 293,
              "end": 301
            },
            "arguments": [
              {
                "type": "Literal",
                "value": " 1",
                "raw": "\"\\u00A01\"",
                "start": 302,
                "end": 311
              }
            ],
            "optional": false,
            "start": 293,
            "end": 312
          },
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "parseInt",
              "start": 314,
              "end": 322
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 323,
                "end": 326
              }
            ],
            "optional": false,
            "start": 314,
            "end": 327
          },
          {
            "type": "Literal",
            "value": "parseInt(\"\\u00A01\") must return the same value returned by parseInt(\"1\")",
            "raw": "'parseInt(\"\\\\u00A01\") must return the same value returned by parseInt(\"1\")'",
            "start": 329,
            "end": 404
          }
        ],
        "optional": false,
        "start": 276,
        "end": 405
      },
      "start": 276,
      "end": 406
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 407,
            "end": 413
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 414,
            "end": 423
          },
          "optional": false,
          "computed": false,
          "start": 407,
          "end": 423
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "parseInt",
              "start": 424,
              "end": 432
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "  -1",
                "raw": "\"\\u00A0\\u00A0-1\"",
                "start": 433,
                "end": 449
              }
            ],
            "optional": false,
            "start": 424,
            "end": 450
          },
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "parseInt",
              "start": 452,
              "end": 460
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "-1",
                "raw": "\"-1\"",
                "start": 461,
                "end": 465
              }
            ],
            "optional": false,
            "start": 452,
            "end": 466
          },
          {
            "type": "Literal",
            "value": "parseInt(\"\\u00A0\\u00A0-1\") must return the same value returned by parseInt(\"-1\")",
            "raw": "'parseInt(\"\\\\u00A0\\\\u00A0-1\") must return the same value returned by parseInt(\"-1\")'",
            "start": 468,
            "end": 552
          }
        ],
        "optional": false,
        "start": 407,
        "end": 553
      },
      "start": 407,
      "end": 554
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 566,
            "end": 572
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 573,
            "end": 582
          },
          "optional": false,
          "computed": false,
          "start": 566,
          "end": 582
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "parseInt",
              "start": 583,
              "end": 591
            },
            "arguments": [
              {
                "type": "Literal",
                "value": " ",
                "raw": "\"\\u00A0\"",
                "start": 592,
                "end": 600
              }
            ],
            "optional": false,
            "start": 583,
            "end": 601
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 603,
            "end": 606
          },
          {
            "type": "Literal",
            "value": "parseInt(\"\\u00A0\") must return NaN",
            "raw": "'parseInt(\"\\\\u00A0\") must return NaN'",
            "start": 608,
            "end": 645
          }
        ],
        "optional": false,
        "start": 566,
        "end": 646
      },
      "start": 566,
      "end": 647
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 648
}