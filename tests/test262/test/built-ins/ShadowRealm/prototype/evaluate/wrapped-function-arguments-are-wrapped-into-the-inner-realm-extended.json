{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 325,
            "end": 331
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 332,
            "end": 341
          },
          "optional": false,
          "computed": false,
          "start": 325,
          "end": 341
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "ShadowRealm",
                  "start": 352,
                  "end": 363
                },
                "property": {
                  "type": "Identifier",
                  "name": "prototype",
                  "start": 364,
                  "end": 373
                },
                "optional": false,
                "computed": false,
                "start": 352,
                "end": 373
              },
              "property": {
                "type": "Identifier",
                "name": "evaluate",
                "start": 374,
                "end": 382
              },
              "optional": false,
              "computed": false,
              "start": 352,
              "end": 382
            },
            "prefix": true,
            "start": 345,
            "end": 382
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 386,
            "end": 396
          },
          {
            "type": "Literal",
            "value": "This test must fail if ShadowRealm.prototype.evaluate is not a function",
            "raw": "'This test must fail if ShadowRealm.prototype.evaluate is not a function'",
            "start": 400,
            "end": 473
          }
        ],
        "optional": false,
        "start": 325,
        "end": 475
      },
      "start": 325,
      "end": 476
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "r",
            "start": 484,
            "end": 485
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "ShadowRealm",
              "start": 492,
              "end": 503
            },
            "arguments": [],
            "start": 488,
            "end": 505
          },
          "start": 484,
          "end": 505
        }
      ],
      "start": 478,
      "end": 506
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "blueFn",
            "start": 513,
            "end": 519
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "x",
                "start": 523,
                "end": 524
              },
              {
                "type": "Identifier",
                "name": "y",
                "start": 526,
                "end": 527
              }
            ],
            "body": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "x",
                "start": 532,
                "end": 533
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "y",
                "start": 536,
                "end": 537
              },
              "start": 532,
              "end": 537
            },
            "id": null,
            "generator": false,
            "start": 522,
            "end": 537
          },
          "start": 513,
          "end": 537
        }
      ],
      "start": 507,
      "end": 538
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "redWrappedFn",
            "start": 546,
            "end": 558
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "r",
                "start": 561,
                "end": 562
              },
              "property": {
                "type": "Identifier",
                "name": "evaluate",
                "start": 563,
                "end": 571
              },
              "optional": false,
              "computed": false,
              "start": 561,
              "end": 571
            },
            "arguments": [
              {
                "type": "TemplateLiteral",
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "value": {
                      "raw": "\n    function fn(wrapped1, wrapped2, wrapped3) {\n        if (wrapped1.x) {\n            return 1;\n        }\n        if (wrapped2.x) {\n            return 2;\n        }\n        if (wrapped3.x) {\n            // Not unwrapped\n            return 3;\n        }\n        if (wrapped1 === wrapped2) {\n            // Always a new wrapped function\n            return 4;\n        }\n\n        // No unwrapping\n        if (wrapped3 === fn) {\n            return 5;\n        };\n\n        return true;\n    }\n    fn.x = 'secret';\n    fn;\n",
                      "cooked": "\n    function fn(wrapped1, wrapped2, wrapped3) {\n        if (wrapped1.x) {\n            return 1;\n        }\n        if (wrapped2.x) {\n            return 2;\n        }\n        if (wrapped3.x) {\n            // Not unwrapped\n            return 3;\n        }\n        if (wrapped1 === wrapped2) {\n            // Always a new wrapped function\n            return 4;\n        }\n\n        // No unwrapping\n        if (wrapped3 === fn) {\n            return 5;\n        };\n\n        return true;\n    }\n    fn.x = 'secret';\n    fn;\n"
                    },
                    "tail": true,
                    "start": 573,
                    "end": 1086
                  }
                ],
                "expressions": [],
                "start": 572,
                "end": 1087
              }
            ],
            "optional": false,
            "start": 561,
            "end": 1088
          },
          "start": 546,
          "end": 1088
        }
      ],
      "start": 540,
      "end": 1089
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1090,
            "end": 1096
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1097,
            "end": 1106
          },
          "optional": false,
          "computed": false,
          "start": 1090,
          "end": 1106
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "redWrappedFn",
              "start": 1107,
              "end": 1119
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "blueFn",
                "start": 1120,
                "end": 1126
              },
              {
                "type": "Identifier",
                "name": "blueFn",
                "start": 1128,
                "end": 1134
              },
              {
                "type": "Identifier",
                "name": "redWrappedFn",
                "start": 1136,
                "end": 1148
              }
            ],
            "optional": false,
            "start": 1107,
            "end": 1149
          },
          {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 1151,
            "end": 1155
          }
        ],
        "optional": false,
        "start": 1090,
        "end": 1156
      },
      "start": 1090,
      "end": 1157
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1158
}