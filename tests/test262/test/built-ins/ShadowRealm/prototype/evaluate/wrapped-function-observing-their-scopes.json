{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 294,
            "end": 300
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 301,
            "end": 310
          },
          "optional": false,
          "computed": false,
          "start": 294,
          "end": 310
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "ShadowRealm",
                  "start": 321,
                  "end": 332
                },
                "property": {
                  "type": "Identifier",
                  "name": "prototype",
                  "start": 333,
                  "end": 342
                },
                "optional": false,
                "computed": false,
                "start": 321,
                "end": 342
              },
              "property": {
                "type": "Identifier",
                "name": "evaluate",
                "start": 343,
                "end": 351
              },
              "optional": false,
              "computed": false,
              "start": 321,
              "end": 351
            },
            "prefix": true,
            "start": 314,
            "end": 351
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 355,
            "end": 365
          },
          {
            "type": "Literal",
            "value": "This test must fail if ShadowRealm.prototype.evaluate is not a function",
            "raw": "'This test must fail if ShadowRealm.prototype.evaluate is not a function'",
            "start": 369,
            "end": 442
          }
        ],
        "optional": false,
        "start": 294,
        "end": 444
      },
      "start": 294,
      "end": 445
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "r",
            "start": 453,
            "end": 454
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "ShadowRealm",
              "start": 461,
              "end": 472
            },
            "arguments": [],
            "start": 457,
            "end": 474
          },
          "start": 453,
          "end": 474
        }
      ],
      "start": 447,
      "end": 475
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myValue",
            "start": 480,
            "end": 487
          },
          "init": null,
          "start": 480,
          "end": 487
        }
      ],
      "start": 476,
      "end": 488
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "blueFn",
        "start": 499,
        "end": 505
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "start": 506,
          "end": 507
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "myValue",
                "start": 515,
                "end": 522
              },
              "right": {
                "type": "Identifier",
                "name": "x",
                "start": 525,
                "end": 526
              },
              "start": 515,
              "end": 526
            },
            "start": 515,
            "end": 527
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "myValue",
              "start": 539,
              "end": 546
            },
            "start": 532,
            "end": 547
          }
        ],
        "start": 509,
        "end": 549
      },
      "expression": false,
      "start": 490,
      "end": 549
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "redFunction",
            "start": 639,
            "end": 650
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "r",
                "start": 653,
                "end": 654
              },
              "property": {
                "type": "Identifier",
                "name": "evaluate",
                "start": 655,
                "end": 663
              },
              "optional": false,
              "computed": false,
              "start": 653,
              "end": 663
            },
            "arguments": [
              {
                "type": "TemplateLiteral",
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "value": {
                      "raw": "\n    var myValue = 'red';\n    0, function(cb) {\n        cb(42);\n        return myValue;\n    };\n",
                      "cooked": "\n    var myValue = 'red';\n    0, function(cb) {\n        cb(42);\n        return myValue;\n    };\n"
                    },
                    "tail": true,
                    "start": 665,
                    "end": 760
                  }
                ],
                "expressions": [],
                "start": 664,
                "end": 761
              }
            ],
            "optional": false,
            "start": 653,
            "end": 762
          },
          "start": 639,
          "end": 762
        }
      ],
      "start": 633,
      "end": 763
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 765,
            "end": 771
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 772,
            "end": 781
          },
          "optional": false,
          "computed": false,
          "start": 765,
          "end": 781
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "redFunction",
              "start": 782,
              "end": 793
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "blueFn",
                "start": 794,
                "end": 800
              }
            ],
            "optional": false,
            "start": 782,
            "end": 801
          },
          {
            "type": "Literal",
            "value": "red",
            "raw": "'red'",
            "start": 803,
            "end": 808
          }
        ],
        "optional": false,
        "start": 765,
        "end": 809
      },
      "start": 765,
      "end": 810
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 811,
            "end": 817
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 818,
            "end": 827
          },
          "optional": false,
          "computed": false,
          "start": 811,
          "end": 827
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "myValue",
            "start": 828,
            "end": 835
          },
          {
            "type": "Literal",
            "value": 42,
            "raw": "42",
            "start": 837,
            "end": 839
          }
        ],
        "optional": false,
        "start": 811,
        "end": 840
      },
      "start": 811,
      "end": 841
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 842
}