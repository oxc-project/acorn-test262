{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 320,
            "end": 326
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 327,
            "end": 336
          },
          "optional": false,
          "computed": false,
          "start": 320,
          "end": 336
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "ShadowRealm",
                  "start": 347,
                  "end": 358
                },
                "property": {
                  "type": "Identifier",
                  "name": "prototype",
                  "start": 359,
                  "end": 368
                },
                "optional": false,
                "computed": false,
                "start": 347,
                "end": 368
              },
              "property": {
                "type": "Identifier",
                "name": "evaluate",
                "start": 369,
                "end": 377
              },
              "optional": false,
              "computed": false,
              "start": 347,
              "end": 377
            },
            "prefix": true,
            "start": 340,
            "end": 377
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 381,
            "end": 391
          },
          {
            "type": "Literal",
            "value": "This test must fail if ShadowRealm.prototype.evaluate is not a function",
            "raw": "'This test must fail if ShadowRealm.prototype.evaluate is not a function'",
            "start": 395,
            "end": 468
          }
        ],
        "optional": false,
        "start": 320,
        "end": 470
      },
      "start": 320,
      "end": 471
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "r",
            "start": 479,
            "end": 480
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "ShadowRealm",
              "start": 487,
              "end": 498
            },
            "arguments": [],
            "start": 483,
            "end": 500
          },
          "start": 479,
          "end": 500
        }
      ],
      "start": 473,
      "end": 501
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 503,
            "end": 509
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 510,
            "end": 519
          },
          "optional": false,
          "computed": false,
          "start": 503,
          "end": 519
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "r",
                  "start": 523,
                  "end": 524
                },
                "property": {
                  "type": "Identifier",
                  "name": "evaluate",
                  "start": 525,
                  "end": 533
                },
                "optional": false,
                "computed": false,
                "start": 523,
                "end": 533
              },
              "arguments": [
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "(f) => {\n    try {\n      f();\n    } catch (e) {\n      if (e instanceof TypeError) {\n        return 'ok';\n      } else {\n        return e.toString();\n      }\n    }\n    return 'normal exit';\n  }",
                        "cooked": "(f) => {\n    try {\n      f();\n    } catch (e) {\n      if (e instanceof TypeError) {\n        return 'ok';\n      } else {\n        return e.toString();\n      }\n    }\n    return 'normal exit';\n  }"
                      },
                      "tail": true,
                      "start": 535,
                      "end": 727
                    }
                  ],
                  "expressions": [],
                  "start": 534,
                  "end": 728
                }
              ],
              "optional": false,
              "start": 523,
              "end": 729
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "expression": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Error",
                          "start": 744,
                          "end": 749
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ahh",
                            "raw": "\"ahh\"",
                            "start": 750,
                            "end": 755
                          }
                        ],
                        "optional": false,
                        "start": 744,
                        "end": 756
                      },
                      "start": 738,
                      "end": 757
                    }
                  ],
                  "start": 736,
                  "end": 759
                },
                "id": null,
                "generator": false,
                "start": 730,
                "end": 759
              }
            ],
            "optional": false,
            "start": 523,
            "end": 760
          },
          {
            "type": "Literal",
            "value": "ok",
            "raw": "'ok'",
            "start": 764,
            "end": 768
          },
          {
            "type": "Literal",
            "value": "WrappedFunction throws TypeError (from the calling realm) if the wrapped callable throws any exception",
            "raw": "'WrappedFunction throws TypeError (from the calling realm) if the wrapped callable throws any exception'",
            "start": 772,
            "end": 876
          }
        ],
        "optional": false,
        "start": 503,
        "end": 878
      },
      "start": 503,
      "end": 879
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 881,
            "end": 887
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 888,
            "end": 894
          },
          "optional": false,
          "computed": false,
          "start": 881,
          "end": 894
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 898,
            "end": 907
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "callee": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "r",
                    "start": 917,
                    "end": 918
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "evaluate",
                    "start": 919,
                    "end": 927
                  },
                  "optional": false,
                  "computed": false,
                  "start": 917,
                  "end": 927
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "() => { throw new Error(\"ahh\"); }",
                    "raw": "'() => { throw new Error(\"ahh\"); }'",
                    "start": 928,
                    "end": 963
                  }
                ],
                "optional": false,
                "start": 917,
                "end": 964
              },
              "arguments": [],
              "optional": false,
              "start": 917,
              "end": 966
            },
            "id": null,
            "generator": false,
            "start": 911,
            "end": 966
          },
          {
            "type": "Literal",
            "value": "WrappedFunction throws TypeError if the wrapped callable throws any exception",
            "raw": "'WrappedFunction throws TypeError if the wrapped callable throws any exception'",
            "start": 970,
            "end": 1049
          }
        ],
        "optional": false,
        "start": 881,
        "end": 1051
      },
      "start": 881,
      "end": 1052
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1053
}