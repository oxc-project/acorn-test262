{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 300,
            "end": 306
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 307,
            "end": 316
          },
          "optional": false,
          "computed": false,
          "start": 300,
          "end": 316
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "ShadowRealm",
                  "start": 327,
                  "end": 338
                },
                "property": {
                  "type": "Identifier",
                  "name": "prototype",
                  "start": 339,
                  "end": 348
                },
                "optional": false,
                "computed": false,
                "start": 327,
                "end": 348
              },
              "property": {
                "type": "Identifier",
                "name": "evaluate",
                "start": 349,
                "end": 357
              },
              "optional": false,
              "computed": false,
              "start": 327,
              "end": 357
            },
            "prefix": true,
            "start": 320,
            "end": 357
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 361,
            "end": 371
          },
          {
            "type": "Literal",
            "value": "This test must fail if ShadowRealm.prototype.evaluate is not a function",
            "raw": "'This test must fail if ShadowRealm.prototype.evaluate is not a function'",
            "start": 375,
            "end": 448
          }
        ],
        "optional": false,
        "start": 300,
        "end": 450
      },
      "start": 300,
      "end": 451
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "r",
            "start": 459,
            "end": 460
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "ShadowRealm",
              "start": 467,
              "end": 478
            },
            "arguments": [],
            "start": 463,
            "end": 480
          },
          "start": 459,
          "end": 480
        }
      ],
      "start": 453,
      "end": 481
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 483,
            "end": 489
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 490,
            "end": 496
          },
          "optional": false,
          "computed": false,
          "start": 483,
          "end": 496
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "SyntaxError",
            "start": 497,
            "end": 508
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "r",
                  "start": 516,
                  "end": 517
                },
                "property": {
                  "type": "Identifier",
                  "name": "evaluate",
                  "start": 518,
                  "end": 526
                },
                "optional": false,
                "computed": false,
                "start": 516,
                "end": 526
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "...",
                  "raw": "'...'",
                  "start": 527,
                  "end": 532
                }
              ],
              "optional": false,
              "start": 516,
              "end": 533
            },
            "id": null,
            "generator": false,
            "start": 510,
            "end": 533
          },
          {
            "type": "Literal",
            "value": "SyntaxError exposed to Parent",
            "raw": "'SyntaxError exposed to Parent'",
            "start": 535,
            "end": 566
          }
        ],
        "optional": false,
        "start": 483,
        "end": 567
      },
      "start": 483,
      "end": 568
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 569,
            "end": 575
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 576,
            "end": 582
          },
          "optional": false,
          "computed": false,
          "start": 569,
          "end": 582
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 583,
            "end": 592
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "r",
                  "start": 600,
                  "end": 601
                },
                "property": {
                  "type": "Identifier",
                  "name": "evaluate",
                  "start": 602,
                  "end": 610
                },
                "optional": false,
                "computed": false,
                "start": 600,
                "end": 610
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "throw 42",
                  "raw": "'throw 42'",
                  "start": 611,
                  "end": 621
                }
              ],
              "optional": false,
              "start": 600,
              "end": 622
            },
            "id": null,
            "generator": false,
            "start": 594,
            "end": 622
          },
          {
            "type": "Literal",
            "value": "throw primitive => TypeError",
            "raw": "'throw primitive => TypeError'",
            "start": 624,
            "end": 654
          }
        ],
        "optional": false,
        "start": 569,
        "end": 655
      },
      "start": 569,
      "end": 656
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 657,
            "end": 663
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 664,
            "end": 670
          },
          "optional": false,
          "computed": false,
          "start": 657,
          "end": 670
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 671,
            "end": 680
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "r",
                  "start": 688,
                  "end": 689
                },
                "property": {
                  "type": "Identifier",
                  "name": "evaluate",
                  "start": 690,
                  "end": 698
                },
                "optional": false,
                "computed": false,
                "start": 688,
                "end": 698
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "throw new ReferenceError(\"aaa\")",
                  "raw": "'throw new ReferenceError(\"aaa\")'",
                  "start": 699,
                  "end": 732
                }
              ],
              "optional": false,
              "start": 688,
              "end": 733
            },
            "id": null,
            "generator": false,
            "start": 682,
            "end": 733
          },
          {
            "type": "Literal",
            "value": "custom ctor => TypeError",
            "raw": "'custom ctor => TypeError'",
            "start": 735,
            "end": 761
          }
        ],
        "optional": false,
        "start": 657,
        "end": 762
      },
      "start": 657,
      "end": 763
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 764,
            "end": 770
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 771,
            "end": 777
          },
          "optional": false,
          "computed": false,
          "start": 764,
          "end": 777
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 778,
            "end": 787
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "r",
                  "start": 795,
                  "end": 796
                },
                "property": {
                  "type": "Identifier",
                  "name": "evaluate",
                  "start": 797,
                  "end": 805
                },
                "optional": false,
                "computed": false,
                "start": 795,
                "end": 805
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "throw new TypeError(\"aaa\")",
                  "raw": "'throw new TypeError(\"aaa\")'",
                  "start": 806,
                  "end": 834
                }
              ],
              "optional": false,
              "start": 795,
              "end": 835
            },
            "id": null,
            "generator": false,
            "start": 789,
            "end": 835
          },
          {
            "type": "Literal",
            "value": "Child TypeError => Parent TypeError",
            "raw": "'Child TypeError => Parent TypeError'",
            "start": 837,
            "end": 874
          }
        ],
        "optional": false,
        "start": 764,
        "end": 875
      },
      "start": 764,
      "end": 876
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 877,
            "end": 883
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 884,
            "end": 890
          },
          "optional": false,
          "computed": false,
          "start": 877,
          "end": 890
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 891,
            "end": 900
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "r",
                  "start": 908,
                  "end": 909
                },
                "property": {
                  "type": "Identifier",
                  "name": "evaluate",
                  "start": 910,
                  "end": 918
                },
                "optional": false,
                "computed": false,
                "start": 908,
                "end": 918
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "eval(\"...\");",
                  "raw": "'eval(\"...\");'",
                  "start": 919,
                  "end": 933
                }
              ],
              "optional": false,
              "start": 908,
              "end": 934
            },
            "id": null,
            "generator": false,
            "start": 902,
            "end": 934
          },
          {
            "type": "Literal",
            "value": "syntaxerror parsing coming after runtime evaluation",
            "raw": "'syntaxerror parsing coming after runtime evaluation'",
            "start": 936,
            "end": 989
          }
        ],
        "optional": false,
        "start": 877,
        "end": 990
      },
      "start": 877,
      "end": 991
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 992,
            "end": 998
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 999,
            "end": 1005
          },
          "optional": false,
          "computed": false,
          "start": 992,
          "end": 1005
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1006,
            "end": 1015
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "r",
                  "start": 1023,
                  "end": 1024
                },
                "property": {
                  "type": "Identifier",
                  "name": "evaluate",
                  "start": 1025,
                  "end": 1033
                },
                "optional": false,
                "computed": false,
                "start": 1023,
                "end": 1033
              },
              "arguments": [
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "\n  'use strict';\n  eval(\"var public = 1;\");\n",
                        "cooked": "\n  'use strict';\n  eval(\"var public = 1;\");\n"
                      },
                      "tail": true,
                      "start": 1035,
                      "end": 1079
                    }
                  ],
                  "expressions": [],
                  "start": 1034,
                  "end": 1080
                }
              ],
              "optional": false,
              "start": 1023,
              "end": 1081
            },
            "id": null,
            "generator": false,
            "start": 1017,
            "end": 1081
          },
          {
            "type": "Literal",
            "value": "strict-mode only syntaxerror parsing coming after runtime evaluation",
            "raw": "'strict-mode only syntaxerror parsing coming after runtime evaluation'",
            "start": 1083,
            "end": 1153
          }
        ],
        "optional": false,
        "start": 992,
        "end": 1154
      },
      "start": 992,
      "end": 1155
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1156
}