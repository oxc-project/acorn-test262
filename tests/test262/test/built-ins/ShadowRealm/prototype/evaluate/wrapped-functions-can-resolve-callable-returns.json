{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 302,
            "end": 308
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 309,
            "end": 318
          },
          "optional": false,
          "computed": false,
          "start": 302,
          "end": 318
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "ShadowRealm",
                  "start": 329,
                  "end": 340
                },
                "property": {
                  "type": "Identifier",
                  "name": "prototype",
                  "start": 341,
                  "end": 350
                },
                "optional": false,
                "computed": false,
                "start": 329,
                "end": 350
              },
              "property": {
                "type": "Identifier",
                "name": "evaluate",
                "start": 351,
                "end": 359
              },
              "optional": false,
              "computed": false,
              "start": 329,
              "end": 359
            },
            "prefix": true,
            "start": 322,
            "end": 359
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 363,
            "end": 373
          },
          {
            "type": "Literal",
            "value": "This test must fail if ShadowRealm.prototype.evaluate is not a function",
            "raw": "'This test must fail if ShadowRealm.prototype.evaluate is not a function'",
            "start": 377,
            "end": 450
          }
        ],
        "optional": false,
        "start": 302,
        "end": 452
      },
      "start": 302,
      "end": 453
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "r",
            "start": 461,
            "end": 462
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "ShadowRealm",
              "start": 469,
              "end": 480
            },
            "arguments": [],
            "start": 465,
            "end": 482
          },
          "start": 461,
          "end": 482
        }
      ],
      "start": 455,
      "end": 483
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "wrapped",
            "start": 491,
            "end": 498
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "r",
                "start": 501,
                "end": 502
              },
              "property": {
                "type": "Identifier",
                "name": "evaluate",
                "start": 503,
                "end": 511
              },
              "optional": false,
              "computed": false,
              "start": 501,
              "end": 511
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "x => y => x * y",
                "raw": "'x => y => x * y'",
                "start": 512,
                "end": 529
              }
            ],
            "optional": false,
            "start": 501,
            "end": 530
          },
          "start": 491,
          "end": 530
        }
      ],
      "start": 485,
      "end": 531
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "nestedWrapped",
            "start": 538,
            "end": 551
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "wrapped",
              "start": 554,
              "end": 561
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 562,
                "end": 563
              }
            ],
            "optional": false,
            "start": 554,
            "end": 564
          },
          "start": 538,
          "end": 564
        }
      ],
      "start": 532,
      "end": 565
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "otherNestedWrapped",
            "start": 572,
            "end": 590
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "wrapped",
              "start": 593,
              "end": 600
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 601,
                "end": 602
              }
            ],
            "optional": false,
            "start": 593,
            "end": 603
          },
          "start": 572,
          "end": 603
        }
      ],
      "start": 566,
      "end": 604
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 606,
            "end": 612
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 613,
            "end": 622
          },
          "optional": false,
          "computed": false,
          "start": 606,
          "end": 622
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "otherNestedWrapped",
              "start": 623,
              "end": 641
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 642,
                "end": 643
              }
            ],
            "optional": false,
            "start": 623,
            "end": 644
          },
          {
            "type": "Literal",
            "value": 12,
            "raw": "12",
            "start": 646,
            "end": 648
          }
        ],
        "optional": false,
        "start": 606,
        "end": 649
      },
      "start": 606,
      "end": 650
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 651,
            "end": 657
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 658,
            "end": 667
          },
          "optional": false,
          "computed": false,
          "start": 651,
          "end": 667
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "nestedWrapped",
              "start": 668,
              "end": 681
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 682,
                "end": 683
              }
            ],
            "optional": false,
            "start": 668,
            "end": 684
          },
          {
            "type": "Literal",
            "value": 6,
            "raw": "6",
            "start": 686,
            "end": 687
          }
        ],
        "optional": false,
        "start": 651,
        "end": 688
      },
      "start": 651,
      "end": 689
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 691,
            "end": 697
          },
          "property": {
            "type": "Identifier",
            "name": "notSameValue",
            "start": 698,
            "end": 710
          },
          "optional": false,
          "computed": false,
          "start": 691,
          "end": 710
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "nestedWrapped",
            "start": 711,
            "end": 724
          },
          {
            "type": "Identifier",
            "name": "otherNestedWrapped",
            "start": 726,
            "end": 744
          },
          {
            "type": "Literal",
            "value": "new wrapping for each return",
            "raw": "'new wrapping for each return'",
            "start": 746,
            "end": 776
          }
        ],
        "optional": false,
        "start": 691,
        "end": 777
      },
      "start": 691,
      "end": 778
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 779
}