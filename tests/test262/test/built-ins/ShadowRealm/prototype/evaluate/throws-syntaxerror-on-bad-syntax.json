{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 305,
            "end": 311
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 312,
            "end": 321
          },
          "optional": false,
          "computed": false,
          "start": 305,
          "end": 321
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "ShadowRealm",
                  "start": 332,
                  "end": 343
                },
                "property": {
                  "type": "Identifier",
                  "name": "prototype",
                  "start": 344,
                  "end": 353
                },
                "optional": false,
                "computed": false,
                "start": 332,
                "end": 353
              },
              "property": {
                "type": "Identifier",
                "name": "evaluate",
                "start": 354,
                "end": 362
              },
              "optional": false,
              "computed": false,
              "start": 332,
              "end": 362
            },
            "prefix": true,
            "start": 325,
            "end": 362
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "'function'",
            "start": 366,
            "end": 376
          },
          {
            "type": "Literal",
            "value": "This test must fail if ShadowRealm.prototype.evaluate is not a function",
            "raw": "'This test must fail if ShadowRealm.prototype.evaluate is not a function'",
            "start": 380,
            "end": 453
          }
        ],
        "optional": false,
        "start": 305,
        "end": 455
      },
      "start": 305,
      "end": 456
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "r",
            "start": 464,
            "end": 465
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "ShadowRealm",
              "start": 472,
              "end": 483
            },
            "arguments": [],
            "start": 468,
            "end": 485
          },
          "start": 464,
          "end": 485
        }
      ],
      "start": 458,
      "end": 486
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 488,
            "end": 494
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 495,
            "end": 501
          },
          "optional": false,
          "computed": false,
          "start": 488,
          "end": 501
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "SyntaxError",
            "start": 502,
            "end": 513
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "r",
                  "start": 521,
                  "end": 522
                },
                "property": {
                  "type": "Identifier",
                  "name": "evaluate",
                  "start": 523,
                  "end": 531
                },
                "optional": false,
                "computed": false,
                "start": 521,
                "end": 531
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "...",
                  "raw": "'...'",
                  "start": 532,
                  "end": 537
                }
              ],
              "optional": false,
              "start": 521,
              "end": 538
            },
            "id": null,
            "generator": false,
            "start": 515,
            "end": 538
          },
          {
            "type": "Literal",
            "value": "SyntaxError exposed to Parent",
            "raw": "'SyntaxError exposed to Parent'",
            "start": 540,
            "end": 571
          }
        ],
        "optional": false,
        "start": 488,
        "end": 572
      },
      "start": 488,
      "end": 573
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 574,
            "end": 580
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 581,
            "end": 587
          },
          "optional": false,
          "computed": false,
          "start": 574,
          "end": 587
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "SyntaxError",
            "start": 588,
            "end": 599
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "r",
                  "start": 607,
                  "end": 608
                },
                "property": {
                  "type": "Identifier",
                  "name": "evaluate",
                  "start": 609,
                  "end": 617
                },
                "optional": false,
                "computed": false,
                "start": 607,
                "end": 617
              },
              "arguments": [
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "\n  \"use strict\";\n  throw \"do not evaluate\";\n  function lol(){\n    arguments = 1;\n  }\n",
                        "cooked": "\n  \"use strict\";\n  throw \"do not evaluate\";\n  function lol(){\n    arguments = 1;\n  }\n"
                      },
                      "tail": true,
                      "start": 619,
                      "end": 704
                    }
                  ],
                  "expressions": [],
                  "start": 618,
                  "end": 705
                }
              ],
              "optional": false,
              "start": 607,
              "end": 706
            },
            "id": null,
            "generator": false,
            "start": 601,
            "end": 706
          },
          {
            "type": "Literal",
            "value": "Strict mode only SyntaxError, setting value to a fn arguments",
            "raw": "'Strict mode only SyntaxError, setting value to a fn arguments'",
            "start": 708,
            "end": 771
          }
        ],
        "optional": false,
        "start": 574,
        "end": 772
      },
      "start": 574,
      "end": 773
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 774,
            "end": 780
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 781,
            "end": 787
          },
          "optional": false,
          "computed": false,
          "start": 774,
          "end": 787
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "SyntaxError",
            "start": 788,
            "end": 799
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "r",
                  "start": 807,
                  "end": 808
                },
                "property": {
                  "type": "Identifier",
                  "name": "evaluate",
                  "start": 809,
                  "end": 817
                },
                "optional": false,
                "computed": false,
                "start": 807,
                "end": 817
              },
              "arguments": [
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "\n  \"use strict\";\n  throw \"do not evaluate\";\n  var public = 1;\n",
                        "cooked": "\n  \"use strict\";\n  throw \"do not evaluate\";\n  var public = 1;\n"
                      },
                      "tail": true,
                      "start": 819,
                      "end": 881
                    }
                  ],
                  "expressions": [],
                  "start": 818,
                  "end": 882
                }
              ],
              "optional": false,
              "start": 807,
              "end": 883
            },
            "id": null,
            "generator": false,
            "start": 801,
            "end": 883
          },
          {
            "type": "Literal",
            "value": "Strict mode only SyntaxError, var public",
            "raw": "'Strict mode only SyntaxError, var public'",
            "start": 885,
            "end": 927
          }
        ],
        "optional": false,
        "start": 774,
        "end": 928
      },
      "start": 774,
      "end": 929
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 930
}