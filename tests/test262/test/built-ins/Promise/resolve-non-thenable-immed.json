{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "returnValue",
            "start": 792,
            "end": 803
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 806,
            "end": 810
          },
          "start": 792,
          "end": 810
        }
      ],
      "start": 788,
      "end": 811
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "nonThenable",
            "start": 816,
            "end": 827
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "then",
                  "start": 834,
                  "end": 838
                },
                "value": {
                  "type": "Literal",
                  "value": null,
                  "raw": "null",
                  "start": 840,
                  "end": 844
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 834,
                "end": 844
              }
            ],
            "start": 830,
            "end": 846
          },
          "start": 816,
          "end": 846
        }
      ],
      "start": 812,
      "end": 847
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "promise",
            "start": 852,
            "end": 859
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 866,
              "end": 873
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "resolve",
                    "start": 883,
                    "end": 890
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "returnValue",
                          "start": 896,
                          "end": 907
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "resolve",
                            "start": 910,
                            "end": 917
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "nonThenable",
                              "start": 918,
                              "end": 929
                            }
                          ],
                          "optional": false,
                          "start": 910,
                          "end": 930
                        },
                        "start": 896,
                        "end": 930
                      },
                      "start": 896,
                      "end": 931
                    }
                  ],
                  "start": 892,
                  "end": 933
                },
                "expression": false,
                "start": 874,
                "end": 933
              }
            ],
            "start": 862,
            "end": 934
          },
          "start": 852,
          "end": 934
        }
      ],
      "start": 848,
      "end": 935
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 937,
            "end": 943
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 944,
            "end": 953
          },
          "optional": false,
          "computed": false,
          "start": 937,
          "end": 953
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "returnValue",
            "start": 954,
            "end": 965
          },
          {
            "type": "Identifier",
            "name": "undefined",
            "start": 967,
            "end": 976
          },
          {
            "type": "Literal",
            "value": "\"resolve\" return value",
            "raw": "'\"resolve\" return value'",
            "start": 978,
            "end": 1002
          }
        ],
        "optional": false,
        "start": 937,
        "end": 1003
      },
      "start": 937,
      "end": 1004
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "promise",
            "start": 1006,
            "end": 1013
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1014,
            "end": 1018
          },
          "optional": false,
          "computed": false,
          "start": 1006,
          "end": 1018
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "value",
                "start": 1028,
                "end": 1033
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 1043,
                      "end": 1048
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "nonThenable",
                      "start": 1053,
                      "end": 1064
                    },
                    "start": 1043,
                    "end": 1064
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1072,
                            "end": 1077
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be fulfilled with the provided value.",
                              "raw": "'The promise should be fulfilled with the provided value.'",
                              "start": 1078,
                              "end": 1136
                            }
                          ],
                          "optional": false,
                          "start": 1072,
                          "end": 1137
                        },
                        "start": 1072,
                        "end": 1138
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1143,
                        "end": 1150
                      }
                    ],
                    "start": 1066,
                    "end": 1154
                  },
                  "alternate": null,
                  "start": 1039,
                  "end": 1154
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1158,
                      "end": 1163
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1158,
                    "end": 1165
                  },
                  "start": 1158,
                  "end": 1166
                }
              ],
              "start": 1035,
              "end": 1168
            },
            "expression": false,
            "start": 1019,
            "end": 1168
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1185,
                      "end": 1190
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "The promise should not be rejected.",
                        "raw": "'The promise should not be rejected.'",
                        "start": 1191,
                        "end": 1228
                      }
                    ],
                    "optional": false,
                    "start": 1185,
                    "end": 1229
                  },
                  "start": 1185,
                  "end": 1230
                }
              ],
              "start": 1181,
              "end": 1232
            },
            "expression": false,
            "start": 1170,
            "end": 1232
          }
        ],
        "optional": false,
        "start": 1006,
        "end": 1233
      },
      "start": 1006,
      "end": 1234
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1235
}