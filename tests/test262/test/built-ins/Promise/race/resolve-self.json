{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "self",
            "start": 870,
            "end": 874
          },
          "init": null,
          "start": 870,
          "end": 874
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "resolve",
            "start": 876,
            "end": 883
          },
          "init": null,
          "start": 876,
          "end": 883
        }
      ],
      "start": 866,
      "end": 884
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "builtinResolve",
            "start": 889,
            "end": 903
          },
          "init": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Promise",
              "start": 906,
              "end": 913
            },
            "property": {
              "type": "Identifier",
              "name": "resolve",
              "start": 914,
              "end": 921
            },
            "optional": false,
            "computed": false,
            "start": 906,
            "end": 921
          },
          "start": 889,
          "end": 921
        }
      ],
      "start": 885,
      "end": 922
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "thenable",
            "start": 927,
            "end": 935
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "then",
                  "start": 942,
                  "end": 946
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "r",
                      "start": 957,
                      "end": 958
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "resolve",
                            "start": 966,
                            "end": 973
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "r",
                            "start": 976,
                            "end": 977
                          },
                          "start": 966,
                          "end": 977
                        },
                        "start": 966,
                        "end": 978
                      }
                    ],
                    "start": 960,
                    "end": 982
                  },
                  "expression": false,
                  "start": 948,
                  "end": 982
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 942,
                "end": 982
              }
            ],
            "start": 938,
            "end": 984
          },
          "start": 927,
          "end": 984
        }
      ],
      "start": 923,
      "end": 985
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Promise",
                  "start": 995,
                  "end": 1002
                },
                "property": {
                  "type": "Identifier",
                  "name": "resolve",
                  "start": 1003,
                  "end": 1010
                },
                "optional": false,
                "computed": false,
                "start": 995,
                "end": 1010
              },
              "right": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "v",
                    "start": 1022,
                    "end": 1023
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Identifier",
                        "name": "v",
                        "start": 1038,
                        "end": 1039
                      },
                      "start": 1031,
                      "end": 1040
                    }
                  ],
                  "start": 1025,
                  "end": 1044
                },
                "expression": false,
                "start": 1013,
                "end": 1044
              },
              "start": 995,
              "end": 1044
            },
            "start": 995,
            "end": 1045
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "self",
                "start": 1048,
                "end": 1052
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 1055,
                    "end": 1062
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "race",
                    "start": 1063,
                    "end": 1067
                  },
                  "optional": false,
                  "computed": false,
                  "start": 1055,
                  "end": 1067
                },
                "arguments": [
                  {
                    "type": "ArrayExpression",
                    "elements": [
                      {
                        "type": "Identifier",
                        "name": "thenable",
                        "start": 1069,
                        "end": 1077
                      }
                    ],
                    "start": 1068,
                    "end": 1078
                  }
                ],
                "optional": false,
                "start": 1055,
                "end": 1079
              },
              "start": 1048,
              "end": 1079
            },
            "start": 1048,
            "end": 1080
          }
        ],
        "start": 991,
        "end": 1082
      },
      "handler": null,
      "finalizer": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Promise",
                  "start": 1095,
                  "end": 1102
                },
                "property": {
                  "type": "Identifier",
                  "name": "resolve",
                  "start": 1103,
                  "end": 1110
                },
                "optional": false,
                "computed": false,
                "start": 1095,
                "end": 1110
              },
              "right": {
                "type": "Identifier",
                "name": "builtinResolve",
                "start": 1113,
                "end": 1127
              },
              "start": 1095,
              "end": 1127
            },
            "start": 1095,
            "end": 1128
          }
        ],
        "start": 1091,
        "end": 1130
      },
      "start": 987,
      "end": 1130
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "resolve",
          "start": 1132,
          "end": 1139
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "self",
            "start": 1140,
            "end": 1144
          }
        ],
        "optional": false,
        "start": 1132,
        "end": 1145
      },
      "start": 1132,
      "end": 1146
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "self",
            "start": 1148,
            "end": 1152
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1153,
            "end": 1157
          },
          "optional": false,
          "computed": false,
          "start": 1148,
          "end": 1157
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1173,
                      "end": 1178
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "The promise should not be fulfilled.",
                        "raw": "'The promise should not be fulfilled.'",
                        "start": 1179,
                        "end": 1217
                      }
                    ],
                    "optional": false,
                    "start": 1173,
                    "end": 1218
                  },
                  "start": 1173,
                  "end": 1219
                }
              ],
              "start": 1169,
              "end": 1221
            },
            "expression": false,
            "start": 1158,
            "end": 1221
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "value",
                "start": 1232,
                "end": 1237
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 1248,
                      "end": 1253
                    },
                    "prefix": true,
                    "start": 1247,
                    "end": 1253
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1261,
                            "end": 1266
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be rejected with a value.",
                              "raw": "'The promise should be rejected with a value.'",
                              "start": 1267,
                              "end": 1313
                            }
                          ],
                          "optional": false,
                          "start": 1261,
                          "end": 1314
                        },
                        "start": 1261,
                        "end": 1315
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1320,
                        "end": 1327
                      }
                    ],
                    "start": 1255,
                    "end": 1331
                  },
                  "alternate": null,
                  "start": 1243,
                  "end": 1331
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "value",
                        "start": 1338,
                        "end": 1343
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "constructor",
                        "start": 1344,
                        "end": 1355
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1338,
                      "end": 1355
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "TypeError",
                      "start": 1360,
                      "end": 1369
                    },
                    "start": 1338,
                    "end": 1369
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1377,
                            "end": 1382
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be rejected with a TypeError instance.",
                              "raw": "'The promise should be rejected with a TypeError instance.'",
                              "start": 1383,
                              "end": 1442
                            }
                          ],
                          "optional": false,
                          "start": 1377,
                          "end": 1443
                        },
                        "start": 1377,
                        "end": 1444
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1449,
                        "end": 1456
                      }
                    ],
                    "start": 1371,
                    "end": 1460
                  },
                  "alternate": null,
                  "start": 1334,
                  "end": 1460
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1463,
                      "end": 1468
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1463,
                    "end": 1470
                  },
                  "start": 1463,
                  "end": 1471
                }
              ],
              "start": 1239,
              "end": 1473
            },
            "expression": false,
            "start": 1223,
            "end": 1473
          }
        ],
        "optional": false,
        "start": 1148,
        "end": 1474
      },
      "start": 1148,
      "end": 1475
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1476
}