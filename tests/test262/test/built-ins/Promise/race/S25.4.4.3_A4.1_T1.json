{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterThrows",
            "start": 249,
            "end": 259
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 262,
            "end": 264
          },
          "start": 249,
          "end": 264
        }
      ],
      "start": 245,
      "end": 265
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "error",
            "start": 270,
            "end": 275
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Test262Error",
              "start": 282,
              "end": 294
            },
            "arguments": [],
            "start": 278,
            "end": 296
          },
          "start": 270,
          "end": 296
        }
      ],
      "start": 266,
      "end": 297
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "iterThrows",
            "start": 298,
            "end": 308
          },
          "property": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Symbol",
              "start": 309,
              "end": 315
            },
            "property": {
              "type": "Identifier",
              "name": "iterator",
              "start": 316,
              "end": 324
            },
            "optional": false,
            "computed": false,
            "start": 309,
            "end": 324
          },
          "optional": false,
          "computed": true,
          "start": 298,
          "end": 325
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "kind": "init",
                      "key": {
                        "type": "Identifier",
                        "name": "next",
                        "start": 356,
                        "end": 360
                      },
                      "value": {
                        "type": "FunctionExpression",
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ThrowStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "error",
                                "start": 387,
                                "end": 392
                              },
                              "start": 381,
                              "end": 393
                            }
                          ],
                          "start": 373,
                          "end": 399
                        },
                        "expression": false,
                        "start": 362,
                        "end": 399
                      },
                      "method": false,
                      "shorthand": false,
                      "computed": false,
                      "start": 356,
                      "end": 399
                    }
                  ],
                  "start": 350,
                  "end": 403
                },
                "start": 343,
                "end": 404
              }
            ],
            "start": 339,
            "end": 406
          },
          "expression": false,
          "start": 328,
          "end": 406
        },
        "start": 298,
        "end": 406
      },
      "start": 298,
      "end": 407
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 409,
                    "end": 416
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "race",
                    "start": 417,
                    "end": 421
                  },
                  "optional": false,
                  "computed": false,
                  "start": 409,
                  "end": 421
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "iterThrows",
                    "start": 422,
                    "end": 432
                  }
                ],
                "optional": false,
                "start": 409,
                "end": 433
              },
              "property": {
                "type": "Identifier",
                "name": "then",
                "start": 434,
                "end": 438
              },
              "optional": false,
              "computed": false,
              "start": 409,
              "end": 438
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Test262Error",
                          "start": 464,
                          "end": 476
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Promise unexpectedly fulfilled: Promise.race(iterThrows) should throw TypeError",
                            "raw": "'Promise unexpectedly fulfilled: Promise.race(iterThrows) should throw TypeError'",
                            "start": 477,
                            "end": 558
                          }
                        ],
                        "start": 460,
                        "end": 559
                      },
                      "start": 454,
                      "end": 560
                    }
                  ],
                  "start": 450,
                  "end": 562
                },
                "expression": false,
                "start": 439,
                "end": 562
              },
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "reason",
                    "start": 573,
                    "end": 579
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "assert",
                            "start": 585,
                            "end": 591
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sameValue",
                            "start": 592,
                            "end": 601
                          },
                          "optional": false,
                          "computed": false,
                          "start": 585,
                          "end": 601
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "reason",
                            "start": 602,
                            "end": 608
                          },
                          {
                            "type": "Identifier",
                            "name": "error",
                            "start": 610,
                            "end": 615
                          },
                          {
                            "type": "Literal",
                            "value": "The value of reason is expected to equal the value of error",
                            "raw": "'The value of reason is expected to equal the value of error'",
                            "start": 617,
                            "end": 678
                          }
                        ],
                        "optional": false,
                        "start": 585,
                        "end": 679
                      },
                      "start": 585,
                      "end": 680
                    }
                  ],
                  "start": 581,
                  "end": 682
                },
                "expression": false,
                "start": 564,
                "end": 682
              }
            ],
            "optional": false,
            "start": 409,
            "end": 683
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 684,
            "end": 688
          },
          "optional": false,
          "computed": false,
          "start": 409,
          "end": 688
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 689,
            "end": 694
          },
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 696,
            "end": 701
          }
        ],
        "optional": false,
        "start": 409,
        "end": 702
      },
      "start": 409,
      "end": 703
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 704
}