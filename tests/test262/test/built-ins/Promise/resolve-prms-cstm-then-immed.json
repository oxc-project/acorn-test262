{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "returnValue",
            "start": 908,
            "end": 919
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 922,
            "end": 926
          },
          "start": 908,
          "end": 926
        }
      ],
      "start": 904,
      "end": 927
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "value",
            "start": 932,
            "end": 937
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 940,
            "end": 942
          },
          "start": 932,
          "end": 942
        }
      ],
      "start": 928,
      "end": 943
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "lateCallCount",
            "start": 948,
            "end": 961
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 964,
            "end": 965
          },
          "start": 948,
          "end": 965
        }
      ],
      "start": 944,
      "end": 966
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "thenable",
            "start": 971,
            "end": 979
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 986,
              "end": 993
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "resolve",
                    "start": 1003,
                    "end": 1010
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "resolve",
                          "start": 1016,
                          "end": 1023
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 1016,
                        "end": 1025
                      },
                      "start": 1016,
                      "end": 1026
                    }
                  ],
                  "start": 1012,
                  "end": 1028
                },
                "expression": false,
                "start": 994,
                "end": 1028
              }
            ],
            "start": 982,
            "end": 1029
          },
          "start": 971,
          "end": 1029
        }
      ],
      "start": 967,
      "end": 1030
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "thenable",
            "start": 1032,
            "end": 1040
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1041,
            "end": 1045
          },
          "optional": false,
          "computed": false,
          "start": 1032,
          "end": 1045
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "name": "resolve",
              "start": 1057,
              "end": 1064
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "resolve",
                    "start": 1070,
                    "end": 1077
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "value",
                      "start": 1078,
                      "end": 1083
                    }
                  ],
                  "optional": false,
                  "start": 1070,
                  "end": 1084
                },
                "start": 1070,
                "end": 1085
              }
            ],
            "start": 1066,
            "end": 1087
          },
          "expression": false,
          "start": 1048,
          "end": 1087
        },
        "start": 1032,
        "end": 1087
      },
      "start": 1032,
      "end": 1088
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "promise",
            "start": 1094,
            "end": 1101
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 1108,
              "end": 1115
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "resolve",
                    "start": 1125,
                    "end": 1132
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "returnValue",
                          "start": 1138,
                          "end": 1149
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "resolve",
                            "start": 1152,
                            "end": 1159
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "thenable",
                              "start": 1160,
                              "end": 1168
                            }
                          ],
                          "optional": false,
                          "start": 1152,
                          "end": 1169
                        },
                        "start": 1138,
                        "end": 1169
                      },
                      "start": 1138,
                      "end": 1170
                    }
                  ],
                  "start": 1134,
                  "end": 1172
                },
                "expression": false,
                "start": 1116,
                "end": 1172
              }
            ],
            "start": 1104,
            "end": 1173
          },
          "start": 1094,
          "end": 1173
        }
      ],
      "start": 1090,
      "end": 1174
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1176,
            "end": 1182
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1183,
            "end": 1192
          },
          "optional": false,
          "computed": false,
          "start": 1176,
          "end": 1192
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "returnValue",
            "start": 1193,
            "end": 1204
          },
          {
            "type": "Identifier",
            "name": "undefined",
            "start": 1206,
            "end": 1215
          },
          {
            "type": "Literal",
            "value": "\"resolve\" return value",
            "raw": "'\"resolve\" return value'",
            "start": 1217,
            "end": 1241
          }
        ],
        "optional": false,
        "start": 1176,
        "end": 1242
      },
      "start": 1176,
      "end": 1243
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "thenable",
            "start": 1245,
            "end": 1253
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1254,
            "end": 1258
          },
          "optional": false,
          "computed": false,
          "start": 1245,
          "end": 1258
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "+=",
                  "left": {
                    "type": "Identifier",
                    "name": "lateCallCount",
                    "start": 1276,
                    "end": 1289
                  },
                  "right": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1293,
                    "end": 1294
                  },
                  "start": 1276,
                  "end": 1294
                },
                "start": 1276,
                "end": 1295
              }
            ],
            "start": 1272,
            "end": 1297
          },
          "expression": false,
          "start": 1261,
          "end": 1297
        },
        "start": 1245,
        "end": 1297
      },
      "start": 1245,
      "end": 1298
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "promise",
            "start": 1300,
            "end": 1307
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1308,
            "end": 1312
          },
          "optional": false,
          "computed": false,
          "start": 1300,
          "end": 1312
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "val",
                "start": 1322,
                "end": 1325
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "val",
                      "start": 1335,
                      "end": 1338
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 1343,
                      "end": 1348
                    },
                    "start": 1335,
                    "end": 1348
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1356,
                            "end": 1361
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be fulfilled with the provided value.",
                              "raw": "'The promise should be fulfilled with the provided value.'",
                              "start": 1362,
                              "end": 1420
                            }
                          ],
                          "optional": false,
                          "start": 1356,
                          "end": 1421
                        },
                        "start": 1356,
                        "end": 1422
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1427,
                        "end": 1434
                      }
                    ],
                    "start": 1350,
                    "end": 1438
                  },
                  "alternate": null,
                  "start": 1331,
                  "end": 1438
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "lateCallCount",
                      "start": 1446,
                      "end": 1459
                    },
                    "operator": ">",
                    "right": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 1462,
                      "end": 1463
                    },
                    "start": 1446,
                    "end": 1463
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1471,
                            "end": 1476
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The `then` method should be executed synchronously.",
                              "raw": "'The `then` method should be executed synchronously.'",
                              "start": 1477,
                              "end": 1530
                            }
                          ],
                          "optional": false,
                          "start": 1471,
                          "end": 1531
                        },
                        "start": 1471,
                        "end": 1532
                      }
                    ],
                    "start": 1465,
                    "end": 1536
                  },
                  "alternate": null,
                  "start": 1442,
                  "end": 1536
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1540,
                      "end": 1545
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1540,
                    "end": 1547
                  },
                  "start": 1540,
                  "end": 1548
                }
              ],
              "start": 1327,
              "end": 1550
            },
            "expression": false,
            "start": 1313,
            "end": 1550
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1567,
                      "end": 1572
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "The promise should not be rejected.",
                        "raw": "'The promise should not be rejected.'",
                        "start": 1573,
                        "end": 1610
                      }
                    ],
                    "optional": false,
                    "start": 1567,
                    "end": 1611
                  },
                  "start": 1567,
                  "end": 1612
                }
              ],
              "start": 1563,
              "end": 1614
            },
            "expression": false,
            "start": 1552,
            "end": 1614
          }
        ],
        "optional": false,
        "start": 1300,
        "end": 1615
      },
      "start": 1300,
      "end": 1616
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1617
}