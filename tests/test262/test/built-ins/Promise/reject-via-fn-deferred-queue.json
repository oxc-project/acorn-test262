{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "thenable",
            "start": 1229,
            "end": 1237
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Promise",
                "start": 1240,
                "end": 1247
              },
              "property": {
                "type": "Identifier",
                "name": "resolve",
                "start": 1248,
                "end": 1255
              },
              "optional": false,
              "computed": false,
              "start": 1240,
              "end": 1255
            },
            "arguments": [],
            "optional": false,
            "start": 1240,
            "end": 1257
          },
          "start": 1229,
          "end": 1257
        }
      ],
      "start": 1225,
      "end": 1258
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "returnValue",
            "start": 1263,
            "end": 1274
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 1277,
            "end": 1281
          },
          "start": 1263,
          "end": 1281
        }
      ],
      "start": 1259,
      "end": 1282
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "reject",
            "start": 1287,
            "end": 1293
          },
          "init": null,
          "start": 1287,
          "end": 1293
        }
      ],
      "start": 1283,
      "end": 1294
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p",
            "start": 1299,
            "end": 1300
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 1307,
              "end": 1314
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "_",
                    "start": 1324,
                    "end": 1325
                  },
                  {
                    "type": "Identifier",
                    "name": "_reject",
                    "start": 1327,
                    "end": 1334
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "reject",
                          "start": 1340,
                          "end": 1346
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "_reject",
                          "start": 1349,
                          "end": 1356
                        },
                        "start": 1340,
                        "end": 1356
                      },
                      "start": 1340,
                      "end": 1357
                    }
                  ],
                  "start": 1336,
                  "end": 1359
                },
                "expression": false,
                "start": 1315,
                "end": 1359
              }
            ],
            "start": 1303,
            "end": 1360
          },
          "start": 1299,
          "end": 1360
        }
      ],
      "start": 1295,
      "end": 1361
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "p",
                "start": 1363,
                "end": 1364
              },
              "property": {
                "type": "Identifier",
                "name": "then",
                "start": 1365,
                "end": 1369
              },
              "optional": false,
              "computed": false,
              "start": 1363,
              "end": 1369
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "$DONE",
                          "start": 1385,
                          "end": 1390
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "The promise should not be fulfilled.",
                            "raw": "'The promise should not be fulfilled.'",
                            "start": 1391,
                            "end": 1429
                          }
                        ],
                        "optional": false,
                        "start": 1385,
                        "end": 1430
                      },
                      "start": 1385,
                      "end": 1431
                    }
                  ],
                  "start": 1381,
                  "end": 1433
                },
                "expression": false,
                "start": 1370,
                "end": 1433
              }
            ],
            "optional": false,
            "start": 1363,
            "end": 1434
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1435,
            "end": 1439
          },
          "optional": false,
          "computed": false,
          "start": 1363,
          "end": 1439
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1455,
                      "end": 1460
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "The promise should not be fulfilled.",
                        "raw": "'The promise should not be fulfilled.'",
                        "start": 1461,
                        "end": 1499
                      }
                    ],
                    "optional": false,
                    "start": 1455,
                    "end": 1500
                  },
                  "start": 1455,
                  "end": 1501
                }
              ],
              "start": 1451,
              "end": 1503
            },
            "expression": false,
            "start": 1440,
            "end": 1503
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "x",
                "start": 1514,
                "end": 1515
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1525,
                      "end": 1526
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "thenable",
                      "start": 1531,
                      "end": 1539
                    },
                    "start": 1525,
                    "end": 1539
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1547,
                            "end": 1552
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be rejected with the resolution value.",
                              "raw": "'The promise should be rejected with the resolution value.'",
                              "start": 1553,
                              "end": 1612
                            }
                          ],
                          "optional": false,
                          "start": 1547,
                          "end": 1613
                        },
                        "start": 1547,
                        "end": 1614
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1619,
                        "end": 1626
                      }
                    ],
                    "start": 1541,
                    "end": 1630
                  },
                  "alternate": null,
                  "start": 1521,
                  "end": 1630
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1634,
                      "end": 1639
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1634,
                    "end": 1641
                  },
                  "start": 1634,
                  "end": 1642
                }
              ],
              "start": 1517,
              "end": 1644
            },
            "expression": false,
            "start": 1505,
            "end": 1644
          }
        ],
        "optional": false,
        "start": 1363,
        "end": 1645
      },
      "start": 1363,
      "end": 1646
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "returnValue",
          "start": 1648,
          "end": 1659
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "reject",
            "start": 1662,
            "end": 1668
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "thenable",
              "start": 1669,
              "end": 1677
            }
          ],
          "optional": false,
          "start": 1662,
          "end": 1678
        },
        "start": 1648,
        "end": 1678
      },
      "start": 1648,
      "end": 1679
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1681,
            "end": 1687
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1688,
            "end": 1697
          },
          "optional": false,
          "computed": false,
          "start": 1681,
          "end": 1697
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "returnValue",
            "start": 1698,
            "end": 1709
          },
          {
            "type": "Identifier",
            "name": "undefined",
            "start": 1711,
            "end": 1720
          },
          {
            "type": "Literal",
            "value": "\"reject\" function return value",
            "raw": "'\"reject\" function return value'",
            "start": 1722,
            "end": 1754
          }
        ],
        "optional": false,
        "start": 1681,
        "end": 1755
      },
      "start": 1681,
      "end": 1756
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1757
}