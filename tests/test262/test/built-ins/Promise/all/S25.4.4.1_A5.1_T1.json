{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterThrows",
            "start": 348,
            "end": 358
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 361,
            "end": 363
          },
          "start": 348,
          "end": 363
        }
      ],
      "start": 344,
      "end": 364
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "error",
            "start": 369,
            "end": 374
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Test262Error",
              "start": 381,
              "end": 393
            },
            "arguments": [],
            "start": 377,
            "end": 395
          },
          "start": 369,
          "end": 395
        }
      ],
      "start": 365,
      "end": 396
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "iterThrows",
            "start": 397,
            "end": 407
          },
          "property": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Symbol",
              "start": 408,
              "end": 414
            },
            "property": {
              "type": "Identifier",
              "name": "iterator",
              "start": 415,
              "end": 423
            },
            "optional": false,
            "computed": false,
            "start": 408,
            "end": 423
          },
          "optional": false,
          "computed": true,
          "start": 397,
          "end": 424
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "kind": "init",
                      "key": {
                        "type": "Identifier",
                        "name": "next",
                        "start": 455,
                        "end": 459
                      },
                      "value": {
                        "type": "FunctionExpression",
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ThrowStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "error",
                                "start": 486,
                                "end": 491
                              },
                              "start": 480,
                              "end": 492
                            }
                          ],
                          "start": 472,
                          "end": 498
                        },
                        "expression": false,
                        "start": 461,
                        "end": 498
                      },
                      "method": false,
                      "shorthand": false,
                      "computed": false,
                      "start": 455,
                      "end": 498
                    }
                  ],
                  "start": 449,
                  "end": 502
                },
                "start": 442,
                "end": 503
              }
            ],
            "start": 438,
            "end": 505
          },
          "expression": false,
          "start": 427,
          "end": 505
        },
        "start": 397,
        "end": 505
      },
      "start": 397,
      "end": 506
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 508,
                    "end": 515
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "all",
                    "start": 516,
                    "end": 519
                  },
                  "optional": false,
                  "computed": false,
                  "start": 508,
                  "end": 519
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "iterThrows",
                    "start": 520,
                    "end": 530
                  }
                ],
                "optional": false,
                "start": 508,
                "end": 531
              },
              "property": {
                "type": "Identifier",
                "name": "then",
                "start": 532,
                "end": 536
              },
              "optional": false,
              "computed": false,
              "start": 508,
              "end": 536
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Test262Error",
                          "start": 562,
                          "end": 574
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Promise unexpectedly resolved: Promise.all(iterThrows) should throw TypeError",
                            "raw": "'Promise unexpectedly resolved: Promise.all(iterThrows) should throw TypeError'",
                            "start": 575,
                            "end": 654
                          }
                        ],
                        "start": 558,
                        "end": 655
                      },
                      "start": 552,
                      "end": 656
                    }
                  ],
                  "start": 548,
                  "end": 658
                },
                "expression": false,
                "start": 537,
                "end": 658
              },
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "reason",
                    "start": 669,
                    "end": 675
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "assert",
                            "start": 681,
                            "end": 687
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sameValue",
                            "start": 688,
                            "end": 697
                          },
                          "optional": false,
                          "computed": false,
                          "start": 681,
                          "end": 697
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "reason",
                            "start": 698,
                            "end": 704
                          },
                          {
                            "type": "Identifier",
                            "name": "error",
                            "start": 706,
                            "end": 711
                          },
                          {
                            "type": "Literal",
                            "value": "The value of reason is expected to equal the value of error",
                            "raw": "'The value of reason is expected to equal the value of error'",
                            "start": 713,
                            "end": 774
                          }
                        ],
                        "optional": false,
                        "start": 681,
                        "end": 775
                      },
                      "start": 681,
                      "end": 776
                    }
                  ],
                  "start": 677,
                  "end": 778
                },
                "expression": false,
                "start": 660,
                "end": 778
              }
            ],
            "optional": false,
            "start": 508,
            "end": 779
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 780,
            "end": 784
          },
          "optional": false,
          "computed": false,
          "start": 508,
          "end": 784
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 785,
            "end": 790
          },
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 792,
            "end": 797
          }
        ],
        "optional": false,
        "start": 508,
        "end": 798
      },
      "start": 508,
      "end": 799
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 800
}