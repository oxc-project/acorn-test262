{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "v1",
            "start": 1183,
            "end": 1185
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 1188,
            "end": 1190
          },
          "start": 1183,
          "end": 1190
        }
      ],
      "start": 1179,
      "end": 1191
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "v2",
            "start": 1196,
            "end": 1198
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 1201,
            "end": 1203
          },
          "start": 1196,
          "end": 1203
        }
      ],
      "start": 1192,
      "end": 1204
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "v3",
            "start": 1209,
            "end": 1211
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 1214,
            "end": 1216
          },
          "start": 1209,
          "end": 1216
        }
      ],
      "start": 1205,
      "end": 1217
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Promise",
                "start": 1219,
                "end": 1226
              },
              "property": {
                "type": "Identifier",
                "name": "all",
                "start": 1227,
                "end": 1230
              },
              "optional": false,
              "computed": false,
              "start": 1219,
              "end": 1230
            },
            "arguments": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Identifier",
                    "name": "v1",
                    "start": 1232,
                    "end": 1234
                  },
                  {
                    "type": "Identifier",
                    "name": "v2",
                    "start": 1236,
                    "end": 1238
                  },
                  {
                    "type": "Identifier",
                    "name": "v3",
                    "start": 1240,
                    "end": 1242
                  }
                ],
                "start": 1231,
                "end": 1243
              }
            ],
            "optional": false,
            "start": 1219,
            "end": 1244
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1248,
            "end": 1252
          },
          "optional": false,
          "computed": false,
          "start": 1219,
          "end": 1252
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "values",
                "start": 1262,
                "end": 1268
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "Identifier",
                      "name": "values",
                      "start": 1281,
                      "end": 1287
                    },
                    "prefix": true,
                    "start": 1280,
                    "end": 1287
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1297,
                            "end": 1302
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be resolved with a value.",
                              "raw": "'The promise should be resolved with a value.'",
                              "start": 1303,
                              "end": 1349
                            }
                          ],
                          "optional": false,
                          "start": 1297,
                          "end": 1350
                        },
                        "start": 1297,
                        "end": 1351
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1358,
                        "end": 1365
                      }
                    ],
                    "start": 1289,
                    "end": 1371
                  },
                  "alternate": null,
                  "start": 1276,
                  "end": 1371
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "values",
                        "start": 1380,
                        "end": 1386
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "constructor",
                        "start": 1387,
                        "end": 1398
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1380,
                      "end": 1398
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "Array",
                      "start": 1403,
                      "end": 1408
                    },
                    "start": 1380,
                    "end": 1408
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1418,
                            "end": 1423
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be resolved with an Array instance.",
                              "raw": "'The promise should be resolved with an Array instance.'",
                              "start": 1424,
                              "end": 1480
                            }
                          ],
                          "optional": false,
                          "start": 1418,
                          "end": 1481
                        },
                        "start": 1418,
                        "end": 1482
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1489,
                        "end": 1496
                      }
                    ],
                    "start": 1410,
                    "end": 1502
                  },
                  "alternate": null,
                  "start": 1376,
                  "end": 1502
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "values",
                        "start": 1512,
                        "end": 1518
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 1519,
                        "end": 1525
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1512,
                      "end": 1525
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Literal",
                      "value": 3,
                      "raw": "3",
                      "start": 1530,
                      "end": 1531
                    },
                    "start": 1512,
                    "end": 1531
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1541,
                            "end": 1546
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be resolved with an array of proper length.",
                              "raw": "'The promise should be resolved with an array of proper length.'",
                              "start": 1547,
                              "end": 1611
                            }
                          ],
                          "optional": false,
                          "start": 1541,
                          "end": 1612
                        },
                        "start": 1541,
                        "end": 1613
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1620,
                        "end": 1627
                      }
                    ],
                    "start": 1533,
                    "end": 1633
                  },
                  "alternate": null,
                  "start": 1508,
                  "end": 1633
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "values",
                        "start": 1643,
                        "end": 1649
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1650,
                        "end": 1651
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1643,
                      "end": 1652
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "v1",
                      "start": 1657,
                      "end": 1659
                    },
                    "start": 1643,
                    "end": 1659
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1669,
                            "end": 1674
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be resolved with the correct element values (#1)",
                              "raw": "'The promise should be resolved with the correct element values (#1)'",
                              "start": 1675,
                              "end": 1744
                            }
                          ],
                          "optional": false,
                          "start": 1669,
                          "end": 1745
                        },
                        "start": 1669,
                        "end": 1746
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1753,
                        "end": 1760
                      }
                    ],
                    "start": 1661,
                    "end": 1766
                  },
                  "alternate": null,
                  "start": 1639,
                  "end": 1766
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "values",
                        "start": 1776,
                        "end": 1782
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1783,
                        "end": 1784
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1776,
                      "end": 1785
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "v2",
                      "start": 1790,
                      "end": 1792
                    },
                    "start": 1776,
                    "end": 1792
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1802,
                            "end": 1807
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be resolved with the correct element values (#2)",
                              "raw": "'The promise should be resolved with the correct element values (#2)'",
                              "start": 1808,
                              "end": 1877
                            }
                          ],
                          "optional": false,
                          "start": 1802,
                          "end": 1878
                        },
                        "start": 1802,
                        "end": 1879
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1886,
                        "end": 1893
                      }
                    ],
                    "start": 1794,
                    "end": 1899
                  },
                  "alternate": null,
                  "start": 1772,
                  "end": 1899
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "values",
                        "start": 1909,
                        "end": 1915
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 1916,
                        "end": 1917
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1909,
                      "end": 1918
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "v3",
                      "start": 1923,
                      "end": 1925
                    },
                    "start": 1909,
                    "end": 1925
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1935,
                            "end": 1940
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be resolved with the correct element values (#3)",
                              "raw": "'The promise should be resolved with the correct element values (#3)'",
                              "start": 1941,
                              "end": 2010
                            }
                          ],
                          "optional": false,
                          "start": 1935,
                          "end": 2011
                        },
                        "start": 1935,
                        "end": 2012
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 2019,
                        "end": 2026
                      }
                    ],
                    "start": 1927,
                    "end": 2032
                  },
                  "alternate": null,
                  "start": 1905,
                  "end": 2032
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 2038,
                      "end": 2043
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 2038,
                    "end": 2045
                  },
                  "start": 2038,
                  "end": 2046
                }
              ],
              "start": 1270,
              "end": 2050
            },
            "expression": false,
            "start": 1253,
            "end": 2050
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 2069,
                      "end": 2074
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "The promise should not be rejected.",
                        "raw": "'The promise should not be rejected.'",
                        "start": 2075,
                        "end": 2112
                      }
                    ],
                    "optional": false,
                    "start": 2069,
                    "end": 2113
                  },
                  "start": 2069,
                  "end": 2114
                }
              ],
              "start": 2063,
              "end": 2118
            },
            "expression": false,
            "start": 2052,
            "end": 2118
          }
        ],
        "optional": false,
        "start": 1219,
        "end": 2119
      },
      "start": 1219,
      "end": 2120
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2121
}