{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "value",
            "start": 794,
            "end": 799
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 802,
            "end": 804
          },
          "start": 794,
          "end": 804
        }
      ],
      "start": 790,
      "end": 805
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "resolve",
            "start": 810,
            "end": 817
          },
          "init": null,
          "start": 810,
          "end": 817
        }
      ],
      "start": 806,
      "end": 818
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p",
            "start": 823,
            "end": 824
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 831,
              "end": 838
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "_resolve",
                    "start": 848,
                    "end": 856
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "resolve",
                          "start": 862,
                          "end": 869
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "_resolve",
                          "start": 872,
                          "end": 880
                        },
                        "start": 862,
                        "end": 880
                      },
                      "start": 862,
                      "end": 881
                    }
                  ],
                  "start": 858,
                  "end": 883
                },
                "expression": false,
                "start": 839,
                "end": 883
              }
            ],
            "start": 827,
            "end": 884
          },
          "start": 823,
          "end": 884
        }
      ],
      "start": 819,
      "end": 885
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "p",
            "start": 887,
            "end": 888
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 889,
            "end": 893
          },
          "optional": false,
          "computed": false,
          "start": 887,
          "end": 893
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "x",
                "start": 903,
                "end": 904
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 914,
                      "end": 915
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 920,
                      "end": 925
                    },
                    "start": 914,
                    "end": 925
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 933,
                            "end": 938
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The `onFulfilled` handler should be invoked with the promise result.",
                              "raw": "'The `onFulfilled` handler should be invoked with the promise result.'",
                              "start": 939,
                              "end": 1009
                            }
                          ],
                          "optional": false,
                          "start": 933,
                          "end": 1010
                        },
                        "start": 933,
                        "end": 1011
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1016,
                        "end": 1023
                      }
                    ],
                    "start": 927,
                    "end": 1027
                  },
                  "alternate": null,
                  "start": 910,
                  "end": 1027
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1030,
                      "end": 1035
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1030,
                    "end": 1037
                  },
                  "start": 1030,
                  "end": 1038
                }
              ],
              "start": 906,
              "end": 1040
            },
            "expression": false,
            "start": 894,
            "end": 1040
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1057,
                      "end": 1062
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "The `onRejected` handler should not be invoked.",
                        "raw": "'The `onRejected` handler should not be invoked.'",
                        "start": 1063,
                        "end": 1112
                      }
                    ],
                    "optional": false,
                    "start": 1057,
                    "end": 1113
                  },
                  "start": 1057,
                  "end": 1114
                }
              ],
              "start": 1053,
              "end": 1116
            },
            "expression": false,
            "start": 1042,
            "end": 1116
          }
        ],
        "optional": false,
        "start": 887,
        "end": 1117
      },
      "start": 887,
      "end": 1118
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "resolve",
          "start": 1120,
          "end": 1127
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "value",
            "start": 1128,
            "end": 1133
          }
        ],
        "optional": false,
        "start": 1120,
        "end": 1134
      },
      "start": 1120,
      "end": 1135
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1136
}