{
  "type": "Program",
  "start": 0,
  "end": 1416,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 988,
      "end": 1023,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 992,
          "end": 1022,
          "id": {
            "type": "Identifier",
            "start": 992,
            "end": 1003,
            "name": "nonThenable"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 1006,
            "end": 1022,
            "properties": [
              {
                "type": "Property",
                "start": 1010,
                "end": 1020,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 1010,
                  "end": 1014,
                  "name": "then"
                },
                "value": {
                  "type": "Literal",
                  "start": 1016,
                  "end": 1020,
                  "value": null,
                  "raw": "null"
                },
                "method": false,
                "shorthand": false,
                "computed": false
              }
            ]
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1024,
      "end": 1035,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1028,
          "end": 1034,
          "id": {
            "type": "Identifier",
            "start": 1028,
            "end": 1034,
            "name": "reject"
          },
          "init": null
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1036,
      "end": 1103,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1040,
          "end": 1102,
          "id": {
            "type": "Identifier",
            "start": 1040,
            "end": 1042,
            "name": "p1"
          },
          "init": {
            "type": "NewExpression",
            "start": 1045,
            "end": 1102,
            "callee": {
              "type": "Identifier",
              "start": 1049,
              "end": 1056,
              "name": "Promise"
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 1057,
                "end": 1101,
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1066,
                    "end": 1067,
                    "name": "_"
                  },
                  {
                    "type": "Identifier",
                    "start": 1069,
                    "end": 1076,
                    "name": "_reject"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1078,
                  "end": 1101,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 1082,
                      "end": 1099,
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 1082,
                        "end": 1098,
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "start": 1082,
                          "end": 1088,
                          "name": "reject"
                        },
                        "right": {
                          "type": "Identifier",
                          "start": 1091,
                          "end": 1098,
                          "name": "_reject"
                        }
                      }
                    }
                  ]
                },
                "expression": false
              }
            ]
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1104,
      "end": 1111,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1108,
          "end": 1110,
          "id": {
            "type": "Identifier",
            "start": 1108,
            "end": 1110,
            "name": "p2"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1113,
      "end": 1179,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1113,
        "end": 1178,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1113,
          "end": 1115,
          "name": "p2"
        },
        "right": {
          "type": "CallExpression",
          "start": 1118,
          "end": 1178,
          "callee": {
            "type": "MemberExpression",
            "start": 1118,
            "end": 1125,
            "object": {
              "type": "Identifier",
              "start": 1118,
              "end": 1120,
              "name": "p1"
            },
            "property": {
              "type": "Identifier",
              "start": 1121,
              "end": 1125,
              "name": "then"
            },
            "optional": false,
            "computed": false
          },
          "arguments": [
            {
              "type": "FunctionExpression",
              "start": 1126,
              "end": 1139,
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1137,
                "end": 1139,
                "body": []
              },
              "expression": false
            },
            {
              "type": "FunctionExpression",
              "start": 1141,
              "end": 1177,
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1152,
                "end": 1177,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 1156,
                    "end": 1175,
                    "argument": {
                      "type": "Identifier",
                      "start": 1163,
                      "end": 1174,
                      "name": "nonThenable"
                    }
                  }
                ]
              },
              "expression": false
            }
          ],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1181,
      "end": 1404,
      "expression": {
        "type": "CallExpression",
        "start": 1181,
        "end": 1403,
        "callee": {
          "type": "MemberExpression",
          "start": 1181,
          "end": 1188,
          "object": {
            "type": "Identifier",
            "start": 1181,
            "end": 1183,
            "name": "p2"
          },
          "property": {
            "type": "Identifier",
            "start": 1184,
            "end": 1188,
            "name": "then"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 1189,
            "end": 1338,
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1198,
                "end": 1203,
                "name": "value"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1205,
              "end": 1338,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 1209,
                  "end": 1324,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 1213,
                    "end": 1234,
                    "left": {
                      "type": "Identifier",
                      "start": 1213,
                      "end": 1218,
                      "name": "value"
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "start": 1223,
                      "end": 1234,
                      "name": "nonThenable"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 1236,
                    "end": 1324,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1242,
                        "end": 1308,
                        "expression": {
                          "type": "CallExpression",
                          "start": 1242,
                          "end": 1307,
                          "callee": {
                            "type": "Identifier",
                            "start": 1242,
                            "end": 1247,
                            "name": "$DONE"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1248,
                              "end": 1306,
                              "value": "The promise should be fulfilled with the provided value.",
                              "raw": "'The promise should be fulfilled with the provided value.'"
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 1313,
                        "end": 1320,
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1328,
                  "end": 1336,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1328,
                    "end": 1335,
                    "callee": {
                      "type": "Identifier",
                      "start": 1328,
                      "end": 1333,
                      "name": "$DONE"
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          },
          {
            "type": "FunctionExpression",
            "start": 1340,
            "end": 1402,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1351,
              "end": 1402,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1355,
                  "end": 1400,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1355,
                    "end": 1399,
                    "callee": {
                      "type": "Identifier",
                      "start": 1355,
                      "end": 1360,
                      "name": "$DONE"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1361,
                        "end": 1398,
                        "value": "The promise should not be rejected.",
                        "raw": "'The promise should not be rejected.'"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1406,
      "end": 1415,
      "expression": {
        "type": "CallExpression",
        "start": 1406,
        "end": 1414,
        "callee": {
          "type": "Identifier",
          "start": 1406,
          "end": 1412,
          "name": "reject"
        },
        "arguments": [],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}