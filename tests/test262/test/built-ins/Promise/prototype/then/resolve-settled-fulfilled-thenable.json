{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "value",
            "start": 1211,
            "end": 1216
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 1219,
            "end": 1221
          },
          "start": 1211,
          "end": 1221
        }
      ],
      "start": 1207,
      "end": 1222
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "thenable",
            "start": 1227,
            "end": 1235
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 1242,
              "end": 1249
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "resolve",
                    "start": 1259,
                    "end": 1266
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "resolve",
                          "start": 1272,
                          "end": 1279
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "value",
                            "start": 1280,
                            "end": 1285
                          }
                        ],
                        "optional": false,
                        "start": 1272,
                        "end": 1286
                      },
                      "start": 1272,
                      "end": 1287
                    }
                  ],
                  "start": 1268,
                  "end": 1289
                },
                "expression": false,
                "start": 1250,
                "end": 1289
              }
            ],
            "start": 1238,
            "end": 1290
          },
          "start": 1227,
          "end": 1290
        }
      ],
      "start": 1223,
      "end": 1291
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p1",
            "start": 1296,
            "end": 1298
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 1305,
              "end": 1312
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "resolve",
                    "start": 1322,
                    "end": 1329
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "resolve",
                          "start": 1335,
                          "end": 1342
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 1335,
                        "end": 1344
                      },
                      "start": 1335,
                      "end": 1345
                    }
                  ],
                  "start": 1331,
                  "end": 1347
                },
                "expression": false,
                "start": 1313,
                "end": 1347
              }
            ],
            "start": 1301,
            "end": 1348
          },
          "start": 1296,
          "end": 1348
        }
      ],
      "start": 1292,
      "end": 1349
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p2",
            "start": 1354,
            "end": 1356
          },
          "init": null,
          "start": 1354,
          "end": 1356
        }
      ],
      "start": 1350,
      "end": 1357
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "p2",
          "start": 1359,
          "end": 1361
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "p1",
              "start": 1364,
              "end": 1366
            },
            "property": {
              "type": "Identifier",
              "name": "then",
              "start": 1367,
              "end": 1371
            },
            "optional": false,
            "computed": false,
            "start": 1364,
            "end": 1371
          },
          "arguments": [
            {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Identifier",
                      "name": "thenable",
                      "start": 1394,
                      "end": 1402
                    },
                    "start": 1387,
                    "end": 1403
                  }
                ],
                "start": 1383,
                "end": 1405
              },
              "expression": false,
              "start": 1372,
              "end": 1405
            }
          ],
          "optional": false,
          "start": 1364,
          "end": 1406
        },
        "start": 1359,
        "end": 1406
      },
      "start": 1359,
      "end": 1407
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "p2",
            "start": 1409,
            "end": 1411
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1412,
            "end": 1416
          },
          "optional": false,
          "computed": false,
          "start": 1409,
          "end": 1416
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "x",
                "start": 1426,
                "end": 1427
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1437,
                      "end": 1438
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 1443,
                      "end": 1448
                    },
                    "start": 1437,
                    "end": 1448
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1456,
                            "end": 1461
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be fulfilled with the resolution value of the provided promise.",
                              "raw": "'The promise should be fulfilled with the resolution value of the provided promise.'",
                              "start": 1462,
                              "end": 1546
                            }
                          ],
                          "optional": false,
                          "start": 1456,
                          "end": 1547
                        },
                        "start": 1456,
                        "end": 1548
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1553,
                        "end": 1560
                      }
                    ],
                    "start": 1450,
                    "end": 1564
                  },
                  "alternate": null,
                  "start": 1433,
                  "end": 1564
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1568,
                      "end": 1573
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1568,
                    "end": 1575
                  },
                  "start": 1568,
                  "end": 1576
                }
              ],
              "start": 1429,
              "end": 1578
            },
            "expression": false,
            "start": 1417,
            "end": 1578
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1595,
                      "end": 1600
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "The promise should not be rejected.",
                        "raw": "'The promise should not be rejected.'",
                        "start": 1601,
                        "end": 1638
                      }
                    ],
                    "optional": false,
                    "start": 1595,
                    "end": 1639
                  },
                  "start": 1595,
                  "end": 1640
                }
              ],
              "start": 1591,
              "end": 1642
            },
            "expression": false,
            "start": 1580,
            "end": 1642
          }
        ],
        "optional": false,
        "start": 1409,
        "end": 1643
      },
      "start": 1409,
      "end": 1644
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1645
}