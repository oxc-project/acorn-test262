{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "nonThenable",
            "start": 985,
            "end": 996
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "then",
                  "start": 1003,
                  "end": 1007
                },
                "value": {
                  "type": "Literal",
                  "value": null,
                  "raw": "null",
                  "start": 1009,
                  "end": 1013
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 1003,
                "end": 1013
              }
            ],
            "start": 999,
            "end": 1015
          },
          "start": 985,
          "end": 1015
        }
      ],
      "start": 981,
      "end": 1016
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "resolve",
            "start": 1021,
            "end": 1028
          },
          "init": null,
          "start": 1021,
          "end": 1028
        }
      ],
      "start": 1017,
      "end": 1029
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p1",
            "start": 1034,
            "end": 1036
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 1043,
              "end": 1050
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "_resolve",
                    "start": 1060,
                    "end": 1068
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "resolve",
                          "start": 1074,
                          "end": 1081
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "_resolve",
                          "start": 1084,
                          "end": 1092
                        },
                        "start": 1074,
                        "end": 1092
                      },
                      "start": 1074,
                      "end": 1093
                    }
                  ],
                  "start": 1070,
                  "end": 1095
                },
                "expression": false,
                "start": 1051,
                "end": 1095
              }
            ],
            "start": 1039,
            "end": 1096
          },
          "start": 1034,
          "end": 1096
        }
      ],
      "start": 1030,
      "end": 1097
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p2",
            "start": 1102,
            "end": 1104
          },
          "init": null,
          "start": 1102,
          "end": 1104
        }
      ],
      "start": 1098,
      "end": 1105
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "p2",
          "start": 1107,
          "end": 1109
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "p1",
              "start": 1112,
              "end": 1114
            },
            "property": {
              "type": "Identifier",
              "name": "then",
              "start": 1115,
              "end": 1119
            },
            "optional": false,
            "computed": false,
            "start": 1112,
            "end": 1119
          },
          "arguments": [
            {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Identifier",
                      "name": "nonThenable",
                      "start": 1142,
                      "end": 1153
                    },
                    "start": 1135,
                    "end": 1154
                  }
                ],
                "start": 1131,
                "end": 1156
              },
              "expression": false,
              "start": 1120,
              "end": 1156
            }
          ],
          "optional": false,
          "start": 1112,
          "end": 1157
        },
        "start": 1107,
        "end": 1157
      },
      "start": 1107,
      "end": 1158
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "p2",
            "start": 1160,
            "end": 1162
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1163,
            "end": 1167
          },
          "optional": false,
          "computed": false,
          "start": 1160,
          "end": 1167
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "value",
                "start": 1177,
                "end": 1182
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 1192,
                      "end": 1197
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "nonThenable",
                      "start": 1202,
                      "end": 1213
                    },
                    "start": 1192,
                    "end": 1213
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1221,
                            "end": 1226
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be fulfilled with the provided value.",
                              "raw": "'The promise should be fulfilled with the provided value.'",
                              "start": 1227,
                              "end": 1285
                            }
                          ],
                          "optional": false,
                          "start": 1221,
                          "end": 1286
                        },
                        "start": 1221,
                        "end": 1287
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1292,
                        "end": 1299
                      }
                    ],
                    "start": 1215,
                    "end": 1303
                  },
                  "alternate": null,
                  "start": 1188,
                  "end": 1303
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1307,
                      "end": 1312
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1307,
                    "end": 1314
                  },
                  "start": 1307,
                  "end": 1315
                }
              ],
              "start": 1184,
              "end": 1317
            },
            "expression": false,
            "start": 1168,
            "end": 1317
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1334,
                      "end": 1339
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "The promise should not be rejected.",
                        "raw": "'The promise should not be rejected.'",
                        "start": 1340,
                        "end": 1377
                      }
                    ],
                    "optional": false,
                    "start": 1334,
                    "end": 1378
                  },
                  "start": 1334,
                  "end": 1379
                }
              ],
              "start": 1330,
              "end": 1381
            },
            "expression": false,
            "start": 1319,
            "end": 1381
          }
        ],
        "optional": false,
        "start": 1160,
        "end": 1382
      },
      "start": 1160,
      "end": 1383
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "resolve",
          "start": 1385,
          "end": 1392
        },
        "arguments": [],
        "optional": false,
        "start": 1385,
        "end": 1394
      },
      "start": 1385,
      "end": 1395
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1396
}