{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "value",
            "start": 899,
            "end": 904
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 907,
            "end": 909
          },
          "start": 899,
          "end": 909
        }
      ],
      "start": 895,
      "end": 910
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "resolve",
            "start": 915,
            "end": 922
          },
          "init": null,
          "start": 915,
          "end": 922
        }
      ],
      "start": 911,
      "end": 923
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "poisonedThen",
            "start": 928,
            "end": 940
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Object",
                "start": 943,
                "end": 949
              },
              "property": {
                "type": "Identifier",
                "name": "defineProperty",
                "start": 950,
                "end": 964
              },
              "optional": false,
              "computed": false,
              "start": 943,
              "end": 964
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "properties": [],
                "start": 965,
                "end": 967
              },
              {
                "type": "Literal",
                "value": "then",
                "raw": "'then'",
                "start": 969,
                "end": 975
              },
              {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "name": "get",
                      "start": 981,
                      "end": 984
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ThrowStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "value",
                              "start": 1009,
                              "end": 1014
                            },
                            "start": 1003,
                            "end": 1015
                          }
                        ],
                        "start": 997,
                        "end": 1019
                      },
                      "expression": false,
                      "start": 986,
                      "end": 1019
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "start": 981,
                    "end": 1019
                  }
                ],
                "start": 977,
                "end": 1021
              }
            ],
            "optional": false,
            "start": 943,
            "end": 1022
          },
          "start": 928,
          "end": 1022
        }
      ],
      "start": 924,
      "end": 1023
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p1",
            "start": 1028,
            "end": 1030
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 1037,
              "end": 1044
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "_resolve",
                    "start": 1054,
                    "end": 1062
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "resolve",
                          "start": 1068,
                          "end": 1075
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "_resolve",
                          "start": 1078,
                          "end": 1086
                        },
                        "start": 1068,
                        "end": 1086
                      },
                      "start": 1068,
                      "end": 1087
                    }
                  ],
                  "start": 1064,
                  "end": 1089
                },
                "expression": false,
                "start": 1045,
                "end": 1089
              }
            ],
            "start": 1033,
            "end": 1090
          },
          "start": 1028,
          "end": 1090
        }
      ],
      "start": 1024,
      "end": 1091
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p2",
            "start": 1096,
            "end": 1098
          },
          "init": null,
          "start": 1096,
          "end": 1098
        }
      ],
      "start": 1092,
      "end": 1099
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "p2",
          "start": 1101,
          "end": 1103
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "p1",
              "start": 1106,
              "end": 1108
            },
            "property": {
              "type": "Identifier",
              "name": "then",
              "start": 1109,
              "end": 1113
            },
            "optional": false,
            "computed": false,
            "start": 1106,
            "end": 1113
          },
          "arguments": [
            {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Identifier",
                      "name": "poisonedThen",
                      "start": 1136,
                      "end": 1148
                    },
                    "start": 1129,
                    "end": 1149
                  }
                ],
                "start": 1125,
                "end": 1151
              },
              "expression": false,
              "start": 1114,
              "end": 1151
            }
          ],
          "optional": false,
          "start": 1106,
          "end": 1152
        },
        "start": 1101,
        "end": 1152
      },
      "start": 1101,
      "end": 1153
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "p2",
            "start": 1155,
            "end": 1157
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1158,
            "end": 1162
          },
          "optional": false,
          "computed": false,
          "start": 1155,
          "end": 1162
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "x",
                "start": 1172,
                "end": 1173
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1179,
                      "end": 1184
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "The promise should not be fulfilled.",
                        "raw": "'The promise should not be fulfilled.'",
                        "start": 1185,
                        "end": 1223
                      }
                    ],
                    "optional": false,
                    "start": 1179,
                    "end": 1224
                  },
                  "start": 1179,
                  "end": 1225
                }
              ],
              "start": 1175,
              "end": 1227
            },
            "expression": false,
            "start": 1163,
            "end": 1227
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "x",
                "start": 1238,
                "end": 1239
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1249,
                      "end": 1250
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 1255,
                      "end": 1260
                    },
                    "start": 1249,
                    "end": 1260
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1268,
                            "end": 1273
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be rejected with the thrown exception.",
                              "raw": "'The promise should be rejected with the thrown exception.'",
                              "start": 1274,
                              "end": 1333
                            }
                          ],
                          "optional": false,
                          "start": 1268,
                          "end": 1334
                        },
                        "start": 1268,
                        "end": 1335
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1340,
                        "end": 1347
                      }
                    ],
                    "start": 1262,
                    "end": 1351
                  },
                  "alternate": null,
                  "start": 1245,
                  "end": 1351
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1355,
                      "end": 1360
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1355,
                    "end": 1362
                  },
                  "start": 1355,
                  "end": 1363
                }
              ],
              "start": 1241,
              "end": 1365
            },
            "expression": false,
            "start": 1229,
            "end": 1365
          }
        ],
        "optional": false,
        "start": 1155,
        "end": 1366
      },
      "start": 1155,
      "end": 1367
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "resolve",
          "start": 1369,
          "end": 1376
        },
        "arguments": [],
        "optional": false,
        "start": 1369,
        "end": 1378
      },
      "start": 1369,
      "end": 1379
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1380
}