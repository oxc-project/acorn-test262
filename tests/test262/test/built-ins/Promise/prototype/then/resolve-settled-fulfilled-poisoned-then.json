{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "value",
            "start": 1057,
            "end": 1062
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 1065,
            "end": 1067
          },
          "start": 1057,
          "end": 1067
        }
      ],
      "start": 1053,
      "end": 1068
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "poisonedThen",
            "start": 1073,
            "end": 1085
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Object",
                "start": 1088,
                "end": 1094
              },
              "property": {
                "type": "Identifier",
                "name": "defineProperty",
                "start": 1095,
                "end": 1109
              },
              "optional": false,
              "computed": false,
              "start": 1088,
              "end": 1109
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "properties": [],
                "start": 1110,
                "end": 1112
              },
              {
                "type": "Literal",
                "value": "then",
                "raw": "'then'",
                "start": 1114,
                "end": 1120
              },
              {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "name": "get",
                      "start": 1126,
                      "end": 1129
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ThrowStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "value",
                              "start": 1154,
                              "end": 1159
                            },
                            "start": 1148,
                            "end": 1160
                          }
                        ],
                        "start": 1142,
                        "end": 1164
                      },
                      "expression": false,
                      "start": 1131,
                      "end": 1164
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "start": 1126,
                    "end": 1164
                  }
                ],
                "start": 1122,
                "end": 1166
              }
            ],
            "optional": false,
            "start": 1088,
            "end": 1167
          },
          "start": 1073,
          "end": 1167
        }
      ],
      "start": 1069,
      "end": 1168
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p1",
            "start": 1173,
            "end": 1175
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 1182,
              "end": 1189
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "resolve",
                    "start": 1199,
                    "end": 1206
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "resolve",
                          "start": 1212,
                          "end": 1219
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 1212,
                        "end": 1221
                      },
                      "start": 1212,
                      "end": 1222
                    }
                  ],
                  "start": 1208,
                  "end": 1224
                },
                "expression": false,
                "start": 1190,
                "end": 1224
              }
            ],
            "start": 1178,
            "end": 1225
          },
          "start": 1173,
          "end": 1225
        }
      ],
      "start": 1169,
      "end": 1226
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p2",
            "start": 1231,
            "end": 1233
          },
          "init": null,
          "start": 1231,
          "end": 1233
        }
      ],
      "start": 1227,
      "end": 1234
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "p2",
          "start": 1236,
          "end": 1238
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "p1",
              "start": 1241,
              "end": 1243
            },
            "property": {
              "type": "Identifier",
              "name": "then",
              "start": 1244,
              "end": 1248
            },
            "optional": false,
            "computed": false,
            "start": 1241,
            "end": 1248
          },
          "arguments": [
            {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Identifier",
                      "name": "poisonedThen",
                      "start": 1271,
                      "end": 1283
                    },
                    "start": 1264,
                    "end": 1284
                  }
                ],
                "start": 1260,
                "end": 1286
              },
              "expression": false,
              "start": 1249,
              "end": 1286
            }
          ],
          "optional": false,
          "start": 1241,
          "end": 1287
        },
        "start": 1236,
        "end": 1287
      },
      "start": 1236,
      "end": 1288
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "p2",
            "start": 1290,
            "end": 1292
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1293,
            "end": 1297
          },
          "optional": false,
          "computed": false,
          "start": 1290,
          "end": 1297
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "x",
                "start": 1307,
                "end": 1308
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1314,
                      "end": 1319
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "The promise should not be fulfilled.",
                        "raw": "'The promise should not be fulfilled.'",
                        "start": 1320,
                        "end": 1358
                      }
                    ],
                    "optional": false,
                    "start": 1314,
                    "end": 1359
                  },
                  "start": 1314,
                  "end": 1360
                }
              ],
              "start": 1310,
              "end": 1362
            },
            "expression": false,
            "start": 1298,
            "end": 1362
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "x",
                "start": 1373,
                "end": 1374
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1384,
                      "end": 1385
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 1390,
                      "end": 1395
                    },
                    "start": 1384,
                    "end": 1395
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1403,
                            "end": 1408
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be rejected with the thrown exception.",
                              "raw": "'The promise should be rejected with the thrown exception.'",
                              "start": 1409,
                              "end": 1468
                            }
                          ],
                          "optional": false,
                          "start": 1403,
                          "end": 1469
                        },
                        "start": 1403,
                        "end": 1470
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1475,
                        "end": 1482
                      }
                    ],
                    "start": 1397,
                    "end": 1486
                  },
                  "alternate": null,
                  "start": 1380,
                  "end": 1486
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1490,
                      "end": 1495
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1490,
                    "end": 1497
                  },
                  "start": 1490,
                  "end": 1498
                }
              ],
              "start": 1376,
              "end": 1500
            },
            "expression": false,
            "start": 1364,
            "end": 1500
          }
        ],
        "optional": false,
        "start": 1290,
        "end": 1501
      },
      "start": 1290,
      "end": 1502
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1503
}