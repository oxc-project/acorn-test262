{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p1",
            "start": 984,
            "end": 986
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 993,
              "end": 1000
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "_",
                    "start": 1010,
                    "end": 1011
                  },
                  {
                    "type": "Identifier",
                    "name": "reject",
                    "start": 1013,
                    "end": 1019
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "reject",
                          "start": 1025,
                          "end": 1031
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 1025,
                        "end": 1033
                      },
                      "start": 1025,
                      "end": 1034
                    }
                  ],
                  "start": 1021,
                  "end": 1036
                },
                "expression": false,
                "start": 1001,
                "end": 1036
              }
            ],
            "start": 989,
            "end": 1037
          },
          "start": 984,
          "end": 1037
        }
      ],
      "start": 980,
      "end": 1038
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p2",
            "start": 1043,
            "end": 1045
          },
          "init": null,
          "start": 1043,
          "end": 1045
        }
      ],
      "start": 1039,
      "end": 1046
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "p2",
          "start": 1048,
          "end": 1050
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "p1",
              "start": 1053,
              "end": 1055
            },
            "property": {
              "type": "Identifier",
              "name": "then",
              "start": 1056,
              "end": 1060
            },
            "optional": false,
            "computed": false,
            "start": 1053,
            "end": 1060
          },
          "arguments": [
            {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [],
                "start": 1072,
                "end": 1074
              },
              "expression": false,
              "start": 1061,
              "end": 1074
            },
            {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 23,
                      "raw": "23",
                      "start": 1098,
                      "end": 1100
                    },
                    "start": 1091,
                    "end": 1101
                  }
                ],
                "start": 1087,
                "end": 1103
              },
              "expression": false,
              "start": 1076,
              "end": 1103
            }
          ],
          "optional": false,
          "start": 1053,
          "end": 1104
        },
        "start": 1048,
        "end": 1104
      },
      "start": 1048,
      "end": 1105
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "p2",
            "start": 1107,
            "end": 1109
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1110,
            "end": 1114
          },
          "optional": false,
          "computed": false,
          "start": 1107,
          "end": 1114
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "value",
                "start": 1124,
                "end": 1129
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 1139,
                      "end": 1144
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Literal",
                      "value": 23,
                      "raw": "23",
                      "start": 1149,
                      "end": 1151
                    },
                    "start": 1139,
                    "end": 1151
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1159,
                            "end": 1164
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be fulfilled with the provided value.",
                              "raw": "'The promise should be fulfilled with the provided value.'",
                              "start": 1165,
                              "end": 1223
                            }
                          ],
                          "optional": false,
                          "start": 1159,
                          "end": 1224
                        },
                        "start": 1159,
                        "end": 1225
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1230,
                        "end": 1237
                      }
                    ],
                    "start": 1153,
                    "end": 1241
                  },
                  "alternate": null,
                  "start": 1135,
                  "end": 1241
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1245,
                      "end": 1250
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1245,
                    "end": 1252
                  },
                  "start": 1245,
                  "end": 1253
                }
              ],
              "start": 1131,
              "end": 1255
            },
            "expression": false,
            "start": 1115,
            "end": 1255
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1272,
                      "end": 1277
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "The promise should not be rejected.",
                        "raw": "'The promise should not be rejected.'",
                        "start": 1278,
                        "end": 1315
                      }
                    ],
                    "optional": false,
                    "start": 1272,
                    "end": 1316
                  },
                  "start": 1272,
                  "end": 1317
                }
              ],
              "start": 1268,
              "end": 1319
            },
            "expression": false,
            "start": 1257,
            "end": 1319
          }
        ],
        "optional": false,
        "start": 1107,
        "end": 1320
      },
      "start": 1107,
      "end": 1321
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1322
}