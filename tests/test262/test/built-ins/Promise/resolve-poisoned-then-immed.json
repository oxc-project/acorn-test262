{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "returnValue",
            "start": 655,
            "end": 666
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 669,
            "end": 673
          },
          "start": 655,
          "end": 673
        }
      ],
      "start": 651,
      "end": 674
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "value",
            "start": 679,
            "end": 684
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 687,
            "end": 689
          },
          "start": 679,
          "end": 689
        }
      ],
      "start": 675,
      "end": 690
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "poisonedThen",
            "start": 695,
            "end": 707
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Object",
                "start": 710,
                "end": 716
              },
              "property": {
                "type": "Identifier",
                "name": "defineProperty",
                "start": 717,
                "end": 731
              },
              "optional": false,
              "computed": false,
              "start": 710,
              "end": 731
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "properties": [],
                "start": 732,
                "end": 734
              },
              {
                "type": "Literal",
                "value": "then",
                "raw": "'then'",
                "start": 736,
                "end": 742
              },
              {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "name": "get",
                      "start": 748,
                      "end": 751
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ThrowStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "value",
                              "start": 776,
                              "end": 781
                            },
                            "start": 770,
                            "end": 782
                          }
                        ],
                        "start": 764,
                        "end": 786
                      },
                      "expression": false,
                      "start": 753,
                      "end": 786
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "start": 748,
                    "end": 786
                  }
                ],
                "start": 744,
                "end": 788
              }
            ],
            "optional": false,
            "start": 710,
            "end": 789
          },
          "start": 695,
          "end": 789
        }
      ],
      "start": 691,
      "end": 790
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "promise",
            "start": 795,
            "end": 802
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 809,
              "end": 816
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "resolve",
                    "start": 826,
                    "end": 833
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "returnValue",
                          "start": 839,
                          "end": 850
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "resolve",
                            "start": 853,
                            "end": 860
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "poisonedThen",
                              "start": 861,
                              "end": 873
                            }
                          ],
                          "optional": false,
                          "start": 853,
                          "end": 874
                        },
                        "start": 839,
                        "end": 874
                      },
                      "start": 839,
                      "end": 875
                    }
                  ],
                  "start": 835,
                  "end": 877
                },
                "expression": false,
                "start": 817,
                "end": 877
              }
            ],
            "start": 805,
            "end": 878
          },
          "start": 795,
          "end": 878
        }
      ],
      "start": 791,
      "end": 879
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 881,
            "end": 887
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 888,
            "end": 897
          },
          "optional": false,
          "computed": false,
          "start": 881,
          "end": 897
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "returnValue",
            "start": 898,
            "end": 909
          },
          {
            "type": "Identifier",
            "name": "undefined",
            "start": 911,
            "end": 920
          },
          {
            "type": "Literal",
            "value": "\"resolve\" return value",
            "raw": "'\"resolve\" return value'",
            "start": 922,
            "end": 946
          }
        ],
        "optional": false,
        "start": 881,
        "end": 947
      },
      "start": 881,
      "end": 948
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "promise",
            "start": 950,
            "end": 957
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 958,
            "end": 962
          },
          "optional": false,
          "computed": false,
          "start": 950,
          "end": 962
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 978,
                      "end": 983
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "The promise should not be fulfilled.",
                        "raw": "'The promise should not be fulfilled.'",
                        "start": 984,
                        "end": 1022
                      }
                    ],
                    "optional": false,
                    "start": 978,
                    "end": 1023
                  },
                  "start": 978,
                  "end": 1024
                }
              ],
              "start": 974,
              "end": 1026
            },
            "expression": false,
            "start": 963,
            "end": 1026
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "val",
                "start": 1037,
                "end": 1040
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "val",
                      "start": 1050,
                      "end": 1053
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 1058,
                      "end": 1063
                    },
                    "start": 1050,
                    "end": 1063
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "$DONE",
                            "start": 1071,
                            "end": 1076
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "The promise should be fulfilled with the provided value.",
                              "raw": "'The promise should be fulfilled with the provided value.'",
                              "start": 1077,
                              "end": 1135
                            }
                          ],
                          "optional": false,
                          "start": 1071,
                          "end": 1136
                        },
                        "start": 1071,
                        "end": 1137
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null,
                        "start": 1142,
                        "end": 1149
                      }
                    ],
                    "start": 1065,
                    "end": 1153
                  },
                  "alternate": null,
                  "start": 1046,
                  "end": 1153
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "$DONE",
                      "start": 1157,
                      "end": 1162
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1157,
                    "end": 1164
                  },
                  "start": 1157,
                  "end": 1165
                }
              ],
              "start": 1042,
              "end": 1167
            },
            "expression": false,
            "start": 1028,
            "end": 1167
          }
        ],
        "optional": false,
        "start": 950,
        "end": 1168
      },
      "start": 950,
      "end": 1169
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1170
}