{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 269,
            "end": 275
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 276,
            "end": 285
          },
          "optional": false,
          "computed": false,
          "start": 269,
          "end": 285
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "Identifier",
                "name": "Infinity",
                "start": 293,
                "end": 301
              },
              "start": 292,
              "end": 302
            },
            "prefix": true,
            "start": 286,
            "end": 302
          },
          {
            "type": "Literal",
            "value": "number",
            "raw": "\"number\"",
            "start": 304,
            "end": 312
          },
          {
            "type": "Literal",
            "value": "The value of `typeof(Infinity)` is expected to be \"number\"",
            "raw": "'The value of `typeof(Infinity)` is expected to be \"number\"'",
            "start": 314,
            "end": 374
          }
        ],
        "optional": false,
        "start": 269,
        "end": 375
      },
      "start": 269,
      "end": 376
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 377,
            "end": 383
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 384,
            "end": 393
          },
          "optional": false,
          "computed": false,
          "start": 377,
          "end": 393
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "isFinite",
              "start": 394,
              "end": 402
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "Infinity",
                "start": 403,
                "end": 411
              }
            ],
            "optional": false,
            "start": 394,
            "end": 412
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 414,
            "end": 419
          },
          {
            "type": "Literal",
            "value": "isFinite(Infinity) must return false",
            "raw": "'isFinite(Infinity) must return false'",
            "start": 421,
            "end": 459
          }
        ],
        "optional": false,
        "start": 377,
        "end": 460
      },
      "start": 377,
      "end": 461
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 462,
            "end": 468
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 469,
            "end": 478
          },
          "optional": false,
          "computed": false,
          "start": 462,
          "end": 478
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "isNaN",
              "start": 479,
              "end": 484
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "Infinity",
                "start": 485,
                "end": 493
              }
            ],
            "optional": false,
            "start": 479,
            "end": 494
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 496,
            "end": 501
          },
          {
            "type": "Literal",
            "value": "isNaN(Infinity) must return false",
            "raw": "'isNaN(Infinity) must return false'",
            "start": 503,
            "end": 538
          }
        ],
        "optional": false,
        "start": 462,
        "end": 539
      },
      "start": 462,
      "end": 540
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 542,
            "end": 548
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 549,
            "end": 558
          },
          "optional": false,
          "computed": false,
          "start": 542,
          "end": 558
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "Infinity",
            "start": 562,
            "end": 570
          },
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Number",
              "start": 574,
              "end": 580
            },
            "property": {
              "type": "Identifier",
              "name": "POSITIVE_INFINITY",
              "start": 581,
              "end": 598
            },
            "optional": false,
            "computed": false,
            "start": 574,
            "end": 598
          },
          {
            "type": "Literal",
            "value": "The value of Infinity is expected to equal the value of Number.POSITIVE_INFINITY",
            "raw": "'The value of Infinity is expected to equal the value of Number.POSITIVE_INFINITY'",
            "start": 602,
            "end": 684
          }
        ],
        "optional": false,
        "start": 542,
        "end": 686
      },
      "start": 542,
      "end": 687
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 688
}