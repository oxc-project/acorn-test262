{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "ab",
            "start": 513,
            "end": 515
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "ArrayBuffer",
              "start": 522,
              "end": 533
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 42,
                "raw": "42",
                "start": 534,
                "end": 536
              }
            ],
            "start": 518,
            "end": 537
          },
          "start": 513,
          "end": 537
        }
      ],
      "start": 509,
      "end": 538
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 540,
            "end": 546
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 547,
            "end": 553
          },
          "optional": false,
          "computed": false,
          "start": 540,
          "end": 553
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "RangeError",
            "start": 554,
            "end": 564
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "DataView",
                      "start": 585,
                      "end": 593
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "ab",
                        "start": 594,
                        "end": 596
                      },
                      {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 1,
                          "raw": "1",
                          "start": 599,
                          "end": 600
                        },
                        "prefix": true,
                        "start": 598,
                        "end": 600
                      }
                    ],
                    "start": 581,
                    "end": 601
                  },
                  "start": 581,
                  "end": 602
                }
              ],
              "start": 577,
              "end": 604
            },
            "expression": false,
            "start": 566,
            "end": 604
          },
          {
            "type": "Literal",
            "value": "-1",
            "raw": "\"-1\"",
            "start": 606,
            "end": 610
          }
        ],
        "optional": false,
        "start": 540,
        "end": 611
      },
      "start": 540,
      "end": 612
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 614,
            "end": 620
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 621,
            "end": 627
          },
          "optional": false,
          "computed": false,
          "start": 614,
          "end": 627
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "RangeError",
            "start": 628,
            "end": 638
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "DataView",
                      "start": 659,
                      "end": 667
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "ab",
                        "start": 668,
                        "end": 670
                      },
                      {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Identifier",
                          "name": "Infinity",
                          "start": 673,
                          "end": 681
                        },
                        "prefix": true,
                        "start": 672,
                        "end": 681
                      }
                    ],
                    "start": 655,
                    "end": 682
                  },
                  "start": 655,
                  "end": 683
                }
              ],
              "start": 651,
              "end": 685
            },
            "expression": false,
            "start": 640,
            "end": 685
          },
          {
            "type": "Literal",
            "value": "-Infinity",
            "raw": "\"-Infinity\"",
            "start": 687,
            "end": 698
          }
        ],
        "optional": false,
        "start": 614,
        "end": 699
      },
      "start": 614,
      "end": 700
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 701
}