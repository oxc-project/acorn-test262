{
  "type": "Program",
  "start": 0,
  "end": 458,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 339,
      "end": 448,
      "id": {
        "type": "Identifier",
        "start": 348,
        "end": 352,
        "name": "test"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 355,
        "end": 448,
        "body": [
          {
            "type": "IfStatement",
            "start": 372,
            "end": 446,
            "test": {
              "type": "BinaryExpression",
              "start": 376,
              "end": 389,
              "left": {
                "type": "Identifier",
                "start": 376,
                "end": 380,
                "name": "Math"
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "start": 385,
                "end": 389,
                "value": null,
                "raw": "null"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 391,
              "end": 446,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 397,
                  "end": 442,
                  "argument": {
                    "type": "NewExpression",
                    "start": 403,
                    "end": 441,
                    "callee": {
                      "type": "Identifier",
                      "start": 407,
                      "end": 419,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 420,
                        "end": 440,
                        "value": "#27: Math === null",
                        "raw": "\"#27: Math === null\""
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 450,
      "end": 457,
      "expression": {
        "type": "CallExpression",
        "start": 450,
        "end": 456,
        "callee": {
          "type": "Identifier",
          "start": 450,
          "end": 454,
          "name": "test"
        },
        "arguments": [],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}