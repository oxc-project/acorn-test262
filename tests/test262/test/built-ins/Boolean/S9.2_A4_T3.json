{
  "type": "Program",
  "start": 0,
  "end": 1172,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 468,
      "end": 580,
      "expression": {
        "type": "CallExpression",
        "start": 468,
        "end": 579,
        "callee": {
          "type": "MemberExpression",
          "start": 468,
          "end": 484,
          "object": {
            "type": "Identifier",
            "start": 468,
            "end": 474,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 475,
            "end": 484,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 485,
            "end": 518,
            "callee": {
              "type": "Identifier",
              "start": 485,
              "end": 492,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "start": 493,
                "end": 517,
                "object": {
                  "type": "Identifier",
                  "start": 493,
                  "end": 499,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 500,
                  "end": 517,
                  "name": "POSITIVE_INFINITY"
                },
                "optional": false,
                "computed": false
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 520,
            "end": 524,
            "value": true,
            "raw": "true"
          },
          {
            "type": "Literal",
            "start": 526,
            "end": 578,
            "value": "Boolean(Number.POSITIVE_INFINITY) must return true",
            "raw": "'Boolean(Number.POSITIVE_INFINITY) must return true'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 581,
      "end": 693,
      "expression": {
        "type": "CallExpression",
        "start": 581,
        "end": 692,
        "callee": {
          "type": "MemberExpression",
          "start": 581,
          "end": 597,
          "object": {
            "type": "Identifier",
            "start": 581,
            "end": 587,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 588,
            "end": 597,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 598,
            "end": 631,
            "callee": {
              "type": "Identifier",
              "start": 598,
              "end": 605,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "start": 606,
                "end": 630,
                "object": {
                  "type": "Identifier",
                  "start": 606,
                  "end": 612,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 613,
                  "end": 630,
                  "name": "NEGATIVE_INFINITY"
                },
                "optional": false,
                "computed": false
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 633,
            "end": 637,
            "value": true,
            "raw": "true"
          },
          {
            "type": "Literal",
            "start": 639,
            "end": 691,
            "value": "Boolean(Number.NEGATIVE_INFINITY) must return true",
            "raw": "'Boolean(Number.NEGATIVE_INFINITY) must return true'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 694,
      "end": 790,
      "expression": {
        "type": "CallExpression",
        "start": 694,
        "end": 789,
        "callee": {
          "type": "MemberExpression",
          "start": 694,
          "end": 710,
          "object": {
            "type": "Identifier",
            "start": 694,
            "end": 700,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 701,
            "end": 710,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 711,
            "end": 736,
            "callee": {
              "type": "Identifier",
              "start": 711,
              "end": 718,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "start": 719,
                "end": 735,
                "object": {
                  "type": "Identifier",
                  "start": 719,
                  "end": 725,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 726,
                  "end": 735,
                  "name": "MAX_VALUE"
                },
                "optional": false,
                "computed": false
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 738,
            "end": 742,
            "value": true,
            "raw": "true"
          },
          {
            "type": "Literal",
            "start": 744,
            "end": 788,
            "value": "Boolean(Number.MAX_VALUE) must return true",
            "raw": "'Boolean(Number.MAX_VALUE) must return true'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 791,
      "end": 887,
      "expression": {
        "type": "CallExpression",
        "start": 791,
        "end": 886,
        "callee": {
          "type": "MemberExpression",
          "start": 791,
          "end": 807,
          "object": {
            "type": "Identifier",
            "start": 791,
            "end": 797,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 798,
            "end": 807,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 808,
            "end": 833,
            "callee": {
              "type": "Identifier",
              "start": 808,
              "end": 815,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "start": 816,
                "end": 832,
                "object": {
                  "type": "Identifier",
                  "start": 816,
                  "end": 822,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 823,
                  "end": 832,
                  "name": "MIN_VALUE"
                },
                "optional": false,
                "computed": false
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 835,
            "end": 839,
            "value": true,
            "raw": "true"
          },
          {
            "type": "Literal",
            "start": 841,
            "end": 885,
            "value": "Boolean(Number.MIN_VALUE) must return true",
            "raw": "'Boolean(Number.MIN_VALUE) must return true'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 888,
      "end": 956,
      "expression": {
        "type": "CallExpression",
        "start": 888,
        "end": 955,
        "callee": {
          "type": "MemberExpression",
          "start": 888,
          "end": 904,
          "object": {
            "type": "Identifier",
            "start": 888,
            "end": 894,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 895,
            "end": 904,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 905,
            "end": 916,
            "callee": {
              "type": "Identifier",
              "start": 905,
              "end": 912,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 913,
                "end": 915,
                "value": 13,
                "raw": "13"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 918,
            "end": 922,
            "value": true,
            "raw": "true"
          },
          {
            "type": "Literal",
            "start": 924,
            "end": 954,
            "value": "Boolean(13) must return true",
            "raw": "'Boolean(13) must return true'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 957,
      "end": 1027,
      "expression": {
        "type": "CallExpression",
        "start": 957,
        "end": 1026,
        "callee": {
          "type": "MemberExpression",
          "start": 957,
          "end": 973,
          "object": {
            "type": "Identifier",
            "start": 957,
            "end": 963,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 964,
            "end": 973,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 974,
            "end": 986,
            "callee": {
              "type": "Identifier",
              "start": 974,
              "end": 981,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 982,
                "end": 985,
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "start": 983,
                  "end": 985,
                  "value": 13,
                  "raw": "13"
                },
                "prefix": true
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 988,
            "end": 992,
            "value": true,
            "raw": "true"
          },
          {
            "type": "Literal",
            "start": 994,
            "end": 1025,
            "value": "Boolean(-13) must return true",
            "raw": "'Boolean(-13) must return true'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1028,
      "end": 1098,
      "expression": {
        "type": "CallExpression",
        "start": 1028,
        "end": 1097,
        "callee": {
          "type": "MemberExpression",
          "start": 1028,
          "end": 1044,
          "object": {
            "type": "Identifier",
            "start": 1028,
            "end": 1034,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1035,
            "end": 1044,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1045,
            "end": 1057,
            "callee": {
              "type": "Identifier",
              "start": 1045,
              "end": 1052,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1053,
                "end": 1056,
                "value": 1.3,
                "raw": "1.3"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1059,
            "end": 1063,
            "value": true,
            "raw": "true"
          },
          {
            "type": "Literal",
            "start": 1065,
            "end": 1096,
            "value": "Boolean(1.3) must return true",
            "raw": "'Boolean(1.3) must return true'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1099,
      "end": 1171,
      "expression": {
        "type": "CallExpression",
        "start": 1099,
        "end": 1170,
        "callee": {
          "type": "MemberExpression",
          "start": 1099,
          "end": 1115,
          "object": {
            "type": "Identifier",
            "start": 1099,
            "end": 1105,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1106,
            "end": 1115,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1116,
            "end": 1129,
            "callee": {
              "type": "Identifier",
              "start": 1116,
              "end": 1123,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 1124,
                "end": 1128,
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "start": 1125,
                  "end": 1128,
                  "value": 1.3,
                  "raw": "1.3"
                },
                "prefix": true
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1131,
            "end": 1135,
            "value": true,
            "raw": "true"
          },
          {
            "type": "Literal",
            "start": 1137,
            "end": 1169,
            "value": "Boolean(-1.3) must return true",
            "raw": "'Boolean(-1.3) must return true'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}