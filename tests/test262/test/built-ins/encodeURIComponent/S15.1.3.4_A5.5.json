{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "ThisExpression",
              "start": 322,
              "end": 326
            },
            "property": {
              "type": "Identifier",
              "name": "propertyIsEnumerable",
              "start": 327,
              "end": 347
            },
            "optional": false,
            "computed": false,
            "start": 322,
            "end": 347
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "encodeURIComponent",
              "raw": "'encodeURIComponent'",
              "start": 348,
              "end": 368
            }
          ],
          "optional": false,
          "start": 322,
          "end": 369
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 374,
          "end": 379
        },
        "start": 322,
        "end": 379
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 395,
                "end": 407
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: this.propertyIsEnumerable('encodeURIComponent') === false. Actual: ",
                    "raw": "'#1: this.propertyIsEnumerable(\\'encodeURIComponent\\') === false. Actual: '",
                    "start": 408,
                    "end": 483
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "ThisExpression",
                          "start": 487,
                          "end": 491
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "propertyIsEnumerable",
                          "start": 492,
                          "end": 512
                        },
                        "optional": false,
                        "computed": false,
                        "start": 487,
                        "end": 512
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "encodeURIComponent",
                          "raw": "'encodeURIComponent'",
                          "start": 513,
                          "end": 533
                        }
                      ],
                      "optional": false,
                      "start": 487,
                      "end": 534
                    },
                    "start": 486,
                    "end": 535
                  },
                  "start": 408,
                  "end": 535
                }
              ],
              "start": 391,
              "end": 536
            },
            "start": 385,
            "end": 537
          }
        ],
        "start": 381,
        "end": 539
      },
      "alternate": null,
      "start": 318,
      "end": 539
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 555,
            "end": 561
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 564,
            "end": 568
          },
          "start": 555,
          "end": 568
        }
      ],
      "start": 551,
      "end": 569
    },
    {
      "type": "ForInStatement",
      "left": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "p",
              "start": 579,
              "end": 580
            },
            "init": null,
            "start": 579,
            "end": 580
          }
        ],
        "start": 575,
        "end": 580
      },
      "right": {
        "type": "ThisExpression",
        "start": 584,
        "end": 588
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "p",
                "start": 598,
                "end": 599
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "value": "encodeURIComponent",
                "raw": "\"encodeURIComponent\"",
                "start": 604,
                "end": 624
              },
              "start": 598,
              "end": 624
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "result",
                      "start": 632,
                      "end": 638
                    },
                    "right": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 641,
                      "end": 646
                    },
                    "start": 632,
                    "end": 646
                  },
                  "start": 632,
                  "end": 647
                }
              ],
              "start": 626,
              "end": 651
            },
            "alternate": null,
            "start": 594,
            "end": 651
          }
        ],
        "start": 590,
        "end": 653
      },
      "start": 570,
      "end": 653
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 659,
          "end": 665
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 670,
          "end": 674
        },
        "start": 659,
        "end": 674
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 690,
                "end": 702
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: result = true; for (p in this) { if (p === \"encodeURIComponent\") result = false; }  result === true;",
                  "raw": "'#2: result = true; for (p in this) { if (p === \"encodeURIComponent\") result = false; }  result === true;'",
                  "start": 703,
                  "end": 809
                }
              ],
              "start": 686,
              "end": 810
            },
            "start": 680,
            "end": 811
          }
        ],
        "start": 676,
        "end": 813
      },
      "alternate": null,
      "start": 655,
      "end": 813
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 814
}