{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "s1",
            "start": 530,
            "end": 532
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Set",
              "start": 539,
              "end": 542
            },
            "arguments": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 544,
                    "end": 545
                  },
                  {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 547,
                    "end": 548
                  }
                ],
                "start": 543,
                "end": 549
              }
            ],
            "start": 535,
            "end": 550
          },
          "start": 530,
          "end": 550
        }
      ],
      "start": 524,
      "end": 551
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "s2",
            "start": 558,
            "end": 560
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "size",
                  "start": 567,
                  "end": 571
                },
                "value": {
                  "type": "Identifier",
                  "name": "undefined",
                  "start": 573,
                  "end": 582
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 567,
                "end": 582
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "has",
                  "start": 586,
                  "end": 589
                },
                "value": {
                  "type": "ArrowFunctionExpression",
                  "expression": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [],
                    "start": 597,
                    "end": 599
                  },
                  "id": null,
                  "generator": false,
                  "start": 591,
                  "end": 599
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 586,
                "end": 599
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "keys",
                  "start": 603,
                  "end": 607
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": {
                    "type": "Identifier",
                    "name": "keys",
                    "start": 619,
                    "end": 623
                  },
                  "generator": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "YieldExpression",
                          "delegate": false,
                          "argument": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 638,
                            "end": 639
                          },
                          "start": 632,
                          "end": 639
                        },
                        "start": 632,
                        "end": 640
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "YieldExpression",
                          "delegate": false,
                          "argument": {
                            "type": "Literal",
                            "value": 3,
                            "raw": "3",
                            "start": 651,
                            "end": 652
                          },
                          "start": 645,
                          "end": 652
                        },
                        "start": 645,
                        "end": 653
                      }
                    ],
                    "start": 626,
                    "end": 657
                  },
                  "expression": false,
                  "start": 609,
                  "end": 657
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 603,
                "end": 657
              }
            ],
            "start": 563,
            "end": 660
          },
          "start": 558,
          "end": 660
        }
      ],
      "start": 552,
      "end": 661
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 662,
            "end": 668
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 669,
            "end": 675
          },
          "optional": false,
          "computed": false,
          "start": 662,
          "end": 675
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 679,
            "end": 688
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "s1",
                        "start": 710,
                        "end": 712
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "isSupersetOf",
                        "start": 713,
                        "end": 725
                      },
                      "optional": false,
                      "computed": false,
                      "start": 710,
                      "end": 725
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "s2",
                        "start": 726,
                        "end": 728
                      }
                    ],
                    "optional": false,
                    "start": 710,
                    "end": 729
                  },
                  "start": 710,
                  "end": 730
                }
              ],
              "start": 704,
              "end": 734
            },
            "expression": false,
            "start": 692,
            "end": 734
          },
          {
            "type": "Literal",
            "value": "GetSetRecord throws an error when size is undefined",
            "raw": "\"GetSetRecord throws an error when size is undefined\"",
            "start": 738,
            "end": 791
          }
        ],
        "optional": false,
        "start": 662,
        "end": 793
      },
      "start": 662,
      "end": 794
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "s2",
            "start": 796,
            "end": 798
          },
          "property": {
            "type": "Identifier",
            "name": "size",
            "start": 799,
            "end": 803
          },
          "optional": false,
          "computed": false,
          "start": 796,
          "end": 803
        },
        "right": {
          "type": "Identifier",
          "name": "NaN",
          "start": 806,
          "end": 809
        },
        "start": 796,
        "end": 809
      },
      "start": 796,
      "end": 810
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 811,
            "end": 817
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 818,
            "end": 824
          },
          "optional": false,
          "computed": false,
          "start": 811,
          "end": 824
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 828,
            "end": 837
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "s1",
                        "start": 859,
                        "end": 861
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "isSupersetOf",
                        "start": 862,
                        "end": 874
                      },
                      "optional": false,
                      "computed": false,
                      "start": 859,
                      "end": 874
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "s2",
                        "start": 875,
                        "end": 877
                      }
                    ],
                    "optional": false,
                    "start": 859,
                    "end": 878
                  },
                  "start": 859,
                  "end": 879
                }
              ],
              "start": 853,
              "end": 883
            },
            "expression": false,
            "start": 841,
            "end": 883
          },
          {
            "type": "Literal",
            "value": "GetSetRecord throws an error when size is NaN",
            "raw": "\"GetSetRecord throws an error when size is NaN\"",
            "start": 887,
            "end": 934
          }
        ],
        "optional": false,
        "start": 811,
        "end": 936
      },
      "start": 811,
      "end": 937
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "coercionCalls",
            "start": 943,
            "end": 956
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 959,
            "end": 960
          },
          "start": 943,
          "end": 960
        }
      ],
      "start": 939,
      "end": 961
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "s2",
            "start": 962,
            "end": 964
          },
          "property": {
            "type": "Identifier",
            "name": "size",
            "start": 965,
            "end": 969
          },
          "optional": false,
          "computed": false,
          "start": 962,
          "end": 969
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "kind": "init",
              "key": {
                "type": "Identifier",
                "name": "valueOf",
                "start": 976,
                "end": 983
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UpdateExpression",
                        "operator": "++",
                        "prefix": true,
                        "argument": {
                          "type": "Identifier",
                          "name": "coercionCalls",
                          "start": 1004,
                          "end": 1017
                        },
                        "start": 1002,
                        "end": 1017
                      },
                      "start": 1002,
                      "end": 1018
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1030,
                        "end": 1033
                      },
                      "start": 1023,
                      "end": 1034
                    }
                  ],
                  "start": 996,
                  "end": 1038
                },
                "expression": false,
                "start": 985,
                "end": 1038
              },
              "method": false,
              "shorthand": false,
              "computed": false,
              "start": 976,
              "end": 1038
            }
          ],
          "start": 972,
          "end": 1041
        },
        "start": 962,
        "end": 1041
      },
      "start": 962,
      "end": 1042
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1043,
            "end": 1049
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1050,
            "end": 1056
          },
          "optional": false,
          "computed": false,
          "start": 1043,
          "end": 1056
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1060,
            "end": 1069
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "s1",
                        "start": 1091,
                        "end": 1093
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "isSupersetOf",
                        "start": 1094,
                        "end": 1106
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1091,
                      "end": 1106
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "s2",
                        "start": 1107,
                        "end": 1109
                      }
                    ],
                    "optional": false,
                    "start": 1091,
                    "end": 1110
                  },
                  "start": 1091,
                  "end": 1111
                }
              ],
              "start": 1085,
              "end": 1115
            },
            "expression": false,
            "start": 1073,
            "end": 1115
          },
          {
            "type": "Literal",
            "value": "GetSetRecord throws an error when size coerces to NaN",
            "raw": "\"GetSetRecord throws an error when size coerces to NaN\"",
            "start": 1119,
            "end": 1174
          }
        ],
        "optional": false,
        "start": 1043,
        "end": 1176
      },
      "start": 1043,
      "end": 1177
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1178,
            "end": 1184
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1185,
            "end": 1194
          },
          "optional": false,
          "computed": false,
          "start": 1178,
          "end": 1194
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "coercionCalls",
            "start": 1195,
            "end": 1208
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1210,
            "end": 1211
          },
          {
            "type": "Literal",
            "value": "GetSetRecord coerces size",
            "raw": "\"GetSetRecord coerces size\"",
            "start": 1213,
            "end": 1240
          }
        ],
        "optional": false,
        "start": 1178,
        "end": 1241
      },
      "start": 1178,
      "end": 1242
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "s2",
            "start": 1244,
            "end": 1246
          },
          "property": {
            "type": "Identifier",
            "name": "size",
            "start": 1247,
            "end": 1251
          },
          "optional": false,
          "computed": false,
          "start": 1244,
          "end": 1251
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "0n",
          "bigint": "0",
          "start": 1254,
          "end": 1256
        },
        "start": 1244,
        "end": 1256
      },
      "start": 1244,
      "end": 1257
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1258,
            "end": 1264
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1265,
            "end": 1271
          },
          "optional": false,
          "computed": false,
          "start": 1258,
          "end": 1271
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1275,
            "end": 1284
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "s1",
                        "start": 1306,
                        "end": 1308
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "isSupersetOf",
                        "start": 1309,
                        "end": 1321
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1306,
                      "end": 1321
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "s2",
                        "start": 1322,
                        "end": 1324
                      }
                    ],
                    "optional": false,
                    "start": 1306,
                    "end": 1325
                  },
                  "start": 1306,
                  "end": 1326
                }
              ],
              "start": 1300,
              "end": 1330
            },
            "expression": false,
            "start": 1288,
            "end": 1330
          },
          {
            "type": "Literal",
            "value": "GetSetRecord throws an error when size is a BigInt",
            "raw": "\"GetSetRecord throws an error when size is a BigInt\"",
            "start": 1334,
            "end": 1386
          }
        ],
        "optional": false,
        "start": 1258,
        "end": 1388
      },
      "start": 1258,
      "end": 1389
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "s2",
            "start": 1391,
            "end": 1393
          },
          "property": {
            "type": "Identifier",
            "name": "size",
            "start": 1394,
            "end": 1398
          },
          "optional": false,
          "computed": false,
          "start": 1391,
          "end": 1398
        },
        "right": {
          "type": "Literal",
          "value": "string",
          "raw": "\"string\"",
          "start": 1401,
          "end": 1409
        },
        "start": 1391,
        "end": 1409
      },
      "start": 1391,
      "end": 1410
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1411,
            "end": 1417
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1418,
            "end": 1424
          },
          "optional": false,
          "computed": false,
          "start": 1411,
          "end": 1424
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1428,
            "end": 1437
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "s1",
                        "start": 1459,
                        "end": 1461
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "isSupersetOf",
                        "start": 1462,
                        "end": 1474
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1459,
                      "end": 1474
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "s2",
                        "start": 1475,
                        "end": 1477
                      }
                    ],
                    "optional": false,
                    "start": 1459,
                    "end": 1478
                  },
                  "start": 1459,
                  "end": 1479
                }
              ],
              "start": 1453,
              "end": 1483
            },
            "expression": false,
            "start": 1441,
            "end": 1483
          },
          {
            "type": "Literal",
            "value": "GetSetRecord throws an error when size is a non-numeric string",
            "raw": "\"GetSetRecord throws an error when size is a non-numeric string\"",
            "start": 1487,
            "end": 1551
          }
        ],
        "optional": false,
        "start": 1411,
        "end": 1553
      },
      "start": 1411,
      "end": 1554
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1555
}