{
  "type": "Program",
  "start": 0,
  "end": 889,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 479,
      "end": 506,
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 485,
          "end": 505,
          "id": {
            "type": "Identifier",
            "start": 485,
            "end": 487,
            "name": "s1"
          },
          "init": {
            "type": "NewExpression",
            "start": 490,
            "end": 505,
            "callee": {
              "type": "Identifier",
              "start": 494,
              "end": 497,
              "name": "Set"
            },
            "arguments": [
              {
                "type": "ArrayExpression",
                "start": 498,
                "end": 504,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 499,
                    "end": 500,
                    "value": 1,
                    "raw": "1"
                  },
                  {
                    "type": "Literal",
                    "start": 502,
                    "end": 503,
                    "value": 2,
                    "raw": "2"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 507,
      "end": 701,
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 513,
          "end": 700,
          "id": {
            "type": "Identifier",
            "start": 513,
            "end": 515,
            "name": "s2"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 518,
            "end": 700,
            "properties": [
              {
                "type": "Property",
                "start": 522,
                "end": 529,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 522,
                  "end": 526,
                  "name": "size"
                },
                "value": {
                  "type": "Literal",
                  "start": 528,
                  "end": 529,
                  "value": 2,
                  "raw": "2"
                },
                "method": false,
                "shorthand": false,
                "computed": false
              },
              {
                "type": "Property",
                "start": 533,
                "end": 639,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 533,
                  "end": 536,
                  "name": "has"
                },
                "value": {
                  "type": "ArrowFunctionExpression",
                  "start": 538,
                  "end": 639,
                  "expression": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 544,
                    "end": 639,
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "start": 550,
                        "end": 635,
                        "argument": {
                          "type": "NewExpression",
                          "start": 556,
                          "end": 634,
                          "callee": {
                            "type": "Identifier",
                            "start": 560,
                            "end": 572,
                            "name": "Test262Error"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 573,
                              "end": 633,
                              "value": "Set.prototype.union should not invoke .has on its argument",
                              "raw": "\"Set.prototype.union should not invoke .has on its argument\""
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": null,
                  "generator": false
                },
                "method": false,
                "shorthand": false,
                "computed": false
              },
              {
                "type": "Property",
                "start": 643,
                "end": 697,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 643,
                  "end": 647,
                  "name": "keys"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 649,
                  "end": 697,
                  "id": {
                    "type": "Identifier",
                    "start": 659,
                    "end": 663,
                    "name": "keys"
                  },
                  "generator": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 666,
                    "end": 697,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 672,
                        "end": 680,
                        "expression": {
                          "type": "YieldExpression",
                          "start": 672,
                          "end": 679,
                          "delegate": false,
                          "argument": {
                            "type": "Literal",
                            "start": 678,
                            "end": 679,
                            "value": 2,
                            "raw": "2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 685,
                        "end": 693,
                        "expression": {
                          "type": "YieldExpression",
                          "start": 685,
                          "end": 692,
                          "delegate": false,
                          "argument": {
                            "type": "Literal",
                            "start": 691,
                            "end": 692,
                            "value": 3,
                            "raw": "3"
                          }
                        }
                      }
                    ]
                  },
                  "expression": false
                },
                "method": false,
                "shorthand": false,
                "computed": false
              }
            ]
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 702,
      "end": 729,
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 708,
          "end": 728,
          "id": {
            "type": "Identifier",
            "start": 708,
            "end": 716,
            "name": "expected"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 719,
            "end": 728,
            "elements": [
              {
                "type": "Literal",
                "start": 720,
                "end": 721,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 723,
                "end": 724,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 726,
                "end": 727,
                "value": 3,
                "raw": "3"
              }
            ]
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 730,
      "end": 760,
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 736,
          "end": 759,
          "id": {
            "type": "Identifier",
            "start": 736,
            "end": 744,
            "name": "combined"
          },
          "init": {
            "type": "CallExpression",
            "start": 747,
            "end": 759,
            "callee": {
              "type": "MemberExpression",
              "start": 747,
              "end": 755,
              "object": {
                "type": "Identifier",
                "start": 747,
                "end": 749,
                "name": "s1"
              },
              "property": {
                "type": "Identifier",
                "start": 750,
                "end": 755,
                "name": "union"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 756,
                "end": 758,
                "name": "s2"
              }
            ],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 762,
      "end": 807,
      "expression": {
        "type": "CallExpression",
        "start": 762,
        "end": 806,
        "callee": {
          "type": "MemberExpression",
          "start": 762,
          "end": 781,
          "object": {
            "type": "Identifier",
            "start": 762,
            "end": 768,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 769,
            "end": 781,
            "name": "compareArray"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "ArrayExpression",
            "start": 782,
            "end": 795,
            "elements": [
              {
                "type": "SpreadElement",
                "start": 783,
                "end": 794,
                "argument": {
                  "type": "Identifier",
                  "start": 786,
                  "end": 794,
                  "name": "combined"
                }
              }
            ]
          },
          {
            "type": "Identifier",
            "start": 797,
            "end": 805,
            "name": "expected"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 808,
      "end": 888,
      "expression": {
        "type": "CallExpression",
        "start": 808,
        "end": 887,
        "callee": {
          "type": "MemberExpression",
          "start": 808,
          "end": 824,
          "object": {
            "type": "Identifier",
            "start": 808,
            "end": 814,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 815,
            "end": 824,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 825,
            "end": 848,
            "left": {
              "type": "Identifier",
              "start": 825,
              "end": 833,
              "name": "combined"
            },
            "operator": "instanceof",
            "right": {
              "type": "Identifier",
              "start": 845,
              "end": 848,
              "name": "Set"
            }
          },
          {
            "type": "Literal",
            "start": 850,
            "end": 854,
            "value": true,
            "raw": "true"
          },
          {
            "type": "Literal",
            "start": 856,
            "end": 886,
            "value": "The returned object is a Set",
            "raw": "\"The returned object is a Set\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}