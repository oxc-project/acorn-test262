{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "s1",
            "start": 521,
            "end": 523
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Set",
              "start": 530,
              "end": 533
            },
            "arguments": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 535,
                    "end": 536
                  },
                  {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 538,
                    "end": 539
                  }
                ],
                "start": 534,
                "end": 540
              }
            ],
            "start": 526,
            "end": 541
          },
          "start": 521,
          "end": 541
        }
      ],
      "start": 515,
      "end": 542
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "s2",
            "start": 549,
            "end": 551
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "ClassExpression",
              "decorators": [],
              "id": null,
              "superClass": null,
              "body": {
                "type": "ClassBody",
                "body": [
                  {
                    "type": "MethodDefinition",
                    "decorators": [],
                    "key": {
                      "type": "Identifier",
                      "name": "size",
                      "start": 572,
                      "end": 576
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": 2,
                              "raw": "2",
                              "start": 592,
                              "end": 593
                            },
                            "start": 585,
                            "end": 594
                          }
                        ],
                        "start": 579,
                        "end": 598
                      },
                      "expression": false,
                      "start": 576,
                      "end": 598
                    },
                    "kind": "get",
                    "computed": false,
                    "static": false,
                    "start": 568,
                    "end": 598
                  },
                  {
                    "type": "MethodDefinition",
                    "decorators": [],
                    "key": {
                      "type": "Identifier",
                      "name": "has",
                      "start": 601,
                      "end": 604
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "v",
                          "start": 605,
                          "end": 606
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "Identifier",
                                "name": "v",
                                "start": 618,
                                "end": 619
                              },
                              "operator": "===",
                              "right": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "1",
                                "start": 624,
                                "end": 625
                              },
                              "start": 618,
                              "end": 625
                            },
                            "consequent": {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Literal",
                                "value": false,
                                "raw": "false",
                                "start": 634,
                                "end": 639
                              },
                              "start": 627,
                              "end": 640
                            },
                            "alternate": null,
                            "start": 614,
                            "end": 640
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "Identifier",
                                "name": "v",
                                "start": 649,
                                "end": 650
                              },
                              "operator": "===",
                              "right": {
                                "type": "Literal",
                                "value": 2,
                                "raw": "2",
                                "start": 655,
                                "end": 656
                              },
                              "start": 649,
                              "end": 656
                            },
                            "consequent": {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Literal",
                                "value": true,
                                "raw": "true",
                                "start": 665,
                                "end": 669
                              },
                              "start": 658,
                              "end": 670
                            },
                            "alternate": null,
                            "start": 645,
                            "end": 670
                          },
                          {
                            "type": "ThrowStatement",
                            "argument": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Test262Error",
                                "start": 685,
                                "end": 697
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "Set.prototype.difference should only call its argument's has method with contents of this",
                                  "raw": "\"Set.prototype.difference should only call its argument's has method with contents of this\"",
                                  "start": 698,
                                  "end": 789
                                }
                              ],
                              "start": 681,
                              "end": 790
                            },
                            "start": 675,
                            "end": 791
                          }
                        ],
                        "start": 608,
                        "end": 795
                      },
                      "expression": false,
                      "start": 604,
                      "end": 795
                    },
                    "kind": "method",
                    "computed": false,
                    "static": false,
                    "start": 601,
                    "end": 795
                  },
                  {
                    "type": "MethodDefinition",
                    "decorators": [],
                    "key": {
                      "type": "Identifier",
                      "name": "keys",
                      "start": 800,
                      "end": 804
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": true,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ThrowStatement",
                            "argument": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Test262Error",
                                "start": 823,
                                "end": 835
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "Set.prototype.difference should not call its argument's keys iterator when this.size ≤ arg.size",
                                  "raw": "\"Set.prototype.difference should not call its argument's keys iterator when this.size ≤ arg.size\"",
                                  "start": 836,
                                  "end": 933
                                }
                              ],
                              "start": 819,
                              "end": 934
                            },
                            "start": 813,
                            "end": 935
                          }
                        ],
                        "start": 807,
                        "end": 939
                      },
                      "expression": false,
                      "start": 804,
                      "end": 939
                    },
                    "kind": "method",
                    "computed": false,
                    "static": false,
                    "start": 798,
                    "end": 939
                  }
                ],
                "start": 564,
                "end": 941
              },
              "start": 558,
              "end": 941
            },
            "arguments": [],
            "start": 554,
            "end": 941
          },
          "start": 549,
          "end": 941
        }
      ],
      "start": 543,
      "end": 942
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "expected",
            "start": 949,
            "end": 957
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 961,
                "end": 962
              }
            ],
            "start": 960,
            "end": 963
          },
          "start": 949,
          "end": 963
        }
      ],
      "start": 943,
      "end": 964
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "combined",
            "start": 971,
            "end": 979
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "s1",
                "start": 982,
                "end": 984
              },
              "property": {
                "type": "Identifier",
                "name": "difference",
                "start": 985,
                "end": 995
              },
              "optional": false,
              "computed": false,
              "start": 982,
              "end": 995
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "s2",
                "start": 996,
                "end": 998
              }
            ],
            "optional": false,
            "start": 982,
            "end": 999
          },
          "start": 971,
          "end": 999
        }
      ],
      "start": 965,
      "end": 1000
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1002,
            "end": 1008
          },
          "property": {
            "type": "Identifier",
            "name": "compareArray",
            "start": 1009,
            "end": 1021
          },
          "optional": false,
          "computed": false,
          "start": 1002,
          "end": 1021
        },
        "arguments": [
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "SpreadElement",
                "argument": {
                  "type": "Identifier",
                  "name": "combined",
                  "start": 1026,
                  "end": 1034
                },
                "start": 1023,
                "end": 1034
              }
            ],
            "start": 1022,
            "end": 1035
          },
          {
            "type": "Identifier",
            "name": "expected",
            "start": 1037,
            "end": 1045
          }
        ],
        "optional": false,
        "start": 1002,
        "end": 1046
      },
      "start": 1002,
      "end": 1047
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1048,
            "end": 1054
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1055,
            "end": 1064
          },
          "optional": false,
          "computed": false,
          "start": 1048,
          "end": 1064
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Identifier",
              "name": "combined",
              "start": 1065,
              "end": 1073
            },
            "operator": "instanceof",
            "right": {
              "type": "Identifier",
              "name": "Set",
              "start": 1085,
              "end": 1088
            },
            "start": 1065,
            "end": 1088
          },
          {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 1090,
            "end": 1094
          },
          {
            "type": "Literal",
            "value": "The returned object is a Set",
            "raw": "\"The returned object is a Set\"",
            "start": 1096,
            "end": 1126
          }
        ],
        "optional": false,
        "start": 1048,
        "end": 1127
      },
      "start": 1048,
      "end": 1128
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1129
}