{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "s1",
            "start": 530,
            "end": 532
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Set",
              "start": 539,
              "end": 542
            },
            "arguments": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 544,
                    "end": 545
                  },
                  {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 547,
                    "end": 548
                  }
                ],
                "start": 543,
                "end": 549
              }
            ],
            "start": 535,
            "end": 550
          },
          "start": 530,
          "end": 550
        }
      ],
      "start": 524,
      "end": 551
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "s2",
            "start": 558,
            "end": 560
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "size",
                  "start": 567,
                  "end": 571
                },
                "value": {
                  "type": "Identifier",
                  "name": "undefined",
                  "start": 573,
                  "end": 582
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 567,
                "end": 582
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "has",
                  "start": 586,
                  "end": 589
                },
                "value": {
                  "type": "ArrowFunctionExpression",
                  "expression": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [],
                    "start": 597,
                    "end": 599
                  },
                  "id": null,
                  "generator": false,
                  "start": 591,
                  "end": 599
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 586,
                "end": 599
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "keys",
                  "start": 603,
                  "end": 607
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": {
                    "type": "Identifier",
                    "name": "keys",
                    "start": 619,
                    "end": 623
                  },
                  "generator": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "YieldExpression",
                          "delegate": false,
                          "argument": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 638,
                            "end": 639
                          },
                          "start": 632,
                          "end": 639
                        },
                        "start": 632,
                        "end": 640
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "YieldExpression",
                          "delegate": false,
                          "argument": {
                            "type": "Literal",
                            "value": 3,
                            "raw": "3",
                            "start": 651,
                            "end": 652
                          },
                          "start": 645,
                          "end": 652
                        },
                        "start": 645,
                        "end": 653
                      }
                    ],
                    "start": 626,
                    "end": 657
                  },
                  "expression": false,
                  "start": 609,
                  "end": 657
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 603,
                "end": 657
              }
            ],
            "start": 563,
            "end": 660
          },
          "start": 558,
          "end": 660
        }
      ],
      "start": 552,
      "end": 661
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 662,
            "end": 668
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 669,
            "end": 675
          },
          "optional": false,
          "computed": false,
          "start": 662,
          "end": 675
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 679,
            "end": 688
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "s1",
                        "start": 710,
                        "end": 712
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "isDisjointFrom",
                        "start": 713,
                        "end": 727
                      },
                      "optional": false,
                      "computed": false,
                      "start": 710,
                      "end": 727
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "s2",
                        "start": 728,
                        "end": 730
                      }
                    ],
                    "optional": false,
                    "start": 710,
                    "end": 731
                  },
                  "start": 710,
                  "end": 732
                }
              ],
              "start": 704,
              "end": 736
            },
            "expression": false,
            "start": 692,
            "end": 736
          },
          {
            "type": "Literal",
            "value": "GetSetRecord throws an error when size is undefined",
            "raw": "\"GetSetRecord throws an error when size is undefined\"",
            "start": 740,
            "end": 793
          }
        ],
        "optional": false,
        "start": 662,
        "end": 795
      },
      "start": 662,
      "end": 796
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "s2",
            "start": 798,
            "end": 800
          },
          "property": {
            "type": "Identifier",
            "name": "size",
            "start": 801,
            "end": 805
          },
          "optional": false,
          "computed": false,
          "start": 798,
          "end": 805
        },
        "right": {
          "type": "Identifier",
          "name": "NaN",
          "start": 808,
          "end": 811
        },
        "start": 798,
        "end": 811
      },
      "start": 798,
      "end": 812
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 813,
            "end": 819
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 820,
            "end": 826
          },
          "optional": false,
          "computed": false,
          "start": 813,
          "end": 826
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 830,
            "end": 839
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "s1",
                        "start": 861,
                        "end": 863
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "isDisjointFrom",
                        "start": 864,
                        "end": 878
                      },
                      "optional": false,
                      "computed": false,
                      "start": 861,
                      "end": 878
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "s2",
                        "start": 879,
                        "end": 881
                      }
                    ],
                    "optional": false,
                    "start": 861,
                    "end": 882
                  },
                  "start": 861,
                  "end": 883
                }
              ],
              "start": 855,
              "end": 887
            },
            "expression": false,
            "start": 843,
            "end": 887
          },
          {
            "type": "Literal",
            "value": "GetSetRecord throws an error when size is NaN",
            "raw": "\"GetSetRecord throws an error when size is NaN\"",
            "start": 891,
            "end": 938
          }
        ],
        "optional": false,
        "start": 813,
        "end": 940
      },
      "start": 813,
      "end": 941
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "coercionCalls",
            "start": 947,
            "end": 960
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 963,
            "end": 964
          },
          "start": 947,
          "end": 964
        }
      ],
      "start": 943,
      "end": 965
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "s2",
            "start": 966,
            "end": 968
          },
          "property": {
            "type": "Identifier",
            "name": "size",
            "start": 969,
            "end": 973
          },
          "optional": false,
          "computed": false,
          "start": 966,
          "end": 973
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "kind": "init",
              "key": {
                "type": "Identifier",
                "name": "valueOf",
                "start": 980,
                "end": 987
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UpdateExpression",
                        "operator": "++",
                        "prefix": true,
                        "argument": {
                          "type": "Identifier",
                          "name": "coercionCalls",
                          "start": 1008,
                          "end": 1021
                        },
                        "start": 1006,
                        "end": 1021
                      },
                      "start": 1006,
                      "end": 1022
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1034,
                        "end": 1037
                      },
                      "start": 1027,
                      "end": 1038
                    }
                  ],
                  "start": 1000,
                  "end": 1042
                },
                "expression": false,
                "start": 989,
                "end": 1042
              },
              "method": false,
              "shorthand": false,
              "computed": false,
              "start": 980,
              "end": 1042
            }
          ],
          "start": 976,
          "end": 1045
        },
        "start": 966,
        "end": 1045
      },
      "start": 966,
      "end": 1046
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1047,
            "end": 1053
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1054,
            "end": 1060
          },
          "optional": false,
          "computed": false,
          "start": 1047,
          "end": 1060
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1064,
            "end": 1073
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "s1",
                        "start": 1095,
                        "end": 1097
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "isDisjointFrom",
                        "start": 1098,
                        "end": 1112
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1095,
                      "end": 1112
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "s2",
                        "start": 1113,
                        "end": 1115
                      }
                    ],
                    "optional": false,
                    "start": 1095,
                    "end": 1116
                  },
                  "start": 1095,
                  "end": 1117
                }
              ],
              "start": 1089,
              "end": 1121
            },
            "expression": false,
            "start": 1077,
            "end": 1121
          },
          {
            "type": "Literal",
            "value": "GetSetRecord throws an error when size coerces to NaN",
            "raw": "\"GetSetRecord throws an error when size coerces to NaN\"",
            "start": 1125,
            "end": 1180
          }
        ],
        "optional": false,
        "start": 1047,
        "end": 1182
      },
      "start": 1047,
      "end": 1183
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1184,
            "end": 1190
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1191,
            "end": 1200
          },
          "optional": false,
          "computed": false,
          "start": 1184,
          "end": 1200
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "coercionCalls",
            "start": 1201,
            "end": 1214
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1216,
            "end": 1217
          },
          {
            "type": "Literal",
            "value": "GetSetRecord coerces size",
            "raw": "\"GetSetRecord coerces size\"",
            "start": 1219,
            "end": 1246
          }
        ],
        "optional": false,
        "start": 1184,
        "end": 1247
      },
      "start": 1184,
      "end": 1248
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "s2",
            "start": 1250,
            "end": 1252
          },
          "property": {
            "type": "Identifier",
            "name": "size",
            "start": 1253,
            "end": 1257
          },
          "optional": false,
          "computed": false,
          "start": 1250,
          "end": 1257
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "0n",
          "bigint": "0",
          "start": 1260,
          "end": 1262
        },
        "start": 1250,
        "end": 1262
      },
      "start": 1250,
      "end": 1263
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1264,
            "end": 1270
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1271,
            "end": 1277
          },
          "optional": false,
          "computed": false,
          "start": 1264,
          "end": 1277
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1281,
            "end": 1290
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "s1",
                        "start": 1312,
                        "end": 1314
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "isDisjointFrom",
                        "start": 1315,
                        "end": 1329
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1312,
                      "end": 1329
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "s2",
                        "start": 1330,
                        "end": 1332
                      }
                    ],
                    "optional": false,
                    "start": 1312,
                    "end": 1333
                  },
                  "start": 1312,
                  "end": 1334
                }
              ],
              "start": 1306,
              "end": 1338
            },
            "expression": false,
            "start": 1294,
            "end": 1338
          },
          {
            "type": "Literal",
            "value": "GetSetRecord throws an error when size is a BigInt",
            "raw": "\"GetSetRecord throws an error when size is a BigInt\"",
            "start": 1342,
            "end": 1394
          }
        ],
        "optional": false,
        "start": 1264,
        "end": 1396
      },
      "start": 1264,
      "end": 1397
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "s2",
            "start": 1399,
            "end": 1401
          },
          "property": {
            "type": "Identifier",
            "name": "size",
            "start": 1402,
            "end": 1406
          },
          "optional": false,
          "computed": false,
          "start": 1399,
          "end": 1406
        },
        "right": {
          "type": "Literal",
          "value": "string",
          "raw": "\"string\"",
          "start": 1409,
          "end": 1417
        },
        "start": 1399,
        "end": 1417
      },
      "start": 1399,
      "end": 1418
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1419,
            "end": 1425
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1426,
            "end": 1432
          },
          "optional": false,
          "computed": false,
          "start": 1419,
          "end": 1432
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1436,
            "end": 1445
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "s1",
                        "start": 1467,
                        "end": 1469
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "isDisjointFrom",
                        "start": 1470,
                        "end": 1484
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1467,
                      "end": 1484
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "s2",
                        "start": 1485,
                        "end": 1487
                      }
                    ],
                    "optional": false,
                    "start": 1467,
                    "end": 1488
                  },
                  "start": 1467,
                  "end": 1489
                }
              ],
              "start": 1461,
              "end": 1493
            },
            "expression": false,
            "start": 1449,
            "end": 1493
          },
          {
            "type": "Literal",
            "value": "GetSetRecord throws an error when size is a non-numeric string",
            "raw": "\"GetSetRecord throws an error when size is a non-numeric string\"",
            "start": 1497,
            "end": 1561
          }
        ],
        "optional": false,
        "start": 1419,
        "end": 1563
      },
      "start": 1419,
      "end": 1564
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1565
}