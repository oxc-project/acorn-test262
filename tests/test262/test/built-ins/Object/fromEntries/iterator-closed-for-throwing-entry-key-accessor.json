{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "DummyError",
        "start": 757,
        "end": 767
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [],
        "start": 770,
        "end": 772
      },
      "expression": false,
      "start": 748,
      "end": 772
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "returned",
            "start": 778,
            "end": 786
          },
          "init": {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 789,
            "end": 794
          },
          "start": 778,
          "end": 794
        }
      ],
      "start": 774,
      "end": 795
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterable",
            "start": 800,
            "end": 808
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Symbol",
                    "start": 816,
                    "end": 822
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "iterator",
                    "start": 823,
                    "end": 831
                  },
                  "optional": false,
                  "computed": false,
                  "start": 816,
                  "end": 831
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "kind": "var",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "advanced",
                              "start": 855,
                              "end": 863
                            },
                            "init": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "start": 866,
                              "end": 871
                            },
                            "start": 855,
                            "end": 871
                          }
                        ],
                        "start": 851,
                        "end": 872
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "kind": "init",
                              "key": {
                                "type": "Identifier",
                                "name": "next",
                                "start": 892,
                                "end": 896
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "generator": false,
                                "async": false,
                                "params": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "Identifier",
                                        "name": "advanced",
                                        "start": 923,
                                        "end": 931
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ThrowStatement",
                                            "argument": {
                                              "type": "NewExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "Test262Error",
                                                "start": 955,
                                                "end": 967
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "should only advance once",
                                                  "raw": "'should only advance once'",
                                                  "start": 968,
                                                  "end": 994
                                                }
                                              ],
                                              "start": 951,
                                              "end": 995
                                            },
                                            "start": 945,
                                            "end": 996
                                          }
                                        ],
                                        "start": 933,
                                        "end": 1006
                                      },
                                      "alternate": null,
                                      "start": 919,
                                      "end": 1006
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "advanced",
                                          "start": 1015,
                                          "end": 1023
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": true,
                                          "raw": "true",
                                          "start": 1026,
                                          "end": 1030
                                        },
                                        "start": 1015,
                                        "end": 1030
                                      },
                                      "start": 1015,
                                      "end": 1031
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "kind": "init",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "done",
                                              "start": 1059,
                                              "end": 1063
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": false,
                                              "raw": "false",
                                              "start": 1065,
                                              "end": 1070
                                            },
                                            "method": false,
                                            "shorthand": false,
                                            "computed": false,
                                            "start": 1059,
                                            "end": 1070
                                          },
                                          {
                                            "type": "Property",
                                            "kind": "init",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "value",
                                              "start": 1082,
                                              "end": 1087
                                            },
                                            "value": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "kind": "get",
                                                  "key": {
                                                    "type": "Literal",
                                                    "value": "0",
                                                    "raw": "'0'",
                                                    "start": 1107,
                                                    "end": 1110
                                                  },
                                                  "value": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "generator": false,
                                                    "async": false,
                                                    "params": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ThrowStatement",
                                                          "argument": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "DummyError",
                                                              "start": 1139,
                                                              "end": 1149
                                                            },
                                                            "arguments": [],
                                                            "start": 1135,
                                                            "end": 1151
                                                          },
                                                          "start": 1129,
                                                          "end": 1152
                                                        }
                                                      ],
                                                      "start": 1113,
                                                      "end": 1166
                                                    },
                                                    "expression": false,
                                                    "start": 1110,
                                                    "end": 1166
                                                  },
                                                  "method": false,
                                                  "shorthand": false,
                                                  "computed": false,
                                                  "start": 1103,
                                                  "end": 1166
                                                }
                                              ],
                                              "start": 1089,
                                              "end": 1179
                                            },
                                            "method": false,
                                            "shorthand": false,
                                            "computed": false,
                                            "start": 1082,
                                            "end": 1179
                                          }
                                        ],
                                        "start": 1047,
                                        "end": 1190
                                      },
                                      "start": 1040,
                                      "end": 1191
                                    }
                                  ],
                                  "start": 909,
                                  "end": 1199
                                },
                                "expression": false,
                                "start": 898,
                                "end": 1199
                              },
                              "method": false,
                              "shorthand": false,
                              "computed": false,
                              "start": 892,
                              "end": 1199
                            },
                            {
                              "type": "Property",
                              "kind": "init",
                              "key": {
                                "type": "Identifier",
                                "name": "return",
                                "start": 1207,
                                "end": 1213
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "generator": false,
                                "async": false,
                                "params": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "Identifier",
                                        "name": "returned",
                                        "start": 1240,
                                        "end": 1248
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ThrowStatement",
                                            "argument": {
                                              "type": "NewExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "Test262Error",
                                                "start": 1272,
                                                "end": 1284
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "should only return once",
                                                  "raw": "'should only return once'",
                                                  "start": 1285,
                                                  "end": 1310
                                                }
                                              ],
                                              "start": 1268,
                                              "end": 1311
                                            },
                                            "start": 1262,
                                            "end": 1312
                                          }
                                        ],
                                        "start": 1250,
                                        "end": 1322
                                      },
                                      "alternate": null,
                                      "start": 1236,
                                      "end": 1322
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "returned",
                                          "start": 1331,
                                          "end": 1339
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": true,
                                          "raw": "true",
                                          "start": 1342,
                                          "end": 1346
                                        },
                                        "start": 1331,
                                        "end": 1346
                                      },
                                      "start": 1331,
                                      "end": 1347
                                    }
                                  ],
                                  "start": 1226,
                                  "end": 1355
                                },
                                "expression": false,
                                "start": 1215,
                                "end": 1355
                              },
                              "method": false,
                              "shorthand": false,
                              "computed": false,
                              "start": 1207,
                              "end": 1355
                            }
                          ],
                          "start": 884,
                          "end": 1362
                        },
                        "start": 877,
                        "end": 1363
                      }
                    ],
                    "start": 845,
                    "end": 1367
                  },
                  "expression": false,
                  "start": 834,
                  "end": 1367
                },
                "method": false,
                "shorthand": false,
                "computed": true,
                "start": 815,
                "end": 1367
              }
            ],
            "start": 811,
            "end": 1370
          },
          "start": 800,
          "end": 1370
        }
      ],
      "start": 796,
      "end": 1371
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1373,
            "end": 1379
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1380,
            "end": 1386
          },
          "optional": false,
          "computed": false,
          "start": 1373,
          "end": 1386
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "DummyError",
            "start": 1387,
            "end": 1397
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 1414,
                        "end": 1420
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fromEntries",
                        "start": 1421,
                        "end": 1432
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1414,
                      "end": 1432
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "iterable",
                        "start": 1433,
                        "end": 1441
                      }
                    ],
                    "optional": false,
                    "start": 1414,
                    "end": 1442
                  },
                  "start": 1414,
                  "end": 1443
                }
              ],
              "start": 1410,
              "end": 1445
            },
            "expression": false,
            "start": 1399,
            "end": 1445
          }
        ],
        "optional": false,
        "start": 1373,
        "end": 1446
      },
      "start": 1373,
      "end": 1447
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 1449,
          "end": 1455
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "returned",
            "start": 1456,
            "end": 1464
          },
          {
            "type": "Literal",
            "value": "iterator should be closed when entry property access throws",
            "raw": "'iterator should be closed when entry property access throws'",
            "start": 1466,
            "end": 1527
          }
        ],
        "optional": false,
        "start": 1449,
        "end": 1528
      },
      "start": 1449,
      "end": 1529
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1530
}