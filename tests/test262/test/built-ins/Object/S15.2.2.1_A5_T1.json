{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "num",
            "start": 349,
            "end": 352
          },
          "init": {
            "type": "Literal",
            "value": 1,
            "raw": "1.0",
            "start": 355,
            "end": 358
          },
          "start": 349,
          "end": 358
        }
      ],
      "start": 345,
      "end": 359
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 361,
            "end": 367
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 368,
            "end": 377
          },
          "optional": false,
          "computed": false,
          "start": 361,
          "end": 377
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "num",
              "start": 385,
              "end": 388
            },
            "prefix": true,
            "start": 378,
            "end": 388
          },
          {
            "type": "Literal",
            "value": "number",
            "raw": "'number'",
            "start": 390,
            "end": 398
          },
          {
            "type": "Literal",
            "value": "The value of `typeof num` is expected to be \"number\"",
            "raw": "'The value of `typeof num` is expected to be \"number\"'",
            "start": 400,
            "end": 454
          }
        ],
        "optional": false,
        "start": 361,
        "end": 455
      },
      "start": 361,
      "end": 456
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "n_obj",
            "start": 462,
            "end": 467
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Object",
              "start": 474,
              "end": 480
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "num",
                "start": 481,
                "end": 484
              }
            ],
            "start": 470,
            "end": 485
          },
          "start": 462,
          "end": 485
        }
      ],
      "start": 458,
      "end": 486
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 488,
            "end": 494
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 495,
            "end": 504
          },
          "optional": false,
          "computed": false,
          "start": 488,
          "end": 504
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "n_obj",
              "start": 505,
              "end": 510
            },
            "property": {
              "type": "Identifier",
              "name": "constructor",
              "start": 511,
              "end": 522
            },
            "optional": false,
            "computed": false,
            "start": 505,
            "end": 522
          },
          {
            "type": "Identifier",
            "name": "Number",
            "start": 524,
            "end": 530
          },
          {
            "type": "Literal",
            "value": "The value of n_obj.constructor is expected to equal the value of Number",
            "raw": "'The value of n_obj.constructor is expected to equal the value of Number'",
            "start": 532,
            "end": 605
          }
        ],
        "optional": false,
        "start": 488,
        "end": 606
      },
      "start": 488,
      "end": 607
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 608,
            "end": 614
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 615,
            "end": 624
          },
          "optional": false,
          "computed": false,
          "start": 608,
          "end": 624
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "n_obj",
              "start": 632,
              "end": 637
            },
            "prefix": true,
            "start": 625,
            "end": 637
          },
          {
            "type": "Literal",
            "value": "object",
            "raw": "'object'",
            "start": 639,
            "end": 647
          },
          {
            "type": "Literal",
            "value": "The value of `typeof n_obj` is expected to be \"object\"",
            "raw": "'The value of `typeof n_obj` is expected to be \"object\"'",
            "start": 649,
            "end": 705
          }
        ],
        "optional": false,
        "start": 608,
        "end": 706
      },
      "start": 608,
      "end": 707
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 708,
          "end": 714
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Identifier",
              "name": "n_obj",
              "start": 715,
              "end": 720
            },
            "operator": "==",
            "right": {
              "type": "Identifier",
              "name": "num",
              "start": 724,
              "end": 727
            },
            "start": 715,
            "end": 727
          },
          {
            "type": "Literal",
            "value": "The result of evaluating (n_obj == num) is expected to be true",
            "raw": "'The result of evaluating (n_obj == num) is expected to be true'",
            "start": 729,
            "end": 793
          }
        ],
        "optional": false,
        "start": 708,
        "end": 794
      },
      "start": 708,
      "end": 795
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 796,
            "end": 802
          },
          "property": {
            "type": "Identifier",
            "name": "notSameValue",
            "start": 803,
            "end": 815
          },
          "optional": false,
          "computed": false,
          "start": 796,
          "end": 815
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "n_obj",
            "start": 816,
            "end": 821
          },
          {
            "type": "Identifier",
            "name": "num",
            "start": 823,
            "end": 826
          },
          {
            "type": "Literal",
            "value": "The value of n_obj is expected to not equal the value of `num`",
            "raw": "'The value of n_obj is expected to not equal the value of `num`'",
            "start": 828,
            "end": 892
          }
        ],
        "optional": false,
        "start": 796,
        "end": 893
      },
      "start": 796,
      "end": 894
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 895
}