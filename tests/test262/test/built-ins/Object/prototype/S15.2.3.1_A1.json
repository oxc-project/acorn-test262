{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "obj",
            "start": 329,
            "end": 332
          },
          "init": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 335,
              "end": 341
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 342,
              "end": 351
            },
            "optional": false,
            "computed": false,
            "start": 335,
            "end": 351
          },
          "start": 329,
          "end": 351
        }
      ],
      "start": 325,
      "end": 352
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "verifyNotWritable",
          "start": 353,
          "end": 370
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "Object",
            "start": 371,
            "end": 377
          },
          {
            "type": "Literal",
            "value": "prototype",
            "raw": "\"prototype\"",
            "start": 379,
            "end": 390
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 392,
            "end": 396
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "shifted",
                    "raw": "\"shifted\"",
                    "start": 420,
                    "end": 429
                  },
                  "start": 413,
                  "end": 430
                }
              ],
              "start": 409,
              "end": 432
            },
            "expression": false,
            "start": 398,
            "end": 432
          }
        ],
        "optional": false,
        "start": 353,
        "end": 433
      },
      "start": 353,
      "end": 434
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 436,
            "end": 442
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 443,
            "end": 452
          },
          "optional": false,
          "computed": false,
          "start": 436,
          "end": 452
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Object",
              "start": 453,
              "end": 459
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 460,
              "end": 469
            },
            "optional": false,
            "computed": false,
            "start": 453,
            "end": 469
          },
          {
            "type": "Identifier",
            "name": "obj",
            "start": 471,
            "end": 474
          },
          {
            "type": "Literal",
            "value": "The value of Object.prototype is expected to equal the value of obj",
            "raw": "'The value of Object.prototype is expected to equal the value of obj'",
            "start": 476,
            "end": 545
          }
        ],
        "optional": false,
        "start": 436,
        "end": 546
      },
      "start": 436,
      "end": 547
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Object",
                  "start": 557,
                  "end": 563
                },
                "property": {
                  "type": "Identifier",
                  "name": "prototype",
                  "start": 564,
                  "end": 573
                },
                "optional": false,
                "computed": false,
                "start": 557,
                "end": 573
              },
              "arguments": [],
              "optional": false,
              "start": 557,
              "end": 575
            },
            "start": 557,
            "end": 576
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 589,
                "end": 601
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: the Object.prototype property has the attributes ReadOnly",
                  "raw": "'#2: the Object.prototype property has the attributes ReadOnly'",
                  "start": 602,
                  "end": 665
                }
              ],
              "start": 585,
              "end": 666
            },
            "start": 579,
            "end": 667
          }
        ],
        "start": 553,
        "end": 669
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 677,
          "end": 678
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 688,
                  "end": 689
                },
                "operator": "instanceof",
                "right": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 701,
                  "end": 713
                },
                "start": 688,
                "end": 713
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 727,
                      "end": 728
                    },
                    "start": 721,
                    "end": 729
                  }
                ],
                "start": 715,
                "end": 733
              },
              "alternate": null,
              "start": 684,
              "end": 733
            }
          ],
          "start": 680,
          "end": 735
        },
        "start": 670,
        "end": 735
      },
      "finalizer": null,
      "start": 549,
      "end": 735
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 782
}