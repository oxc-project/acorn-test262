{
  "type": "Program",
  "start": 0,
  "end": 490,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 322,
      "end": 351,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 326,
          "end": 350,
          "id": {
            "type": "Identifier",
            "start": 326,
            "end": 329,
            "name": "obj"
          },
          "init": {
            "type": "NewExpression",
            "start": 332,
            "end": 350,
            "callee": {
              "type": "Identifier",
              "start": 336,
              "end": 343,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 344,
                "end": 349,
                "value": false,
                "raw": "false"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 353,
      "end": 366,
      "expression": {
        "type": "AssignmentExpression",
        "start": 353,
        "end": 365,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 353,
          "end": 360,
          "object": {
            "type": "Identifier",
            "start": 353,
            "end": 356,
            "name": "obj"
          },
          "property": {
            "type": "Identifier",
            "start": 357,
            "end": 360,
            "name": "foo"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 363,
          "end": 365,
          "value": 10,
          "raw": "10"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 368,
      "end": 401,
      "expression": {
        "type": "CallExpression",
        "start": 368,
        "end": 400,
        "callee": {
          "type": "Identifier",
          "start": 368,
          "end": 374,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 375,
            "end": 399,
            "callee": {
              "type": "MemberExpression",
              "start": 375,
              "end": 394,
              "object": {
                "type": "Identifier",
                "start": 375,
                "end": 381,
                "name": "Object"
              },
              "property": {
                "type": "Identifier",
                "start": 382,
                "end": 394,
                "name": "isExtensible"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 395,
                "end": 398,
                "name": "obj"
              }
            ],
            "optional": false
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 402,
      "end": 419,
      "expression": {
        "type": "CallExpression",
        "start": 402,
        "end": 418,
        "callee": {
          "type": "MemberExpression",
          "start": 402,
          "end": 413,
          "object": {
            "type": "Identifier",
            "start": 402,
            "end": 408,
            "name": "Object"
          },
          "property": {
            "type": "Identifier",
            "start": 409,
            "end": 413,
            "name": "seal"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 414,
            "end": 417,
            "name": "obj"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 421,
      "end": 489,
      "expression": {
        "type": "CallExpression",
        "start": 421,
        "end": 488,
        "callee": {
          "type": "Identifier",
          "start": 421,
          "end": 435,
          "name": "verifyProperty"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 436,
            "end": 439,
            "name": "obj"
          },
          {
            "type": "Literal",
            "start": 441,
            "end": 446,
            "value": "foo",
            "raw": "\"foo\""
          },
          {
            "type": "ObjectExpression",
            "start": 448,
            "end": 487,
            "properties": [
              {
                "type": "Property",
                "start": 452,
                "end": 461,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 452,
                  "end": 457,
                  "name": "value"
                },
                "value": {
                  "type": "Literal",
                  "start": 459,
                  "end": 461,
                  "value": 10,
                  "raw": "10"
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "start": 465,
                "end": 484,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 465,
                  "end": 477,
                  "name": "configurable"
                },
                "value": {
                  "type": "Literal",
                  "start": 479,
                  "end": 484,
                  "value": false,
                  "raw": "false"
                },
                "kind": "init"
              }
            ]
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}