{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "obj",
            "start": 326,
            "end": 329
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 336,
              "end": 343
            },
            "arguments": [
              {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 344,
                "end": 349
              }
            ],
            "start": 332,
            "end": 350
          },
          "start": 326,
          "end": 350
        }
      ],
      "start": 322,
      "end": 351
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "obj",
            "start": 353,
            "end": 356
          },
          "property": {
            "type": "Identifier",
            "name": "foo",
            "start": 357,
            "end": 360
          },
          "optional": false,
          "computed": false,
          "start": 353,
          "end": 360
        },
        "right": {
          "type": "Literal",
          "value": 10,
          "raw": "10",
          "start": 363,
          "end": 365
        },
        "start": 353,
        "end": 365
      },
      "start": 353,
      "end": 366
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 368,
          "end": 374
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Object",
                "start": 375,
                "end": 381
              },
              "property": {
                "type": "Identifier",
                "name": "isExtensible",
                "start": 382,
                "end": 394
              },
              "optional": false,
              "computed": false,
              "start": 375,
              "end": 394
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "obj",
                "start": 395,
                "end": 398
              }
            ],
            "optional": false,
            "start": 375,
            "end": 399
          }
        ],
        "optional": false,
        "start": 368,
        "end": 400
      },
      "start": 368,
      "end": 401
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Object",
            "start": 402,
            "end": 408
          },
          "property": {
            "type": "Identifier",
            "name": "seal",
            "start": 409,
            "end": 413
          },
          "optional": false,
          "computed": false,
          "start": 402,
          "end": 413
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "obj",
            "start": 414,
            "end": 417
          }
        ],
        "optional": false,
        "start": 402,
        "end": 418
      },
      "start": 402,
      "end": 419
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "verifyProperty",
          "start": 421,
          "end": 435
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "obj",
            "start": 436,
            "end": 439
          },
          {
            "type": "Literal",
            "value": "foo",
            "raw": "\"foo\"",
            "start": 441,
            "end": 446
          },
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "value",
                  "start": 452,
                  "end": 457
                },
                "value": {
                  "type": "Literal",
                  "value": 10,
                  "raw": "10",
                  "start": 459,
                  "end": 461
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 452,
                "end": 461
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "configurable",
                  "start": 465,
                  "end": 477
                },
                "value": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 479,
                  "end": 484
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 465,
                "end": 484
              }
            ],
            "start": 448,
            "end": 487
          }
        ],
        "optional": false,
        "start": 421,
        "end": 488
      },
      "start": 421,
      "end": 489
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 490
}