{
  "type": "Program",
  "start": 0,
  "end": 739,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 390,
      "end": 404,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 394,
          "end": 403,
          "id": {
            "type": "Identifier",
            "start": 394,
            "end": 397,
            "name": "num"
          },
          "init": {
            "type": "Identifier",
            "start": 400,
            "end": 403,
            "name": "NaN"
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 406,
      "end": 501,
      "expression": {
        "type": "CallExpression",
        "start": 406,
        "end": 500,
        "callee": {
          "type": "MemberExpression",
          "start": 406,
          "end": 422,
          "object": {
            "type": "Identifier",
            "start": 406,
            "end": 412,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 413,
            "end": 422,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 423,
            "end": 433,
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "start": 430,
              "end": 433,
              "name": "num"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 435,
            "end": 443,
            "value": "number",
            "raw": "'number'"
          },
          {
            "type": "Literal",
            "start": 445,
            "end": 499,
            "value": "The value of `typeof num` is expected to be \"number\"",
            "raw": "'The value of `typeof num` is expected to be \"number\"'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 503,
      "end": 525,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 507,
          "end": 524,
          "id": {
            "type": "Identifier",
            "start": 507,
            "end": 510,
            "name": "obj"
          },
          "init": {
            "type": "CallExpression",
            "start": 513,
            "end": 524,
            "callee": {
              "type": "Identifier",
              "start": 513,
              "end": 519,
              "name": "Object"
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 520,
                "end": 523,
                "name": "num"
              }
            ],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 527,
      "end": 642,
      "expression": {
        "type": "CallExpression",
        "start": 527,
        "end": 641,
        "callee": {
          "type": "MemberExpression",
          "start": 527,
          "end": 543,
          "object": {
            "type": "Identifier",
            "start": 527,
            "end": 533,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 534,
            "end": 543,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 544,
            "end": 559,
            "object": {
              "type": "Identifier",
              "start": 544,
              "end": 547,
              "name": "obj"
            },
            "property": {
              "type": "Identifier",
              "start": 548,
              "end": 559,
              "name": "constructor"
            },
            "optional": false,
            "computed": false
          },
          {
            "type": "Identifier",
            "start": 561,
            "end": 567,
            "name": "Number"
          },
          {
            "type": "Literal",
            "start": 569,
            "end": 640,
            "value": "The value of obj.constructor is expected to equal the value of Number",
            "raw": "'The value of obj.constructor is expected to equal the value of Number'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 643,
      "end": 738,
      "expression": {
        "type": "CallExpression",
        "start": 643,
        "end": 737,
        "callee": {
          "type": "MemberExpression",
          "start": 643,
          "end": 659,
          "object": {
            "type": "Identifier",
            "start": 643,
            "end": 649,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 650,
            "end": 659,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 660,
            "end": 670,
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "start": 667,
              "end": 670,
              "name": "obj"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 672,
            "end": 680,
            "value": "object",
            "raw": "\"object\""
          },
          {
            "type": "Literal",
            "start": 682,
            "end": 736,
            "value": "The value of `typeof obj` is expected to be \"object\"",
            "raw": "'The value of `typeof obj` is expected to be \"object\"'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}