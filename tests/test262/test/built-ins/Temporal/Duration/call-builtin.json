{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 282,
            "end": 288
          },
          "property": {
            "type": "Identifier",
            "name": "isFinite",
            "start": 289,
            "end": 297
          },
          "optional": false,
          "computed": false,
          "start": 282,
          "end": 297
        },
        "right": {
          "type": "ArrowFunctionExpression",
          "expression": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 318,
                    "end": 330
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "should not call Number.isFinite",
                      "raw": "\"should not call Number.isFinite\"",
                      "start": 331,
                      "end": 364
                    }
                  ],
                  "start": 314,
                  "end": 365
                },
                "start": 308,
                "end": 365
              }
            ],
            "start": 306,
            "end": 367
          },
          "id": null,
          "generator": false,
          "start": 300,
          "end": 367
        },
        "start": 282,
        "end": 367
      },
      "start": 282,
      "end": 368
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Math",
            "start": 369,
            "end": 373
          },
          "property": {
            "type": "Identifier",
            "name": "sign",
            "start": 374,
            "end": 378
          },
          "optional": false,
          "computed": false,
          "start": 369,
          "end": 378
        },
        "right": {
          "type": "ArrowFunctionExpression",
          "expression": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 399,
                    "end": 411
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "should not call Math.sign",
                      "raw": "\"should not call Math.sign\"",
                      "start": 412,
                      "end": 439
                    }
                  ],
                  "start": 395,
                  "end": 440
                },
                "start": 389,
                "end": 440
              }
            ],
            "start": 387,
            "end": 442
          },
          "id": null,
          "generator": false,
          "start": 381,
          "end": 442
        },
        "start": 369,
        "end": 442
      },
      "start": 369,
      "end": 443
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "duration",
            "start": 451,
            "end": 459
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Temporal",
                "start": 466,
                "end": 474
              },
              "property": {
                "type": "Identifier",
                "name": "Duration",
                "start": 475,
                "end": 483
              },
              "optional": false,
              "computed": false,
              "start": 466,
              "end": 483
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 484,
                "end": 485
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 487,
                "end": 488
              }
            ],
            "start": 462,
            "end": 489
          },
          "start": 451,
          "end": 489
        }
      ],
      "start": 445,
      "end": 490
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "TemporalHelpers",
            "start": 491,
            "end": 506
          },
          "property": {
            "type": "Identifier",
            "name": "assertDuration",
            "start": 507,
            "end": 521
          },
          "optional": false,
          "computed": false,
          "start": 491,
          "end": 521
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "duration",
            "start": 522,
            "end": 530
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 532,
            "end": 533
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 535,
            "end": 536
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 538,
            "end": 539
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 541,
            "end": 542
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 544,
            "end": 545
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 547,
            "end": 548
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 550,
            "end": 551
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 553,
            "end": 554
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 556,
            "end": 557
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 559,
            "end": 560
          }
        ],
        "optional": false,
        "start": 491,
        "end": 561
      },
      "start": 491,
      "end": 562
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 563
}