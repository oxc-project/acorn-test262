{
  "type": "Program",
  "start": 0,
  "end": 983,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 278,
      "end": 445,
      "expression": {
        "type": "CallExpression",
        "start": 278,
        "end": 444,
        "callee": {
          "type": "MemberExpression",
          "start": 278,
          "end": 291,
          "object": {
            "type": "Identifier",
            "start": 278,
            "end": 284,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 285,
            "end": 291,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 295,
            "end": 305,
            "name": "RangeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 309,
            "end": 366,
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 315,
              "end": 366,
              "callee": {
                "type": "MemberExpression",
                "start": 315,
                "end": 342,
                "object": {
                  "type": "MemberExpression",
                  "start": 315,
                  "end": 337,
                  "object": {
                    "type": "Identifier",
                    "start": 315,
                    "end": 323,
                    "name": "Temporal"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 324,
                    "end": 337,
                    "name": "PlainDateTime"
                  },
                  "optional": false,
                  "computed": false
                },
                "property": {
                  "type": "Identifier",
                  "start": 338,
                  "end": 342,
                  "name": "from"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 343,
                  "end": 361,
                  "value": "2020-13-34T24:60",
                  "raw": "\"2020-13-34T24:60\""
                },
                {
                  "type": "ObjectExpression",
                  "start": 363,
                  "end": 365,
                  "properties": []
                }
              ],
              "optional": false
            },
            "id": null,
            "generator": false
          },
          {
            "type": "Literal",
            "start": 370,
            "end": 442,
            "value": "constrain has no effect on invalid ISO string (empty options argument)",
            "raw": "\"constrain has no effect on invalid ISO string (empty options argument)\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 447,
      "end": 636,
      "expression": {
        "type": "CallExpression",
        "start": 447,
        "end": 635,
        "callee": {
          "type": "MemberExpression",
          "start": 447,
          "end": 460,
          "object": {
            "type": "Identifier",
            "start": 447,
            "end": 453,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 454,
            "end": 460,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 464,
            "end": 474,
            "name": "RangeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 478,
            "end": 541,
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 484,
              "end": 541,
              "callee": {
                "type": "MemberExpression",
                "start": 484,
                "end": 511,
                "object": {
                  "type": "MemberExpression",
                  "start": 484,
                  "end": 506,
                  "object": {
                    "type": "Identifier",
                    "start": 484,
                    "end": 492,
                    "name": "Temporal"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 493,
                    "end": 506,
                    "name": "PlainDateTime"
                  },
                  "optional": false,
                  "computed": false
                },
                "property": {
                  "type": "Identifier",
                  "start": 507,
                  "end": 511,
                  "name": "from"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 512,
                  "end": 530,
                  "value": "2020-13-34T24:60",
                  "raw": "\"2020-13-34T24:60\""
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 532,
                  "end": 540,
                  "expression": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 538,
                    "end": 540,
                    "body": []
                  },
                  "id": null,
                  "generator": false
                }
              ],
              "optional": false
            },
            "id": null,
            "generator": false
          },
          {
            "type": "Literal",
            "start": 545,
            "end": 633,
            "value": "constrain has no effect on invalid ISO string (nullary empty object function argument)",
            "raw": "\"constrain has no effect on invalid ISO string (nullary empty object function argument)\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 638,
      "end": 812,
      "expression": {
        "type": "CallExpression",
        "start": 638,
        "end": 811,
        "callee": {
          "type": "MemberExpression",
          "start": 638,
          "end": 651,
          "object": {
            "type": "Identifier",
            "start": 638,
            "end": 644,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 645,
            "end": 651,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 655,
            "end": 665,
            "name": "RangeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 669,
            "end": 747,
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 675,
              "end": 747,
              "callee": {
                "type": "MemberExpression",
                "start": 675,
                "end": 702,
                "object": {
                  "type": "MemberExpression",
                  "start": 675,
                  "end": 697,
                  "object": {
                    "type": "Identifier",
                    "start": 675,
                    "end": 683,
                    "name": "Temporal"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 684,
                    "end": 697,
                    "name": "PlainDateTime"
                  },
                  "optional": false,
                  "computed": false
                },
                "property": {
                  "type": "Identifier",
                  "start": 698,
                  "end": 702,
                  "name": "from"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 703,
                  "end": 721,
                  "value": "2020-13-34T24:60",
                  "raw": "\"2020-13-34T24:60\""
                },
                {
                  "type": "ObjectExpression",
                  "start": 723,
                  "end": 746,
                  "properties": [
                    {
                      "type": "Property",
                      "start": 724,
                      "end": 745,
                      "kind": "init",
                      "key": {
                        "type": "Identifier",
                        "start": 724,
                        "end": 732,
                        "name": "overflow"
                      },
                      "value": {
                        "type": "Literal",
                        "start": 734,
                        "end": 745,
                        "value": "constrain",
                        "raw": "\"constrain\""
                      },
                      "method": false,
                      "shorthand": false,
                      "computed": false
                    }
                  ]
                }
              ],
              "optional": false
            },
            "id": null,
            "generator": false
          },
          {
            "type": "Literal",
            "start": 751,
            "end": 809,
            "value": "overflow = constrain has no effect on invalid ISO string",
            "raw": "\"overflow = constrain has no effect on invalid ISO string\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 814,
      "end": 982,
      "expression": {
        "type": "CallExpression",
        "start": 814,
        "end": 981,
        "callee": {
          "type": "MemberExpression",
          "start": 814,
          "end": 827,
          "object": {
            "type": "Identifier",
            "start": 814,
            "end": 820,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 821,
            "end": 827,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 831,
            "end": 841,
            "name": "RangeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 845,
            "end": 920,
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 851,
              "end": 920,
              "callee": {
                "type": "MemberExpression",
                "start": 851,
                "end": 878,
                "object": {
                  "type": "MemberExpression",
                  "start": 851,
                  "end": 873,
                  "object": {
                    "type": "Identifier",
                    "start": 851,
                    "end": 859,
                    "name": "Temporal"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 860,
                    "end": 873,
                    "name": "PlainDateTime"
                  },
                  "optional": false,
                  "computed": false
                },
                "property": {
                  "type": "Identifier",
                  "start": 874,
                  "end": 878,
                  "name": "from"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 879,
                  "end": 897,
                  "value": "2020-13-34T24:60",
                  "raw": "\"2020-13-34T24:60\""
                },
                {
                  "type": "ObjectExpression",
                  "start": 899,
                  "end": 919,
                  "properties": [
                    {
                      "type": "Property",
                      "start": 900,
                      "end": 918,
                      "kind": "init",
                      "key": {
                        "type": "Identifier",
                        "start": 900,
                        "end": 908,
                        "name": "overflow"
                      },
                      "value": {
                        "type": "Literal",
                        "start": 910,
                        "end": 918,
                        "value": "reject",
                        "raw": "\"reject\""
                      },
                      "method": false,
                      "shorthand": false,
                      "computed": false
                    }
                  ]
                }
              ],
              "optional": false
            },
            "id": null,
            "generator": false
          },
          {
            "type": "Literal",
            "start": 924,
            "end": 979,
            "value": "overflow = reject has no effect on invalid ISO string",
            "raw": "\"overflow = reject has no effect on invalid ISO string\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}