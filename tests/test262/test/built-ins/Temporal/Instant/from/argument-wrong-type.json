{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "primitiveTests",
            "start": 324,
            "end": 338
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Identifier",
                    "name": "undefined",
                    "start": 346,
                    "end": 355
                  },
                  {
                    "type": "Literal",
                    "value": "undefined",
                    "raw": "'undefined'",
                    "start": 357,
                    "end": 368
                  }
                ],
                "start": 345,
                "end": 369
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": null,
                    "raw": "null",
                    "start": 374,
                    "end": 378
                  },
                  {
                    "type": "Literal",
                    "value": "null",
                    "raw": "'null'",
                    "start": 380,
                    "end": 386
                  }
                ],
                "start": 373,
                "end": 387
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 392,
                    "end": 396
                  },
                  {
                    "type": "Literal",
                    "value": "boolean",
                    "raw": "'boolean'",
                    "start": 398,
                    "end": 407
                  }
                ],
                "start": 391,
                "end": 408
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "",
                    "raw": "''",
                    "start": 413,
                    "end": 415
                  },
                  {
                    "type": "Literal",
                    "value": "empty string",
                    "raw": "'empty string'",
                    "start": 417,
                    "end": 431
                  }
                ],
                "start": 412,
                "end": 432
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 437,
                    "end": 438
                  },
                  {
                    "type": "Literal",
                    "value": "number that doesn't convert to a valid ISO string",
                    "raw": "\"number that doesn't convert to a valid ISO string\"",
                    "start": 440,
                    "end": 491
                  }
                ],
                "start": 436,
                "end": 492
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 19761118,
                    "raw": "19761118",
                    "start": 497,
                    "end": 505
                  },
                  {
                    "type": "Literal",
                    "value": "number that would convert to a valid ISO string in other contexts",
                    "raw": "'number that would convert to a valid ISO string in other contexts'",
                    "start": 507,
                    "end": 574
                  }
                ],
                "start": 496,
                "end": 575
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": null,
                    "raw": "1n",
                    "bigint": "1",
                    "start": 580,
                    "end": 582
                  },
                  {
                    "type": "Literal",
                    "value": "bigint",
                    "raw": "'bigint'",
                    "start": 584,
                    "end": 592
                  }
                ],
                "start": 579,
                "end": 593
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "ObjectExpression",
                    "properties": [],
                    "start": 598,
                    "end": 600
                  },
                  {
                    "type": "Literal",
                    "value": "plain object",
                    "raw": "'plain object'",
                    "start": 602,
                    "end": 616
                  }
                ],
                "start": 597,
                "end": 617
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Temporal",
                      "start": 622,
                      "end": 630
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "Instant",
                      "start": 631,
                      "end": 638
                    },
                    "optional": false,
                    "computed": false,
                    "start": 622,
                    "end": 638
                  },
                  {
                    "type": "Literal",
                    "value": "Temporal.Instant, object",
                    "raw": "'Temporal.Instant, object'",
                    "start": 640,
                    "end": 666
                  }
                ],
                "start": 621,
                "end": 667
              }
            ],
            "start": 341,
            "end": 669
          },
          "start": 324,
          "end": 669
        }
      ],
      "start": 318,
      "end": 670
    },
    {
      "type": "ForOfStatement",
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "kind": "const",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "Identifier",
                  "name": "arg",
                  "start": 684,
                  "end": 687
                },
                {
                  "type": "Identifier",
                  "name": "description",
                  "start": 689,
                  "end": 700
                }
              ],
              "start": 683,
              "end": 701
            },
            "init": null,
            "start": 683,
            "end": 701
          }
        ],
        "start": 677,
        "end": 701
      },
      "right": {
        "type": "Identifier",
        "name": "primitiveTests",
        "start": 705,
        "end": 719
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 725,
                  "end": 731
                },
                "property": {
                  "type": "Identifier",
                  "name": "throws",
                  "start": 732,
                  "end": 738
                },
                "optional": false,
                "computed": false,
                "start": 725,
                "end": 738
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "LogicalExpression",
                    "left": {
                      "type": "LogicalExpression",
                      "left": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "Identifier",
                            "name": "arg",
                            "start": 751,
                            "end": 754
                          },
                          "prefix": true,
                          "start": 744,
                          "end": 754
                        },
                        "operator": "===",
                        "right": {
                          "type": "Literal",
                          "value": "string",
                          "raw": "'string'",
                          "start": 759,
                          "end": 767
                        },
                        "start": 744,
                        "end": 767
                      },
                      "operator": "||",
                      "right": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "LogicalExpression",
                          "left": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "UnaryExpression",
                              "operator": "typeof",
                              "argument": {
                                "type": "Identifier",
                                "name": "arg",
                                "start": 779,
                                "end": 782
                              },
                              "prefix": true,
                              "start": 772,
                              "end": 782
                            },
                            "operator": "===",
                            "right": {
                              "type": "Literal",
                              "value": "object",
                              "raw": "'object'",
                              "start": 787,
                              "end": 795
                            },
                            "start": 772,
                            "end": 795
                          },
                          "operator": "&&",
                          "right": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "Identifier",
                              "name": "arg",
                              "start": 799,
                              "end": 802
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "value": null,
                              "raw": "null",
                              "start": 807,
                              "end": 811
                            },
                            "start": 799,
                            "end": 811
                          },
                          "start": 772,
                          "end": 811
                        },
                        "start": 771,
                        "end": 812
                      },
                      "start": 744,
                      "end": 812
                    },
                    "operator": "||",
                    "right": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "typeof",
                        "argument": {
                          "type": "Identifier",
                          "name": "arg",
                          "start": 823,
                          "end": 826
                        },
                        "prefix": true,
                        "start": 816,
                        "end": 826
                      },
                      "operator": "===",
                      "right": {
                        "type": "Literal",
                        "value": "function",
                        "raw": "'function'",
                        "start": 831,
                        "end": 841
                      },
                      "start": 816,
                      "end": 841
                    },
                    "start": 744,
                    "end": 841
                  },
                  "consequent": {
                    "type": "Identifier",
                    "name": "RangeError",
                    "start": 850,
                    "end": 860
                  },
                  "alternate": {
                    "type": "Identifier",
                    "name": "TypeError",
                    "start": 869,
                    "end": 878
                  },
                  "start": 744,
                  "end": 878
                },
                {
                  "type": "ArrowFunctionExpression",
                  "expression": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Temporal",
                          "start": 890,
                          "end": 898
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Instant",
                          "start": 899,
                          "end": 906
                        },
                        "optional": false,
                        "computed": false,
                        "start": 890,
                        "end": 906
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "from",
                        "start": 907,
                        "end": 911
                      },
                      "optional": false,
                      "computed": false,
                      "start": 890,
                      "end": 911
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "arg",
                        "start": 912,
                        "end": 915
                      }
                    ],
                    "optional": false,
                    "start": 890,
                    "end": 916
                  },
                  "id": null,
                  "generator": false,
                  "start": 884,
                  "end": 916
                },
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false,
                      "start": 923,
                      "end": 923
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": " does not convert to a valid ISO string",
                        "cooked": " does not convert to a valid ISO string"
                      },
                      "tail": true,
                      "start": 937,
                      "end": 976
                    }
                  ],
                  "expressions": [
                    {
                      "type": "Identifier",
                      "name": "description",
                      "start": 925,
                      "end": 936
                    }
                  ],
                  "start": 922,
                  "end": 977
                }
              ],
              "optional": false,
              "start": 725,
              "end": 981
            },
            "start": 725,
            "end": 982
          }
        ],
        "start": 721,
        "end": 984
      },
      "start": 672,
      "end": 984
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "typeErrorTests",
            "start": 992,
            "end": 1006
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 1014,
                      "end": 1020
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1014,
                    "end": 1022
                  },
                  {
                    "type": "Literal",
                    "value": "symbol",
                    "raw": "'symbol'",
                    "start": 1024,
                    "end": 1032
                  }
                ],
                "start": 1013,
                "end": 1033
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Temporal",
                        "start": 1038,
                        "end": 1046
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Instant",
                        "start": 1047,
                        "end": 1054
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1038,
                      "end": 1054
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "prototype",
                      "start": 1055,
                      "end": 1064
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1038,
                    "end": 1064
                  },
                  {
                    "type": "Literal",
                    "value": "Temporal.Instant.prototype, object",
                    "raw": "'Temporal.Instant.prototype, object'",
                    "start": 1066,
                    "end": 1102
                  }
                ],
                "start": 1037,
                "end": 1103
              }
            ],
            "start": 1009,
            "end": 1140
          },
          "start": 992,
          "end": 1140
        }
      ],
      "start": 986,
      "end": 1141
    },
    {
      "type": "ForOfStatement",
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "kind": "const",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "Identifier",
                  "name": "arg",
                  "start": 1155,
                  "end": 1158
                },
                {
                  "type": "Identifier",
                  "name": "description",
                  "start": 1160,
                  "end": 1171
                }
              ],
              "start": 1154,
              "end": 1172
            },
            "init": null,
            "start": 1154,
            "end": 1172
          }
        ],
        "start": 1148,
        "end": 1172
      },
      "right": {
        "type": "Identifier",
        "name": "typeErrorTests",
        "start": 1176,
        "end": 1190
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 1196,
                  "end": 1202
                },
                "property": {
                  "type": "Identifier",
                  "name": "throws",
                  "start": 1203,
                  "end": 1209
                },
                "optional": false,
                "computed": false,
                "start": 1196,
                "end": 1209
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "TypeError",
                  "start": 1210,
                  "end": 1219
                },
                {
                  "type": "ArrowFunctionExpression",
                  "expression": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Temporal",
                          "start": 1227,
                          "end": 1235
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Instant",
                          "start": 1236,
                          "end": 1243
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1227,
                        "end": 1243
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "from",
                        "start": 1244,
                        "end": 1248
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1227,
                      "end": 1248
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "arg",
                        "start": 1249,
                        "end": 1252
                      }
                    ],
                    "optional": false,
                    "start": 1227,
                    "end": 1253
                  },
                  "id": null,
                  "generator": false,
                  "start": 1221,
                  "end": 1253
                },
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false,
                      "start": 1256,
                      "end": 1256
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": " does not convert to a string",
                        "cooked": " does not convert to a string"
                      },
                      "tail": true,
                      "start": 1270,
                      "end": 1299
                    }
                  ],
                  "expressions": [
                    {
                      "type": "Identifier",
                      "name": "description",
                      "start": 1258,
                      "end": 1269
                    }
                  ],
                  "start": 1255,
                  "end": 1300
                }
              ],
              "optional": false,
              "start": 1196,
              "end": 1301
            },
            "start": 1196,
            "end": 1302
          }
        ],
        "start": 1192,
        "end": 1304
      },
      "start": 1143,
      "end": 1304
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1305
}