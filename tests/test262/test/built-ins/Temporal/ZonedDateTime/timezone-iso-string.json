{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 289,
            "end": 295
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 296,
            "end": 302
          },
          "optional": false,
          "computed": false,
          "start": 289,
          "end": 302
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "RangeError",
            "start": 306,
            "end": 316
          },
          {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "NewExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Temporal",
                  "start": 330,
                  "end": 338
                },
                "property": {
                  "type": "Identifier",
                  "name": "ZonedDateTime",
                  "start": 339,
                  "end": 352
                },
                "optional": false,
                "computed": false,
                "start": 330,
                "end": 352
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "0n",
                  "bigint": "0",
                  "start": 353,
                  "end": 355
                },
                {
                  "type": "Literal",
                  "value": "1997-12-04T12:34[+01:00]",
                  "raw": "\"1997-12-04T12:34[+01:00]\"",
                  "start": 357,
                  "end": 383
                },
                {
                  "type": "Literal",
                  "value": "iso8601",
                  "raw": "\"iso8601\"",
                  "start": 385,
                  "end": 394
                }
              ],
              "start": 326,
              "end": 395
            },
            "id": null,
            "generator": false,
            "start": 320,
            "end": 395
          },
          {
            "type": "Literal",
            "value": "An ISO string is not a valid calendar ID for constructor parameter",
            "raw": "\"An ISO string is not a valid calendar ID for constructor parameter\"",
            "start": 399,
            "end": 467
          }
        ],
        "optional": false,
        "start": 289,
        "end": 469
      },
      "start": 289,
      "end": 470
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 471
}