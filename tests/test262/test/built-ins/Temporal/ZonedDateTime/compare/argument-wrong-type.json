{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "timeZone",
            "start": 355,
            "end": 363
          },
          "init": {
            "type": "Literal",
            "value": "UTC",
            "raw": "\"UTC\"",
            "start": 366,
            "end": 371
          },
          "start": 355,
          "end": 371
        }
      ],
      "start": 349,
      "end": 372
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "other",
            "start": 379,
            "end": 384
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Temporal",
                "start": 391,
                "end": 399
              },
              "property": {
                "type": "Identifier",
                "name": "ZonedDateTime",
                "start": 400,
                "end": 413
              },
              "optional": false,
              "computed": false,
              "start": 391,
              "end": 413
            },
            "arguments": [
              {
                "type": "Literal",
                "value": null,
                "raw": "0n",
                "bigint": "0",
                "start": 414,
                "end": 416
              },
              {
                "type": "Identifier",
                "name": "timeZone",
                "start": 418,
                "end": 426
              }
            ],
            "start": 387,
            "end": 427
          },
          "start": 379,
          "end": 427
        }
      ],
      "start": 373,
      "end": 428
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "primitiveTests",
            "start": 436,
            "end": 450
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Identifier",
                    "name": "undefined",
                    "start": 458,
                    "end": 467
                  },
                  {
                    "type": "Literal",
                    "value": "undefined",
                    "raw": "\"undefined\"",
                    "start": 469,
                    "end": 480
                  }
                ],
                "start": 457,
                "end": 481
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": null,
                    "raw": "null",
                    "start": 486,
                    "end": 490
                  },
                  {
                    "type": "Literal",
                    "value": "null",
                    "raw": "\"null\"",
                    "start": 492,
                    "end": 498
                  }
                ],
                "start": 485,
                "end": 499
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 504,
                    "end": 508
                  },
                  {
                    "type": "Literal",
                    "value": "boolean",
                    "raw": "\"boolean\"",
                    "start": 510,
                    "end": 519
                  }
                ],
                "start": 503,
                "end": 520
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "",
                    "raw": "\"\"",
                    "start": 525,
                    "end": 527
                  },
                  {
                    "type": "Literal",
                    "value": "empty string",
                    "raw": "\"empty string\"",
                    "start": 529,
                    "end": 543
                  }
                ],
                "start": 524,
                "end": 544
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 549,
                    "end": 550
                  },
                  {
                    "type": "Literal",
                    "value": "number that doesn't convert to a valid ISO string",
                    "raw": "\"number that doesn't convert to a valid ISO string\"",
                    "start": 552,
                    "end": 603
                  }
                ],
                "start": 548,
                "end": 604
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 19761118,
                    "raw": "19761118",
                    "start": 609,
                    "end": 617
                  },
                  {
                    "type": "Literal",
                    "value": "number that would convert to a valid ISO string in other contexts",
                    "raw": "\"number that would convert to a valid ISO string in other contexts\"",
                    "start": 619,
                    "end": 686
                  }
                ],
                "start": 608,
                "end": 687
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": null,
                    "raw": "1n",
                    "bigint": "1",
                    "start": 692,
                    "end": 694
                  },
                  {
                    "type": "Literal",
                    "value": "bigint",
                    "raw": "\"bigint\"",
                    "start": 696,
                    "end": 704
                  }
                ],
                "start": 691,
                "end": 705
              }
            ],
            "start": 453,
            "end": 708
          },
          "start": 436,
          "end": 708
        }
      ],
      "start": 430,
      "end": 709
    },
    {
      "type": "ForOfStatement",
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "kind": "const",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "Identifier",
                  "name": "arg",
                  "start": 723,
                  "end": 726
                },
                {
                  "type": "Identifier",
                  "name": "description",
                  "start": 728,
                  "end": 739
                }
              ],
              "start": 722,
              "end": 740
            },
            "init": null,
            "start": 722,
            "end": 740
          }
        ],
        "start": 716,
        "end": 740
      },
      "right": {
        "type": "Identifier",
        "name": "primitiveTests",
        "start": 744,
        "end": 758
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 764,
                  "end": 770
                },
                "property": {
                  "type": "Identifier",
                  "name": "throws",
                  "start": 771,
                  "end": 777
                },
                "optional": false,
                "computed": false,
                "start": 764,
                "end": 777
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "arg",
                        "start": 790,
                        "end": 793
                      },
                      "prefix": true,
                      "start": 783,
                      "end": 793
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "value": "string",
                      "raw": "'string'",
                      "start": 798,
                      "end": 806
                    },
                    "start": 783,
                    "end": 806
                  },
                  "consequent": {
                    "type": "Identifier",
                    "name": "RangeError",
                    "start": 809,
                    "end": 819
                  },
                  "alternate": {
                    "type": "Identifier",
                    "name": "TypeError",
                    "start": 822,
                    "end": 831
                  },
                  "start": 783,
                  "end": 831
                },
                {
                  "type": "ArrowFunctionExpression",
                  "expression": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Temporal",
                          "start": 843,
                          "end": 851
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ZonedDateTime",
                          "start": 852,
                          "end": 865
                        },
                        "optional": false,
                        "computed": false,
                        "start": 843,
                        "end": 865
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "compare",
                        "start": 866,
                        "end": 873
                      },
                      "optional": false,
                      "computed": false,
                      "start": 843,
                      "end": 873
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "arg",
                        "start": 874,
                        "end": 877
                      },
                      {
                        "type": "Identifier",
                        "name": "other",
                        "start": 879,
                        "end": 884
                      }
                    ],
                    "optional": false,
                    "start": 843,
                    "end": 885
                  },
                  "id": null,
                  "generator": false,
                  "start": 837,
                  "end": 885
                },
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false,
                      "start": 892,
                      "end": 892
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": " does not convert to a valid ISO string (first argument)",
                        "cooked": " does not convert to a valid ISO string (first argument)"
                      },
                      "tail": true,
                      "start": 906,
                      "end": 962
                    }
                  ],
                  "expressions": [
                    {
                      "type": "Identifier",
                      "name": "description",
                      "start": 894,
                      "end": 905
                    }
                  ],
                  "start": 891,
                  "end": 963
                }
              ],
              "optional": false,
              "start": 764,
              "end": 967
            },
            "start": 764,
            "end": 968
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 971,
                  "end": 977
                },
                "property": {
                  "type": "Identifier",
                  "name": "throws",
                  "start": 978,
                  "end": 984
                },
                "optional": false,
                "computed": false,
                "start": 971,
                "end": 984
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "arg",
                        "start": 997,
                        "end": 1000
                      },
                      "prefix": true,
                      "start": 990,
                      "end": 1000
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "value": "string",
                      "raw": "'string'",
                      "start": 1005,
                      "end": 1013
                    },
                    "start": 990,
                    "end": 1013
                  },
                  "consequent": {
                    "type": "Identifier",
                    "name": "RangeError",
                    "start": 1016,
                    "end": 1026
                  },
                  "alternate": {
                    "type": "Identifier",
                    "name": "TypeError",
                    "start": 1029,
                    "end": 1038
                  },
                  "start": 990,
                  "end": 1038
                },
                {
                  "type": "ArrowFunctionExpression",
                  "expression": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Temporal",
                          "start": 1050,
                          "end": 1058
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ZonedDateTime",
                          "start": 1059,
                          "end": 1072
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1050,
                        "end": 1072
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "compare",
                        "start": 1073,
                        "end": 1080
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1050,
                      "end": 1080
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "other",
                        "start": 1081,
                        "end": 1086
                      },
                      {
                        "type": "Identifier",
                        "name": "arg",
                        "start": 1088,
                        "end": 1091
                      }
                    ],
                    "optional": false,
                    "start": 1050,
                    "end": 1092
                  },
                  "id": null,
                  "generator": false,
                  "start": 1044,
                  "end": 1092
                },
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false,
                      "start": 1099,
                      "end": 1099
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": " does not convert to a valid ISO string (second argument)",
                        "cooked": " does not convert to a valid ISO string (second argument)"
                      },
                      "tail": true,
                      "start": 1113,
                      "end": 1170
                    }
                  ],
                  "expressions": [
                    {
                      "type": "Identifier",
                      "name": "description",
                      "start": 1101,
                      "end": 1112
                    }
                  ],
                  "start": 1098,
                  "end": 1171
                }
              ],
              "optional": false,
              "start": 971,
              "end": 1175
            },
            "start": 971,
            "end": 1176
          }
        ],
        "start": 760,
        "end": 1178
      },
      "start": 711,
      "end": 1178
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "typeErrorTests",
            "start": 1186,
            "end": 1200
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 1208,
                      "end": 1214
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1208,
                    "end": 1216
                  },
                  {
                    "type": "Literal",
                    "value": "symbol",
                    "raw": "\"symbol\"",
                    "start": 1218,
                    "end": 1226
                  }
                ],
                "start": 1207,
                "end": 1227
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "ObjectExpression",
                    "properties": [],
                    "start": 1232,
                    "end": 1234
                  },
                  {
                    "type": "Literal",
                    "value": "plain object",
                    "raw": "\"plain object\"",
                    "start": 1236,
                    "end": 1250
                  }
                ],
                "start": 1231,
                "end": 1251
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Temporal",
                      "start": 1256,
                      "end": 1264
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "ZonedDateTime",
                      "start": 1265,
                      "end": 1278
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1256,
                    "end": 1278
                  },
                  {
                    "type": "Literal",
                    "value": "Temporal.ZonedDateTime, object",
                    "raw": "\"Temporal.ZonedDateTime, object\"",
                    "start": 1280,
                    "end": 1312
                  }
                ],
                "start": 1255,
                "end": 1313
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Temporal",
                        "start": 1318,
                        "end": 1326
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "ZonedDateTime",
                        "start": 1327,
                        "end": 1340
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1318,
                      "end": 1340
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "prototype",
                      "start": 1341,
                      "end": 1350
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1318,
                    "end": 1350
                  },
                  {
                    "type": "Literal",
                    "value": "Temporal.ZonedDateTime.prototype, object",
                    "raw": "\"Temporal.ZonedDateTime.prototype, object\"",
                    "start": 1352,
                    "end": 1394
                  }
                ],
                "start": 1317,
                "end": 1395
              }
            ],
            "start": 1203,
            "end": 1398
          },
          "start": 1186,
          "end": 1398
        }
      ],
      "start": 1180,
      "end": 1399
    },
    {
      "type": "ForOfStatement",
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "kind": "const",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "Identifier",
                  "name": "arg",
                  "start": 1413,
                  "end": 1416
                },
                {
                  "type": "Identifier",
                  "name": "description",
                  "start": 1418,
                  "end": 1429
                }
              ],
              "start": 1412,
              "end": 1430
            },
            "init": null,
            "start": 1412,
            "end": 1430
          }
        ],
        "start": 1406,
        "end": 1430
      },
      "right": {
        "type": "Identifier",
        "name": "typeErrorTests",
        "start": 1434,
        "end": 1448
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 1454,
                  "end": 1460
                },
                "property": {
                  "type": "Identifier",
                  "name": "throws",
                  "start": 1461,
                  "end": 1467
                },
                "optional": false,
                "computed": false,
                "start": 1454,
                "end": 1467
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "TypeError",
                  "start": 1468,
                  "end": 1477
                },
                {
                  "type": "ArrowFunctionExpression",
                  "expression": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Temporal",
                          "start": 1485,
                          "end": 1493
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ZonedDateTime",
                          "start": 1494,
                          "end": 1507
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1485,
                        "end": 1507
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "compare",
                        "start": 1508,
                        "end": 1515
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1485,
                      "end": 1515
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "arg",
                        "start": 1516,
                        "end": 1519
                      },
                      {
                        "type": "Identifier",
                        "name": "other",
                        "start": 1521,
                        "end": 1526
                      }
                    ],
                    "optional": false,
                    "start": 1485,
                    "end": 1527
                  },
                  "id": null,
                  "generator": false,
                  "start": 1479,
                  "end": 1527
                },
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false,
                      "start": 1530,
                      "end": 1530
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": " is not a valid property bag and does not convert to a string (first argument)",
                        "cooked": " is not a valid property bag and does not convert to a string (first argument)"
                      },
                      "tail": true,
                      "start": 1544,
                      "end": 1622
                    }
                  ],
                  "expressions": [
                    {
                      "type": "Identifier",
                      "name": "description",
                      "start": 1532,
                      "end": 1543
                    }
                  ],
                  "start": 1529,
                  "end": 1623
                }
              ],
              "optional": false,
              "start": 1454,
              "end": 1624
            },
            "start": 1454,
            "end": 1625
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 1628,
                  "end": 1634
                },
                "property": {
                  "type": "Identifier",
                  "name": "throws",
                  "start": 1635,
                  "end": 1641
                },
                "optional": false,
                "computed": false,
                "start": 1628,
                "end": 1641
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "TypeError",
                  "start": 1642,
                  "end": 1651
                },
                {
                  "type": "ArrowFunctionExpression",
                  "expression": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Temporal",
                          "start": 1659,
                          "end": 1667
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ZonedDateTime",
                          "start": 1668,
                          "end": 1681
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1659,
                        "end": 1681
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "compare",
                        "start": 1682,
                        "end": 1689
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1659,
                      "end": 1689
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "other",
                        "start": 1690,
                        "end": 1695
                      },
                      {
                        "type": "Identifier",
                        "name": "arg",
                        "start": 1697,
                        "end": 1700
                      }
                    ],
                    "optional": false,
                    "start": 1659,
                    "end": 1701
                  },
                  "id": null,
                  "generator": false,
                  "start": 1653,
                  "end": 1701
                },
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false,
                      "start": 1704,
                      "end": 1704
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": " is not a valid property bag and does not convert to a string (second argument)",
                        "cooked": " is not a valid property bag and does not convert to a string (second argument)"
                      },
                      "tail": true,
                      "start": 1718,
                      "end": 1797
                    }
                  ],
                  "expressions": [
                    {
                      "type": "Identifier",
                      "name": "description",
                      "start": 1706,
                      "end": 1717
                    }
                  ],
                  "start": 1703,
                  "end": 1798
                }
              ],
              "optional": false,
              "start": 1628,
              "end": 1799
            },
            "start": 1628,
            "end": 1800
          }
        ],
        "start": 1450,
        "end": 1802
      },
      "start": 1401,
      "end": 1802
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1803
}