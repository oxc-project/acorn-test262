{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "primitiveTests",
            "start": 352,
            "end": 366
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Identifier",
                    "name": "undefined",
                    "start": 374,
                    "end": 383
                  },
                  {
                    "type": "Literal",
                    "value": "undefined",
                    "raw": "\"undefined\"",
                    "start": 385,
                    "end": 396
                  }
                ],
                "start": 373,
                "end": 397
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": null,
                    "raw": "null",
                    "start": 402,
                    "end": 406
                  },
                  {
                    "type": "Literal",
                    "value": "null",
                    "raw": "\"null\"",
                    "start": 408,
                    "end": 414
                  }
                ],
                "start": 401,
                "end": 415
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 420,
                    "end": 424
                  },
                  {
                    "type": "Literal",
                    "value": "boolean",
                    "raw": "\"boolean\"",
                    "start": 426,
                    "end": 435
                  }
                ],
                "start": 419,
                "end": 436
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "",
                    "raw": "\"\"",
                    "start": 441,
                    "end": 443
                  },
                  {
                    "type": "Literal",
                    "value": "empty string",
                    "raw": "\"empty string\"",
                    "start": 445,
                    "end": 459
                  }
                ],
                "start": 440,
                "end": 460
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 465,
                    "end": 466
                  },
                  {
                    "type": "Literal",
                    "value": "number that doesn't convert to a valid ISO string",
                    "raw": "\"number that doesn't convert to a valid ISO string\"",
                    "start": 468,
                    "end": 519
                  }
                ],
                "start": 464,
                "end": 520
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 19761118,
                    "raw": "19761118",
                    "start": 525,
                    "end": 533
                  },
                  {
                    "type": "Literal",
                    "value": "number that would convert to a valid ISO string in other contexts",
                    "raw": "\"number that would convert to a valid ISO string in other contexts\"",
                    "start": 535,
                    "end": 602
                  }
                ],
                "start": 524,
                "end": 603
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": null,
                    "raw": "1n",
                    "bigint": "1",
                    "start": 608,
                    "end": 610
                  },
                  {
                    "type": "Literal",
                    "value": "bigint",
                    "raw": "\"bigint\"",
                    "start": 612,
                    "end": 620
                  }
                ],
                "start": 607,
                "end": 621
              }
            ],
            "start": 369,
            "end": 624
          },
          "start": 352,
          "end": 624
        }
      ],
      "start": 346,
      "end": 625
    },
    {
      "type": "ForOfStatement",
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "kind": "const",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "Identifier",
                  "name": "arg",
                  "start": 639,
                  "end": 642
                },
                {
                  "type": "Identifier",
                  "name": "description",
                  "start": 644,
                  "end": 655
                }
              ],
              "start": 638,
              "end": 656
            },
            "init": null,
            "start": 638,
            "end": 656
          }
        ],
        "start": 632,
        "end": 656
      },
      "right": {
        "type": "Identifier",
        "name": "primitiveTests",
        "start": 660,
        "end": 674
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 680,
                  "end": 686
                },
                "property": {
                  "type": "Identifier",
                  "name": "throws",
                  "start": 687,
                  "end": 693
                },
                "optional": false,
                "computed": false,
                "start": 680,
                "end": 693
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "arg",
                        "start": 706,
                        "end": 709
                      },
                      "prefix": true,
                      "start": 699,
                      "end": 709
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "value": "string",
                      "raw": "'string'",
                      "start": 714,
                      "end": 722
                    },
                    "start": 699,
                    "end": 722
                  },
                  "consequent": {
                    "type": "Identifier",
                    "name": "RangeError",
                    "start": 725,
                    "end": 735
                  },
                  "alternate": {
                    "type": "Identifier",
                    "name": "TypeError",
                    "start": 738,
                    "end": 747
                  },
                  "start": 699,
                  "end": 747
                },
                {
                  "type": "ArrowFunctionExpression",
                  "expression": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Temporal",
                          "start": 759,
                          "end": 767
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ZonedDateTime",
                          "start": 768,
                          "end": 781
                        },
                        "optional": false,
                        "computed": false,
                        "start": 759,
                        "end": 781
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "from",
                        "start": 782,
                        "end": 786
                      },
                      "optional": false,
                      "computed": false,
                      "start": 759,
                      "end": 786
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "arg",
                        "start": 787,
                        "end": 790
                      }
                    ],
                    "optional": false,
                    "start": 759,
                    "end": 791
                  },
                  "id": null,
                  "generator": false,
                  "start": 753,
                  "end": 791
                },
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false,
                      "start": 798,
                      "end": 798
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": " does not convert to a valid ISO string",
                        "cooked": " does not convert to a valid ISO string"
                      },
                      "tail": true,
                      "start": 812,
                      "end": 851
                    }
                  ],
                  "expressions": [
                    {
                      "type": "Identifier",
                      "name": "description",
                      "start": 800,
                      "end": 811
                    }
                  ],
                  "start": 797,
                  "end": 852
                }
              ],
              "optional": false,
              "start": 680,
              "end": 856
            },
            "start": 680,
            "end": 857
          }
        ],
        "start": 676,
        "end": 859
      },
      "start": 627,
      "end": 859
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "typeErrorTests",
            "start": 867,
            "end": 881
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 889,
                      "end": 895
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 889,
                    "end": 897
                  },
                  {
                    "type": "Literal",
                    "value": "symbol",
                    "raw": "\"symbol\"",
                    "start": 899,
                    "end": 907
                  }
                ],
                "start": 888,
                "end": 908
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "ObjectExpression",
                    "properties": [],
                    "start": 913,
                    "end": 915
                  },
                  {
                    "type": "Literal",
                    "value": "plain object",
                    "raw": "\"plain object\"",
                    "start": 917,
                    "end": 931
                  }
                ],
                "start": 912,
                "end": 932
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Temporal",
                      "start": 937,
                      "end": 945
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "ZonedDateTime",
                      "start": 946,
                      "end": 959
                    },
                    "optional": false,
                    "computed": false,
                    "start": 937,
                    "end": 959
                  },
                  {
                    "type": "Literal",
                    "value": "Temporal.ZonedDateTime, object",
                    "raw": "\"Temporal.ZonedDateTime, object\"",
                    "start": 961,
                    "end": 993
                  }
                ],
                "start": 936,
                "end": 994
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Temporal",
                        "start": 999,
                        "end": 1007
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "ZonedDateTime",
                        "start": 1008,
                        "end": 1021
                      },
                      "optional": false,
                      "computed": false,
                      "start": 999,
                      "end": 1021
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "prototype",
                      "start": 1022,
                      "end": 1031
                    },
                    "optional": false,
                    "computed": false,
                    "start": 999,
                    "end": 1031
                  },
                  {
                    "type": "Literal",
                    "value": "Temporal.ZonedDateTime.prototype, object",
                    "raw": "\"Temporal.ZonedDateTime.prototype, object\"",
                    "start": 1033,
                    "end": 1075
                  }
                ],
                "start": 998,
                "end": 1076
              }
            ],
            "start": 884,
            "end": 1079
          },
          "start": 867,
          "end": 1079
        }
      ],
      "start": 861,
      "end": 1080
    },
    {
      "type": "ForOfStatement",
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "kind": "const",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "Identifier",
                  "name": "arg",
                  "start": 1094,
                  "end": 1097
                },
                {
                  "type": "Identifier",
                  "name": "description",
                  "start": 1099,
                  "end": 1110
                }
              ],
              "start": 1093,
              "end": 1111
            },
            "init": null,
            "start": 1093,
            "end": 1111
          }
        ],
        "start": 1087,
        "end": 1111
      },
      "right": {
        "type": "Identifier",
        "name": "typeErrorTests",
        "start": 1115,
        "end": 1129
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 1135,
                  "end": 1141
                },
                "property": {
                  "type": "Identifier",
                  "name": "throws",
                  "start": 1142,
                  "end": 1148
                },
                "optional": false,
                "computed": false,
                "start": 1135,
                "end": 1148
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "TypeError",
                  "start": 1149,
                  "end": 1158
                },
                {
                  "type": "ArrowFunctionExpression",
                  "expression": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Temporal",
                          "start": 1166,
                          "end": 1174
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ZonedDateTime",
                          "start": 1175,
                          "end": 1188
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1166,
                        "end": 1188
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "from",
                        "start": 1189,
                        "end": 1193
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1166,
                      "end": 1193
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "arg",
                        "start": 1194,
                        "end": 1197
                      }
                    ],
                    "optional": false,
                    "start": 1166,
                    "end": 1198
                  },
                  "id": null,
                  "generator": false,
                  "start": 1160,
                  "end": 1198
                },
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false,
                      "start": 1201,
                      "end": 1201
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": " is not a valid property bag and does not convert to a string",
                        "cooked": " is not a valid property bag and does not convert to a string"
                      },
                      "tail": true,
                      "start": 1215,
                      "end": 1276
                    }
                  ],
                  "expressions": [
                    {
                      "type": "Identifier",
                      "name": "description",
                      "start": 1203,
                      "end": 1214
                    }
                  ],
                  "start": 1200,
                  "end": 1277
                }
              ],
              "optional": false,
              "start": 1135,
              "end": 1278
            },
            "start": 1135,
            "end": 1279
          }
        ],
        "start": 1131,
        "end": 1281
      },
      "start": 1082,
      "end": 1281
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1282
}