{
  "type": "Program",
  "start": 0,
  "end": 1218,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 343,
      "end": 395,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 349,
          "end": 394,
          "id": {
            "type": "Identifier",
            "start": 349,
            "end": 357,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 360,
            "end": 394,
            "callee": {
              "type": "MemberExpression",
              "start": 364,
              "end": 382,
              "object": {
                "type": "Identifier",
                "start": 364,
                "end": 372,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 373,
                "end": 382,
                "name": "PlainDate"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 383,
                "end": 387,
                "value": 2000,
                "raw": "2000"
              },
              {
                "type": "Literal",
                "start": 389,
                "end": 390,
                "value": 5,
                "raw": "5"
              },
              {
                "type": "Literal",
                "start": 392,
                "end": 393,
                "value": 2,
                "raw": "2"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 397,
      "end": 648,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 403,
          "end": 647,
          "id": {
            "type": "Identifier",
            "start": 403,
            "end": 417,
            "name": "primitiveTests"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 420,
            "end": 647,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 424,
                "end": 438,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 425,
                    "end": 429,
                    "value": null,
                    "raw": "null"
                  },
                  {
                    "type": "Literal",
                    "start": 431,
                    "end": 437,
                    "value": "null",
                    "raw": "\"null\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 442,
                "end": 459,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 443,
                    "end": 447,
                    "value": true,
                    "raw": "true"
                  },
                  {
                    "type": "Literal",
                    "start": 449,
                    "end": 458,
                    "value": "boolean",
                    "raw": "\"boolean\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 463,
                "end": 483,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 464,
                    "end": 466,
                    "value": "",
                    "raw": "\"\""
                  },
                  {
                    "type": "Literal",
                    "start": 468,
                    "end": 482,
                    "value": "empty string",
                    "raw": "\"empty string\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 487,
                "end": 543,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 488,
                    "end": 489,
                    "value": 1,
                    "raw": "1"
                  },
                  {
                    "type": "Literal",
                    "start": 491,
                    "end": 542,
                    "value": "number that doesn't convert to a valid ISO string",
                    "raw": "\"number that doesn't convert to a valid ISO string\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 547,
                "end": 626,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 548,
                    "end": 556,
                    "value": 19761118,
                    "raw": "19761118"
                  },
                  {
                    "type": "Literal",
                    "start": 558,
                    "end": 625,
                    "value": "number that would convert to a valid ISO string in other contexts",
                    "raw": "\"number that would convert to a valid ISO string in other contexts\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 630,
                "end": 644,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 631,
                    "end": 633,
                    "value": null,
                    "raw": "1n",
                    "bigint": "1"
                  },
                  {
                    "type": "Literal",
                    "start": 635,
                    "end": 643,
                    "value": "bigint",
                    "raw": "\"bigint\""
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 650,
      "end": 894,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 655,
        "end": 684,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 661,
            "end": 684,
            "id": {
              "type": "ArrayPattern",
              "start": 661,
              "end": 684,
              "elements": [
                {
                  "type": "Identifier",
                  "start": 662,
                  "end": 670,
                  "name": "timeZone"
                },
                {
                  "type": "Identifier",
                  "start": 672,
                  "end": 683,
                  "name": "description"
                }
              ]
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 688,
        "end": 702,
        "name": "primitiveTests"
      },
      "body": {
        "type": "BlockStatement",
        "start": 704,
        "end": 894,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 708,
            "end": 892,
            "expression": {
              "type": "CallExpression",
              "start": 708,
              "end": 891,
              "callee": {
                "type": "MemberExpression",
                "start": 708,
                "end": 721,
                "object": {
                  "type": "Identifier",
                  "start": 708,
                  "end": 714,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 715,
                  "end": 721,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "start": 727,
                  "end": 780,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 727,
                    "end": 755,
                    "left": {
                      "type": "UnaryExpression",
                      "start": 727,
                      "end": 742,
                      "operator": "typeof",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 734,
                        "end": 742,
                        "name": "timeZone"
                      }
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "start": 747,
                      "end": 755,
                      "value": "string",
                      "raw": "'string'"
                    }
                  },
                  "consequent": {
                    "type": "Identifier",
                    "start": 758,
                    "end": 768,
                    "name": "RangeError"
                  },
                  "alternate": {
                    "type": "Identifier",
                    "start": 771,
                    "end": 780,
                    "name": "TypeError"
                  }
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 786,
                  "end": 826,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 792,
                    "end": 826,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 792,
                      "end": 816,
                      "object": {
                        "type": "Identifier",
                        "start": 792,
                        "end": 800,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 801,
                        "end": 816,
                        "name": "toZonedDateTime"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 817,
                        "end": 825,
                        "name": "timeZone"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 832,
                  "end": 887,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 835,
                      "end": 846,
                      "name": "description"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 833,
                      "end": 833,
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 847,
                      "end": 886,
                      "value": {
                        "raw": " does not convert to a valid ISO string",
                        "cooked": " does not convert to a valid ISO string"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 896,
      "end": 1015,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 902,
          "end": 1014,
          "id": {
            "type": "Identifier",
            "start": 902,
            "end": 916,
            "name": "typeErrorTests"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 919,
            "end": 1014,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 923,
                "end": 943,
                "elements": [
                  {
                    "type": "CallExpression",
                    "start": 924,
                    "end": 932,
                    "callee": {
                      "type": "Identifier",
                      "start": 924,
                      "end": 930,
                      "name": "Symbol"
                    },
                    "arguments": [],
                    "optional": false
                  },
                  {
                    "type": "Literal",
                    "start": 934,
                    "end": 942,
                    "value": "symbol",
                    "raw": "\"symbol\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 947,
                "end": 961,
                "elements": [
                  {
                    "type": "ObjectExpression",
                    "start": 948,
                    "end": 950,
                    "properties": []
                  },
                  {
                    "type": "Literal",
                    "start": 952,
                    "end": 960,
                    "value": "object",
                    "raw": "\"object\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 965,
                "end": 1011,
                "elements": [
                  {
                    "type": "NewExpression",
                    "start": 966,
                    "end": 989,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 970,
                      "end": 987,
                      "object": {
                        "type": "Identifier",
                        "start": 970,
                        "end": 978,
                        "name": "Temporal"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 979,
                        "end": 987,
                        "name": "Duration"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": []
                  },
                  {
                    "type": "Literal",
                    "start": 991,
                    "end": 1010,
                    "value": "duration instance",
                    "raw": "\"duration instance\""
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 1017,
      "end": 1217,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 1022,
        "end": 1051,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1028,
            "end": 1051,
            "id": {
              "type": "ArrayPattern",
              "start": 1028,
              "end": 1051,
              "elements": [
                {
                  "type": "Identifier",
                  "start": 1029,
                  "end": 1037,
                  "name": "timeZone"
                },
                {
                  "type": "Identifier",
                  "start": 1039,
                  "end": 1050,
                  "name": "description"
                }
              ]
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 1055,
        "end": 1069,
        "name": "typeErrorTests"
      },
      "body": {
        "type": "BlockStatement",
        "start": 1071,
        "end": 1217,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1075,
            "end": 1215,
            "expression": {
              "type": "CallExpression",
              "start": 1075,
              "end": 1214,
              "callee": {
                "type": "MemberExpression",
                "start": 1075,
                "end": 1088,
                "object": {
                  "type": "Identifier",
                  "start": 1075,
                  "end": 1081,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1082,
                  "end": 1088,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1089,
                  "end": 1098,
                  "name": "TypeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 1100,
                  "end": 1140,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 1106,
                    "end": 1140,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1106,
                      "end": 1130,
                      "object": {
                        "type": "Identifier",
                        "start": 1106,
                        "end": 1114,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1115,
                        "end": 1130,
                        "name": "toZonedDateTime"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1131,
                        "end": 1139,
                        "name": "timeZone"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 1142,
                  "end": 1213,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 1145,
                      "end": 1156,
                      "name": "description"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1143,
                      "end": 1143,
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1157,
                      "end": 1212,
                      "value": {
                        "raw": " is not a valid object and does not convert to a string",
                        "cooked": " is not a valid object and does not convert to a string"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}