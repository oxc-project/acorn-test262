{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 247,
            "end": 253
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 254,
            "end": 263
          },
          "optional": false,
          "computed": false,
          "start": 247,
          "end": 263
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "JSON",
                "start": 264,
                "end": 268
              },
              "property": {
                "type": "Identifier",
                "name": "parse",
                "start": 269,
                "end": 274
              },
              "optional": false,
              "computed": false,
              "start": 264,
              "end": 274
            },
            "arguments": [
              {
                "type": "Literal",
                "value": " 1234",
                "raw": "' 1234'",
                "start": 275,
                "end": 282
              }
            ],
            "optional": false,
            "start": 264,
            "end": 283
          },
          {
            "type": "Literal",
            "value": 1234,
            "raw": "1234",
            "start": 285,
            "end": 289
          },
          {
            "type": "Literal",
            "value": "<SP> should be ignored",
            "raw": "'<SP> should be ignored'",
            "start": 291,
            "end": 315
          }
        ],
        "optional": false,
        "start": 247,
        "end": 316
      },
      "start": 247,
      "end": 317
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 319,
            "end": 325
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 326,
            "end": 332
          },
          "optional": false,
          "computed": false,
          "start": 319,
          "end": 332
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "SyntaxError",
            "start": 333,
            "end": 344
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "JSON",
                        "start": 363,
                        "end": 367
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "parse",
                        "start": 368,
                        "end": 373
                      },
                      "optional": false,
                      "computed": false,
                      "start": 363,
                      "end": 373
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "12 34",
                        "raw": "'12 34'",
                        "start": 374,
                        "end": 381
                      }
                    ],
                    "optional": false,
                    "start": 363,
                    "end": 382
                  },
                  "start": 363,
                  "end": 383
                }
              ],
              "start": 357,
              "end": 385
            },
            "expression": false,
            "start": 346,
            "end": 385
          },
          {
            "type": "Literal",
            "value": "<SP> should produce a syntax error as whitespace results in two tokens",
            "raw": "'<SP> should produce a syntax error as whitespace results in two tokens'",
            "start": 387,
            "end": 459
          }
        ],
        "optional": false,
        "start": 319,
        "end": 460
      },
      "start": 319,
      "end": 461
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 462
}