{
  "type": "Program",
  "body": [
    {
      "type": "ForInStatement",
      "left": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "x",
              "start": 284,
              "end": 285
            },
            "init": null,
            "start": 284,
            "end": 285
          }
        ],
        "start": 280,
        "end": 285
      },
      "right": {
        "type": "Identifier",
        "name": "Number",
        "start": 289,
        "end": 295
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 301,
                  "end": 307
                },
                "property": {
                  "type": "Identifier",
                  "name": "notSameValue",
                  "start": 308,
                  "end": 320
                },
                "optional": false,
                "computed": false,
                "start": 301,
                "end": 320
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "x",
                  "start": 321,
                  "end": 322
                },
                {
                  "type": "Literal",
                  "value": "MIN_VALUE",
                  "raw": "\"MIN_VALUE\"",
                  "start": 324,
                  "end": 335
                },
                {
                  "type": "Literal",
                  "value": "The value of x is not \"MIN_VALUE\"",
                  "raw": "'The value of x is not \"MIN_VALUE\"'",
                  "start": 337,
                  "end": 372
                }
              ],
              "optional": false,
              "start": 301,
              "end": 373
            },
            "start": 301,
            "end": 374
          }
        ],
        "start": 297,
        "end": 376
      },
      "start": 275,
      "end": 376
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 378,
          "end": 384
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "!",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 389,
                  "end": 395
                },
                "property": {
                  "type": "Identifier",
                  "name": "propertyIsEnumerable",
                  "start": 396,
                  "end": 416
                },
                "optional": false,
                "computed": false,
                "start": 389,
                "end": 416
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "MIN_VALUE",
                  "raw": "'MIN_VALUE'",
                  "start": 417,
                  "end": 428
                }
              ],
              "optional": false,
              "start": 389,
              "end": 429
            },
            "prefix": true,
            "start": 388,
            "end": 429
          },
          {
            "type": "Literal",
            "value": "The value of !Number.propertyIsEnumerable('MIN_VALUE') is expected to be true",
            "raw": "'The value of !Number.propertyIsEnumerable(\\'MIN_VALUE\\') is expected to be true'",
            "start": 433,
            "end": 514
          }
        ],
        "optional": false,
        "start": 378,
        "end": 516
      },
      "start": 378,
      "end": 517
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 564
}