{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "toPrecision",
            "start": 443,
            "end": 454
          },
          "init": {
            "type": "MemberExpression",
            "object": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 457,
                "end": 463
              },
              "property": {
                "type": "Identifier",
                "name": "prototype",
                "start": 464,
                "end": 473
              },
              "optional": false,
              "computed": false,
              "start": 457,
              "end": 473
            },
            "property": {
              "type": "Identifier",
              "name": "toPrecision",
              "start": 474,
              "end": 485
            },
            "optional": false,
            "computed": false,
            "start": 457,
            "end": 485
          },
          "start": 443,
          "end": 485
        }
      ],
      "start": 439,
      "end": 486
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 488,
            "end": 494
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 495,
            "end": 501
          },
          "optional": false,
          "computed": false,
          "start": 488,
          "end": 501
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "RangeError",
            "start": 502,
            "end": 512
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "toPrecision",
                        "start": 529,
                        "end": 540
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "call",
                        "start": 541,
                        "end": 545
                      },
                      "optional": false,
                      "computed": false,
                      "start": 529,
                      "end": 545
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 546,
                        "end": 547
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [],
                          "start": 560,
                          "end": 562
                        },
                        "expression": false,
                        "start": 549,
                        "end": 562
                      }
                    ],
                    "optional": false,
                    "start": 529,
                    "end": 563
                  },
                  "start": 529,
                  "end": 564
                }
              ],
              "start": 525,
              "end": 566
            },
            "expression": false,
            "start": 514,
            "end": 566
          },
          {
            "type": "Literal",
            "value": "`function() {}` doesn't coerce into a number in range (1-100)",
            "raw": "\"`function() {}` doesn't coerce into a number in range (1-100)\"",
            "start": 568,
            "end": 631
          }
        ],
        "optional": false,
        "start": 488,
        "end": 632
      },
      "start": 488,
      "end": 633
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 635,
            "end": 641
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 642,
            "end": 648
          },
          "optional": false,
          "computed": false,
          "start": 635,
          "end": 648
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "RangeError",
            "start": 649,
            "end": 659
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "toPrecision",
                        "start": 676,
                        "end": 687
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "call",
                        "start": 688,
                        "end": 692
                      },
                      "optional": false,
                      "computed": false,
                      "start": 676,
                      "end": 692
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 693,
                        "end": 694
                      },
                      {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 696,
                        "end": 699
                      }
                    ],
                    "optional": false,
                    "start": 676,
                    "end": 700
                  },
                  "start": 676,
                  "end": 701
                }
              ],
              "start": 672,
              "end": 703
            },
            "expression": false,
            "start": 661,
            "end": 703
          },
          {
            "type": "Literal",
            "value": "NaN doesn't coerce into a number in range (1-100)",
            "raw": "\"NaN doesn't coerce into a number in range (1-100)\"",
            "start": 705,
            "end": 756
          }
        ],
        "optional": false,
        "start": 635,
        "end": 757
      },
      "start": 635,
      "end": 758
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 760,
            "end": 766
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 767,
            "end": 773
          },
          "optional": false,
          "computed": false,
          "start": 760,
          "end": 773
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "RangeError",
            "start": 774,
            "end": 784
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "toPrecision",
                        "start": 801,
                        "end": 812
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "call",
                        "start": 813,
                        "end": 817
                      },
                      "optional": false,
                      "computed": false,
                      "start": 801,
                      "end": 817
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 818,
                        "end": 819
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [],
                        "start": 821,
                        "end": 823
                      }
                    ],
                    "optional": false,
                    "start": 801,
                    "end": 824
                  },
                  "start": 801,
                  "end": 825
                }
              ],
              "start": 797,
              "end": 827
            },
            "expression": false,
            "start": 786,
            "end": 827
          },
          {
            "type": "Literal",
            "value": "{} doesn't coerce into a number in range (1-100)",
            "raw": "\"{} doesn't coerce into a number in range (1-100)\"",
            "start": 829,
            "end": 879
          }
        ],
        "optional": false,
        "start": 760,
        "end": 880
      },
      "start": 760,
      "end": 881
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 882
}