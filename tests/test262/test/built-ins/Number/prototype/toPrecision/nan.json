{
  "type": "Program",
  "start": 0,
  "end": 1658,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1148,
      "end": 1267,
      "expression": {
        "type": "CallExpression",
        "start": 1148,
        "end": 1266,
        "callee": {
          "type": "MemberExpression",
          "start": 1148,
          "end": 1164,
          "object": {
            "type": "Identifier",
            "start": 1148,
            "end": 1154,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1155,
            "end": 1164,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1168,
            "end": 1194,
            "callee": {
              "type": "MemberExpression",
              "start": 1168,
              "end": 1183,
              "object": {
                "type": "Identifier",
                "start": 1168,
                "end": 1171,
                "name": "NaN"
              },
              "property": {
                "type": "Identifier",
                "start": 1172,
                "end": 1183,
                "name": "toPrecision"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 1184,
                "end": 1193,
                "name": "undefined"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1198,
            "end": 1203,
            "value": "NaN",
            "raw": "\"NaN\""
          },
          {
            "type": "Literal",
            "start": 1207,
            "end": 1264,
            "value": "step 2: If precision is undefined, return ! ToString(x)",
            "raw": "\"step 2: If precision is undefined, return ! ToString(x)\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1269,
      "end": 1283,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1273,
          "end": 1282,
          "id": {
            "type": "Identifier",
            "start": 1273,
            "end": 1278,
            "name": "calls"
          },
          "init": {
            "type": "Literal",
            "start": 1281,
            "end": 1282,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1285,
      "end": 1359,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1289,
          "end": 1358,
          "id": {
            "type": "Identifier",
            "start": 1289,
            "end": 1290,
            "name": "p"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 1293,
            "end": 1358,
            "properties": [
              {
                "type": "Property",
                "start": 1297,
                "end": 1356,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 1297,
                  "end": 1304,
                  "name": "valueOf"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 1306,
                  "end": 1356,
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 1317,
                    "end": 1356,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1323,
                        "end": 1331,
                        "expression": {
                          "type": "UpdateExpression",
                          "start": 1323,
                          "end": 1330,
                          "operator": "++",
                          "prefix": false,
                          "argument": {
                            "type": "Identifier",
                            "start": 1323,
                            "end": 1328,
                            "name": "calls"
                          }
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 1336,
                        "end": 1352,
                        "argument": {
                          "type": "Identifier",
                          "start": 1343,
                          "end": 1351,
                          "name": "Infinity"
                        }
                      }
                    ]
                  },
                  "expression": false
                },
                "method": false,
                "shorthand": false,
                "computed": false
              }
            ]
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1361,
      "end": 1414,
      "expression": {
        "type": "CallExpression",
        "start": 1361,
        "end": 1413,
        "callee": {
          "type": "MemberExpression",
          "start": 1361,
          "end": 1377,
          "object": {
            "type": "Identifier",
            "start": 1361,
            "end": 1367,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1368,
            "end": 1377,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1378,
            "end": 1396,
            "callee": {
              "type": "MemberExpression",
              "start": 1378,
              "end": 1393,
              "object": {
                "type": "Identifier",
                "start": 1378,
                "end": 1381,
                "name": "NaN"
              },
              "property": {
                "type": "Identifier",
                "start": 1382,
                "end": 1393,
                "name": "toPrecision"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 1394,
                "end": 1395,
                "name": "p"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1398,
            "end": 1403,
            "value": "NaN",
            "raw": "\"NaN\""
          },
          {
            "type": "Literal",
            "start": 1405,
            "end": 1412,
            "value": "value",
            "raw": "\"value\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1415,
      "end": 1487,
      "expression": {
        "type": "CallExpression",
        "start": 1415,
        "end": 1486,
        "callee": {
          "type": "MemberExpression",
          "start": 1415,
          "end": 1431,
          "object": {
            "type": "Identifier",
            "start": 1415,
            "end": 1421,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1422,
            "end": 1431,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1432,
            "end": 1437,
            "name": "calls"
          },
          {
            "type": "Literal",
            "start": 1439,
            "end": 1440,
            "value": 1,
            "raw": "1"
          },
          {
            "type": "Literal",
            "start": 1442,
            "end": 1485,
            "value": "NaN is checked after ToInteger(precision)",
            "raw": "\"NaN is checked after ToInteger(precision)\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1489,
      "end": 1513,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1493,
          "end": 1512,
          "id": {
            "type": "Identifier",
            "start": 1493,
            "end": 1494,
            "name": "n"
          },
          "init": {
            "type": "NewExpression",
            "start": 1497,
            "end": 1512,
            "callee": {
              "type": "Identifier",
              "start": 1501,
              "end": 1507,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 1508,
                "end": 1511,
                "name": "NaN"
              }
            ]
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1514,
      "end": 1524,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1514,
        "end": 1523,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1514,
          "end": 1519,
          "name": "calls"
        },
        "right": {
          "type": "Literal",
          "start": 1522,
          "end": 1523,
          "value": 0,
          "raw": "0"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1525,
      "end": 1577,
      "expression": {
        "type": "CallExpression",
        "start": 1525,
        "end": 1576,
        "callee": {
          "type": "MemberExpression",
          "start": 1525,
          "end": 1541,
          "object": {
            "type": "Identifier",
            "start": 1525,
            "end": 1531,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1532,
            "end": 1541,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1542,
            "end": 1558,
            "callee": {
              "type": "MemberExpression",
              "start": 1542,
              "end": 1555,
              "object": {
                "type": "Identifier",
                "start": 1542,
                "end": 1543,
                "name": "n"
              },
              "property": {
                "type": "Identifier",
                "start": 1544,
                "end": 1555,
                "name": "toPrecision"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 1556,
                "end": 1557,
                "name": "p"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1560,
            "end": 1565,
            "value": "NaN",
            "raw": "\"NaN\""
          },
          {
            "type": "Literal",
            "start": 1567,
            "end": 1575,
            "value": "object",
            "raw": "\"object\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1578,
      "end": 1657,
      "expression": {
        "type": "CallExpression",
        "start": 1578,
        "end": 1656,
        "callee": {
          "type": "MemberExpression",
          "start": 1578,
          "end": 1594,
          "object": {
            "type": "Identifier",
            "start": 1578,
            "end": 1584,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1585,
            "end": 1594,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1595,
            "end": 1600,
            "name": "calls"
          },
          {
            "type": "Literal",
            "start": 1602,
            "end": 1603,
            "value": 1,
            "raw": "1"
          },
          {
            "type": "Literal",
            "start": 1605,
            "end": 1655,
            "value": "Number NaN is checked after ToInteger(precision)",
            "raw": "\"Number NaN is checked after ToInteger(precision)\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}