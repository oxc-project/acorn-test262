{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 379,
            "end": 385
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 386,
            "end": 395
          },
          "optional": false,
          "computed": false,
          "start": 379,
          "end": 395
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 396,
                  "end": 402
                },
                "property": {
                  "type": "Identifier",
                  "name": "prototype",
                  "start": 403,
                  "end": 412
                },
                "optional": false,
                "computed": false,
                "start": 396,
                "end": 412
              },
              "property": {
                "type": "Identifier",
                "name": "toString",
                "start": 413,
                "end": 421
              },
              "optional": false,
              "computed": false,
              "start": 396,
              "end": 421
            },
            "arguments": [],
            "optional": false,
            "start": 396,
            "end": 423
          },
          {
            "type": "Literal",
            "value": "0",
            "raw": "\"0\"",
            "start": 425,
            "end": 428
          },
          {
            "type": "Literal",
            "value": "Number.prototype.toString() must return \"0\"",
            "raw": "'Number.prototype.toString() must return \"0\"'",
            "start": 430,
            "end": 475
          }
        ],
        "optional": false,
        "start": 379,
        "end": 476
      },
      "start": 379,
      "end": 477
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 478,
            "end": 484
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 485,
            "end": 494
          },
          "optional": false,
          "computed": false,
          "start": 478,
          "end": 494
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 500,
                    "end": 506
                  },
                  "arguments": [],
                  "start": 496,
                  "end": 508
                },
                "start": 495,
                "end": 509
              },
              "property": {
                "type": "Identifier",
                "name": "toString",
                "start": 510,
                "end": 518
              },
              "optional": false,
              "computed": false,
              "start": 495,
              "end": 518
            },
            "arguments": [],
            "optional": false,
            "start": 495,
            "end": 520
          },
          {
            "type": "Literal",
            "value": "0",
            "raw": "\"0\"",
            "start": 522,
            "end": 525
          },
          {
            "type": "Literal",
            "value": "(new Number()).toString() must return \"0\"",
            "raw": "'(new Number()).toString() must return \"0\"'",
            "start": 527,
            "end": 570
          }
        ],
        "optional": false,
        "start": 478,
        "end": 571
      },
      "start": 478,
      "end": 572
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 573,
            "end": 579
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 580,
            "end": 589
          },
          "optional": false,
          "computed": false,
          "start": 573,
          "end": 589
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 595,
                    "end": 601
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 602,
                      "end": 603
                    }
                  ],
                  "start": 591,
                  "end": 604
                },
                "start": 590,
                "end": 605
              },
              "property": {
                "type": "Identifier",
                "name": "toString",
                "start": 606,
                "end": 614
              },
              "optional": false,
              "computed": false,
              "start": 590,
              "end": 614
            },
            "arguments": [],
            "optional": false,
            "start": 590,
            "end": 616
          },
          {
            "type": "Literal",
            "value": "0",
            "raw": "\"0\"",
            "start": 618,
            "end": 621
          },
          {
            "type": "Literal",
            "value": "(new Number(0)).toString() must return \"0\"",
            "raw": "'(new Number(0)).toString() must return \"0\"'",
            "start": 623,
            "end": 667
          }
        ],
        "optional": false,
        "start": 573,
        "end": 668
      },
      "start": 573,
      "end": 669
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 670,
            "end": 676
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 677,
            "end": 686
          },
          "optional": false,
          "computed": false,
          "start": 670,
          "end": 686
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 692,
                    "end": 698
                  },
                  "arguments": [
                    {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 700,
                        "end": 701
                      },
                      "prefix": true,
                      "start": 699,
                      "end": 701
                    }
                  ],
                  "start": 688,
                  "end": 702
                },
                "start": 687,
                "end": 703
              },
              "property": {
                "type": "Identifier",
                "name": "toString",
                "start": 704,
                "end": 712
              },
              "optional": false,
              "computed": false,
              "start": 687,
              "end": 712
            },
            "arguments": [],
            "optional": false,
            "start": 687,
            "end": 714
          },
          {
            "type": "Literal",
            "value": "-1",
            "raw": "\"-1\"",
            "start": 716,
            "end": 720
          },
          {
            "type": "Literal",
            "value": "(new Number(-1)).toString() must return \"-1\"",
            "raw": "'(new Number(-1)).toString() must return \"-1\"'",
            "start": 722,
            "end": 768
          }
        ],
        "optional": false,
        "start": 670,
        "end": 769
      },
      "start": 670,
      "end": 770
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 771,
            "end": 777
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 778,
            "end": 787
          },
          "optional": false,
          "computed": false,
          "start": 771,
          "end": 787
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 793,
                    "end": 799
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 800,
                      "end": 801
                    }
                  ],
                  "start": 789,
                  "end": 802
                },
                "start": 788,
                "end": 803
              },
              "property": {
                "type": "Identifier",
                "name": "toString",
                "start": 804,
                "end": 812
              },
              "optional": false,
              "computed": false,
              "start": 788,
              "end": 812
            },
            "arguments": [],
            "optional": false,
            "start": 788,
            "end": 814
          },
          {
            "type": "Literal",
            "value": "1",
            "raw": "\"1\"",
            "start": 816,
            "end": 819
          },
          {
            "type": "Literal",
            "value": "(new Number(1)).toString() must return \"1\"",
            "raw": "'(new Number(1)).toString() must return \"1\"'",
            "start": 821,
            "end": 865
          }
        ],
        "optional": false,
        "start": 771,
        "end": 866
      },
      "start": 771,
      "end": 867
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 868,
            "end": 874
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 875,
            "end": 884
          },
          "optional": false,
          "computed": false,
          "start": 868,
          "end": 884
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 890,
                    "end": 896
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Number",
                        "start": 897,
                        "end": 903
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 904,
                        "end": 907
                      },
                      "optional": false,
                      "computed": false,
                      "start": 897,
                      "end": 907
                    }
                  ],
                  "start": 886,
                  "end": 908
                },
                "start": 885,
                "end": 909
              },
              "property": {
                "type": "Identifier",
                "name": "toString",
                "start": 910,
                "end": 918
              },
              "optional": false,
              "computed": false,
              "start": 885,
              "end": 918
            },
            "arguments": [],
            "optional": false,
            "start": 885,
            "end": 920
          },
          {
            "type": "Literal",
            "value": "NaN",
            "raw": "\"NaN\"",
            "start": 922,
            "end": 927
          },
          {
            "type": "Literal",
            "value": "(new Number(Number.NaN)).toString() must return \"NaN\"",
            "raw": "'(new Number(Number.NaN)).toString() must return \"NaN\"'",
            "start": 929,
            "end": 984
          }
        ],
        "optional": false,
        "start": 868,
        "end": 985
      },
      "start": 868,
      "end": 986
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 988,
            "end": 994
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 995,
            "end": 1004
          },
          "optional": false,
          "computed": false,
          "start": 988,
          "end": 1004
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 1013,
                    "end": 1019
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Number",
                        "start": 1020,
                        "end": 1026
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "POSITIVE_INFINITY",
                        "start": 1027,
                        "end": 1044
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1020,
                      "end": 1044
                    }
                  ],
                  "start": 1009,
                  "end": 1045
                },
                "start": 1008,
                "end": 1046
              },
              "property": {
                "type": "Identifier",
                "name": "toString",
                "start": 1047,
                "end": 1055
              },
              "optional": false,
              "computed": false,
              "start": 1008,
              "end": 1055
            },
            "arguments": [],
            "optional": false,
            "start": 1008,
            "end": 1057
          },
          {
            "type": "Literal",
            "value": "Infinity",
            "raw": "\"Infinity\"",
            "start": 1061,
            "end": 1071
          },
          {
            "type": "Literal",
            "value": "(new Number(Number.POSITIVE_INFINITY)).toString() must return \"Infinity\"",
            "raw": "'(new Number(Number.POSITIVE_INFINITY)).toString() must return \"Infinity\"'",
            "start": 1075,
            "end": 1149
          }
        ],
        "optional": false,
        "start": 988,
        "end": 1151
      },
      "start": 988,
      "end": 1152
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1154,
            "end": 1160
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1161,
            "end": 1170
          },
          "optional": false,
          "computed": false,
          "start": 1154,
          "end": 1170
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 1179,
                    "end": 1185
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Number",
                        "start": 1186,
                        "end": 1192
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "NEGATIVE_INFINITY",
                        "start": 1193,
                        "end": 1210
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1186,
                      "end": 1210
                    }
                  ],
                  "start": 1175,
                  "end": 1211
                },
                "start": 1174,
                "end": 1212
              },
              "property": {
                "type": "Identifier",
                "name": "toString",
                "start": 1213,
                "end": 1221
              },
              "optional": false,
              "computed": false,
              "start": 1174,
              "end": 1221
            },
            "arguments": [],
            "optional": false,
            "start": 1174,
            "end": 1223
          },
          {
            "type": "Literal",
            "value": "-Infinity",
            "raw": "\"-Infinity\"",
            "start": 1227,
            "end": 1238
          },
          {
            "type": "Literal",
            "value": "(new Number(Number.NEGATIVE_INFINITY)).toString() must return \"-Infinity\"",
            "raw": "'(new Number(Number.NEGATIVE_INFINITY)).toString() must return \"-Infinity\"'",
            "start": 1242,
            "end": 1317
          }
        ],
        "optional": false,
        "start": 1154,
        "end": 1319
      },
      "start": 1154,
      "end": 1320
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1321
}