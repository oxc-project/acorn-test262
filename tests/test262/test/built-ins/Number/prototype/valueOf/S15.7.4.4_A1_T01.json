{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 262,
            "end": 268
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 269,
            "end": 278
          },
          "optional": false,
          "computed": false,
          "start": 262,
          "end": 278
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 279,
                  "end": 285
                },
                "property": {
                  "type": "Identifier",
                  "name": "prototype",
                  "start": 286,
                  "end": 295
                },
                "optional": false,
                "computed": false,
                "start": 279,
                "end": 295
              },
              "property": {
                "type": "Identifier",
                "name": "valueOf",
                "start": 296,
                "end": 303
              },
              "optional": false,
              "computed": false,
              "start": 279,
              "end": 303
            },
            "arguments": [],
            "optional": false,
            "start": 279,
            "end": 305
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 307,
            "end": 308
          },
          {
            "type": "Literal",
            "value": "Number.prototype.valueOf() must return 0",
            "raw": "'Number.prototype.valueOf() must return 0'",
            "start": 310,
            "end": 352
          }
        ],
        "optional": false,
        "start": 262,
        "end": 353
      },
      "start": 262,
      "end": 354
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 355,
            "end": 361
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 362,
            "end": 371
          },
          "optional": false,
          "computed": false,
          "start": 355,
          "end": 371
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 377,
                    "end": 383
                  },
                  "arguments": [],
                  "start": 373,
                  "end": 385
                },
                "start": 372,
                "end": 386
              },
              "property": {
                "type": "Identifier",
                "name": "valueOf",
                "start": 387,
                "end": 394
              },
              "optional": false,
              "computed": false,
              "start": 372,
              "end": 394
            },
            "arguments": [],
            "optional": false,
            "start": 372,
            "end": 396
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 398,
            "end": 399
          },
          {
            "type": "Literal",
            "value": "(new Number()).valueOf() must return 0",
            "raw": "'(new Number()).valueOf() must return 0'",
            "start": 401,
            "end": 441
          }
        ],
        "optional": false,
        "start": 355,
        "end": 442
      },
      "start": 355,
      "end": 443
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 444,
            "end": 450
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 451,
            "end": 460
          },
          "optional": false,
          "computed": false,
          "start": 444,
          "end": 460
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 466,
                    "end": 472
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 473,
                      "end": 474
                    }
                  ],
                  "start": 462,
                  "end": 475
                },
                "start": 461,
                "end": 476
              },
              "property": {
                "type": "Identifier",
                "name": "valueOf",
                "start": 477,
                "end": 484
              },
              "optional": false,
              "computed": false,
              "start": 461,
              "end": 484
            },
            "arguments": [],
            "optional": false,
            "start": 461,
            "end": 486
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 488,
            "end": 489
          },
          {
            "type": "Literal",
            "value": "(new Number(0)).valueOf() must return 0",
            "raw": "'(new Number(0)).valueOf() must return 0'",
            "start": 491,
            "end": 532
          }
        ],
        "optional": false,
        "start": 444,
        "end": 533
      },
      "start": 444,
      "end": 534
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 535,
            "end": 541
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 542,
            "end": 551
          },
          "optional": false,
          "computed": false,
          "start": 535,
          "end": 551
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 557,
                    "end": 563
                  },
                  "arguments": [
                    {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 565,
                        "end": 566
                      },
                      "prefix": true,
                      "start": 564,
                      "end": 566
                    }
                  ],
                  "start": 553,
                  "end": 567
                },
                "start": 552,
                "end": 568
              },
              "property": {
                "type": "Identifier",
                "name": "valueOf",
                "start": 569,
                "end": 576
              },
              "optional": false,
              "computed": false,
              "start": 552,
              "end": 576
            },
            "arguments": [],
            "optional": false,
            "start": 552,
            "end": 578
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 581,
              "end": 582
            },
            "prefix": true,
            "start": 580,
            "end": 582
          },
          {
            "type": "Literal",
            "value": "(new Number(-1)).valueOf() must return -1",
            "raw": "'(new Number(-1)).valueOf() must return -1'",
            "start": 584,
            "end": 627
          }
        ],
        "optional": false,
        "start": 535,
        "end": 628
      },
      "start": 535,
      "end": 629
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 630,
            "end": 636
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 637,
            "end": 646
          },
          "optional": false,
          "computed": false,
          "start": 630,
          "end": 646
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 652,
                    "end": 658
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 659,
                      "end": 660
                    }
                  ],
                  "start": 648,
                  "end": 661
                },
                "start": 647,
                "end": 662
              },
              "property": {
                "type": "Identifier",
                "name": "valueOf",
                "start": 663,
                "end": 670
              },
              "optional": false,
              "computed": false,
              "start": 647,
              "end": 670
            },
            "arguments": [],
            "optional": false,
            "start": 647,
            "end": 672
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 674,
            "end": 675
          },
          {
            "type": "Literal",
            "value": "(new Number(1)).valueOf() must return 1",
            "raw": "'(new Number(1)).valueOf() must return 1'",
            "start": 677,
            "end": 718
          }
        ],
        "optional": false,
        "start": 630,
        "end": 719
      },
      "start": 630,
      "end": 720
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 722,
            "end": 728
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 729,
            "end": 738
          },
          "optional": false,
          "computed": false,
          "start": 722,
          "end": 738
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 746,
                  "end": 752
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "NaN",
                    "start": 753,
                    "end": 756
                  }
                ],
                "start": 742,
                "end": 757
              },
              "property": {
                "type": "Identifier",
                "name": "valueOf",
                "start": 758,
                "end": 765
              },
              "optional": false,
              "computed": false,
              "start": 742,
              "end": 765
            },
            "arguments": [],
            "optional": false,
            "start": 742,
            "end": 767
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 771,
            "end": 774
          },
          {
            "type": "Literal",
            "value": "new Number(NaN).valueOf() returns NaN",
            "raw": "'new Number(NaN).valueOf() returns NaN'",
            "start": 778,
            "end": 817
          }
        ],
        "optional": false,
        "start": 722,
        "end": 819
      },
      "start": 722,
      "end": 820
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 822,
            "end": 828
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 829,
            "end": 838
          },
          "optional": false,
          "computed": false,
          "start": 822,
          "end": 838
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 847,
                    "end": 853
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Number",
                        "start": 854,
                        "end": 860
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "POSITIVE_INFINITY",
                        "start": 861,
                        "end": 878
                      },
                      "optional": false,
                      "computed": false,
                      "start": 854,
                      "end": 878
                    }
                  ],
                  "start": 843,
                  "end": 879
                },
                "start": 842,
                "end": 880
              },
              "property": {
                "type": "Identifier",
                "name": "valueOf",
                "start": 881,
                "end": 888
              },
              "optional": false,
              "computed": false,
              "start": 842,
              "end": 888
            },
            "arguments": [],
            "optional": false,
            "start": 842,
            "end": 890
          },
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Number",
              "start": 894,
              "end": 900
            },
            "property": {
              "type": "Identifier",
              "name": "POSITIVE_INFINITY",
              "start": 901,
              "end": 918
            },
            "optional": false,
            "computed": false,
            "start": 894,
            "end": 918
          },
          {
            "type": "Literal",
            "value": "(new Number(Number.POSITIVE_INFINITY)).valueOf() returns Number.POSITIVE_INFINITY",
            "raw": "'(new Number(Number.POSITIVE_INFINITY)).valueOf() returns Number.POSITIVE_INFINITY'",
            "start": 922,
            "end": 1005
          }
        ],
        "optional": false,
        "start": 822,
        "end": 1007
      },
      "start": 822,
      "end": 1008
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1010,
            "end": 1016
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1017,
            "end": 1026
          },
          "optional": false,
          "computed": false,
          "start": 1010,
          "end": 1026
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 1035,
                    "end": 1041
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Number",
                        "start": 1042,
                        "end": 1048
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "NEGATIVE_INFINITY",
                        "start": 1049,
                        "end": 1066
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1042,
                      "end": 1066
                    }
                  ],
                  "start": 1031,
                  "end": 1067
                },
                "start": 1030,
                "end": 1068
              },
              "property": {
                "type": "Identifier",
                "name": "valueOf",
                "start": 1069,
                "end": 1076
              },
              "optional": false,
              "computed": false,
              "start": 1030,
              "end": 1076
            },
            "arguments": [],
            "optional": false,
            "start": 1030,
            "end": 1078
          },
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Number",
              "start": 1082,
              "end": 1088
            },
            "property": {
              "type": "Identifier",
              "name": "NEGATIVE_INFINITY",
              "start": 1089,
              "end": 1106
            },
            "optional": false,
            "computed": false,
            "start": 1082,
            "end": 1106
          },
          {
            "type": "Literal",
            "value": "(new Number(Number.NEGATIVE_INFINITY)).valueOf() returns Number.NEGATIVE_INFINITY",
            "raw": "'(new Number(Number.NEGATIVE_INFINITY)).valueOf() returns Number.NEGATIVE_INFINITY'",
            "start": 1110,
            "end": 1193
          }
        ],
        "optional": false,
        "start": 1010,
        "end": 1195
      },
      "start": 1010,
      "end": 1196
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1197
}