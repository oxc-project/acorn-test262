{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 323,
            "end": 329
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 330,
            "end": 339
          },
          "optional": false,
          "computed": false,
          "start": 323,
          "end": 339
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 340,
              "end": 346
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "0xa",
                "raw": "\"0xa\"",
                "start": 347,
                "end": 352
              }
            ],
            "optional": false,
            "start": 340,
            "end": 353
          },
          {
            "type": "Literal",
            "value": 10,
            "raw": "10",
            "start": 355,
            "end": 357
          },
          {
            "type": "Literal",
            "value": "Number(\"0xa\") must return 10",
            "raw": "'Number(\"0xa\") must return 10'",
            "start": 359,
            "end": 389
          }
        ],
        "optional": false,
        "start": 323,
        "end": 390
      },
      "start": 323,
      "end": 391
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 392,
            "end": 398
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 399,
            "end": 408
          },
          "optional": false,
          "computed": false,
          "start": 392,
          "end": 408
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 409,
              "end": 415
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "0xA",
                "raw": "\"0xA\"",
                "start": 416,
                "end": 421
              }
            ],
            "optional": false,
            "start": 409,
            "end": 422
          },
          {
            "type": "Literal",
            "value": 10,
            "raw": "10",
            "start": 424,
            "end": 426
          },
          {
            "type": "Literal",
            "value": "Number(\"0xA\") must return 10",
            "raw": "'Number(\"0xA\") must return 10'",
            "start": 428,
            "end": 458
          }
        ],
        "optional": false,
        "start": 392,
        "end": 459
      },
      "start": 392,
      "end": 460
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 461,
            "end": 467
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 468,
            "end": 477
          },
          "optional": false,
          "computed": false,
          "start": 461,
          "end": 477
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 478,
              "end": 484
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "0Xa",
                "raw": "\"0Xa\"",
                "start": 485,
                "end": 490
              }
            ],
            "optional": false,
            "start": 478,
            "end": 491
          },
          {
            "type": "Literal",
            "value": 10,
            "raw": "10",
            "start": 493,
            "end": 495
          },
          {
            "type": "Literal",
            "value": "Number(\"0Xa\") must return 10",
            "raw": "'Number(\"0Xa\") must return 10'",
            "start": 497,
            "end": 527
          }
        ],
        "optional": false,
        "start": 461,
        "end": 528
      },
      "start": 461,
      "end": 529
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 530,
            "end": 536
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 537,
            "end": 546
          },
          "optional": false,
          "computed": false,
          "start": 530,
          "end": 546
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "+",
            "argument": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "Literal",
                "value": "0XA",
                "raw": "\"0XA\"",
                "start": 549,
                "end": 554
              },
              "start": 548,
              "end": 555
            },
            "prefix": true,
            "start": 547,
            "end": 555
          },
          {
            "type": "Literal",
            "value": 10,
            "raw": "10",
            "start": 557,
            "end": 559
          },
          {
            "type": "Literal",
            "value": "The value of `+(\"0XA\")` is expected to be 10",
            "raw": "'The value of `+(\"0XA\")` is expected to be 10'",
            "start": 561,
            "end": 607
          }
        ],
        "optional": false,
        "start": 530,
        "end": 608
      },
      "start": 530,
      "end": 609
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 610
}