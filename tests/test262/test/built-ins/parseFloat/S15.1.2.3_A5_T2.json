{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 315,
            "end": 325
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "-11.",
              "raw": "\"-11.\"",
              "start": 326,
              "end": 332
            }
          ],
          "optional": false,
          "start": 315,
          "end": 333
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 11,
            "raw": "11",
            "start": 339,
            "end": 341
          },
          "prefix": true,
          "start": 338,
          "end": 341
        },
        "start": 315,
        "end": 341
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 357,
                "end": 369
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: parseFloat(\"-11.\") === -11. Actual: ",
                    "raw": "'#1: parseFloat(\"-11.\") === -11. Actual: '",
                    "start": 370,
                    "end": 412
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 416,
                        "end": 426
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "-11.",
                          "raw": "\"-11.\"",
                          "start": 427,
                          "end": 433
                        }
                      ],
                      "optional": false,
                      "start": 416,
                      "end": 434
                    },
                    "start": 415,
                    "end": 435
                  },
                  "start": 370,
                  "end": 435
                }
              ],
              "start": 353,
              "end": 436
            },
            "start": 347,
            "end": 437
          }
        ],
        "start": 343,
        "end": 439
      },
      "alternate": null,
      "start": 311,
      "end": 439
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 455,
            "end": 465
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "01.",
              "raw": "\"01.\"",
              "start": 466,
              "end": 471
            }
          ],
          "optional": false,
          "start": 455,
          "end": 472
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 477,
          "end": 478
        },
        "start": 455,
        "end": 478
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 494,
                "end": 506
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: parseFloat(\"01.\") === 1. Actual: ",
                    "raw": "'#2: parseFloat(\"01.\") === 1. Actual: '",
                    "start": 507,
                    "end": 546
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 550,
                        "end": 560
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "01.",
                          "raw": "\"01.\"",
                          "start": 561,
                          "end": 566
                        }
                      ],
                      "optional": false,
                      "start": 550,
                      "end": 567
                    },
                    "start": 549,
                    "end": 568
                  },
                  "start": 507,
                  "end": 568
                }
              ],
              "start": 490,
              "end": 569
            },
            "start": 484,
            "end": 570
          }
        ],
        "start": 480,
        "end": 572
      },
      "alternate": null,
      "start": 451,
      "end": 572
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 588,
            "end": 598
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "+11.1",
              "raw": "\"+11.1\"",
              "start": 599,
              "end": 606
            }
          ],
          "optional": false,
          "start": 588,
          "end": 607
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 11.1,
          "raw": "11.1",
          "start": 612,
          "end": 616
        },
        "start": 588,
        "end": 616
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 632,
                "end": 644
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: parseFloat(\"+11.1\") === 11.1. Actual: ",
                    "raw": "'#3: parseFloat(\"+11.1\") === 11.1. Actual: '",
                    "start": 645,
                    "end": 689
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 693,
                        "end": 703
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "+11.1",
                          "raw": "\"+11.1\"",
                          "start": 704,
                          "end": 711
                        }
                      ],
                      "optional": false,
                      "start": 693,
                      "end": 712
                    },
                    "start": 692,
                    "end": 713
                  },
                  "start": 645,
                  "end": 713
                }
              ],
              "start": 628,
              "end": 714
            },
            "start": 622,
            "end": 715
          }
        ],
        "start": 618,
        "end": 717
      },
      "alternate": null,
      "start": 584,
      "end": 717
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 733,
            "end": 743
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "01.1",
              "raw": "\"01.1\"",
              "start": 744,
              "end": 750
            }
          ],
          "optional": false,
          "start": 733,
          "end": 751
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1.1,
          "raw": "1.1",
          "start": 756,
          "end": 759
        },
        "start": 733,
        "end": 759
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 775,
                "end": 787
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: parseFloat(\"01.1\") === 1.1. Actual: ",
                    "raw": "'#4: parseFloat(\"01.1\") === 1.1. Actual: '",
                    "start": 788,
                    "end": 830
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 834,
                        "end": 844
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "01.1",
                          "raw": "\"01.1\"",
                          "start": 845,
                          "end": 851
                        }
                      ],
                      "optional": false,
                      "start": 834,
                      "end": 852
                    },
                    "start": 833,
                    "end": 853
                  },
                  "start": 788,
                  "end": 853
                }
              ],
              "start": 771,
              "end": 854
            },
            "start": 765,
            "end": 855
          }
        ],
        "start": 761,
        "end": 857
      },
      "alternate": null,
      "start": 729,
      "end": 857
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 873,
            "end": 883
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "-11.e-1",
              "raw": "\"-11.e-1\"",
              "start": 884,
              "end": 893
            }
          ],
          "optional": false,
          "start": 873,
          "end": 894
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1.1,
            "raw": "1.1",
            "start": 900,
            "end": 903
          },
          "prefix": true,
          "start": 899,
          "end": 903
        },
        "start": 873,
        "end": 903
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 919,
                "end": 931
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: parseFloat(\"-11.e-1\") === -1.1. Actual: ",
                    "raw": "'#5: parseFloat(\"-11.e-1\") === -1.1. Actual: '",
                    "start": 932,
                    "end": 978
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 982,
                        "end": 992
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "-11.e-1",
                          "raw": "\"-11.e-1\"",
                          "start": 993,
                          "end": 1002
                        }
                      ],
                      "optional": false,
                      "start": 982,
                      "end": 1003
                    },
                    "start": 981,
                    "end": 1004
                  },
                  "start": 932,
                  "end": 1004
                }
              ],
              "start": 915,
              "end": 1005
            },
            "start": 909,
            "end": 1006
          }
        ],
        "start": 905,
        "end": 1008
      },
      "alternate": null,
      "start": 869,
      "end": 1008
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1024,
            "end": 1034
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "01.e1",
              "raw": "\"01.e1\"",
              "start": 1035,
              "end": 1042
            }
          ],
          "optional": false,
          "start": 1024,
          "end": 1043
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 10,
          "raw": "10",
          "start": 1048,
          "end": 1050
        },
        "start": 1024,
        "end": 1050
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1066,
                "end": 1078
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: parseFloat(\"01.e1\") === 10. Actual: ",
                    "raw": "'#6: parseFloat(\"01.e1\") === 10. Actual: '",
                    "start": 1079,
                    "end": 1121
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1125,
                        "end": 1135
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "01.e1",
                          "raw": "\"01.e1\"",
                          "start": 1136,
                          "end": 1143
                        }
                      ],
                      "optional": false,
                      "start": 1125,
                      "end": 1144
                    },
                    "start": 1124,
                    "end": 1145
                  },
                  "start": 1079,
                  "end": 1145
                }
              ],
              "start": 1062,
              "end": 1146
            },
            "start": 1056,
            "end": 1147
          }
        ],
        "start": 1052,
        "end": 1149
      },
      "alternate": null,
      "start": 1020,
      "end": 1149
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1165,
            "end": 1175
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "+11.22e-1",
              "raw": "\"+11.22e-1\"",
              "start": 1176,
              "end": 1187
            }
          ],
          "optional": false,
          "start": 1165,
          "end": 1188
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1.122,
          "raw": "1.122",
          "start": 1193,
          "end": 1198
        },
        "start": 1165,
        "end": 1198
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1214,
                "end": 1226
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: parseFloat(\"+11.22e-1\") === 1.122. Actual: ",
                    "raw": "'#7: parseFloat(\"+11.22e-1\") === 1.122. Actual: '",
                    "start": 1227,
                    "end": 1276
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1280,
                        "end": 1290
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "+11.22e-1",
                          "raw": "\"+11.22e-1\"",
                          "start": 1291,
                          "end": 1302
                        }
                      ],
                      "optional": false,
                      "start": 1280,
                      "end": 1303
                    },
                    "start": 1279,
                    "end": 1304
                  },
                  "start": 1227,
                  "end": 1304
                }
              ],
              "start": 1210,
              "end": 1305
            },
            "start": 1204,
            "end": 1306
          }
        ],
        "start": 1200,
        "end": 1308
      },
      "alternate": null,
      "start": 1161,
      "end": 1308
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1324,
            "end": 1334
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "01.01e1",
              "raw": "\"01.01e1\"",
              "start": 1335,
              "end": 1344
            }
          ],
          "optional": false,
          "start": 1324,
          "end": 1345
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 10.1,
          "raw": "10.1",
          "start": 1350,
          "end": 1354
        },
        "start": 1324,
        "end": 1354
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1370,
                "end": 1382
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: parseFloat(\"01.01e1\") === 10.1. Actual: ",
                    "raw": "'#8: parseFloat(\"01.01e1\") === 10.1. Actual: '",
                    "start": 1383,
                    "end": 1429
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1433,
                        "end": 1443
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "01.01e1",
                          "raw": "\"01.01e1\"",
                          "start": 1444,
                          "end": 1453
                        }
                      ],
                      "optional": false,
                      "start": 1433,
                      "end": 1454
                    },
                    "start": 1432,
                    "end": 1455
                  },
                  "start": 1383,
                  "end": 1455
                }
              ],
              "start": 1366,
              "end": 1456
            },
            "start": 1360,
            "end": 1457
          }
        ],
        "start": 1356,
        "end": 1459
      },
      "alternate": null,
      "start": 1320,
      "end": 1459
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1475,
            "end": 1485
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "001.",
              "raw": "\"001.\"",
              "start": 1486,
              "end": 1492
            }
          ],
          "optional": false,
          "start": 1475,
          "end": 1493
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1498,
          "end": 1499
        },
        "start": 1475,
        "end": 1499
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1515,
                "end": 1527
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: parseFloat(\"001.\") === 1. Actual: ",
                    "raw": "'#9: parseFloat(\"001.\") === 1. Actual: '",
                    "start": 1528,
                    "end": 1568
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1572,
                        "end": 1582
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "001.",
                          "raw": "\"001.\"",
                          "start": 1583,
                          "end": 1589
                        }
                      ],
                      "optional": false,
                      "start": 1572,
                      "end": 1590
                    },
                    "start": 1571,
                    "end": 1591
                  },
                  "start": 1528,
                  "end": 1591
                }
              ],
              "start": 1511,
              "end": 1592
            },
            "start": 1505,
            "end": 1593
          }
        ],
        "start": 1501,
        "end": 1595
      },
      "alternate": null,
      "start": 1471,
      "end": 1595
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1612,
            "end": 1622
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "010.",
              "raw": "\"010.\"",
              "start": 1623,
              "end": 1629
            }
          ],
          "optional": false,
          "start": 1612,
          "end": 1630
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 10,
          "raw": "10",
          "start": 1635,
          "end": 1637
        },
        "start": 1612,
        "end": 1637
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1653,
                "end": 1665
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: parseFloat(\"010.\") === 10. Actual: ",
                    "raw": "'#10: parseFloat(\"010.\") === 10. Actual: '",
                    "start": 1666,
                    "end": 1708
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1712,
                        "end": 1722
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "010.",
                          "raw": "\"010.\"",
                          "start": 1723,
                          "end": 1729
                        }
                      ],
                      "optional": false,
                      "start": 1712,
                      "end": 1730
                    },
                    "start": 1711,
                    "end": 1731
                  },
                  "start": 1666,
                  "end": 1731
                }
              ],
              "start": 1649,
              "end": 1732
            },
            "start": 1643,
            "end": 1733
          }
        ],
        "start": 1639,
        "end": 1735
      },
      "alternate": null,
      "start": 1608,
      "end": 1735
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1736
}