{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 297,
            "end": 307
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "+.1",
              "raw": "\"+.1\"",
              "start": 308,
              "end": 313
            }
          ],
          "optional": false,
          "start": 297,
          "end": 314
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0.1,
          "raw": "0.1",
          "start": 319,
          "end": 322
        },
        "start": 297,
        "end": 322
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 338,
                "end": 350
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: parseFloat(\"+.1\") === 0.1. Actual: ",
                    "raw": "'#1: parseFloat(\"+.1\") === 0.1. Actual: '",
                    "start": 351,
                    "end": 392
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 396,
                        "end": 406
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "+.1",
                          "raw": "\"+.1\"",
                          "start": 407,
                          "end": 412
                        }
                      ],
                      "optional": false,
                      "start": 396,
                      "end": 413
                    },
                    "start": 395,
                    "end": 414
                  },
                  "start": 351,
                  "end": 414
                }
              ],
              "start": 334,
              "end": 415
            },
            "start": 328,
            "end": 416
          }
        ],
        "start": 324,
        "end": 418
      },
      "alternate": null,
      "start": 293,
      "end": 418
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 434,
            "end": 444
          },
          "arguments": [
            {
              "type": "Literal",
              "value": ".01",
              "raw": "\".01\"",
              "start": 445,
              "end": 450
            }
          ],
          "optional": false,
          "start": 434,
          "end": 451
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0.01,
          "raw": "0.01",
          "start": 456,
          "end": 460
        },
        "start": 434,
        "end": 460
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 476,
                "end": 488
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: parseFloat(\".01\") === 0.01. Actual: ",
                    "raw": "'#2: parseFloat(\".01\") === 0.01. Actual: '",
                    "start": 489,
                    "end": 531
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 535,
                        "end": 545
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": ".01",
                          "raw": "\".01\"",
                          "start": 546,
                          "end": 551
                        }
                      ],
                      "optional": false,
                      "start": 535,
                      "end": 552
                    },
                    "start": 534,
                    "end": 553
                  },
                  "start": 489,
                  "end": 553
                }
              ],
              "start": 472,
              "end": 554
            },
            "start": 466,
            "end": 555
          }
        ],
        "start": 462,
        "end": 557
      },
      "alternate": null,
      "start": 430,
      "end": 557
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 573,
            "end": 583
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "+.22e-1",
              "raw": "\"+.22e-1\"",
              "start": 584,
              "end": 593
            }
          ],
          "optional": false,
          "start": 573,
          "end": 594
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0.022,
          "raw": "0.022",
          "start": 599,
          "end": 604
        },
        "start": 573,
        "end": 604
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 620,
                "end": 632
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: parseFloat(\"+.22e-1\") === 0.022. Actual: ",
                    "raw": "'#3: parseFloat(\"+.22e-1\") === 0.022. Actual: '",
                    "start": 633,
                    "end": 680
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 684,
                        "end": 694
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "+.22e-1",
                          "raw": "\"+.22e-1\"",
                          "start": 695,
                          "end": 704
                        }
                      ],
                      "optional": false,
                      "start": 684,
                      "end": 705
                    },
                    "start": 683,
                    "end": 706
                  },
                  "start": 633,
                  "end": 706
                }
              ],
              "start": 616,
              "end": 707
            },
            "start": 610,
            "end": 708
          }
        ],
        "start": 606,
        "end": 710
      },
      "alternate": null,
      "start": 569,
      "end": 710
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 711
}