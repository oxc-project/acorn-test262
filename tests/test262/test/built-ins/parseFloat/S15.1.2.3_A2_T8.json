{
  "type": "Program",
  "start": 0,
  "end": 717,
  "body": [
    {
      "type": "IfStatement",
      "start": 280,
      "end": 452,
      "test": {
        "type": "BinaryExpression",
        "start": 284,
        "end": 329,
        "left": {
          "type": "CallExpression",
          "start": 284,
          "end": 307,
          "callee": {
            "type": "Identifier",
            "start": 284,
            "end": 294,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 295,
              "end": 306,
              "value": " 1.1",
              "raw": "\"\\u20281.1\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 312,
          "end": 329,
          "callee": {
            "type": "Identifier",
            "start": 312,
            "end": 322,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 323,
              "end": 328,
              "value": "1.1",
              "raw": "\"1.1\""
            }
          ],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 331,
        "end": 452,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 335,
            "end": 450,
            "argument": {
              "type": "NewExpression",
              "start": 341,
              "end": 449,
              "callee": {
                "type": "Identifier",
                "start": 345,
                "end": 357,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 358,
                  "end": 448,
                  "left": {
                    "type": "Literal",
                    "start": 358,
                    "end": 420,
                    "value": "#1: parseFloat(\"\\u20281.1\") === parseFloat(\"1.1\"). Actual: ",
                    "raw": "'#1: parseFloat(\"\\\\u20281.1\") === parseFloat(\"1.1\"). Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 423,
                    "end": 448,
                    "expression": {
                      "type": "CallExpression",
                      "start": 424,
                      "end": 447,
                      "callee": {
                        "type": "Identifier",
                        "start": 424,
                        "end": 434,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 435,
                          "end": 446,
                          "value": " 1.1",
                          "raw": "\"\\u20281.1\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 464,
      "end": 660,
      "test": {
        "type": "BinaryExpression",
        "start": 468,
        "end": 521,
        "left": {
          "type": "CallExpression",
          "start": 468,
          "end": 498,
          "callee": {
            "type": "Identifier",
            "start": 468,
            "end": 478,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 479,
              "end": 497,
              "value": "  -1.1",
              "raw": "\"\\u2028\\u2028-1.1\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 503,
          "end": 521,
          "callee": {
            "type": "Identifier",
            "start": 503,
            "end": 513,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 514,
              "end": 520,
              "value": "-1.1",
              "raw": "\"-1.1\""
            }
          ],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 523,
        "end": 660,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 527,
            "end": 658,
            "argument": {
              "type": "NewExpression",
              "start": 533,
              "end": 657,
              "callee": {
                "type": "Identifier",
                "start": 537,
                "end": 549,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 550,
                  "end": 656,
                  "left": {
                    "type": "Literal",
                    "start": 550,
                    "end": 621,
                    "value": "#2: parseFloat(\"\\u2028\\u2028-1.1\") === parseFloat(\"-1.1\"). Actual: ",
                    "raw": "'#2: parseFloat(\"\\\\u2028\\\\u2028-1.1\") === parseFloat(\"-1.1\"). Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 624,
                    "end": 656,
                    "expression": {
                      "type": "CallExpression",
                      "start": 625,
                      "end": 655,
                      "callee": {
                        "type": "Identifier",
                        "start": 625,
                        "end": 635,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 636,
                          "end": 654,
                          "value": "  -1.1",
                          "raw": "\"\\u2028\\u2028-1.1\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 672,
      "end": 716,
      "expression": {
        "type": "CallExpression",
        "start": 672,
        "end": 715,
        "callee": {
          "type": "MemberExpression",
          "start": 672,
          "end": 688,
          "object": {
            "type": "Identifier",
            "start": 672,
            "end": 678,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 679,
            "end": 688,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 689,
            "end": 709,
            "callee": {
              "type": "Identifier",
              "start": 689,
              "end": 699,
              "name": "parseFloat"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 700,
                "end": 708,
                "value": " ",
                "raw": "\"\\u2028\""
              }
            ],
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 711,
            "end": 714,
            "name": "NaN"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}