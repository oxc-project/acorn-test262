{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 359,
            "end": 369
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "0x",
              "raw": "\"0x\"",
              "start": 370,
              "end": 374
            }
          ],
          "optional": false,
          "start": 359,
          "end": 375
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 380,
          "end": 381
        },
        "start": 359,
        "end": 381
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 397,
                "end": 409
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: parseFloat(\"0x\") === 0. Actual: ",
                    "raw": "'#1: parseFloat(\"0x\") === 0. Actual: '",
                    "start": 410,
                    "end": 448
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 452,
                        "end": 462
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "0x",
                          "raw": "\"0x\"",
                          "start": 463,
                          "end": 467
                        }
                      ],
                      "optional": false,
                      "start": 452,
                      "end": 468
                    },
                    "start": 451,
                    "end": 469
                  },
                  "start": 410,
                  "end": 469
                }
              ],
              "start": 393,
              "end": 470
            },
            "start": 387,
            "end": 471
          }
        ],
        "start": 383,
        "end": 473
      },
      "alternate": null,
      "start": 355,
      "end": 473
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 489,
            "end": 499
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "11x",
              "raw": "\"11x\"",
              "start": 500,
              "end": 505
            }
          ],
          "optional": false,
          "start": 489,
          "end": 506
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 11,
          "raw": "11",
          "start": 511,
          "end": 513
        },
        "start": 489,
        "end": 513
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 529,
                "end": 541
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: parseFloat(\"11x\") === 11. Actual: ",
                    "raw": "'#2: parseFloat(\"11x\") === 11. Actual: '",
                    "start": 542,
                    "end": 582
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 586,
                        "end": 596
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "11x",
                          "raw": "\"11x\"",
                          "start": 597,
                          "end": 602
                        }
                      ],
                      "optional": false,
                      "start": 586,
                      "end": 603
                    },
                    "start": 585,
                    "end": 604
                  },
                  "start": 542,
                  "end": 604
                }
              ],
              "start": 525,
              "end": 605
            },
            "start": 519,
            "end": 606
          }
        ],
        "start": 515,
        "end": 608
      },
      "alternate": null,
      "start": 485,
      "end": 608
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 624,
            "end": 634
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "11s1",
              "raw": "\"11s1\"",
              "start": 635,
              "end": 641
            }
          ],
          "optional": false,
          "start": 624,
          "end": 642
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 11,
          "raw": "11",
          "start": 647,
          "end": 649
        },
        "start": 624,
        "end": 649
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 665,
                "end": 677
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: parseFloat(\"11s1\") === 11. Actual: ",
                    "raw": "'#3: parseFloat(\"11s1\") === 11. Actual: '",
                    "start": 678,
                    "end": 719
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 723,
                        "end": 733
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "11s1",
                          "raw": "\"11s1\"",
                          "start": 734,
                          "end": 740
                        }
                      ],
                      "optional": false,
                      "start": 723,
                      "end": 741
                    },
                    "start": 722,
                    "end": 742
                  },
                  "start": 678,
                  "end": 742
                }
              ],
              "start": 661,
              "end": 743
            },
            "start": 655,
            "end": 744
          }
        ],
        "start": 651,
        "end": 746
      },
      "alternate": null,
      "start": 620,
      "end": 746
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 762,
            "end": 772
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "11.s1",
              "raw": "\"11.s1\"",
              "start": 773,
              "end": 780
            }
          ],
          "optional": false,
          "start": 762,
          "end": 781
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 11,
          "raw": "11",
          "start": 786,
          "end": 788
        },
        "start": 762,
        "end": 788
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 804,
                "end": 816
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: parseFloat(\"11.s1\") === 11. Actual: ",
                    "raw": "'#4: parseFloat(\"11.s1\") === 11. Actual: '",
                    "start": 817,
                    "end": 859
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 863,
                        "end": 873
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "11.s1",
                          "raw": "\"11.s1\"",
                          "start": 874,
                          "end": 881
                        }
                      ],
                      "optional": false,
                      "start": 863,
                      "end": 882
                    },
                    "start": 862,
                    "end": 883
                  },
                  "start": 817,
                  "end": 883
                }
              ],
              "start": 800,
              "end": 884
            },
            "start": 794,
            "end": 885
          }
        ],
        "start": 790,
        "end": 887
      },
      "alternate": null,
      "start": 758,
      "end": 887
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 903,
            "end": 913
          },
          "arguments": [
            {
              "type": "Literal",
              "value": ".0s1",
              "raw": "\".0s1\"",
              "start": 914,
              "end": 920
            }
          ],
          "optional": false,
          "start": 903,
          "end": 921
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 926,
          "end": 927
        },
        "start": 903,
        "end": 927
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 943,
                "end": 955
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: parseFloat(\".0s1\") === 0. Actual: ",
                    "raw": "'#5: parseFloat(\".0s1\") === 0. Actual: '",
                    "start": 956,
                    "end": 996
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1000,
                        "end": 1010
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": ".0s1",
                          "raw": "\".0s1\"",
                          "start": 1011,
                          "end": 1017
                        }
                      ],
                      "optional": false,
                      "start": 1000,
                      "end": 1018
                    },
                    "start": 999,
                    "end": 1019
                  },
                  "start": 956,
                  "end": 1019
                }
              ],
              "start": 939,
              "end": 1020
            },
            "start": 933,
            "end": 1021
          }
        ],
        "start": 929,
        "end": 1023
      },
      "alternate": null,
      "start": 899,
      "end": 1023
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1039,
            "end": 1049
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1.s1",
              "raw": "\"1.s1\"",
              "start": 1050,
              "end": 1056
            }
          ],
          "optional": false,
          "start": 1039,
          "end": 1057
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1062,
          "end": 1063
        },
        "start": 1039,
        "end": 1063
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1079,
                "end": 1091
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: parseFloat(\"1.s1\") === 1. Actual: ",
                    "raw": "'#6: parseFloat(\"1.s1\") === 1. Actual: '",
                    "start": 1092,
                    "end": 1132
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1136,
                        "end": 1146
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1.s1",
                          "raw": "\"1.s1\"",
                          "start": 1147,
                          "end": 1153
                        }
                      ],
                      "optional": false,
                      "start": 1136,
                      "end": 1154
                    },
                    "start": 1135,
                    "end": 1155
                  },
                  "start": 1092,
                  "end": 1155
                }
              ],
              "start": 1075,
              "end": 1156
            },
            "start": 1069,
            "end": 1157
          }
        ],
        "start": 1065,
        "end": 1159
      },
      "alternate": null,
      "start": 1035,
      "end": 1159
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1175,
            "end": 1185
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1..1",
              "raw": "\"1..1\"",
              "start": 1186,
              "end": 1192
            }
          ],
          "optional": false,
          "start": 1175,
          "end": 1193
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1198,
          "end": 1199
        },
        "start": 1175,
        "end": 1199
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1215,
                "end": 1227
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: parseFloat(\"1..1\") === 1. Actual: ",
                    "raw": "'#7: parseFloat(\"1..1\") === 1. Actual: '",
                    "start": 1228,
                    "end": 1268
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1272,
                        "end": 1282
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1..1",
                          "raw": "\"1..1\"",
                          "start": 1283,
                          "end": 1289
                        }
                      ],
                      "optional": false,
                      "start": 1272,
                      "end": 1290
                    },
                    "start": 1271,
                    "end": 1291
                  },
                  "start": 1228,
                  "end": 1291
                }
              ],
              "start": 1211,
              "end": 1292
            },
            "start": 1205,
            "end": 1293
          }
        ],
        "start": 1201,
        "end": 1295
      },
      "alternate": null,
      "start": 1171,
      "end": 1295
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1311,
            "end": 1321
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "0.1.1",
              "raw": "\"0.1.1\"",
              "start": 1322,
              "end": 1329
            }
          ],
          "optional": false,
          "start": 1311,
          "end": 1330
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0.1,
          "raw": "0.1",
          "start": 1335,
          "end": 1338
        },
        "start": 1311,
        "end": 1338
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1354,
                "end": 1366
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: parseFloat(\"0.1.1\") === 0.1. Actual: ",
                    "raw": "'#8: parseFloat(\"0.1.1\") === 0.1. Actual: '",
                    "start": 1367,
                    "end": 1410
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1414,
                        "end": 1424
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "0.1.1",
                          "raw": "\"0.1.1\"",
                          "start": 1425,
                          "end": 1432
                        }
                      ],
                      "optional": false,
                      "start": 1414,
                      "end": 1433
                    },
                    "start": 1413,
                    "end": 1434
                  },
                  "start": 1367,
                  "end": 1434
                }
              ],
              "start": 1350,
              "end": 1435
            },
            "start": 1344,
            "end": 1436
          }
        ],
        "start": 1340,
        "end": 1438
      },
      "alternate": null,
      "start": 1307,
      "end": 1438
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1454,
            "end": 1464
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "0. 1",
              "raw": "\"0. 1\"",
              "start": 1465,
              "end": 1471
            }
          ],
          "optional": false,
          "start": 1454,
          "end": 1472
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1477,
          "end": 1478
        },
        "start": 1454,
        "end": 1478
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1494,
                "end": 1506
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: parseFloat(\"0. 1\") === 0. Actual: ",
                    "raw": "'#9: parseFloat(\"0. 1\") === 0. Actual: '",
                    "start": 1507,
                    "end": 1547
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1551,
                        "end": 1561
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "0. 1",
                          "raw": "\"0. 1\"",
                          "start": 1562,
                          "end": 1568
                        }
                      ],
                      "optional": false,
                      "start": 1551,
                      "end": 1569
                    },
                    "start": 1550,
                    "end": 1570
                  },
                  "start": 1507,
                  "end": 1570
                }
              ],
              "start": 1490,
              "end": 1571
            },
            "start": 1484,
            "end": 1572
          }
        ],
        "start": 1480,
        "end": 1574
      },
      "alternate": null,
      "start": 1450,
      "end": 1574
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1575
}