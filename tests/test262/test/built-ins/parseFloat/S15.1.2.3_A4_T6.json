{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 383,
            "end": 393
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "+.1string",
              "raw": "\"+.1string\"",
              "start": 394,
              "end": 405
            }
          ],
          "optional": false,
          "start": 383,
          "end": 406
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0.1,
          "raw": "0.1",
          "start": 411,
          "end": 414
        },
        "start": 383,
        "end": 414
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 430,
                "end": 442
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: parseFloat(\"+.1string\") === 0.1. Actual: ",
                    "raw": "'#1: parseFloat(\"+.1string\") === 0.1. Actual: '",
                    "start": 443,
                    "end": 490
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 494,
                        "end": 504
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "+.1string",
                          "raw": "\"+.1string\"",
                          "start": 505,
                          "end": 516
                        }
                      ],
                      "optional": false,
                      "start": 494,
                      "end": 517
                    },
                    "start": 493,
                    "end": 518
                  },
                  "start": 443,
                  "end": 518
                }
              ],
              "start": 426,
              "end": 519
            },
            "start": 420,
            "end": 520
          }
        ],
        "start": 416,
        "end": 522
      },
      "alternate": null,
      "start": 379,
      "end": 522
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 538,
            "end": 548
          },
          "arguments": [
            {
              "type": "Literal",
              "value": ".01string",
              "raw": "\".01string\"",
              "start": 549,
              "end": 560
            }
          ],
          "optional": false,
          "start": 538,
          "end": 561
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0.01,
          "raw": "0.01",
          "start": 566,
          "end": 570
        },
        "start": 538,
        "end": 570
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 586,
                "end": 598
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: parseFloat(\".01string\") === 0.01. Actual: ",
                    "raw": "'#2: parseFloat(\".01string\") === 0.01. Actual: '",
                    "start": 599,
                    "end": 647
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 651,
                        "end": 661
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": ".01string",
                          "raw": "\".01string\"",
                          "start": 662,
                          "end": 673
                        }
                      ],
                      "optional": false,
                      "start": 651,
                      "end": 674
                    },
                    "start": 650,
                    "end": 675
                  },
                  "start": 599,
                  "end": 675
                }
              ],
              "start": 582,
              "end": 676
            },
            "start": 576,
            "end": 677
          }
        ],
        "start": 572,
        "end": 679
      },
      "alternate": null,
      "start": 534,
      "end": 679
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 695,
            "end": 705
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "+.22e-1string",
              "raw": "\"+.22e-1string\"",
              "start": 706,
              "end": 721
            }
          ],
          "optional": false,
          "start": 695,
          "end": 722
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0.022,
          "raw": "0.022",
          "start": 727,
          "end": 732
        },
        "start": 695,
        "end": 732
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 748,
                "end": 760
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: parseFloat(\"+.22e-1string\") === 0.022. Actual: ",
                    "raw": "'#3: parseFloat(\"+.22e-1string\") === 0.022. Actual: '",
                    "start": 761,
                    "end": 814
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 818,
                        "end": 828
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "+.22e-1string",
                          "raw": "\"+.22e-1string\"",
                          "start": 829,
                          "end": 844
                        }
                      ],
                      "optional": false,
                      "start": 818,
                      "end": 845
                    },
                    "start": 817,
                    "end": 846
                  },
                  "start": 761,
                  "end": 846
                }
              ],
              "start": 744,
              "end": 847
            },
            "start": 738,
            "end": 848
          }
        ],
        "start": 734,
        "end": 850
      },
      "alternate": null,
      "start": 691,
      "end": 850
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 851
}