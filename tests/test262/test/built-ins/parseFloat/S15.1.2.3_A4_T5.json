{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 401,
            "end": 411
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "-11.string",
              "raw": "\"-11.string\"",
              "start": 412,
              "end": 424
            }
          ],
          "optional": false,
          "start": 401,
          "end": 425
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 11,
            "raw": "11",
            "start": 431,
            "end": 433
          },
          "prefix": true,
          "start": 430,
          "end": 433
        },
        "start": 401,
        "end": 433
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 449,
                "end": 461
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: parseFloat(\"-11.string\") === -11. Actual: ",
                    "raw": "'#1: parseFloat(\"-11.string\") === -11. Actual: '",
                    "start": 462,
                    "end": 510
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 514,
                        "end": 524
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "-11.string",
                          "raw": "\"-11.string\"",
                          "start": 525,
                          "end": 537
                        }
                      ],
                      "optional": false,
                      "start": 514,
                      "end": 538
                    },
                    "start": 513,
                    "end": 539
                  },
                  "start": 462,
                  "end": 539
                }
              ],
              "start": 445,
              "end": 540
            },
            "start": 439,
            "end": 541
          }
        ],
        "start": 435,
        "end": 543
      },
      "alternate": null,
      "start": 397,
      "end": 543
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 559,
            "end": 569
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "01.string",
              "raw": "\"01.string\"",
              "start": 570,
              "end": 581
            }
          ],
          "optional": false,
          "start": 559,
          "end": 582
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 587,
          "end": 588
        },
        "start": 559,
        "end": 588
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 604,
                "end": 616
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: parseFloat(\"01.string\") === 1. Actual: ",
                    "raw": "'#2: parseFloat(\"01.string\") === 1. Actual: '",
                    "start": 617,
                    "end": 662
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 666,
                        "end": 676
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "01.string",
                          "raw": "\"01.string\"",
                          "start": 677,
                          "end": 688
                        }
                      ],
                      "optional": false,
                      "start": 666,
                      "end": 689
                    },
                    "start": 665,
                    "end": 690
                  },
                  "start": 617,
                  "end": 690
                }
              ],
              "start": 600,
              "end": 691
            },
            "start": 594,
            "end": 692
          }
        ],
        "start": 590,
        "end": 694
      },
      "alternate": null,
      "start": 555,
      "end": 694
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 710,
            "end": 720
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "+11.1string",
              "raw": "\"+11.1string\"",
              "start": 721,
              "end": 734
            }
          ],
          "optional": false,
          "start": 710,
          "end": 735
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 11.1,
          "raw": "11.1",
          "start": 740,
          "end": 744
        },
        "start": 710,
        "end": 744
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 760,
                "end": 772
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: parseFloat(\"+11.1string\") === 11.1. Actual: ",
                    "raw": "'#3: parseFloat(\"+11.1string\") === 11.1. Actual: '",
                    "start": 773,
                    "end": 823
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 827,
                        "end": 837
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "+11.1string",
                          "raw": "\"+11.1string\"",
                          "start": 838,
                          "end": 851
                        }
                      ],
                      "optional": false,
                      "start": 827,
                      "end": 852
                    },
                    "start": 826,
                    "end": 853
                  },
                  "start": 773,
                  "end": 853
                }
              ],
              "start": 756,
              "end": 854
            },
            "start": 750,
            "end": 855
          }
        ],
        "start": 746,
        "end": 857
      },
      "alternate": null,
      "start": 706,
      "end": 857
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 873,
            "end": 883
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "01.1string",
              "raw": "\"01.1string\"",
              "start": 884,
              "end": 896
            }
          ],
          "optional": false,
          "start": 873,
          "end": 897
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1.1,
          "raw": "1.1",
          "start": 902,
          "end": 905
        },
        "start": 873,
        "end": 905
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 921,
                "end": 933
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: parseFloat(\"01.1string\") === 1.1. Actual: ",
                    "raw": "'#4: parseFloat(\"01.1string\") === 1.1. Actual: '",
                    "start": 934,
                    "end": 982
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 986,
                        "end": 996
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "01.1string",
                          "raw": "\"01.1string\"",
                          "start": 997,
                          "end": 1009
                        }
                      ],
                      "optional": false,
                      "start": 986,
                      "end": 1010
                    },
                    "start": 985,
                    "end": 1011
                  },
                  "start": 934,
                  "end": 1011
                }
              ],
              "start": 917,
              "end": 1012
            },
            "start": 911,
            "end": 1013
          }
        ],
        "start": 907,
        "end": 1015
      },
      "alternate": null,
      "start": 869,
      "end": 1015
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1031,
            "end": 1041
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "-11.e-1string",
              "raw": "\"-11.e-1string\"",
              "start": 1042,
              "end": 1057
            }
          ],
          "optional": false,
          "start": 1031,
          "end": 1058
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1.1,
            "raw": "1.1",
            "start": 1064,
            "end": 1067
          },
          "prefix": true,
          "start": 1063,
          "end": 1067
        },
        "start": 1031,
        "end": 1067
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1083,
                "end": 1095
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: parseFloat(\"-11.e-1string\") === -1.1. Actual: ",
                    "raw": "'#5: parseFloat(\"-11.e-1string\") === -1.1. Actual: '",
                    "start": 1096,
                    "end": 1148
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1152,
                        "end": 1162
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "-11.e-1string",
                          "raw": "\"-11.e-1string\"",
                          "start": 1163,
                          "end": 1178
                        }
                      ],
                      "optional": false,
                      "start": 1152,
                      "end": 1179
                    },
                    "start": 1151,
                    "end": 1180
                  },
                  "start": 1096,
                  "end": 1180
                }
              ],
              "start": 1079,
              "end": 1181
            },
            "start": 1073,
            "end": 1182
          }
        ],
        "start": 1069,
        "end": 1184
      },
      "alternate": null,
      "start": 1027,
      "end": 1184
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1200,
            "end": 1210
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "01.e1string",
              "raw": "\"01.e1string\"",
              "start": 1211,
              "end": 1224
            }
          ],
          "optional": false,
          "start": 1200,
          "end": 1225
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 10,
          "raw": "10",
          "start": 1230,
          "end": 1232
        },
        "start": 1200,
        "end": 1232
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1248,
                "end": 1260
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: parseFloat(\"01.e1string\") === 10. Actual: ",
                    "raw": "'#6: parseFloat(\"01.e1string\") === 10. Actual: '",
                    "start": 1261,
                    "end": 1309
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1313,
                        "end": 1323
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "01.e1string",
                          "raw": "\"01.e1string\"",
                          "start": 1324,
                          "end": 1337
                        }
                      ],
                      "optional": false,
                      "start": 1313,
                      "end": 1338
                    },
                    "start": 1312,
                    "end": 1339
                  },
                  "start": 1261,
                  "end": 1339
                }
              ],
              "start": 1244,
              "end": 1340
            },
            "start": 1238,
            "end": 1341
          }
        ],
        "start": 1234,
        "end": 1343
      },
      "alternate": null,
      "start": 1196,
      "end": 1343
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1359,
            "end": 1369
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "+11.22e-1string",
              "raw": "\"+11.22e-1string\"",
              "start": 1370,
              "end": 1387
            }
          ],
          "optional": false,
          "start": 1359,
          "end": 1388
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1.122,
          "raw": "1.122",
          "start": 1393,
          "end": 1398
        },
        "start": 1359,
        "end": 1398
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1414,
                "end": 1426
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: parseFloat(\"+11.22e-1string\") === 1.122. Actual: ",
                    "raw": "'#7: parseFloat(\"+11.22e-1string\") === 1.122. Actual: '",
                    "start": 1427,
                    "end": 1482
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1486,
                        "end": 1496
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "+11.22e-1string",
                          "raw": "\"+11.22e-1string\"",
                          "start": 1497,
                          "end": 1514
                        }
                      ],
                      "optional": false,
                      "start": 1486,
                      "end": 1515
                    },
                    "start": 1485,
                    "end": 1516
                  },
                  "start": 1427,
                  "end": 1516
                }
              ],
              "start": 1410,
              "end": 1517
            },
            "start": 1404,
            "end": 1518
          }
        ],
        "start": 1400,
        "end": 1520
      },
      "alternate": null,
      "start": 1355,
      "end": 1520
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1536,
            "end": 1546
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "01.01e1string",
              "raw": "\"01.01e1string\"",
              "start": 1547,
              "end": 1562
            }
          ],
          "optional": false,
          "start": 1536,
          "end": 1563
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 10.1,
          "raw": "10.1",
          "start": 1568,
          "end": 1572
        },
        "start": 1536,
        "end": 1572
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1588,
                "end": 1600
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: parseFloat(\"01.01e1string\") === 10.1. Actual: ",
                    "raw": "'#8: parseFloat(\"01.01e1string\") === 10.1. Actual: '",
                    "start": 1601,
                    "end": 1653
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1657,
                        "end": 1667
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "01.01e1string",
                          "raw": "\"01.01e1string\"",
                          "start": 1668,
                          "end": 1683
                        }
                      ],
                      "optional": false,
                      "start": 1657,
                      "end": 1684
                    },
                    "start": 1656,
                    "end": 1685
                  },
                  "start": 1601,
                  "end": 1685
                }
              ],
              "start": 1584,
              "end": 1686
            },
            "start": 1578,
            "end": 1687
          }
        ],
        "start": 1574,
        "end": 1689
      },
      "alternate": null,
      "start": 1532,
      "end": 1689
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1705,
            "end": 1715
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "001.string",
              "raw": "\"001.string\"",
              "start": 1716,
              "end": 1728
            }
          ],
          "optional": false,
          "start": 1705,
          "end": 1729
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1734,
          "end": 1735
        },
        "start": 1705,
        "end": 1735
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1751,
                "end": 1763
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: parseFloat(\"001.string\") === 1. Actual: ",
                    "raw": "'#9: parseFloat(\"001.string\") === 1. Actual: '",
                    "start": 1764,
                    "end": 1810
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1814,
                        "end": 1824
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "001.string",
                          "raw": "\"001.string\"",
                          "start": 1825,
                          "end": 1837
                        }
                      ],
                      "optional": false,
                      "start": 1814,
                      "end": 1838
                    },
                    "start": 1813,
                    "end": 1839
                  },
                  "start": 1764,
                  "end": 1839
                }
              ],
              "start": 1747,
              "end": 1840
            },
            "start": 1741,
            "end": 1841
          }
        ],
        "start": 1737,
        "end": 1843
      },
      "alternate": null,
      "start": 1701,
      "end": 1843
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1860,
            "end": 1870
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "010.string",
              "raw": "\"010.string\"",
              "start": 1871,
              "end": 1883
            }
          ],
          "optional": false,
          "start": 1860,
          "end": 1884
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 10,
          "raw": "10",
          "start": 1889,
          "end": 1891
        },
        "start": 1860,
        "end": 1891
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1907,
                "end": 1919
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: parseFloat(\"010.string\") === 10. Actual: ",
                    "raw": "'#10: parseFloat(\"010.string\") === 10. Actual: '",
                    "start": 1920,
                    "end": 1968
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1972,
                        "end": 1982
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "010.string",
                          "raw": "\"010.string\"",
                          "start": 1983,
                          "end": 1995
                        }
                      ],
                      "optional": false,
                      "start": 1972,
                      "end": 1996
                    },
                    "start": 1971,
                    "end": 1997
                  },
                  "start": 1920,
                  "end": 1997
                }
              ],
              "start": 1903,
              "end": 1998
            },
            "start": 1897,
            "end": 1999
          }
        ],
        "start": 1893,
        "end": 2001
      },
      "alternate": null,
      "start": 1856,
      "end": 2001
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2002
}