{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 259,
            "end": 269
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1.1,
                "raw": "1.1",
                "start": 271,
                "end": 274
              },
              "prefix": true,
              "start": 270,
              "end": 274
            }
          ],
          "optional": false,
          "start": 259,
          "end": 275
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 280,
            "end": 290
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "-1.1",
              "raw": "\"-1.1\"",
              "start": 291,
              "end": 297
            }
          ],
          "optional": false,
          "start": 280,
          "end": 298
        },
        "start": 259,
        "end": 298
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 314,
                "end": 326
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: parseFloat(-1.1) === parseFloat(\"-1.1\"). Actual: ",
                    "raw": "'#1: parseFloat(-1.1) === parseFloat(\"-1.1\"). Actual: '",
                    "start": 327,
                    "end": 382
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 386,
                        "end": 396
                      },
                      "arguments": [
                        {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 1.1,
                            "raw": "1.1",
                            "start": 398,
                            "end": 401
                          },
                          "prefix": true,
                          "start": 397,
                          "end": 401
                        }
                      ],
                      "optional": false,
                      "start": 386,
                      "end": 402
                    },
                    "start": 385,
                    "end": 403
                  },
                  "start": 327,
                  "end": 403
                }
              ],
              "start": 310,
              "end": 404
            },
            "start": 304,
            "end": 405
          }
        ],
        "start": 300,
        "end": 407
      },
      "alternate": null,
      "start": 255,
      "end": 407
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 423,
            "end": 433
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "Infinity",
              "start": 434,
              "end": 442
            }
          ],
          "optional": false,
          "start": 423,
          "end": 443
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 448,
            "end": 458
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "Infinity",
              "raw": "\"Infinity\"",
              "start": 459,
              "end": 469
            }
          ],
          "optional": false,
          "start": 448,
          "end": 470
        },
        "start": 423,
        "end": 470
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 486,
                "end": 498
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: parseFloat(Infinity) === parseFloat(\"Infinity\"). Actual: ",
                    "raw": "'#2: parseFloat(Infinity) === parseFloat(\"Infinity\"). Actual: '",
                    "start": 499,
                    "end": 562
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 566,
                        "end": 576
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "Infinity",
                          "start": 577,
                          "end": 585
                        }
                      ],
                      "optional": false,
                      "start": 566,
                      "end": 586
                    },
                    "start": 565,
                    "end": 587
                  },
                  "start": 499,
                  "end": 587
                }
              ],
              "start": 482,
              "end": 588
            },
            "start": 476,
            "end": 589
          }
        ],
        "start": 472,
        "end": 591
      },
      "alternate": null,
      "start": 419,
      "end": 591
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 607,
            "end": 613
          },
          "arguments": [
            {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "parseFloat",
                "start": 614,
                "end": 624
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 625,
                  "end": 628
                }
              ],
              "optional": false,
              "start": 614,
              "end": 629
            }
          ],
          "optional": false,
          "start": 607,
          "end": 630
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "NaN",
          "raw": "\"NaN\"",
          "start": 635,
          "end": 640
        },
        "start": 607,
        "end": 640
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 656,
                "end": 668
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: String(parseFloat(NaN)) === \"NaN\". Actual: ",
                    "raw": "'#3: String(parseFloat(NaN)) === \"NaN\". Actual: '",
                    "start": 669,
                    "end": 718
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "String",
                        "start": 722,
                        "end": 728
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "parseFloat",
                            "start": 729,
                            "end": 739
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "NaN",
                              "start": 740,
                              "end": 743
                            }
                          ],
                          "optional": false,
                          "start": 729,
                          "end": 744
                        }
                      ],
                      "optional": false,
                      "start": 722,
                      "end": 745
                    },
                    "start": 721,
                    "end": 746
                  },
                  "start": 669,
                  "end": 746
                }
              ],
              "start": 652,
              "end": 747
            },
            "start": 646,
            "end": 748
          }
        ],
        "start": 642,
        "end": 750
      },
      "alternate": null,
      "start": 603,
      "end": 750
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 766,
            "end": 776
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": ".01e+2",
              "start": 777,
              "end": 783
            }
          ],
          "optional": false,
          "start": 766,
          "end": 784
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 789,
            "end": 799
          },
          "arguments": [
            {
              "type": "Literal",
              "value": ".01e+2",
              "raw": "\".01e+2\"",
              "start": 800,
              "end": 808
            }
          ],
          "optional": false,
          "start": 789,
          "end": 809
        },
        "start": 766,
        "end": 809
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 825,
                "end": 837
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: parseFloat(.01e+2) === parseFloat(\".01e+2\"). Actual: ",
                    "raw": "'#4: parseFloat(.01e+2) === parseFloat(\".01e+2\"). Actual: '",
                    "start": 838,
                    "end": 897
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 901,
                        "end": 911
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": 1,
                          "raw": ".01e+2",
                          "start": 912,
                          "end": 918
                        }
                      ],
                      "optional": false,
                      "start": 901,
                      "end": 919
                    },
                    "start": 900,
                    "end": 920
                  },
                  "start": 838,
                  "end": 920
                }
              ],
              "start": 821,
              "end": 921
            },
            "start": 815,
            "end": 922
          }
        ],
        "start": 811,
        "end": 924
      },
      "alternate": null,
      "start": 762,
      "end": 924
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 940,
            "end": 950
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 952,
                "end": 953
              },
              "prefix": true,
              "start": 951,
              "end": 953
            }
          ],
          "optional": false,
          "start": 940,
          "end": 954
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 959,
          "end": 960
        },
        "start": 940,
        "end": 960
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 976,
                "end": 988
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: parseFloat(-0) === 0. Actual: ",
                    "raw": "'#5: parseFloat(-0) === 0. Actual: '",
                    "start": 989,
                    "end": 1025
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1029,
                        "end": 1039
                      },
                      "arguments": [
                        {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0",
                            "start": 1041,
                            "end": 1042
                          },
                          "prefix": true,
                          "start": 1040,
                          "end": 1042
                        }
                      ],
                      "optional": false,
                      "start": 1029,
                      "end": 1043
                    },
                    "start": 1028,
                    "end": 1044
                  },
                  "start": 989,
                  "end": 1044
                }
              ],
              "start": 972,
              "end": 1045
            },
            "start": 966,
            "end": 1046
          }
        ],
        "start": 962,
        "end": 1048
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1062,
                  "end": 1063
                },
                "operator": "/",
                "right": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "parseFloat",
                    "start": 1066,
                    "end": 1076
                  },
                  "arguments": [
                    {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1078,
                        "end": 1079
                      },
                      "prefix": true,
                      "start": 1077,
                      "end": 1079
                    }
                  ],
                  "optional": false,
                  "start": 1066,
                  "end": 1080
                },
                "start": 1062,
                "end": 1080
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1085,
                  "end": 1091
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 1092,
                  "end": 1109
                },
                "optional": false,
                "computed": false,
                "start": 1085,
                "end": 1109
              },
              "start": 1062,
              "end": 1109
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 1127,
                      "end": 1139
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": "#5: parseFloat(-0) === +0. Actual: ",
                          "raw": "'#5: parseFloat(-0) === +0. Actual: '",
                          "start": 1140,
                          "end": 1177
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "parseFloat",
                              "start": 1181,
                              "end": 1191
                            },
                            "arguments": [
                              {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                  "type": "Literal",
                                  "value": 0,
                                  "raw": "0",
                                  "start": 1193,
                                  "end": 1194
                                },
                                "prefix": true,
                                "start": 1192,
                                "end": 1194
                              }
                            ],
                            "optional": false,
                            "start": 1181,
                            "end": 1195
                          },
                          "start": 1180,
                          "end": 1196
                        },
                        "start": 1140,
                        "end": 1196
                      }
                    ],
                    "start": 1123,
                    "end": 1197
                  },
                  "start": 1117,
                  "end": 1198
                }
              ],
              "start": 1111,
              "end": 1202
            },
            "alternate": null,
            "start": 1058,
            "end": 1202
          }
        ],
        "start": 1054,
        "end": 1204
      },
      "start": 936,
      "end": 1204
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1205
}