{
  "type": "Program",
  "start": 0,
  "end": 1298,
  "body": [
    {
      "type": "IfStatement",
      "start": 281,
      "end": 453,
      "test": {
        "type": "BinaryExpression",
        "start": 285,
        "end": 330,
        "left": {
          "type": "CallExpression",
          "start": 285,
          "end": 308,
          "callee": {
            "type": "Identifier",
            "start": 285,
            "end": 295,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 296,
              "end": 307,
              "value": "\t1.1",
              "raw": "\"\\u00091.1\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 313,
          "end": 330,
          "callee": {
            "type": "Identifier",
            "start": 313,
            "end": 323,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 324,
              "end": 329,
              "value": "1.1",
              "raw": "\"1.1\""
            }
          ],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 332,
        "end": 453,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 336,
            "end": 451,
            "argument": {
              "type": "NewExpression",
              "start": 342,
              "end": 450,
              "callee": {
                "type": "Identifier",
                "start": 346,
                "end": 358,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 359,
                  "end": 449,
                  "left": {
                    "type": "Literal",
                    "start": 359,
                    "end": 421,
                    "value": "#1: parseFloat(\"\\u00091.1\") === parseFloat(\"1.1\"). Actual: ",
                    "raw": "'#1: parseFloat(\"\\\\u00091.1\") === parseFloat(\"1.1\"). Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 424,
                    "end": 449,
                    "expression": {
                      "type": "CallExpression",
                      "start": 425,
                      "end": 448,
                      "callee": {
                        "type": "Identifier",
                        "start": 425,
                        "end": 435,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 436,
                          "end": 447,
                          "value": "\t1.1",
                          "raw": "\"\\u00091.1\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 465,
      "end": 661,
      "test": {
        "type": "BinaryExpression",
        "start": 469,
        "end": 522,
        "left": {
          "type": "CallExpression",
          "start": 469,
          "end": 499,
          "callee": {
            "type": "Identifier",
            "start": 469,
            "end": 479,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 480,
              "end": 498,
              "value": "\t\t-1.1",
              "raw": "\"\\u0009\\u0009-1.1\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 504,
          "end": 522,
          "callee": {
            "type": "Identifier",
            "start": 504,
            "end": 514,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 515,
              "end": 521,
              "value": "-1.1",
              "raw": "\"-1.1\""
            }
          ],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 524,
        "end": 661,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 528,
            "end": 659,
            "argument": {
              "type": "NewExpression",
              "start": 534,
              "end": 658,
              "callee": {
                "type": "Identifier",
                "start": 538,
                "end": 550,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 551,
                  "end": 657,
                  "left": {
                    "type": "Literal",
                    "start": 551,
                    "end": 622,
                    "value": "#2: parseFloat(\"\\u0009\\u0009-1.1\") === parseFloat(\"-1.1\"). Actual: ",
                    "raw": "'#2: parseFloat(\"\\\\u0009\\\\u0009-1.1\") === parseFloat(\"-1.1\"). Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 625,
                    "end": 657,
                    "expression": {
                      "type": "CallExpression",
                      "start": 626,
                      "end": 656,
                      "callee": {
                        "type": "Identifier",
                        "start": 626,
                        "end": 636,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 637,
                          "end": 655,
                          "value": "\t\t-1.1",
                          "raw": "\"\\u0009\\u0009-1.1\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 673,
      "end": 829,
      "test": {
        "type": "BinaryExpression",
        "start": 677,
        "end": 717,
        "left": {
          "type": "CallExpression",
          "start": 677,
          "end": 695,
          "callee": {
            "type": "Identifier",
            "start": 677,
            "end": 687,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 688,
              "end": 694,
              "value": "\t1.1",
              "raw": "\"\t1.1\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 700,
          "end": 717,
          "callee": {
            "type": "Identifier",
            "start": 700,
            "end": 710,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 711,
              "end": 716,
              "value": "1.1",
              "raw": "\"1.1\""
            }
          ],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 719,
        "end": 829,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 723,
            "end": 827,
            "argument": {
              "type": "NewExpression",
              "start": 729,
              "end": 826,
              "callee": {
                "type": "Identifier",
                "start": 733,
                "end": 745,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 746,
                  "end": 825,
                  "left": {
                    "type": "Literal",
                    "start": 746,
                    "end": 802,
                    "value": "#3: parseFloat(\"\t1.1\") === parseFloat(\"1.1\"). Actual: ",
                    "raw": "'#3: parseFloat(\"\t1.1\") === parseFloat(\"1.1\"). Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 805,
                    "end": 825,
                    "expression": {
                      "type": "CallExpression",
                      "start": 806,
                      "end": 824,
                      "callee": {
                        "type": "Identifier",
                        "start": 806,
                        "end": 816,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 817,
                          "end": 823,
                          "value": "\t1.1",
                          "raw": "\"\t1.1\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 841,
      "end": 1003,
      "test": {
        "type": "BinaryExpression",
        "start": 845,
        "end": 887,
        "left": {
          "type": "CallExpression",
          "start": 845,
          "end": 865,
          "callee": {
            "type": "Identifier",
            "start": 845,
            "end": 855,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 856,
              "end": 864,
              "value": "\t\t\t1.1",
              "raw": "\"\t\t\t1.1\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 870,
          "end": 887,
          "callee": {
            "type": "Identifier",
            "start": 870,
            "end": 880,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 881,
              "end": 886,
              "value": "1.1",
              "raw": "\"1.1\""
            }
          ],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 889,
        "end": 1003,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 893,
            "end": 1001,
            "argument": {
              "type": "NewExpression",
              "start": 899,
              "end": 1000,
              "callee": {
                "type": "Identifier",
                "start": 903,
                "end": 915,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 916,
                  "end": 999,
                  "left": {
                    "type": "Literal",
                    "start": 916,
                    "end": 974,
                    "value": "#4: parseFloat(\"\t\t\t1.1\") === parseFloat(\"1.1\"). Actual: ",
                    "raw": "'#4: parseFloat(\"\t\t\t1.1\") === parseFloat(\"1.1\"). Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 977,
                    "end": 999,
                    "expression": {
                      "type": "CallExpression",
                      "start": 978,
                      "end": 998,
                      "callee": {
                        "type": "Identifier",
                        "start": 978,
                        "end": 988,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 989,
                          "end": 997,
                          "value": "\t\t\t1.1",
                          "raw": "\"\t\t\t1.1\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1015,
      "end": 1229,
      "test": {
        "type": "BinaryExpression",
        "start": 1019,
        "end": 1078,
        "left": {
          "type": "CallExpression",
          "start": 1019,
          "end": 1055,
          "callee": {
            "type": "Identifier",
            "start": 1019,
            "end": 1029,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1030,
              "end": 1054,
              "value": "\t\t\t\t\t\t\t\t-1.1",
              "raw": "\"\t\t\t\\u0009\t\t\t\\u0009-1.1\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 1060,
          "end": 1078,
          "callee": {
            "type": "Identifier",
            "start": 1060,
            "end": 1070,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1071,
              "end": 1077,
              "value": "-1.1",
              "raw": "\"-1.1\""
            }
          ],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1080,
        "end": 1229,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1084,
            "end": 1227,
            "argument": {
              "type": "NewExpression",
              "start": 1090,
              "end": 1226,
              "callee": {
                "type": "Identifier",
                "start": 1094,
                "end": 1106,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1107,
                  "end": 1225,
                  "left": {
                    "type": "Literal",
                    "start": 1107,
                    "end": 1184,
                    "value": "#5: parseFloat(\"\t\t\t\\u0009\t\t\t\\u0009-1.1\") === parseFloat(\"-1.1\"). Actual: ",
                    "raw": "'#5: parseFloat(\"\t\t\t\\\\u0009\t\t\t\\\\u0009-1.1\") === parseFloat(\"-1.1\"). Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1187,
                    "end": 1225,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1188,
                      "end": 1224,
                      "callee": {
                        "type": "Identifier",
                        "start": 1188,
                        "end": 1198,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1199,
                          "end": 1223,
                          "value": "\t\t\t\t\t\t\t\t-1.1",
                          "raw": "\"\t\t\t\\u0009\t\t\t\\u0009-1.1\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1241,
      "end": 1297,
      "expression": {
        "type": "CallExpression",
        "start": 1241,
        "end": 1296,
        "callee": {
          "type": "MemberExpression",
          "start": 1241,
          "end": 1257,
          "object": {
            "type": "Identifier",
            "start": 1241,
            "end": 1247,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1248,
            "end": 1257,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1258,
            "end": 1278,
            "callee": {
              "type": "Identifier",
              "start": 1258,
              "end": 1268,
              "name": "parseFloat"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1269,
                "end": 1277,
                "value": "\t",
                "raw": "\"\\u0009\""
              }
            ],
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 1280,
            "end": 1283,
            "name": "NaN"
          },
          {
            "type": "Literal",
            "start": 1285,
            "end": 1295,
            "value": "'\t'",
            "raw": "\"'\\u0009'\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}