{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 285,
            "end": 295
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "\t1.1",
              "raw": "\"\\u00091.1\"",
              "start": 296,
              "end": 307
            }
          ],
          "optional": false,
          "start": 285,
          "end": 308
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 313,
            "end": 323
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1.1",
              "raw": "\"1.1\"",
              "start": 324,
              "end": 329
            }
          ],
          "optional": false,
          "start": 313,
          "end": 330
        },
        "start": 285,
        "end": 330
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 346,
                "end": 358
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: parseFloat(\"\\u00091.1\") === parseFloat(\"1.1\"). Actual: ",
                    "raw": "'#1: parseFloat(\"\\\\u00091.1\") === parseFloat(\"1.1\"). Actual: '",
                    "start": 359,
                    "end": 421
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 425,
                        "end": 435
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "\t1.1",
                          "raw": "\"\\u00091.1\"",
                          "start": 436,
                          "end": 447
                        }
                      ],
                      "optional": false,
                      "start": 425,
                      "end": 448
                    },
                    "start": 424,
                    "end": 449
                  },
                  "start": 359,
                  "end": 449
                }
              ],
              "start": 342,
              "end": 450
            },
            "start": 336,
            "end": 451
          }
        ],
        "start": 332,
        "end": 453
      },
      "alternate": null,
      "start": 281,
      "end": 453
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 469,
            "end": 479
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "\t\t-1.1",
              "raw": "\"\\u0009\\u0009-1.1\"",
              "start": 480,
              "end": 498
            }
          ],
          "optional": false,
          "start": 469,
          "end": 499
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 504,
            "end": 514
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "-1.1",
              "raw": "\"-1.1\"",
              "start": 515,
              "end": 521
            }
          ],
          "optional": false,
          "start": 504,
          "end": 522
        },
        "start": 469,
        "end": 522
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 538,
                "end": 550
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: parseFloat(\"\\u0009\\u0009-1.1\") === parseFloat(\"-1.1\"). Actual: ",
                    "raw": "'#2: parseFloat(\"\\\\u0009\\\\u0009-1.1\") === parseFloat(\"-1.1\"). Actual: '",
                    "start": 551,
                    "end": 622
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 626,
                        "end": 636
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "\t\t-1.1",
                          "raw": "\"\\u0009\\u0009-1.1\"",
                          "start": 637,
                          "end": 655
                        }
                      ],
                      "optional": false,
                      "start": 626,
                      "end": 656
                    },
                    "start": 625,
                    "end": 657
                  },
                  "start": 551,
                  "end": 657
                }
              ],
              "start": 534,
              "end": 658
            },
            "start": 528,
            "end": 659
          }
        ],
        "start": 524,
        "end": 661
      },
      "alternate": null,
      "start": 465,
      "end": 661
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 677,
            "end": 687
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "\t1.1",
              "raw": "\"\t1.1\"",
              "start": 688,
              "end": 694
            }
          ],
          "optional": false,
          "start": 677,
          "end": 695
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 700,
            "end": 710
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1.1",
              "raw": "\"1.1\"",
              "start": 711,
              "end": 716
            }
          ],
          "optional": false,
          "start": 700,
          "end": 717
        },
        "start": 677,
        "end": 717
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 733,
                "end": 745
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: parseFloat(\"\t1.1\") === parseFloat(\"1.1\"). Actual: ",
                    "raw": "'#3: parseFloat(\"\t1.1\") === parseFloat(\"1.1\"). Actual: '",
                    "start": 746,
                    "end": 802
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 806,
                        "end": 816
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "\t1.1",
                          "raw": "\"\t1.1\"",
                          "start": 817,
                          "end": 823
                        }
                      ],
                      "optional": false,
                      "start": 806,
                      "end": 824
                    },
                    "start": 805,
                    "end": 825
                  },
                  "start": 746,
                  "end": 825
                }
              ],
              "start": 729,
              "end": 826
            },
            "start": 723,
            "end": 827
          }
        ],
        "start": 719,
        "end": 829
      },
      "alternate": null,
      "start": 673,
      "end": 829
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 845,
            "end": 855
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "\t\t\t1.1",
              "raw": "\"\t\t\t1.1\"",
              "start": 856,
              "end": 864
            }
          ],
          "optional": false,
          "start": 845,
          "end": 865
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 870,
            "end": 880
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1.1",
              "raw": "\"1.1\"",
              "start": 881,
              "end": 886
            }
          ],
          "optional": false,
          "start": 870,
          "end": 887
        },
        "start": 845,
        "end": 887
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 903,
                "end": 915
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: parseFloat(\"\t\t\t1.1\") === parseFloat(\"1.1\"). Actual: ",
                    "raw": "'#4: parseFloat(\"\t\t\t1.1\") === parseFloat(\"1.1\"). Actual: '",
                    "start": 916,
                    "end": 974
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 978,
                        "end": 988
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "\t\t\t1.1",
                          "raw": "\"\t\t\t1.1\"",
                          "start": 989,
                          "end": 997
                        }
                      ],
                      "optional": false,
                      "start": 978,
                      "end": 998
                    },
                    "start": 977,
                    "end": 999
                  },
                  "start": 916,
                  "end": 999
                }
              ],
              "start": 899,
              "end": 1000
            },
            "start": 893,
            "end": 1001
          }
        ],
        "start": 889,
        "end": 1003
      },
      "alternate": null,
      "start": 841,
      "end": 1003
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1019,
            "end": 1029
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "\t\t\t\t\t\t\t\t-1.1",
              "raw": "\"\t\t\t\\u0009\t\t\t\\u0009-1.1\"",
              "start": 1030,
              "end": 1054
            }
          ],
          "optional": false,
          "start": 1019,
          "end": 1055
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 1060,
            "end": 1070
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "-1.1",
              "raw": "\"-1.1\"",
              "start": 1071,
              "end": 1077
            }
          ],
          "optional": false,
          "start": 1060,
          "end": 1078
        },
        "start": 1019,
        "end": 1078
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1094,
                "end": 1106
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: parseFloat(\"\t\t\t\\u0009\t\t\t\\u0009-1.1\") === parseFloat(\"-1.1\"). Actual: ",
                    "raw": "'#5: parseFloat(\"\t\t\t\\\\u0009\t\t\t\\\\u0009-1.1\") === parseFloat(\"-1.1\"). Actual: '",
                    "start": 1107,
                    "end": 1184
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 1188,
                        "end": 1198
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "\t\t\t\t\t\t\t\t-1.1",
                          "raw": "\"\t\t\t\\u0009\t\t\t\\u0009-1.1\"",
                          "start": 1199,
                          "end": 1223
                        }
                      ],
                      "optional": false,
                      "start": 1188,
                      "end": 1224
                    },
                    "start": 1187,
                    "end": 1225
                  },
                  "start": 1107,
                  "end": 1225
                }
              ],
              "start": 1090,
              "end": 1226
            },
            "start": 1084,
            "end": 1227
          }
        ],
        "start": 1080,
        "end": 1229
      },
      "alternate": null,
      "start": 1015,
      "end": 1229
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1241,
            "end": 1247
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1248,
            "end": 1257
          },
          "optional": false,
          "computed": false,
          "start": 1241,
          "end": 1257
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "parseFloat",
              "start": 1258,
              "end": 1268
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "\t",
                "raw": "\"\\u0009\"",
                "start": 1269,
                "end": 1277
              }
            ],
            "optional": false,
            "start": 1258,
            "end": 1278
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 1280,
            "end": 1283
          },
          {
            "type": "Literal",
            "value": "'\t'",
            "raw": "\"'\\u0009'\"",
            "start": 1285,
            "end": 1295
          }
        ],
        "optional": false,
        "start": 1241,
        "end": 1296
      },
      "start": 1241,
      "end": 1297
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1298
}