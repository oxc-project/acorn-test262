{
  "type": "Program",
  "start": 0,
  "end": 1050,
  "body": [
    {
      "type": "IfStatement",
      "start": 360,
      "end": 481,
      "test": {
        "type": "BinaryExpression",
        "start": 364,
        "end": 387,
        "left": {
          "type": "CallExpression",
          "start": 364,
          "end": 381,
          "callee": {
            "type": "Identifier",
            "start": 364,
            "end": 374,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 375,
              "end": 380,
              "value": "1ex",
              "raw": "\"1ex\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 386,
          "end": 387,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 389,
        "end": 481,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 393,
            "end": 479,
            "argument": {
              "type": "NewExpression",
              "start": 399,
              "end": 478,
              "callee": {
                "type": "Identifier",
                "start": 403,
                "end": 415,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 416,
                  "end": 477,
                  "left": {
                    "type": "Literal",
                    "start": 416,
                    "end": 455,
                    "value": "#1: parseFloat(\"1ex\") === 1. Actual: ",
                    "raw": "'#1: parseFloat(\"1ex\") === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 458,
                    "end": 477,
                    "expression": {
                      "type": "CallExpression",
                      "start": 459,
                      "end": 476,
                      "callee": {
                        "type": "Identifier",
                        "start": 459,
                        "end": 469,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 470,
                          "end": 475,
                          "value": "1ex",
                          "raw": "\"1ex\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 493,
      "end": 617,
      "test": {
        "type": "BinaryExpression",
        "start": 497,
        "end": 521,
        "left": {
          "type": "CallExpression",
          "start": 497,
          "end": 515,
          "callee": {
            "type": "Identifier",
            "start": 497,
            "end": 507,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 508,
              "end": 514,
              "value": "1e-x",
              "raw": "\"1e-x\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 520,
          "end": 521,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 523,
        "end": 617,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 527,
            "end": 615,
            "argument": {
              "type": "NewExpression",
              "start": 533,
              "end": 614,
              "callee": {
                "type": "Identifier",
                "start": 537,
                "end": 549,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 550,
                  "end": 613,
                  "left": {
                    "type": "Literal",
                    "start": 550,
                    "end": 590,
                    "value": "#2: parseFloat(\"1e-x\") === 1. Actual: ",
                    "raw": "'#2: parseFloat(\"1e-x\") === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 593,
                    "end": 613,
                    "expression": {
                      "type": "CallExpression",
                      "start": 594,
                      "end": 612,
                      "callee": {
                        "type": "Identifier",
                        "start": 594,
                        "end": 604,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 605,
                          "end": 611,
                          "value": "1e-x",
                          "raw": "\"1e-x\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 629,
      "end": 755,
      "test": {
        "type": "BinaryExpression",
        "start": 633,
        "end": 658,
        "left": {
          "type": "CallExpression",
          "start": 633,
          "end": 651,
          "callee": {
            "type": "Identifier",
            "start": 633,
            "end": 643,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 644,
              "end": 650,
              "value": "1e1x",
              "raw": "\"1e1x\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 656,
          "end": 658,
          "value": 10,
          "raw": "10"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 660,
        "end": 755,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 664,
            "end": 753,
            "argument": {
              "type": "NewExpression",
              "start": 670,
              "end": 752,
              "callee": {
                "type": "Identifier",
                "start": 674,
                "end": 686,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 687,
                  "end": 751,
                  "left": {
                    "type": "Literal",
                    "start": 687,
                    "end": 728,
                    "value": "#3: parseFloat(\"1e1x\") === 10. Actual: ",
                    "raw": "'#3: parseFloat(\"1e1x\") === 10. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 731,
                    "end": 751,
                    "expression": {
                      "type": "CallExpression",
                      "start": 732,
                      "end": 750,
                      "callee": {
                        "type": "Identifier",
                        "start": 732,
                        "end": 742,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 743,
                          "end": 749,
                          "value": "1e1x",
                          "raw": "\"1e1x\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 767,
      "end": 898,
      "test": {
        "type": "BinaryExpression",
        "start": 771,
        "end": 798,
        "left": {
          "type": "CallExpression",
          "start": 771,
          "end": 790,
          "callee": {
            "type": "Identifier",
            "start": 771,
            "end": 781,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 782,
              "end": 789,
              "value": "1e-1x",
              "raw": "\"1e-1x\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 795,
          "end": 798,
          "value": 0.1,
          "raw": "0.1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 800,
        "end": 898,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 804,
            "end": 896,
            "argument": {
              "type": "NewExpression",
              "start": 810,
              "end": 895,
              "callee": {
                "type": "Identifier",
                "start": 814,
                "end": 826,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 827,
                  "end": 894,
                  "left": {
                    "type": "Literal",
                    "start": 827,
                    "end": 870,
                    "value": "#4: parseFloat(\"1e-1x\") === 0.1. Actual: ",
                    "raw": "'#4: parseFloat(\"1e-1x\") === 0.1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 873,
                    "end": 894,
                    "expression": {
                      "type": "CallExpression",
                      "start": 874,
                      "end": 893,
                      "callee": {
                        "type": "Identifier",
                        "start": 874,
                        "end": 884,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 885,
                          "end": 892,
                          "value": "1e-1x",
                          "raw": "\"1e-1x\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 910,
      "end": 1049,
      "test": {
        "type": "BinaryExpression",
        "start": 914,
        "end": 944,
        "left": {
          "type": "CallExpression",
          "start": 914,
          "end": 935,
          "callee": {
            "type": "Identifier",
            "start": 914,
            "end": 924,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 925,
              "end": 934,
              "value": "0.1e-1x",
              "raw": "\"0.1e-1x\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 940,
          "end": 944,
          "value": 0.01,
          "raw": "0.01"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 946,
        "end": 1049,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 950,
            "end": 1047,
            "argument": {
              "type": "NewExpression",
              "start": 956,
              "end": 1046,
              "callee": {
                "type": "Identifier",
                "start": 960,
                "end": 972,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 973,
                  "end": 1045,
                  "left": {
                    "type": "Literal",
                    "start": 973,
                    "end": 1019,
                    "value": "#5: parseFloat(\"0.1e-1x\") === 0.01. Actual: ",
                    "raw": "'#5: parseFloat(\"0.1e-1x\") === 0.01. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1022,
                    "end": 1045,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1023,
                      "end": 1044,
                      "callee": {
                        "type": "Identifier",
                        "start": 1023,
                        "end": 1033,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1034,
                          "end": 1043,
                          "value": "0.1e-1x",
                          "raw": "\"0.1e-1x\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}