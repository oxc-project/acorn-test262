{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 273,
            "end": 283
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "Infinity",
              "raw": "\"Infinity\"",
              "start": 284,
              "end": 294
            }
          ],
          "optional": false,
          "start": 273,
          "end": 295
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 300,
            "end": 306
          },
          "property": {
            "type": "Identifier",
            "name": "POSITIVE_INFINITY",
            "start": 307,
            "end": 324
          },
          "optional": false,
          "computed": false,
          "start": 300,
          "end": 324
        },
        "start": 273,
        "end": 324
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 340,
                "end": 352
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: parseFloat(\"Infinity\") === Number.POSITIVE_INFINITY. Actual: ",
                    "raw": "'#1: parseFloat(\"Infinity\") === Number.POSITIVE_INFINITY. Actual: '",
                    "start": 353,
                    "end": 420
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 424,
                        "end": 434
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "Infinity",
                          "raw": "\"Infinity\"",
                          "start": 435,
                          "end": 445
                        }
                      ],
                      "optional": false,
                      "start": 424,
                      "end": 446
                    },
                    "start": 423,
                    "end": 447
                  },
                  "start": 353,
                  "end": 447
                }
              ],
              "start": 336,
              "end": 448
            },
            "start": 330,
            "end": 449
          }
        ],
        "start": 326,
        "end": 451
      },
      "alternate": null,
      "start": 269,
      "end": 451
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 467,
            "end": 477
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "+Infinity",
              "raw": "\"+Infinity\"",
              "start": 478,
              "end": 489
            }
          ],
          "optional": false,
          "start": 467,
          "end": 490
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 495,
            "end": 501
          },
          "property": {
            "type": "Identifier",
            "name": "POSITIVE_INFINITY",
            "start": 502,
            "end": 519
          },
          "optional": false,
          "computed": false,
          "start": 495,
          "end": 519
        },
        "start": 467,
        "end": 519
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 535,
                "end": 547
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: parseFloat(\"+Infinity\") === Number.POSITIVE_INFINITY. Actual: ",
                    "raw": "'#2: parseFloat(\"+Infinity\") === Number.POSITIVE_INFINITY. Actual: '",
                    "start": 548,
                    "end": 616
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 620,
                        "end": 630
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "+Infinity",
                          "raw": "\"+Infinity\"",
                          "start": 631,
                          "end": 642
                        }
                      ],
                      "optional": false,
                      "start": 620,
                      "end": 643
                    },
                    "start": 619,
                    "end": 644
                  },
                  "start": 548,
                  "end": 644
                }
              ],
              "start": 531,
              "end": 645
            },
            "start": 525,
            "end": 646
          }
        ],
        "start": 521,
        "end": 648
      },
      "alternate": null,
      "start": 463,
      "end": 648
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "parseFloat",
            "start": 664,
            "end": 674
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "-Infinity",
              "raw": "\"-Infinity\"",
              "start": 675,
              "end": 686
            }
          ],
          "optional": false,
          "start": 664,
          "end": 687
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 692,
            "end": 698
          },
          "property": {
            "type": "Identifier",
            "name": "NEGATIVE_INFINITY",
            "start": 699,
            "end": 716
          },
          "optional": false,
          "computed": false,
          "start": 692,
          "end": 716
        },
        "start": 664,
        "end": 716
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 732,
                "end": 744
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: parseFloat(\"-Infinity\") === Number.NEGATIVE_INFINITY. Actual: ",
                    "raw": "'#3: parseFloat(\"-Infinity\") === Number.NEGATIVE_INFINITY. Actual: '",
                    "start": 745,
                    "end": 813
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "parseFloat",
                        "start": 817,
                        "end": 827
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "-Infinity",
                          "raw": "\"-Infinity\"",
                          "start": 828,
                          "end": 839
                        }
                      ],
                      "optional": false,
                      "start": 817,
                      "end": 840
                    },
                    "start": 816,
                    "end": 841
                  },
                  "start": 745,
                  "end": 841
                }
              ],
              "start": 728,
              "end": 842
            },
            "start": 722,
            "end": 843
          }
        ],
        "start": 718,
        "end": 845
      },
      "alternate": null,
      "start": 660,
      "end": 845
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 846
}