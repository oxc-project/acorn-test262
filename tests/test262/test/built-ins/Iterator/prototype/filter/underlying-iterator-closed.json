{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterator",
            "start": 343,
            "end": 351
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "FunctionExpression",
                "id": null,
                "generator": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ForStatement",
                      "init": {
                        "type": "VariableDeclaration",
                        "kind": "let",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "i",
                              "start": 381,
                              "end": 382
                            },
                            "init": {
                              "type": "Literal",
                              "value": 0,
                              "raw": "0",
                              "start": 385,
                              "end": 386
                            },
                            "start": 381,
                            "end": 386
                          }
                        ],
                        "start": 377,
                        "end": 386
                      },
                      "test": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Identifier",
                          "name": "i",
                          "start": 388,
                          "end": 389
                        },
                        "operator": "<",
                        "right": {
                          "type": "Literal",
                          "value": 5,
                          "raw": "5",
                          "start": 392,
                          "end": 393
                        },
                        "start": 388,
                        "end": 393
                      },
                      "update": {
                        "type": "UpdateExpression",
                        "operator": "++",
                        "prefix": true,
                        "argument": {
                          "type": "Identifier",
                          "name": "i",
                          "start": 397,
                          "end": 398
                        },
                        "start": 395,
                        "end": 398
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "YieldExpression",
                              "delegate": false,
                              "argument": {
                                "type": "Identifier",
                                "name": "i",
                                "start": 412,
                                "end": 413
                              },
                              "start": 406,
                              "end": 413
                            },
                            "start": 406,
                            "end": 414
                          }
                        ],
                        "start": 400,
                        "end": 418
                      },
                      "start": 372,
                      "end": 418
                    }
                  ],
                  "start": 368,
                  "end": 420
                },
                "expression": false,
                "start": 355,
                "end": 420
              },
              "start": 354,
              "end": 421
            },
            "arguments": [],
            "optional": false,
            "start": 354,
            "end": 423
          },
          "start": 343,
          "end": 423
        }
      ],
      "start": 339,
      "end": 424
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "iterator",
            "start": 426,
            "end": 434
          },
          "property": {
            "type": "Identifier",
            "name": "return",
            "start": 435,
            "end": 441
          },
          "optional": false,
          "computed": false,
          "start": 426,
          "end": 441
        },
        "arguments": [],
        "optional": false,
        "start": 426,
        "end": 443
      },
      "start": 426,
      "end": 444
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "filtered",
            "start": 450,
            "end": 458
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "iterator",
                "start": 461,
                "end": 469
              },
              "property": {
                "type": "Identifier",
                "name": "filter",
                "start": 470,
                "end": 476
              },
              "optional": false,
              "computed": false,
              "start": 461,
              "end": 476
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 483,
                  "end": 487
                },
                "id": null,
                "generator": false,
                "start": 477,
                "end": 487
              }
            ],
            "optional": false,
            "start": 461,
            "end": 488
          },
          "start": 450,
          "end": 488
        }
      ],
      "start": 446,
      "end": 489
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "ObjectPattern",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "value",
                  "start": 497,
                  "end": 502
                },
                "value": {
                  "type": "Identifier",
                  "name": "value",
                  "start": 497,
                  "end": 502
                },
                "method": false,
                "shorthand": true,
                "computed": false,
                "start": 497,
                "end": 502
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "done",
                  "start": 504,
                  "end": 508
                },
                "value": {
                  "type": "Identifier",
                  "name": "done",
                  "start": 504,
                  "end": 508
                },
                "method": false,
                "shorthand": true,
                "computed": false,
                "start": 504,
                "end": 508
              }
            ],
            "start": 495,
            "end": 510
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "filtered",
                "start": 513,
                "end": 521
              },
              "property": {
                "type": "Identifier",
                "name": "next",
                "start": 522,
                "end": 526
              },
              "optional": false,
              "computed": false,
              "start": 513,
              "end": 526
            },
            "arguments": [],
            "optional": false,
            "start": 513,
            "end": 528
          },
          "start": 495,
          "end": 528
        }
      ],
      "start": 491,
      "end": 529
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 531,
            "end": 537
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 538,
            "end": 547
          },
          "optional": false,
          "computed": false,
          "start": 531,
          "end": 547
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "value",
            "start": 548,
            "end": 553
          },
          {
            "type": "Identifier",
            "name": "undefined",
            "start": 555,
            "end": 564
          }
        ],
        "optional": false,
        "start": 531,
        "end": 565
      },
      "start": 531,
      "end": 566
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 567,
            "end": 573
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 574,
            "end": 583
          },
          "optional": false,
          "computed": false,
          "start": 567,
          "end": 583
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "done",
            "start": 584,
            "end": 588
          },
          {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 590,
            "end": 594
          }
        ],
        "optional": false,
        "start": 567,
        "end": 595
      },
      "start": 567,
      "end": 596
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 597
}