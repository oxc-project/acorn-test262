{
  "type": "Program",
  "start": 0,
  "end": 898,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 394,
      "end": 411,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 398,
          "end": 410,
          "id": {
            "type": "Identifier",
            "start": 398,
            "end": 406,
            "name": "nextGets"
          },
          "init": {
            "type": "Literal",
            "start": 409,
            "end": 410,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 412,
      "end": 430,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 416,
          "end": 429,
          "id": {
            "type": "Identifier",
            "start": 416,
            "end": 425,
            "name": "nextCalls"
          },
          "init": {
            "type": "Literal",
            "start": 428,
            "end": 429,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "start": 432,
      "end": 689,
      "decorators": [],
      "id": {
        "type": "Identifier",
        "start": 438,
        "end": 454,
        "name": "CountingIterator"
      },
      "superClass": {
        "type": "Identifier",
        "start": 463,
        "end": 471,
        "name": "Iterator"
      },
      "body": {
        "type": "ClassBody",
        "start": 472,
        "end": 689,
        "body": [
          {
            "type": "MethodDefinition",
            "start": 476,
            "end": 687,
            "decorators": [],
            "key": {
              "type": "Identifier",
              "start": 480,
              "end": 484,
              "name": "next"
            },
            "value": {
              "type": "FunctionExpression",
              "start": 484,
              "end": 687,
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 487,
                "end": 687,
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "start": 493,
                    "end": 504,
                    "expression": {
                      "type": "UpdateExpression",
                      "start": 493,
                      "end": 503,
                      "operator": "++",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 495,
                        "end": 503,
                        "name": "nextGets"
                      }
                    }
                  },
                  {
                    "type": "VariableDeclaration",
                    "start": 509,
                    "end": 606,
                    "kind": "let",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "start": 513,
                        "end": 605,
                        "id": {
                          "type": "Identifier",
                          "start": 513,
                          "end": 517,
                          "name": "iter"
                        },
                        "init": {
                          "type": "CallExpression",
                          "start": 520,
                          "end": 605,
                          "callee": {
                            "type": "ParenthesizedExpression",
                            "start": 520,
                            "end": 603,
                            "expression": {
                              "type": "FunctionExpression",
                              "start": 521,
                              "end": 602,
                              "id": null,
                              "generator": true,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "start": 534,
                                "end": 602,
                                "body": [
                                  {
                                    "type": "ForStatement",
                                    "start": 542,
                                    "end": 596,
                                    "init": {
                                      "type": "VariableDeclaration",
                                      "start": 547,
                                      "end": 556,
                                      "kind": "let",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "start": 551,
                                          "end": 556,
                                          "id": {
                                            "type": "Identifier",
                                            "start": 551,
                                            "end": 552,
                                            "name": "i"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "start": 555,
                                            "end": 556,
                                            "value": 1,
                                            "raw": "1"
                                          }
                                        }
                                      ]
                                    },
                                    "test": {
                                      "type": "BinaryExpression",
                                      "start": 558,
                                      "end": 563,
                                      "left": {
                                        "type": "Identifier",
                                        "start": 558,
                                        "end": 559,
                                        "name": "i"
                                      },
                                      "operator": "<",
                                      "right": {
                                        "type": "Literal",
                                        "start": 562,
                                        "end": 563,
                                        "value": 5,
                                        "raw": "5"
                                      }
                                    },
                                    "update": {
                                      "type": "UpdateExpression",
                                      "start": 565,
                                      "end": 568,
                                      "operator": "++",
                                      "prefix": true,
                                      "argument": {
                                        "type": "Identifier",
                                        "start": 567,
                                        "end": 568,
                                        "name": "i"
                                      }
                                    },
                                    "body": {
                                      "type": "BlockStatement",
                                      "start": 570,
                                      "end": 596,
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "start": 580,
                                          "end": 588,
                                          "expression": {
                                            "type": "YieldExpression",
                                            "start": 580,
                                            "end": 587,
                                            "delegate": false,
                                            "argument": {
                                              "type": "Identifier",
                                              "start": 586,
                                              "end": 587,
                                              "name": "i"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "expression": false
                            }
                          },
                          "arguments": [],
                          "optional": false
                        }
                      }
                    ]
                  },
                  {
                    "type": "ReturnStatement",
                    "start": 611,
                    "end": 683,
                    "argument": {
                      "type": "FunctionExpression",
                      "start": 618,
                      "end": 682,
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "start": 630,
                        "end": 682,
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "start": 638,
                            "end": 650,
                            "expression": {
                              "type": "UpdateExpression",
                              "start": 638,
                              "end": 649,
                              "operator": "++",
                              "prefix": true,
                              "argument": {
                                "type": "Identifier",
                                "start": 640,
                                "end": 649,
                                "name": "nextCalls"
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "start": 657,
                            "end": 676,
                            "argument": {
                              "type": "CallExpression",
                              "start": 664,
                              "end": 675,
                              "callee": {
                                "type": "MemberExpression",
                                "start": 664,
                                "end": 673,
                                "object": {
                                  "type": "Identifier",
                                  "start": 664,
                                  "end": 668,
                                  "name": "iter"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 669,
                                  "end": 673,
                                  "name": "next"
                                },
                                "optional": false,
                                "computed": false
                              },
                              "arguments": [],
                              "optional": false
                            }
                          }
                        ]
                      },
                      "expression": false
                    }
                  }
                ]
              },
              "expression": false
            },
            "kind": "get",
            "computed": false,
            "static": false
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 691,
      "end": 729,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 695,
          "end": 728,
          "id": {
            "type": "Identifier",
            "start": 695,
            "end": 703,
            "name": "iterator"
          },
          "init": {
            "type": "NewExpression",
            "start": 706,
            "end": 728,
            "callee": {
              "type": "Identifier",
              "start": 710,
              "end": 726,
              "name": "CountingIterator"
            },
            "arguments": []
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 731,
      "end": 761,
      "expression": {
        "type": "CallExpression",
        "start": 731,
        "end": 760,
        "callee": {
          "type": "MemberExpression",
          "start": 731,
          "end": 747,
          "object": {
            "type": "Identifier",
            "start": 731,
            "end": 737,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 738,
            "end": 747,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 748,
            "end": 756,
            "name": "nextGets"
          },
          {
            "type": "Literal",
            "start": 758,
            "end": 759,
            "value": 0,
            "raw": "0"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 762,
      "end": 793,
      "expression": {
        "type": "CallExpression",
        "start": 762,
        "end": 792,
        "callee": {
          "type": "MemberExpression",
          "start": 762,
          "end": 778,
          "object": {
            "type": "Identifier",
            "start": 762,
            "end": 768,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 769,
            "end": 778,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 779,
            "end": 788,
            "name": "nextCalls"
          },
          {
            "type": "Literal",
            "start": 790,
            "end": 791,
            "value": 0,
            "raw": "0"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ForOfStatement",
      "start": 795,
      "end": 833,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 800,
        "end": 811,
        "kind": "const",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 806,
            "end": 811,
            "id": {
              "type": "Identifier",
              "start": 806,
              "end": 811,
              "name": "value"
            },
            "init": null
          }
        ]
      },
      "right": {
        "type": "CallExpression",
        "start": 815,
        "end": 831,
        "callee": {
          "type": "MemberExpression",
          "start": 815,
          "end": 828,
          "object": {
            "type": "Identifier",
            "start": 815,
            "end": 823,
            "name": "iterator"
          },
          "property": {
            "type": "Identifier",
            "start": 824,
            "end": 828,
            "name": "drop"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 829,
            "end": 830,
            "value": 2,
            "raw": "2"
          }
        ],
        "optional": false
      },
      "body": {
        "type": "EmptyStatement",
        "start": 832,
        "end": 833
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 835,
      "end": 865,
      "expression": {
        "type": "CallExpression",
        "start": 835,
        "end": 864,
        "callee": {
          "type": "MemberExpression",
          "start": 835,
          "end": 851,
          "object": {
            "type": "Identifier",
            "start": 835,
            "end": 841,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 842,
            "end": 851,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 852,
            "end": 860,
            "name": "nextGets"
          },
          {
            "type": "Literal",
            "start": 862,
            "end": 863,
            "value": 1,
            "raw": "1"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 866,
      "end": 897,
      "expression": {
        "type": "CallExpression",
        "start": 866,
        "end": 896,
        "callee": {
          "type": "MemberExpression",
          "start": 866,
          "end": 882,
          "object": {
            "type": "Identifier",
            "start": 866,
            "end": 872,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 873,
            "end": 882,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 883,
            "end": 892,
            "name": "nextCalls"
          },
          {
            "type": "Literal",
            "start": 894,
            "end": 895,
            "value": 5,
            "raw": "5"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}