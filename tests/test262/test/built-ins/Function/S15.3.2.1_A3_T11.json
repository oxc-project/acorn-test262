{
  "type": "Program",
  "start": 0,
  "end": 1250,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 938,
      "end": 954,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 942,
          "end": 953,
          "id": {
            "type": "Identifier",
            "start": 942,
            "end": 943,
            "name": "p"
          },
          "init": {
            "type": "Literal",
            "start": 946,
            "end": 953,
            "value": "a,b,c",
            "raw": "\"a,b,c\""
          }
        }
      ]
    },
    {
      "type": "TryStatement",
      "start": 956,
      "end": 1073,
      "block": {
        "type": "BlockStatement",
        "start": 960,
        "end": 998,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 964,
            "end": 996,
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 968,
                "end": 995,
                "id": {
                  "type": "Identifier",
                  "start": 968,
                  "end": 969,
                  "name": "f"
                },
                "init": {
                  "type": "NewExpression",
                  "start": 972,
                  "end": 995,
                  "callee": {
                    "type": "Identifier",
                    "start": 976,
                    "end": 984,
                    "name": "Function"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 985,
                      "end": 986,
                      "name": "p"
                    },
                    {
                      "type": "UnaryExpression",
                      "start": 988,
                      "end": 994,
                      "operator": "void",
                      "argument": {
                        "type": "Literal",
                        "start": 993,
                        "end": 994,
                        "value": 0,
                        "raw": "0"
                      },
                      "prefix": true
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 999,
        "end": 1073,
        "param": {
          "type": "Identifier",
          "start": 1006,
          "end": 1007,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1009,
          "end": 1073,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 1013,
              "end": 1071,
              "argument": {
                "type": "NewExpression",
                "start": 1019,
                "end": 1070,
                "callee": {
                  "type": "Identifier",
                  "start": 1023,
                  "end": 1035,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 1036,
                    "end": 1069,
                    "left": {
                      "type": "Literal",
                      "start": 1036,
                      "end": 1065,
                      "value": "#1: test failed with error ",
                      "raw": "'#1: test failed with error '"
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 1068,
                      "end": 1069,
                      "name": "e"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1075,
      "end": 1190,
      "expression": {
        "type": "CallExpression",
        "start": 1075,
        "end": 1189,
        "callee": {
          "type": "MemberExpression",
          "start": 1075,
          "end": 1091,
          "object": {
            "type": "Identifier",
            "start": 1075,
            "end": 1081,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1082,
            "end": 1091,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1092,
            "end": 1105,
            "object": {
              "type": "Identifier",
              "start": 1092,
              "end": 1093,
              "name": "f"
            },
            "property": {
              "type": "Identifier",
              "start": 1094,
              "end": 1105,
              "name": "constructor"
            },
            "optional": false,
            "computed": false
          },
          {
            "type": "Identifier",
            "start": 1107,
            "end": 1115,
            "name": "Function"
          },
          {
            "type": "Literal",
            "start": 1117,
            "end": 1188,
            "value": "The value of f.constructor is expected to equal the value of Function",
            "raw": "'The value of f.constructor is expected to equal the value of Function'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1191,
      "end": 1249,
      "expression": {
        "type": "CallExpression",
        "start": 1191,
        "end": 1248,
        "callee": {
          "type": "MemberExpression",
          "start": 1191,
          "end": 1207,
          "object": {
            "type": "Identifier",
            "start": 1191,
            "end": 1197,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1198,
            "end": 1207,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1208,
            "end": 1211,
            "callee": {
              "type": "Identifier",
              "start": 1208,
              "end": 1209,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 1213,
            "end": 1222,
            "name": "undefined"
          },
          {
            "type": "Literal",
            "start": 1224,
            "end": 1247,
            "value": "f() returns undefined",
            "raw": "'f() returns undefined'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}