{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p",
            "start": 942,
            "end": 943
          },
          "init": {
            "type": "Literal",
            "value": "a,b,c",
            "raw": "\"a,b,c\"",
            "start": 946,
            "end": 953
          },
          "start": 942,
          "end": 953
        }
      ],
      "start": 938,
      "end": 954
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "f",
                  "start": 968,
                  "end": 969
                },
                "init": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Function",
                    "start": 976,
                    "end": 984
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "p",
                      "start": 985,
                      "end": 986
                    },
                    {
                      "type": "UnaryExpression",
                      "operator": "void",
                      "argument": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 993,
                        "end": 994
                      },
                      "prefix": true,
                      "start": 988,
                      "end": 994
                    }
                  ],
                  "start": 972,
                  "end": 995
                },
                "start": 968,
                "end": 995
              }
            ],
            "start": 964,
            "end": 996
          }
        ],
        "start": 960,
        "end": 998
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1006,
          "end": 1007
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 1023,
                  "end": 1035
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": "#1: test failed with error ",
                      "raw": "'#1: test failed with error '",
                      "start": 1036,
                      "end": 1065
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 1068,
                      "end": 1069
                    },
                    "start": 1036,
                    "end": 1069
                  }
                ],
                "start": 1019,
                "end": 1070
              },
              "start": 1013,
              "end": 1071
            }
          ],
          "start": 1009,
          "end": 1073
        },
        "start": 999,
        "end": 1073
      },
      "finalizer": null,
      "start": 956,
      "end": 1073
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1075,
            "end": 1081
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1082,
            "end": 1091
          },
          "optional": false,
          "computed": false,
          "start": 1075,
          "end": 1091
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "f",
              "start": 1092,
              "end": 1093
            },
            "property": {
              "type": "Identifier",
              "name": "constructor",
              "start": 1094,
              "end": 1105
            },
            "optional": false,
            "computed": false,
            "start": 1092,
            "end": 1105
          },
          {
            "type": "Identifier",
            "name": "Function",
            "start": 1107,
            "end": 1115
          },
          {
            "type": "Literal",
            "value": "The value of f.constructor is expected to equal the value of Function",
            "raw": "'The value of f.constructor is expected to equal the value of Function'",
            "start": 1117,
            "end": 1188
          }
        ],
        "optional": false,
        "start": 1075,
        "end": 1189
      },
      "start": 1075,
      "end": 1190
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1191,
            "end": 1197
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1198,
            "end": 1207
          },
          "optional": false,
          "computed": false,
          "start": 1191,
          "end": 1207
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f",
              "start": 1208,
              "end": 1209
            },
            "arguments": [],
            "optional": false,
            "start": 1208,
            "end": 1211
          },
          {
            "type": "Identifier",
            "name": "undefined",
            "start": 1213,
            "end": 1222
          },
          {
            "type": "Literal",
            "value": "f() returns undefined",
            "raw": "'f() returns undefined'",
            "start": 1224,
            "end": 1247
          }
        ],
        "optional": false,
        "start": 1191,
        "end": 1248
      },
      "start": 1191,
      "end": 1249
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1250
}