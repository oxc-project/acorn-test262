{
  "type": "Program",
  "start": 0,
  "end": 1236,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 926,
      "end": 942,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 930,
          "end": 941,
          "id": {
            "type": "Identifier",
            "start": 930,
            "end": 931,
            "name": "p"
          },
          "init": {
            "type": "Literal",
            "start": 934,
            "end": 941,
            "value": "a,b,c",
            "raw": "\"a,b,c\""
          }
        }
      ]
    },
    {
      "type": "TryStatement",
      "start": 944,
      "end": 1059,
      "block": {
        "type": "BlockStatement",
        "start": 948,
        "end": 984,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 952,
            "end": 982,
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 956,
                "end": 981,
                "id": {
                  "type": "Identifier",
                  "start": 956,
                  "end": 957,
                  "name": "f"
                },
                "init": {
                  "type": "NewExpression",
                  "start": 960,
                  "end": 981,
                  "callee": {
                    "type": "Identifier",
                    "start": 964,
                    "end": 972,
                    "name": "Function"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 973,
                      "end": 974,
                      "name": "p"
                    },
                    {
                      "type": "Literal",
                      "start": 976,
                      "end": 980,
                      "value": null,
                      "raw": "null"
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 985,
        "end": 1059,
        "param": {
          "type": "Identifier",
          "start": 992,
          "end": 993,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 995,
          "end": 1059,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 999,
              "end": 1057,
              "argument": {
                "type": "NewExpression",
                "start": 1005,
                "end": 1056,
                "callee": {
                  "type": "Identifier",
                  "start": 1009,
                  "end": 1021,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 1022,
                    "end": 1055,
                    "left": {
                      "type": "Literal",
                      "start": 1022,
                      "end": 1051,
                      "value": "#1: test failed with error ",
                      "raw": "'#1: test failed with error '"
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 1054,
                      "end": 1055,
                      "name": "e"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1061,
      "end": 1176,
      "expression": {
        "type": "CallExpression",
        "start": 1061,
        "end": 1175,
        "callee": {
          "type": "MemberExpression",
          "start": 1061,
          "end": 1077,
          "object": {
            "type": "Identifier",
            "start": 1061,
            "end": 1067,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1068,
            "end": 1077,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1078,
            "end": 1091,
            "object": {
              "type": "Identifier",
              "start": 1078,
              "end": 1079,
              "name": "f"
            },
            "property": {
              "type": "Identifier",
              "start": 1080,
              "end": 1091,
              "name": "constructor"
            },
            "optional": false,
            "computed": false
          },
          {
            "type": "Identifier",
            "start": 1093,
            "end": 1101,
            "name": "Function"
          },
          {
            "type": "Literal",
            "start": 1103,
            "end": 1174,
            "value": "The value of f.constructor is expected to equal the value of Function",
            "raw": "'The value of f.constructor is expected to equal the value of Function'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1177,
      "end": 1235,
      "expression": {
        "type": "CallExpression",
        "start": 1177,
        "end": 1234,
        "callee": {
          "type": "MemberExpression",
          "start": 1177,
          "end": 1193,
          "object": {
            "type": "Identifier",
            "start": 1177,
            "end": 1183,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1184,
            "end": 1193,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1194,
            "end": 1197,
            "callee": {
              "type": "Identifier",
              "start": 1194,
              "end": 1195,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 1199,
            "end": 1208,
            "name": "undefined"
          },
          {
            "type": "Literal",
            "start": 1210,
            "end": 1233,
            "value": "f() returns undefined",
            "raw": "'f() returns undefined'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}