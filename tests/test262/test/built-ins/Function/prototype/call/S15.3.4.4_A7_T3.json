{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "obj",
                  "start": 308,
                  "end": 311
                },
                "init": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Function",
                      "start": 318,
                      "end": 326
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "call",
                      "start": 327,
                      "end": 331
                    },
                    "optional": false,
                    "computed": false,
                    "start": 318,
                    "end": 331
                  },
                  "arguments": [],
                  "start": 314,
                  "end": 331
                },
                "start": 308,
                "end": 331
              }
            ],
            "start": 304,
            "end": 332
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 345,
                "end": 357
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: Function.prototype.call can't be used as [[Construct]] caller",
                  "raw": "'#1: Function.prototype.call can\\'t be used as [[Construct]] caller'",
                  "start": 358,
                  "end": 426
                }
              ],
              "start": 341,
              "end": 427
            },
            "start": 335,
            "end": 428
          }
        ],
        "start": 300,
        "end": 430
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 438,
          "end": 439
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 445,
                  "end": 451
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 452,
                      "end": 453
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "name": "TypeError",
                      "start": 465,
                      "end": 474
                    },
                    "start": 452,
                    "end": 474
                  },
                  {
                    "type": "Literal",
                    "value": "The result of evaluating (e instanceof TypeError) is expected to be true",
                    "raw": "'The result of evaluating (e instanceof TypeError) is expected to be true'",
                    "start": 476,
                    "end": 550
                  }
                ],
                "optional": false,
                "start": 445,
                "end": 551
              },
              "start": 445,
              "end": 552
            }
          ],
          "start": 441,
          "end": 554
        },
        "start": 431,
        "end": 554
      },
      "finalizer": null,
      "start": 296,
      "end": 554
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 555
}