{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "i",
            "start": 447,
            "end": 448
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 451,
            "end": 452
          },
          "start": 447,
          "end": 452
        }
      ],
      "start": 443,
      "end": 453
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "p",
            "start": 459,
            "end": 460
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 467,
                  "end": 475
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "a",
                            "raw": "\"a\"",
                            "start": 501,
                            "end": 504
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "expression": {
                              "type": "UpdateExpression",
                              "operator": "++",
                              "prefix": true,
                              "argument": {
                                "type": "Identifier",
                                "name": "i",
                                "start": 510,
                                "end": 511
                              },
                              "start": 508,
                              "end": 511
                            },
                            "start": 507,
                            "end": 512
                          },
                          "start": 501,
                          "end": 512
                        },
                        "start": 494,
                        "end": 513
                      }
                    ],
                    "start": 488,
                    "end": 517
                  },
                  "expression": false,
                  "start": 477,
                  "end": 517
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 467,
                "end": 517
              }
            ],
            "start": 463,
            "end": 519
          },
          "start": 459,
          "end": 519
        }
      ],
      "start": 455,
      "end": 520
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "obj",
            "start": 526,
            "end": 529
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 532,
            "end": 534
          },
          "start": 526,
          "end": 534
        }
      ],
      "start": 522,
      "end": 535
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "Function",
              "start": 537,
              "end": 545
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "p",
                "start": 546,
                "end": 547
              },
              {
                "type": "Literal",
                "value": "a2,a3",
                "raw": "\"a2,a3\"",
                "start": 549,
                "end": 556
              },
              {
                "type": "Literal",
                "value": "this.shifted=a1;",
                "raw": "\"this.shifted=a1;\"",
                "start": 558,
                "end": 576
              }
            ],
            "optional": false,
            "start": 537,
            "end": 577
          },
          "property": {
            "type": "Identifier",
            "name": "call",
            "start": 578,
            "end": 582
          },
          "optional": false,
          "computed": false,
          "start": 537,
          "end": 582
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "obj",
            "start": 583,
            "end": 586
          },
          {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Array",
              "start": 592,
              "end": 597
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "nine",
                "raw": "\"nine\"",
                "start": 598,
                "end": 604
              },
              {
                "type": "Literal",
                "value": "inch",
                "raw": "\"inch\"",
                "start": 606,
                "end": 612
              },
              {
                "type": "Literal",
                "value": "nails",
                "raw": "\"nails\"",
                "start": 614,
                "end": 621
              }
            ],
            "start": 588,
            "end": 622
          }
        ],
        "optional": false,
        "start": 537,
        "end": 623
      },
      "start": 537,
      "end": 624
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 626,
            "end": 632
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 633,
            "end": 642
          },
          "optional": false,
          "computed": false,
          "start": 626,
          "end": 642
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "obj",
                "start": 643,
                "end": 646
              },
              "property": {
                "type": "Literal",
                "value": "shifted",
                "raw": "\"shifted\"",
                "start": 647,
                "end": 656
              },
              "optional": false,
              "computed": true,
              "start": 643,
              "end": 657
            },
            "property": {
              "type": "Identifier",
              "name": "length",
              "start": 658,
              "end": 664
            },
            "optional": false,
            "computed": false,
            "start": 643,
            "end": 664
          },
          {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 666,
            "end": 667
          }
        ],
        "optional": false,
        "start": 626,
        "end": 668
      },
      "start": 626,
      "end": 669
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "LogicalExpression",
        "left": {
          "type": "LogicalExpression",
          "left": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "obj",
                    "start": 676,
                    "end": 679
                  },
                  "property": {
                    "type": "Literal",
                    "value": "shifted",
                    "raw": "\"shifted\"",
                    "start": 680,
                    "end": 689
                  },
                  "optional": false,
                  "computed": true,
                  "start": 676,
                  "end": 690
                },
                "property": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 691,
                  "end": 692
                },
                "optional": false,
                "computed": true,
                "start": 676,
                "end": 693
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "value": "nine",
                "raw": "\"nine\"",
                "start": 698,
                "end": 704
              },
              "start": 676,
              "end": 704
            },
            "start": 675,
            "end": 705
          },
          "operator": "||",
          "right": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "obj",
                    "start": 710,
                    "end": 713
                  },
                  "property": {
                    "type": "Literal",
                    "value": "shifted",
                    "raw": "\"shifted\"",
                    "start": 714,
                    "end": 723
                  },
                  "optional": false,
                  "computed": true,
                  "start": 710,
                  "end": 724
                },
                "property": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 725,
                  "end": 726
                },
                "optional": false,
                "computed": true,
                "start": 710,
                "end": 727
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "value": "inch",
                "raw": "\"inch\"",
                "start": 732,
                "end": 738
              },
              "start": 710,
              "end": 738
            },
            "start": 709,
            "end": 739
          },
          "start": 675,
          "end": 739
        },
        "operator": "||",
        "right": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "obj",
                  "start": 744,
                  "end": 747
                },
                "property": {
                  "type": "Literal",
                  "value": "shifted",
                  "raw": "\"shifted\"",
                  "start": 748,
                  "end": 757
                },
                "optional": false,
                "computed": true,
                "start": 744,
                "end": 758
              },
              "property": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 759,
                "end": 760
              },
              "optional": false,
              "computed": true,
              "start": 744,
              "end": 761
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "value": "nails",
              "raw": "\"nails\"",
              "start": 766,
              "end": 773
            },
            "start": 744,
            "end": 773
          },
          "start": 743,
          "end": 774
        },
        "start": 675,
        "end": 774
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 790,
                "end": 802
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object",
                  "raw": "'#2: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object'",
                  "start": 803,
                  "end": 965
                }
              ],
              "start": 786,
              "end": 966
            },
            "start": 780,
            "end": 967
          }
        ],
        "start": 776,
        "end": 969
      },
      "alternate": null,
      "start": 671,
      "end": 969
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "typeof",
          "argument": {
            "type": "MemberExpression",
            "object": {
              "type": "ThisExpression",
              "start": 982,
              "end": 986
            },
            "property": {
              "type": "Literal",
              "value": "shifted",
              "raw": "\"shifted\"",
              "start": 987,
              "end": 996
            },
            "optional": false,
            "computed": true,
            "start": 982,
            "end": 997
          },
          "prefix": true,
          "start": 975,
          "end": 997
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "undefined",
          "raw": "\"undefined\"",
          "start": 1002,
          "end": 1013
        },
        "start": 975,
        "end": 1013
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1029,
                "end": 1041
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object",
                  "raw": "'#3: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object'",
                  "start": 1042,
                  "end": 1204
                }
              ],
              "start": 1025,
              "end": 1205
            },
            "start": 1019,
            "end": 1206
          }
        ],
        "start": 1015,
        "end": 1208
      },
      "alternate": null,
      "start": 971,
      "end": 1208
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1209
}