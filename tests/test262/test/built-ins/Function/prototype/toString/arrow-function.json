{
  "type": "Program",
  "start": 0,
  "end": 799,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 310,
      "end": 424,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 314,
          "end": 412,
          "id": {
            "type": "Identifier",
            "start": 314,
            "end": 315,
            "name": "f"
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "start": 330,
            "end": 412,
            "expression": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 340,
                "end": 341,
                "name": "a"
              },
              {
                "type": "Identifier",
                "start": 360,
                "end": 361,
                "name": "b"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 391,
              "end": 412,
              "body": [
                {
                  "type": "EmptyStatement",
                  "start": 401,
                  "end": 402
                }
              ]
            },
            "id": null,
            "generator": false
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 425,
      "end": 489,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 429,
          "end": 477,
          "id": {
            "type": "Identifier",
            "start": 429,
            "end": 430,
            "name": "g"
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "start": 445,
            "end": 477,
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "Literal",
              "start": 476,
              "end": 477,
              "value": 0,
              "raw": "0"
            },
            "id": null,
            "generator": false
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 490,
      "end": 544,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 494,
          "end": 532,
          "id": {
            "type": "Identifier",
            "start": 494,
            "end": 495,
            "name": "h"
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "start": 510,
            "end": 532,
            "expression": true,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 510,
                "end": 511,
                "name": "a"
              }
            ],
            "body": {
              "type": "Literal",
              "start": 531,
              "end": 532,
              "value": 0,
              "raw": "0"
            },
            "id": null,
            "generator": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 546,
      "end": 666,
      "expression": {
        "type": "CallExpression",
        "start": 546,
        "end": 665,
        "callee": {
          "type": "Identifier",
          "start": 546,
          "end": 576,
          "name": "assertToStringOrNativeFunction"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 577,
            "end": 578,
            "name": "f"
          },
          {
            "type": "Literal",
            "start": 580,
            "end": 664,
            "value": "( /* a */ a /* b */ , /* c */ b /* d */ ) /* e */ => /* f */ { /* g */ ; /* h */ }",
            "raw": "\"( /* a */ a /* b */ , /* c */ b /* d */ ) /* e */ => /* f */ { /* g */ ; /* h */ }\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 667,
      "end": 737,
      "expression": {
        "type": "CallExpression",
        "start": 667,
        "end": 736,
        "callee": {
          "type": "Identifier",
          "start": 667,
          "end": 697,
          "name": "assertToStringOrNativeFunction"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 698,
            "end": 699,
            "name": "g"
          },
          {
            "type": "Literal",
            "start": 701,
            "end": 735,
            "value": "( /* a */ ) /* b */ => /* c */ 0",
            "raw": "\"( /* a */ ) /* b */ => /* c */ 0\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 738,
      "end": 798,
      "expression": {
        "type": "CallExpression",
        "start": 738,
        "end": 797,
        "callee": {
          "type": "Identifier",
          "start": 738,
          "end": 768,
          "name": "assertToStringOrNativeFunction"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 769,
            "end": 770,
            "name": "h"
          },
          {
            "type": "Literal",
            "start": 772,
            "end": 796,
            "value": "a /* a */ => /* b */ 0",
            "raw": "\"a /* a */ => /* b */ 0\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}