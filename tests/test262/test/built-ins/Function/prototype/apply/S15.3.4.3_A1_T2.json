{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "FACTORY",
        "start": 510,
        "end": 517
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [],
        "start": 520,
        "end": 522
      },
      "expression": false,
      "start": 501,
      "end": 522
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "FACTORY",
            "start": 524,
            "end": 531
          },
          "property": {
            "type": "Identifier",
            "name": "prototype",
            "start": 532,
            "end": 541
          },
          "optional": false,
          "computed": false,
          "start": 524,
          "end": 541
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Function",
            "start": 544,
            "end": 552
          },
          "property": {
            "type": "Identifier",
            "name": "prototype",
            "start": 553,
            "end": 562
          },
          "optional": false,
          "computed": false,
          "start": 544,
          "end": 562
        },
        "start": 524,
        "end": 562
      },
      "start": 524,
      "end": 563
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "obj",
            "start": 569,
            "end": 572
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "FACTORY",
              "start": 579,
              "end": 586
            },
            "arguments": [],
            "start": 575,
            "end": 586
          },
          "start": 569,
          "end": 586
        }
      ],
      "start": 565,
      "end": 587
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 589,
            "end": 595
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 596,
            "end": 605
          },
          "optional": false,
          "computed": false,
          "start": 589,
          "end": 605
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "obj",
                "start": 613,
                "end": 616
              },
              "property": {
                "type": "Identifier",
                "name": "apply",
                "start": 617,
                "end": 622
              },
              "optional": false,
              "computed": false,
              "start": 613,
              "end": 622
            },
            "prefix": true,
            "start": 606,
            "end": 622
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "\"function\"",
            "start": 624,
            "end": 634
          },
          {
            "type": "Literal",
            "value": "The value of `typeof obj.apply` is expected to be \"function\"",
            "raw": "'The value of `typeof obj.apply` is expected to be \"function\"'",
            "start": 636,
            "end": 698
          }
        ],
        "optional": false,
        "start": 589,
        "end": 699
      },
      "start": 589,
      "end": 700
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "obj",
                  "start": 710,
                  "end": 713
                },
                "property": {
                  "type": "Identifier",
                  "name": "apply",
                  "start": 714,
                  "end": 719
                },
                "optional": false,
                "computed": false,
                "start": 710,
                "end": 719
              },
              "arguments": [],
              "optional": false,
              "start": 710,
              "end": 721
            },
            "start": 710,
            "end": 722
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 735,
                "end": 747
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: If the object does not have a [[Call]] property, a TypeError exception is thrown",
                  "raw": "'#2: If the object does not have a [[Call]] property, a TypeError exception is thrown'",
                  "start": 748,
                  "end": 834
                }
              ],
              "start": 731,
              "end": 835
            },
            "start": 725,
            "end": 836
          }
        ],
        "start": 706,
        "end": 838
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 846,
          "end": 847
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 853,
                  "end": 859
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 860,
                      "end": 861
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "name": "TypeError",
                      "start": 873,
                      "end": 882
                    },
                    "start": 860,
                    "end": 882
                  },
                  {
                    "type": "Literal",
                    "value": "The result of evaluating (e instanceof TypeError) is expected to be true",
                    "raw": "'The result of evaluating (e instanceof TypeError) is expected to be true'",
                    "start": 884,
                    "end": 958
                  }
                ],
                "optional": false,
                "start": 853,
                "end": 959
              },
              "start": 853,
              "end": 960
            }
          ],
          "start": 849,
          "end": 962
        },
        "start": 839,
        "end": 962
      },
      "finalizer": null,
      "start": 702,
      "end": 962
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 963
}