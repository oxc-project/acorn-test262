{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "proto",
            "start": 497,
            "end": 502
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "Function",
              "start": 505,
              "end": 513
            },
            "arguments": [],
            "optional": false,
            "start": 505,
            "end": 515
          },
          "start": 497,
          "end": 515
        }
      ],
      "start": 493,
      "end": 516
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "FACTORY",
        "start": 527,
        "end": 534
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [],
        "start": 537,
        "end": 539
      },
      "expression": false,
      "start": 518,
      "end": 539
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "FACTORY",
            "start": 541,
            "end": 548
          },
          "property": {
            "type": "Identifier",
            "name": "prototype",
            "start": 549,
            "end": 558
          },
          "optional": false,
          "computed": false,
          "start": 541,
          "end": 558
        },
        "right": {
          "type": "Identifier",
          "name": "proto",
          "start": 561,
          "end": 566
        },
        "start": 541,
        "end": 566
      },
      "start": 541,
      "end": 567
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "obj",
            "start": 573,
            "end": 576
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "FACTORY",
              "start": 583,
              "end": 590
            },
            "arguments": [],
            "start": 579,
            "end": 590
          },
          "start": 573,
          "end": 590
        }
      ],
      "start": 569,
      "end": 591
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 593,
            "end": 599
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 600,
            "end": 609
          },
          "optional": false,
          "computed": false,
          "start": 593,
          "end": 609
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "obj",
                "start": 617,
                "end": 620
              },
              "property": {
                "type": "Identifier",
                "name": "apply",
                "start": 621,
                "end": 626
              },
              "optional": false,
              "computed": false,
              "start": 617,
              "end": 626
            },
            "prefix": true,
            "start": 610,
            "end": 626
          },
          {
            "type": "Literal",
            "value": "function",
            "raw": "\"function\"",
            "start": 628,
            "end": 638
          },
          {
            "type": "Literal",
            "value": "The value of `typeof obj.apply` is expected to be \"function\"",
            "raw": "'The value of `typeof obj.apply` is expected to be \"function\"'",
            "start": 640,
            "end": 702
          }
        ],
        "optional": false,
        "start": 593,
        "end": 703
      },
      "start": 593,
      "end": 704
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "obj",
                  "start": 714,
                  "end": 717
                },
                "property": {
                  "type": "Identifier",
                  "name": "apply",
                  "start": 718,
                  "end": 723
                },
                "optional": false,
                "computed": false,
                "start": 714,
                "end": 723
              },
              "arguments": [],
              "optional": false,
              "start": 714,
              "end": 725
            },
            "start": 714,
            "end": 726
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 739,
                "end": 751
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: If the object does not have a [[Call]] property, a TypeError exception is thrown",
                  "raw": "'#2: If the object does not have a [[Call]] property, a TypeError exception is thrown'",
                  "start": 752,
                  "end": 838
                }
              ],
              "start": 735,
              "end": 839
            },
            "start": 729,
            "end": 840
          }
        ],
        "start": 710,
        "end": 842
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 850,
          "end": 851
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 857,
                  "end": 863
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 864,
                      "end": 865
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "name": "TypeError",
                      "start": 877,
                      "end": 886
                    },
                    "start": 864,
                    "end": 886
                  },
                  {
                    "type": "Literal",
                    "value": "The result of evaluating (e instanceof TypeError) is expected to be true",
                    "raw": "'The result of evaluating (e instanceof TypeError) is expected to be true'",
                    "start": 888,
                    "end": 962
                  }
                ],
                "optional": false,
                "start": 857,
                "end": 963
              },
              "start": 857,
              "end": 964
            }
          ],
          "start": 853,
          "end": 966
        },
        "start": 843,
        "end": 966
      },
      "finalizer": null,
      "start": 706,
      "end": 966
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 967
}