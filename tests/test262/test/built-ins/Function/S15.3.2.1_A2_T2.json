{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "f",
                  "start": 414,
                  "end": 415
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Function",
                    "start": 418,
                    "end": 426
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "arg1, arg2",
                      "raw": "\"arg1, arg2\"",
                      "start": 427,
                      "end": 439
                    },
                    {
                      "type": "Literal",
                      "value": "arg3",
                      "raw": "\"arg3\"",
                      "start": 441,
                      "end": 447
                    },
                    {
                      "type": "Literal",
                      "value": "return arg1+arg2+arg3;",
                      "raw": "\"return arg1+arg2+arg3;\"",
                      "start": 449,
                      "end": 473
                    }
                  ],
                  "optional": false,
                  "start": 418,
                  "end": 474
                },
                "start": 414,
                "end": 474
              }
            ],
            "start": 410,
            "end": 475
          }
        ],
        "start": 406,
        "end": 477
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 485,
          "end": 486
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 502,
                  "end": 514
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "#1: test failed",
                    "raw": "'#1: test failed'",
                    "start": 515,
                    "end": 532
                  }
                ],
                "start": 498,
                "end": 533
              },
              "start": 492,
              "end": 534
            }
          ],
          "start": 488,
          "end": 536
        },
        "start": 478,
        "end": 536
      },
      "finalizer": null,
      "start": 402,
      "end": 536
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 538,
          "end": 544
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Identifier",
              "name": "f",
              "start": 545,
              "end": 546
            },
            "operator": "instanceof",
            "right": {
              "type": "Identifier",
              "name": "Function",
              "start": 558,
              "end": 566
            },
            "start": 545,
            "end": 566
          },
          {
            "type": "Literal",
            "value": "The result of evaluating (f instanceof Function) is expected to be true",
            "raw": "'The result of evaluating (f instanceof Function) is expected to be true'",
            "start": 568,
            "end": 641
          }
        ],
        "optional": false,
        "start": 538,
        "end": 642
      },
      "start": 538,
      "end": 643
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 644,
            "end": 650
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 651,
            "end": 660
          },
          "optional": false,
          "computed": false,
          "start": 644,
          "end": 660
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f",
              "start": 661,
              "end": 662
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "AB",
                "raw": "\"AB\"",
                "start": 663,
                "end": 667
              },
              {
                "type": "Literal",
                "value": "BA",
                "raw": "\"BA\"",
                "start": 669,
                "end": 673
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 675,
                "end": 676
              }
            ],
            "optional": false,
            "start": 661,
            "end": 677
          },
          {
            "type": "Literal",
            "value": "ABBA1",
            "raw": "\"ABBA1\"",
            "start": 679,
            "end": 686
          },
          {
            "type": "Literal",
            "value": "f(AB, BA, 1) must return \"ABBA1\"",
            "raw": "'f(AB, BA, 1) must return \"ABBA1\"'",
            "start": 688,
            "end": 722
          }
        ],
        "optional": false,
        "start": 644,
        "end": 723
      },
      "start": 644,
      "end": 724
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 725
}