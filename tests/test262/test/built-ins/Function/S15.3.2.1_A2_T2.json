{
  "type": "Program",
  "start": 0,
  "end": 725,
  "body": [
    {
      "type": "TryStatement",
      "start": 402,
      "end": 536,
      "block": {
        "type": "BlockStatement",
        "start": 406,
        "end": 477,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 410,
            "end": 475,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 414,
                "end": 474,
                "id": {
                  "type": "Identifier",
                  "start": 414,
                  "end": 415,
                  "name": "f"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 418,
                  "end": 474,
                  "callee": {
                    "type": "Identifier",
                    "start": 418,
                    "end": 426,
                    "name": "Function"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "start": 427,
                      "end": 439,
                      "value": "arg1, arg2",
                      "raw": "\"arg1, arg2\""
                    },
                    {
                      "type": "Literal",
                      "start": 441,
                      "end": 447,
                      "value": "arg3",
                      "raw": "\"arg3\""
                    },
                    {
                      "type": "Literal",
                      "start": 449,
                      "end": 473,
                      "value": "return arg1+arg2+arg3;",
                      "raw": "\"return arg1+arg2+arg3;\""
                    }
                  ],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 478,
        "end": 536,
        "param": {
          "type": "Identifier",
          "start": 485,
          "end": 486,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 488,
          "end": 536,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 492,
              "end": 534,
              "argument": {
                "type": "NewExpression",
                "start": 498,
                "end": 533,
                "callee": {
                  "type": "Identifier",
                  "start": 502,
                  "end": 514,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 515,
                    "end": 532,
                    "value": "#1: test failed",
                    "raw": "'#1: test failed'"
                  }
                ]
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 538,
      "end": 643,
      "expression": {
        "type": "CallExpression",
        "start": 538,
        "end": 642,
        "callee": {
          "type": "Identifier",
          "start": 538,
          "end": 544,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 545,
            "end": 566,
            "left": {
              "type": "Identifier",
              "start": 545,
              "end": 546,
              "name": "f"
            },
            "operator": "instanceof",
            "right": {
              "type": "Identifier",
              "start": 558,
              "end": 566,
              "name": "Function"
            }
          },
          {
            "type": "Literal",
            "start": 568,
            "end": 641,
            "value": "The result of evaluating (f instanceof Function) is expected to be true",
            "raw": "'The result of evaluating (f instanceof Function) is expected to be true'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 644,
      "end": 724,
      "expression": {
        "type": "CallExpression",
        "start": 644,
        "end": 723,
        "callee": {
          "type": "MemberExpression",
          "start": 644,
          "end": 660,
          "object": {
            "type": "Identifier",
            "start": 644,
            "end": 650,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 651,
            "end": 660,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 661,
            "end": 677,
            "callee": {
              "type": "Identifier",
              "start": 661,
              "end": 662,
              "name": "f"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 663,
                "end": 667,
                "value": "AB",
                "raw": "\"AB\""
              },
              {
                "type": "Literal",
                "start": 669,
                "end": 673,
                "value": "BA",
                "raw": "\"BA\""
              },
              {
                "type": "Literal",
                "start": 675,
                "end": 676,
                "value": 1,
                "raw": "1"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 679,
            "end": 686,
            "value": "ABBA1",
            "raw": "\"ABBA1\""
          },
          {
            "type": "Literal",
            "start": 688,
            "end": 722,
            "value": "f(AB, BA, 1) must return \"ABBA1\"",
            "raw": "'f(AB, BA, 1) must return \"ABBA1\"'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}