{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "f",
            "start": 351,
            "end": 352
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "Function",
              "start": 355,
              "end": 363
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "arg1,arg2,arg3",
                "raw": "\"arg1,arg2,arg3\"",
                "start": 364,
                "end": 380
              },
              {
                "type": "Literal",
                "value": "arg5,arg4",
                "raw": "\"arg5,arg4\"",
                "start": 382,
                "end": 393
              },
              {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 395,
                "end": 399
              }
            ],
            "optional": false,
            "start": 355,
            "end": 400
          },
          "start": 351,
          "end": 400
        }
      ],
      "start": 347,
      "end": 401
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 403,
          "end": 409
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "f",
                "start": 410,
                "end": 411
              },
              "property": {
                "type": "Identifier",
                "name": "hasOwnProperty",
                "start": 412,
                "end": 426
              },
              "optional": false,
              "computed": false,
              "start": 410,
              "end": 426
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "length",
                "raw": "'length'",
                "start": 427,
                "end": 435
              }
            ],
            "optional": false,
            "start": 410,
            "end": 436
          },
          {
            "type": "Literal",
            "value": "f.hasOwnProperty('length') must return true",
            "raw": "'f.hasOwnProperty(\\'length\\') must return true'",
            "start": 438,
            "end": 485
          }
        ],
        "optional": false,
        "start": 403,
        "end": 486
      },
      "start": 403,
      "end": 487
    },
    {
      "type": "ForInStatement",
      "left": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "key",
              "start": 498,
              "end": 501
            },
            "init": null,
            "start": 498,
            "end": 501
          }
        ],
        "start": 494,
        "end": 501
      },
      "right": {
        "type": "Identifier",
        "name": "f",
        "start": 505,
        "end": 506
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "key",
                "start": 516,
                "end": 519
              },
              "operator": "==",
              "right": {
                "type": "Literal",
                "value": "length",
                "raw": "\"length\"",
                "start": 523,
                "end": 531
              },
              "start": 516,
              "end": 531
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "lengthenumed",
                        "start": 543,
                        "end": 555
                      },
                      "init": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 558,
                        "end": 562
                      },
                      "start": 543,
                      "end": 562
                    }
                  ],
                  "start": 539,
                  "end": 563
                }
              ],
              "start": 533,
              "end": 567
            },
            "alternate": null,
            "start": 512,
            "end": 567
          }
        ],
        "start": 508,
        "end": 569
      },
      "start": 489,
      "end": 569
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 571,
          "end": 577
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "!",
            "argument": {
              "type": "Identifier",
              "name": "lengthenumed",
              "start": 579,
              "end": 591
            },
            "prefix": true,
            "start": 578,
            "end": 591
          },
          {
            "type": "Literal",
            "value": "The value of !lengthenumed is expected to be true",
            "raw": "'The value of !lengthenumed is expected to be true'",
            "start": 593,
            "end": 644
          }
        ],
        "optional": false,
        "start": 571,
        "end": 645
      },
      "start": 571,
      "end": 646
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 693
}