{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "f",
            "start": 358,
            "end": 359
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Function",
              "start": 366,
              "end": 374
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "arg1,arg2,arg3",
                "raw": "\"arg1,arg2,arg3\"",
                "start": 375,
                "end": 391
              },
              {
                "type": "Literal",
                "value": "arg1,arg2",
                "raw": "\"arg1,arg2\"",
                "start": 393,
                "end": 404
              },
              {
                "type": "Literal",
                "value": "arg3",
                "raw": "\"arg3\"",
                "start": 406,
                "end": 412
              },
              {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 414,
                "end": 418
              }
            ],
            "start": 362,
            "end": 419
          },
          "start": 358,
          "end": 419
        }
      ],
      "start": 354,
      "end": 420
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 422,
          "end": 428
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "f",
                "start": 429,
                "end": 430
              },
              "property": {
                "type": "Identifier",
                "name": "hasOwnProperty",
                "start": 431,
                "end": 445
              },
              "optional": false,
              "computed": false,
              "start": 429,
              "end": 445
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "length",
                "raw": "'length'",
                "start": 446,
                "end": 454
              }
            ],
            "optional": false,
            "start": 429,
            "end": 455
          },
          {
            "type": "Literal",
            "value": "f.hasOwnProperty('length') must return true",
            "raw": "'f.hasOwnProperty(\\'length\\') must return true'",
            "start": 457,
            "end": 504
          }
        ],
        "optional": false,
        "start": 422,
        "end": 505
      },
      "start": 422,
      "end": 506
    },
    {
      "type": "ForInStatement",
      "left": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "key",
              "start": 517,
              "end": 520
            },
            "init": null,
            "start": 517,
            "end": 520
          }
        ],
        "start": 513,
        "end": 520
      },
      "right": {
        "type": "Identifier",
        "name": "f",
        "start": 524,
        "end": 525
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "key",
                "start": 535,
                "end": 538
              },
              "operator": "==",
              "right": {
                "type": "Literal",
                "value": "length",
                "raw": "\"length\"",
                "start": 542,
                "end": 550
              },
              "start": 535,
              "end": 550
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "lengthenumed",
                        "start": 562,
                        "end": 574
                      },
                      "init": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 577,
                        "end": 581
                      },
                      "start": 562,
                      "end": 581
                    }
                  ],
                  "start": 558,
                  "end": 582
                }
              ],
              "start": 552,
              "end": 586
            },
            "alternate": null,
            "start": 531,
            "end": 586
          }
        ],
        "start": 527,
        "end": 588
      },
      "start": 508,
      "end": 588
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 590,
          "end": 596
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "!",
            "argument": {
              "type": "Identifier",
              "name": "lengthenumed",
              "start": 598,
              "end": 610
            },
            "prefix": true,
            "start": 597,
            "end": 610
          },
          {
            "type": "Literal",
            "value": "The value of !lengthenumed is expected to be true",
            "raw": "'The value of !lengthenumed is expected to be true'",
            "start": 612,
            "end": 663
          }
        ],
        "optional": false,
        "start": 590,
        "end": 664
      },
      "start": 590,
      "end": 665
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 712
}