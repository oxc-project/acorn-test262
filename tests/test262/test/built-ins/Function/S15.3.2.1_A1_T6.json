{
  "type": "Program",
  "start": 0,
  "end": 1160,
  "body": [
    {
      "type": "TryStatement",
      "start": 883,
      "end": 1005,
      "block": {
        "type": "BlockStatement",
        "start": 887,
        "end": 930,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 891,
            "end": 928,
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 895,
                "end": 927,
                "id": {
                  "type": "Identifier",
                  "start": 895,
                  "end": 896,
                  "name": "f"
                },
                "init": {
                  "type": "NewExpression",
                  "start": 899,
                  "end": 927,
                  "callee": {
                    "type": "Identifier",
                    "start": 903,
                    "end": 911,
                    "name": "Function"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "start": 912,
                      "end": 926,
                      "value": "return true;",
                      "raw": "\"return true;\""
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 931,
        "end": 1005,
        "param": {
          "type": "Identifier",
          "start": 938,
          "end": 939,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 941,
          "end": 1005,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 945,
              "end": 1003,
              "argument": {
                "type": "NewExpression",
                "start": 951,
                "end": 1002,
                "callee": {
                  "type": "Identifier",
                  "start": 955,
                  "end": 967,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 968,
                    "end": 1001,
                    "left": {
                      "type": "Literal",
                      "start": 968,
                      "end": 997,
                      "value": "#1: test failed with error ",
                      "raw": "'#1: test failed with error '"
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 1000,
                      "end": 1001,
                      "name": "e"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1007,
      "end": 1122,
      "expression": {
        "type": "CallExpression",
        "start": 1007,
        "end": 1121,
        "callee": {
          "type": "MemberExpression",
          "start": 1007,
          "end": 1023,
          "object": {
            "type": "Identifier",
            "start": 1007,
            "end": 1013,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1014,
            "end": 1023,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1024,
            "end": 1037,
            "object": {
              "type": "Identifier",
              "start": 1024,
              "end": 1025,
              "name": "f"
            },
            "property": {
              "type": "Identifier",
              "start": 1026,
              "end": 1037,
              "name": "constructor"
            },
            "optional": false,
            "computed": false
          },
          {
            "type": "Identifier",
            "start": 1039,
            "end": 1047,
            "name": "Function"
          },
          {
            "type": "Literal",
            "start": 1049,
            "end": 1120,
            "value": "The value of f.constructor is expected to equal the value of Function",
            "raw": "'The value of f.constructor is expected to equal the value of Function'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1123,
      "end": 1159,
      "expression": {
        "type": "CallExpression",
        "start": 1123,
        "end": 1158,
        "callee": {
          "type": "Identifier",
          "start": 1123,
          "end": 1129,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1130,
            "end": 1133,
            "callee": {
              "type": "Identifier",
              "start": 1130,
              "end": 1131,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1135,
            "end": 1157,
            "value": "f() must return true",
            "raw": "'f() must return true'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}