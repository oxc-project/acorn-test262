{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "f",
                  "start": 951,
                  "end": 952
                },
                "init": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Function",
                    "start": 959,
                    "end": 967
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "",
                      "raw": "\"\"",
                      "start": 968,
                      "end": 970
                    },
                    {
                      "type": "Literal",
                      "value": "",
                      "raw": "\"\"",
                      "start": 972,
                      "end": 974
                    }
                  ],
                  "start": 955,
                  "end": 975
                },
                "start": 951,
                "end": 975
              }
            ],
            "start": 947,
            "end": 976
          }
        ],
        "start": 943,
        "end": 978
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 986,
          "end": 987
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 1003,
                  "end": 1015
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": "#1: test failed with error ",
                      "raw": "'#1: test failed with error '",
                      "start": 1016,
                      "end": 1045
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 1048,
                      "end": 1049
                    },
                    "start": 1016,
                    "end": 1049
                  }
                ],
                "start": 999,
                "end": 1050
              },
              "start": 993,
              "end": 1051
            }
          ],
          "start": 989,
          "end": 1053
        },
        "start": 979,
        "end": 1053
      },
      "finalizer": null,
      "start": 939,
      "end": 1053
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1055,
            "end": 1061
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1062,
            "end": 1071
          },
          "optional": false,
          "computed": false,
          "start": 1055,
          "end": 1071
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "f",
              "start": 1072,
              "end": 1073
            },
            "property": {
              "type": "Identifier",
              "name": "constructor",
              "start": 1074,
              "end": 1085
            },
            "optional": false,
            "computed": false,
            "start": 1072,
            "end": 1085
          },
          {
            "type": "Identifier",
            "name": "Function",
            "start": 1087,
            "end": 1095
          },
          {
            "type": "Literal",
            "value": "The value of f.constructor is expected to equal the value of Function",
            "raw": "'The value of f.constructor is expected to equal the value of Function'",
            "start": 1097,
            "end": 1168
          }
        ],
        "optional": false,
        "start": 1055,
        "end": 1169
      },
      "start": 1055,
      "end": 1170
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1171,
            "end": 1177
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1178,
            "end": 1187
          },
          "optional": false,
          "computed": false,
          "start": 1171,
          "end": 1187
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f",
              "start": 1188,
              "end": 1189
            },
            "arguments": [],
            "optional": false,
            "start": 1188,
            "end": 1191
          },
          {
            "type": "Identifier",
            "name": "undefined",
            "start": 1193,
            "end": 1202
          },
          {
            "type": "Literal",
            "value": "f() returns undefined",
            "raw": "'f() returns undefined'",
            "start": 1204,
            "end": 1227
          }
        ],
        "optional": false,
        "start": 1171,
        "end": 1228
      },
      "start": 1171,
      "end": 1229
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1230
}