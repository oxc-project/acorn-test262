{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "DateValue",
        "start": 402,
        "end": 411
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "year",
          "start": 412,
          "end": 416
        },
        {
          "type": "Identifier",
          "name": "month",
          "start": 418,
          "end": 423
        },
        {
          "type": "Identifier",
          "name": "date",
          "start": 425,
          "end": 429
        },
        {
          "type": "Identifier",
          "name": "hours",
          "start": 431,
          "end": 436
        },
        {
          "type": "Identifier",
          "name": "minutes",
          "start": 438,
          "end": 445
        },
        {
          "type": "Identifier",
          "name": "seconds",
          "start": 447,
          "end": 454
        },
        {
          "type": "Identifier",
          "name": "ms",
          "start": 456,
          "end": 458
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Date",
                    "start": 475,
                    "end": 479
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "year",
                      "start": 480,
                      "end": 484
                    },
                    {
                      "type": "Identifier",
                      "name": "month",
                      "start": 486,
                      "end": 491
                    },
                    {
                      "type": "Identifier",
                      "name": "date",
                      "start": 493,
                      "end": 497
                    },
                    {
                      "type": "Identifier",
                      "name": "hours",
                      "start": 499,
                      "end": 504
                    },
                    {
                      "type": "Identifier",
                      "name": "minutes",
                      "start": 506,
                      "end": 513
                    },
                    {
                      "type": "Identifier",
                      "name": "seconds",
                      "start": 515,
                      "end": 522
                    },
                    {
                      "type": "Identifier",
                      "name": "ms",
                      "start": 524,
                      "end": 526
                    }
                  ],
                  "start": 471,
                  "end": 527
                },
                "property": {
                  "type": "Identifier",
                  "name": "valueOf",
                  "start": 528,
                  "end": 535
                },
                "optional": false,
                "computed": false,
                "start": 471,
                "end": 535
              },
              "arguments": [],
              "optional": false,
              "start": 471,
              "end": 537
            },
            "start": 464,
            "end": 538
          }
        ],
        "start": 460,
        "end": 540
      },
      "expression": false,
      "start": 393,
      "end": 540
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 546,
            "end": 547
          },
          "init": null,
          "start": 546,
          "end": 547
        }
      ],
      "start": 542,
      "end": 548
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 549,
          "end": 550
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "DateValue",
            "start": 553,
            "end": 562
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1899,
              "raw": "1899",
              "start": 563,
              "end": 567
            },
            {
              "type": "Literal",
              "value": 11,
              "raw": "11",
              "start": 569,
              "end": 571
            },
            {
              "type": "Literal",
              "value": 31,
              "raw": "31",
              "start": 573,
              "end": 575
            },
            {
              "type": "Literal",
              "value": 23,
              "raw": "23",
              "start": 577,
              "end": 579
            },
            {
              "type": "Literal",
              "value": 59,
              "raw": "59",
              "start": 581,
              "end": 583
            },
            {
              "type": "Literal",
              "value": 59,
              "raw": "59",
              "start": 585,
              "end": 587
            }
          ],
          "optional": false,
          "start": 553,
          "end": 588
        },
        "start": 549,
        "end": 588
      },
      "start": 549,
      "end": 589
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 590,
            "end": 596
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 597,
            "end": 606
          },
          "optional": false,
          "computed": false,
          "start": 590,
          "end": 606
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 607,
            "end": 608
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 610,
            "end": 613
          },
          {
            "type": "Literal",
            "value": "The value of x is expected to equal NaN",
            "raw": "'The value of x is expected to equal NaN'",
            "start": 615,
            "end": 656
          }
        ],
        "optional": false,
        "start": 590,
        "end": 657
      },
      "start": 590,
      "end": 658
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 660,
          "end": 661
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "DateValue",
            "start": 664,
            "end": 673
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1899,
              "raw": "1899",
              "start": 674,
              "end": 678
            },
            {
              "type": "Literal",
              "value": 12,
              "raw": "12",
              "start": 680,
              "end": 682
            },
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 684,
              "end": 685
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 687,
              "end": 688
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 690,
              "end": 691
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 693,
              "end": 694
            }
          ],
          "optional": false,
          "start": 664,
          "end": 695
        },
        "start": 660,
        "end": 695
      },
      "start": 660,
      "end": 696
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 697,
            "end": 703
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 704,
            "end": 713
          },
          "optional": false,
          "computed": false,
          "start": 697,
          "end": 713
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 714,
            "end": 715
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 717,
            "end": 720
          },
          {
            "type": "Literal",
            "value": "The value of x is expected to equal NaN",
            "raw": "'The value of x is expected to equal NaN'",
            "start": 722,
            "end": 763
          }
        ],
        "optional": false,
        "start": 697,
        "end": 764
      },
      "start": 697,
      "end": 765
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 767,
          "end": 768
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "DateValue",
            "start": 771,
            "end": 780
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1900,
              "raw": "1900",
              "start": 781,
              "end": 785
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 787,
              "end": 788
            },
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 790,
              "end": 791
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 793,
              "end": 794
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 796,
              "end": 797
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 799,
              "end": 800
            }
          ],
          "optional": false,
          "start": 771,
          "end": 801
        },
        "start": 767,
        "end": 801
      },
      "start": 767,
      "end": 802
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 803,
            "end": 809
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 810,
            "end": 819
          },
          "optional": false,
          "computed": false,
          "start": 803,
          "end": 819
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 820,
            "end": 821
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 823,
            "end": 826
          },
          {
            "type": "Literal",
            "value": "The value of x is expected to equal NaN",
            "raw": "'The value of x is expected to equal NaN'",
            "start": 828,
            "end": 869
          }
        ],
        "optional": false,
        "start": 803,
        "end": 870
      },
      "start": 803,
      "end": 871
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 873,
          "end": 874
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "DateValue",
            "start": 877,
            "end": 886
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1969,
              "raw": "1969",
              "start": 887,
              "end": 891
            },
            {
              "type": "Literal",
              "value": 11,
              "raw": "11",
              "start": 893,
              "end": 895
            },
            {
              "type": "Literal",
              "value": 31,
              "raw": "31",
              "start": 897,
              "end": 899
            },
            {
              "type": "Literal",
              "value": 23,
              "raw": "23",
              "start": 901,
              "end": 903
            },
            {
              "type": "Literal",
              "value": 59,
              "raw": "59",
              "start": 905,
              "end": 907
            },
            {
              "type": "Literal",
              "value": 59,
              "raw": "59",
              "start": 909,
              "end": 911
            }
          ],
          "optional": false,
          "start": 877,
          "end": 912
        },
        "start": 873,
        "end": 912
      },
      "start": 873,
      "end": 913
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 914,
            "end": 920
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 921,
            "end": 930
          },
          "optional": false,
          "computed": false,
          "start": 914,
          "end": 930
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 931,
            "end": 932
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 934,
            "end": 937
          },
          {
            "type": "Literal",
            "value": "The value of x is expected to equal NaN",
            "raw": "'The value of x is expected to equal NaN'",
            "start": 939,
            "end": 980
          }
        ],
        "optional": false,
        "start": 914,
        "end": 981
      },
      "start": 914,
      "end": 982
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 984,
          "end": 985
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "DateValue",
            "start": 988,
            "end": 997
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1969,
              "raw": "1969",
              "start": 998,
              "end": 1002
            },
            {
              "type": "Literal",
              "value": 12,
              "raw": "12",
              "start": 1004,
              "end": 1006
            },
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1008,
              "end": 1009
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1011,
              "end": 1012
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1014,
              "end": 1015
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1017,
              "end": 1018
            }
          ],
          "optional": false,
          "start": 988,
          "end": 1019
        },
        "start": 984,
        "end": 1019
      },
      "start": 984,
      "end": 1020
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1021,
            "end": 1027
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1028,
            "end": 1037
          },
          "optional": false,
          "computed": false,
          "start": 1021,
          "end": 1037
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 1038,
            "end": 1039
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 1041,
            "end": 1044
          },
          {
            "type": "Literal",
            "value": "The value of x is expected to equal NaN",
            "raw": "'The value of x is expected to equal NaN'",
            "start": 1046,
            "end": 1087
          }
        ],
        "optional": false,
        "start": 1021,
        "end": 1088
      },
      "start": 1021,
      "end": 1089
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1091,
          "end": 1092
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "DateValue",
            "start": 1095,
            "end": 1104
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1970,
              "raw": "1970",
              "start": 1105,
              "end": 1109
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1111,
              "end": 1112
            },
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1114,
              "end": 1115
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1117,
              "end": 1118
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1120,
              "end": 1121
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1123,
              "end": 1124
            }
          ],
          "optional": false,
          "start": 1095,
          "end": 1125
        },
        "start": 1091,
        "end": 1125
      },
      "start": 1091,
      "end": 1126
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1127,
            "end": 1133
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1134,
            "end": 1143
          },
          "optional": false,
          "computed": false,
          "start": 1127,
          "end": 1143
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 1144,
            "end": 1145
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 1147,
            "end": 1150
          },
          {
            "type": "Literal",
            "value": "The value of x is expected to equal NaN",
            "raw": "'The value of x is expected to equal NaN'",
            "start": 1152,
            "end": 1193
          }
        ],
        "optional": false,
        "start": 1127,
        "end": 1194
      },
      "start": 1127,
      "end": 1195
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1197,
          "end": 1198
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "DateValue",
            "start": 1201,
            "end": 1210
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1999,
              "raw": "1999",
              "start": 1211,
              "end": 1215
            },
            {
              "type": "Literal",
              "value": 11,
              "raw": "11",
              "start": 1217,
              "end": 1219
            },
            {
              "type": "Literal",
              "value": 31,
              "raw": "31",
              "start": 1221,
              "end": 1223
            },
            {
              "type": "Literal",
              "value": 23,
              "raw": "23",
              "start": 1225,
              "end": 1227
            },
            {
              "type": "Literal",
              "value": 59,
              "raw": "59",
              "start": 1229,
              "end": 1231
            },
            {
              "type": "Literal",
              "value": 59,
              "raw": "59",
              "start": 1233,
              "end": 1235
            }
          ],
          "optional": false,
          "start": 1201,
          "end": 1236
        },
        "start": 1197,
        "end": 1236
      },
      "start": 1197,
      "end": 1237
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1238,
            "end": 1244
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1245,
            "end": 1254
          },
          "optional": false,
          "computed": false,
          "start": 1238,
          "end": 1254
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 1255,
            "end": 1256
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 1258,
            "end": 1261
          },
          {
            "type": "Literal",
            "value": "The value of x is expected to equal NaN",
            "raw": "'The value of x is expected to equal NaN'",
            "start": 1263,
            "end": 1304
          }
        ],
        "optional": false,
        "start": 1238,
        "end": 1305
      },
      "start": 1238,
      "end": 1306
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1308,
          "end": 1309
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "DateValue",
            "start": 1312,
            "end": 1321
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1999,
              "raw": "1999",
              "start": 1322,
              "end": 1326
            },
            {
              "type": "Literal",
              "value": 12,
              "raw": "12",
              "start": 1328,
              "end": 1330
            },
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1332,
              "end": 1333
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1335,
              "end": 1336
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1338,
              "end": 1339
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1341,
              "end": 1342
            }
          ],
          "optional": false,
          "start": 1312,
          "end": 1343
        },
        "start": 1308,
        "end": 1343
      },
      "start": 1308,
      "end": 1344
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1345,
            "end": 1351
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1352,
            "end": 1361
          },
          "optional": false,
          "computed": false,
          "start": 1345,
          "end": 1361
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 1362,
            "end": 1363
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 1365,
            "end": 1368
          },
          {
            "type": "Literal",
            "value": "The value of x is expected to equal NaN",
            "raw": "'The value of x is expected to equal NaN'",
            "start": 1370,
            "end": 1411
          }
        ],
        "optional": false,
        "start": 1345,
        "end": 1412
      },
      "start": 1345,
      "end": 1413
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1415,
          "end": 1416
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "DateValue",
            "start": 1419,
            "end": 1428
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 2000,
              "raw": "2000",
              "start": 1429,
              "end": 1433
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1435,
              "end": 1436
            },
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1438,
              "end": 1439
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1441,
              "end": 1442
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1444,
              "end": 1445
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1447,
              "end": 1448
            }
          ],
          "optional": false,
          "start": 1419,
          "end": 1449
        },
        "start": 1415,
        "end": 1449
      },
      "start": 1415,
      "end": 1450
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1451,
            "end": 1457
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1458,
            "end": 1467
          },
          "optional": false,
          "computed": false,
          "start": 1451,
          "end": 1467
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 1468,
            "end": 1469
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 1471,
            "end": 1474
          },
          {
            "type": "Literal",
            "value": "The value of x is expected to equal NaN",
            "raw": "'The value of x is expected to equal NaN'",
            "start": 1476,
            "end": 1517
          }
        ],
        "optional": false,
        "start": 1451,
        "end": 1518
      },
      "start": 1451,
      "end": 1519
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1521,
          "end": 1522
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "DateValue",
            "start": 1525,
            "end": 1534
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 2099,
              "raw": "2099",
              "start": 1535,
              "end": 1539
            },
            {
              "type": "Literal",
              "value": 11,
              "raw": "11",
              "start": 1541,
              "end": 1543
            },
            {
              "type": "Literal",
              "value": 31,
              "raw": "31",
              "start": 1545,
              "end": 1547
            },
            {
              "type": "Literal",
              "value": 23,
              "raw": "23",
              "start": 1549,
              "end": 1551
            },
            {
              "type": "Literal",
              "value": 59,
              "raw": "59",
              "start": 1553,
              "end": 1555
            },
            {
              "type": "Literal",
              "value": 59,
              "raw": "59",
              "start": 1557,
              "end": 1559
            }
          ],
          "optional": false,
          "start": 1525,
          "end": 1560
        },
        "start": 1521,
        "end": 1560
      },
      "start": 1521,
      "end": 1561
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1562,
            "end": 1568
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1569,
            "end": 1578
          },
          "optional": false,
          "computed": false,
          "start": 1562,
          "end": 1578
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 1579,
            "end": 1580
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 1582,
            "end": 1585
          },
          {
            "type": "Literal",
            "value": "The value of x is expected to equal NaN",
            "raw": "'The value of x is expected to equal NaN'",
            "start": 1587,
            "end": 1628
          }
        ],
        "optional": false,
        "start": 1562,
        "end": 1629
      },
      "start": 1562,
      "end": 1630
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1632,
          "end": 1633
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "DateValue",
            "start": 1636,
            "end": 1645
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 2099,
              "raw": "2099",
              "start": 1646,
              "end": 1650
            },
            {
              "type": "Literal",
              "value": 12,
              "raw": "12",
              "start": 1652,
              "end": 1654
            },
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1656,
              "end": 1657
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1659,
              "end": 1660
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1662,
              "end": 1663
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1665,
              "end": 1666
            }
          ],
          "optional": false,
          "start": 1636,
          "end": 1667
        },
        "start": 1632,
        "end": 1667
      },
      "start": 1632,
      "end": 1668
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1669,
            "end": 1675
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1676,
            "end": 1685
          },
          "optional": false,
          "computed": false,
          "start": 1669,
          "end": 1685
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 1686,
            "end": 1687
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 1689,
            "end": 1692
          },
          {
            "type": "Literal",
            "value": "The value of x is expected to equal NaN",
            "raw": "'The value of x is expected to equal NaN'",
            "start": 1694,
            "end": 1735
          }
        ],
        "optional": false,
        "start": 1669,
        "end": 1736
      },
      "start": 1669,
      "end": 1737
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1739,
          "end": 1740
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "DateValue",
            "start": 1743,
            "end": 1752
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 2100,
              "raw": "2100",
              "start": 1753,
              "end": 1757
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1759,
              "end": 1760
            },
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1762,
              "end": 1763
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1765,
              "end": 1766
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1768,
              "end": 1769
            },
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1771,
              "end": 1772
            }
          ],
          "optional": false,
          "start": 1743,
          "end": 1773
        },
        "start": 1739,
        "end": 1773
      },
      "start": 1739,
      "end": 1774
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1775,
            "end": 1781
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1782,
            "end": 1791
          },
          "optional": false,
          "computed": false,
          "start": 1775,
          "end": 1791
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 1792,
            "end": 1793
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 1795,
            "end": 1798
          },
          {
            "type": "Literal",
            "value": "The value of x is expected to equal NaN",
            "raw": "'The value of x is expected to equal NaN'",
            "start": 1800,
            "end": 1841
          }
        ],
        "optional": false,
        "start": 1775,
        "end": 1842
      },
      "start": 1775,
      "end": 1843
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1844
}