{
  "type": "Program",
  "start": 0,
  "end": 2402,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 2224,
      "end": 2401,
      "expression": {
        "type": "CallExpression",
        "start": 2224,
        "end": 2400,
        "callee": {
          "type": "Identifier",
          "start": 2224,
          "end": 2260,
          "name": "testWithBigIntTypedArrayConstructors"
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 2261,
            "end": 2399,
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 2270,
                "end": 2272,
                "name": "TA"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 2274,
              "end": 2399,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 2279,
                  "end": 2396,
                  "expression": {
                    "type": "CallExpression",
                    "start": 2279,
                    "end": 2395,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 2279,
                      "end": 2292,
                      "object": {
                        "type": "Identifier",
                        "start": 2279,
                        "end": 2285,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 2286,
                        "end": 2292,
                        "name": "throws"
                      },
                      "optional": false,
                      "computed": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 2293,
                        "end": 2304,
                        "name": "SyntaxError"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 2306,
                        "end": 2363,
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 2317,
                          "end": 2363,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 2323,
                              "end": 2359,
                              "expression": {
                                "type": "NewExpression",
                                "start": 2323,
                                "end": 2358,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 2327,
                                  "end": 2329,
                                  "name": "TA"
                                },
                                "arguments": [
                                  {
                                    "type": "ArrayExpression",
                                    "start": 2330,
                                    "end": 2357,
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "start": 2331,
                                        "end": 2356,
                                        "value": "definately not a number",
                                        "raw": "\"definately not a number\""
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "expression": false
                      },
                      {
                        "type": "Literal",
                        "start": 2365,
                        "end": 2394,
                        "value": "StringToBigInt(prim) == NaN",
                        "raw": "\"StringToBigInt(prim) == NaN\""
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}