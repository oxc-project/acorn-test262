{
  "type": "Program",
  "start": 0,
  "end": 891,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 694,
      "end": 759,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 698,
          "end": 758,
          "id": {
            "type": "Identifier",
            "start": 698,
            "end": 714,
            "name": "SetIteratorProto"
          },
          "init": {
            "type": "CallExpression",
            "start": 717,
            "end": 758,
            "callee": {
              "type": "MemberExpression",
              "start": 717,
              "end": 738,
              "object": {
                "type": "Identifier",
                "start": 717,
                "end": 723,
                "name": "Object"
              },
              "property": {
                "type": "Identifier",
                "start": 724,
                "end": 738,
                "name": "getPrototypeOf"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "CallExpression",
                "start": 739,
                "end": 757,
                "callee": {
                  "type": "MemberExpression",
                  "start": 739,
                  "end": 755,
                  "object": {
                    "type": "NewExpression",
                    "start": 739,
                    "end": 748,
                    "callee": {
                      "type": "Identifier",
                      "start": 743,
                      "end": 746,
                      "name": "Set"
                    },
                    "arguments": []
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 749,
                    "end": 755,
                    "name": "values"
                  },
                  "optional": false,
                  "computed": false
                },
                "arguments": [],
                "optional": false
              }
            ],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 761,
      "end": 890,
      "expression": {
        "type": "CallExpression",
        "start": 761,
        "end": 889,
        "callee": {
          "type": "Identifier",
          "start": 761,
          "end": 775,
          "name": "verifyProperty"
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 776,
            "end": 797,
            "object": {
              "type": "Identifier",
              "start": 776,
              "end": 792,
              "name": "SetIteratorProto"
            },
            "property": {
              "type": "Identifier",
              "start": 793,
              "end": 797,
              "name": "next"
            },
            "optional": false,
            "computed": false
          },
          {
            "type": "Literal",
            "start": 799,
            "end": 805,
            "value": "name",
            "raw": "\"name\""
          },
          {
            "type": "ObjectExpression",
            "start": 807,
            "end": 888,
            "properties": [
              {
                "type": "Property",
                "start": 811,
                "end": 824,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 811,
                  "end": 816,
                  "name": "value"
                },
                "value": {
                  "type": "Literal",
                  "start": 818,
                  "end": 824,
                  "value": "next",
                  "raw": "\"next\""
                },
                "method": false,
                "shorthand": false,
                "computed": false
              },
              {
                "type": "Property",
                "start": 828,
                "end": 843,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 828,
                  "end": 836,
                  "name": "writable"
                },
                "value": {
                  "type": "Literal",
                  "start": 838,
                  "end": 843,
                  "value": false,
                  "raw": "false"
                },
                "method": false,
                "shorthand": false,
                "computed": false
              },
              {
                "type": "Property",
                "start": 847,
                "end": 864,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 847,
                  "end": 857,
                  "name": "enumerable"
                },
                "value": {
                  "type": "Literal",
                  "start": 859,
                  "end": 864,
                  "value": false,
                  "raw": "false"
                },
                "method": false,
                "shorthand": false,
                "computed": false
              },
              {
                "type": "Property",
                "start": 868,
                "end": 886,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 868,
                  "end": 880,
                  "name": "configurable"
                },
                "value": {
                  "type": "Literal",
                  "start": 882,
                  "end": 886,
                  "value": true,
                  "raw": "true"
                },
                "method": false,
                "shorthand": false,
                "computed": false
              }
            ]
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}