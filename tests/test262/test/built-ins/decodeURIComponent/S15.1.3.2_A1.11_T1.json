{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 527,
            "end": 533
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 536,
            "end": 540
          },
          "start": 527,
          "end": 540
        }
      ],
      "start": 523,
      "end": 541
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "interval",
            "start": 546,
            "end": 554
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x00",
                    "start": 562,
                    "end": 566
                  },
                  {
                    "type": "Literal",
                    "value": 47,
                    "raw": "0x2F",
                    "start": 568,
                    "end": 572
                  }
                ],
                "start": 561,
                "end": 573
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 58,
                    "raw": "0x3A",
                    "start": 578,
                    "end": 582
                  },
                  {
                    "type": "Literal",
                    "value": 64,
                    "raw": "0x40",
                    "start": 584,
                    "end": 588
                  }
                ],
                "start": 577,
                "end": 589
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 71,
                    "raw": "0x47",
                    "start": 594,
                    "end": 598
                  },
                  {
                    "type": "Literal",
                    "value": 96,
                    "raw": "0x60",
                    "start": 600,
                    "end": 604
                  }
                ],
                "start": 593,
                "end": 605
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 103,
                    "raw": "0x67",
                    "start": 610,
                    "end": 614
                  },
                  {
                    "type": "Literal",
                    "value": 65535,
                    "raw": "0xFFFF",
                    "start": 616,
                    "end": 622
                  }
                ],
                "start": 609,
                "end": 623
              }
            ],
            "start": 557,
            "end": 625
          },
          "start": 546,
          "end": 625
        }
      ],
      "start": 542,
      "end": 626
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "indexI",
              "start": 636,
              "end": 642
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 645,
              "end": 646
            },
            "start": 636,
            "end": 646
          }
        ],
        "start": 632,
        "end": 646
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "indexI",
          "start": 648,
          "end": 654
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "interval",
            "start": 657,
            "end": 665
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 666,
            "end": 672
          },
          "optional": false,
          "computed": false,
          "start": 657,
          "end": 672
        },
        "start": 648,
        "end": 672
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "indexI",
          "start": 674,
          "end": 680
        },
        "start": 674,
        "end": 682
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "indexJ",
                    "start": 697,
                    "end": 703
                  },
                  "init": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "interval",
                        "start": 706,
                        "end": 714
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "indexI",
                        "start": 715,
                        "end": 721
                      },
                      "optional": false,
                      "computed": true,
                      "start": 706,
                      "end": 722
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 723,
                      "end": 724
                    },
                    "optional": false,
                    "computed": true,
                    "start": 706,
                    "end": 725
                  },
                  "start": 697,
                  "end": 725
                }
              ],
              "start": 693,
              "end": 725
            },
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 727,
                "end": 733
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "interval",
                    "start": 737,
                    "end": 745
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "indexI",
                    "start": 746,
                    "end": 752
                  },
                  "optional": false,
                  "computed": true,
                  "start": 737,
                  "end": 753
                },
                "property": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 754,
                  "end": 755
                },
                "optional": false,
                "computed": true,
                "start": 737,
                "end": 756
              },
              "start": 727,
              "end": 756
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 758,
                "end": 764
              },
              "start": 758,
              "end": 766
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "decodeURIComponent",
                            "start": 786,
                            "end": 804
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Literal",
                                  "value": "%E0%",
                                  "raw": "\"%E0%\"",
                                  "start": 805,
                                  "end": 811
                                },
                                "operator": "+",
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "object": {
                                      "type": "Identifier",
                                      "name": "String",
                                      "start": 814,
                                      "end": 820
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "fromCharCode",
                                      "start": 821,
                                      "end": 833
                                    },
                                    "optional": false,
                                    "computed": false,
                                    "start": 814,
                                    "end": 833
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "indexJ",
                                      "start": 834,
                                      "end": 840
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "indexJ",
                                      "start": 842,
                                      "end": 848
                                    }
                                  ],
                                  "optional": false,
                                  "start": 814,
                                  "end": 849
                                },
                                "start": 805,
                                "end": 849
                              },
                              "operator": "+",
                              "right": {
                                "type": "Literal",
                                "value": "%A0",
                                "raw": "\"%A0\"",
                                "start": 852,
                                "end": 857
                              },
                              "start": 805,
                              "end": 857
                            }
                          ],
                          "optional": false,
                          "start": 786,
                          "end": 858
                        },
                        "start": 786,
                        "end": 859
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "result",
                            "start": 866,
                            "end": 872
                          },
                          "right": {
                            "type": "Literal",
                            "value": false,
                            "raw": "false",
                            "start": 875,
                            "end": 880
                          },
                          "start": 866,
                          "end": 880
                        },
                        "start": 866,
                        "end": 881
                      }
                    ],
                    "start": 778,
                    "end": 887
                  },
                  "handler": {
                    "type": "CatchClause",
                    "param": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 895,
                      "end": 896
                    },
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "ParenthesizedExpression",
                              "expression": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Identifier",
                                  "name": "e",
                                  "start": 911,
                                  "end": 912
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "name": "URIError",
                                  "start": 924,
                                  "end": 932
                                },
                                "start": 911,
                                "end": 932
                              },
                              "start": 910,
                              "end": 933
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 938,
                              "end": 942
                            },
                            "start": 910,
                            "end": 942
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "result",
                                    "start": 954,
                                    "end": 960
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": false,
                                    "raw": "false",
                                    "start": 963,
                                    "end": 968
                                  },
                                  "start": 954,
                                  "end": 968
                                },
                                "start": 954,
                                "end": 969
                              }
                            ],
                            "start": 944,
                            "end": 977
                          },
                          "alternate": null,
                          "start": 906,
                          "end": 977
                        }
                      ],
                      "start": 898,
                      "end": 983
                    },
                    "start": 888,
                    "end": 983
                  },
                  "finalizer": null,
                  "start": 774,
                  "end": 983
                }
              ],
              "start": 768,
              "end": 987
            },
            "start": 688,
            "end": 987
          }
        ],
        "start": 684,
        "end": 989
      },
      "start": 627,
      "end": 989
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 995,
          "end": 1001
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1006,
          "end": 1010
        },
        "start": 995,
        "end": 1010
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1026,
                "end": 1038
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: If B = 1110xxxx (n = 3) and (string.charAt(k + 4) and  string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If B = 1110xxxx (n = 3) and (string.charAt(k + 4) and  string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError'",
                  "start": 1039,
                  "end": 1173
                }
              ],
              "start": 1022,
              "end": 1174
            },
            "start": 1016,
            "end": 1175
          }
        ],
        "start": 1012,
        "end": 1177
      },
      "alternate": null,
      "start": 991,
      "end": 1177
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1178
}