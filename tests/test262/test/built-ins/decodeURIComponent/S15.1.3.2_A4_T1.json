{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "decodeURIComponent",
            "start": 264,
            "end": 282
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "http://unipro.ru/0123456789",
              "raw": "\"http://unipro.ru/0123456789\"",
              "start": 283,
              "end": 312
            }
          ],
          "optional": false,
          "start": 264,
          "end": 313
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "http://unipro.ru/0123456789",
          "raw": "\"http://unipro.ru/0123456789\"",
          "start": 318,
          "end": 347
        },
        "start": 264,
        "end": 347
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 363,
                "end": 375
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: http://unipro.ru/0123456789",
                  "raw": "'#1: http://unipro.ru/0123456789'",
                  "start": 376,
                  "end": 409
                }
              ],
              "start": 359,
              "end": 410
            },
            "start": 353,
            "end": 411
          }
        ],
        "start": 349,
        "end": 413
      },
      "alternate": null,
      "start": 260,
      "end": 413
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "decodeURIComponent",
            "start": 429,
            "end": 447
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "%41%42%43%44%45%46%47%48%49%4A%4B%4C%4D%4E%4F%50%51%52%53%54%55%56%57%58%59%5A",
              "raw": "\"%41%42%43%44%45%46%47%48%49%4A%4B%4C%4D%4E%4F%50%51%52%53%54%55%56%57%58%59%5A\"",
              "start": 448,
              "end": 528
            }
          ],
          "optional": false,
          "start": 429,
          "end": 529
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
          "raw": "\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"",
          "start": 534,
          "end": 562
        },
        "start": 429,
        "end": 562
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 578,
                "end": 590
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                  "raw": "'#2: ABCDEFGHIJKLMNOPQRSTUVWXYZ'",
                  "start": 591,
                  "end": 623
                }
              ],
              "start": 574,
              "end": 624
            },
            "start": 568,
            "end": 625
          }
        ],
        "start": 564,
        "end": 627
      },
      "alternate": null,
      "start": 425,
      "end": 627
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "decodeURIComponent",
            "start": 643,
            "end": 661
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "%61%62%63%64%65%66%67%68%69%6A%6B%6C%6D%6E%6F%70%71%72%73%74%75%76%77%78%79%7A",
              "raw": "\"%61%62%63%64%65%66%67%68%69%6A%6B%6C%6D%6E%6F%70%71%72%73%74%75%76%77%78%79%7A\"",
              "start": 662,
              "end": 742
            }
          ],
          "optional": false,
          "start": 643,
          "end": 743
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "abcdefghijklmnopqrstuvwxyz",
          "raw": "\"abcdefghijklmnopqrstuvwxyz\"",
          "start": 748,
          "end": 776
        },
        "start": 643,
        "end": 776
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 792,
                "end": 804
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: abcdefghijklmnopqrstuvwxyz",
                  "raw": "'#3: abcdefghijklmnopqrstuvwxyz'",
                  "start": 805,
                  "end": 837
                }
              ],
              "start": 788,
              "end": 838
            },
            "start": 782,
            "end": 839
          }
        ],
        "start": 778,
        "end": 841
      },
      "alternate": null,
      "start": 639,
      "end": 841
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 842
}