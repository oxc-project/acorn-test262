{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "ThisExpression",
              "start": 329,
              "end": 333
            },
            "property": {
              "type": "Identifier",
              "name": "propertyIsEnumerable",
              "start": 334,
              "end": 354
            },
            "optional": false,
            "computed": false,
            "start": 329,
            "end": 354
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "decodeURIComponent",
              "raw": "'decodeURIComponent'",
              "start": 355,
              "end": 375
            }
          ],
          "optional": false,
          "start": 329,
          "end": 376
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 381,
          "end": 386
        },
        "start": 329,
        "end": 386
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 402,
                "end": 414
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: this.propertyIsEnumerable('decodeURIComponent') === false. Actual: ",
                    "raw": "'#1: this.propertyIsEnumerable(\\'decodeURIComponent\\') === false. Actual: '",
                    "start": 415,
                    "end": 490
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "ThisExpression",
                          "start": 494,
                          "end": 498
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "propertyIsEnumerable",
                          "start": 499,
                          "end": 519
                        },
                        "optional": false,
                        "computed": false,
                        "start": 494,
                        "end": 519
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "decodeURIComponent",
                          "raw": "'decodeURIComponent'",
                          "start": 520,
                          "end": 540
                        }
                      ],
                      "optional": false,
                      "start": 494,
                      "end": 541
                    },
                    "start": 493,
                    "end": 542
                  },
                  "start": 415,
                  "end": 542
                }
              ],
              "start": 398,
              "end": 543
            },
            "start": 392,
            "end": 544
          }
        ],
        "start": 388,
        "end": 546
      },
      "alternate": null,
      "start": 325,
      "end": 546
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 562,
            "end": 568
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 571,
            "end": 575
          },
          "start": 562,
          "end": 575
        }
      ],
      "start": 558,
      "end": 576
    },
    {
      "type": "ForInStatement",
      "left": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "p",
              "start": 586,
              "end": 587
            },
            "init": null,
            "start": 586,
            "end": 587
          }
        ],
        "start": 582,
        "end": 587
      },
      "right": {
        "type": "ThisExpression",
        "start": 591,
        "end": 595
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "p",
                "start": 605,
                "end": 606
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "value": "decodeURIComponent",
                "raw": "\"decodeURIComponent\"",
                "start": 611,
                "end": 631
              },
              "start": 605,
              "end": 631
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "result",
                      "start": 639,
                      "end": 645
                    },
                    "right": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 648,
                      "end": 653
                    },
                    "start": 639,
                    "end": 653
                  },
                  "start": 639,
                  "end": 654
                }
              ],
              "start": 633,
              "end": 658
            },
            "alternate": null,
            "start": 601,
            "end": 658
          }
        ],
        "start": 597,
        "end": 660
      },
      "start": 577,
      "end": 660
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 666,
          "end": 672
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 677,
          "end": 681
        },
        "start": 666,
        "end": 681
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 697,
                "end": 709
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: result = true; for (p in this) { if (p === \"decodeURIComponent\") result = false; }  result === true;",
                  "raw": "'#2: result = true; for (p in this) { if (p === \"decodeURIComponent\") result = false; }  result === true;'",
                  "start": 710,
                  "end": 816
                }
              ],
              "start": 693,
              "end": 817
            },
            "start": 687,
            "end": 818
          }
        ],
        "start": 683,
        "end": 820
      },
      "alternate": null,
      "start": 662,
      "end": 820
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 821
}