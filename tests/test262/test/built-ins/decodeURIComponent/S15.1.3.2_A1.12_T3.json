{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 586,
            "end": 592
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 595,
            "end": 599
          },
          "start": 586,
          "end": 599
        }
      ],
      "start": 582,
      "end": 600
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "interval",
            "start": 605,
            "end": 613
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x00",
                    "start": 621,
                    "end": 625
                  },
                  {
                    "type": "Literal",
                    "value": 47,
                    "raw": "0x2F",
                    "start": 627,
                    "end": 631
                  }
                ],
                "start": 620,
                "end": 632
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 58,
                    "raw": "0x3A",
                    "start": 637,
                    "end": 641
                  },
                  {
                    "type": "Literal",
                    "value": 64,
                    "raw": "0x40",
                    "start": 643,
                    "end": 647
                  }
                ],
                "start": 636,
                "end": 648
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 71,
                    "raw": "0x47",
                    "start": 653,
                    "end": 657
                  },
                  {
                    "type": "Literal",
                    "value": 96,
                    "raw": "0x60",
                    "start": 659,
                    "end": 663
                  }
                ],
                "start": 652,
                "end": 664
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 103,
                    "raw": "0x67",
                    "start": 669,
                    "end": 673
                  },
                  {
                    "type": "Literal",
                    "value": 65535,
                    "raw": "0xFFFF",
                    "start": 675,
                    "end": 681
                  }
                ],
                "start": 668,
                "end": 682
              }
            ],
            "start": 616,
            "end": 684
          },
          "start": 605,
          "end": 684
        }
      ],
      "start": 601,
      "end": 685
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "indexI",
              "start": 695,
              "end": 701
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 704,
              "end": 705
            },
            "start": 695,
            "end": 705
          }
        ],
        "start": 691,
        "end": 705
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "indexI",
          "start": 707,
          "end": 713
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "interval",
            "start": 716,
            "end": 724
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 725,
            "end": 731
          },
          "optional": false,
          "computed": false,
          "start": 716,
          "end": 731
        },
        "start": 707,
        "end": 731
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "indexI",
          "start": 733,
          "end": 739
        },
        "start": 733,
        "end": 741
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "indexJ",
                    "start": 756,
                    "end": 762
                  },
                  "init": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "interval",
                        "start": 765,
                        "end": 773
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "indexI",
                        "start": 774,
                        "end": 780
                      },
                      "optional": false,
                      "computed": true,
                      "start": 765,
                      "end": 781
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 782,
                      "end": 783
                    },
                    "optional": false,
                    "computed": true,
                    "start": 765,
                    "end": 784
                  },
                  "start": 756,
                  "end": 784
                }
              ],
              "start": 752,
              "end": 784
            },
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 786,
                "end": 792
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "interval",
                    "start": 796,
                    "end": 804
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "indexI",
                    "start": 805,
                    "end": 811
                  },
                  "optional": false,
                  "computed": true,
                  "start": 796,
                  "end": 812
                },
                "property": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 813,
                  "end": 814
                },
                "optional": false,
                "computed": true,
                "start": 796,
                "end": 815
              },
              "start": 786,
              "end": 815
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 817,
                "end": 823
              },
              "start": 817,
              "end": 825
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "decodeURIComponent",
                            "start": 845,
                            "end": 863
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Literal",
                                  "value": "%F0",
                                  "raw": "\"%F0\"",
                                  "start": 864,
                                  "end": 869
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "value": "%A0%A0%",
                                  "raw": "\"%A0%A0%\"",
                                  "start": 872,
                                  "end": 881
                                },
                                "start": 864,
                                "end": 881
                              },
                              "operator": "+",
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "String",
                                    "start": 884,
                                    "end": 890
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fromCharCode",
                                    "start": 891,
                                    "end": 903
                                  },
                                  "optional": false,
                                  "computed": false,
                                  "start": 884,
                                  "end": 903
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "indexJ",
                                    "start": 904,
                                    "end": 910
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "indexJ",
                                    "start": 912,
                                    "end": 918
                                  }
                                ],
                                "optional": false,
                                "start": 884,
                                "end": 919
                              },
                              "start": 864,
                              "end": 919
                            }
                          ],
                          "optional": false,
                          "start": 845,
                          "end": 920
                        },
                        "start": 845,
                        "end": 921
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "result",
                            "start": 928,
                            "end": 934
                          },
                          "right": {
                            "type": "Literal",
                            "value": false,
                            "raw": "false",
                            "start": 937,
                            "end": 942
                          },
                          "start": 928,
                          "end": 942
                        },
                        "start": 928,
                        "end": 943
                      }
                    ],
                    "start": 837,
                    "end": 949
                  },
                  "handler": {
                    "type": "CatchClause",
                    "param": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 957,
                      "end": 958
                    },
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "ParenthesizedExpression",
                              "expression": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Identifier",
                                  "name": "e",
                                  "start": 973,
                                  "end": 974
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "name": "URIError",
                                  "start": 986,
                                  "end": 994
                                },
                                "start": 973,
                                "end": 994
                              },
                              "start": 972,
                              "end": 995
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 1000,
                              "end": 1004
                            },
                            "start": 972,
                            "end": 1004
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "result",
                                    "start": 1016,
                                    "end": 1022
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": false,
                                    "raw": "false",
                                    "start": 1025,
                                    "end": 1030
                                  },
                                  "start": 1016,
                                  "end": 1030
                                },
                                "start": 1016,
                                "end": 1031
                              }
                            ],
                            "start": 1006,
                            "end": 1039
                          },
                          "alternate": null,
                          "start": 968,
                          "end": 1039
                        }
                      ],
                      "start": 960,
                      "end": 1045
                    },
                    "start": 950,
                    "end": 1045
                  },
                  "finalizer": null,
                  "start": 833,
                  "end": 1045
                }
              ],
              "start": 827,
              "end": 1049
            },
            "start": 747,
            "end": 1049
          }
        ],
        "start": 743,
        "end": 1051
      },
      "start": 686,
      "end": 1051
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 1057,
          "end": 1063
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1068,
          "end": 1072
        },
        "start": 1057,
        "end": 1072
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1088,
                "end": 1100
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: If B = 11110xxx (n = 4) and (string.charAt(k + 10) and string.charAt(k + 11)) do not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If B = 11110xxx (n = 4) and (string.charAt(k + 10) and string.charAt(k + 11)) do not represent hexadecimal digits, throw URIError'",
                  "start": 1101,
                  "end": 1236
                }
              ],
              "start": 1084,
              "end": 1237
            },
            "start": 1078,
            "end": 1238
          }
        ],
        "start": 1074,
        "end": 1240
      },
      "alternate": null,
      "start": 1053,
      "end": 1240
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1241
}