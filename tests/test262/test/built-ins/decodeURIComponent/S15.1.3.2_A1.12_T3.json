{
  "type": "Program",
  "start": 0,
  "end": 1241,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 582,
      "end": 600,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 586,
          "end": 599,
          "id": {
            "type": "Identifier",
            "start": 586,
            "end": 592,
            "name": "result"
          },
          "init": {
            "type": "Literal",
            "start": 595,
            "end": 599,
            "value": true,
            "raw": "true"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 601,
      "end": 685,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 605,
          "end": 684,
          "id": {
            "type": "Identifier",
            "start": 605,
            "end": 613,
            "name": "interval"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 616,
            "end": 684,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 620,
                "end": 632,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 621,
                    "end": 625,
                    "value": 0,
                    "raw": "0x00"
                  },
                  {
                    "type": "Literal",
                    "start": 627,
                    "end": 631,
                    "value": 47,
                    "raw": "0x2F"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 636,
                "end": 648,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 637,
                    "end": 641,
                    "value": 58,
                    "raw": "0x3A"
                  },
                  {
                    "type": "Literal",
                    "start": 643,
                    "end": 647,
                    "value": 64,
                    "raw": "0x40"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 652,
                "end": 664,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 653,
                    "end": 657,
                    "value": 71,
                    "raw": "0x47"
                  },
                  {
                    "type": "Literal",
                    "start": 659,
                    "end": 663,
                    "value": 96,
                    "raw": "0x60"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 668,
                "end": 682,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 669,
                    "end": 673,
                    "value": 103,
                    "raw": "0x67"
                  },
                  {
                    "type": "Literal",
                    "start": 675,
                    "end": 681,
                    "value": 65535,
                    "raw": "0xFFFF"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "type": "ForStatement",
      "start": 686,
      "end": 1051,
      "init": {
        "type": "VariableDeclaration",
        "start": 691,
        "end": 705,
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 695,
            "end": 705,
            "id": {
              "type": "Identifier",
              "start": 695,
              "end": 701,
              "name": "indexI"
            },
            "init": {
              "type": "Literal",
              "start": 704,
              "end": 705,
              "value": 0,
              "raw": "0"
            }
          }
        ]
      },
      "test": {
        "type": "BinaryExpression",
        "start": 707,
        "end": 731,
        "left": {
          "type": "Identifier",
          "start": 707,
          "end": 713,
          "name": "indexI"
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "start": 716,
          "end": 731,
          "object": {
            "type": "Identifier",
            "start": 716,
            "end": 724,
            "name": "interval"
          },
          "property": {
            "type": "Identifier",
            "start": 725,
            "end": 731,
            "name": "length"
          },
          "optional": false,
          "computed": false
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 733,
        "end": 741,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 733,
          "end": 739,
          "name": "indexI"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 743,
        "end": 1051,
        "body": [
          {
            "type": "ForStatement",
            "start": 747,
            "end": 1049,
            "init": {
              "type": "VariableDeclaration",
              "start": 752,
              "end": 784,
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 756,
                  "end": 784,
                  "id": {
                    "type": "Identifier",
                    "start": 756,
                    "end": 762,
                    "name": "indexJ"
                  },
                  "init": {
                    "type": "MemberExpression",
                    "start": 765,
                    "end": 784,
                    "object": {
                      "type": "MemberExpression",
                      "start": 765,
                      "end": 781,
                      "object": {
                        "type": "Identifier",
                        "start": 765,
                        "end": 773,
                        "name": "interval"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 774,
                        "end": 780,
                        "name": "indexI"
                      },
                      "optional": false,
                      "computed": true
                    },
                    "property": {
                      "type": "Literal",
                      "start": 782,
                      "end": 783,
                      "value": 0,
                      "raw": "0"
                    },
                    "optional": false,
                    "computed": true
                  }
                }
              ]
            },
            "test": {
              "type": "BinaryExpression",
              "start": 786,
              "end": 815,
              "left": {
                "type": "Identifier",
                "start": 786,
                "end": 792,
                "name": "indexJ"
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "start": 796,
                "end": 815,
                "object": {
                  "type": "MemberExpression",
                  "start": 796,
                  "end": 812,
                  "object": {
                    "type": "Identifier",
                    "start": 796,
                    "end": 804,
                    "name": "interval"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 805,
                    "end": 811,
                    "name": "indexI"
                  },
                  "optional": false,
                  "computed": true
                },
                "property": {
                  "type": "Literal",
                  "start": 813,
                  "end": 814,
                  "value": 1,
                  "raw": "1"
                },
                "optional": false,
                "computed": true
              }
            },
            "update": {
              "type": "UpdateExpression",
              "start": 817,
              "end": 825,
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "start": 817,
                "end": 823,
                "name": "indexJ"
              }
            },
            "body": {
              "type": "BlockStatement",
              "start": 827,
              "end": 1049,
              "body": [
                {
                  "type": "TryStatement",
                  "start": 833,
                  "end": 1045,
                  "block": {
                    "type": "BlockStatement",
                    "start": 837,
                    "end": 949,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 845,
                        "end": 921,
                        "expression": {
                          "type": "CallExpression",
                          "start": 845,
                          "end": 920,
                          "callee": {
                            "type": "Identifier",
                            "start": 845,
                            "end": 863,
                            "name": "decodeURIComponent"
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "start": 864,
                              "end": 919,
                              "left": {
                                "type": "BinaryExpression",
                                "start": 864,
                                "end": 881,
                                "left": {
                                  "type": "Literal",
                                  "start": 864,
                                  "end": 869,
                                  "value": "%F0",
                                  "raw": "\"%F0\""
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "start": 872,
                                  "end": 881,
                                  "value": "%A0%A0%",
                                  "raw": "\"%A0%A0%\""
                                }
                              },
                              "operator": "+",
                              "right": {
                                "type": "CallExpression",
                                "start": 884,
                                "end": 919,
                                "callee": {
                                  "type": "MemberExpression",
                                  "start": 884,
                                  "end": 903,
                                  "object": {
                                    "type": "Identifier",
                                    "start": 884,
                                    "end": 890,
                                    "name": "String"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 891,
                                    "end": 903,
                                    "name": "fromCharCode"
                                  },
                                  "optional": false,
                                  "computed": false
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "start": 904,
                                    "end": 910,
                                    "name": "indexJ"
                                  },
                                  {
                                    "type": "Identifier",
                                    "start": 912,
                                    "end": 918,
                                    "name": "indexJ"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 928,
                        "end": 943,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 928,
                          "end": 942,
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "start": 928,
                            "end": 934,
                            "name": "result"
                          },
                          "right": {
                            "type": "Literal",
                            "start": 937,
                            "end": 942,
                            "value": false,
                            "raw": "false"
                          }
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 950,
                    "end": 1045,
                    "param": {
                      "type": "Identifier",
                      "start": 957,
                      "end": 958,
                      "name": "e"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 960,
                      "end": 1045,
                      "body": [
                        {
                          "type": "IfStatement",
                          "start": 968,
                          "end": 1039,
                          "test": {
                            "type": "BinaryExpression",
                            "start": 972,
                            "end": 1004,
                            "left": {
                              "type": "ParenthesizedExpression",
                              "start": 972,
                              "end": 995,
                              "expression": {
                                "type": "BinaryExpression",
                                "start": 973,
                                "end": 994,
                                "left": {
                                  "type": "Identifier",
                                  "start": 973,
                                  "end": 974,
                                  "name": "e"
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "start": 986,
                                  "end": 994,
                                  "name": "URIError"
                                }
                              }
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "start": 1000,
                              "end": 1004,
                              "value": true,
                              "raw": "true"
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "start": 1006,
                            "end": 1039,
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "start": 1016,
                                "end": 1031,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 1016,
                                  "end": 1030,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 1016,
                                    "end": 1022,
                                    "name": "result"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "start": 1025,
                                    "end": 1030,
                                    "value": false,
                                    "raw": "false"
                                  }
                                }
                              }
                            ]
                          },
                          "alternate": null
                        }
                      ]
                    }
                  },
                  "finalizer": null
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 1053,
      "end": 1240,
      "test": {
        "type": "BinaryExpression",
        "start": 1057,
        "end": 1072,
        "left": {
          "type": "Identifier",
          "start": 1057,
          "end": 1063,
          "name": "result"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1068,
          "end": 1072,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1074,
        "end": 1240,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1078,
            "end": 1238,
            "argument": {
              "type": "NewExpression",
              "start": 1084,
              "end": 1237,
              "callee": {
                "type": "Identifier",
                "start": 1088,
                "end": 1100,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1101,
                  "end": 1236,
                  "value": "#1: If B = 11110xxx (n = 4) and (string.charAt(k + 10) and string.charAt(k + 11)) do not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If B = 11110xxx (n = 4) and (string.charAt(k + 10) and string.charAt(k + 11)) do not represent hexadecimal digits, throw URIError'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}