{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 349,
            "end": 355
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 358,
            "end": 362
          },
          "start": 349,
          "end": 362
        }
      ],
      "start": 345,
      "end": 363
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "interval",
            "start": 368,
            "end": 376
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x00",
                    "start": 384,
                    "end": 388
                  },
                  {
                    "type": "Literal",
                    "value": 47,
                    "raw": "0x2F",
                    "start": 390,
                    "end": 394
                  }
                ],
                "start": 383,
                "end": 395
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 58,
                    "raw": "0x3A",
                    "start": 400,
                    "end": 404
                  },
                  {
                    "type": "Literal",
                    "value": 64,
                    "raw": "0x40",
                    "start": 406,
                    "end": 410
                  }
                ],
                "start": 399,
                "end": 411
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 71,
                    "raw": "0x47",
                    "start": 416,
                    "end": 420
                  },
                  {
                    "type": "Literal",
                    "value": 96,
                    "raw": "0x60",
                    "start": 422,
                    "end": 426
                  }
                ],
                "start": 415,
                "end": 427
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 103,
                    "raw": "0x67",
                    "start": 432,
                    "end": 436
                  },
                  {
                    "type": "Literal",
                    "value": 65535,
                    "raw": "0xFFFF",
                    "start": 438,
                    "end": 444
                  }
                ],
                "start": 431,
                "end": 445
              }
            ],
            "start": 379,
            "end": 447
          },
          "start": 368,
          "end": 447
        }
      ],
      "start": 364,
      "end": 448
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "indexI",
              "start": 458,
              "end": 464
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 467,
              "end": 468
            },
            "start": 458,
            "end": 468
          }
        ],
        "start": 454,
        "end": 468
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "indexI",
          "start": 470,
          "end": 476
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "interval",
            "start": 479,
            "end": 487
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 488,
            "end": 494
          },
          "optional": false,
          "computed": false,
          "start": 479,
          "end": 494
        },
        "start": 470,
        "end": 494
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "indexI",
          "start": 496,
          "end": 502
        },
        "start": 496,
        "end": 504
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "indexJ",
                    "start": 519,
                    "end": 525
                  },
                  "init": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "interval",
                        "start": 528,
                        "end": 536
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "indexI",
                        "start": 537,
                        "end": 543
                      },
                      "optional": false,
                      "computed": true,
                      "start": 528,
                      "end": 544
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 545,
                      "end": 546
                    },
                    "optional": false,
                    "computed": true,
                    "start": 528,
                    "end": 547
                  },
                  "start": 519,
                  "end": 547
                }
              ],
              "start": 515,
              "end": 547
            },
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 549,
                "end": 555
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "interval",
                    "start": 559,
                    "end": 567
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "indexI",
                    "start": 568,
                    "end": 574
                  },
                  "optional": false,
                  "computed": true,
                  "start": 559,
                  "end": 575
                },
                "property": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 576,
                  "end": 577
                },
                "optional": false,
                "computed": true,
                "start": 559,
                "end": 578
              },
              "start": 549,
              "end": 578
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "indexJ",
                "start": 580,
                "end": 586
              },
              "start": 580,
              "end": 588
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "decodeURIComponent",
                            "start": 608,
                            "end": 626
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Literal",
                                  "value": "%",
                                  "raw": "\"%\"",
                                  "start": 627,
                                  "end": 630
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "value": "1",
                                  "raw": "\"1\"",
                                  "start": 633,
                                  "end": 636
                                },
                                "start": 627,
                                "end": 636
                              },
                              "operator": "+",
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "String",
                                    "start": 639,
                                    "end": 645
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fromCharCode",
                                    "start": 646,
                                    "end": 658
                                  },
                                  "optional": false,
                                  "computed": false,
                                  "start": 639,
                                  "end": 658
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "indexJ",
                                    "start": 659,
                                    "end": 665
                                  }
                                ],
                                "optional": false,
                                "start": 639,
                                "end": 666
                              },
                              "start": 627,
                              "end": 666
                            }
                          ],
                          "optional": false,
                          "start": 608,
                          "end": 667
                        },
                        "start": 608,
                        "end": 668
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "result",
                            "start": 675,
                            "end": 681
                          },
                          "right": {
                            "type": "Literal",
                            "value": false,
                            "raw": "false",
                            "start": 684,
                            "end": 689
                          },
                          "start": 675,
                          "end": 689
                        },
                        "start": 675,
                        "end": 690
                      }
                    ],
                    "start": 600,
                    "end": 696
                  },
                  "handler": {
                    "type": "CatchClause",
                    "param": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 704,
                      "end": 705
                    },
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "ParenthesizedExpression",
                              "expression": {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Identifier",
                                  "name": "e",
                                  "start": 720,
                                  "end": 721
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "name": "URIError",
                                  "start": 733,
                                  "end": 741
                                },
                                "start": 720,
                                "end": 741
                              },
                              "start": 719,
                              "end": 742
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 747,
                              "end": 751
                            },
                            "start": 719,
                            "end": 751
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "result",
                                    "start": 763,
                                    "end": 769
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": false,
                                    "raw": "false",
                                    "start": 772,
                                    "end": 777
                                  },
                                  "start": 763,
                                  "end": 777
                                },
                                "start": 763,
                                "end": 778
                              }
                            ],
                            "start": 753,
                            "end": 786
                          },
                          "alternate": null,
                          "start": 715,
                          "end": 786
                        }
                      ],
                      "start": 707,
                      "end": 792
                    },
                    "start": 697,
                    "end": 792
                  },
                  "finalizer": null,
                  "start": 596,
                  "end": 792
                }
              ],
              "start": 590,
              "end": 796
            },
            "start": 510,
            "end": 796
          }
        ],
        "start": 506,
        "end": 798
      },
      "start": 449,
      "end": 798
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 804,
          "end": 810
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 815,
          "end": 819
        },
        "start": 804,
        "end": 819
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 835,
                "end": 847
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: If string.charAt(k+2) does not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If string.charAt(k+2) does not represent hexadecimal digits, throw URIError'",
                  "start": 848,
                  "end": 929
                }
              ],
              "start": 831,
              "end": 930
            },
            "start": 825,
            "end": 931
          }
        ],
        "start": 821,
        "end": 933
      },
      "alternate": null,
      "start": 800,
      "end": 933
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 934
}