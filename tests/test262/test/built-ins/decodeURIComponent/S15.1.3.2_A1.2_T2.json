{
  "type": "Program",
  "start": 0,
  "end": 934,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 345,
      "end": 363,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 349,
          "end": 362,
          "id": {
            "type": "Identifier",
            "start": 349,
            "end": 355,
            "name": "result"
          },
          "init": {
            "type": "Literal",
            "start": 358,
            "end": 362,
            "value": true,
            "raw": "true"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 364,
      "end": 448,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 368,
          "end": 447,
          "id": {
            "type": "Identifier",
            "start": 368,
            "end": 376,
            "name": "interval"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 379,
            "end": 447,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 383,
                "end": 395,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 384,
                    "end": 388,
                    "value": 0,
                    "raw": "0x00"
                  },
                  {
                    "type": "Literal",
                    "start": 390,
                    "end": 394,
                    "value": 47,
                    "raw": "0x2F"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 399,
                "end": 411,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 400,
                    "end": 404,
                    "value": 58,
                    "raw": "0x3A"
                  },
                  {
                    "type": "Literal",
                    "start": 406,
                    "end": 410,
                    "value": 64,
                    "raw": "0x40"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 415,
                "end": 427,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 416,
                    "end": 420,
                    "value": 71,
                    "raw": "0x47"
                  },
                  {
                    "type": "Literal",
                    "start": 422,
                    "end": 426,
                    "value": 96,
                    "raw": "0x60"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 431,
                "end": 445,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 432,
                    "end": 436,
                    "value": 103,
                    "raw": "0x67"
                  },
                  {
                    "type": "Literal",
                    "start": 438,
                    "end": 444,
                    "value": 65535,
                    "raw": "0xFFFF"
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ForStatement",
      "start": 449,
      "end": 798,
      "init": {
        "type": "VariableDeclaration",
        "start": 454,
        "end": 468,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 458,
            "end": 468,
            "id": {
              "type": "Identifier",
              "start": 458,
              "end": 464,
              "name": "indexI"
            },
            "init": {
              "type": "Literal",
              "start": 467,
              "end": 468,
              "value": 0,
              "raw": "0"
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 470,
        "end": 494,
        "left": {
          "type": "Identifier",
          "start": 470,
          "end": 476,
          "name": "indexI"
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "start": 479,
          "end": 494,
          "object": {
            "type": "Identifier",
            "start": 479,
            "end": 487,
            "name": "interval"
          },
          "property": {
            "type": "Identifier",
            "start": 488,
            "end": 494,
            "name": "length"
          },
          "computed": false,
          "optional": false
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 496,
        "end": 504,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 496,
          "end": 502,
          "name": "indexI"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 506,
        "end": 798,
        "body": [
          {
            "type": "ForStatement",
            "start": 510,
            "end": 796,
            "init": {
              "type": "VariableDeclaration",
              "start": 515,
              "end": 547,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 519,
                  "end": 547,
                  "id": {
                    "type": "Identifier",
                    "start": 519,
                    "end": 525,
                    "name": "indexJ"
                  },
                  "init": {
                    "type": "MemberExpression",
                    "start": 528,
                    "end": 547,
                    "object": {
                      "type": "MemberExpression",
                      "start": 528,
                      "end": 544,
                      "object": {
                        "type": "Identifier",
                        "start": 528,
                        "end": 536,
                        "name": "interval"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 537,
                        "end": 543,
                        "name": "indexI"
                      },
                      "computed": true,
                      "optional": false
                    },
                    "property": {
                      "type": "Literal",
                      "start": 545,
                      "end": 546,
                      "value": 0,
                      "raw": "0"
                    },
                    "computed": true,
                    "optional": false
                  }
                }
              ],
              "kind": "var"
            },
            "test": {
              "type": "BinaryExpression",
              "start": 549,
              "end": 578,
              "left": {
                "type": "Identifier",
                "start": 549,
                "end": 555,
                "name": "indexJ"
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "start": 559,
                "end": 578,
                "object": {
                  "type": "MemberExpression",
                  "start": 559,
                  "end": 575,
                  "object": {
                    "type": "Identifier",
                    "start": 559,
                    "end": 567,
                    "name": "interval"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 568,
                    "end": 574,
                    "name": "indexI"
                  },
                  "computed": true,
                  "optional": false
                },
                "property": {
                  "type": "Literal",
                  "start": 576,
                  "end": 577,
                  "value": 1,
                  "raw": "1"
                },
                "computed": true,
                "optional": false
              }
            },
            "update": {
              "type": "UpdateExpression",
              "start": 580,
              "end": 588,
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "start": 580,
                "end": 586,
                "name": "indexJ"
              }
            },
            "body": {
              "type": "BlockStatement",
              "start": 590,
              "end": 796,
              "body": [
                {
                  "type": "TryStatement",
                  "start": 596,
                  "end": 792,
                  "block": {
                    "type": "BlockStatement",
                    "start": 600,
                    "end": 696,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 608,
                        "end": 668,
                        "expression": {
                          "type": "CallExpression",
                          "start": 608,
                          "end": 667,
                          "callee": {
                            "type": "Identifier",
                            "start": 608,
                            "end": 626,
                            "name": "decodeURIComponent"
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "start": 627,
                              "end": 666,
                              "left": {
                                "type": "BinaryExpression",
                                "start": 627,
                                "end": 636,
                                "left": {
                                  "type": "Literal",
                                  "start": 627,
                                  "end": 630,
                                  "value": "%",
                                  "raw": "\"%\""
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "start": 633,
                                  "end": 636,
                                  "value": "1",
                                  "raw": "\"1\""
                                }
                              },
                              "operator": "+",
                              "right": {
                                "type": "CallExpression",
                                "start": 639,
                                "end": 666,
                                "callee": {
                                  "type": "MemberExpression",
                                  "start": 639,
                                  "end": 658,
                                  "object": {
                                    "type": "Identifier",
                                    "start": 639,
                                    "end": 645,
                                    "name": "String"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 646,
                                    "end": 658,
                                    "name": "fromCharCode"
                                  },
                                  "computed": false,
                                  "optional": false
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "start": 659,
                                    "end": 665,
                                    "name": "indexJ"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 675,
                        "end": 690,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 675,
                          "end": 689,
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "start": 675,
                            "end": 681,
                            "name": "result"
                          },
                          "right": {
                            "type": "Literal",
                            "start": 684,
                            "end": 689,
                            "value": false,
                            "raw": "false"
                          }
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 697,
                    "end": 792,
                    "param": {
                      "type": "Identifier",
                      "start": 704,
                      "end": 705,
                      "name": "e"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 707,
                      "end": 792,
                      "body": [
                        {
                          "type": "IfStatement",
                          "start": 715,
                          "end": 786,
                          "test": {
                            "type": "BinaryExpression",
                            "start": 719,
                            "end": 751,
                            "left": {
                              "type": "ParenthesizedExpression",
                              "start": 719,
                              "end": 742,
                              "expression": {
                                "type": "BinaryExpression",
                                "start": 720,
                                "end": 741,
                                "left": {
                                  "type": "Identifier",
                                  "start": 720,
                                  "end": 721,
                                  "name": "e"
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "start": 733,
                                  "end": 741,
                                  "name": "URIError"
                                }
                              }
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "start": 747,
                              "end": 751,
                              "value": true,
                              "raw": "true"
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "start": 753,
                            "end": 786,
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "start": 763,
                                "end": 778,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 763,
                                  "end": 777,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 763,
                                    "end": 769,
                                    "name": "result"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "start": 772,
                                    "end": 777,
                                    "value": false,
                                    "raw": "false"
                                  }
                                }
                              }
                            ]
                          },
                          "alternate": null
                        }
                      ]
                    }
                  },
                  "finalizer": null
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 800,
      "end": 933,
      "test": {
        "type": "BinaryExpression",
        "start": 804,
        "end": 819,
        "left": {
          "type": "Identifier",
          "start": 804,
          "end": 810,
          "name": "result"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 815,
          "end": 819,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 821,
        "end": 933,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 825,
            "end": 931,
            "argument": {
              "type": "NewExpression",
              "start": 831,
              "end": 930,
              "callee": {
                "type": "Identifier",
                "start": 835,
                "end": 847,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 848,
                  "end": 929,
                  "value": "#1: If string.charAt(k+2) does not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If string.charAt(k+2) does not represent hexadecimal digits, throw URIError'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}