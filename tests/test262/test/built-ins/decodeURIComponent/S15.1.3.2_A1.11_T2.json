{
  "type": "Program",
  "start": 0,
  "end": 1178,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 523,
      "end": 541,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 527,
          "end": 540,
          "id": {
            "type": "Identifier",
            "start": 527,
            "end": 533,
            "name": "result"
          },
          "init": {
            "type": "Literal",
            "start": 536,
            "end": 540,
            "value": true,
            "raw": "true"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 542,
      "end": 626,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 546,
          "end": 625,
          "id": {
            "type": "Identifier",
            "start": 546,
            "end": 554,
            "name": "interval"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 557,
            "end": 625,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 561,
                "end": 573,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 562,
                    "end": 566,
                    "value": 0,
                    "raw": "0x00"
                  },
                  {
                    "type": "Literal",
                    "start": 568,
                    "end": 572,
                    "value": 47,
                    "raw": "0x2F"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 577,
                "end": 589,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 578,
                    "end": 582,
                    "value": 58,
                    "raw": "0x3A"
                  },
                  {
                    "type": "Literal",
                    "start": 584,
                    "end": 588,
                    "value": 64,
                    "raw": "0x40"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 593,
                "end": 605,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 594,
                    "end": 598,
                    "value": 71,
                    "raw": "0x47"
                  },
                  {
                    "type": "Literal",
                    "start": 600,
                    "end": 604,
                    "value": 96,
                    "raw": "0x60"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 609,
                "end": 623,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 610,
                    "end": 614,
                    "value": 103,
                    "raw": "0x67"
                  },
                  {
                    "type": "Literal",
                    "start": 616,
                    "end": 622,
                    "value": 65535,
                    "raw": "0xFFFF"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "type": "ForStatement",
      "start": 627,
      "end": 989,
      "init": {
        "type": "VariableDeclaration",
        "start": 632,
        "end": 646,
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 636,
            "end": 646,
            "id": {
              "type": "Identifier",
              "start": 636,
              "end": 642,
              "name": "indexI"
            },
            "init": {
              "type": "Literal",
              "start": 645,
              "end": 646,
              "value": 0,
              "raw": "0"
            }
          }
        ]
      },
      "test": {
        "type": "BinaryExpression",
        "start": 648,
        "end": 672,
        "left": {
          "type": "Identifier",
          "start": 648,
          "end": 654,
          "name": "indexI"
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "start": 657,
          "end": 672,
          "object": {
            "type": "Identifier",
            "start": 657,
            "end": 665,
            "name": "interval"
          },
          "property": {
            "type": "Identifier",
            "start": 666,
            "end": 672,
            "name": "length"
          },
          "optional": false,
          "computed": false
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 674,
        "end": 682,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 674,
          "end": 680,
          "name": "indexI"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 684,
        "end": 989,
        "body": [
          {
            "type": "ForStatement",
            "start": 688,
            "end": 987,
            "init": {
              "type": "VariableDeclaration",
              "start": 693,
              "end": 725,
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 697,
                  "end": 725,
                  "id": {
                    "type": "Identifier",
                    "start": 697,
                    "end": 703,
                    "name": "indexJ"
                  },
                  "init": {
                    "type": "MemberExpression",
                    "start": 706,
                    "end": 725,
                    "object": {
                      "type": "MemberExpression",
                      "start": 706,
                      "end": 722,
                      "object": {
                        "type": "Identifier",
                        "start": 706,
                        "end": 714,
                        "name": "interval"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 715,
                        "end": 721,
                        "name": "indexI"
                      },
                      "optional": false,
                      "computed": true
                    },
                    "property": {
                      "type": "Literal",
                      "start": 723,
                      "end": 724,
                      "value": 0,
                      "raw": "0"
                    },
                    "optional": false,
                    "computed": true
                  }
                }
              ]
            },
            "test": {
              "type": "BinaryExpression",
              "start": 727,
              "end": 756,
              "left": {
                "type": "Identifier",
                "start": 727,
                "end": 733,
                "name": "indexJ"
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "start": 737,
                "end": 756,
                "object": {
                  "type": "MemberExpression",
                  "start": 737,
                  "end": 753,
                  "object": {
                    "type": "Identifier",
                    "start": 737,
                    "end": 745,
                    "name": "interval"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 746,
                    "end": 752,
                    "name": "indexI"
                  },
                  "optional": false,
                  "computed": true
                },
                "property": {
                  "type": "Literal",
                  "start": 754,
                  "end": 755,
                  "value": 1,
                  "raw": "1"
                },
                "optional": false,
                "computed": true
              }
            },
            "update": {
              "type": "UpdateExpression",
              "start": 758,
              "end": 766,
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "start": 758,
                "end": 764,
                "name": "indexJ"
              }
            },
            "body": {
              "type": "BlockStatement",
              "start": 768,
              "end": 987,
              "body": [
                {
                  "type": "TryStatement",
                  "start": 774,
                  "end": 983,
                  "block": {
                    "type": "BlockStatement",
                    "start": 778,
                    "end": 887,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 786,
                        "end": 859,
                        "expression": {
                          "type": "CallExpression",
                          "start": 786,
                          "end": 858,
                          "callee": {
                            "type": "Identifier",
                            "start": 786,
                            "end": 804,
                            "name": "decodeURIComponent"
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "start": 805,
                              "end": 857,
                              "left": {
                                "type": "BinaryExpression",
                                "start": 805,
                                "end": 819,
                                "left": {
                                  "type": "Literal",
                                  "start": 805,
                                  "end": 810,
                                  "value": "%E0",
                                  "raw": "\"%E0\""
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "start": 813,
                                  "end": 819,
                                  "value": "%A0%",
                                  "raw": "\"%A0%\""
                                }
                              },
                              "operator": "+",
                              "right": {
                                "type": "CallExpression",
                                "start": 822,
                                "end": 857,
                                "callee": {
                                  "type": "MemberExpression",
                                  "start": 822,
                                  "end": 841,
                                  "object": {
                                    "type": "Identifier",
                                    "start": 822,
                                    "end": 828,
                                    "name": "String"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 829,
                                    "end": 841,
                                    "name": "fromCharCode"
                                  },
                                  "optional": false,
                                  "computed": false
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "start": 842,
                                    "end": 848,
                                    "name": "indexJ"
                                  },
                                  {
                                    "type": "Identifier",
                                    "start": 850,
                                    "end": 856,
                                    "name": "indexJ"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 866,
                        "end": 881,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 866,
                          "end": 880,
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "start": 866,
                            "end": 872,
                            "name": "result"
                          },
                          "right": {
                            "type": "Literal",
                            "start": 875,
                            "end": 880,
                            "value": false,
                            "raw": "false"
                          }
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 888,
                    "end": 983,
                    "param": {
                      "type": "Identifier",
                      "start": 895,
                      "end": 896,
                      "name": "e"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 898,
                      "end": 983,
                      "body": [
                        {
                          "type": "IfStatement",
                          "start": 906,
                          "end": 977,
                          "test": {
                            "type": "BinaryExpression",
                            "start": 910,
                            "end": 942,
                            "left": {
                              "type": "ParenthesizedExpression",
                              "start": 910,
                              "end": 933,
                              "expression": {
                                "type": "BinaryExpression",
                                "start": 911,
                                "end": 932,
                                "left": {
                                  "type": "Identifier",
                                  "start": 911,
                                  "end": 912,
                                  "name": "e"
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "start": 924,
                                  "end": 932,
                                  "name": "URIError"
                                }
                              }
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "start": 938,
                              "end": 942,
                              "value": true,
                              "raw": "true"
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "start": 944,
                            "end": 977,
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "start": 954,
                                "end": 969,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 954,
                                  "end": 968,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 954,
                                    "end": 960,
                                    "name": "result"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "start": 963,
                                    "end": 968,
                                    "value": false,
                                    "raw": "false"
                                  }
                                }
                              }
                            ]
                          },
                          "alternate": null
                        }
                      ]
                    }
                  },
                  "finalizer": null
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 991,
      "end": 1177,
      "test": {
        "type": "BinaryExpression",
        "start": 995,
        "end": 1010,
        "left": {
          "type": "Identifier",
          "start": 995,
          "end": 1001,
          "name": "result"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1006,
          "end": 1010,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1012,
        "end": 1177,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1016,
            "end": 1175,
            "argument": {
              "type": "NewExpression",
              "start": 1022,
              "end": 1174,
              "callee": {
                "type": "Identifier",
                "start": 1026,
                "end": 1038,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1039,
                  "end": 1173,
                  "value": "#1: If B = 1110xxxx (n = 3) and (string.charAt(k + 7) and  string.charAt(k + 8)) do not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If B = 1110xxxx (n = 3) and (string.charAt(k + 7) and  string.charAt(k + 8)) do not represent hexadecimal digits, throw URIError'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}