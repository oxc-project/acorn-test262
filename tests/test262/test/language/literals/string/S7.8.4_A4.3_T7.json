{
  "type": "Program",
  "start": 0,
  "end": 636,
  "body": [
    {
      "type": "IfStatement",
      "start": 307,
      "end": 360,
      "test": {
        "type": "BinaryExpression",
        "start": 311,
        "end": 323,
        "left": {
          "type": "Literal",
          "start": 311,
          "end": 314,
          "value": "b",
          "raw": "\"b\""
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "start": 319,
          "end": 323,
          "value": "\b",
          "raw": "\"\\b\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 325,
        "end": 360,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 329,
            "end": 358,
            "argument": {
              "type": "NewExpression",
              "start": 335,
              "end": 357,
              "callee": {
                "type": "Identifier",
                "start": 339,
                "end": 351,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 352,
                  "end": 356,
                  "value": "#b",
                  "raw": "'#b'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 362,
      "end": 415,
      "test": {
        "type": "BinaryExpression",
        "start": 366,
        "end": 378,
        "left": {
          "type": "Literal",
          "start": 366,
          "end": 369,
          "value": "f",
          "raw": "\"f\""
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "start": 374,
          "end": 378,
          "value": "\f",
          "raw": "\"\\f\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 380,
        "end": 415,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 384,
            "end": 413,
            "argument": {
              "type": "NewExpression",
              "start": 390,
              "end": 412,
              "callee": {
                "type": "Identifier",
                "start": 394,
                "end": 406,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 407,
                  "end": 411,
                  "value": "#f",
                  "raw": "'#f'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 417,
      "end": 470,
      "test": {
        "type": "BinaryExpression",
        "start": 421,
        "end": 433,
        "left": {
          "type": "Literal",
          "start": 421,
          "end": 424,
          "value": "n",
          "raw": "\"n\""
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "start": 429,
          "end": 433,
          "value": "\n",
          "raw": "\"\\n\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 435,
        "end": 470,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 439,
            "end": 468,
            "argument": {
              "type": "NewExpression",
              "start": 445,
              "end": 467,
              "callee": {
                "type": "Identifier",
                "start": 449,
                "end": 461,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 462,
                  "end": 466,
                  "value": "#n",
                  "raw": "'#n'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 472,
      "end": 525,
      "test": {
        "type": "BinaryExpression",
        "start": 476,
        "end": 488,
        "left": {
          "type": "Literal",
          "start": 476,
          "end": 479,
          "value": "r",
          "raw": "\"r\""
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "start": 484,
          "end": 488,
          "value": "\r",
          "raw": "\"\\r\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 490,
        "end": 525,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 494,
            "end": 523,
            "argument": {
              "type": "NewExpression",
              "start": 500,
              "end": 522,
              "callee": {
                "type": "Identifier",
                "start": 504,
                "end": 516,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 517,
                  "end": 521,
                  "value": "#r",
                  "raw": "'#r'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 527,
      "end": 580,
      "test": {
        "type": "BinaryExpression",
        "start": 531,
        "end": 543,
        "left": {
          "type": "Literal",
          "start": 531,
          "end": 534,
          "value": "t",
          "raw": "\"t\""
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "start": 539,
          "end": 543,
          "value": "\t",
          "raw": "\"\\t\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 545,
        "end": 580,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 549,
            "end": 578,
            "argument": {
              "type": "NewExpression",
              "start": 555,
              "end": 577,
              "callee": {
                "type": "Identifier",
                "start": 559,
                "end": 571,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 572,
                  "end": 576,
                  "value": "#t",
                  "raw": "'#t'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 582,
      "end": 635,
      "test": {
        "type": "BinaryExpression",
        "start": 586,
        "end": 598,
        "left": {
          "type": "Literal",
          "start": 586,
          "end": 589,
          "value": "v",
          "raw": "\"v\""
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "start": 594,
          "end": 598,
          "value": "\u000b",
          "raw": "\"\\v\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 600,
        "end": 635,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 604,
            "end": 633,
            "argument": {
              "type": "NewExpression",
              "start": 610,
              "end": 632,
              "callee": {
                "type": "Identifier",
                "start": 614,
                "end": 626,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 627,
                  "end": 631,
                  "value": "#v",
                  "raw": "'#v'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}