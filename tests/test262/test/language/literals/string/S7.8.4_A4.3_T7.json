{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Literal",
          "value": "b",
          "raw": "\"b\"",
          "start": 311,
          "end": 314
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "value": "\b",
          "raw": "\"\\b\"",
          "start": 319,
          "end": 323
        },
        "start": 311,
        "end": 323
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 339,
                "end": 351
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#b",
                  "raw": "'#b'",
                  "start": 352,
                  "end": 356
                }
              ],
              "start": 335,
              "end": 357
            },
            "start": 329,
            "end": 358
          }
        ],
        "start": 325,
        "end": 360
      },
      "alternate": null,
      "start": 307,
      "end": 360
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Literal",
          "value": "f",
          "raw": "\"f\"",
          "start": 366,
          "end": 369
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "value": "\f",
          "raw": "\"\\f\"",
          "start": 374,
          "end": 378
        },
        "start": 366,
        "end": 378
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 394,
                "end": 406
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#f",
                  "raw": "'#f'",
                  "start": 407,
                  "end": 411
                }
              ],
              "start": 390,
              "end": 412
            },
            "start": 384,
            "end": 413
          }
        ],
        "start": 380,
        "end": 415
      },
      "alternate": null,
      "start": 362,
      "end": 415
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Literal",
          "value": "n",
          "raw": "\"n\"",
          "start": 421,
          "end": 424
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "value": "\n",
          "raw": "\"\\n\"",
          "start": 429,
          "end": 433
        },
        "start": 421,
        "end": 433
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 449,
                "end": 461
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#n",
                  "raw": "'#n'",
                  "start": 462,
                  "end": 466
                }
              ],
              "start": 445,
              "end": 467
            },
            "start": 439,
            "end": 468
          }
        ],
        "start": 435,
        "end": 470
      },
      "alternate": null,
      "start": 417,
      "end": 470
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Literal",
          "value": "r",
          "raw": "\"r\"",
          "start": 476,
          "end": 479
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "value": "\r",
          "raw": "\"\\r\"",
          "start": 484,
          "end": 488
        },
        "start": 476,
        "end": 488
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 504,
                "end": 516
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#r",
                  "raw": "'#r'",
                  "start": 517,
                  "end": 521
                }
              ],
              "start": 500,
              "end": 522
            },
            "start": 494,
            "end": 523
          }
        ],
        "start": 490,
        "end": 525
      },
      "alternate": null,
      "start": 472,
      "end": 525
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Literal",
          "value": "t",
          "raw": "\"t\"",
          "start": 531,
          "end": 534
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "value": "\t",
          "raw": "\"\\t\"",
          "start": 539,
          "end": 543
        },
        "start": 531,
        "end": 543
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 559,
                "end": 571
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#t",
                  "raw": "'#t'",
                  "start": 572,
                  "end": 576
                }
              ],
              "start": 555,
              "end": 577
            },
            "start": 549,
            "end": 578
          }
        ],
        "start": 545,
        "end": 580
      },
      "alternate": null,
      "start": 527,
      "end": 580
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Literal",
          "value": "v",
          "raw": "\"v\"",
          "start": 586,
          "end": 589
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "value": "\u000b",
          "raw": "\"\\v\"",
          "start": 594,
          "end": 598
        },
        "start": 586,
        "end": 598
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 614,
                "end": 626
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#v",
                  "raw": "'#v'",
                  "start": 627,
                  "end": 631
                }
              ],
              "start": 610,
              "end": 632
            },
            "start": 604,
            "end": 633
          }
        ],
        "start": 600,
        "end": 635
      },
      "alternate": null,
      "start": 582,
      "end": 635
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 636
}