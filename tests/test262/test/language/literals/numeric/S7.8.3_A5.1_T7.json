{
  "type": "Program",
  "start": 0,
  "end": 723,
  "body": [
    {
      "type": "IfStatement",
      "start": 284,
      "end": 347,
      "test": {
        "type": "BinaryExpression",
        "start": 288,
        "end": 298,
        "left": {
          "type": "Literal",
          "start": 288,
          "end": 291,
          "value": 10,
          "raw": "0xa"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 296,
          "end": 298,
          "value": 10,
          "raw": "10"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 300,
        "end": 347,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 304,
            "end": 345,
            "argument": {
              "type": "NewExpression",
              "start": 310,
              "end": 344,
              "callee": {
                "type": "Identifier",
                "start": 314,
                "end": 326,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 327,
                  "end": 343,
                  "value": "#a: 0xa === 10",
                  "raw": "'#a: 0xa === 10'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 359,
      "end": 422,
      "test": {
        "type": "BinaryExpression",
        "start": 363,
        "end": 373,
        "left": {
          "type": "Literal",
          "start": 363,
          "end": 366,
          "value": 11,
          "raw": "0xb"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 371,
          "end": 373,
          "value": 11,
          "raw": "11"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 375,
        "end": 422,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 379,
            "end": 420,
            "argument": {
              "type": "NewExpression",
              "start": 385,
              "end": 419,
              "callee": {
                "type": "Identifier",
                "start": 389,
                "end": 401,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 402,
                  "end": 418,
                  "value": "#b: 0xb === 11",
                  "raw": "'#b: 0xb === 11'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 434,
      "end": 497,
      "test": {
        "type": "BinaryExpression",
        "start": 438,
        "end": 448,
        "left": {
          "type": "Literal",
          "start": 438,
          "end": 441,
          "value": 12,
          "raw": "0xc"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 446,
          "end": 448,
          "value": 12,
          "raw": "12"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 450,
        "end": 497,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 454,
            "end": 495,
            "argument": {
              "type": "NewExpression",
              "start": 460,
              "end": 494,
              "callee": {
                "type": "Identifier",
                "start": 464,
                "end": 476,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 477,
                  "end": 493,
                  "value": "#c: 0xc === 12",
                  "raw": "'#c: 0xc === 12'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 509,
      "end": 572,
      "test": {
        "type": "BinaryExpression",
        "start": 513,
        "end": 523,
        "left": {
          "type": "Literal",
          "start": 513,
          "end": 516,
          "value": 13,
          "raw": "0xd"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 521,
          "end": 523,
          "value": 13,
          "raw": "13"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 525,
        "end": 572,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 529,
            "end": 570,
            "argument": {
              "type": "NewExpression",
              "start": 535,
              "end": 569,
              "callee": {
                "type": "Identifier",
                "start": 539,
                "end": 551,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 552,
                  "end": 568,
                  "value": "#d: 0xd === 13",
                  "raw": "'#d: 0xd === 13'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 584,
      "end": 647,
      "test": {
        "type": "BinaryExpression",
        "start": 588,
        "end": 598,
        "left": {
          "type": "Literal",
          "start": 588,
          "end": 591,
          "value": 14,
          "raw": "0xe"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 596,
          "end": 598,
          "value": 14,
          "raw": "14"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 600,
        "end": 647,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 604,
            "end": 645,
            "argument": {
              "type": "NewExpression",
              "start": 610,
              "end": 644,
              "callee": {
                "type": "Identifier",
                "start": 614,
                "end": 626,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 627,
                  "end": 643,
                  "value": "#e: 0xe === 14",
                  "raw": "'#e: 0xe === 14'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 659,
      "end": 722,
      "test": {
        "type": "BinaryExpression",
        "start": 663,
        "end": 673,
        "left": {
          "type": "Literal",
          "start": 663,
          "end": 666,
          "value": 15,
          "raw": "0xf"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 671,
          "end": 673,
          "value": 15,
          "raw": "15"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 675,
        "end": 722,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 679,
            "end": 720,
            "argument": {
              "type": "NewExpression",
              "start": 685,
              "end": 719,
              "callee": {
                "type": "Identifier",
                "start": 689,
                "end": 701,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 702,
                  "end": 718,
                  "value": "#f: 0xf === 15",
                  "raw": "'#f: 0xf === 15'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}