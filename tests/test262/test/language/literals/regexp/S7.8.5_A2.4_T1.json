{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Literal",
            "value": null,
            "raw": "/,\\;/",
            "regex": {
              "pattern": ",\\;",
              "flags": ""
            },
            "start": 349,
            "end": 354
          },
          "property": {
            "type": "Identifier",
            "name": "source",
            "start": 355,
            "end": 361
          },
          "optional": false,
          "computed": false,
          "start": 349,
          "end": 361
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": ",\\;",
          "raw": "\",\\\\;\"",
          "start": 366,
          "end": 372
        },
        "start": 349,
        "end": 372
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 388,
                "end": 400
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: /,\\;/",
                  "raw": "'#1: /,\\\\;/'",
                  "start": 401,
                  "end": 413
                }
              ],
              "start": 384,
              "end": 414
            },
            "start": 378,
            "end": 415
          }
        ],
        "start": 374,
        "end": 417
      },
      "alternate": null,
      "start": 345,
      "end": 417
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Literal",
            "value": null,
            "raw": "/ \\ /",
            "regex": {
              "pattern": " \\ ",
              "flags": ""
            },
            "start": 433,
            "end": 438
          },
          "property": {
            "type": "Identifier",
            "name": "source",
            "start": 439,
            "end": 445
          },
          "optional": false,
          "computed": false,
          "start": 433,
          "end": 445
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": " \\ ",
          "raw": "\" \\\\ \"",
          "start": 450,
          "end": 456
        },
        "start": 433,
        "end": 456
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 472,
                "end": 484
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: / \\ /",
                  "raw": "'#2: / \\\\ /'",
                  "start": 485,
                  "end": 497
                }
              ],
              "start": 468,
              "end": 498
            },
            "start": 462,
            "end": 499
          }
        ],
        "start": 458,
        "end": 501
      },
      "alternate": null,
      "start": 429,
      "end": 501
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 502
}