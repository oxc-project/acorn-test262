{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 270,
            "end": 271
          },
          "prefix": true,
          "start": 269,
          "end": 271
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 277,
            "end": 278
          },
          "prefix": true,
          "start": 276,
          "end": 278
        },
        "start": 269,
        "end": 278
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 294,
                "end": 306
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: +0 === -0",
                  "raw": "'#1: +0 === -0'",
                  "start": 307,
                  "end": 322
                }
              ],
              "start": 290,
              "end": 323
            },
            "start": 284,
            "end": 324
          }
        ],
        "start": 280,
        "end": 326
      },
      "alternate": null,
      "start": 265,
      "end": 326
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 343,
            "end": 344
          },
          "prefix": true,
          "start": 342,
          "end": 344
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 350,
            "end": 351
          },
          "prefix": true,
          "start": 349,
          "end": 351
        },
        "start": 342,
        "end": 351
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 367,
                "end": 379
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: -0 === +0",
                  "raw": "'#2: -0 === +0'",
                  "start": 380,
                  "end": 395
                }
              ],
              "start": 363,
              "end": 396
            },
            "start": 357,
            "end": 397
          }
        ],
        "start": 353,
        "end": 399
      },
      "alternate": null,
      "start": 338,
      "end": 399
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 400
}