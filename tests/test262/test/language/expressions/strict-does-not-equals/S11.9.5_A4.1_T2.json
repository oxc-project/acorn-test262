{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 242,
              "end": 246
            },
            "operator": "!==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 251,
                "end": 257
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 258,
                "end": 261
              },
              "optional": false,
              "computed": false,
              "start": 251,
              "end": 261
            },
            "start": 242,
            "end": 261
          },
          "start": 241,
          "end": 262
        },
        "prefix": true,
        "start": 240,
        "end": 262
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 278,
                "end": 290
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: true !== NaN",
                  "raw": "'#1: true !== NaN'",
                  "start": 291,
                  "end": 309
                }
              ],
              "start": 274,
              "end": 310
            },
            "start": 268,
            "end": 311
          }
        ],
        "start": 264,
        "end": 313
      },
      "alternate": null,
      "start": 236,
      "end": 313
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 332,
                "end": 333
              },
              "prefix": true,
              "start": 331,
              "end": 333
            },
            "operator": "!==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 338,
                "end": 344
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 345,
                "end": 348
              },
              "optional": false,
              "computed": false,
              "start": 338,
              "end": 348
            },
            "start": 331,
            "end": 348
          },
          "start": 330,
          "end": 349
        },
        "prefix": true,
        "start": 329,
        "end": 349
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 365,
                "end": 377
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: -1 !== NaN",
                  "raw": "'#2: -1 !== NaN'",
                  "start": 378,
                  "end": 394
                }
              ],
              "start": 361,
              "end": 395
            },
            "start": 355,
            "end": 396
          }
        ],
        "start": 351,
        "end": 398
      },
      "alternate": null,
      "start": 325,
      "end": 398
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 416,
                "end": 422
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 423,
                "end": 426
              },
              "optional": false,
              "computed": false,
              "start": 416,
              "end": 426
            },
            "operator": "!==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 431,
                "end": 437
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 438,
                "end": 441
              },
              "optional": false,
              "computed": false,
              "start": 431,
              "end": 441
            },
            "start": 416,
            "end": 441
          },
          "start": 415,
          "end": 442
        },
        "prefix": true,
        "start": 414,
        "end": 442
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 458,
                "end": 470
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: NaN !== NaN",
                  "raw": "'#3: NaN !== NaN'",
                  "start": 471,
                  "end": 488
                }
              ],
              "start": 454,
              "end": 489
            },
            "start": 448,
            "end": 490
          }
        ],
        "start": 444,
        "end": 492
      },
      "alternate": null,
      "start": 410,
      "end": 492
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 510,
                "end": 516
              },
              "property": {
                "type": "Identifier",
                "name": "POSITIVE_INFINITY",
                "start": 517,
                "end": 534
              },
              "optional": false,
              "computed": false,
              "start": 510,
              "end": 534
            },
            "operator": "!==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 539,
                "end": 545
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 546,
                "end": 549
              },
              "optional": false,
              "computed": false,
              "start": 539,
              "end": 549
            },
            "start": 510,
            "end": 549
          },
          "start": 509,
          "end": 550
        },
        "prefix": true,
        "start": 508,
        "end": 550
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 566,
                "end": 578
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4: +Infinity !== NaN",
                  "raw": "'#4: +Infinity !== NaN'",
                  "start": 579,
                  "end": 602
                }
              ],
              "start": 562,
              "end": 603
            },
            "start": 556,
            "end": 604
          }
        ],
        "start": 552,
        "end": 606
      },
      "alternate": null,
      "start": 504,
      "end": 606
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 624,
                "end": 630
              },
              "property": {
                "type": "Identifier",
                "name": "NEGATIVE_INFINITY",
                "start": 631,
                "end": 648
              },
              "optional": false,
              "computed": false,
              "start": 624,
              "end": 648
            },
            "operator": "!==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 653,
                "end": 659
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 660,
                "end": 663
              },
              "optional": false,
              "computed": false,
              "start": 653,
              "end": 663
            },
            "start": 624,
            "end": 663
          },
          "start": 623,
          "end": 664
        },
        "prefix": true,
        "start": 622,
        "end": 664
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 680,
                "end": 692
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#5: -Infinity !== NaN",
                  "raw": "'#5: -Infinity !== NaN'",
                  "start": 693,
                  "end": 716
                }
              ],
              "start": 676,
              "end": 717
            },
            "start": 670,
            "end": 718
          }
        ],
        "start": 666,
        "end": 720
      },
      "alternate": null,
      "start": 618,
      "end": 720
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 738,
                "end": 744
              },
              "property": {
                "type": "Identifier",
                "name": "MAX_VALUE",
                "start": 745,
                "end": 754
              },
              "optional": false,
              "computed": false,
              "start": 738,
              "end": 754
            },
            "operator": "!==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 759,
                "end": 765
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 766,
                "end": 769
              },
              "optional": false,
              "computed": false,
              "start": 759,
              "end": 769
            },
            "start": 738,
            "end": 769
          },
          "start": 737,
          "end": 770
        },
        "prefix": true,
        "start": 736,
        "end": 770
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 786,
                "end": 798
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#6: Number.MAX_VALUE !== NaN",
                  "raw": "'#6: Number.MAX_VALUE !== NaN'",
                  "start": 799,
                  "end": 829
                }
              ],
              "start": 782,
              "end": 830
            },
            "start": 776,
            "end": 831
          }
        ],
        "start": 772,
        "end": 833
      },
      "alternate": null,
      "start": 732,
      "end": 833
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 851,
                "end": 857
              },
              "property": {
                "type": "Identifier",
                "name": "MIN_VALUE",
                "start": 858,
                "end": 867
              },
              "optional": false,
              "computed": false,
              "start": 851,
              "end": 867
            },
            "operator": "!==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 872,
                "end": 878
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 879,
                "end": 882
              },
              "optional": false,
              "computed": false,
              "start": 872,
              "end": 882
            },
            "start": 851,
            "end": 882
          },
          "start": 850,
          "end": 883
        },
        "prefix": true,
        "start": 849,
        "end": 883
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 899,
                "end": 911
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#7: Number.MIN_VALUE !== NaN",
                  "raw": "'#7: Number.MIN_VALUE !== NaN'",
                  "start": 912,
                  "end": 942
                }
              ],
              "start": 895,
              "end": 943
            },
            "start": 889,
            "end": 944
          }
        ],
        "start": 885,
        "end": 946
      },
      "alternate": null,
      "start": 845,
      "end": 946
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "string",
              "raw": "\"string\"",
              "start": 964,
              "end": 972
            },
            "operator": "!==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 977,
                "end": 983
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 984,
                "end": 987
              },
              "optional": false,
              "computed": false,
              "start": 977,
              "end": 987
            },
            "start": 964,
            "end": 987
          },
          "start": 963,
          "end": 988
        },
        "prefix": true,
        "start": 962,
        "end": 988
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1004,
                "end": 1016
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#8: \"string\" !== NaN",
                  "raw": "'#8: \"string\" !== NaN'",
                  "start": 1017,
                  "end": 1039
                }
              ],
              "start": 1000,
              "end": 1040
            },
            "start": 994,
            "end": 1041
          }
        ],
        "start": 990,
        "end": 1043
      },
      "alternate": null,
      "start": 958,
      "end": 1043
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 1065,
                "end": 1071
              },
              "arguments": [],
              "start": 1061,
              "end": 1073
            },
            "operator": "!==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1078,
                "end": 1084
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 1085,
                "end": 1088
              },
              "optional": false,
              "computed": false,
              "start": 1078,
              "end": 1088
            },
            "start": 1061,
            "end": 1088
          },
          "start": 1060,
          "end": 1089
        },
        "prefix": true,
        "start": 1059,
        "end": 1089
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1105,
                "end": 1117
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#9: new Object() !== NaN",
                  "raw": "'#9: new Object() !== NaN'",
                  "start": 1118,
                  "end": 1144
                }
              ],
              "start": 1101,
              "end": 1145
            },
            "start": 1095,
            "end": 1146
          }
        ],
        "start": 1091,
        "end": 1148
      },
      "alternate": null,
      "start": 1055,
      "end": 1148
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1149
}