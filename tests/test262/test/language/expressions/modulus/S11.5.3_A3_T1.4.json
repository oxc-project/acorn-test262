{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 302,
            "end": 307
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 308,
                "end": 312
              },
              "operator": "%",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 315,
                "end": 324
              },
              "start": 308,
              "end": 324
            }
          ],
          "optional": false,
          "start": 302,
          "end": 325
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 330,
          "end": 334
        },
        "start": 302,
        "end": 334
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 350,
                "end": 362
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: null % undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: null % undefined === Not-a-Number. Actual: '",
                    "start": 363,
                    "end": 412
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 416,
                        "end": 420
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 423,
                        "end": 432
                      },
                      "start": 416,
                      "end": 432
                    },
                    "start": 415,
                    "end": 433
                  },
                  "start": 363,
                  "end": 433
                }
              ],
              "start": 346,
              "end": 434
            },
            "start": 340,
            "end": 435
          }
        ],
        "start": 336,
        "end": 437
      },
      "alternate": null,
      "start": 298,
      "end": 437
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 453,
            "end": 458
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 459,
                "end": 468
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 471,
                "end": 475
              },
              "start": 459,
              "end": 475
            }
          ],
          "optional": false,
          "start": 453,
          "end": 476
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 481,
          "end": 485
        },
        "start": 453,
        "end": 485
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 501,
                "end": 513
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: undefined % null === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined % null === Not-a-Number. Actual: '",
                    "start": 514,
                    "end": 563
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 567,
                        "end": 576
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 579,
                        "end": 583
                      },
                      "start": 567,
                      "end": 583
                    },
                    "start": 566,
                    "end": 584
                  },
                  "start": 514,
                  "end": 584
                }
              ],
              "start": 497,
              "end": 585
            },
            "start": 491,
            "end": 586
          }
        ],
        "start": 487,
        "end": 588
      },
      "alternate": null,
      "start": 449,
      "end": 588
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 604,
            "end": 609
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 610,
                "end": 619
              },
              "operator": "%",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 622,
                "end": 631
              },
              "start": 610,
              "end": 631
            }
          ],
          "optional": false,
          "start": 604,
          "end": 632
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 637,
          "end": 641
        },
        "start": 604,
        "end": 641
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 657,
                "end": 669
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: undefined % undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: undefined % undefined === Not-a-Number. Actual: '",
                    "start": 670,
                    "end": 724
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 728,
                        "end": 737
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 740,
                        "end": 749
                      },
                      "start": 728,
                      "end": 749
                    },
                    "start": 727,
                    "end": 750
                  },
                  "start": 670,
                  "end": 750
                }
              ],
              "start": 653,
              "end": 751
            },
            "start": 647,
            "end": 752
          }
        ],
        "start": 643,
        "end": 754
      },
      "alternate": null,
      "start": 600,
      "end": 754
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 770,
            "end": 775
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 776,
                "end": 780
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 783,
                "end": 787
              },
              "start": 776,
              "end": 787
            }
          ],
          "optional": false,
          "start": 770,
          "end": 788
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 793,
          "end": 797
        },
        "start": 770,
        "end": 797
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 813,
                "end": 825
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: null % null === Not-a-Number. Actual: ",
                    "raw": "'#4: null % null === Not-a-Number. Actual: '",
                    "start": 826,
                    "end": 870
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 874,
                        "end": 878
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 881,
                        "end": 885
                      },
                      "start": 874,
                      "end": 885
                    },
                    "start": 873,
                    "end": 886
                  },
                  "start": 826,
                  "end": 886
                }
              ],
              "start": 809,
              "end": 887
            },
            "start": 803,
            "end": 888
          }
        ],
        "start": 799,
        "end": 890
      },
      "alternate": null,
      "start": 766,
      "end": 890
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 891
}