{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 360,
            "end": 365
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 366,
                "end": 367
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 370,
                "end": 374
              },
              "start": 366,
              "end": 374
            }
          ],
          "optional": false,
          "start": 360,
          "end": 375
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 380,
          "end": 384
        },
        "start": 360,
        "end": 384
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 400,
                "end": 412
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: 1 % null === Not-a-Number. Actual: ",
                    "raw": "'#1: 1 % null === Not-a-Number. Actual: '",
                    "start": 413,
                    "end": 454
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 458,
                        "end": 459
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 462,
                        "end": 466
                      },
                      "start": 458,
                      "end": 466
                    },
                    "start": 457,
                    "end": 467
                  },
                  "start": 413,
                  "end": 467
                }
              ],
              "start": 396,
              "end": 468
            },
            "start": 390,
            "end": 469
          }
        ],
        "start": 386,
        "end": 471
      },
      "alternate": null,
      "start": 356,
      "end": 471
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 487,
            "end": 491
          },
          "operator": "%",
          "right": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 494,
            "end": 495
          },
          "start": 487,
          "end": 495
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 500,
          "end": 501
        },
        "start": 487,
        "end": 501
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 517,
                "end": 529
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: null % 1 === 0. Actual: ",
                    "raw": "'#2: null % 1 === 0. Actual: '",
                    "start": 530,
                    "end": 560
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 564,
                        "end": 568
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 571,
                        "end": 572
                      },
                      "start": 564,
                      "end": 572
                    },
                    "start": 563,
                    "end": 573
                  },
                  "start": 530,
                  "end": 573
                }
              ],
              "start": 513,
              "end": 574
            },
            "start": 507,
            "end": 575
          }
        ],
        "start": 503,
        "end": 577
      },
      "alternate": null,
      "start": 483,
      "end": 577
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 593,
            "end": 598
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 603,
                  "end": 609
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 610,
                    "end": 611
                  }
                ],
                "start": 599,
                "end": 612
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 615,
                "end": 619
              },
              "start": 599,
              "end": 619
            }
          ],
          "optional": false,
          "start": 593,
          "end": 620
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 625,
          "end": 629
        },
        "start": 593,
        "end": 629
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 645,
                "end": 657
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new Number(1) % null === Not-a-Number. Actual: ",
                    "raw": "'#3: new Number(1) % null === Not-a-Number. Actual: '",
                    "start": 658,
                    "end": 711
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 719,
                          "end": 725
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 726,
                            "end": 727
                          }
                        ],
                        "start": 715,
                        "end": 728
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 731,
                        "end": 735
                      },
                      "start": 715,
                      "end": 735
                    },
                    "start": 714,
                    "end": 736
                  },
                  "start": 658,
                  "end": 736
                }
              ],
              "start": 641,
              "end": 737
            },
            "start": 635,
            "end": 738
          }
        ],
        "start": 631,
        "end": 740
      },
      "alternate": null,
      "start": 589,
      "end": 740
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 756,
            "end": 760
          },
          "operator": "%",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 767,
              "end": 773
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 774,
                "end": 775
              }
            ],
            "start": 763,
            "end": 776
          },
          "start": 756,
          "end": 776
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 781,
          "end": 782
        },
        "start": 756,
        "end": 782
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 798,
                "end": 810
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: null % new Number(1) === 0. Actual: ",
                    "raw": "'#4: null % new Number(1) === 0. Actual: '",
                    "start": 811,
                    "end": 853
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 857,
                        "end": 861
                      },
                      "operator": "%",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 868,
                          "end": 874
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 875,
                            "end": 876
                          }
                        ],
                        "start": 864,
                        "end": 877
                      },
                      "start": 857,
                      "end": 877
                    },
                    "start": 856,
                    "end": 878
                  },
                  "start": 811,
                  "end": 878
                }
              ],
              "start": 794,
              "end": 879
            },
            "start": 788,
            "end": 880
          }
        ],
        "start": 784,
        "end": 882
      },
      "alternate": null,
      "start": 752,
      "end": 882
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 883
}