{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 356,
            "end": 361
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 363,
                  "end": 364
                },
                "prefix": true,
                "start": 362,
                "end": 364
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 367,
                "end": 368
              },
              "start": 362,
              "end": 368
            }
          ],
          "optional": false,
          "start": 356,
          "end": 369
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 374,
          "end": 378
        },
        "start": 356,
        "end": 378
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 394,
                "end": 406
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: -0 % 0 === Not-a-Number. Actual: ",
                    "raw": "'#1: -0 % 0 === Not-a-Number. Actual: '",
                    "start": 407,
                    "end": 446
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 451,
                          "end": 452
                        },
                        "prefix": true,
                        "start": 450,
                        "end": 452
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 455,
                        "end": 456
                      },
                      "start": 450,
                      "end": 456
                    },
                    "start": 449,
                    "end": 457
                  },
                  "start": 407,
                  "end": 457
                }
              ],
              "start": 390,
              "end": 458
            },
            "start": 384,
            "end": 459
          }
        ],
        "start": 380,
        "end": 461
      },
      "alternate": null,
      "start": 352,
      "end": 461
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 477,
            "end": 482
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 484,
                  "end": 485
                },
                "prefix": true,
                "start": 483,
                "end": 485
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 489,
                  "end": 490
                },
                "prefix": true,
                "start": 488,
                "end": 490
              },
              "start": 483,
              "end": 490
            }
          ],
          "optional": false,
          "start": 477,
          "end": 491
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 496,
          "end": 500
        },
        "start": 477,
        "end": 500
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 516,
                "end": 528
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: -0 % -0 === Not-a-Number. Actual: ",
                    "raw": "'#2: -0 % -0 === Not-a-Number. Actual: '",
                    "start": 529,
                    "end": 569
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 574,
                          "end": 575
                        },
                        "prefix": true,
                        "start": 573,
                        "end": 575
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 579,
                          "end": 580
                        },
                        "prefix": true,
                        "start": 578,
                        "end": 580
                      },
                      "start": 573,
                      "end": 580
                    },
                    "start": 572,
                    "end": 581
                  },
                  "start": 529,
                  "end": 581
                }
              ],
              "start": 512,
              "end": 582
            },
            "start": 506,
            "end": 583
          }
        ],
        "start": 502,
        "end": 585
      },
      "alternate": null,
      "start": 473,
      "end": 585
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 601,
            "end": 606
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 607,
                "end": 608
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 611,
                "end": 612
              },
              "start": 607,
              "end": 612
            }
          ],
          "optional": false,
          "start": 601,
          "end": 613
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 618,
          "end": 622
        },
        "start": 601,
        "end": 622
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 638,
                "end": 650
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: 0 % 0 === Not-a-Number. Actual: ",
                    "raw": "'#3: 0 % 0 === Not-a-Number. Actual: '",
                    "start": 651,
                    "end": 689
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 693,
                        "end": 694
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 697,
                        "end": 698
                      },
                      "start": 693,
                      "end": 698
                    },
                    "start": 692,
                    "end": 699
                  },
                  "start": 651,
                  "end": 699
                }
              ],
              "start": 634,
              "end": 700
            },
            "start": 628,
            "end": 701
          }
        ],
        "start": 624,
        "end": 703
      },
      "alternate": null,
      "start": 597,
      "end": 703
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 719,
            "end": 724
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 725,
                "end": 726
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 730,
                  "end": 731
                },
                "prefix": true,
                "start": 729,
                "end": 731
              },
              "start": 725,
              "end": 731
            }
          ],
          "optional": false,
          "start": 719,
          "end": 732
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 737,
          "end": 741
        },
        "start": 719,
        "end": 741
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 757,
                "end": 769
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: 0 % -0 === Not-a-Number. Actual: ",
                    "raw": "'#4: 0 % -0 === Not-a-Number. Actual: '",
                    "start": 770,
                    "end": 809
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 813,
                        "end": 814
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 818,
                          "end": 819
                        },
                        "prefix": true,
                        "start": 817,
                        "end": 819
                      },
                      "start": 813,
                      "end": 819
                    },
                    "start": 812,
                    "end": 820
                  },
                  "start": 770,
                  "end": 820
                }
              ],
              "start": 753,
              "end": 821
            },
            "start": 747,
            "end": 822
          }
        ],
        "start": 743,
        "end": 824
      },
      "alternate": null,
      "start": 715,
      "end": 824
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 840,
            "end": 845
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 847,
                  "end": 848
                },
                "prefix": true,
                "start": 846,
                "end": 848
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 851,
                "end": 852
              },
              "start": 846,
              "end": 852
            }
          ],
          "optional": false,
          "start": 840,
          "end": 853
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 858,
          "end": 862
        },
        "start": 840,
        "end": 862
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 878,
                "end": 890
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: 1 % 0 === Not-a-Number. Actual: ",
                    "raw": "'#5: 1 % 0 === Not-a-Number. Actual: '",
                    "start": 891,
                    "end": 929
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 933,
                        "end": 934
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 937,
                        "end": 938
                      },
                      "start": 933,
                      "end": 938
                    },
                    "start": 932,
                    "end": 939
                  },
                  "start": 891,
                  "end": 939
                }
              ],
              "start": 874,
              "end": 940
            },
            "start": 868,
            "end": 941
          }
        ],
        "start": 864,
        "end": 943
      },
      "alternate": null,
      "start": 836,
      "end": 943
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 959,
            "end": 964
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 966,
                  "end": 967
                },
                "prefix": true,
                "start": 965,
                "end": 967
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 971,
                  "end": 972
                },
                "prefix": true,
                "start": 970,
                "end": 972
              },
              "start": 965,
              "end": 972
            }
          ],
          "optional": false,
          "start": 959,
          "end": 973
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 978,
          "end": 982
        },
        "start": 959,
        "end": 982
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 998,
                "end": 1010
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: -1 % -0 === Not-a-Number. Actual: ",
                    "raw": "'#6: -1 % -0 === Not-a-Number. Actual: '",
                    "start": 1011,
                    "end": 1051
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 1,
                          "raw": "1",
                          "start": 1056,
                          "end": 1057
                        },
                        "prefix": true,
                        "start": 1055,
                        "end": 1057
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 1061,
                          "end": 1062
                        },
                        "prefix": true,
                        "start": 1060,
                        "end": 1062
                      },
                      "start": 1055,
                      "end": 1062
                    },
                    "start": 1054,
                    "end": 1063
                  },
                  "start": 1011,
                  "end": 1063
                }
              ],
              "start": 994,
              "end": 1064
            },
            "start": 988,
            "end": 1065
          }
        ],
        "start": 984,
        "end": 1067
      },
      "alternate": null,
      "start": 955,
      "end": 1067
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1083,
            "end": 1088
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1089,
                "end": 1090
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1093,
                "end": 1094
              },
              "start": 1089,
              "end": 1094
            }
          ],
          "optional": false,
          "start": 1083,
          "end": 1095
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1100,
          "end": 1104
        },
        "start": 1083,
        "end": 1104
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1120,
                "end": 1132
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: 1 % 0 === Not-a-Number. Actual: ",
                    "raw": "'#7: 1 % 0 === Not-a-Number. Actual: '",
                    "start": 1133,
                    "end": 1171
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1175,
                        "end": 1176
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1179,
                        "end": 1180
                      },
                      "start": 1175,
                      "end": 1180
                    },
                    "start": 1174,
                    "end": 1181
                  },
                  "start": 1133,
                  "end": 1181
                }
              ],
              "start": 1116,
              "end": 1182
            },
            "start": 1110,
            "end": 1183
          }
        ],
        "start": 1106,
        "end": 1185
      },
      "alternate": null,
      "start": 1079,
      "end": 1185
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1201,
            "end": 1206
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1207,
                "end": 1208
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 1212,
                  "end": 1213
                },
                "prefix": true,
                "start": 1211,
                "end": 1213
              },
              "start": 1207,
              "end": 1213
            }
          ],
          "optional": false,
          "start": 1201,
          "end": 1214
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1219,
          "end": 1223
        },
        "start": 1201,
        "end": 1223
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1239,
                "end": 1251
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: 1 % -0 === Not-a-Number. Actual: ",
                    "raw": "'#8: 1 % -0 === Not-a-Number. Actual: '",
                    "start": 1252,
                    "end": 1291
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1295,
                        "end": 1296
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 1300,
                          "end": 1301
                        },
                        "prefix": true,
                        "start": 1299,
                        "end": 1301
                      },
                      "start": 1295,
                      "end": 1301
                    },
                    "start": 1294,
                    "end": 1302
                  },
                  "start": 1252,
                  "end": 1302
                }
              ],
              "start": 1235,
              "end": 1303
            },
            "start": 1229,
            "end": 1304
          }
        ],
        "start": 1225,
        "end": 1306
      },
      "alternate": null,
      "start": 1197,
      "end": 1306
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1322,
            "end": 1327
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1328,
                  "end": 1334
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 1335,
                  "end": 1352
                },
                "optional": false,
                "computed": false,
                "start": 1328,
                "end": 1352
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1355,
                "end": 1356
              },
              "start": 1328,
              "end": 1356
            }
          ],
          "optional": false,
          "start": 1322,
          "end": 1357
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1362,
          "end": 1366
        },
        "start": 1322,
        "end": 1366
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1382,
                "end": 1394
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: Infinity % 0 === Not-a-Number. Actual: ",
                    "raw": "'#9: Infinity % 0 === Not-a-Number. Actual: '",
                    "start": 1395,
                    "end": 1440
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 1444,
                        "end": 1452
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1455,
                        "end": 1456
                      },
                      "start": 1444,
                      "end": 1456
                    },
                    "start": 1443,
                    "end": 1457
                  },
                  "start": 1395,
                  "end": 1457
                }
              ],
              "start": 1378,
              "end": 1458
            },
            "start": 1372,
            "end": 1459
          }
        ],
        "start": 1368,
        "end": 1461
      },
      "alternate": null,
      "start": 1318,
      "end": 1461
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1478,
            "end": 1483
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1484,
                  "end": 1490
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 1491,
                  "end": 1508
                },
                "optional": false,
                "computed": false,
                "start": 1484,
                "end": 1508
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 1512,
                  "end": 1513
                },
                "prefix": true,
                "start": 1511,
                "end": 1513
              },
              "start": 1484,
              "end": 1513
            }
          ],
          "optional": false,
          "start": 1478,
          "end": 1514
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1519,
          "end": 1523
        },
        "start": 1478,
        "end": 1523
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1539,
                "end": 1551
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: -Infinity % -0 === Not-a-Number. Actual: ",
                    "raw": "'#10: -Infinity % -0 === Not-a-Number. Actual: '",
                    "start": 1552,
                    "end": 1600
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Identifier",
                          "name": "Infinity",
                          "start": 1605,
                          "end": 1613
                        },
                        "prefix": true,
                        "start": 1604,
                        "end": 1613
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 1617,
                          "end": 1618
                        },
                        "prefix": true,
                        "start": 1616,
                        "end": 1618
                      },
                      "start": 1604,
                      "end": 1618
                    },
                    "start": 1603,
                    "end": 1619
                  },
                  "start": 1552,
                  "end": 1619
                }
              ],
              "start": 1535,
              "end": 1620
            },
            "start": 1529,
            "end": 1621
          }
        ],
        "start": 1525,
        "end": 1623
      },
      "alternate": null,
      "start": 1474,
      "end": 1623
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1640,
            "end": 1645
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1646,
                  "end": 1652
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 1653,
                  "end": 1670
                },
                "optional": false,
                "computed": false,
                "start": 1646,
                "end": 1670
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1673,
                "end": 1674
              },
              "start": 1646,
              "end": 1674
            }
          ],
          "optional": false,
          "start": 1640,
          "end": 1675
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1680,
          "end": 1684
        },
        "start": 1640,
        "end": 1684
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1700,
                "end": 1712
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#11: Infinity % 0 === Not-a-Number. Actual: ",
                    "raw": "'#11: Infinity % 0 === Not-a-Number. Actual: '",
                    "start": 1713,
                    "end": 1759
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 1763,
                        "end": 1771
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1774,
                        "end": 1775
                      },
                      "start": 1763,
                      "end": 1775
                    },
                    "start": 1762,
                    "end": 1776
                  },
                  "start": 1713,
                  "end": 1776
                }
              ],
              "start": 1696,
              "end": 1777
            },
            "start": 1690,
            "end": 1778
          }
        ],
        "start": 1686,
        "end": 1780
      },
      "alternate": null,
      "start": 1636,
      "end": 1780
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1797,
            "end": 1802
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1803,
                  "end": 1809
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 1810,
                  "end": 1827
                },
                "optional": false,
                "computed": false,
                "start": 1803,
                "end": 1827
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 1831,
                  "end": 1832
                },
                "prefix": true,
                "start": 1830,
                "end": 1832
              },
              "start": 1803,
              "end": 1832
            }
          ],
          "optional": false,
          "start": 1797,
          "end": 1833
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1838,
          "end": 1842
        },
        "start": 1797,
        "end": 1842
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1858,
                "end": 1870
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#12: Infinity % -0 === Not-a-Number. Actual: ",
                    "raw": "'#12: Infinity % -0 === Not-a-Number. Actual: '",
                    "start": 1871,
                    "end": 1918
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 1922,
                        "end": 1930
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 1934,
                          "end": 1935
                        },
                        "prefix": true,
                        "start": 1933,
                        "end": 1935
                      },
                      "start": 1922,
                      "end": 1935
                    },
                    "start": 1921,
                    "end": 1936
                  },
                  "start": 1871,
                  "end": 1936
                }
              ],
              "start": 1854,
              "end": 1937
            },
            "start": 1848,
            "end": 1938
          }
        ],
        "start": 1844,
        "end": 1940
      },
      "alternate": null,
      "start": 1793,
      "end": 1940
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1957,
            "end": 1962
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1963,
                  "end": 1969
                },
                "property": {
                  "type": "Identifier",
                  "name": "MIN_VALUE",
                  "start": 1970,
                  "end": 1979
                },
                "optional": false,
                "computed": false,
                "start": 1963,
                "end": 1979
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1982,
                "end": 1983
              },
              "start": 1963,
              "end": 1983
            }
          ],
          "optional": false,
          "start": 1957,
          "end": 1984
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1989,
          "end": 1993
        },
        "start": 1957,
        "end": 1993
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2009,
                "end": 2021
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#13: Number.MIN_VALUE % 0 === Not-a-Number. Actual: ",
                    "raw": "'#13: Number.MIN_VALUE % 0 === Not-a-Number. Actual: '",
                    "start": 2022,
                    "end": 2076
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 2080,
                          "end": 2086
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MIN_VALUE",
                          "start": 2087,
                          "end": 2096
                        },
                        "optional": false,
                        "computed": false,
                        "start": 2080,
                        "end": 2096
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 2099,
                        "end": 2100
                      },
                      "start": 2080,
                      "end": 2100
                    },
                    "start": 2079,
                    "end": 2101
                  },
                  "start": 2022,
                  "end": 2101
                }
              ],
              "start": 2005,
              "end": 2102
            },
            "start": 1999,
            "end": 2103
          }
        ],
        "start": 1995,
        "end": 2105
      },
      "alternate": null,
      "start": 1953,
      "end": 2105
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 2122,
            "end": 2127
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 2128,
                  "end": 2134
                },
                "property": {
                  "type": "Identifier",
                  "name": "MIN_VALUE",
                  "start": 2135,
                  "end": 2144
                },
                "optional": false,
                "computed": false,
                "start": 2128,
                "end": 2144
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 2148,
                  "end": 2149
                },
                "prefix": true,
                "start": 2147,
                "end": 2149
              },
              "start": 2128,
              "end": 2149
            }
          ],
          "optional": false,
          "start": 2122,
          "end": 2150
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 2155,
          "end": 2159
        },
        "start": 2122,
        "end": 2159
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2175,
                "end": 2187
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#14: -Number.MIN_VALUE % -0 === Not-a-Number. Actual: ",
                    "raw": "'#14: -Number.MIN_VALUE % -0 === Not-a-Number. Actual: '",
                    "start": 2188,
                    "end": 2244
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 2249,
                            "end": 2255
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "MIN_VALUE",
                            "start": 2256,
                            "end": 2265
                          },
                          "optional": false,
                          "computed": false,
                          "start": 2249,
                          "end": 2265
                        },
                        "prefix": true,
                        "start": 2248,
                        "end": 2265
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 2269,
                          "end": 2270
                        },
                        "prefix": true,
                        "start": 2268,
                        "end": 2270
                      },
                      "start": 2248,
                      "end": 2270
                    },
                    "start": 2247,
                    "end": 2271
                  },
                  "start": 2188,
                  "end": 2271
                }
              ],
              "start": 2171,
              "end": 2272
            },
            "start": 2165,
            "end": 2273
          }
        ],
        "start": 2161,
        "end": 2275
      },
      "alternate": null,
      "start": 2118,
      "end": 2275
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 2292,
            "end": 2297
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 2298,
                  "end": 2304
                },
                "property": {
                  "type": "Identifier",
                  "name": "MAX_VALUE",
                  "start": 2305,
                  "end": 2314
                },
                "optional": false,
                "computed": false,
                "start": 2298,
                "end": 2314
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 2317,
                "end": 2318
              },
              "start": 2298,
              "end": 2318
            }
          ],
          "optional": false,
          "start": 2292,
          "end": 2319
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 2324,
          "end": 2328
        },
        "start": 2292,
        "end": 2328
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2344,
                "end": 2356
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#15: Number.MAX_VALUE % 0 === Not-a-Number. Actual: ",
                    "raw": "'#15: Number.MAX_VALUE % 0 === Not-a-Number. Actual: '",
                    "start": 2357,
                    "end": 2411
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 2415,
                          "end": 2421
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MAX_VALUE",
                          "start": 2422,
                          "end": 2431
                        },
                        "optional": false,
                        "computed": false,
                        "start": 2415,
                        "end": 2431
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 2434,
                        "end": 2435
                      },
                      "start": 2415,
                      "end": 2435
                    },
                    "start": 2414,
                    "end": 2436
                  },
                  "start": 2357,
                  "end": 2436
                }
              ],
              "start": 2340,
              "end": 2437
            },
            "start": 2334,
            "end": 2438
          }
        ],
        "start": 2330,
        "end": 2440
      },
      "alternate": null,
      "start": 2288,
      "end": 2440
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 2457,
            "end": 2462
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 2463,
                  "end": 2469
                },
                "property": {
                  "type": "Identifier",
                  "name": "MAX_VALUE",
                  "start": 2470,
                  "end": 2479
                },
                "optional": false,
                "computed": false,
                "start": 2463,
                "end": 2479
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 2483,
                  "end": 2484
                },
                "prefix": true,
                "start": 2482,
                "end": 2484
              },
              "start": 2463,
              "end": 2484
            }
          ],
          "optional": false,
          "start": 2457,
          "end": 2485
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 2490,
          "end": 2494
        },
        "start": 2457,
        "end": 2494
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2510,
                "end": 2522
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#16: Number.MAX_VALUE % -0 === Not-a-Number. Actual: ",
                    "raw": "'#16: Number.MAX_VALUE % -0 === Not-a-Number. Actual: '",
                    "start": 2523,
                    "end": 2578
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 2582,
                          "end": 2588
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MAX_VALUE",
                          "start": 2589,
                          "end": 2598
                        },
                        "optional": false,
                        "computed": false,
                        "start": 2582,
                        "end": 2598
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 2602,
                          "end": 2603
                        },
                        "prefix": true,
                        "start": 2601,
                        "end": 2603
                      },
                      "start": 2582,
                      "end": 2603
                    },
                    "start": 2581,
                    "end": 2604
                  },
                  "start": 2523,
                  "end": 2604
                }
              ],
              "start": 2506,
              "end": 2605
            },
            "start": 2500,
            "end": 2606
          }
        ],
        "start": 2496,
        "end": 2608
      },
      "alternate": null,
      "start": 2453,
      "end": 2608
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2609
}