{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 364,
            "end": 369
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 370,
                  "end": 376
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 377,
                  "end": 380
                },
                "optional": false,
                "computed": false,
                "start": 370,
                "end": 380
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 383,
                  "end": 389
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 390,
                  "end": 393
                },
                "optional": false,
                "computed": false,
                "start": 383,
                "end": 393
              },
              "start": 370,
              "end": 393
            }
          ],
          "optional": false,
          "start": 364,
          "end": 394
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 399,
          "end": 403
        },
        "start": 364,
        "end": 403
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 419,
                "end": 431
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: NaN % NaN === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN % NaN === Not-a-Number. Actual: '",
                    "start": 432,
                    "end": 474
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 478,
                        "end": 481
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 484,
                        "end": 487
                      },
                      "start": 478,
                      "end": 487
                    },
                    "start": 477,
                    "end": 488
                  },
                  "start": 432,
                  "end": 488
                }
              ],
              "start": 415,
              "end": 489
            },
            "start": 409,
            "end": 490
          }
        ],
        "start": 405,
        "end": 492
      },
      "alternate": null,
      "start": 360,
      "end": 492
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 510,
            "end": 515
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "+",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 517,
                  "end": 518
                },
                "prefix": true,
                "start": 516,
                "end": 518
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 521,
                  "end": 527
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 528,
                  "end": 531
                },
                "optional": false,
                "computed": false,
                "start": 521,
                "end": 531
              },
              "start": 516,
              "end": 531
            }
          ],
          "optional": false,
          "start": 510,
          "end": 532
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 537,
          "end": 541
        },
        "start": 510,
        "end": 541
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 557,
                "end": 569
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: +0 % NaN === Not-a-Number. Actual: ",
                    "raw": "'#2: +0 % NaN === Not-a-Number. Actual: '",
                    "start": 570,
                    "end": 611
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "+",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 616,
                          "end": 617
                        },
                        "prefix": true,
                        "start": 615,
                        "end": 617
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 620,
                        "end": 623
                      },
                      "start": 615,
                      "end": 623
                    },
                    "start": 614,
                    "end": 624
                  },
                  "start": 570,
                  "end": 624
                }
              ],
              "start": 553,
              "end": 625
            },
            "start": 547,
            "end": 626
          }
        ],
        "start": 543,
        "end": 629
      },
      "alternate": null,
      "start": 506,
      "end": 629
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 646,
            "end": 651
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 653,
                  "end": 654
                },
                "prefix": true,
                "start": 652,
                "end": 654
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 657,
                  "end": 663
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 664,
                  "end": 667
                },
                "optional": false,
                "computed": false,
                "start": 657,
                "end": 667
              },
              "start": 652,
              "end": 667
            }
          ],
          "optional": false,
          "start": 646,
          "end": 668
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 673,
          "end": 677
        },
        "start": 646,
        "end": 677
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 693,
                "end": 705
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: -0 % NaN === Not-a-Number. Actual: ",
                    "raw": "'#3: -0 % NaN === Not-a-Number. Actual: '",
                    "start": 706,
                    "end": 747
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 752,
                          "end": 753
                        },
                        "prefix": true,
                        "start": 751,
                        "end": 753
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 756,
                        "end": 759
                      },
                      "start": 751,
                      "end": 759
                    },
                    "start": 750,
                    "end": 760
                  },
                  "start": 706,
                  "end": 760
                }
              ],
              "start": 689,
              "end": 761
            },
            "start": 683,
            "end": 762
          }
        ],
        "start": 679,
        "end": 765
      },
      "alternate": null,
      "start": 642,
      "end": 765
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 782,
            "end": 787
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 788,
                  "end": 794
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 795,
                  "end": 812
                },
                "optional": false,
                "computed": false,
                "start": 788,
                "end": 812
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 815,
                  "end": 821
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 822,
                  "end": 825
                },
                "optional": false,
                "computed": false,
                "start": 815,
                "end": 825
              },
              "start": 788,
              "end": 825
            }
          ],
          "optional": false,
          "start": 782,
          "end": 826
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 831,
          "end": 835
        },
        "start": 782,
        "end": 835
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 851,
                "end": 863
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: Infinity % NaN === Not-a-Number. Actual: ",
                    "raw": "'#4: Infinity % NaN === Not-a-Number. Actual: '",
                    "start": 864,
                    "end": 911
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 915,
                        "end": 923
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 926,
                        "end": 929
                      },
                      "start": 915,
                      "end": 929
                    },
                    "start": 914,
                    "end": 930
                  },
                  "start": 864,
                  "end": 930
                }
              ],
              "start": 847,
              "end": 931
            },
            "start": 841,
            "end": 932
          }
        ],
        "start": 837,
        "end": 934
      },
      "alternate": null,
      "start": 778,
      "end": 934
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 951,
            "end": 956
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 957,
                  "end": 963
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 964,
                  "end": 981
                },
                "optional": false,
                "computed": false,
                "start": 957,
                "end": 981
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 984,
                  "end": 990
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 991,
                  "end": 994
                },
                "optional": false,
                "computed": false,
                "start": 984,
                "end": 994
              },
              "start": 957,
              "end": 994
            }
          ],
          "optional": false,
          "start": 951,
          "end": 995
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1000,
          "end": 1004
        },
        "start": 951,
        "end": 1004
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1020,
                "end": 1032
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5:  -Infinity % NaN === Not-a-Number. Actual: ",
                    "raw": "'#5:  -Infinity % NaN === Not-a-Number. Actual: '",
                    "start": 1033,
                    "end": 1082
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Identifier",
                          "name": "Infinity",
                          "start": 1088,
                          "end": 1096
                        },
                        "prefix": true,
                        "start": 1087,
                        "end": 1096
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1099,
                        "end": 1102
                      },
                      "start": 1087,
                      "end": 1102
                    },
                    "start": 1085,
                    "end": 1103
                  },
                  "start": 1033,
                  "end": 1103
                }
              ],
              "start": 1016,
              "end": 1104
            },
            "start": 1010,
            "end": 1105
          }
        ],
        "start": 1006,
        "end": 1108
      },
      "alternate": null,
      "start": 947,
      "end": 1108
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1125,
            "end": 1130
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1131,
                  "end": 1137
                },
                "property": {
                  "type": "Identifier",
                  "name": "MAX_VALUE",
                  "start": 1138,
                  "end": 1147
                },
                "optional": false,
                "computed": false,
                "start": 1131,
                "end": 1147
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1150,
                  "end": 1156
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1157,
                  "end": 1160
                },
                "optional": false,
                "computed": false,
                "start": 1150,
                "end": 1160
              },
              "start": 1131,
              "end": 1160
            }
          ],
          "optional": false,
          "start": 1125,
          "end": 1161
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1166,
          "end": 1170
        },
        "start": 1125,
        "end": 1170
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1186,
                "end": 1198
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: Number.MAX_VALUE % NaN === Not-a-Number. Actual: ",
                    "raw": "'#6: Number.MAX_VALUE % NaN === Not-a-Number. Actual: '",
                    "start": 1199,
                    "end": 1254
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1258,
                          "end": 1264
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MAX_VALUE",
                          "start": 1265,
                          "end": 1274
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1258,
                        "end": 1274
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1277,
                        "end": 1280
                      },
                      "start": 1258,
                      "end": 1280
                    },
                    "start": 1257,
                    "end": 1281
                  },
                  "start": 1199,
                  "end": 1281
                }
              ],
              "start": 1182,
              "end": 1282
            },
            "start": 1176,
            "end": 1283
          }
        ],
        "start": 1172,
        "end": 1285
      },
      "alternate": null,
      "start": 1121,
      "end": 1285
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1302,
            "end": 1307
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1308,
                  "end": 1314
                },
                "property": {
                  "type": "Identifier",
                  "name": "MIN_VALUE",
                  "start": 1315,
                  "end": 1324
                },
                "optional": false,
                "computed": false,
                "start": 1308,
                "end": 1324
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1327,
                  "end": 1333
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1334,
                  "end": 1337
                },
                "optional": false,
                "computed": false,
                "start": 1327,
                "end": 1337
              },
              "start": 1308,
              "end": 1337
            }
          ],
          "optional": false,
          "start": 1302,
          "end": 1338
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1343,
          "end": 1347
        },
        "start": 1302,
        "end": 1347
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1363,
                "end": 1375
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: Number.MIN_VALUE % NaN === Not-a-Number. Actual: ",
                    "raw": "'#7: Number.MIN_VALUE % NaN === Not-a-Number. Actual: '",
                    "start": 1376,
                    "end": 1431
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1435,
                          "end": 1441
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MIN_VALUE",
                          "start": 1442,
                          "end": 1451
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1435,
                        "end": 1451
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1454,
                        "end": 1457
                      },
                      "start": 1435,
                      "end": 1457
                    },
                    "start": 1434,
                    "end": 1458
                  },
                  "start": 1376,
                  "end": 1458
                }
              ],
              "start": 1359,
              "end": 1459
            },
            "start": 1353,
            "end": 1460
          }
        ],
        "start": 1349,
        "end": 1463
      },
      "alternate": null,
      "start": 1298,
      "end": 1463
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1479,
            "end": 1484
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1485,
                "end": 1486
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1489,
                  "end": 1495
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1496,
                  "end": 1499
                },
                "optional": false,
                "computed": false,
                "start": 1489,
                "end": 1499
              },
              "start": 1485,
              "end": 1499
            }
          ],
          "optional": false,
          "start": 1479,
          "end": 1500
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1505,
          "end": 1509
        },
        "start": 1479,
        "end": 1509
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1525,
                "end": 1537
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: 1 % NaN === Not-a-Number. Actual: ",
                    "raw": "'#8: 1 % NaN === Not-a-Number. Actual: '",
                    "start": 1538,
                    "end": 1578
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1582,
                        "end": 1583
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1586,
                        "end": 1589
                      },
                      "start": 1582,
                      "end": 1589
                    },
                    "start": 1581,
                    "end": 1590
                  },
                  "start": 1538,
                  "end": 1590
                }
              ],
              "start": 1521,
              "end": 1591
            },
            "start": 1515,
            "end": 1592
          }
        ],
        "start": 1511,
        "end": 1596
      },
      "alternate": null,
      "start": 1475,
      "end": 1596
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1597
}