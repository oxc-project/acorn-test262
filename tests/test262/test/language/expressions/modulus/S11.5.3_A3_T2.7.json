{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 360,
            "end": 365
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 366,
                "end": 369
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 372,
                "end": 376
              },
              "start": 366,
              "end": 376
            }
          ],
          "optional": false,
          "start": 360,
          "end": 377
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 382,
          "end": 386
        },
        "start": 360,
        "end": 386
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 402,
                "end": 414
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: \"1\" % null === Not-a-Number. Actual: ",
                    "raw": "'#1: \"1\" % null === Not-a-Number. Actual: '",
                    "start": 415,
                    "end": 458
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "1",
                        "raw": "\"1\"",
                        "start": 462,
                        "end": 465
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 468,
                        "end": 472
                      },
                      "start": 462,
                      "end": 472
                    },
                    "start": 461,
                    "end": 473
                  },
                  "start": 415,
                  "end": 473
                }
              ],
              "start": 398,
              "end": 474
            },
            "start": 392,
            "end": 475
          }
        ],
        "start": 388,
        "end": 477
      },
      "alternate": null,
      "start": 356,
      "end": 477
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 493,
            "end": 497
          },
          "operator": "%",
          "right": {
            "type": "Literal",
            "value": "1",
            "raw": "\"1\"",
            "start": 500,
            "end": 503
          },
          "start": 493,
          "end": 503
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 508,
          "end": 509
        },
        "start": 493,
        "end": 509
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 525,
                "end": 537
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: null % \"1\" === 0. Actual: ",
                    "raw": "'#2: null % \"1\" === 0. Actual: '",
                    "start": 538,
                    "end": 570
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 574,
                        "end": 578
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": "1",
                        "raw": "\"1\"",
                        "start": 581,
                        "end": 584
                      },
                      "start": 574,
                      "end": 584
                    },
                    "start": 573,
                    "end": 585
                  },
                  "start": 538,
                  "end": 585
                }
              ],
              "start": 521,
              "end": 586
            },
            "start": 515,
            "end": 587
          }
        ],
        "start": 511,
        "end": 589
      },
      "alternate": null,
      "start": 489,
      "end": 589
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 605,
            "end": 610
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 615,
                  "end": 621
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "1",
                    "raw": "\"1\"",
                    "start": 622,
                    "end": 625
                  }
                ],
                "start": 611,
                "end": 626
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 629,
                "end": 633
              },
              "start": 611,
              "end": 633
            }
          ],
          "optional": false,
          "start": 605,
          "end": 634
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 639,
          "end": 643
        },
        "start": 605,
        "end": 643
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 659,
                "end": 671
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new String(\"1\") % null === Not-a-Number. Actual: ",
                    "raw": "'#3: new String(\"1\") % null === Not-a-Number. Actual: '",
                    "start": 672,
                    "end": 727
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 735,
                          "end": 741
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "1",
                            "raw": "\"1\"",
                            "start": 742,
                            "end": 745
                          }
                        ],
                        "start": 731,
                        "end": 746
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 749,
                        "end": 753
                      },
                      "start": 731,
                      "end": 753
                    },
                    "start": 730,
                    "end": 754
                  },
                  "start": 672,
                  "end": 754
                }
              ],
              "start": 655,
              "end": 755
            },
            "start": 649,
            "end": 756
          }
        ],
        "start": 645,
        "end": 758
      },
      "alternate": null,
      "start": 601,
      "end": 758
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 774,
            "end": 778
          },
          "operator": "%",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "String",
              "start": 785,
              "end": 791
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 792,
                "end": 795
              }
            ],
            "start": 781,
            "end": 796
          },
          "start": 774,
          "end": 796
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 801,
          "end": 802
        },
        "start": 774,
        "end": 802
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 818,
                "end": 830
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: null % new String(\"1\") === 0. Actual: ",
                    "raw": "'#4: null % new String(\"1\") === 0. Actual: '",
                    "start": 831,
                    "end": 875
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 879,
                        "end": 883
                      },
                      "operator": "%",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 890,
                          "end": 896
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "1",
                            "raw": "\"1\"",
                            "start": 897,
                            "end": 900
                          }
                        ],
                        "start": 886,
                        "end": 901
                      },
                      "start": 879,
                      "end": 901
                    },
                    "start": 878,
                    "end": 902
                  },
                  "start": 831,
                  "end": 902
                }
              ],
              "start": 814,
              "end": 903
            },
            "start": 808,
            "end": 904
          }
        ],
        "start": 804,
        "end": 906
      },
      "alternate": null,
      "start": 770,
      "end": 906
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 907
}