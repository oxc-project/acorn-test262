{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 365,
            "end": 370
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 371,
                "end": 374
              },
              "operator": "%",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 377,
                "end": 386
              },
              "start": 371,
              "end": 386
            }
          ],
          "optional": false,
          "start": 365,
          "end": 387
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 392,
          "end": 396
        },
        "start": 365,
        "end": 396
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 412,
                "end": 424
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: \"1\" % undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: \"1\" % undefined === Not-a-Number. Actual: '",
                    "start": 425,
                    "end": 473
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "1",
                        "raw": "\"1\"",
                        "start": 477,
                        "end": 480
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 483,
                        "end": 492
                      },
                      "start": 477,
                      "end": 492
                    },
                    "start": 476,
                    "end": 493
                  },
                  "start": 425,
                  "end": 493
                }
              ],
              "start": 408,
              "end": 494
            },
            "start": 402,
            "end": 495
          }
        ],
        "start": 398,
        "end": 497
      },
      "alternate": null,
      "start": 361,
      "end": 497
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 513,
            "end": 518
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 519,
                "end": 528
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 531,
                "end": 534
              },
              "start": 519,
              "end": 534
            }
          ],
          "optional": false,
          "start": 513,
          "end": 535
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 540,
          "end": 544
        },
        "start": 513,
        "end": 544
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 560,
                "end": 572
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: undefined % \"1\" === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined % \"1\" === Not-a-Number. Actual: '",
                    "start": 573,
                    "end": 621
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 625,
                        "end": 634
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": "1",
                        "raw": "\"1\"",
                        "start": 637,
                        "end": 640
                      },
                      "start": 625,
                      "end": 640
                    },
                    "start": 624,
                    "end": 641
                  },
                  "start": 573,
                  "end": 641
                }
              ],
              "start": 556,
              "end": 642
            },
            "start": 550,
            "end": 643
          }
        ],
        "start": 546,
        "end": 645
      },
      "alternate": null,
      "start": 509,
      "end": 645
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 661,
            "end": 666
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 671,
                  "end": 677
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "1",
                    "raw": "\"1\"",
                    "start": 678,
                    "end": 681
                  }
                ],
                "start": 667,
                "end": 682
              },
              "operator": "%",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 685,
                "end": 694
              },
              "start": 667,
              "end": 694
            }
          ],
          "optional": false,
          "start": 661,
          "end": 695
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 700,
          "end": 704
        },
        "start": 661,
        "end": 704
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 720,
                "end": 732
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new String(\"1\") % undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: new String(\"1\") % undefined === Not-a-Number. Actual: '",
                    "start": 733,
                    "end": 793
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 801,
                          "end": 807
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "1",
                            "raw": "\"1\"",
                            "start": 808,
                            "end": 811
                          }
                        ],
                        "start": 797,
                        "end": 812
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 815,
                        "end": 824
                      },
                      "start": 797,
                      "end": 824
                    },
                    "start": 796,
                    "end": 825
                  },
                  "start": 733,
                  "end": 825
                }
              ],
              "start": 716,
              "end": 826
            },
            "start": 710,
            "end": 827
          }
        ],
        "start": 706,
        "end": 829
      },
      "alternate": null,
      "start": 657,
      "end": 829
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 845,
            "end": 850
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 851,
                "end": 860
              },
              "operator": "%",
              "right": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 867,
                  "end": 873
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "1",
                    "raw": "\"1\"",
                    "start": 874,
                    "end": 877
                  }
                ],
                "start": 863,
                "end": 878
              },
              "start": 851,
              "end": 878
            }
          ],
          "optional": false,
          "start": 845,
          "end": 879
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 884,
          "end": 888
        },
        "start": 845,
        "end": 888
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 904,
                "end": 916
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: undefined % new String(\"1\") === Not-a-Number. Actual: ",
                    "raw": "'#4: undefined % new String(\"1\") === Not-a-Number. Actual: '",
                    "start": 917,
                    "end": 977
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 981,
                        "end": 990
                      },
                      "operator": "%",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 997,
                          "end": 1003
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "1",
                            "raw": "\"1\"",
                            "start": 1004,
                            "end": 1007
                          }
                        ],
                        "start": 993,
                        "end": 1008
                      },
                      "start": 981,
                      "end": 1008
                    },
                    "start": 980,
                    "end": 1009
                  },
                  "start": 917,
                  "end": 1009
                }
              ],
              "start": 900,
              "end": 1010
            },
            "start": 894,
            "end": 1011
          }
        ],
        "start": 890,
        "end": 1013
      },
      "alternate": null,
      "start": 841,
      "end": 1013
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1014
}