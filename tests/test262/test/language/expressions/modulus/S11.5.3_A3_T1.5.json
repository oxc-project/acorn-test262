{
  "type": "Program",
  "start": 0,
  "end": 1014,
  "body": [
    {
      "type": "IfStatement",
      "start": 313,
      "end": 479,
      "test": {
        "type": "BinaryExpression",
        "start": 317,
        "end": 358,
        "left": {
          "type": "CallExpression",
          "start": 317,
          "end": 349,
          "callee": {
            "type": "Identifier",
            "start": 317,
            "end": 322,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 323,
              "end": 348,
              "left": {
                "type": "ObjectExpression",
                "start": 323,
                "end": 325,
                "properties": []
              },
              "operator": "%",
              "right": {
                "type": "FunctionExpression",
                "start": 328,
                "end": 348,
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 338,
                  "end": 348,
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 339,
                      "end": 347,
                      "argument": {
                        "type": "Literal",
                        "start": 346,
                        "end": 347,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  ]
                },
                "expression": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 354,
          "end": 358,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 360,
        "end": 479,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 364,
            "end": 477,
            "argument": {
              "type": "NewExpression",
              "start": 370,
              "end": 476,
              "callee": {
                "type": "Identifier",
                "start": 374,
                "end": 386,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 387,
                  "end": 475,
                  "left": {
                    "type": "Literal",
                    "start": 387,
                    "end": 445,
                    "value": "#1: {} % function(){return 1} === Not-a-Number. Actual: ",
                    "raw": "'#1: {} % function(){return 1} === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 448,
                    "end": 475,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 449,
                      "end": 474,
                      "left": {
                        "type": "ObjectExpression",
                        "start": 449,
                        "end": 451,
                        "properties": []
                      },
                      "operator": "%",
                      "right": {
                        "type": "FunctionExpression",
                        "start": 454,
                        "end": 474,
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 464,
                          "end": 474,
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "start": 465,
                              "end": 473,
                              "argument": {
                                "type": "Literal",
                                "start": 472,
                                "end": 473,
                                "value": 1,
                                "raw": "1"
                              }
                            }
                          ]
                        },
                        "expression": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 491,
      "end": 657,
      "test": {
        "type": "BinaryExpression",
        "start": 495,
        "end": 536,
        "left": {
          "type": "CallExpression",
          "start": 495,
          "end": 527,
          "callee": {
            "type": "Identifier",
            "start": 495,
            "end": 500,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 501,
              "end": 526,
              "left": {
                "type": "FunctionExpression",
                "start": 501,
                "end": 521,
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 511,
                  "end": 521,
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 512,
                      "end": 520,
                      "argument": {
                        "type": "Literal",
                        "start": 519,
                        "end": 520,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  ]
                },
                "expression": false
              },
              "operator": "%",
              "right": {
                "type": "ObjectExpression",
                "start": 524,
                "end": 526,
                "properties": []
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 532,
          "end": 536,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 538,
        "end": 657,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 542,
            "end": 655,
            "argument": {
              "type": "NewExpression",
              "start": 548,
              "end": 654,
              "callee": {
                "type": "Identifier",
                "start": 552,
                "end": 564,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 565,
                  "end": 653,
                  "left": {
                    "type": "Literal",
                    "start": 565,
                    "end": 623,
                    "value": "#2: function(){return 1} % {} === Not-a-Number. Actual: ",
                    "raw": "'#2: function(){return 1} % {} === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 626,
                    "end": 653,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 627,
                      "end": 652,
                      "left": {
                        "type": "FunctionExpression",
                        "start": 627,
                        "end": 647,
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 637,
                          "end": 647,
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "start": 638,
                              "end": 646,
                              "argument": {
                                "type": "Literal",
                                "start": 645,
                                "end": 646,
                                "value": 1,
                                "raw": "1"
                              }
                            }
                          ]
                        },
                        "expression": false
                      },
                      "operator": "%",
                      "right": {
                        "type": "ObjectExpression",
                        "start": 650,
                        "end": 652,
                        "properties": []
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 669,
      "end": 889,
      "test": {
        "type": "BinaryExpression",
        "start": 673,
        "end": 732,
        "left": {
          "type": "CallExpression",
          "start": 673,
          "end": 723,
          "callee": {
            "type": "Identifier",
            "start": 673,
            "end": 678,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 679,
              "end": 722,
              "left": {
                "type": "FunctionExpression",
                "start": 679,
                "end": 699,
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 689,
                  "end": 699,
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 690,
                      "end": 698,
                      "argument": {
                        "type": "Literal",
                        "start": 697,
                        "end": 698,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  ]
                },
                "expression": false
              },
              "operator": "%",
              "right": {
                "type": "FunctionExpression",
                "start": 702,
                "end": 722,
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 712,
                  "end": 722,
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 713,
                      "end": 721,
                      "argument": {
                        "type": "Literal",
                        "start": 720,
                        "end": 721,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  ]
                },
                "expression": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 728,
          "end": 732,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 734,
        "end": 889,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 738,
            "end": 887,
            "argument": {
              "type": "NewExpression",
              "start": 744,
              "end": 886,
              "callee": {
                "type": "Identifier",
                "start": 748,
                "end": 760,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 761,
                  "end": 885,
                  "left": {
                    "type": "Literal",
                    "start": 761,
                    "end": 837,
                    "value": "#3: function(){return 1} % function(){return 1} === Not-a-Number. Actual: ",
                    "raw": "'#3: function(){return 1} % function(){return 1} === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 840,
                    "end": 885,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 841,
                      "end": 884,
                      "left": {
                        "type": "FunctionExpression",
                        "start": 841,
                        "end": 861,
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 851,
                          "end": 861,
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "start": 852,
                              "end": 860,
                              "argument": {
                                "type": "Literal",
                                "start": 859,
                                "end": 860,
                                "value": 1,
                                "raw": "1"
                              }
                            }
                          ]
                        },
                        "expression": false
                      },
                      "operator": "%",
                      "right": {
                        "type": "FunctionExpression",
                        "start": 864,
                        "end": 884,
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 874,
                          "end": 884,
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "start": 875,
                              "end": 883,
                              "argument": {
                                "type": "Literal",
                                "start": 882,
                                "end": 883,
                                "value": 1,
                                "raw": "1"
                              }
                            }
                          ]
                        },
                        "expression": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 901,
      "end": 1013,
      "test": {
        "type": "BinaryExpression",
        "start": 905,
        "end": 928,
        "left": {
          "type": "CallExpression",
          "start": 905,
          "end": 919,
          "callee": {
            "type": "Identifier",
            "start": 905,
            "end": 910,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 911,
              "end": 918,
              "left": {
                "type": "ObjectExpression",
                "start": 911,
                "end": 913,
                "properties": []
              },
              "operator": "%",
              "right": {
                "type": "ObjectExpression",
                "start": 916,
                "end": 918,
                "properties": []
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 924,
          "end": 928,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 930,
        "end": 1013,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 934,
            "end": 1011,
            "argument": {
              "type": "NewExpression",
              "start": 940,
              "end": 1010,
              "callee": {
                "type": "Identifier",
                "start": 944,
                "end": 956,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 957,
                  "end": 1009,
                  "left": {
                    "type": "Literal",
                    "start": 957,
                    "end": 997,
                    "value": "#4: {} % {} === Not-a-Number. Actual: ",
                    "raw": "'#4: {} % {} === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1000,
                    "end": 1009,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1001,
                      "end": 1008,
                      "left": {
                        "type": "ObjectExpression",
                        "start": 1001,
                        "end": 1003,
                        "properties": []
                      },
                      "operator": "%",
                      "right": {
                        "type": "ObjectExpression",
                        "start": 1006,
                        "end": 1008,
                        "properties": []
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}