{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 364,
            "end": 369
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 370,
                  "end": 376
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 377,
                  "end": 380
                },
                "optional": false,
                "computed": false,
                "start": 370,
                "end": 380
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 383,
                  "end": 389
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 390,
                  "end": 393
                },
                "optional": false,
                "computed": false,
                "start": 383,
                "end": 393
              },
              "start": 370,
              "end": 393
            }
          ],
          "optional": false,
          "start": 364,
          "end": 394
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 399,
          "end": 403
        },
        "start": 364,
        "end": 403
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 419,
                "end": 431
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: NaN % NaN === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN % NaN === Not-a-Number. Actual: '",
                    "start": 432,
                    "end": 474
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 478,
                        "end": 481
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 484,
                        "end": 487
                      },
                      "start": 478,
                      "end": 487
                    },
                    "start": 477,
                    "end": 488
                  },
                  "start": 432,
                  "end": 488
                }
              ],
              "start": 415,
              "end": 489
            },
            "start": 409,
            "end": 490
          }
        ],
        "start": 405,
        "end": 492
      },
      "alternate": null,
      "start": 360,
      "end": 492
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 510,
            "end": 515
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 516,
                  "end": 522
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 523,
                  "end": 526
                },
                "optional": false,
                "computed": false,
                "start": 516,
                "end": 526
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "operator": "+",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 530,
                  "end": 531
                },
                "prefix": true,
                "start": 529,
                "end": 531
              },
              "start": 516,
              "end": 531
            }
          ],
          "optional": false,
          "start": 510,
          "end": 532
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 537,
          "end": 541
        },
        "start": 510,
        "end": 541
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 557,
                "end": 569
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: NaN % +0 === Not-a-Number. Actual: ",
                    "raw": "'#2: NaN % +0 === Not-a-Number. Actual: '",
                    "start": 570,
                    "end": 611
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 615,
                        "end": 618
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "+",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 622,
                          "end": 623
                        },
                        "prefix": true,
                        "start": 621,
                        "end": 623
                      },
                      "start": 615,
                      "end": 623
                    },
                    "start": 614,
                    "end": 624
                  },
                  "start": 570,
                  "end": 624
                }
              ],
              "start": 553,
              "end": 625
            },
            "start": 547,
            "end": 626
          }
        ],
        "start": 543,
        "end": 629
      },
      "alternate": null,
      "start": 506,
      "end": 629
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 646,
            "end": 651
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 652,
                  "end": 658
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 659,
                  "end": 662
                },
                "optional": false,
                "computed": false,
                "start": 652,
                "end": 662
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 666,
                  "end": 667
                },
                "prefix": true,
                "start": 665,
                "end": 667
              },
              "start": 652,
              "end": 667
            }
          ],
          "optional": false,
          "start": 646,
          "end": 668
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 673,
          "end": 677
        },
        "start": 646,
        "end": 677
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 693,
                "end": 705
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: NaN % -0 === Not-a-Number. Actual: ",
                    "raw": "'#3: NaN % -0 === Not-a-Number. Actual: '",
                    "start": 706,
                    "end": 747
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 751,
                        "end": 754
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 758,
                          "end": 759
                        },
                        "prefix": true,
                        "start": 757,
                        "end": 759
                      },
                      "start": 751,
                      "end": 759
                    },
                    "start": 750,
                    "end": 760
                  },
                  "start": 706,
                  "end": 760
                }
              ],
              "start": 689,
              "end": 761
            },
            "start": 683,
            "end": 762
          }
        ],
        "start": 679,
        "end": 765
      },
      "alternate": null,
      "start": 642,
      "end": 765
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 782,
            "end": 787
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 788,
                  "end": 794
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 795,
                  "end": 798
                },
                "optional": false,
                "computed": false,
                "start": 788,
                "end": 798
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 801,
                  "end": 807
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 808,
                  "end": 825
                },
                "optional": false,
                "computed": false,
                "start": 801,
                "end": 825
              },
              "start": 788,
              "end": 825
            }
          ],
          "optional": false,
          "start": 782,
          "end": 826
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 831,
          "end": 835
        },
        "start": 782,
        "end": 835
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 851,
                "end": 863
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: NaN % Infinity === Not-a-Number. Actual: ",
                    "raw": "'#4: NaN % Infinity === Not-a-Number. Actual: '",
                    "start": 864,
                    "end": 911
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 915,
                        "end": 918
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 921,
                        "end": 929
                      },
                      "start": 915,
                      "end": 929
                    },
                    "start": 914,
                    "end": 930
                  },
                  "start": 864,
                  "end": 930
                }
              ],
              "start": 847,
              "end": 931
            },
            "start": 841,
            "end": 932
          }
        ],
        "start": 837,
        "end": 934
      },
      "alternate": null,
      "start": 778,
      "end": 934
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 951,
            "end": 956
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 957,
                  "end": 963
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 964,
                  "end": 967
                },
                "optional": false,
                "computed": false,
                "start": 957,
                "end": 967
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 970,
                  "end": 976
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 977,
                  "end": 994
                },
                "optional": false,
                "computed": false,
                "start": 970,
                "end": 994
              },
              "start": 957,
              "end": 994
            }
          ],
          "optional": false,
          "start": 951,
          "end": 995
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1000,
          "end": 1004
        },
        "start": 951,
        "end": 1004
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1020,
                "end": 1032
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: NaN % -Infinity === Not-a-Number. Actual: ",
                    "raw": "'#5: NaN % -Infinity === Not-a-Number. Actual: '",
                    "start": 1033,
                    "end": 1081
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1085,
                        "end": 1088
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Identifier",
                          "name": "Infinity",
                          "start": 1092,
                          "end": 1100
                        },
                        "prefix": true,
                        "start": 1091,
                        "end": 1100
                      },
                      "start": 1085,
                      "end": 1100
                    },
                    "start": 1084,
                    "end": 1101
                  },
                  "start": 1033,
                  "end": 1101
                }
              ],
              "start": 1016,
              "end": 1102
            },
            "start": 1010,
            "end": 1103
          }
        ],
        "start": 1006,
        "end": 1106
      },
      "alternate": null,
      "start": 947,
      "end": 1106
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1123,
            "end": 1128
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1129,
                  "end": 1135
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1136,
                  "end": 1139
                },
                "optional": false,
                "computed": false,
                "start": 1129,
                "end": 1139
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1142,
                  "end": 1148
                },
                "property": {
                  "type": "Identifier",
                  "name": "MAX_VALUE",
                  "start": 1149,
                  "end": 1158
                },
                "optional": false,
                "computed": false,
                "start": 1142,
                "end": 1158
              },
              "start": 1129,
              "end": 1158
            }
          ],
          "optional": false,
          "start": 1123,
          "end": 1159
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1164,
          "end": 1168
        },
        "start": 1123,
        "end": 1168
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1184,
                "end": 1196
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: NaN % Number.MAX_VALUE === Not-a-Number. Actual: ",
                    "raw": "'#6: NaN % Number.MAX_VALUE === Not-a-Number. Actual: '",
                    "start": 1197,
                    "end": 1252
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1256,
                        "end": 1259
                      },
                      "operator": "%",
                      "right": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1262,
                          "end": 1268
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MAX_VALUE",
                          "start": 1269,
                          "end": 1278
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1262,
                        "end": 1278
                      },
                      "start": 1256,
                      "end": 1278
                    },
                    "start": 1255,
                    "end": 1279
                  },
                  "start": 1197,
                  "end": 1279
                }
              ],
              "start": 1180,
              "end": 1280
            },
            "start": 1174,
            "end": 1281
          }
        ],
        "start": 1170,
        "end": 1283
      },
      "alternate": null,
      "start": 1119,
      "end": 1283
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1300,
            "end": 1305
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1306,
                  "end": 1312
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1313,
                  "end": 1316
                },
                "optional": false,
                "computed": false,
                "start": 1306,
                "end": 1316
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1319,
                  "end": 1325
                },
                "property": {
                  "type": "Identifier",
                  "name": "MIN_VALUE",
                  "start": 1326,
                  "end": 1335
                },
                "optional": false,
                "computed": false,
                "start": 1319,
                "end": 1335
              },
              "start": 1306,
              "end": 1335
            }
          ],
          "optional": false,
          "start": 1300,
          "end": 1336
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1341,
          "end": 1345
        },
        "start": 1300,
        "end": 1345
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1361,
                "end": 1373
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: NaN % Number.MIN_VALUE === Not-a-Number. Actual: ",
                    "raw": "'#7: NaN % Number.MIN_VALUE === Not-a-Number. Actual: '",
                    "start": 1374,
                    "end": 1429
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1433,
                        "end": 1436
                      },
                      "operator": "%",
                      "right": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1439,
                          "end": 1445
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MIN_VALUE",
                          "start": 1446,
                          "end": 1455
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1439,
                        "end": 1455
                      },
                      "start": 1433,
                      "end": 1455
                    },
                    "start": 1432,
                    "end": 1456
                  },
                  "start": 1374,
                  "end": 1456
                }
              ],
              "start": 1357,
              "end": 1457
            },
            "start": 1351,
            "end": 1458
          }
        ],
        "start": 1347,
        "end": 1461
      },
      "alternate": null,
      "start": 1296,
      "end": 1461
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1477,
            "end": 1482
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1483,
                  "end": 1489
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1490,
                  "end": 1493
                },
                "optional": false,
                "computed": false,
                "start": 1483,
                "end": 1493
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1496,
                "end": 1497
              },
              "start": 1483,
              "end": 1497
            }
          ],
          "optional": false,
          "start": 1477,
          "end": 1498
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1503,
          "end": 1507
        },
        "start": 1477,
        "end": 1507
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1523,
                "end": 1535
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: NaN % 1 === Not-a-Number. Actual: ",
                    "raw": "'#8: NaN % 1 === Not-a-Number. Actual: '",
                    "start": 1536,
                    "end": 1576
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1580,
                        "end": 1583
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1586,
                        "end": 1587
                      },
                      "start": 1580,
                      "end": 1587
                    },
                    "start": 1579,
                    "end": 1588
                  },
                  "start": 1536,
                  "end": 1588
                }
              ],
              "start": 1519,
              "end": 1589
            },
            "start": 1513,
            "end": 1590
          }
        ],
        "start": 1509,
        "end": 1594
      },
      "alternate": null,
      "start": 1473,
      "end": 1594
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1595
}