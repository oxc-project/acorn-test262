{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 327,
            "end": 333
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 334,
            "end": 343
          },
          "optional": false,
          "computed": false,
          "start": 327,
          "end": 343
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 344,
                "end": 350
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "2n",
                  "bigint": "2",
                  "start": 351,
                  "end": 353
                }
              ],
              "optional": false,
              "start": 344,
              "end": 354
            },
            "operator": "%",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 357,
              "end": 359
            },
            "start": 344,
            "end": 359
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 361,
            "end": 363
          },
          {
            "type": "Literal",
            "value": "The result of (Object(2n) % 2n) is 0n",
            "raw": "'The result of (Object(2n) % 2n) is 0n'",
            "start": 365,
            "end": 404
          }
        ],
        "optional": false,
        "start": 327,
        "end": 405
      },
      "start": 327,
      "end": 406
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 407,
            "end": 413
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 414,
            "end": 423
          },
          "optional": false,
          "computed": false,
          "start": 407,
          "end": 423
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 424,
              "end": 426
            },
            "operator": "%",
            "right": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 429,
                "end": 435
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "2n",
                  "bigint": "2",
                  "start": 436,
                  "end": 438
                }
              ],
              "optional": false,
              "start": 429,
              "end": 439
            },
            "start": 424,
            "end": 439
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 441,
            "end": 443
          },
          {
            "type": "Literal",
            "value": "The result of (2n % Object(2n)) is 0n",
            "raw": "'The result of (2n % Object(2n)) is 0n'",
            "start": 445,
            "end": 484
          }
        ],
        "optional": false,
        "start": 407,
        "end": 485
      },
      "start": 407,
      "end": 486
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 488,
            "end": 494
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 495,
            "end": 504
          },
          "optional": false,
          "computed": false,
          "start": 488,
          "end": 504
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 510,
                      "end": 516
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toPrimitive",
                      "start": 517,
                      "end": 528
                    },
                    "optional": false,
                    "computed": false,
                    "start": 510,
                    "end": 528
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 555,
                            "end": 557
                          },
                          "start": 548,
                          "end": 558
                        }
                      ],
                      "start": 542,
                      "end": 562
                    },
                    "expression": false,
                    "start": 531,
                    "end": 562
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "start": 509,
                  "end": 562
                }
              ],
              "start": 505,
              "end": 564
            },
            "operator": "%",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 567,
              "end": 569
            },
            "start": 505,
            "end": 569
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 571,
            "end": 573
          },
          {
            "type": "Literal",
            "value": "The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) % 2n) is 0n",
            "raw": "'The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) % 2n) is 0n'",
            "start": 575,
            "end": 653
          }
        ],
        "optional": false,
        "start": 488,
        "end": 654
      },
      "start": 488,
      "end": 655
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 657,
            "end": 663
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 664,
            "end": 673
          },
          "optional": false,
          "computed": false,
          "start": 657,
          "end": 673
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 674,
              "end": 676
            },
            "operator": "%",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 684,
                      "end": 690
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toPrimitive",
                      "start": 691,
                      "end": 702
                    },
                    "optional": false,
                    "computed": false,
                    "start": 684,
                    "end": 702
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 729,
                            "end": 731
                          },
                          "start": 722,
                          "end": 732
                        }
                      ],
                      "start": 716,
                      "end": 736
                    },
                    "expression": false,
                    "start": 705,
                    "end": 736
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "start": 683,
                  "end": 736
                }
              ],
              "start": 679,
              "end": 738
            },
            "start": 674,
            "end": 738
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 740,
            "end": 742
          },
          {
            "type": "Literal",
            "value": "The result of (2n % {[Symbol.toPrimitive]: function() {return 2n;}}) is 0n",
            "raw": "'The result of (2n % {[Symbol.toPrimitive]: function() {return 2n;}}) is 0n'",
            "start": 744,
            "end": 820
          }
        ],
        "optional": false,
        "start": 657,
        "end": 821
      },
      "start": 657,
      "end": 822
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 824,
            "end": 830
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 831,
            "end": 840
          },
          "optional": false,
          "computed": false,
          "start": 824,
          "end": 840
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "valueOf",
                    "start": 845,
                    "end": 852
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 878,
                            "end": 880
                          },
                          "start": 871,
                          "end": 881
                        }
                      ],
                      "start": 865,
                      "end": 885
                    },
                    "expression": false,
                    "start": 854,
                    "end": 885
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 845,
                  "end": 885
                }
              ],
              "start": 841,
              "end": 887
            },
            "operator": "%",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 890,
              "end": 892
            },
            "start": 841,
            "end": 892
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 894,
            "end": 896
          },
          {
            "type": "Literal",
            "value": "The result of (({valueOf: function() {return 2n;}}) % 2n) is 0n",
            "raw": "'The result of (({valueOf: function() {return 2n;}}) % 2n) is 0n'",
            "start": 898,
            "end": 963
          }
        ],
        "optional": false,
        "start": 824,
        "end": 964
      },
      "start": 824,
      "end": 965
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 967,
            "end": 973
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 974,
            "end": 983
          },
          "optional": false,
          "computed": false,
          "start": 967,
          "end": 983
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 984,
              "end": 986
            },
            "operator": "%",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "valueOf",
                    "start": 993,
                    "end": 1000
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1026,
                            "end": 1028
                          },
                          "start": 1019,
                          "end": 1029
                        }
                      ],
                      "start": 1013,
                      "end": 1033
                    },
                    "expression": false,
                    "start": 1002,
                    "end": 1033
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 993,
                  "end": 1033
                }
              ],
              "start": 989,
              "end": 1035
            },
            "start": 984,
            "end": 1035
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 1037,
            "end": 1039
          },
          {
            "type": "Literal",
            "value": "The result of (2n % {valueOf: function() {return 2n;}}) is 0n",
            "raw": "'The result of (2n % {valueOf: function() {return 2n;}}) is 0n'",
            "start": 1041,
            "end": 1104
          }
        ],
        "optional": false,
        "start": 967,
        "end": 1105
      },
      "start": 967,
      "end": 1106
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1108,
            "end": 1114
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1115,
            "end": 1124
          },
          "optional": false,
          "computed": false,
          "start": 1108,
          "end": 1124
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "toString",
                    "start": 1129,
                    "end": 1137
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1163,
                            "end": 1165
                          },
                          "start": 1156,
                          "end": 1166
                        }
                      ],
                      "start": 1150,
                      "end": 1170
                    },
                    "expression": false,
                    "start": 1139,
                    "end": 1170
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 1129,
                  "end": 1170
                }
              ],
              "start": 1125,
              "end": 1172
            },
            "operator": "%",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 1175,
              "end": 1177
            },
            "start": 1125,
            "end": 1177
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 1179,
            "end": 1181
          },
          {
            "type": "Literal",
            "value": "The result of (({toString: function() {return 2n;}}) % 2n) is 0n",
            "raw": "'The result of (({toString: function() {return 2n;}}) % 2n) is 0n'",
            "start": 1183,
            "end": 1249
          }
        ],
        "optional": false,
        "start": 1108,
        "end": 1250
      },
      "start": 1108,
      "end": 1251
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1253,
            "end": 1259
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1260,
            "end": 1269
          },
          "optional": false,
          "computed": false,
          "start": 1253,
          "end": 1269
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 1270,
              "end": 1272
            },
            "operator": "%",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "toString",
                    "start": 1279,
                    "end": 1287
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1313,
                            "end": 1315
                          },
                          "start": 1306,
                          "end": 1316
                        }
                      ],
                      "start": 1300,
                      "end": 1320
                    },
                    "expression": false,
                    "start": 1289,
                    "end": 1320
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 1279,
                  "end": 1320
                }
              ],
              "start": 1275,
              "end": 1322
            },
            "start": 1270,
            "end": 1322
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 1324,
            "end": 1326
          },
          {
            "type": "Literal",
            "value": "The result of (2n % {toString: function() {return 2n;}}) is 0n",
            "raw": "'The result of (2n % {toString: function() {return 2n;}}) is 0n'",
            "start": 1328,
            "end": 1392
          }
        ],
        "optional": false,
        "start": 1253,
        "end": 1393
      },
      "start": 1253,
      "end": 1394
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1395
}