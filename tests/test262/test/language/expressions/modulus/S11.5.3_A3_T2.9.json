{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 361,
            "end": 366
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 367,
                "end": 371
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 374,
                "end": 378
              },
              "start": 367,
              "end": 378
            }
          ],
          "optional": false,
          "start": 361,
          "end": 379
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 384,
          "end": 388
        },
        "start": 361,
        "end": 388
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 404,
                "end": 416
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: true % null === Not-a-Number. Actual: ",
                    "raw": "'#1: true % null === Not-a-Number. Actual: '",
                    "start": 417,
                    "end": 461
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 465,
                        "end": 469
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 472,
                        "end": 476
                      },
                      "start": 465,
                      "end": 476
                    },
                    "start": 464,
                    "end": 477
                  },
                  "start": 417,
                  "end": 477
                }
              ],
              "start": 400,
              "end": 478
            },
            "start": 394,
            "end": 479
          }
        ],
        "start": 390,
        "end": 481
      },
      "alternate": null,
      "start": 357,
      "end": 481
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 497,
            "end": 501
          },
          "operator": "%",
          "right": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 504,
            "end": 508
          },
          "start": 497,
          "end": 508
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 513,
          "end": 514
        },
        "start": 497,
        "end": 514
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 530,
                "end": 542
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: null % true === 0. Actual: ",
                    "raw": "'#2: null % true === 0. Actual: '",
                    "start": 543,
                    "end": 576
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 580,
                        "end": 584
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 587,
                        "end": 591
                      },
                      "start": 580,
                      "end": 591
                    },
                    "start": 579,
                    "end": 592
                  },
                  "start": 543,
                  "end": 592
                }
              ],
              "start": 526,
              "end": 593
            },
            "start": 520,
            "end": 594
          }
        ],
        "start": 516,
        "end": 596
      },
      "alternate": null,
      "start": 493,
      "end": 596
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 612,
            "end": 617
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Boolean",
                  "start": 622,
                  "end": 629
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 630,
                    "end": 634
                  }
                ],
                "start": 618,
                "end": 635
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 638,
                "end": 642
              },
              "start": 618,
              "end": 642
            }
          ],
          "optional": false,
          "start": 612,
          "end": 643
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 648,
          "end": 652
        },
        "start": 612,
        "end": 652
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 668,
                "end": 680
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new Boolean(true) % null === Not-a-Number. Actual: ",
                    "raw": "'#3: new Boolean(true) % null === Not-a-Number. Actual: '",
                    "start": 681,
                    "end": 738
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 746,
                          "end": 753
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 754,
                            "end": 758
                          }
                        ],
                        "start": 742,
                        "end": 759
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 762,
                        "end": 766
                      },
                      "start": 742,
                      "end": 766
                    },
                    "start": 741,
                    "end": 767
                  },
                  "start": 681,
                  "end": 767
                }
              ],
              "start": 664,
              "end": 768
            },
            "start": 658,
            "end": 769
          }
        ],
        "start": 654,
        "end": 771
      },
      "alternate": null,
      "start": 608,
      "end": 771
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 787,
            "end": 791
          },
          "operator": "%",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 798,
              "end": 805
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 806,
                "end": 810
              }
            ],
            "start": 794,
            "end": 811
          },
          "start": 787,
          "end": 811
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 816,
          "end": 817
        },
        "start": 787,
        "end": 817
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 833,
                "end": 845
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: null % new Boolean(true) === 0. Actual: ",
                    "raw": "'#4: null % new Boolean(true) === 0. Actual: '",
                    "start": 846,
                    "end": 892
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 896,
                        "end": 900
                      },
                      "operator": "%",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 907,
                          "end": 914
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 915,
                            "end": 919
                          }
                        ],
                        "start": 903,
                        "end": 920
                      },
                      "start": 896,
                      "end": 920
                    },
                    "start": 895,
                    "end": 921
                  },
                  "start": 846,
                  "end": 921
                }
              ],
              "start": 829,
              "end": 922
            },
            "start": 823,
            "end": 923
          }
        ],
        "start": 819,
        "end": 925
      },
      "alternate": null,
      "start": 783,
      "end": 925
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 926
}