{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 978,
            "end": 979
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 982,
            "end": 984
          },
          "start": 978,
          "end": 984
        }
      ],
      "start": 974,
      "end": 985
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "retVal",
            "start": 990,
            "end": 996
          },
          "init": null,
          "start": 990,
          "end": 996
        }
      ],
      "start": 986,
      "end": 997
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "y",
            "start": 999,
            "end": 1000
          },
          "property": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Symbol",
              "start": 1001,
              "end": 1007
            },
            "property": {
              "type": "Identifier",
              "name": "toPrimitive",
              "start": 1008,
              "end": 1019
            },
            "optional": false,
            "computed": false,
            "start": 1001,
            "end": 1019
          },
          "optional": false,
          "computed": true,
          "start": 999,
          "end": 1020
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Identifier",
                  "name": "retVal",
                  "start": 1045,
                  "end": 1051
                },
                "start": 1038,
                "end": 1052
              }
            ],
            "start": 1034,
            "end": 1054
          },
          "expression": false,
          "start": 1023,
          "end": 1054
        },
        "start": 999,
        "end": 1054
      },
      "start": 999,
      "end": 1055
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "retVal",
          "start": 1057,
          "end": 1063
        },
        "right": {
          "type": "Literal",
          "value": 86,
          "raw": "86",
          "start": 1066,
          "end": 1068
        },
        "start": 1057,
        "end": 1068
      },
      "start": 1057,
      "end": 1069
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1070,
            "end": 1076
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1077,
            "end": 1086
          },
          "optional": false,
          "computed": false,
          "start": 1070,
          "end": 1086
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1087,
              "end": 1088
            },
            "operator": "==",
            "right": {
              "type": "Identifier",
              "name": "y",
              "start": 1092,
              "end": 1093
            },
            "start": 1087,
            "end": 1093
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 1095,
            "end": 1100
          },
          {
            "type": "Literal",
            "value": "number primitive (not equal)",
            "raw": "'number primitive (not equal)'",
            "start": 1102,
            "end": 1132
          }
        ],
        "optional": false,
        "start": 1070,
        "end": 1133
      },
      "start": 1070,
      "end": 1134
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1135,
            "end": 1141
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1142,
            "end": 1151
          },
          "optional": false,
          "computed": false,
          "start": 1135,
          "end": 1151
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 86,
              "raw": "86",
              "start": 1152,
              "end": 1154
            },
            "operator": "==",
            "right": {
              "type": "Identifier",
              "name": "y",
              "start": 1158,
              "end": 1159
            },
            "start": 1152,
            "end": 1159
          },
          {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 1161,
            "end": 1165
          },
          {
            "type": "Literal",
            "value": "number primitive (equal)",
            "raw": "'number primitive (equal)'",
            "start": 1167,
            "end": 1193
          }
        ],
        "optional": false,
        "start": 1135,
        "end": 1194
      },
      "start": 1135,
      "end": 1195
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "retVal",
          "start": 1197,
          "end": 1203
        },
        "right": {
          "type": "Literal",
          "value": "str",
          "raw": "'str'",
          "start": 1206,
          "end": 1211
        },
        "start": 1197,
        "end": 1211
      },
      "start": 1197,
      "end": 1212
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1213,
            "end": 1219
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1220,
            "end": 1229
          },
          "optional": false,
          "computed": false,
          "start": 1213,
          "end": 1229
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1230,
              "end": 1231
            },
            "operator": "==",
            "right": {
              "type": "Identifier",
              "name": "y",
              "start": 1235,
              "end": 1236
            },
            "start": 1230,
            "end": 1236
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 1238,
            "end": 1243
          },
          {
            "type": "Literal",
            "value": "string primitive (not equal)",
            "raw": "'string primitive (not equal)'",
            "start": 1245,
            "end": 1275
          }
        ],
        "optional": false,
        "start": 1213,
        "end": 1276
      },
      "start": 1213,
      "end": 1277
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1278,
            "end": 1284
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1285,
            "end": 1294
          },
          "optional": false,
          "computed": false,
          "start": 1278,
          "end": 1294
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "str",
              "raw": "'str'",
              "start": 1295,
              "end": 1300
            },
            "operator": "==",
            "right": {
              "type": "Identifier",
              "name": "y",
              "start": 1304,
              "end": 1305
            },
            "start": 1295,
            "end": 1305
          },
          {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 1307,
            "end": 1311
          },
          {
            "type": "Literal",
            "value": "sting primitive (equal)",
            "raw": "'sting primitive (equal)'",
            "start": 1313,
            "end": 1338
          }
        ],
        "optional": false,
        "start": 1278,
        "end": 1339
      },
      "start": 1278,
      "end": 1340
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "retVal",
          "start": 1342,
          "end": 1348
        },
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Symbol",
            "start": 1351,
            "end": 1357
          },
          "property": {
            "type": "Identifier",
            "name": "toPrimitive",
            "start": 1358,
            "end": 1369
          },
          "optional": false,
          "computed": false,
          "start": 1351,
          "end": 1369
        },
        "start": 1342,
        "end": 1369
      },
      "start": 1342,
      "end": 1370
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1371,
            "end": 1377
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1378,
            "end": 1387
          },
          "optional": false,
          "computed": false,
          "start": 1371,
          "end": 1387
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1388,
              "end": 1389
            },
            "operator": "==",
            "right": {
              "type": "Identifier",
              "name": "y",
              "start": 1393,
              "end": 1394
            },
            "start": 1388,
            "end": 1394
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 1396,
            "end": 1401
          },
          {
            "type": "Literal",
            "value": "symbol (not equal)",
            "raw": "'symbol (not equal)'",
            "start": 1403,
            "end": 1423
          }
        ],
        "optional": false,
        "start": 1371,
        "end": 1424
      },
      "start": 1371,
      "end": 1425
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1426,
            "end": 1432
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1433,
            "end": 1442
          },
          "optional": false,
          "computed": false,
          "start": 1426,
          "end": 1442
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Symbol",
                "start": 1443,
                "end": 1449
              },
              "property": {
                "type": "Identifier",
                "name": "toPrimitive",
                "start": 1450,
                "end": 1461
              },
              "optional": false,
              "computed": false,
              "start": 1443,
              "end": 1461
            },
            "operator": "==",
            "right": {
              "type": "Identifier",
              "name": "y",
              "start": 1465,
              "end": 1466
            },
            "start": 1443,
            "end": 1466
          },
          {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 1468,
            "end": 1472
          },
          {
            "type": "Literal",
            "value": "symbol (equal)",
            "raw": "'symbol (equal)'",
            "start": 1474,
            "end": 1490
          }
        ],
        "optional": false,
        "start": 1426,
        "end": 1491
      },
      "start": 1426,
      "end": 1492
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1493
}