{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 242,
                "end": 248
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 249,
                "end": 252
              },
              "optional": false,
              "computed": false,
              "start": 242,
              "end": 252
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 256,
              "end": 260
            },
            "start": 242,
            "end": 260
          },
          "start": 241,
          "end": 261
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 266,
          "end": 271
        },
        "start": 241,
        "end": 271
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 287,
                "end": 299
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: (NaN == true) === false",
                  "raw": "'#1: (NaN == true) === false'",
                  "start": 300,
                  "end": 329
                }
              ],
              "start": 283,
              "end": 330
            },
            "start": 277,
            "end": 331
          }
        ],
        "start": 273,
        "end": 333
      },
      "alternate": null,
      "start": 237,
      "end": 333
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 350,
                "end": 356
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 357,
                "end": 360
              },
              "optional": false,
              "computed": false,
              "start": 350,
              "end": 360
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 364,
              "end": 365
            },
            "start": 350,
            "end": 365
          },
          "start": 349,
          "end": 366
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 371,
          "end": 376
        },
        "start": 349,
        "end": 376
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 392,
                "end": 404
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: (NaN == 1) === false",
                  "raw": "'#2: (NaN == 1) === false'",
                  "start": 405,
                  "end": 431
                }
              ],
              "start": 388,
              "end": 432
            },
            "start": 382,
            "end": 433
          }
        ],
        "start": 378,
        "end": 435
      },
      "alternate": null,
      "start": 345,
      "end": 435
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 452,
                "end": 458
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 459,
                "end": 462
              },
              "optional": false,
              "computed": false,
              "start": 452,
              "end": 462
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 466,
                "end": 472
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 473,
                "end": 476
              },
              "optional": false,
              "computed": false,
              "start": 466,
              "end": 476
            },
            "start": 452,
            "end": 476
          },
          "start": 451,
          "end": 477
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 482,
          "end": 487
        },
        "start": 451,
        "end": 487
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 503,
                "end": 515
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: (NaN == NaN) === false",
                  "raw": "'#3: (NaN == NaN) === false'",
                  "start": 516,
                  "end": 544
                }
              ],
              "start": 499,
              "end": 545
            },
            "start": 493,
            "end": 546
          }
        ],
        "start": 489,
        "end": 548
      },
      "alternate": null,
      "start": 447,
      "end": 548
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 565,
                "end": 571
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 572,
                "end": 575
              },
              "optional": false,
              "computed": false,
              "start": 565,
              "end": 575
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 579,
                "end": 585
              },
              "property": {
                "type": "Identifier",
                "name": "POSITIVE_INFINITY",
                "start": 586,
                "end": 603
              },
              "optional": false,
              "computed": false,
              "start": 579,
              "end": 603
            },
            "start": 565,
            "end": 603
          },
          "start": 564,
          "end": 604
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 609,
          "end": 614
        },
        "start": 564,
        "end": 614
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 630,
                "end": 642
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4: (NaN == +Infinity) === false",
                  "raw": "'#4: (NaN == +Infinity) === false'",
                  "start": 643,
                  "end": 677
                }
              ],
              "start": 626,
              "end": 678
            },
            "start": 620,
            "end": 679
          }
        ],
        "start": 616,
        "end": 681
      },
      "alternate": null,
      "start": 560,
      "end": 681
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 698,
                "end": 704
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 705,
                "end": 708
              },
              "optional": false,
              "computed": false,
              "start": 698,
              "end": 708
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 712,
                "end": 718
              },
              "property": {
                "type": "Identifier",
                "name": "NEGATIVE_INFINITY",
                "start": 719,
                "end": 736
              },
              "optional": false,
              "computed": false,
              "start": 712,
              "end": 736
            },
            "start": 698,
            "end": 736
          },
          "start": 697,
          "end": 737
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 742,
          "end": 747
        },
        "start": 697,
        "end": 747
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 763,
                "end": 775
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#5: (NaN == -Infinity) === false",
                  "raw": "'#5: (NaN == -Infinity) === false'",
                  "start": 776,
                  "end": 810
                }
              ],
              "start": 759,
              "end": 811
            },
            "start": 753,
            "end": 812
          }
        ],
        "start": 749,
        "end": 814
      },
      "alternate": null,
      "start": 693,
      "end": 814
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 831,
                "end": 837
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 838,
                "end": 841
              },
              "optional": false,
              "computed": false,
              "start": 831,
              "end": 841
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 845,
                "end": 851
              },
              "property": {
                "type": "Identifier",
                "name": "MAX_VALUE",
                "start": 852,
                "end": 861
              },
              "optional": false,
              "computed": false,
              "start": 845,
              "end": 861
            },
            "start": 831,
            "end": 861
          },
          "start": 830,
          "end": 862
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 867,
          "end": 872
        },
        "start": 830,
        "end": 872
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 888,
                "end": 900
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#6: (NaN == Number.MAX_VALUE) === false",
                  "raw": "'#6: (NaN == Number.MAX_VALUE) === false'",
                  "start": 901,
                  "end": 942
                }
              ],
              "start": 884,
              "end": 943
            },
            "start": 878,
            "end": 944
          }
        ],
        "start": 874,
        "end": 946
      },
      "alternate": null,
      "start": 826,
      "end": 946
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 963,
                "end": 969
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 970,
                "end": 973
              },
              "optional": false,
              "computed": false,
              "start": 963,
              "end": 973
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 977,
                "end": 983
              },
              "property": {
                "type": "Identifier",
                "name": "MIN_VALUE",
                "start": 984,
                "end": 993
              },
              "optional": false,
              "computed": false,
              "start": 977,
              "end": 993
            },
            "start": 963,
            "end": 993
          },
          "start": 962,
          "end": 994
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 999,
          "end": 1004
        },
        "start": 962,
        "end": 1004
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1020,
                "end": 1032
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#7: (NaN == Number.MIN_VALUE) === false",
                  "raw": "'#7: (NaN == Number.MIN_VALUE) === false'",
                  "start": 1033,
                  "end": 1074
                }
              ],
              "start": 1016,
              "end": 1075
            },
            "start": 1010,
            "end": 1076
          }
        ],
        "start": 1006,
        "end": 1078
      },
      "alternate": null,
      "start": 958,
      "end": 1078
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1095,
                "end": 1101
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 1102,
                "end": 1105
              },
              "optional": false,
              "computed": false,
              "start": 1095,
              "end": 1105
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "value": "string",
              "raw": "\"string\"",
              "start": 1109,
              "end": 1117
            },
            "start": 1095,
            "end": 1117
          },
          "start": 1094,
          "end": 1118
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 1123,
          "end": 1128
        },
        "start": 1094,
        "end": 1128
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1144,
                "end": 1156
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#8: (NaN == \"string\") === false",
                  "raw": "'#8: (NaN == \"string\") === false'",
                  "start": 1157,
                  "end": 1190
                }
              ],
              "start": 1140,
              "end": 1191
            },
            "start": 1134,
            "end": 1192
          }
        ],
        "start": 1130,
        "end": 1194
      },
      "alternate": null,
      "start": 1090,
      "end": 1194
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1211,
                "end": 1217
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 1218,
                "end": 1221
              },
              "optional": false,
              "computed": false,
              "start": 1211,
              "end": 1221
            },
            "operator": "==",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 1229,
                "end": 1235
              },
              "arguments": [],
              "start": 1225,
              "end": 1237
            },
            "start": 1211,
            "end": 1237
          },
          "start": 1210,
          "end": 1238
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 1243,
          "end": 1248
        },
        "start": 1210,
        "end": 1248
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1264,
                "end": 1276
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#9: (NaN == new Object()) === false",
                  "raw": "'#9: (NaN == new Object()) === false'",
                  "start": 1277,
                  "end": 1314
                }
              ],
              "start": 1260,
              "end": 1315
            },
            "start": 1254,
            "end": 1316
          }
        ],
        "start": 1250,
        "end": 1318
      },
      "alternate": null,
      "start": 1206,
      "end": 1318
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1319
}