{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 287,
            "end": 288
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "x",
                    "raw": "\"x\"",
                    "start": 311,
                    "end": 314
                  },
                  "start": 305,
                  "end": 315
                }
              ],
              "start": 303,
              "end": 317
            },
            "expression": false,
            "start": 291,
            "end": 317
          },
          "start": 287,
          "end": 317
        }
      ],
      "start": 283,
      "end": 318
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 323,
            "end": 324
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "y",
                    "raw": "\"y\"",
                    "start": 347,
                    "end": 350
                  },
                  "start": 341,
                  "end": 351
                }
              ],
              "start": 339,
              "end": 353
            },
            "expression": false,
            "start": 327,
            "end": 353
          },
          "start": 323,
          "end": 353
        }
      ],
      "start": 319,
      "end": 354
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "BinaryExpression",
              "left": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 364,
                  "end": 365
                },
                "arguments": [],
                "optional": false,
                "start": 364,
                "end": 367
              },
              "operator": "==",
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "y",
                  "start": 371,
                  "end": 372
                },
                "arguments": [],
                "optional": false,
                "start": 371,
                "end": 374
              },
              "start": 364,
              "end": 374
            },
            "start": 364,
            "end": 375
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 389,
                "end": 401
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1.1: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() == y() throw \"x\". Actual: ",
                    "raw": "'#1.1: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() == y() throw \"x\". Actual: '",
                    "start": 402,
                    "end": 512
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "x",
                          "start": 516,
                          "end": 517
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 516,
                        "end": 519
                      },
                      "operator": "==",
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "y",
                          "start": 523,
                          "end": 524
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 523,
                        "end": 526
                      },
                      "start": 516,
                      "end": 526
                    },
                    "start": 515,
                    "end": 527
                  },
                  "start": 402,
                  "end": 527
                }
              ],
              "start": 385,
              "end": 528
            },
            "start": 379,
            "end": 529
          }
        ],
        "start": 359,
        "end": 531
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 539,
          "end": 540
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 551,
                  "end": 552
                },
                "operator": "===",
                "right": {
                  "type": "Literal",
                  "value": "y",
                  "raw": "\"y\"",
                  "start": 557,
                  "end": 560
                },
                "start": 551,
                "end": 560
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 579,
                        "end": 591
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#1.2: First expression is evaluated first, and then second expression",
                          "raw": "'#1.2: First expression is evaluated first, and then second expression'",
                          "start": 592,
                          "end": 663
                        }
                      ],
                      "start": 575,
                      "end": 664
                    },
                    "start": 569,
                    "end": 665
                  }
                ],
                "start": 562,
                "end": 670
              },
              "alternate": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 687,
                        "end": 688
                      },
                      "operator": "!==",
                      "right": {
                        "type": "Literal",
                        "value": "x",
                        "raw": "\"x\"",
                        "start": 693,
                        "end": 696
                      },
                      "start": 687,
                      "end": 696
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ThrowStatement",
                          "argument": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Test262Error",
                              "start": 717,
                              "end": 729
                            },
                            "arguments": [
                              {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Literal",
                                  "value": "#1.3: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() == y() throw \"x\". Actual: ",
                                  "raw": "'#1.3: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() == y() throw \"x\". Actual: '",
                                  "start": 730,
                                  "end": 840
                                },
                                "operator": "+",
                                "right": {
                                  "type": "ParenthesizedExpression",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "e",
                                    "start": 844,
                                    "end": 845
                                  },
                                  "start": 843,
                                  "end": 846
                                },
                                "start": 730,
                                "end": 846
                              }
                            ],
                            "start": 713,
                            "end": 847
                          },
                          "start": 707,
                          "end": 848
                        }
                      ],
                      "start": 698,
                      "end": 855
                    },
                    "alternate": null,
                    "start": 683,
                    "end": 855
                  }
                ],
                "start": 676,
                "end": 860
              },
              "start": 547,
              "end": 860
            }
          ],
          "start": 542,
          "end": 862
        },
        "start": 532,
        "end": 862
      },
      "finalizer": null,
      "start": 355,
      "end": 862
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 863
}