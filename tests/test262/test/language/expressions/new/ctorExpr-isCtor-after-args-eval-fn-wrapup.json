{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "ref",
            "start": 924,
            "end": 927
          },
          "init": null,
          "start": 924,
          "end": 927
        }
      ],
      "start": 920,
      "end": 928
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "argz",
            "start": 933,
            "end": 937
          },
          "init": null,
          "start": 933,
          "end": 937
        }
      ],
      "start": 929,
      "end": 938
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 940,
            "end": 946
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 947,
            "end": 953
          },
          "optional": false,
          "computed": false,
          "start": 940,
          "end": 953
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 954,
            "end": 963
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 984,
                        "end": 985
                      },
                      "init": {
                        "type": "Literal",
                        "value": 42,
                        "raw": "42",
                        "start": 988,
                        "end": 990
                      },
                      "start": 984,
                      "end": 990
                    }
                  ],
                  "start": 980,
                  "end": 991
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "ref",
                      "start": 994,
                      "end": 997
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1000,
                      "end": 1001
                    },
                    "start": 994,
                    "end": 1001
                  },
                  "start": 994,
                  "end": 1002
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1009,
                      "end": 1010
                    },
                    "arguments": [
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "x",
                          "start": 1011,
                          "end": 1012
                        },
                        "right": {
                          "type": "FunctionExpression",
                          "id": null,
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [],
                            "start": 1026,
                            "end": 1028
                          },
                          "expression": false,
                          "start": 1015,
                          "end": 1028
                        },
                        "start": 1011,
                        "end": 1028
                      },
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "argz",
                          "start": 1030,
                          "end": 1034
                        },
                        "right": {
                          "type": "Literal",
                          "value": 39,
                          "raw": "39",
                          "start": 1037,
                          "end": 1039
                        },
                        "start": 1030,
                        "end": 1039
                      }
                    ],
                    "start": 1005,
                    "end": 1040
                  },
                  "start": 1005,
                  "end": 1041
                }
              ],
              "start": 976,
              "end": 1043
            },
            "expression": false,
            "start": 965,
            "end": 1043
          }
        ],
        "optional": false,
        "start": 940,
        "end": 1044
      },
      "start": 940,
      "end": 1045
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1047,
            "end": 1053
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1054,
            "end": 1063
          },
          "optional": false,
          "computed": false,
          "start": 1047,
          "end": 1063
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "ref",
            "start": 1064,
            "end": 1067
          },
          {
            "type": "Literal",
            "value": 42,
            "raw": "42",
            "start": 1069,
            "end": 1071
          }
        ],
        "optional": false,
        "start": 1047,
        "end": 1072
      },
      "start": 1047,
      "end": 1073
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1074,
            "end": 1080
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1081,
            "end": 1090
          },
          "optional": false,
          "computed": false,
          "start": 1074,
          "end": 1090
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "argz",
            "start": 1091,
            "end": 1095
          },
          {
            "type": "Literal",
            "value": 39,
            "raw": "39",
            "start": 1097,
            "end": 1099
          },
          {
            "type": "Literal",
            "value": "arguments evaluated before checking valid ctor",
            "raw": "'arguments evaluated before checking valid ctor'",
            "start": 1101,
            "end": 1149
          }
        ],
        "optional": false,
        "start": 1074,
        "end": 1150
      },
      "start": 1074,
      "end": 1151
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1152
}