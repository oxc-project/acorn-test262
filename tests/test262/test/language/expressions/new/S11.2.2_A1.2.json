{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 310,
            "end": 314
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "new\tNumber()",
              "raw": "\"new\\u0009Number()\"",
              "start": 315,
              "end": 334
            }
          ],
          "optional": false,
          "start": 310,
          "end": 335
        },
        "operator": "!=",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 339,
          "end": 340
        },
        "start": 310,
        "end": 340
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 356,
                "end": 368
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: new\\u0009Number == 0",
                  "raw": "'#1: new\\\\u0009Number == 0'",
                  "start": 369,
                  "end": 396
                }
              ],
              "start": 352,
              "end": 397
            },
            "start": 346,
            "end": 398
          }
        ],
        "start": 342,
        "end": 400
      },
      "alternate": null,
      "start": 306,
      "end": 400
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 416,
            "end": 420
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "new\u000bNumber()",
              "raw": "\"new\\u000BNumber()\"",
              "start": 421,
              "end": 440
            }
          ],
          "optional": false,
          "start": 416,
          "end": 441
        },
        "operator": "!=",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 445,
          "end": 446
        },
        "start": 416,
        "end": 446
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 462,
                "end": 474
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: new\\u000BNumber == 0",
                  "raw": "'#2: new\\\\u000BNumber == 0'",
                  "start": 475,
                  "end": 502
                }
              ],
              "start": 458,
              "end": 503
            },
            "start": 452,
            "end": 504
          }
        ],
        "start": 448,
        "end": 508
      },
      "alternate": null,
      "start": 412,
      "end": 508
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 524,
            "end": 528
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "new\fNumber()",
              "raw": "\"new\\u000CNumber()\"",
              "start": 529,
              "end": 548
            }
          ],
          "optional": false,
          "start": 524,
          "end": 549
        },
        "operator": "!=",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 553,
          "end": 554
        },
        "start": 524,
        "end": 554
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 570,
                "end": 582
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: new\\u000CNumber == 0",
                  "raw": "'#3: new\\\\u000CNumber == 0'",
                  "start": 583,
                  "end": 610
                }
              ],
              "start": 566,
              "end": 611
            },
            "start": 560,
            "end": 612
          }
        ],
        "start": 556,
        "end": 614
      },
      "alternate": null,
      "start": 520,
      "end": 614
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 630,
            "end": 634
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "new Number()",
              "raw": "\"new\\u0020Number()\"",
              "start": 635,
              "end": 654
            }
          ],
          "optional": false,
          "start": 630,
          "end": 655
        },
        "operator": "!=",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 659,
          "end": 660
        },
        "start": 630,
        "end": 660
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 676,
                "end": 688
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4: new\\u0020Number == 0",
                  "raw": "'#4: new\\\\u0020Number == 0'",
                  "start": 689,
                  "end": 716
                }
              ],
              "start": 672,
              "end": 717
            },
            "start": 666,
            "end": 718
          }
        ],
        "start": 662,
        "end": 720
      },
      "alternate": null,
      "start": 626,
      "end": 720
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 736,
            "end": 740
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "newÂ Number()",
              "raw": "\"new\\u00A0Number()\"",
              "start": 741,
              "end": 760
            }
          ],
          "optional": false,
          "start": 736,
          "end": 761
        },
        "operator": "!=",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 765,
          "end": 766
        },
        "start": 736,
        "end": 766
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 782,
                "end": 794
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#5: new\\u00A0Number == 0",
                  "raw": "'#5: new\\\\u00A0Number == 0'",
                  "start": 795,
                  "end": 822
                }
              ],
              "start": 778,
              "end": 823
            },
            "start": 772,
            "end": 824
          }
        ],
        "start": 768,
        "end": 826
      },
      "alternate": null,
      "start": 732,
      "end": 826
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 842,
            "end": 846
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "new\nNumber()",
              "raw": "\"new\\u000ANumber()\"",
              "start": 847,
              "end": 866
            }
          ],
          "optional": false,
          "start": 842,
          "end": 867
        },
        "operator": "!=",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 871,
          "end": 872
        },
        "start": 842,
        "end": 872
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 888,
                "end": 900
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#6: new\\u000ANumber == 0",
                  "raw": "'#6: new\\\\u000ANumber == 0'",
                  "start": 901,
                  "end": 928
                }
              ],
              "start": 884,
              "end": 929
            },
            "start": 878,
            "end": 930
          }
        ],
        "start": 874,
        "end": 934
      },
      "alternate": null,
      "start": 838,
      "end": 934
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 950,
            "end": 954
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "new\rNumber()",
              "raw": "\"new\\u000DNumber()\"",
              "start": 955,
              "end": 974
            }
          ],
          "optional": false,
          "start": 950,
          "end": 975
        },
        "operator": "!=",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 979,
          "end": 980
        },
        "start": 950,
        "end": 980
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 996,
                "end": 1008
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#7: new\\u000DNumber == 0",
                  "raw": "'#7: new\\\\u000DNumber == 0'",
                  "start": 1009,
                  "end": 1036
                }
              ],
              "start": 992,
              "end": 1037
            },
            "start": 986,
            "end": 1038
          }
        ],
        "start": 982,
        "end": 1040
      },
      "alternate": null,
      "start": 946,
      "end": 1040
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 1056,
            "end": 1060
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "newâ¨Number()",
              "raw": "\"new\\u2028Number()\"",
              "start": 1061,
              "end": 1080
            }
          ],
          "optional": false,
          "start": 1056,
          "end": 1081
        },
        "operator": "!=",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1085,
          "end": 1086
        },
        "start": 1056,
        "end": 1086
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1102,
                "end": 1114
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#8: new\\u2028Number == 0",
                  "raw": "'#8: new\\\\u2028Number == 0'",
                  "start": 1115,
                  "end": 1142
                }
              ],
              "start": 1098,
              "end": 1143
            },
            "start": 1092,
            "end": 1144
          }
        ],
        "start": 1088,
        "end": 1146
      },
      "alternate": null,
      "start": 1052,
      "end": 1146
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 1162,
            "end": 1166
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "newâ©Number()",
              "raw": "\"new\\u2029Number()\"",
              "start": 1167,
              "end": 1186
            }
          ],
          "optional": false,
          "start": 1162,
          "end": 1187
        },
        "operator": "!=",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1191,
          "end": 1192
        },
        "start": 1162,
        "end": 1192
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1208,
                "end": 1220
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#9: new\\u2029Number == 0",
                  "raw": "'#9: new\\\\u2029Number == 0'",
                  "start": 1221,
                  "end": 1248
                }
              ],
              "start": 1204,
              "end": 1249
            },
            "start": 1198,
            "end": 1250
          }
        ],
        "start": 1194,
        "end": 1252
      },
      "alternate": null,
      "start": 1158,
      "end": 1252
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 1269,
            "end": 1273
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "new\t\u000b\f Â \n\râ¨â©Number()",
              "raw": "\"new\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029Number()\"",
              "start": 1274,
              "end": 1341
            }
          ],
          "optional": false,
          "start": 1269,
          "end": 1342
        },
        "operator": "!=",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1346,
          "end": 1347
        },
        "start": 1269,
        "end": 1347
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1363,
                "end": 1375
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#10: new\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029Number == 0",
                  "raw": "'#10: new\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029Number == 0'",
                  "start": 1376,
                  "end": 1460
                }
              ],
              "start": 1359,
              "end": 1461
            },
            "start": 1353,
            "end": 1462
          }
        ],
        "start": 1349,
        "end": 1464
      },
      "alternate": null,
      "start": 1265,
      "end": 1464
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1465
}