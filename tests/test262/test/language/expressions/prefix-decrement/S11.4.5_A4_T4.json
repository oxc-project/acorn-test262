{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 265,
            "end": 266
          },
          "init": null,
          "start": 265,
          "end": 266
        }
      ],
      "start": 261,
      "end": 267
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 272,
            "end": 277
          },
          "arguments": [
            {
              "type": "UpdateExpression",
              "operator": "--",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "name": "x",
                "start": 280,
                "end": 281
              },
              "start": 278,
              "end": 281
            }
          ],
          "optional": false,
          "start": 272,
          "end": 282
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 287,
          "end": 291
        },
        "start": 272,
        "end": 291
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 307,
                "end": 319
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x; --x; x === Not-a-Number. Actual: ",
                    "raw": "'#1: var x; --x; x === Not-a-Number. Actual: '",
                    "start": 320,
                    "end": 366
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 370,
                      "end": 371
                    },
                    "start": 369,
                    "end": 372
                  },
                  "start": 320,
                  "end": 372
                }
              ],
              "start": 303,
              "end": 373
            },
            "start": 297,
            "end": 374
          }
        ],
        "start": 293,
        "end": 376
      },
      "alternate": null,
      "start": 268,
      "end": 376
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 392,
            "end": 393
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 396,
            "end": 400
          },
          "start": 392,
          "end": 400
        }
      ],
      "start": 388,
      "end": 401
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UpdateExpression",
          "operator": "--",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "name": "x",
            "start": 408,
            "end": 409
          },
          "start": 406,
          "end": 409
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 415,
            "end": 416
          },
          "prefix": true,
          "start": 414,
          "end": 416
        },
        "start": 406,
        "end": 416
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 432,
                "end": 444
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = null; --x === -1. Actual: ",
                    "raw": "'#2: var x = null; --x === -1. Actual: '",
                    "start": 445,
                    "end": 485
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UpdateExpression",
                      "operator": "--",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 491,
                        "end": 492
                      },
                      "start": 489,
                      "end": 492
                    },
                    "start": 488,
                    "end": 493
                  },
                  "start": 445,
                  "end": 493
                }
              ],
              "start": 428,
              "end": 494
            },
            "start": 422,
            "end": 495
          }
        ],
        "start": 418,
        "end": 497
      },
      "alternate": null,
      "start": 402,
      "end": 497
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 498
}