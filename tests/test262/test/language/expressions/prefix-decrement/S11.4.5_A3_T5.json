{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 284,
            "end": 285
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 288,
            "end": 290
          },
          "start": 284,
          "end": 290
        }
      ],
      "start": 280,
      "end": 291
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "UpdateExpression",
        "operator": "--",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "name": "x",
          "start": 295,
          "end": 296
        },
        "start": 293,
        "end": 296
      },
      "start": 293,
      "end": 297
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 303,
            "end": 308
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 309,
              "end": 310
            }
          ],
          "optional": false,
          "start": 303,
          "end": 311
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 316,
          "end": 320
        },
        "start": 303,
        "end": 320
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 336,
                "end": 348
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = {}; --x; x === Not-a-Number. Actual: ",
                    "raw": "'#1: var x = {}; --x; x === Not-a-Number. Actual: '",
                    "start": 349,
                    "end": 400
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 404,
                      "end": 405
                    },
                    "start": 403,
                    "end": 406
                  },
                  "start": 349,
                  "end": 406
                }
              ],
              "start": 332,
              "end": 407
            },
            "start": 326,
            "end": 408
          }
        ],
        "start": 322,
        "end": 410
      },
      "alternate": null,
      "start": 299,
      "end": 410
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 426,
            "end": 427
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 448,
                    "end": 449
                  },
                  "start": 441,
                  "end": 449
                }
              ],
              "start": 440,
              "end": 450
            },
            "expression": false,
            "start": 430,
            "end": 450
          },
          "start": 426,
          "end": 450
        }
      ],
      "start": 422,
      "end": 451
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "UpdateExpression",
        "operator": "--",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "name": "x",
          "start": 455,
          "end": 456
        },
        "start": 453,
        "end": 456
      },
      "start": 453,
      "end": 457
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 463,
            "end": 468
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 469,
              "end": 470
            }
          ],
          "optional": false,
          "start": 463,
          "end": 471
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 476,
          "end": 480
        },
        "start": 463,
        "end": 480
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 496,
                "end": 508
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = function(){return 1}; --x; x === Not-a-Number. Actual: ",
                    "raw": "'#2: var x = function(){return 1}; --x; x === Not-a-Number. Actual: '",
                    "start": 509,
                    "end": 578
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 582,
                      "end": 583
                    },
                    "start": 581,
                    "end": 584
                  },
                  "start": 509,
                  "end": 584
                }
              ],
              "start": 492,
              "end": 585
            },
            "start": 486,
            "end": 586
          }
        ],
        "start": 482,
        "end": 588
      },
      "alternate": null,
      "start": 459,
      "end": 588
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 589
}