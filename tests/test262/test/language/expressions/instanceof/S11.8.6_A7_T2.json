{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__arr",
            "start": 333,
            "end": 338
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [],
            "start": 339,
            "end": 341
          },
          "start": 333,
          "end": 341
        }
      ],
      "start": 329,
      "end": 342
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Identifier",
              "name": "__arr",
              "start": 360,
              "end": 365
            },
            "operator": "instanceof",
            "right": {
              "type": "Identifier",
              "name": "Array",
              "start": 377,
              "end": 382
            },
            "start": 360,
            "end": 382
          },
          "start": 359,
          "end": 383
        },
        "prefix": true,
        "start": 358,
        "end": 383
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 398,
                "end": 410
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: If instanceof returns true then GetValue(RelationalExpression) was constructed with ShiftExpression",
                  "raw": "'#1: If instanceof returns true then GetValue(RelationalExpression) was constructed with ShiftExpression'",
                  "start": 411,
                  "end": 516
                }
              ],
              "start": 394,
              "end": 517
            },
            "start": 388,
            "end": 518
          }
        ],
        "start": 385,
        "end": 520
      },
      "alternate": null,
      "start": 354,
      "end": 520
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "__arr",
            "start": 536,
            "end": 541
          },
          "property": {
            "type": "Identifier",
            "name": "constructor",
            "start": 542,
            "end": 553
          },
          "optional": false,
          "computed": false,
          "start": 536,
          "end": 553
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "Array",
          "start": 558,
          "end": 563
        },
        "start": 536,
        "end": 563
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 578,
                "end": 590
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: If instanceof returns true then GetValue(RelationalExpression) was constructed with ShiftExpression",
                  "raw": "'#2: If instanceof returns true then GetValue(RelationalExpression) was constructed with ShiftExpression'",
                  "start": 591,
                  "end": 696
                }
              ],
              "start": 574,
              "end": 697
            },
            "start": 568,
            "end": 698
          }
        ],
        "start": 565,
        "end": 700
      },
      "alternate": null,
      "start": 532,
      "end": 700
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 701
}