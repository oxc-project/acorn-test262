{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__func",
            "start": 336,
            "end": 342
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Function",
              "start": 349,
              "end": 357
            },
            "arguments": [],
            "start": 345,
            "end": 357
          },
          "start": 336,
          "end": 357
        }
      ],
      "start": 332,
      "end": 358
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Identifier",
              "name": "__func",
              "start": 376,
              "end": 382
            },
            "operator": "instanceof",
            "right": {
              "type": "Identifier",
              "name": "Function",
              "start": 394,
              "end": 402
            },
            "start": 376,
            "end": 402
          },
          "start": 375,
          "end": 403
        },
        "prefix": true,
        "start": 374,
        "end": 403
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 418,
                "end": 430
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: If instanceof returns true then GetValue(RelationalExpression) was constructed with ShiftExpression",
                  "raw": "'#1: If instanceof returns true then GetValue(RelationalExpression) was constructed with ShiftExpression'",
                  "start": 431,
                  "end": 536
                }
              ],
              "start": 414,
              "end": 537
            },
            "start": 408,
            "end": 538
          }
        ],
        "start": 405,
        "end": 540
      },
      "alternate": null,
      "start": 370,
      "end": 540
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "__func",
            "start": 556,
            "end": 562
          },
          "property": {
            "type": "Identifier",
            "name": "constructor",
            "start": 563,
            "end": 574
          },
          "optional": false,
          "computed": false,
          "start": 556,
          "end": 574
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "Function",
          "start": 579,
          "end": 587
        },
        "start": 556,
        "end": 587
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 602,
                "end": 614
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: If instanceof returns true then GetValue(RelationalExpression) was constructed with ShiftExpression",
                  "raw": "'#2: If instanceof returns true then GetValue(RelationalExpression) was constructed with ShiftExpression'",
                  "start": 615,
                  "end": 720
                }
              ],
              "start": 598,
              "end": 721
            },
            "start": 592,
            "end": 722
          }
        ],
        "start": 589,
        "end": 724
      },
      "alternate": null,
      "start": 552,
      "end": 724
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 725
}