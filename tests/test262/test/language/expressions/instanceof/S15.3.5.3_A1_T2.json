{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "FACTORY",
            "start": 379,
            "end": 386
          },
          "init": null,
          "start": 379,
          "end": 386
        }
      ],
      "start": 375,
      "end": 387
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "FACTORY",
          "start": 388,
          "end": 395
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "Function",
            "start": 398,
            "end": 406
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "name",
              "raw": "\"name\"",
              "start": 407,
              "end": 413
            },
            {
              "type": "Literal",
              "value": "this.name=name;",
              "raw": "\"this.name=name;\"",
              "start": 414,
              "end": 431
            }
          ],
          "optional": false,
          "start": 398,
          "end": 432
        },
        "start": 388,
        "end": 432
      },
      "start": 388,
      "end": 433
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 450,
              "end": 453
            },
            "operator": "instanceof",
            "right": {
              "type": "Identifier",
              "name": "FACTORY",
              "start": 466,
              "end": 473
            },
            "start": 450,
            "end": 473
          },
          "start": 449,
          "end": 474
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 477,
          "end": 482
        },
        "start": 449,
        "end": 482
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 498,
                "end": 510
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: Assume F is a Function object. When the [[HasInstance]] method of F is called with value V, the following steps are taken: i) If V is not an object, return false",
                  "raw": "'#1: Assume F is a Function object. When the [[HasInstance]] method of F is called with value V, the following steps are taken: i) If V is not an object, return false'",
                  "start": 511,
                  "end": 678
                }
              ],
              "start": 494,
              "end": 679
            },
            "start": 488,
            "end": 680
          }
        ],
        "start": 484,
        "end": 682
      },
      "alternate": null,
      "start": 445,
      "end": 682
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 683
}