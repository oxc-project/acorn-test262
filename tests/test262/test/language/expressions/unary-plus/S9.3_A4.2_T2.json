{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 470,
            "end": 475
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 478,
                    "end": 484
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "NaN",
                    "start": 485,
                    "end": 488
                  },
                  "optional": false,
                  "computed": false,
                  "start": 478,
                  "end": 488
                },
                "start": 477,
                "end": 489
              },
              "prefix": true,
              "start": 476,
              "end": 489
            }
          ],
          "optional": false,
          "start": 470,
          "end": 490
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 495,
          "end": 499
        },
        "start": 470,
        "end": 499
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 515,
                "end": 527
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: +(NaN) === Not-a-Number. Actual: ",
                    "raw": "'#1: +(NaN) === Not-a-Number. Actual: '",
                    "start": 528,
                    "end": 567
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "Identifier",
                          "name": "NaN",
                          "start": 573,
                          "end": 576
                        },
                        "start": 572,
                        "end": 577
                      },
                      "prefix": true,
                      "start": 571,
                      "end": 577
                    },
                    "start": 570,
                    "end": 578
                  },
                  "start": 528,
                  "end": 578
                }
              ],
              "start": 511,
              "end": 579
            },
            "start": 505,
            "end": 580
          }
        ],
        "start": 501,
        "end": 583
      },
      "alternate": null,
      "start": 466,
      "end": 583
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 603,
                "end": 604
              },
              "prefix": true,
              "start": 602,
              "end": 604
            },
            "start": 601,
            "end": 605
          },
          "prefix": true,
          "start": 600,
          "end": 605
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 611,
            "end": 612
          },
          "prefix": true,
          "start": 610,
          "end": 612
        },
        "start": 600,
        "end": 612
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 628,
                "end": 640
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2.1: +(+0) === 0. Actual: ",
                    "raw": "'#2.1: +(+0) === 0. Actual: '",
                    "start": 641,
                    "end": 670
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "UnaryExpression",
                          "operator": "+",
                          "argument": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0",
                            "start": 677,
                            "end": 678
                          },
                          "prefix": true,
                          "start": 676,
                          "end": 678
                        },
                        "start": 675,
                        "end": 679
                      },
                      "prefix": true,
                      "start": 674,
                      "end": 679
                    },
                    "start": 673,
                    "end": 680
                  },
                  "start": 641,
                  "end": 680
                }
              ],
              "start": 624,
              "end": 681
            },
            "start": 618,
            "end": 682
          }
        ],
        "start": 614,
        "end": 685
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 699,
                  "end": 700
                },
                "operator": "/",
                "right": {
                  "type": "UnaryExpression",
                  "operator": "+",
                  "argument": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 704,
                        "end": 705
                      },
                      "prefix": true,
                      "start": 703,
                      "end": 705
                    },
                    "start": 702,
                    "end": 706
                  },
                  "prefix": true,
                  "start": 701,
                  "end": 706
                },
                "start": 699,
                "end": 706
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 711,
                  "end": 717
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 718,
                  "end": 735
                },
                "optional": false,
                "computed": false,
                "start": 711,
                "end": 735
              },
              "start": 699,
              "end": 735
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 753,
                      "end": 765
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "#2.2: +(+0) === +0. Actual: -0",
                        "raw": "'#2.2: +(+0) === +0. Actual: -0'",
                        "start": 766,
                        "end": 798
                      }
                    ],
                    "start": 749,
                    "end": 799
                  },
                  "start": 743,
                  "end": 800
                }
              ],
              "start": 737,
              "end": 804
            },
            "alternate": null,
            "start": 695,
            "end": 804
          }
        ],
        "start": 691,
        "end": 807
      },
      "start": 596,
      "end": 807
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 827,
                "end": 828
              },
              "prefix": true,
              "start": 826,
              "end": 828
            },
            "start": 825,
            "end": 829
          },
          "prefix": true,
          "start": 824,
          "end": 829
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 835,
            "end": 836
          },
          "prefix": true,
          "start": 834,
          "end": 836
        },
        "start": 824,
        "end": 836
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 852,
                "end": 864
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3.1: +(-0) === 0. Actual: ",
                    "raw": "'#3.1: +(-0) === 0. Actual: '",
                    "start": 865,
                    "end": 894
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0",
                            "start": 901,
                            "end": 902
                          },
                          "prefix": true,
                          "start": 900,
                          "end": 902
                        },
                        "start": 899,
                        "end": 903
                      },
                      "prefix": true,
                      "start": 898,
                      "end": 903
                    },
                    "start": 897,
                    "end": 904
                  },
                  "start": 865,
                  "end": 904
                }
              ],
              "start": 848,
              "end": 905
            },
            "start": 842,
            "end": 906
          }
        ],
        "start": 838,
        "end": 909
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 923,
                  "end": 924
                },
                "operator": "/",
                "right": {
                  "type": "UnaryExpression",
                  "operator": "+",
                  "argument": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 928,
                        "end": 929
                      },
                      "prefix": true,
                      "start": 927,
                      "end": 929
                    },
                    "start": 926,
                    "end": 930
                  },
                  "prefix": true,
                  "start": 925,
                  "end": 930
                },
                "start": 923,
                "end": 930
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 935,
                  "end": 941
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 942,
                  "end": 959
                },
                "optional": false,
                "computed": false,
                "start": 935,
                "end": 959
              },
              "start": 923,
              "end": 959
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 977,
                      "end": 989
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "#3.2: +(-0) === -0. Actual: +0",
                        "raw": "'#3.2: +(-0) === -0. Actual: +0'",
                        "start": 990,
                        "end": 1022
                      }
                    ],
                    "start": 973,
                    "end": 1023
                  },
                  "start": 967,
                  "end": 1024
                }
              ],
              "start": 961,
              "end": 1028
            },
            "alternate": null,
            "start": 919,
            "end": 1028
          }
        ],
        "start": 915,
        "end": 1031
      },
      "start": 820,
      "end": 1031
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1050,
                "end": 1056
              },
              "property": {
                "type": "Identifier",
                "name": "POSITIVE_INFINITY",
                "start": 1057,
                "end": 1074
              },
              "optional": false,
              "computed": false,
              "start": 1050,
              "end": 1074
            },
            "start": 1049,
            "end": 1075
          },
          "prefix": true,
          "start": 1048,
          "end": 1075
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 1080,
            "end": 1086
          },
          "property": {
            "type": "Identifier",
            "name": "POSITIVE_INFINITY",
            "start": 1087,
            "end": 1104
          },
          "optional": false,
          "computed": false,
          "start": 1080,
          "end": 1104
        },
        "start": 1048,
        "end": 1104
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1120,
                "end": 1132
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: +(+Infinity) === +Infinity. Actual: ",
                    "raw": "'#4: +(+Infinity) === +Infinity. Actual: '",
                    "start": 1133,
                    "end": 1175
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "UnaryExpression",
                          "operator": "+",
                          "argument": {
                            "type": "Identifier",
                            "name": "Infinity",
                            "start": 1182,
                            "end": 1190
                          },
                          "prefix": true,
                          "start": 1181,
                          "end": 1190
                        },
                        "start": 1180,
                        "end": 1191
                      },
                      "prefix": true,
                      "start": 1179,
                      "end": 1191
                    },
                    "start": 1178,
                    "end": 1192
                  },
                  "start": 1133,
                  "end": 1192
                }
              ],
              "start": 1116,
              "end": 1193
            },
            "start": 1110,
            "end": 1194
          }
        ],
        "start": 1106,
        "end": 1197
      },
      "alternate": null,
      "start": 1044,
      "end": 1197
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1216,
                "end": 1222
              },
              "property": {
                "type": "Identifier",
                "name": "NEGATIVE_INFINITY",
                "start": 1223,
                "end": 1240
              },
              "optional": false,
              "computed": false,
              "start": 1216,
              "end": 1240
            },
            "start": 1215,
            "end": 1241
          },
          "prefix": true,
          "start": 1214,
          "end": 1241
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 1246,
            "end": 1252
          },
          "property": {
            "type": "Identifier",
            "name": "NEGATIVE_INFINITY",
            "start": 1253,
            "end": 1270
          },
          "optional": false,
          "computed": false,
          "start": 1246,
          "end": 1270
        },
        "start": 1214,
        "end": 1270
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1286,
                "end": 1298
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: +(-Infinity) === -Infinity. Actual: ",
                    "raw": "'#5: +(-Infinity) === -Infinity. Actual: '",
                    "start": 1299,
                    "end": 1341
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Identifier",
                            "name": "Infinity",
                            "start": 1348,
                            "end": 1356
                          },
                          "prefix": true,
                          "start": 1347,
                          "end": 1356
                        },
                        "start": 1346,
                        "end": 1357
                      },
                      "prefix": true,
                      "start": 1345,
                      "end": 1357
                    },
                    "start": 1344,
                    "end": 1358
                  },
                  "start": 1299,
                  "end": 1358
                }
              ],
              "start": 1282,
              "end": 1359
            },
            "start": 1276,
            "end": 1360
          }
        ],
        "start": 1272,
        "end": 1363
      },
      "alternate": null,
      "start": 1210,
      "end": 1363
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1382,
                "end": 1388
              },
              "property": {
                "type": "Identifier",
                "name": "MAX_VALUE",
                "start": 1389,
                "end": 1398
              },
              "optional": false,
              "computed": false,
              "start": 1382,
              "end": 1398
            },
            "start": 1381,
            "end": 1399
          },
          "prefix": true,
          "start": 1380,
          "end": 1399
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 1404,
            "end": 1410
          },
          "property": {
            "type": "Identifier",
            "name": "MAX_VALUE",
            "start": 1411,
            "end": 1420
          },
          "optional": false,
          "computed": false,
          "start": 1404,
          "end": 1420
        },
        "start": 1380,
        "end": 1420
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1436,
                "end": 1448
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: +(Number.MAX_VALUE) === Number.MAX_VALUE. Actual: ",
                    "raw": "'#6: +(Number.MAX_VALUE) === Number.MAX_VALUE. Actual: '",
                    "start": 1449,
                    "end": 1505
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1511,
                            "end": 1517
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "MAX_VALUE",
                            "start": 1518,
                            "end": 1527
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1511,
                          "end": 1527
                        },
                        "start": 1510,
                        "end": 1528
                      },
                      "prefix": true,
                      "start": 1509,
                      "end": 1528
                    },
                    "start": 1508,
                    "end": 1529
                  },
                  "start": 1449,
                  "end": 1529
                }
              ],
              "start": 1432,
              "end": 1530
            },
            "start": 1426,
            "end": 1531
          }
        ],
        "start": 1422,
        "end": 1534
      },
      "alternate": null,
      "start": 1376,
      "end": 1534
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1553,
                "end": 1559
              },
              "property": {
                "type": "Identifier",
                "name": "MIN_VALUE",
                "start": 1560,
                "end": 1569
              },
              "optional": false,
              "computed": false,
              "start": 1553,
              "end": 1569
            },
            "start": 1552,
            "end": 1570
          },
          "prefix": true,
          "start": 1551,
          "end": 1570
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 1575,
            "end": 1581
          },
          "property": {
            "type": "Identifier",
            "name": "MIN_VALUE",
            "start": 1582,
            "end": 1591
          },
          "optional": false,
          "computed": false,
          "start": 1575,
          "end": 1591
        },
        "start": 1551,
        "end": 1591
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1607,
                "end": 1619
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: +(Number.MIN_VALUE) === Number.MIN_VALUE. Actual: ",
                    "raw": "'#7: +(Number.MIN_VALUE) === Number.MIN_VALUE. Actual: '",
                    "start": 1620,
                    "end": 1676
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1682,
                            "end": 1688
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "MIN_VALUE",
                            "start": 1689,
                            "end": 1698
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1682,
                          "end": 1698
                        },
                        "start": 1681,
                        "end": 1699
                      },
                      "prefix": true,
                      "start": 1680,
                      "end": 1699
                    },
                    "start": 1679,
                    "end": 1700
                  },
                  "start": 1620,
                  "end": 1700
                }
              ],
              "start": 1603,
              "end": 1701
            },
            "start": 1597,
            "end": 1702
          }
        ],
        "start": 1593,
        "end": 1705
      },
      "alternate": null,
      "start": 1547,
      "end": 1705
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1706
}