{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 260,
            "end": 265
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "UnaryExpression",
                "operator": "void",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 272,
                  "end": 273
                },
                "prefix": true,
                "start": 267,
                "end": 273
              },
              "prefix": true,
              "start": 266,
              "end": 273
            }
          ],
          "optional": false,
          "start": 260,
          "end": 274
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 279,
          "end": 283
        },
        "start": 260,
        "end": 283
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 299,
                "end": 311
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: +void 0 === Not-a-Number. Actual: ",
                    "raw": "'#1: +void 0 === Not-a-Number. Actual: '",
                    "start": 312,
                    "end": 352
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "UnaryExpression",
                        "operator": "void",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 362,
                          "end": 363
                        },
                        "prefix": true,
                        "start": 357,
                        "end": 363
                      },
                      "prefix": true,
                      "start": 356,
                      "end": 363
                    },
                    "start": 355,
                    "end": 364
                  },
                  "start": 312,
                  "end": 364
                }
              ],
              "start": 295,
              "end": 365
            },
            "start": 289,
            "end": 366
          }
        ],
        "start": 285,
        "end": 368
      },
      "alternate": null,
      "start": 256,
      "end": 368
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 385,
            "end": 389
          },
          "prefix": true,
          "start": 384,
          "end": 389
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 394,
          "end": 395
        },
        "start": 384,
        "end": 395
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 411,
                "end": 423
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: +null === 0. Actual: ",
                    "raw": "'#2: +null === 0. Actual: '",
                    "start": 424,
                    "end": 451
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 456,
                        "end": 460
                      },
                      "prefix": true,
                      "start": 455,
                      "end": 460
                    },
                    "start": 454,
                    "end": 461
                  },
                  "start": 424,
                  "end": 461
                }
              ],
              "start": 407,
              "end": 462
            },
            "start": 401,
            "end": 463
          }
        ],
        "start": 397,
        "end": 465
      },
      "alternate": null,
      "start": 380,
      "end": 465
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 466
}