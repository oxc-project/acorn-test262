{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 308,
            "end": 313
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "Identifier",
                  "name": "undefined",
                  "start": 316,
                  "end": 325
                },
                "start": 315,
                "end": 326
              },
              "prefix": true,
              "start": 314,
              "end": 326
            }
          ],
          "optional": false,
          "start": 308,
          "end": 327
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 332,
          "end": 336
        },
        "start": 308,
        "end": 336
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 352,
                "end": 364
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: +(undefined) === Not-a-Number. Actual: ",
                    "raw": "'#1: +(undefined) === Not-a-Number. Actual: '",
                    "start": 365,
                    "end": 410
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "Identifier",
                          "name": "undefined",
                          "start": 416,
                          "end": 425
                        },
                        "start": 415,
                        "end": 426
                      },
                      "prefix": true,
                      "start": 414,
                      "end": 426
                    },
                    "start": 413,
                    "end": 427
                  },
                  "start": 365,
                  "end": 427
                }
              ],
              "start": 348,
              "end": 428
            },
            "start": 342,
            "end": 429
          }
        ],
        "start": 338,
        "end": 431
      },
      "alternate": null,
      "start": 304,
      "end": 431
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 448,
            "end": 453
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "UnaryExpression",
                  "operator": "void",
                  "argument": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0",
                    "start": 461,
                    "end": 462
                  },
                  "prefix": true,
                  "start": 456,
                  "end": 462
                },
                "start": 455,
                "end": 463
              },
              "prefix": true,
              "start": 454,
              "end": 463
            }
          ],
          "optional": false,
          "start": 448,
          "end": 464
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 469,
          "end": 473
        },
        "start": 448,
        "end": 473
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 489,
                "end": 501
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: +(void 0) === Not-a-Number. Actual: ",
                    "raw": "'#2: +(void 0) === Not-a-Number. Actual: '",
                    "start": 502,
                    "end": 544
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "UnaryExpression",
                          "operator": "void",
                          "argument": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0",
                            "start": 555,
                            "end": 556
                          },
                          "prefix": true,
                          "start": 550,
                          "end": 556
                        },
                        "start": 549,
                        "end": 557
                      },
                      "prefix": true,
                      "start": 548,
                      "end": 557
                    },
                    "start": 547,
                    "end": 558
                  },
                  "start": 502,
                  "end": 558
                }
              ],
              "start": 485,
              "end": 559
            },
            "start": 479,
            "end": 560
          }
        ],
        "start": 475,
        "end": 562
      },
      "alternate": null,
      "start": 444,
      "end": 562
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 579,
            "end": 584
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "eval",
                    "start": 587,
                    "end": 591
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "var x",
                      "raw": "\"var x\"",
                      "start": 592,
                      "end": 599
                    }
                  ],
                  "optional": false,
                  "start": 587,
                  "end": 600
                },
                "start": 586,
                "end": 601
              },
              "prefix": true,
              "start": 585,
              "end": 601
            }
          ],
          "optional": false,
          "start": 579,
          "end": 602
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 607,
          "end": 611
        },
        "start": 579,
        "end": 611
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 627,
                "end": 639
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: +(eval(\"var x\")) === Not-a-Number. Actual: ",
                    "raw": "'#3: +(eval(\"var x\")) === Not-a-Number. Actual: '",
                    "start": 640,
                    "end": 689
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "eval",
                            "start": 695,
                            "end": 699
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "var x",
                              "raw": "\"var x\"",
                              "start": 700,
                              "end": 707
                            }
                          ],
                          "optional": false,
                          "start": 695,
                          "end": 708
                        },
                        "start": 694,
                        "end": 709
                      },
                      "prefix": true,
                      "start": 693,
                      "end": 709
                    },
                    "start": 692,
                    "end": 710
                  },
                  "start": 640,
                  "end": 710
                }
              ],
              "start": 623,
              "end": 711
            },
            "start": 617,
            "end": 712
          }
        ],
        "start": 613,
        "end": 714
      },
      "alternate": null,
      "start": 575,
      "end": 714
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 715
}