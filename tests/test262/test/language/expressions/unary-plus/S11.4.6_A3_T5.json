{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 275,
            "end": 280
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "ObjectExpression",
                "properties": [],
                "start": 282,
                "end": 284
              },
              "prefix": true,
              "start": 281,
              "end": 284
            }
          ],
          "optional": false,
          "start": 275,
          "end": 285
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 290,
          "end": 294
        },
        "start": 275,
        "end": 294
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 310,
                "end": 322
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: +{} === Not-a-Number. Actual: ",
                    "raw": "'#1: +{} === Not-a-Number. Actual: '",
                    "start": 323,
                    "end": 359
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ObjectExpression",
                        "properties": [],
                        "start": 364,
                        "end": 366
                      },
                      "prefix": true,
                      "start": 363,
                      "end": 366
                    },
                    "start": 362,
                    "end": 367
                  },
                  "start": 323,
                  "end": 367
                }
              ],
              "start": 306,
              "end": 368
            },
            "start": 300,
            "end": 369
          }
        ],
        "start": 296,
        "end": 371
      },
      "alternate": null,
      "start": 271,
      "end": 371
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 389,
            "end": 394
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 414,
                        "end": 415
                      },
                      "start": 407,
                      "end": 415
                    }
                  ],
                  "start": 406,
                  "end": 416
                },
                "expression": false,
                "start": 396,
                "end": 416
              },
              "prefix": true,
              "start": 395,
              "end": 416
            }
          ],
          "optional": false,
          "start": 389,
          "end": 417
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 422,
          "end": 426
        },
        "start": 389,
        "end": 426
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 442,
                "end": 454
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: +function(){return 1} === Not-a-Number. Actual: ",
                    "raw": "'#2: +function(){return 1} === Not-a-Number. Actual: '",
                    "start": 455,
                    "end": 509
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "FunctionExpression",
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "1",
                                "start": 532,
                                "end": 533
                              },
                              "start": 525,
                              "end": 533
                            }
                          ],
                          "start": 524,
                          "end": 534
                        },
                        "expression": false,
                        "start": 514,
                        "end": 534
                      },
                      "prefix": true,
                      "start": 513,
                      "end": 534
                    },
                    "start": 512,
                    "end": 535
                  },
                  "start": 455,
                  "end": 535
                }
              ],
              "start": 438,
              "end": 536
            },
            "start": 432,
            "end": 537
          }
        ],
        "start": 428,
        "end": 539
      },
      "alternate": null,
      "start": 385,
      "end": 539
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 540
}