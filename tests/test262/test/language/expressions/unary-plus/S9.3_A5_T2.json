{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 469,
                "end": 475
              },
              "arguments": [],
              "start": 465,
              "end": 477
            },
            "start": 464,
            "end": 478
          },
          "prefix": true,
          "start": 463,
          "end": 478
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 483,
          "end": 484
        },
        "start": 463,
        "end": 484
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 500,
                "end": 512
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: +(new Number()) === 0. Actual: ",
                    "raw": "'#1: +(new Number()) === 0. Actual: '",
                    "start": 513,
                    "end": 550
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 560,
                            "end": 566
                          },
                          "arguments": [],
                          "start": 556,
                          "end": 568
                        },
                        "start": 555,
                        "end": 569
                      },
                      "prefix": true,
                      "start": 554,
                      "end": 569
                    },
                    "start": 553,
                    "end": 570
                  },
                  "start": 513,
                  "end": 570
                }
              ],
              "start": 496,
              "end": 571
            },
            "start": 490,
            "end": 572
          }
        ],
        "start": 486,
        "end": 574
      },
      "alternate": null,
      "start": 459,
      "end": 574
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 597,
                "end": 603
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 604,
                  "end": 605
                }
              ],
              "start": 593,
              "end": 606
            },
            "start": 592,
            "end": 607
          },
          "prefix": true,
          "start": 591,
          "end": 607
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 612,
          "end": 613
        },
        "start": 591,
        "end": 613
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 629,
                "end": 641
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: +(new Number(0)) === 0. Actual: ",
                    "raw": "'#2: +(new Number(0)) === 0. Actual: '",
                    "start": 642,
                    "end": 680
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 690,
                            "end": 696
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 0,
                              "raw": "0",
                              "start": 697,
                              "end": 698
                            }
                          ],
                          "start": 686,
                          "end": 699
                        },
                        "start": 685,
                        "end": 700
                      },
                      "prefix": true,
                      "start": 684,
                      "end": 700
                    },
                    "start": 683,
                    "end": 701
                  },
                  "start": 642,
                  "end": 701
                }
              ],
              "start": 625,
              "end": 702
            },
            "start": 619,
            "end": 703
          }
        ],
        "start": 615,
        "end": 705
      },
      "alternate": null,
      "start": 587,
      "end": 705
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "isNaN",
          "start": 722,
          "end": 727
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 734,
                    "end": 740
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "Number",
                        "start": 741,
                        "end": 747
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 748,
                        "end": 751
                      },
                      "optional": false,
                      "computed": false,
                      "start": 741,
                      "end": 751
                    }
                  ],
                  "start": 730,
                  "end": 752
                },
                "start": 729,
                "end": 753
              },
              "prefix": true,
              "start": 728,
              "end": 753
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 758,
              "end": 762
            },
            "start": 728,
            "end": 762
          }
        ],
        "optional": false,
        "start": 722,
        "end": 763
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 779,
                "end": 791
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: +(new Number(Number.NaN)) === Not-a-Number. Actual: ",
                    "raw": "'#3: +(new Number(Number.NaN)) === Not-a-Number. Actual: '",
                    "start": 792,
                    "end": 850
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 860,
                            "end": 866
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Number",
                                "start": 867,
                                "end": 873
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "NaN",
                                "start": 874,
                                "end": 877
                              },
                              "optional": false,
                              "computed": false,
                              "start": 867,
                              "end": 877
                            }
                          ],
                          "start": 856,
                          "end": 878
                        },
                        "start": 855,
                        "end": 879
                      },
                      "prefix": true,
                      "start": 854,
                      "end": 879
                    },
                    "start": 853,
                    "end": 880
                  },
                  "start": 792,
                  "end": 880
                }
              ],
              "start": 775,
              "end": 881
            },
            "start": 769,
            "end": 882
          }
        ],
        "start": 765,
        "end": 884
      },
      "alternate": null,
      "start": 718,
      "end": 884
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 907,
                "end": 913
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "null",
                  "start": 914,
                  "end": 918
                }
              ],
              "start": 903,
              "end": 919
            },
            "start": 902,
            "end": 920
          },
          "prefix": true,
          "start": 901,
          "end": 920
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 925,
          "end": 926
        },
        "start": 901,
        "end": 926
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 942,
                "end": 954
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4.1: +(new Number(null)) === 0. Actual: ",
                    "raw": "'#4.1: +(new Number(null)) === 0. Actual: '",
                    "start": 955,
                    "end": 998
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1008,
                            "end": 1014
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": null,
                              "raw": "null",
                              "start": 1015,
                              "end": 1019
                            }
                          ],
                          "start": 1004,
                          "end": 1020
                        },
                        "start": 1003,
                        "end": 1021
                      },
                      "prefix": true,
                      "start": 1002,
                      "end": 1021
                    },
                    "start": 1001,
                    "end": 1022
                  },
                  "start": 955,
                  "end": 1022
                }
              ],
              "start": 938,
              "end": 1023
            },
            "start": 932,
            "end": 1024
          }
        ],
        "start": 928,
        "end": 1027
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1041,
                  "end": 1042
                },
                "operator": "/",
                "right": {
                  "type": "UnaryExpression",
                  "operator": "+",
                  "argument": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Number",
                        "start": 1049,
                        "end": 1055
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "start": 1056,
                          "end": 1060
                        }
                      ],
                      "start": 1045,
                      "end": 1061
                    },
                    "start": 1044,
                    "end": 1062
                  },
                  "prefix": true,
                  "start": 1043,
                  "end": 1062
                },
                "start": 1041,
                "end": 1062
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1067,
                  "end": 1073
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 1074,
                  "end": 1091
                },
                "optional": false,
                "computed": false,
                "start": 1067,
                "end": 1091
              },
              "start": 1041,
              "end": 1091
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 1109,
                      "end": 1121
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "#4.2: +(new Number(null)) === +0. Actual: -0",
                        "raw": "'#4.2: +(new Number(null)) === +0. Actual: -0'",
                        "start": 1122,
                        "end": 1168
                      }
                    ],
                    "start": 1105,
                    "end": 1169
                  },
                  "start": 1099,
                  "end": 1170
                }
              ],
              "start": 1093,
              "end": 1174
            },
            "alternate": null,
            "start": 1037,
            "end": 1174
          }
        ],
        "start": 1033,
        "end": 1177
      },
      "start": 897,
      "end": 1177
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "isNaN",
          "start": 1194,
          "end": 1199
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 1206,
                    "end": 1212
                  },
                  "arguments": [
                    {
                      "type": "UnaryExpression",
                      "operator": "void",
                      "argument": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1218,
                        "end": 1219
                      },
                      "prefix": true,
                      "start": 1213,
                      "end": 1219
                    }
                  ],
                  "start": 1202,
                  "end": 1220
                },
                "start": 1201,
                "end": 1221
              },
              "prefix": true,
              "start": 1200,
              "end": 1221
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1226,
              "end": 1230
            },
            "start": 1200,
            "end": 1230
          }
        ],
        "optional": false,
        "start": 1194,
        "end": 1231
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1247,
                "end": 1259
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: +(new Number(void 0)) === Not-a-Number. Actual: ",
                    "raw": "'#5: +(new Number(void 0)) === Not-a-Number. Actual: '",
                    "start": 1260,
                    "end": 1314
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1324,
                            "end": 1330
                          },
                          "arguments": [
                            {
                              "type": "UnaryExpression",
                              "operator": "void",
                              "argument": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0",
                                "start": 1336,
                                "end": 1337
                              },
                              "prefix": true,
                              "start": 1331,
                              "end": 1337
                            }
                          ],
                          "start": 1320,
                          "end": 1338
                        },
                        "start": 1319,
                        "end": 1339
                      },
                      "prefix": true,
                      "start": 1318,
                      "end": 1339
                    },
                    "start": 1317,
                    "end": 1340
                  },
                  "start": 1260,
                  "end": 1340
                }
              ],
              "start": 1243,
              "end": 1341
            },
            "start": 1237,
            "end": 1342
          }
        ],
        "start": 1233,
        "end": 1344
      },
      "alternate": null,
      "start": 1190,
      "end": 1344
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 1367,
                "end": 1373
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1374,
                  "end": 1378
                }
              ],
              "start": 1363,
              "end": 1379
            },
            "start": 1362,
            "end": 1380
          },
          "prefix": true,
          "start": 1361,
          "end": 1380
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1385,
          "end": 1386
        },
        "start": 1361,
        "end": 1386
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1402,
                "end": 1414
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: +(new Number(true)) === 1. Actual: ",
                    "raw": "'#6: +(new Number(true)) === 1. Actual: '",
                    "start": 1415,
                    "end": 1456
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1466,
                            "end": 1472
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 1473,
                              "end": 1477
                            }
                          ],
                          "start": 1462,
                          "end": 1478
                        },
                        "start": 1461,
                        "end": 1479
                      },
                      "prefix": true,
                      "start": 1460,
                      "end": 1479
                    },
                    "start": 1459,
                    "end": 1480
                  },
                  "start": 1415,
                  "end": 1480
                }
              ],
              "start": 1398,
              "end": 1481
            },
            "start": 1392,
            "end": 1482
          }
        ],
        "start": 1388,
        "end": 1484
      },
      "alternate": null,
      "start": 1357,
      "end": 1484
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 1507,
                "end": 1513
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1514,
                  "end": 1519
                }
              ],
              "start": 1503,
              "end": 1520
            },
            "start": 1502,
            "end": 1521
          },
          "prefix": true,
          "start": 1501,
          "end": 1521
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1527,
            "end": 1528
          },
          "prefix": true,
          "start": 1526,
          "end": 1528
        },
        "start": 1501,
        "end": 1528
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1544,
                "end": 1556
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7.1: +(new Number(false)) === 0. Actual: ",
                    "raw": "'#7.1: +(new Number(false)) === 0. Actual: '",
                    "start": 1557,
                    "end": 1601
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1611,
                            "end": 1617
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "start": 1618,
                              "end": 1623
                            }
                          ],
                          "start": 1607,
                          "end": 1624
                        },
                        "start": 1606,
                        "end": 1625
                      },
                      "prefix": true,
                      "start": 1605,
                      "end": 1625
                    },
                    "start": 1604,
                    "end": 1626
                  },
                  "start": 1557,
                  "end": 1626
                }
              ],
              "start": 1540,
              "end": 1627
            },
            "start": 1534,
            "end": 1628
          }
        ],
        "start": 1530,
        "end": 1630
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1644,
                  "end": 1645
                },
                "operator": "/",
                "right": {
                  "type": "UnaryExpression",
                  "operator": "+",
                  "argument": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Number",
                        "start": 1652,
                        "end": 1658
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": false,
                          "raw": "false",
                          "start": 1659,
                          "end": 1664
                        }
                      ],
                      "start": 1648,
                      "end": 1665
                    },
                    "start": 1647,
                    "end": 1666
                  },
                  "prefix": true,
                  "start": 1646,
                  "end": 1666
                },
                "start": 1644,
                "end": 1666
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1671,
                  "end": 1677
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 1678,
                  "end": 1695
                },
                "optional": false,
                "computed": false,
                "start": 1671,
                "end": 1695
              },
              "start": 1644,
              "end": 1695
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 1713,
                      "end": 1725
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "#7.2: +(new Number(false)) === +0. Actual: -0",
                        "raw": "'#7.2: +(new Number(false)) === +0. Actual: -0'",
                        "start": 1726,
                        "end": 1773
                      }
                    ],
                    "start": 1709,
                    "end": 1774
                  },
                  "start": 1703,
                  "end": 1775
                }
              ],
              "start": 1697,
              "end": 1779
            },
            "alternate": null,
            "start": 1640,
            "end": 1779
          }
        ],
        "start": 1636,
        "end": 1781
      },
      "start": 1497,
      "end": 1781
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 1804,
                "end": 1811
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1812,
                  "end": 1816
                }
              ],
              "start": 1800,
              "end": 1817
            },
            "start": 1799,
            "end": 1818
          },
          "prefix": true,
          "start": 1798,
          "end": 1818
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1823,
          "end": 1824
        },
        "start": 1798,
        "end": 1824
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1840,
                "end": 1852
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: +(new Boolean(true)) === 1. Actual: ",
                    "raw": "'#8: +(new Boolean(true)) === 1. Actual: '",
                    "start": 1853,
                    "end": 1895
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 1905,
                            "end": 1912
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 1913,
                              "end": 1917
                            }
                          ],
                          "start": 1901,
                          "end": 1918
                        },
                        "start": 1900,
                        "end": 1919
                      },
                      "prefix": true,
                      "start": 1899,
                      "end": 1919
                    },
                    "start": 1898,
                    "end": 1920
                  },
                  "start": 1853,
                  "end": 1920
                }
              ],
              "start": 1836,
              "end": 1921
            },
            "start": 1830,
            "end": 1922
          }
        ],
        "start": 1826,
        "end": 1924
      },
      "alternate": null,
      "start": 1794,
      "end": 1924
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 1947,
                "end": 1954
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1955,
                  "end": 1960
                }
              ],
              "start": 1943,
              "end": 1961
            },
            "start": 1942,
            "end": 1962
          },
          "prefix": true,
          "start": 1941,
          "end": 1962
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1968,
            "end": 1969
          },
          "prefix": true,
          "start": 1967,
          "end": 1969
        },
        "start": 1941,
        "end": 1969
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1985,
                "end": 1997
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9.1: +(new Boolean(false)) === 0. Actual: ",
                    "raw": "'#9.1: +(new Boolean(false)) === 0. Actual: '",
                    "start": 1998,
                    "end": 2043
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 2053,
                            "end": 2060
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "start": 2061,
                              "end": 2066
                            }
                          ],
                          "start": 2049,
                          "end": 2067
                        },
                        "start": 2048,
                        "end": 2068
                      },
                      "prefix": true,
                      "start": 2047,
                      "end": 2068
                    },
                    "start": 2046,
                    "end": 2069
                  },
                  "start": 1998,
                  "end": 2069
                }
              ],
              "start": 1981,
              "end": 2070
            },
            "start": 1975,
            "end": 2071
          }
        ],
        "start": 1971,
        "end": 2073
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 2087,
                  "end": 2088
                },
                "operator": "/",
                "right": {
                  "type": "UnaryExpression",
                  "operator": "+",
                  "argument": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Boolean",
                        "start": 2095,
                        "end": 2102
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": false,
                          "raw": "false",
                          "start": 2103,
                          "end": 2108
                        }
                      ],
                      "start": 2091,
                      "end": 2109
                    },
                    "start": 2090,
                    "end": 2110
                  },
                  "prefix": true,
                  "start": 2089,
                  "end": 2110
                },
                "start": 2087,
                "end": 2110
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 2115,
                  "end": 2121
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 2122,
                  "end": 2139
                },
                "optional": false,
                "computed": false,
                "start": 2115,
                "end": 2139
              },
              "start": 2087,
              "end": 2139
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 2157,
                      "end": 2169
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "#9.2: +(new Boolean(false)) === +0. Actual: -0",
                        "raw": "'#9.2: +(new Boolean(false)) === +0. Actual: -0'",
                        "start": 2170,
                        "end": 2218
                      }
                    ],
                    "start": 2153,
                    "end": 2219
                  },
                  "start": 2147,
                  "end": 2220
                }
              ],
              "start": 2141,
              "end": 2224
            },
            "alternate": null,
            "start": 2083,
            "end": 2224
          }
        ],
        "start": 2079,
        "end": 2226
      },
      "start": 1937,
      "end": 2226
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 2244,
            "end": 2249
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Array",
                    "start": 2256,
                    "end": 2261
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 2262,
                      "end": 2263
                    },
                    {
                      "type": "Literal",
                      "value": 4,
                      "raw": "4",
                      "start": 2264,
                      "end": 2265
                    },
                    {
                      "type": "Literal",
                      "value": 8,
                      "raw": "8",
                      "start": 2266,
                      "end": 2267
                    },
                    {
                      "type": "Literal",
                      "value": 16,
                      "raw": "16",
                      "start": 2268,
                      "end": 2270
                    },
                    {
                      "type": "Literal",
                      "value": 32,
                      "raw": "32",
                      "start": 2271,
                      "end": 2273
                    }
                  ],
                  "start": 2252,
                  "end": 2274
                },
                "start": 2251,
                "end": 2275
              },
              "prefix": true,
              "start": 2250,
              "end": 2275
            }
          ],
          "optional": false,
          "start": 2244,
          "end": 2276
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 2281,
          "end": 2285
        },
        "start": 2244,
        "end": 2285
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2301,
                "end": 2313
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: +(new Array(2,4,8,16,32)) === Not-a-Number. Actual: ",
                    "raw": "'#10: +(new Array(2,4,8,16,32)) === Not-a-Number. Actual: '",
                    "start": 2314,
                    "end": 2373
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Array",
                            "start": 2383,
                            "end": 2388
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2,
                              "raw": "2",
                              "start": 2389,
                              "end": 2390
                            },
                            {
                              "type": "Literal",
                              "value": 4,
                              "raw": "4",
                              "start": 2391,
                              "end": 2392
                            },
                            {
                              "type": "Literal",
                              "value": 8,
                              "raw": "8",
                              "start": 2393,
                              "end": 2394
                            },
                            {
                              "type": "Literal",
                              "value": 16,
                              "raw": "16",
                              "start": 2395,
                              "end": 2397
                            },
                            {
                              "type": "Literal",
                              "value": 32,
                              "raw": "32",
                              "start": 2398,
                              "end": 2400
                            }
                          ],
                          "start": 2379,
                          "end": 2401
                        },
                        "start": 2378,
                        "end": 2402
                      },
                      "prefix": true,
                      "start": 2377,
                      "end": 2402
                    },
                    "start": 2376,
                    "end": 2403
                  },
                  "start": 2314,
                  "end": 2403
                }
              ],
              "start": 2297,
              "end": 2404
            },
            "start": 2291,
            "end": 2405
          }
        ],
        "start": 2287,
        "end": 2407
      },
      "alternate": null,
      "start": 2240,
      "end": 2407
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myobj1",
            "start": 2425,
            "end": 2431
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "ToNumber",
                  "start": 2452,
                  "end": 2460
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 12345,
                          "raw": "12345",
                          "start": 2481,
                          "end": 2486
                        },
                        "start": 2474,
                        "end": 2487
                      }
                    ],
                    "start": 2473,
                    "end": 2488
                  },
                  "expression": false,
                  "start": 2463,
                  "end": 2488
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2452,
                "end": 2488
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 2507,
                  "end": 2515
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "67890",
                          "raw": "\"67890\"",
                          "start": 2536,
                          "end": 2543
                        },
                        "start": 2529,
                        "end": 2544
                      }
                    ],
                    "start": 2528,
                    "end": 2545
                  },
                  "expression": false,
                  "start": 2518,
                  "end": 2545
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2507,
                "end": 2545
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "valueOf",
                  "start": 2563,
                  "end": 2570
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "[object MyObj]",
                          "raw": "\"[object MyObj]\"",
                          "start": 2592,
                          "end": 2608
                        },
                        "start": 2585,
                        "end": 2609
                      }
                    ],
                    "start": 2584,
                    "end": 2610
                  },
                  "expression": false,
                  "start": 2574,
                  "end": 2610
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2563,
                "end": 2610
              }
            ],
            "start": 2434,
            "end": 2625
          },
          "start": 2425,
          "end": 2625
        }
      ],
      "start": 2421,
      "end": 2626
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 2632,
            "end": 2637
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "Identifier",
                  "name": "myobj1",
                  "start": 2640,
                  "end": 2646
                },
                "start": 2639,
                "end": 2647
              },
              "prefix": true,
              "start": 2638,
              "end": 2647
            }
          ],
          "optional": false,
          "start": 2632,
          "end": 2648
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 2653,
          "end": 2657
        },
        "start": 2632,
        "end": 2657
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2672,
                "end": 2684
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#11: +(myobj1) calls ToPrimitive with hint +. Exptected: Not-a-Number. Actual: ",
                    "raw": "\"#11: +(myobj1) calls ToPrimitive with hint +. Exptected: Not-a-Number. Actual: \"",
                    "start": 2685,
                    "end": 2766
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "Identifier",
                          "name": "myobj1",
                          "start": 2772,
                          "end": 2778
                        },
                        "start": 2771,
                        "end": 2779
                      },
                      "prefix": true,
                      "start": 2770,
                      "end": 2779
                    },
                    "start": 2769,
                    "end": 2780
                  },
                  "start": 2685,
                  "end": 2780
                }
              ],
              "start": 2668,
              "end": 2781
            },
            "start": 2662,
            "end": 2782
          }
        ],
        "start": 2658,
        "end": 2784
      },
      "alternate": null,
      "start": 2628,
      "end": 2784
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myobj2",
            "start": 2802,
            "end": 2808
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "ToNumber",
                  "start": 2829,
                  "end": 2837
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 12345,
                          "raw": "12345",
                          "start": 2858,
                          "end": 2863
                        },
                        "start": 2851,
                        "end": 2864
                      }
                    ],
                    "start": 2850,
                    "end": 2865
                  },
                  "expression": false,
                  "start": 2840,
                  "end": 2865
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2829,
                "end": 2865
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 2884,
                  "end": 2892
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "67890",
                          "raw": "\"67890\"",
                          "start": 2913,
                          "end": 2920
                        },
                        "start": 2906,
                        "end": 2921
                      }
                    ],
                    "start": 2905,
                    "end": 2922
                  },
                  "expression": false,
                  "start": 2895,
                  "end": 2922
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2884,
                "end": 2922
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "valueOf",
                  "start": 2940,
                  "end": 2947
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "9876543210",
                          "raw": "\"9876543210\"",
                          "start": 2969,
                          "end": 2981
                        },
                        "start": 2962,
                        "end": 2982
                      }
                    ],
                    "start": 2961,
                    "end": 2983
                  },
                  "expression": false,
                  "start": 2951,
                  "end": 2983
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2940,
                "end": 2983
              }
            ],
            "start": 2811,
            "end": 2998
          },
          "start": 2802,
          "end": 2998
        }
      ],
      "start": 2798,
      "end": 2999
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "Identifier",
              "name": "myobj2",
              "start": 3007,
              "end": 3013
            },
            "start": 3006,
            "end": 3014
          },
          "prefix": true,
          "start": 3005,
          "end": 3014
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 9876543210,
          "raw": "9876543210",
          "start": 3019,
          "end": 3029
        },
        "start": 3005,
        "end": 3029
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 3044,
                "end": 3056
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#12: +(myobj2) calls ToPrimitive with hint +. Exptected: 9876543210. Actual: ",
                    "raw": "\"#12: +(myobj2) calls ToPrimitive with hint +. Exptected: 9876543210. Actual: \"",
                    "start": 3057,
                    "end": 3136
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "Identifier",
                          "name": "myobj2",
                          "start": 3142,
                          "end": 3148
                        },
                        "start": 3141,
                        "end": 3149
                      },
                      "prefix": true,
                      "start": 3140,
                      "end": 3149
                    },
                    "start": 3139,
                    "end": 3150
                  },
                  "start": 3057,
                  "end": 3150
                }
              ],
              "start": 3040,
              "end": 3151
            },
            "start": 3034,
            "end": 3152
          }
        ],
        "start": 3030,
        "end": 3154
      },
      "alternate": null,
      "start": 3001,
      "end": 3154
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myobj3",
            "start": 3173,
            "end": 3179
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "ToNumber",
                  "start": 3200,
                  "end": 3208
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 12345,
                          "raw": "12345",
                          "start": 3229,
                          "end": 3234
                        },
                        "start": 3222,
                        "end": 3235
                      }
                    ],
                    "start": 3221,
                    "end": 3236
                  },
                  "expression": false,
                  "start": 3211,
                  "end": 3236
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 3200,
                "end": 3236
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 3255,
                  "end": 3263
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "[object MyObj]",
                          "raw": "\"[object MyObj]\"",
                          "start": 3284,
                          "end": 3300
                        },
                        "start": 3277,
                        "end": 3301
                      }
                    ],
                    "start": 3276,
                    "end": 3302
                  },
                  "expression": false,
                  "start": 3266,
                  "end": 3302
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 3255,
                "end": 3302
              }
            ],
            "start": 3182,
            "end": 3317
          },
          "start": 3173,
          "end": 3317
        }
      ],
      "start": 3169,
      "end": 3318
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 3324,
            "end": 3329
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "Identifier",
                  "name": "myobj3",
                  "start": 3332,
                  "end": 3338
                },
                "start": 3331,
                "end": 3339
              },
              "prefix": true,
              "start": 3330,
              "end": 3339
            }
          ],
          "optional": false,
          "start": 3324,
          "end": 3340
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 3345,
          "end": 3349
        },
        "start": 3324,
        "end": 3349
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 3364,
                "end": 3376
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#13: +(myobj3) calls ToPrimitive with hint +. Exptected: Not-a-Number. Actual: ",
                    "raw": "\"#13: +(myobj3) calls ToPrimitive with hint +. Exptected: Not-a-Number. Actual: \"",
                    "start": 3377,
                    "end": 3458
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "Identifier",
                          "name": "myobj3",
                          "start": 3464,
                          "end": 3470
                        },
                        "start": 3463,
                        "end": 3471
                      },
                      "prefix": true,
                      "start": 3462,
                      "end": 3471
                    },
                    "start": 3461,
                    "end": 3472
                  },
                  "start": 3377,
                  "end": 3472
                }
              ],
              "start": 3360,
              "end": 3473
            },
            "start": 3354,
            "end": 3474
          }
        ],
        "start": 3350,
        "end": 3476
      },
      "alternate": null,
      "start": 3320,
      "end": 3476
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myobj4",
            "start": 3494,
            "end": 3500
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "ToNumber",
                  "start": 3521,
                  "end": 3529
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 12345,
                          "raw": "12345",
                          "start": 3550,
                          "end": 3555
                        },
                        "start": 3543,
                        "end": 3556
                      }
                    ],
                    "start": 3542,
                    "end": 3557
                  },
                  "expression": false,
                  "start": 3532,
                  "end": 3557
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 3521,
                "end": 3557
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 3576,
                  "end": 3584
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "67890",
                          "raw": "\"67890\"",
                          "start": 3605,
                          "end": 3612
                        },
                        "start": 3598,
                        "end": 3613
                      }
                    ],
                    "start": 3597,
                    "end": 3614
                  },
                  "expression": false,
                  "start": 3587,
                  "end": 3614
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 3576,
                "end": 3614
              }
            ],
            "start": 3503,
            "end": 3629
          },
          "start": 3494,
          "end": 3629
        }
      ],
      "start": 3490,
      "end": 3630
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "Identifier",
              "name": "myobj4",
              "start": 3638,
              "end": 3644
            },
            "start": 3637,
            "end": 3645
          },
          "prefix": true,
          "start": 3636,
          "end": 3645
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 67890,
          "raw": "67890",
          "start": 3650,
          "end": 3655
        },
        "start": 3636,
        "end": 3655
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 3670,
                "end": 3682
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#14: +(myobj4) calls ToPrimitive with hint +. Exptected: 67890. Actual: ",
                    "raw": "\"#14: +(myobj4) calls ToPrimitive with hint +. Exptected: 67890. Actual: \"",
                    "start": 3683,
                    "end": 3757
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "Identifier",
                          "name": "myobj4",
                          "start": 3763,
                          "end": 3769
                        },
                        "start": 3762,
                        "end": 3770
                      },
                      "prefix": true,
                      "start": 3761,
                      "end": 3770
                    },
                    "start": 3760,
                    "end": 3771
                  },
                  "start": 3683,
                  "end": 3771
                }
              ],
              "start": 3666,
              "end": 3772
            },
            "start": 3660,
            "end": 3773
          }
        ],
        "start": 3656,
        "end": 3775
      },
      "alternate": null,
      "start": 3632,
      "end": 3775
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myobj5",
            "start": 3793,
            "end": 3799
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "ToNumber",
                  "start": 3820,
                  "end": 3828
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 12345,
                          "raw": "12345",
                          "start": 3849,
                          "end": 3854
                        },
                        "start": 3842,
                        "end": 3855
                      }
                    ],
                    "start": 3841,
                    "end": 3856
                  },
                  "expression": false,
                  "start": 3831,
                  "end": 3856
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 3820,
                "end": 3856
              }
            ],
            "start": 3802,
            "end": 3871
          },
          "start": 3793,
          "end": 3871
        }
      ],
      "start": 3789,
      "end": 3872
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 3878,
            "end": 3883
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "Identifier",
                  "name": "myobj5",
                  "start": 3886,
                  "end": 3892
                },
                "start": 3885,
                "end": 3893
              },
              "prefix": true,
              "start": 3884,
              "end": 3893
            }
          ],
          "optional": false,
          "start": 3878,
          "end": 3894
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 3899,
          "end": 3903
        },
        "start": 3878,
        "end": 3903
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 3918,
                "end": 3930
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#15: +(myobj5) calls ToPrimitive with hint +. Exptected: 12345. Actual: ",
                    "raw": "\"#15: +(myobj5) calls ToPrimitive with hint +. Exptected: 12345. Actual: \"",
                    "start": 3931,
                    "end": 4005
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "+",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "Identifier",
                          "name": "myobj5",
                          "start": 4011,
                          "end": 4017
                        },
                        "start": 4010,
                        "end": 4018
                      },
                      "prefix": true,
                      "start": 4009,
                      "end": 4018
                    },
                    "start": 4008,
                    "end": 4019
                  },
                  "start": 3931,
                  "end": 4019
                }
              ],
              "start": 3914,
              "end": 4020
            },
            "start": 3908,
            "end": 4021
          }
        ],
        "start": 3904,
        "end": 4023
      },
      "alternate": null,
      "start": 3874,
      "end": 4023
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 4024
}