{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 266,
            "end": 272
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 273,
            "end": 282
          },
          "optional": false,
          "computed": false,
          "start": 266,
          "end": 282
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 286,
              "end": 305
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 308,
              "end": 327
            },
            "start": 286,
            "end": 327
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 331,
            "end": 335
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / 0xFEDCBA9876543210n) is 0x1n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0xFEDCBA9876543210n) is 0x1n'",
            "start": 339,
            "end": 406
          }
        ],
        "optional": false,
        "start": 266,
        "end": 408
      },
      "start": 266,
      "end": 409
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 411,
            "end": 417
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 418,
            "end": 427
          },
          "optional": false,
          "computed": false,
          "start": 411,
          "end": 427
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 431,
              "end": 450
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 453,
              "end": 472
            },
            "start": 431,
            "end": 472
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 476,
            "end": 480
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / 0xFEDCBA987654320Fn) is 0x1n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0xFEDCBA987654320Fn) is 0x1n'",
            "start": 484,
            "end": 551
          }
        ],
        "optional": false,
        "start": 411,
        "end": 553
      },
      "start": 411,
      "end": 554
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 556,
            "end": 562
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 563,
            "end": 572
          },
          "optional": false,
          "computed": false,
          "start": 556,
          "end": 572
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 576,
              "end": 595
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 598,
              "end": 609
            },
            "start": 576,
            "end": 609
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x100000000n",
            "bigint": "4294967296",
            "start": 613,
            "end": 625
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / 0xFEDCBA98n) is 0x100000000n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0xFEDCBA98n) is 0x100000000n'",
            "start": 629,
            "end": 696
          }
        ],
        "optional": false,
        "start": 556,
        "end": 698
      },
      "start": 556,
      "end": 699
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 701,
            "end": 707
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 708,
            "end": 717
          },
          "optional": false,
          "computed": false,
          "start": 701,
          "end": 717
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 721,
              "end": 740
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 743,
              "end": 754
            },
            "start": 721,
            "end": 754
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x100000001n",
            "bigint": "4294967297",
            "start": 758,
            "end": 770
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / 0xFEDCBA97n) is 0x100000001n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0xFEDCBA97n) is 0x100000001n'",
            "start": 774,
            "end": 841
          }
        ],
        "optional": false,
        "start": 701,
        "end": 843
      },
      "start": 701,
      "end": 844
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 846,
            "end": 852
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 853,
            "end": 862
          },
          "optional": false,
          "computed": false,
          "start": 846,
          "end": 862
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 866,
              "end": 885
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 888,
              "end": 895
            },
            "start": 866,
            "end": 895
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xE0042813BE5DCn",
            "bigint": "3940935309977052",
            "start": 899,
            "end": 915
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / 0x1234n) is 0xE0042813BE5DCn",
            "raw": "'The result of (0xFEDCBA9876543210n / 0x1234n) is 0xE0042813BE5DCn'",
            "start": 919,
            "end": 986
          }
        ],
        "optional": false,
        "start": 846,
        "end": 988
      },
      "start": 846,
      "end": 989
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 991,
            "end": 997
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 998,
            "end": 1007
          },
          "optional": false,
          "computed": false,
          "start": 991,
          "end": 1007
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 1011,
              "end": 1030
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 1033,
              "end": 1037
            },
            "start": 1011,
            "end": 1037
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x54F43E32D21C10B0n",
            "bigint": "6121586181497688240",
            "start": 1041,
            "end": 1060
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / 0x3n) is 0x54F43E32D21C10B0n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0x3n) is 0x54F43E32D21C10B0n'",
            "start": 1064,
            "end": 1131
          }
        ],
        "optional": false,
        "start": 991,
        "end": 1133
      },
      "start": 991,
      "end": 1134
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1136,
            "end": 1142
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1143,
            "end": 1152
          },
          "optional": false,
          "computed": false,
          "start": 1136,
          "end": 1152
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 1156,
              "end": 1175
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 1178,
              "end": 1182
            },
            "start": 1156,
            "end": 1182
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x7F6E5D4C3B2A1908n",
            "bigint": "9182379272246532360",
            "start": 1186,
            "end": 1205
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / 0x2n) is 0x7F6E5D4C3B2A1908n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0x2n) is 0x7F6E5D4C3B2A1908n'",
            "start": 1209,
            "end": 1276
          }
        ],
        "optional": false,
        "start": 1136,
        "end": 1278
      },
      "start": 1136,
      "end": 1279
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1281,
            "end": 1287
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1288,
            "end": 1297
          },
          "optional": false,
          "computed": false,
          "start": 1281,
          "end": 1297
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 1301,
              "end": 1320
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 1323,
              "end": 1327
            },
            "start": 1301,
            "end": 1327
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xFEDCBA9876543210n",
            "bigint": "18364758544493064720",
            "start": 1331,
            "end": 1350
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / 0x1n) is 0xFEDCBA9876543210n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0x1n) is 0xFEDCBA9876543210n'",
            "start": 1354,
            "end": 1421
          }
        ],
        "optional": false,
        "start": 1281,
        "end": 1423
      },
      "start": 1281,
      "end": 1424
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1426,
            "end": 1432
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1433,
            "end": 1442
          },
          "optional": false,
          "computed": false,
          "start": 1426,
          "end": 1442
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 1446,
              "end": 1465
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 1469,
                "end": 1473
              },
              "prefix": true,
              "start": 1468,
              "end": 1473
            },
            "start": 1446,
            "end": 1473
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 1478,
              "end": 1497
            },
            "prefix": true,
            "start": 1477,
            "end": 1497
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / -0x1n) is -0xFEDCBA9876543210n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0x1n) is -0xFEDCBA9876543210n'",
            "start": 1501,
            "end": 1570
          }
        ],
        "optional": false,
        "start": 1426,
        "end": 1572
      },
      "start": 1426,
      "end": 1573
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1575,
            "end": 1581
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1582,
            "end": 1591
          },
          "optional": false,
          "computed": false,
          "start": 1575,
          "end": 1591
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 1595,
              "end": 1614
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 1618,
                "end": 1622
              },
              "prefix": true,
              "start": 1617,
              "end": 1622
            },
            "start": 1595,
            "end": 1622
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x7F6E5D4C3B2A1908n",
              "bigint": "9182379272246532360",
              "start": 1627,
              "end": 1646
            },
            "prefix": true,
            "start": 1626,
            "end": 1646
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / -0x2n) is -0x7F6E5D4C3B2A1908n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0x2n) is -0x7F6E5D4C3B2A1908n'",
            "start": 1650,
            "end": 1719
          }
        ],
        "optional": false,
        "start": 1575,
        "end": 1721
      },
      "start": 1575,
      "end": 1722
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1724,
            "end": 1730
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1731,
            "end": 1740
          },
          "optional": false,
          "computed": false,
          "start": 1724,
          "end": 1740
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 1744,
              "end": 1763
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 1767,
                "end": 1771
              },
              "prefix": true,
              "start": 1766,
              "end": 1771
            },
            "start": 1744,
            "end": 1771
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x54F43E32D21C10B0n",
              "bigint": "6121586181497688240",
              "start": 1776,
              "end": 1795
            },
            "prefix": true,
            "start": 1775,
            "end": 1795
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / -0x3n) is -0x54F43E32D21C10B0n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0x3n) is -0x54F43E32D21C10B0n'",
            "start": 1799,
            "end": 1868
          }
        ],
        "optional": false,
        "start": 1724,
        "end": 1870
      },
      "start": 1724,
      "end": 1871
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1873,
            "end": 1879
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1880,
            "end": 1889
          },
          "optional": false,
          "computed": false,
          "start": 1873,
          "end": 1889
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 1893,
              "end": 1912
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 1916,
                "end": 1923
              },
              "prefix": true,
              "start": 1915,
              "end": 1923
            },
            "start": 1893,
            "end": 1923
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xE0042813BE5DCn",
              "bigint": "3940935309977052",
              "start": 1928,
              "end": 1944
            },
            "prefix": true,
            "start": 1927,
            "end": 1944
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / -0x1234n) is -0xE0042813BE5DCn",
            "raw": "'The result of (0xFEDCBA9876543210n / -0x1234n) is -0xE0042813BE5DCn'",
            "start": 1948,
            "end": 2017
          }
        ],
        "optional": false,
        "start": 1873,
        "end": 2019
      },
      "start": 1873,
      "end": 2020
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2022,
            "end": 2028
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2029,
            "end": 2038
          },
          "optional": false,
          "computed": false,
          "start": 2022,
          "end": 2038
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 2042,
              "end": 2061
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 2065,
                "end": 2076
              },
              "prefix": true,
              "start": 2064,
              "end": 2076
            },
            "start": 2042,
            "end": 2076
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x100000001n",
              "bigint": "4294967297",
              "start": 2081,
              "end": 2093
            },
            "prefix": true,
            "start": 2080,
            "end": 2093
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / -0xFEDCBA97n) is -0x100000001n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0xFEDCBA97n) is -0x100000001n'",
            "start": 2097,
            "end": 2166
          }
        ],
        "optional": false,
        "start": 2022,
        "end": 2168
      },
      "start": 2022,
      "end": 2169
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2171,
            "end": 2177
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2178,
            "end": 2187
          },
          "optional": false,
          "computed": false,
          "start": 2171,
          "end": 2187
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 2191,
              "end": 2210
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 2214,
                "end": 2225
              },
              "prefix": true,
              "start": 2213,
              "end": 2225
            },
            "start": 2191,
            "end": 2225
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x100000000n",
              "bigint": "4294967296",
              "start": 2230,
              "end": 2242
            },
            "prefix": true,
            "start": 2229,
            "end": 2242
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / -0xFEDCBA98n) is -0x100000000n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0xFEDCBA98n) is -0x100000000n'",
            "start": 2246,
            "end": 2315
          }
        ],
        "optional": false,
        "start": 2171,
        "end": 2317
      },
      "start": 2171,
      "end": 2318
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2320,
            "end": 2326
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2327,
            "end": 2336
          },
          "optional": false,
          "computed": false,
          "start": 2320,
          "end": 2336
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 2340,
              "end": 2359
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 2363,
                "end": 2382
              },
              "prefix": true,
              "start": 2362,
              "end": 2382
            },
            "start": 2340,
            "end": 2382
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 2387,
              "end": 2391
            },
            "prefix": true,
            "start": 2386,
            "end": 2391
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / -0xFEDCBA987654320Fn) is -0x1n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0xFEDCBA987654320Fn) is -0x1n'",
            "start": 2395,
            "end": 2464
          }
        ],
        "optional": false,
        "start": 2320,
        "end": 2466
      },
      "start": 2320,
      "end": 2467
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2469,
            "end": 2475
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2476,
            "end": 2485
          },
          "optional": false,
          "computed": false,
          "start": 2469,
          "end": 2485
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 2489,
              "end": 2508
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 2512,
                "end": 2531
              },
              "prefix": true,
              "start": 2511,
              "end": 2531
            },
            "start": 2489,
            "end": 2531
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 2536,
              "end": 2540
            },
            "prefix": true,
            "start": 2535,
            "end": 2540
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA9876543210n / -0xFEDCBA9876543210n) is -0x1n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0xFEDCBA9876543210n) is -0x1n'",
            "start": 2544,
            "end": 2613
          }
        ],
        "optional": false,
        "start": 2469,
        "end": 2615
      },
      "start": 2469,
      "end": 2616
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2618,
            "end": 2624
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2625,
            "end": 2634
          },
          "optional": false,
          "computed": false,
          "start": 2618,
          "end": 2634
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 2638,
              "end": 2657
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 2660,
              "end": 2679
            },
            "start": 2638,
            "end": 2679
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 2683,
            "end": 2687
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 2691,
            "end": 2758
          }
        ],
        "optional": false,
        "start": 2618,
        "end": 2760
      },
      "start": 2618,
      "end": 2761
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2763,
            "end": 2769
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2770,
            "end": 2779
          },
          "optional": false,
          "computed": false,
          "start": 2763,
          "end": 2779
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 2783,
              "end": 2802
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 2805,
              "end": 2824
            },
            "start": 2783,
            "end": 2824
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 2828,
            "end": 2832
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / 0xFEDCBA987654320Fn) is 0x1n",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0xFEDCBA987654320Fn) is 0x1n'",
            "start": 2836,
            "end": 2903
          }
        ],
        "optional": false,
        "start": 2763,
        "end": 2905
      },
      "start": 2763,
      "end": 2906
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2908,
            "end": 2914
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2915,
            "end": 2924
          },
          "optional": false,
          "computed": false,
          "start": 2908,
          "end": 2924
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 2928,
              "end": 2947
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 2950,
              "end": 2961
            },
            "start": 2928,
            "end": 2961
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x100000000n",
            "bigint": "4294967296",
            "start": 2965,
            "end": 2977
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / 0xFEDCBA98n) is 0x100000000n",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0xFEDCBA98n) is 0x100000000n'",
            "start": 2981,
            "end": 3048
          }
        ],
        "optional": false,
        "start": 2908,
        "end": 3050
      },
      "start": 2908,
      "end": 3051
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3053,
            "end": 3059
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3060,
            "end": 3069
          },
          "optional": false,
          "computed": false,
          "start": 3053,
          "end": 3069
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 3073,
              "end": 3092
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 3095,
              "end": 3106
            },
            "start": 3073,
            "end": 3106
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x100000001n",
            "bigint": "4294967297",
            "start": 3110,
            "end": 3122
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / 0xFEDCBA97n) is 0x100000001n",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0xFEDCBA97n) is 0x100000001n'",
            "start": 3126,
            "end": 3193
          }
        ],
        "optional": false,
        "start": 3053,
        "end": 3195
      },
      "start": 3053,
      "end": 3196
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3198,
            "end": 3204
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3205,
            "end": 3214
          },
          "optional": false,
          "computed": false,
          "start": 3198,
          "end": 3214
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 3218,
              "end": 3237
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 3240,
              "end": 3247
            },
            "start": 3218,
            "end": 3247
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xE0042813BE5DCn",
            "bigint": "3940935309977052",
            "start": 3251,
            "end": 3267
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / 0x1234n) is 0xE0042813BE5DCn",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0x1234n) is 0xE0042813BE5DCn'",
            "start": 3271,
            "end": 3338
          }
        ],
        "optional": false,
        "start": 3198,
        "end": 3340
      },
      "start": 3198,
      "end": 3341
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3343,
            "end": 3349
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3350,
            "end": 3359
          },
          "optional": false,
          "computed": false,
          "start": 3343,
          "end": 3359
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 3363,
              "end": 3382
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 3385,
              "end": 3389
            },
            "start": 3363,
            "end": 3389
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x54F43E32D21C10AFn",
            "bigint": "6121586181497688239",
            "start": 3393,
            "end": 3412
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / 0x3n) is 0x54F43E32D21C10AFn",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0x3n) is 0x54F43E32D21C10AFn'",
            "start": 3416,
            "end": 3483
          }
        ],
        "optional": false,
        "start": 3343,
        "end": 3485
      },
      "start": 3343,
      "end": 3486
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3488,
            "end": 3494
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3495,
            "end": 3504
          },
          "optional": false,
          "computed": false,
          "start": 3488,
          "end": 3504
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 3508,
              "end": 3527
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 3530,
              "end": 3534
            },
            "start": 3508,
            "end": 3534
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x7F6E5D4C3B2A1907n",
            "bigint": "9182379272246532359",
            "start": 3538,
            "end": 3557
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / 0x2n) is 0x7F6E5D4C3B2A1907n",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0x2n) is 0x7F6E5D4C3B2A1907n'",
            "start": 3561,
            "end": 3628
          }
        ],
        "optional": false,
        "start": 3488,
        "end": 3630
      },
      "start": 3488,
      "end": 3631
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3633,
            "end": 3639
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3640,
            "end": 3649
          },
          "optional": false,
          "computed": false,
          "start": 3633,
          "end": 3649
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 3653,
              "end": 3672
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 3675,
              "end": 3679
            },
            "start": 3653,
            "end": 3679
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xFEDCBA987654320Fn",
            "bigint": "18364758544493064719",
            "start": 3683,
            "end": 3702
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / 0x1n) is 0xFEDCBA987654320Fn",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0x1n) is 0xFEDCBA987654320Fn'",
            "start": 3706,
            "end": 3773
          }
        ],
        "optional": false,
        "start": 3633,
        "end": 3775
      },
      "start": 3633,
      "end": 3776
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3778,
            "end": 3784
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3785,
            "end": 3794
          },
          "optional": false,
          "computed": false,
          "start": 3778,
          "end": 3794
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 3798,
              "end": 3817
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 3821,
                "end": 3825
              },
              "prefix": true,
              "start": 3820,
              "end": 3825
            },
            "start": 3798,
            "end": 3825
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 3830,
              "end": 3849
            },
            "prefix": true,
            "start": 3829,
            "end": 3849
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / -0x1n) is -0xFEDCBA987654320Fn",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0x1n) is -0xFEDCBA987654320Fn'",
            "start": 3853,
            "end": 3922
          }
        ],
        "optional": false,
        "start": 3778,
        "end": 3924
      },
      "start": 3778,
      "end": 3925
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3927,
            "end": 3933
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3934,
            "end": 3943
          },
          "optional": false,
          "computed": false,
          "start": 3927,
          "end": 3943
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 3947,
              "end": 3966
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 3970,
                "end": 3974
              },
              "prefix": true,
              "start": 3969,
              "end": 3974
            },
            "start": 3947,
            "end": 3974
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x7F6E5D4C3B2A1907n",
              "bigint": "9182379272246532359",
              "start": 3979,
              "end": 3998
            },
            "prefix": true,
            "start": 3978,
            "end": 3998
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / -0x2n) is -0x7F6E5D4C3B2A1907n",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0x2n) is -0x7F6E5D4C3B2A1907n'",
            "start": 4002,
            "end": 4071
          }
        ],
        "optional": false,
        "start": 3927,
        "end": 4073
      },
      "start": 3927,
      "end": 4074
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 4076,
            "end": 4082
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 4083,
            "end": 4092
          },
          "optional": false,
          "computed": false,
          "start": 4076,
          "end": 4092
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 4096,
              "end": 4115
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 4119,
                "end": 4123
              },
              "prefix": true,
              "start": 4118,
              "end": 4123
            },
            "start": 4096,
            "end": 4123
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x54F43E32D21C10AFn",
              "bigint": "6121586181497688239",
              "start": 4128,
              "end": 4147
            },
            "prefix": true,
            "start": 4127,
            "end": 4147
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / -0x3n) is -0x54F43E32D21C10AFn",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0x3n) is -0x54F43E32D21C10AFn'",
            "start": 4151,
            "end": 4220
          }
        ],
        "optional": false,
        "start": 4076,
        "end": 4222
      },
      "start": 4076,
      "end": 4223
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 4225,
            "end": 4231
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 4232,
            "end": 4241
          },
          "optional": false,
          "computed": false,
          "start": 4225,
          "end": 4241
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 4245,
              "end": 4264
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 4268,
                "end": 4275
              },
              "prefix": true,
              "start": 4267,
              "end": 4275
            },
            "start": 4245,
            "end": 4275
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xE0042813BE5DCn",
              "bigint": "3940935309977052",
              "start": 4280,
              "end": 4296
            },
            "prefix": true,
            "start": 4279,
            "end": 4296
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / -0x1234n) is -0xE0042813BE5DCn",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0x1234n) is -0xE0042813BE5DCn'",
            "start": 4300,
            "end": 4369
          }
        ],
        "optional": false,
        "start": 4225,
        "end": 4371
      },
      "start": 4225,
      "end": 4372
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 4374,
            "end": 4380
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 4381,
            "end": 4390
          },
          "optional": false,
          "computed": false,
          "start": 4374,
          "end": 4390
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 4394,
              "end": 4413
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 4417,
                "end": 4428
              },
              "prefix": true,
              "start": 4416,
              "end": 4428
            },
            "start": 4394,
            "end": 4428
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x100000001n",
              "bigint": "4294967297",
              "start": 4433,
              "end": 4445
            },
            "prefix": true,
            "start": 4432,
            "end": 4445
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / -0xFEDCBA97n) is -0x100000001n",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0xFEDCBA97n) is -0x100000001n'",
            "start": 4449,
            "end": 4518
          }
        ],
        "optional": false,
        "start": 4374,
        "end": 4520
      },
      "start": 4374,
      "end": 4521
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 4523,
            "end": 4529
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 4530,
            "end": 4539
          },
          "optional": false,
          "computed": false,
          "start": 4523,
          "end": 4539
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 4543,
              "end": 4562
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 4566,
                "end": 4577
              },
              "prefix": true,
              "start": 4565,
              "end": 4577
            },
            "start": 4543,
            "end": 4577
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x100000000n",
              "bigint": "4294967296",
              "start": 4582,
              "end": 4594
            },
            "prefix": true,
            "start": 4581,
            "end": 4594
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / -0xFEDCBA98n) is -0x100000000n",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0xFEDCBA98n) is -0x100000000n'",
            "start": 4598,
            "end": 4667
          }
        ],
        "optional": false,
        "start": 4523,
        "end": 4669
      },
      "start": 4523,
      "end": 4670
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 4672,
            "end": 4678
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 4679,
            "end": 4688
          },
          "optional": false,
          "computed": false,
          "start": 4672,
          "end": 4688
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 4692,
              "end": 4711
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 4715,
                "end": 4734
              },
              "prefix": true,
              "start": 4714,
              "end": 4734
            },
            "start": 4692,
            "end": 4734
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 4739,
              "end": 4743
            },
            "prefix": true,
            "start": 4738,
            "end": 4743
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / -0xFEDCBA987654320Fn) is -0x1n",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0xFEDCBA987654320Fn) is -0x1n'",
            "start": 4747,
            "end": 4816
          }
        ],
        "optional": false,
        "start": 4672,
        "end": 4818
      },
      "start": 4672,
      "end": 4819
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 4821,
            "end": 4827
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 4828,
            "end": 4837
          },
          "optional": false,
          "computed": false,
          "start": 4821,
          "end": 4837
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 4841,
              "end": 4860
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 4864,
                "end": 4883
              },
              "prefix": true,
              "start": 4863,
              "end": 4883
            },
            "start": 4841,
            "end": 4883
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 4887,
            "end": 4891
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA987654320Fn / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 4895,
            "end": 4963
          }
        ],
        "optional": false,
        "start": 4821,
        "end": 4965
      },
      "start": 4821,
      "end": 4966
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 4968,
            "end": 4974
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 4975,
            "end": 4984
          },
          "optional": false,
          "computed": false,
          "start": 4968,
          "end": 4984
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 4988,
              "end": 4999
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 5002,
              "end": 5021
            },
            "start": 4988,
            "end": 5021
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 5025,
            "end": 5029
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0xFEDCBA98n / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 5033,
            "end": 5092
          }
        ],
        "optional": false,
        "start": 4968,
        "end": 5094
      },
      "start": 4968,
      "end": 5095
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5097,
            "end": 5103
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5104,
            "end": 5113
          },
          "optional": false,
          "computed": false,
          "start": 5097,
          "end": 5113
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 5117,
              "end": 5128
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 5131,
              "end": 5150
            },
            "start": 5117,
            "end": 5150
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 5154,
            "end": 5158
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0xFEDCBA98n / 0xFEDCBA987654320Fn) is 0x0n'",
            "start": 5162,
            "end": 5221
          }
        ],
        "optional": false,
        "start": 5097,
        "end": 5223
      },
      "start": 5097,
      "end": 5224
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5226,
            "end": 5232
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5233,
            "end": 5242
          },
          "optional": false,
          "computed": false,
          "start": 5226,
          "end": 5242
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 5246,
              "end": 5257
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 5260,
              "end": 5271
            },
            "start": 5246,
            "end": 5271
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 5275,
            "end": 5279
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / 0xFEDCBA98n) is 0x1n",
            "raw": "'The result of (0xFEDCBA98n / 0xFEDCBA98n) is 0x1n'",
            "start": 5283,
            "end": 5334
          }
        ],
        "optional": false,
        "start": 5226,
        "end": 5336
      },
      "start": 5226,
      "end": 5337
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5339,
            "end": 5345
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5346,
            "end": 5355
          },
          "optional": false,
          "computed": false,
          "start": 5339,
          "end": 5355
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 5359,
              "end": 5370
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 5373,
              "end": 5384
            },
            "start": 5359,
            "end": 5384
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 5388,
            "end": 5392
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / 0xFEDCBA97n) is 0x1n",
            "raw": "'The result of (0xFEDCBA98n / 0xFEDCBA97n) is 0x1n'",
            "start": 5396,
            "end": 5447
          }
        ],
        "optional": false,
        "start": 5339,
        "end": 5449
      },
      "start": 5339,
      "end": 5450
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5452,
            "end": 5458
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5459,
            "end": 5468
          },
          "optional": false,
          "computed": false,
          "start": 5452,
          "end": 5468
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 5472,
              "end": 5483
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 5486,
              "end": 5493
            },
            "start": 5472,
            "end": 5493
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xE0042n",
            "bigint": "917570",
            "start": 5497,
            "end": 5505
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / 0x1234n) is 0xE0042n",
            "raw": "'The result of (0xFEDCBA98n / 0x1234n) is 0xE0042n'",
            "start": 5509,
            "end": 5560
          }
        ],
        "optional": false,
        "start": 5452,
        "end": 5562
      },
      "start": 5452,
      "end": 5563
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5565,
            "end": 5571
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5572,
            "end": 5581
          },
          "optional": false,
          "computed": false,
          "start": 5565,
          "end": 5581
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 5585,
              "end": 5596
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 5599,
              "end": 5603
            },
            "start": 5585,
            "end": 5603
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x54F43E32n",
            "bigint": "1425292850",
            "start": 5607,
            "end": 5618
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / 0x3n) is 0x54F43E32n",
            "raw": "'The result of (0xFEDCBA98n / 0x3n) is 0x54F43E32n'",
            "start": 5622,
            "end": 5673
          }
        ],
        "optional": false,
        "start": 5565,
        "end": 5675
      },
      "start": 5565,
      "end": 5676
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5678,
            "end": 5684
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5685,
            "end": 5694
          },
          "optional": false,
          "computed": false,
          "start": 5678,
          "end": 5694
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 5698,
              "end": 5709
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 5712,
              "end": 5716
            },
            "start": 5698,
            "end": 5716
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x7F6E5D4Cn",
            "bigint": "2137939276",
            "start": 5720,
            "end": 5731
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / 0x2n) is 0x7F6E5D4Cn",
            "raw": "'The result of (0xFEDCBA98n / 0x2n) is 0x7F6E5D4Cn'",
            "start": 5735,
            "end": 5786
          }
        ],
        "optional": false,
        "start": 5678,
        "end": 5788
      },
      "start": 5678,
      "end": 5789
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5791,
            "end": 5797
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5798,
            "end": 5807
          },
          "optional": false,
          "computed": false,
          "start": 5791,
          "end": 5807
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 5811,
              "end": 5822
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 5825,
              "end": 5829
            },
            "start": 5811,
            "end": 5829
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xFEDCBA98n",
            "bigint": "4275878552",
            "start": 5833,
            "end": 5844
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / 0x1n) is 0xFEDCBA98n",
            "raw": "'The result of (0xFEDCBA98n / 0x1n) is 0xFEDCBA98n'",
            "start": 5848,
            "end": 5899
          }
        ],
        "optional": false,
        "start": 5791,
        "end": 5901
      },
      "start": 5791,
      "end": 5902
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5904,
            "end": 5910
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5911,
            "end": 5920
          },
          "optional": false,
          "computed": false,
          "start": 5904,
          "end": 5920
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 5924,
              "end": 5935
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 5939,
                "end": 5943
              },
              "prefix": true,
              "start": 5938,
              "end": 5943
            },
            "start": 5924,
            "end": 5943
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 5948,
              "end": 5959
            },
            "prefix": true,
            "start": 5947,
            "end": 5959
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / -0x1n) is -0xFEDCBA98n",
            "raw": "'The result of (0xFEDCBA98n / -0x1n) is -0xFEDCBA98n'",
            "start": 5963,
            "end": 6016
          }
        ],
        "optional": false,
        "start": 5904,
        "end": 6018
      },
      "start": 5904,
      "end": 6019
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 6021,
            "end": 6027
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 6028,
            "end": 6037
          },
          "optional": false,
          "computed": false,
          "start": 6021,
          "end": 6037
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 6041,
              "end": 6052
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 6056,
                "end": 6060
              },
              "prefix": true,
              "start": 6055,
              "end": 6060
            },
            "start": 6041,
            "end": 6060
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x7F6E5D4Cn",
              "bigint": "2137939276",
              "start": 6065,
              "end": 6076
            },
            "prefix": true,
            "start": 6064,
            "end": 6076
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / -0x2n) is -0x7F6E5D4Cn",
            "raw": "'The result of (0xFEDCBA98n / -0x2n) is -0x7F6E5D4Cn'",
            "start": 6080,
            "end": 6133
          }
        ],
        "optional": false,
        "start": 6021,
        "end": 6135
      },
      "start": 6021,
      "end": 6136
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 6138,
            "end": 6144
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 6145,
            "end": 6154
          },
          "optional": false,
          "computed": false,
          "start": 6138,
          "end": 6154
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 6158,
              "end": 6169
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 6173,
                "end": 6177
              },
              "prefix": true,
              "start": 6172,
              "end": 6177
            },
            "start": 6158,
            "end": 6177
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x54F43E32n",
              "bigint": "1425292850",
              "start": 6182,
              "end": 6193
            },
            "prefix": true,
            "start": 6181,
            "end": 6193
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / -0x3n) is -0x54F43E32n",
            "raw": "'The result of (0xFEDCBA98n / -0x3n) is -0x54F43E32n'",
            "start": 6197,
            "end": 6250
          }
        ],
        "optional": false,
        "start": 6138,
        "end": 6252
      },
      "start": 6138,
      "end": 6253
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 6255,
            "end": 6261
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 6262,
            "end": 6271
          },
          "optional": false,
          "computed": false,
          "start": 6255,
          "end": 6271
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 6275,
              "end": 6286
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 6290,
                "end": 6297
              },
              "prefix": true,
              "start": 6289,
              "end": 6297
            },
            "start": 6275,
            "end": 6297
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xE0042n",
              "bigint": "917570",
              "start": 6302,
              "end": 6310
            },
            "prefix": true,
            "start": 6301,
            "end": 6310
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / -0x1234n) is -0xE0042n",
            "raw": "'The result of (0xFEDCBA98n / -0x1234n) is -0xE0042n'",
            "start": 6314,
            "end": 6367
          }
        ],
        "optional": false,
        "start": 6255,
        "end": 6369
      },
      "start": 6255,
      "end": 6370
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 6372,
            "end": 6378
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 6379,
            "end": 6388
          },
          "optional": false,
          "computed": false,
          "start": 6372,
          "end": 6388
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 6392,
              "end": 6403
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 6407,
                "end": 6418
              },
              "prefix": true,
              "start": 6406,
              "end": 6418
            },
            "start": 6392,
            "end": 6418
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 6423,
              "end": 6427
            },
            "prefix": true,
            "start": 6422,
            "end": 6427
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / -0xFEDCBA97n) is -0x1n",
            "raw": "'The result of (0xFEDCBA98n / -0xFEDCBA97n) is -0x1n'",
            "start": 6431,
            "end": 6484
          }
        ],
        "optional": false,
        "start": 6372,
        "end": 6486
      },
      "start": 6372,
      "end": 6487
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 6489,
            "end": 6495
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 6496,
            "end": 6505
          },
          "optional": false,
          "computed": false,
          "start": 6489,
          "end": 6505
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 6509,
              "end": 6520
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 6524,
                "end": 6535
              },
              "prefix": true,
              "start": 6523,
              "end": 6535
            },
            "start": 6509,
            "end": 6535
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 6540,
              "end": 6544
            },
            "prefix": true,
            "start": 6539,
            "end": 6544
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / -0xFEDCBA98n) is -0x1n",
            "raw": "'The result of (0xFEDCBA98n / -0xFEDCBA98n) is -0x1n'",
            "start": 6548,
            "end": 6601
          }
        ],
        "optional": false,
        "start": 6489,
        "end": 6603
      },
      "start": 6489,
      "end": 6604
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 6606,
            "end": 6612
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 6613,
            "end": 6622
          },
          "optional": false,
          "computed": false,
          "start": 6606,
          "end": 6622
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 6626,
              "end": 6637
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 6641,
                "end": 6660
              },
              "prefix": true,
              "start": 6640,
              "end": 6660
            },
            "start": 6626,
            "end": 6660
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 6664,
            "end": 6668
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0xFEDCBA98n / -0xFEDCBA987654320Fn) is 0x0n'",
            "start": 6672,
            "end": 6732
          }
        ],
        "optional": false,
        "start": 6606,
        "end": 6734
      },
      "start": 6606,
      "end": 6735
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 6737,
            "end": 6743
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 6744,
            "end": 6753
          },
          "optional": false,
          "computed": false,
          "start": 6737,
          "end": 6753
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 6757,
              "end": 6768
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 6772,
                "end": 6791
              },
              "prefix": true,
              "start": 6771,
              "end": 6791
            },
            "start": 6757,
            "end": 6791
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 6795,
            "end": 6799
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA98n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0xFEDCBA98n / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 6803,
            "end": 6863
          }
        ],
        "optional": false,
        "start": 6737,
        "end": 6865
      },
      "start": 6737,
      "end": 6866
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 6868,
            "end": 6874
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 6875,
            "end": 6884
          },
          "optional": false,
          "computed": false,
          "start": 6868,
          "end": 6884
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 6888,
              "end": 6899
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 6902,
              "end": 6921
            },
            "start": 6888,
            "end": 6921
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 6925,
            "end": 6929
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0xFEDCBA97n / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 6933,
            "end": 6992
          }
        ],
        "optional": false,
        "start": 6868,
        "end": 6994
      },
      "start": 6868,
      "end": 6995
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 6997,
            "end": 7003
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 7004,
            "end": 7013
          },
          "optional": false,
          "computed": false,
          "start": 6997,
          "end": 7013
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 7017,
              "end": 7028
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 7031,
              "end": 7050
            },
            "start": 7017,
            "end": 7050
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 7054,
            "end": 7058
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0xFEDCBA97n / 0xFEDCBA987654320Fn) is 0x0n'",
            "start": 7062,
            "end": 7121
          }
        ],
        "optional": false,
        "start": 6997,
        "end": 7123
      },
      "start": 6997,
      "end": 7124
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 7126,
            "end": 7132
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 7133,
            "end": 7142
          },
          "optional": false,
          "computed": false,
          "start": 7126,
          "end": 7142
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 7146,
              "end": 7157
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 7160,
              "end": 7171
            },
            "start": 7146,
            "end": 7171
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 7175,
            "end": 7179
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0xFEDCBA97n / 0xFEDCBA98n) is 0x0n'",
            "start": 7183,
            "end": 7234
          }
        ],
        "optional": false,
        "start": 7126,
        "end": 7236
      },
      "start": 7126,
      "end": 7237
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 7239,
            "end": 7245
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 7246,
            "end": 7255
          },
          "optional": false,
          "computed": false,
          "start": 7239,
          "end": 7255
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 7259,
              "end": 7270
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 7273,
              "end": 7284
            },
            "start": 7259,
            "end": 7284
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 7288,
            "end": 7292
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / 0xFEDCBA97n) is 0x1n",
            "raw": "'The result of (0xFEDCBA97n / 0xFEDCBA97n) is 0x1n'",
            "start": 7296,
            "end": 7347
          }
        ],
        "optional": false,
        "start": 7239,
        "end": 7349
      },
      "start": 7239,
      "end": 7350
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 7352,
            "end": 7358
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 7359,
            "end": 7368
          },
          "optional": false,
          "computed": false,
          "start": 7352,
          "end": 7368
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 7372,
              "end": 7383
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 7386,
              "end": 7393
            },
            "start": 7372,
            "end": 7393
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xE0042n",
            "bigint": "917570",
            "start": 7397,
            "end": 7405
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / 0x1234n) is 0xE0042n",
            "raw": "'The result of (0xFEDCBA97n / 0x1234n) is 0xE0042n'",
            "start": 7409,
            "end": 7460
          }
        ],
        "optional": false,
        "start": 7352,
        "end": 7462
      },
      "start": 7352,
      "end": 7463
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 7465,
            "end": 7471
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 7472,
            "end": 7481
          },
          "optional": false,
          "computed": false,
          "start": 7465,
          "end": 7481
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 7485,
              "end": 7496
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 7499,
              "end": 7503
            },
            "start": 7485,
            "end": 7503
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x54F43E32n",
            "bigint": "1425292850",
            "start": 7507,
            "end": 7518
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / 0x3n) is 0x54F43E32n",
            "raw": "'The result of (0xFEDCBA97n / 0x3n) is 0x54F43E32n'",
            "start": 7522,
            "end": 7573
          }
        ],
        "optional": false,
        "start": 7465,
        "end": 7575
      },
      "start": 7465,
      "end": 7576
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 7578,
            "end": 7584
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 7585,
            "end": 7594
          },
          "optional": false,
          "computed": false,
          "start": 7578,
          "end": 7594
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 7598,
              "end": 7609
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 7612,
              "end": 7616
            },
            "start": 7598,
            "end": 7616
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x7F6E5D4Bn",
            "bigint": "2137939275",
            "start": 7620,
            "end": 7631
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / 0x2n) is 0x7F6E5D4Bn",
            "raw": "'The result of (0xFEDCBA97n / 0x2n) is 0x7F6E5D4Bn'",
            "start": 7635,
            "end": 7686
          }
        ],
        "optional": false,
        "start": 7578,
        "end": 7688
      },
      "start": 7578,
      "end": 7689
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 7691,
            "end": 7697
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 7698,
            "end": 7707
          },
          "optional": false,
          "computed": false,
          "start": 7691,
          "end": 7707
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 7711,
              "end": 7722
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 7725,
              "end": 7729
            },
            "start": 7711,
            "end": 7729
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xFEDCBA97n",
            "bigint": "4275878551",
            "start": 7733,
            "end": 7744
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / 0x1n) is 0xFEDCBA97n",
            "raw": "'The result of (0xFEDCBA97n / 0x1n) is 0xFEDCBA97n'",
            "start": 7748,
            "end": 7799
          }
        ],
        "optional": false,
        "start": 7691,
        "end": 7801
      },
      "start": 7691,
      "end": 7802
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 7804,
            "end": 7810
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 7811,
            "end": 7820
          },
          "optional": false,
          "computed": false,
          "start": 7804,
          "end": 7820
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 7824,
              "end": 7835
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 7839,
                "end": 7843
              },
              "prefix": true,
              "start": 7838,
              "end": 7843
            },
            "start": 7824,
            "end": 7843
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 7848,
              "end": 7859
            },
            "prefix": true,
            "start": 7847,
            "end": 7859
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / -0x1n) is -0xFEDCBA97n",
            "raw": "'The result of (0xFEDCBA97n / -0x1n) is -0xFEDCBA97n'",
            "start": 7863,
            "end": 7916
          }
        ],
        "optional": false,
        "start": 7804,
        "end": 7918
      },
      "start": 7804,
      "end": 7919
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 7921,
            "end": 7927
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 7928,
            "end": 7937
          },
          "optional": false,
          "computed": false,
          "start": 7921,
          "end": 7937
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 7941,
              "end": 7952
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 7956,
                "end": 7960
              },
              "prefix": true,
              "start": 7955,
              "end": 7960
            },
            "start": 7941,
            "end": 7960
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x7F6E5D4Bn",
              "bigint": "2137939275",
              "start": 7965,
              "end": 7976
            },
            "prefix": true,
            "start": 7964,
            "end": 7976
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / -0x2n) is -0x7F6E5D4Bn",
            "raw": "'The result of (0xFEDCBA97n / -0x2n) is -0x7F6E5D4Bn'",
            "start": 7980,
            "end": 8033
          }
        ],
        "optional": false,
        "start": 7921,
        "end": 8035
      },
      "start": 7921,
      "end": 8036
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 8038,
            "end": 8044
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 8045,
            "end": 8054
          },
          "optional": false,
          "computed": false,
          "start": 8038,
          "end": 8054
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 8058,
              "end": 8069
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 8073,
                "end": 8077
              },
              "prefix": true,
              "start": 8072,
              "end": 8077
            },
            "start": 8058,
            "end": 8077
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x54F43E32n",
              "bigint": "1425292850",
              "start": 8082,
              "end": 8093
            },
            "prefix": true,
            "start": 8081,
            "end": 8093
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / -0x3n) is -0x54F43E32n",
            "raw": "'The result of (0xFEDCBA97n / -0x3n) is -0x54F43E32n'",
            "start": 8097,
            "end": 8150
          }
        ],
        "optional": false,
        "start": 8038,
        "end": 8152
      },
      "start": 8038,
      "end": 8153
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 8155,
            "end": 8161
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 8162,
            "end": 8171
          },
          "optional": false,
          "computed": false,
          "start": 8155,
          "end": 8171
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 8175,
              "end": 8186
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 8190,
                "end": 8197
              },
              "prefix": true,
              "start": 8189,
              "end": 8197
            },
            "start": 8175,
            "end": 8197
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xE0042n",
              "bigint": "917570",
              "start": 8202,
              "end": 8210
            },
            "prefix": true,
            "start": 8201,
            "end": 8210
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / -0x1234n) is -0xE0042n",
            "raw": "'The result of (0xFEDCBA97n / -0x1234n) is -0xE0042n'",
            "start": 8214,
            "end": 8267
          }
        ],
        "optional": false,
        "start": 8155,
        "end": 8269
      },
      "start": 8155,
      "end": 8270
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 8272,
            "end": 8278
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 8279,
            "end": 8288
          },
          "optional": false,
          "computed": false,
          "start": 8272,
          "end": 8288
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 8292,
              "end": 8303
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 8307,
                "end": 8318
              },
              "prefix": true,
              "start": 8306,
              "end": 8318
            },
            "start": 8292,
            "end": 8318
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 8323,
              "end": 8327
            },
            "prefix": true,
            "start": 8322,
            "end": 8327
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / -0xFEDCBA97n) is -0x1n",
            "raw": "'The result of (0xFEDCBA97n / -0xFEDCBA97n) is -0x1n'",
            "start": 8331,
            "end": 8384
          }
        ],
        "optional": false,
        "start": 8272,
        "end": 8386
      },
      "start": 8272,
      "end": 8387
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 8389,
            "end": 8395
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 8396,
            "end": 8405
          },
          "optional": false,
          "computed": false,
          "start": 8389,
          "end": 8405
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 8409,
              "end": 8420
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 8424,
                "end": 8435
              },
              "prefix": true,
              "start": 8423,
              "end": 8435
            },
            "start": 8409,
            "end": 8435
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 8439,
            "end": 8443
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0xFEDCBA97n / -0xFEDCBA98n) is 0x0n'",
            "start": 8447,
            "end": 8499
          }
        ],
        "optional": false,
        "start": 8389,
        "end": 8501
      },
      "start": 8389,
      "end": 8502
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 8504,
            "end": 8510
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 8511,
            "end": 8520
          },
          "optional": false,
          "computed": false,
          "start": 8504,
          "end": 8520
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 8524,
              "end": 8535
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 8539,
                "end": 8558
              },
              "prefix": true,
              "start": 8538,
              "end": 8558
            },
            "start": 8524,
            "end": 8558
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 8562,
            "end": 8566
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0xFEDCBA97n / -0xFEDCBA987654320Fn) is 0x0n'",
            "start": 8570,
            "end": 8630
          }
        ],
        "optional": false,
        "start": 8504,
        "end": 8632
      },
      "start": 8504,
      "end": 8633
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 8635,
            "end": 8641
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 8642,
            "end": 8651
          },
          "optional": false,
          "computed": false,
          "start": 8635,
          "end": 8651
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 8655,
              "end": 8666
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 8670,
                "end": 8689
              },
              "prefix": true,
              "start": 8669,
              "end": 8689
            },
            "start": 8655,
            "end": 8689
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 8693,
            "end": 8697
          },
          {
            "type": "Literal",
            "value": "The result of (0xFEDCBA97n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0xFEDCBA97n / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 8701,
            "end": 8761
          }
        ],
        "optional": false,
        "start": 8635,
        "end": 8763
      },
      "start": 8635,
      "end": 8764
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 8766,
            "end": 8772
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 8773,
            "end": 8782
          },
          "optional": false,
          "computed": false,
          "start": 8766,
          "end": 8782
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 8786,
              "end": 8793
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 8796,
              "end": 8815
            },
            "start": 8786,
            "end": 8815
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 8819,
            "end": 8823
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x1234n / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 8827,
            "end": 8882
          }
        ],
        "optional": false,
        "start": 8766,
        "end": 8884
      },
      "start": 8766,
      "end": 8885
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 8887,
            "end": 8893
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 8894,
            "end": 8903
          },
          "optional": false,
          "computed": false,
          "start": 8887,
          "end": 8903
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 8907,
              "end": 8914
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 8917,
              "end": 8936
            },
            "start": 8907,
            "end": 8936
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 8940,
            "end": 8944
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x1234n / 0xFEDCBA987654320Fn) is 0x0n'",
            "start": 8948,
            "end": 9003
          }
        ],
        "optional": false,
        "start": 8887,
        "end": 9005
      },
      "start": 8887,
      "end": 9006
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 9008,
            "end": 9014
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 9015,
            "end": 9024
          },
          "optional": false,
          "computed": false,
          "start": 9008,
          "end": 9024
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9025,
              "end": 9032
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 9035,
              "end": 9046
            },
            "start": 9025,
            "end": 9046
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 9048,
            "end": 9052
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x1234n / 0xFEDCBA98n) is 0x0n'",
            "start": 9054,
            "end": 9101
          }
        ],
        "optional": false,
        "start": 9008,
        "end": 9102
      },
      "start": 9008,
      "end": 9103
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 9104,
            "end": 9110
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 9111,
            "end": 9120
          },
          "optional": false,
          "computed": false,
          "start": 9104,
          "end": 9120
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9121,
              "end": 9128
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 9131,
              "end": 9142
            },
            "start": 9121,
            "end": 9142
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 9144,
            "end": 9148
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x1234n / 0xFEDCBA97n) is 0x0n'",
            "start": 9150,
            "end": 9197
          }
        ],
        "optional": false,
        "start": 9104,
        "end": 9198
      },
      "start": 9104,
      "end": 9199
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 9200,
            "end": 9206
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 9207,
            "end": 9216
          },
          "optional": false,
          "computed": false,
          "start": 9200,
          "end": 9216
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9217,
              "end": 9224
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9227,
              "end": 9234
            },
            "start": 9217,
            "end": 9234
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 9236,
            "end": 9240
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / 0x1234n) is 0x1n",
            "raw": "'The result of (0x1234n / 0x1234n) is 0x1n'",
            "start": 9242,
            "end": 9285
          }
        ],
        "optional": false,
        "start": 9200,
        "end": 9286
      },
      "start": 9200,
      "end": 9287
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 9288,
            "end": 9294
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 9295,
            "end": 9304
          },
          "optional": false,
          "computed": false,
          "start": 9288,
          "end": 9304
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9305,
              "end": 9312
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 9315,
              "end": 9319
            },
            "start": 9305,
            "end": 9319
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x611n",
            "bigint": "1553",
            "start": 9321,
            "end": 9327
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / 0x3n) is 0x611n",
            "raw": "'The result of (0x1234n / 0x3n) is 0x611n'",
            "start": 9329,
            "end": 9371
          }
        ],
        "optional": false,
        "start": 9288,
        "end": 9372
      },
      "start": 9288,
      "end": 9373
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 9374,
            "end": 9380
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 9381,
            "end": 9390
          },
          "optional": false,
          "computed": false,
          "start": 9374,
          "end": 9390
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9391,
              "end": 9398
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 9401,
              "end": 9405
            },
            "start": 9391,
            "end": 9405
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x91An",
            "bigint": "2330",
            "start": 9407,
            "end": 9413
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / 0x2n) is 0x91An",
            "raw": "'The result of (0x1234n / 0x2n) is 0x91An'",
            "start": 9415,
            "end": 9457
          }
        ],
        "optional": false,
        "start": 9374,
        "end": 9458
      },
      "start": 9374,
      "end": 9459
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 9460,
            "end": 9466
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 9467,
            "end": 9476
          },
          "optional": false,
          "computed": false,
          "start": 9460,
          "end": 9476
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9477,
              "end": 9484
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 9487,
              "end": 9491
            },
            "start": 9477,
            "end": 9491
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1234n",
            "bigint": "4660",
            "start": 9493,
            "end": 9500
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / 0x1n) is 0x1234n",
            "raw": "'The result of (0x1234n / 0x1n) is 0x1234n'",
            "start": 9502,
            "end": 9545
          }
        ],
        "optional": false,
        "start": 9460,
        "end": 9546
      },
      "start": 9460,
      "end": 9547
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 9548,
            "end": 9554
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 9555,
            "end": 9564
          },
          "optional": false,
          "computed": false,
          "start": 9548,
          "end": 9564
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9565,
              "end": 9572
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 9576,
                "end": 9580
              },
              "prefix": true,
              "start": 9575,
              "end": 9580
            },
            "start": 9565,
            "end": 9580
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9583,
              "end": 9590
            },
            "prefix": true,
            "start": 9582,
            "end": 9590
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / -0x1n) is -0x1234n",
            "raw": "'The result of (0x1234n / -0x1n) is -0x1234n'",
            "start": 9592,
            "end": 9637
          }
        ],
        "optional": false,
        "start": 9548,
        "end": 9638
      },
      "start": 9548,
      "end": 9639
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 9640,
            "end": 9646
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 9647,
            "end": 9656
          },
          "optional": false,
          "computed": false,
          "start": 9640,
          "end": 9656
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9657,
              "end": 9664
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 9668,
                "end": 9672
              },
              "prefix": true,
              "start": 9667,
              "end": 9672
            },
            "start": 9657,
            "end": 9672
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x91An",
              "bigint": "2330",
              "start": 9675,
              "end": 9681
            },
            "prefix": true,
            "start": 9674,
            "end": 9681
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / -0x2n) is -0x91An",
            "raw": "'The result of (0x1234n / -0x2n) is -0x91An'",
            "start": 9683,
            "end": 9727
          }
        ],
        "optional": false,
        "start": 9640,
        "end": 9728
      },
      "start": 9640,
      "end": 9729
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 9730,
            "end": 9736
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 9737,
            "end": 9746
          },
          "optional": false,
          "computed": false,
          "start": 9730,
          "end": 9746
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9747,
              "end": 9754
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 9758,
                "end": 9762
              },
              "prefix": true,
              "start": 9757,
              "end": 9762
            },
            "start": 9747,
            "end": 9762
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x611n",
              "bigint": "1553",
              "start": 9765,
              "end": 9771
            },
            "prefix": true,
            "start": 9764,
            "end": 9771
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / -0x3n) is -0x611n",
            "raw": "'The result of (0x1234n / -0x3n) is -0x611n'",
            "start": 9773,
            "end": 9817
          }
        ],
        "optional": false,
        "start": 9730,
        "end": 9818
      },
      "start": 9730,
      "end": 9819
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 9820,
            "end": 9826
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 9827,
            "end": 9836
          },
          "optional": false,
          "computed": false,
          "start": 9820,
          "end": 9836
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9837,
              "end": 9844
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 9848,
                "end": 9855
              },
              "prefix": true,
              "start": 9847,
              "end": 9855
            },
            "start": 9837,
            "end": 9855
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 9858,
              "end": 9862
            },
            "prefix": true,
            "start": 9857,
            "end": 9862
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / -0x1234n) is -0x1n",
            "raw": "'The result of (0x1234n / -0x1234n) is -0x1n'",
            "start": 9864,
            "end": 9909
          }
        ],
        "optional": false,
        "start": 9820,
        "end": 9910
      },
      "start": 9820,
      "end": 9911
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 9912,
            "end": 9918
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 9919,
            "end": 9928
          },
          "optional": false,
          "computed": false,
          "start": 9912,
          "end": 9928
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 9929,
              "end": 9936
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 9940,
                "end": 9951
              },
              "prefix": true,
              "start": 9939,
              "end": 9951
            },
            "start": 9929,
            "end": 9951
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 9953,
            "end": 9957
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x1234n / -0xFEDCBA97n) is 0x0n'",
            "start": 9959,
            "end": 10007
          }
        ],
        "optional": false,
        "start": 9912,
        "end": 10008
      },
      "start": 9912,
      "end": 10009
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 10010,
            "end": 10016
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 10017,
            "end": 10026
          },
          "optional": false,
          "computed": false,
          "start": 10010,
          "end": 10026
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 10027,
              "end": 10034
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 10038,
                "end": 10049
              },
              "prefix": true,
              "start": 10037,
              "end": 10049
            },
            "start": 10027,
            "end": 10049
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 10051,
            "end": 10055
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x1234n / -0xFEDCBA98n) is 0x0n'",
            "start": 10057,
            "end": 10105
          }
        ],
        "optional": false,
        "start": 10010,
        "end": 10106
      },
      "start": 10010,
      "end": 10107
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 10109,
            "end": 10115
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 10116,
            "end": 10125
          },
          "optional": false,
          "computed": false,
          "start": 10109,
          "end": 10125
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 10129,
              "end": 10136
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 10140,
                "end": 10159
              },
              "prefix": true,
              "start": 10139,
              "end": 10159
            },
            "start": 10129,
            "end": 10159
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 10163,
            "end": 10167
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x1234n / -0xFEDCBA987654320Fn) is 0x0n'",
            "start": 10171,
            "end": 10227
          }
        ],
        "optional": false,
        "start": 10109,
        "end": 10229
      },
      "start": 10109,
      "end": 10230
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 10232,
            "end": 10238
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 10239,
            "end": 10248
          },
          "optional": false,
          "computed": false,
          "start": 10232,
          "end": 10248
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 10252,
              "end": 10259
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 10263,
                "end": 10282
              },
              "prefix": true,
              "start": 10262,
              "end": 10282
            },
            "start": 10252,
            "end": 10282
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 10286,
            "end": 10290
          },
          {
            "type": "Literal",
            "value": "The result of (0x1234n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x1234n / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 10294,
            "end": 10350
          }
        ],
        "optional": false,
        "start": 10232,
        "end": 10352
      },
      "start": 10232,
      "end": 10353
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 10355,
            "end": 10361
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 10362,
            "end": 10371
          },
          "optional": false,
          "computed": false,
          "start": 10355,
          "end": 10371
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 10375,
              "end": 10379
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 10382,
              "end": 10401
            },
            "start": 10375,
            "end": 10401
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 10405,
            "end": 10409
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x3n / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 10413,
            "end": 10465
          }
        ],
        "optional": false,
        "start": 10355,
        "end": 10467
      },
      "start": 10355,
      "end": 10468
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 10470,
            "end": 10476
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 10477,
            "end": 10486
          },
          "optional": false,
          "computed": false,
          "start": 10470,
          "end": 10486
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 10490,
              "end": 10494
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 10497,
              "end": 10516
            },
            "start": 10490,
            "end": 10516
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 10520,
            "end": 10524
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x3n / 0xFEDCBA987654320Fn) is 0x0n'",
            "start": 10528,
            "end": 10580
          }
        ],
        "optional": false,
        "start": 10470,
        "end": 10582
      },
      "start": 10470,
      "end": 10583
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 10585,
            "end": 10591
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 10592,
            "end": 10601
          },
          "optional": false,
          "computed": false,
          "start": 10585,
          "end": 10601
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 10602,
              "end": 10606
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 10609,
              "end": 10620
            },
            "start": 10602,
            "end": 10620
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 10622,
            "end": 10626
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x3n / 0xFEDCBA98n) is 0x0n'",
            "start": 10628,
            "end": 10672
          }
        ],
        "optional": false,
        "start": 10585,
        "end": 10673
      },
      "start": 10585,
      "end": 10674
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 10675,
            "end": 10681
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 10682,
            "end": 10691
          },
          "optional": false,
          "computed": false,
          "start": 10675,
          "end": 10691
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 10692,
              "end": 10696
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 10699,
              "end": 10710
            },
            "start": 10692,
            "end": 10710
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 10712,
            "end": 10716
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x3n / 0xFEDCBA97n) is 0x0n'",
            "start": 10718,
            "end": 10762
          }
        ],
        "optional": false,
        "start": 10675,
        "end": 10763
      },
      "start": 10675,
      "end": 10764
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 10765,
            "end": 10771
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 10772,
            "end": 10781
          },
          "optional": false,
          "computed": false,
          "start": 10765,
          "end": 10781
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 10782,
              "end": 10786
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 10789,
              "end": 10796
            },
            "start": 10782,
            "end": 10796
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 10798,
            "end": 10802
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / 0x1234n) is 0x0n",
            "raw": "'The result of (0x3n / 0x1234n) is 0x0n'",
            "start": 10804,
            "end": 10844
          }
        ],
        "optional": false,
        "start": 10765,
        "end": 10845
      },
      "start": 10765,
      "end": 10846
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 10847,
            "end": 10853
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 10854,
            "end": 10863
          },
          "optional": false,
          "computed": false,
          "start": 10847,
          "end": 10863
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 10864,
              "end": 10868
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 10871,
              "end": 10875
            },
            "start": 10864,
            "end": 10875
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 10877,
            "end": 10881
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / 0x3n) is 0x1n",
            "raw": "'The result of (0x3n / 0x3n) is 0x1n'",
            "start": 10883,
            "end": 10920
          }
        ],
        "optional": false,
        "start": 10847,
        "end": 10921
      },
      "start": 10847,
      "end": 10922
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 10923,
            "end": 10929
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 10930,
            "end": 10939
          },
          "optional": false,
          "computed": false,
          "start": 10923,
          "end": 10939
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 10940,
              "end": 10944
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 10947,
              "end": 10951
            },
            "start": 10940,
            "end": 10951
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 10953,
            "end": 10957
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / 0x2n) is 0x1n",
            "raw": "'The result of (0x3n / 0x2n) is 0x1n'",
            "start": 10959,
            "end": 10996
          }
        ],
        "optional": false,
        "start": 10923,
        "end": 10997
      },
      "start": 10923,
      "end": 10998
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 10999,
            "end": 11005
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 11006,
            "end": 11015
          },
          "optional": false,
          "computed": false,
          "start": 10999,
          "end": 11015
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 11016,
              "end": 11020
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 11023,
              "end": 11027
            },
            "start": 11016,
            "end": 11027
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x3n",
            "bigint": "3",
            "start": 11029,
            "end": 11033
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / 0x1n) is 0x3n",
            "raw": "'The result of (0x3n / 0x1n) is 0x3n'",
            "start": 11035,
            "end": 11072
          }
        ],
        "optional": false,
        "start": 10999,
        "end": 11073
      },
      "start": 10999,
      "end": 11074
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 11075,
            "end": 11081
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 11082,
            "end": 11091
          },
          "optional": false,
          "computed": false,
          "start": 11075,
          "end": 11091
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 11092,
              "end": 11096
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 11100,
                "end": 11104
              },
              "prefix": true,
              "start": 11099,
              "end": 11104
            },
            "start": 11092,
            "end": 11104
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 11107,
              "end": 11111
            },
            "prefix": true,
            "start": 11106,
            "end": 11111
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / -0x1n) is -0x3n",
            "raw": "'The result of (0x3n / -0x1n) is -0x3n'",
            "start": 11113,
            "end": 11152
          }
        ],
        "optional": false,
        "start": 11075,
        "end": 11153
      },
      "start": 11075,
      "end": 11154
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 11155,
            "end": 11161
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 11162,
            "end": 11171
          },
          "optional": false,
          "computed": false,
          "start": 11155,
          "end": 11171
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 11172,
              "end": 11176
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 11180,
                "end": 11184
              },
              "prefix": true,
              "start": 11179,
              "end": 11184
            },
            "start": 11172,
            "end": 11184
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 11187,
              "end": 11191
            },
            "prefix": true,
            "start": 11186,
            "end": 11191
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / -0x2n) is -0x1n",
            "raw": "'The result of (0x3n / -0x2n) is -0x1n'",
            "start": 11193,
            "end": 11232
          }
        ],
        "optional": false,
        "start": 11155,
        "end": 11233
      },
      "start": 11155,
      "end": 11234
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 11235,
            "end": 11241
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 11242,
            "end": 11251
          },
          "optional": false,
          "computed": false,
          "start": 11235,
          "end": 11251
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 11252,
              "end": 11256
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 11260,
                "end": 11264
              },
              "prefix": true,
              "start": 11259,
              "end": 11264
            },
            "start": 11252,
            "end": 11264
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 11267,
              "end": 11271
            },
            "prefix": true,
            "start": 11266,
            "end": 11271
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / -0x3n) is -0x1n",
            "raw": "'The result of (0x3n / -0x3n) is -0x1n'",
            "start": 11273,
            "end": 11312
          }
        ],
        "optional": false,
        "start": 11235,
        "end": 11313
      },
      "start": 11235,
      "end": 11314
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 11315,
            "end": 11321
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 11322,
            "end": 11331
          },
          "optional": false,
          "computed": false,
          "start": 11315,
          "end": 11331
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 11332,
              "end": 11336
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 11340,
                "end": 11347
              },
              "prefix": true,
              "start": 11339,
              "end": 11347
            },
            "start": 11332,
            "end": 11347
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 11349,
            "end": 11353
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / -0x1234n) is 0x0n",
            "raw": "'The result of (0x3n / -0x1234n) is 0x0n'",
            "start": 11355,
            "end": 11396
          }
        ],
        "optional": false,
        "start": 11315,
        "end": 11397
      },
      "start": 11315,
      "end": 11398
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 11399,
            "end": 11405
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 11406,
            "end": 11415
          },
          "optional": false,
          "computed": false,
          "start": 11399,
          "end": 11415
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 11416,
              "end": 11420
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 11424,
                "end": 11435
              },
              "prefix": true,
              "start": 11423,
              "end": 11435
            },
            "start": 11416,
            "end": 11435
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 11437,
            "end": 11441
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x3n / -0xFEDCBA97n) is 0x0n'",
            "start": 11443,
            "end": 11488
          }
        ],
        "optional": false,
        "start": 11399,
        "end": 11489
      },
      "start": 11399,
      "end": 11490
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 11491,
            "end": 11497
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 11498,
            "end": 11507
          },
          "optional": false,
          "computed": false,
          "start": 11491,
          "end": 11507
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 11508,
              "end": 11512
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 11516,
                "end": 11527
              },
              "prefix": true,
              "start": 11515,
              "end": 11527
            },
            "start": 11508,
            "end": 11527
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 11529,
            "end": 11533
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x3n / -0xFEDCBA98n) is 0x0n'",
            "start": 11535,
            "end": 11580
          }
        ],
        "optional": false,
        "start": 11491,
        "end": 11581
      },
      "start": 11491,
      "end": 11582
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 11584,
            "end": 11590
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 11591,
            "end": 11600
          },
          "optional": false,
          "computed": false,
          "start": 11584,
          "end": 11600
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 11604,
              "end": 11608
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 11612,
                "end": 11631
              },
              "prefix": true,
              "start": 11611,
              "end": 11631
            },
            "start": 11604,
            "end": 11631
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 11635,
            "end": 11639
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x3n / -0xFEDCBA987654320Fn) is 0x0n'",
            "start": 11643,
            "end": 11696
          }
        ],
        "optional": false,
        "start": 11584,
        "end": 11698
      },
      "start": 11584,
      "end": 11699
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 11701,
            "end": 11707
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 11708,
            "end": 11717
          },
          "optional": false,
          "computed": false,
          "start": 11701,
          "end": 11717
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 11721,
              "end": 11725
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 11729,
                "end": 11748
              },
              "prefix": true,
              "start": 11728,
              "end": 11748
            },
            "start": 11721,
            "end": 11748
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 11752,
            "end": 11756
          },
          {
            "type": "Literal",
            "value": "The result of (0x3n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x3n / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 11760,
            "end": 11813
          }
        ],
        "optional": false,
        "start": 11701,
        "end": 11815
      },
      "start": 11701,
      "end": 11816
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 11818,
            "end": 11824
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 11825,
            "end": 11834
          },
          "optional": false,
          "computed": false,
          "start": 11818,
          "end": 11834
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 11838,
              "end": 11842
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 11845,
              "end": 11864
            },
            "start": 11838,
            "end": 11864
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 11868,
            "end": 11872
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x2n / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 11876,
            "end": 11928
          }
        ],
        "optional": false,
        "start": 11818,
        "end": 11930
      },
      "start": 11818,
      "end": 11931
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 11933,
            "end": 11939
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 11940,
            "end": 11949
          },
          "optional": false,
          "computed": false,
          "start": 11933,
          "end": 11949
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 11953,
              "end": 11957
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 11960,
              "end": 11979
            },
            "start": 11953,
            "end": 11979
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 11983,
            "end": 11987
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x2n / 0xFEDCBA987654320Fn) is 0x0n'",
            "start": 11991,
            "end": 12043
          }
        ],
        "optional": false,
        "start": 11933,
        "end": 12045
      },
      "start": 11933,
      "end": 12046
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 12048,
            "end": 12054
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 12055,
            "end": 12064
          },
          "optional": false,
          "computed": false,
          "start": 12048,
          "end": 12064
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12065,
              "end": 12069
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 12072,
              "end": 12083
            },
            "start": 12065,
            "end": 12083
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 12085,
            "end": 12089
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x2n / 0xFEDCBA98n) is 0x0n'",
            "start": 12091,
            "end": 12135
          }
        ],
        "optional": false,
        "start": 12048,
        "end": 12136
      },
      "start": 12048,
      "end": 12137
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 12138,
            "end": 12144
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 12145,
            "end": 12154
          },
          "optional": false,
          "computed": false,
          "start": 12138,
          "end": 12154
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12155,
              "end": 12159
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 12162,
              "end": 12173
            },
            "start": 12155,
            "end": 12173
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 12175,
            "end": 12179
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x2n / 0xFEDCBA97n) is 0x0n'",
            "start": 12181,
            "end": 12225
          }
        ],
        "optional": false,
        "start": 12138,
        "end": 12226
      },
      "start": 12138,
      "end": 12227
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 12228,
            "end": 12234
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 12235,
            "end": 12244
          },
          "optional": false,
          "computed": false,
          "start": 12228,
          "end": 12244
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12245,
              "end": 12249
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 12252,
              "end": 12259
            },
            "start": 12245,
            "end": 12259
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 12261,
            "end": 12265
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / 0x1234n) is 0x0n",
            "raw": "'The result of (0x2n / 0x1234n) is 0x0n'",
            "start": 12267,
            "end": 12307
          }
        ],
        "optional": false,
        "start": 12228,
        "end": 12308
      },
      "start": 12228,
      "end": 12309
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 12310,
            "end": 12316
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 12317,
            "end": 12326
          },
          "optional": false,
          "computed": false,
          "start": 12310,
          "end": 12326
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12327,
              "end": 12331
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 12334,
              "end": 12338
            },
            "start": 12327,
            "end": 12338
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 12340,
            "end": 12344
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / 0x3n) is 0x0n",
            "raw": "'The result of (0x2n / 0x3n) is 0x0n'",
            "start": 12346,
            "end": 12383
          }
        ],
        "optional": false,
        "start": 12310,
        "end": 12384
      },
      "start": 12310,
      "end": 12385
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 12386,
            "end": 12392
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 12393,
            "end": 12402
          },
          "optional": false,
          "computed": false,
          "start": 12386,
          "end": 12402
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12403,
              "end": 12407
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12410,
              "end": 12414
            },
            "start": 12403,
            "end": 12414
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 12416,
            "end": 12420
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / 0x2n) is 0x1n",
            "raw": "'The result of (0x2n / 0x2n) is 0x1n'",
            "start": 12422,
            "end": 12459
          }
        ],
        "optional": false,
        "start": 12386,
        "end": 12460
      },
      "start": 12386,
      "end": 12461
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 12462,
            "end": 12468
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 12469,
            "end": 12478
          },
          "optional": false,
          "computed": false,
          "start": 12462,
          "end": 12478
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12479,
              "end": 12483
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 12486,
              "end": 12490
            },
            "start": 12479,
            "end": 12490
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x2n",
            "bigint": "2",
            "start": 12492,
            "end": 12496
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / 0x1n) is 0x2n",
            "raw": "'The result of (0x2n / 0x1n) is 0x2n'",
            "start": 12498,
            "end": 12535
          }
        ],
        "optional": false,
        "start": 12462,
        "end": 12536
      },
      "start": 12462,
      "end": 12537
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 12538,
            "end": 12544
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 12545,
            "end": 12554
          },
          "optional": false,
          "computed": false,
          "start": 12538,
          "end": 12554
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12555,
              "end": 12559
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 12563,
                "end": 12567
              },
              "prefix": true,
              "start": 12562,
              "end": 12567
            },
            "start": 12555,
            "end": 12567
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12570,
              "end": 12574
            },
            "prefix": true,
            "start": 12569,
            "end": 12574
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / -0x1n) is -0x2n",
            "raw": "'The result of (0x2n / -0x1n) is -0x2n'",
            "start": 12576,
            "end": 12615
          }
        ],
        "optional": false,
        "start": 12538,
        "end": 12616
      },
      "start": 12538,
      "end": 12617
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 12618,
            "end": 12624
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 12625,
            "end": 12634
          },
          "optional": false,
          "computed": false,
          "start": 12618,
          "end": 12634
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12635,
              "end": 12639
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 12643,
                "end": 12647
              },
              "prefix": true,
              "start": 12642,
              "end": 12647
            },
            "start": 12635,
            "end": 12647
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 12650,
              "end": 12654
            },
            "prefix": true,
            "start": 12649,
            "end": 12654
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / -0x2n) is -0x1n",
            "raw": "'The result of (0x2n / -0x2n) is -0x1n'",
            "start": 12656,
            "end": 12695
          }
        ],
        "optional": false,
        "start": 12618,
        "end": 12696
      },
      "start": 12618,
      "end": 12697
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 12698,
            "end": 12704
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 12705,
            "end": 12714
          },
          "optional": false,
          "computed": false,
          "start": 12698,
          "end": 12714
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12715,
              "end": 12719
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 12723,
                "end": 12727
              },
              "prefix": true,
              "start": 12722,
              "end": 12727
            },
            "start": 12715,
            "end": 12727
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 12729,
            "end": 12733
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / -0x3n) is 0x0n",
            "raw": "'The result of (0x2n / -0x3n) is 0x0n'",
            "start": 12735,
            "end": 12773
          }
        ],
        "optional": false,
        "start": 12698,
        "end": 12774
      },
      "start": 12698,
      "end": 12775
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 12776,
            "end": 12782
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 12783,
            "end": 12792
          },
          "optional": false,
          "computed": false,
          "start": 12776,
          "end": 12792
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12793,
              "end": 12797
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 12801,
                "end": 12808
              },
              "prefix": true,
              "start": 12800,
              "end": 12808
            },
            "start": 12793,
            "end": 12808
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 12810,
            "end": 12814
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / -0x1234n) is 0x0n",
            "raw": "'The result of (0x2n / -0x1234n) is 0x0n'",
            "start": 12816,
            "end": 12857
          }
        ],
        "optional": false,
        "start": 12776,
        "end": 12858
      },
      "start": 12776,
      "end": 12859
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 12860,
            "end": 12866
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 12867,
            "end": 12876
          },
          "optional": false,
          "computed": false,
          "start": 12860,
          "end": 12876
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12877,
              "end": 12881
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 12885,
                "end": 12896
              },
              "prefix": true,
              "start": 12884,
              "end": 12896
            },
            "start": 12877,
            "end": 12896
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 12898,
            "end": 12902
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x2n / -0xFEDCBA97n) is 0x0n'",
            "start": 12904,
            "end": 12949
          }
        ],
        "optional": false,
        "start": 12860,
        "end": 12950
      },
      "start": 12860,
      "end": 12951
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 12952,
            "end": 12958
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 12959,
            "end": 12968
          },
          "optional": false,
          "computed": false,
          "start": 12952,
          "end": 12968
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 12969,
              "end": 12973
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 12977,
                "end": 12988
              },
              "prefix": true,
              "start": 12976,
              "end": 12988
            },
            "start": 12969,
            "end": 12988
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 12990,
            "end": 12994
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x2n / -0xFEDCBA98n) is 0x0n'",
            "start": 12996,
            "end": 13041
          }
        ],
        "optional": false,
        "start": 12952,
        "end": 13042
      },
      "start": 12952,
      "end": 13043
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 13045,
            "end": 13051
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 13052,
            "end": 13061
          },
          "optional": false,
          "computed": false,
          "start": 13045,
          "end": 13061
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 13065,
              "end": 13069
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 13073,
                "end": 13092
              },
              "prefix": true,
              "start": 13072,
              "end": 13092
            },
            "start": 13065,
            "end": 13092
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 13096,
            "end": 13100
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x2n / -0xFEDCBA987654320Fn) is 0x0n'",
            "start": 13104,
            "end": 13157
          }
        ],
        "optional": false,
        "start": 13045,
        "end": 13159
      },
      "start": 13045,
      "end": 13160
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 13162,
            "end": 13168
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 13169,
            "end": 13178
          },
          "optional": false,
          "computed": false,
          "start": 13162,
          "end": 13178
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 13182,
              "end": 13186
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 13190,
                "end": 13209
              },
              "prefix": true,
              "start": 13189,
              "end": 13209
            },
            "start": 13182,
            "end": 13209
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 13213,
            "end": 13217
          },
          {
            "type": "Literal",
            "value": "The result of (0x2n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x2n / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 13221,
            "end": 13274
          }
        ],
        "optional": false,
        "start": 13162,
        "end": 13276
      },
      "start": 13162,
      "end": 13277
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 13279,
            "end": 13285
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 13286,
            "end": 13295
          },
          "optional": false,
          "computed": false,
          "start": 13279,
          "end": 13295
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 13299,
              "end": 13303
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 13306,
              "end": 13325
            },
            "start": 13299,
            "end": 13325
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 13329,
            "end": 13333
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x1n / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 13337,
            "end": 13389
          }
        ],
        "optional": false,
        "start": 13279,
        "end": 13391
      },
      "start": 13279,
      "end": 13392
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 13394,
            "end": 13400
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 13401,
            "end": 13410
          },
          "optional": false,
          "computed": false,
          "start": 13394,
          "end": 13410
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 13414,
              "end": 13418
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 13421,
              "end": 13440
            },
            "start": 13414,
            "end": 13440
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 13444,
            "end": 13448
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x1n / 0xFEDCBA987654320Fn) is 0x0n'",
            "start": 13452,
            "end": 13504
          }
        ],
        "optional": false,
        "start": 13394,
        "end": 13506
      },
      "start": 13394,
      "end": 13507
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 13509,
            "end": 13515
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 13516,
            "end": 13525
          },
          "optional": false,
          "computed": false,
          "start": 13509,
          "end": 13525
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 13526,
              "end": 13530
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 13533,
              "end": 13544
            },
            "start": 13526,
            "end": 13544
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 13546,
            "end": 13550
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x1n / 0xFEDCBA98n) is 0x0n'",
            "start": 13552,
            "end": 13596
          }
        ],
        "optional": false,
        "start": 13509,
        "end": 13597
      },
      "start": 13509,
      "end": 13598
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 13599,
            "end": 13605
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 13606,
            "end": 13615
          },
          "optional": false,
          "computed": false,
          "start": 13599,
          "end": 13615
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 13616,
              "end": 13620
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 13623,
              "end": 13634
            },
            "start": 13616,
            "end": 13634
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 13636,
            "end": 13640
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x1n / 0xFEDCBA97n) is 0x0n'",
            "start": 13642,
            "end": 13686
          }
        ],
        "optional": false,
        "start": 13599,
        "end": 13687
      },
      "start": 13599,
      "end": 13688
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 13689,
            "end": 13695
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 13696,
            "end": 13705
          },
          "optional": false,
          "computed": false,
          "start": 13689,
          "end": 13705
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 13706,
              "end": 13710
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 13713,
              "end": 13720
            },
            "start": 13706,
            "end": 13720
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 13722,
            "end": 13726
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / 0x1234n) is 0x0n",
            "raw": "'The result of (0x1n / 0x1234n) is 0x0n'",
            "start": 13728,
            "end": 13768
          }
        ],
        "optional": false,
        "start": 13689,
        "end": 13769
      },
      "start": 13689,
      "end": 13770
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 13771,
            "end": 13777
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 13778,
            "end": 13787
          },
          "optional": false,
          "computed": false,
          "start": 13771,
          "end": 13787
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 13788,
              "end": 13792
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 13795,
              "end": 13799
            },
            "start": 13788,
            "end": 13799
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 13801,
            "end": 13805
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / 0x3n) is 0x0n",
            "raw": "'The result of (0x1n / 0x3n) is 0x0n'",
            "start": 13807,
            "end": 13844
          }
        ],
        "optional": false,
        "start": 13771,
        "end": 13845
      },
      "start": 13771,
      "end": 13846
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 13847,
            "end": 13853
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 13854,
            "end": 13863
          },
          "optional": false,
          "computed": false,
          "start": 13847,
          "end": 13863
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 13864,
              "end": 13868
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 13871,
              "end": 13875
            },
            "start": 13864,
            "end": 13875
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 13877,
            "end": 13881
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / 0x2n) is 0x0n",
            "raw": "'The result of (0x1n / 0x2n) is 0x0n'",
            "start": 13883,
            "end": 13920
          }
        ],
        "optional": false,
        "start": 13847,
        "end": 13921
      },
      "start": 13847,
      "end": 13922
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 13923,
            "end": 13929
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 13930,
            "end": 13939
          },
          "optional": false,
          "computed": false,
          "start": 13923,
          "end": 13939
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 13940,
              "end": 13944
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 13947,
              "end": 13951
            },
            "start": 13940,
            "end": 13951
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 13953,
            "end": 13957
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / 0x1n) is 0x1n",
            "raw": "'The result of (0x1n / 0x1n) is 0x1n'",
            "start": 13959,
            "end": 13996
          }
        ],
        "optional": false,
        "start": 13923,
        "end": 13997
      },
      "start": 13923,
      "end": 13998
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 13999,
            "end": 14005
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 14006,
            "end": 14015
          },
          "optional": false,
          "computed": false,
          "start": 13999,
          "end": 14015
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 14016,
              "end": 14020
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 14024,
                "end": 14028
              },
              "prefix": true,
              "start": 14023,
              "end": 14028
            },
            "start": 14016,
            "end": 14028
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 14031,
              "end": 14035
            },
            "prefix": true,
            "start": 14030,
            "end": 14035
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / -0x1n) is -0x1n",
            "raw": "'The result of (0x1n / -0x1n) is -0x1n'",
            "start": 14037,
            "end": 14076
          }
        ],
        "optional": false,
        "start": 13999,
        "end": 14077
      },
      "start": 13999,
      "end": 14078
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 14079,
            "end": 14085
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 14086,
            "end": 14095
          },
          "optional": false,
          "computed": false,
          "start": 14079,
          "end": 14095
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 14096,
              "end": 14100
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 14104,
                "end": 14108
              },
              "prefix": true,
              "start": 14103,
              "end": 14108
            },
            "start": 14096,
            "end": 14108
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 14110,
            "end": 14114
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / -0x2n) is 0x0n",
            "raw": "'The result of (0x1n / -0x2n) is 0x0n'",
            "start": 14116,
            "end": 14154
          }
        ],
        "optional": false,
        "start": 14079,
        "end": 14155
      },
      "start": 14079,
      "end": 14156
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 14157,
            "end": 14163
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 14164,
            "end": 14173
          },
          "optional": false,
          "computed": false,
          "start": 14157,
          "end": 14173
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 14174,
              "end": 14178
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 14182,
                "end": 14186
              },
              "prefix": true,
              "start": 14181,
              "end": 14186
            },
            "start": 14174,
            "end": 14186
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 14188,
            "end": 14192
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / -0x3n) is 0x0n",
            "raw": "'The result of (0x1n / -0x3n) is 0x0n'",
            "start": 14194,
            "end": 14232
          }
        ],
        "optional": false,
        "start": 14157,
        "end": 14233
      },
      "start": 14157,
      "end": 14234
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 14235,
            "end": 14241
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 14242,
            "end": 14251
          },
          "optional": false,
          "computed": false,
          "start": 14235,
          "end": 14251
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 14252,
              "end": 14256
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 14260,
                "end": 14267
              },
              "prefix": true,
              "start": 14259,
              "end": 14267
            },
            "start": 14252,
            "end": 14267
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 14269,
            "end": 14273
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / -0x1234n) is 0x0n",
            "raw": "'The result of (0x1n / -0x1234n) is 0x0n'",
            "start": 14275,
            "end": 14316
          }
        ],
        "optional": false,
        "start": 14235,
        "end": 14317
      },
      "start": 14235,
      "end": 14318
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 14319,
            "end": 14325
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 14326,
            "end": 14335
          },
          "optional": false,
          "computed": false,
          "start": 14319,
          "end": 14335
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 14336,
              "end": 14340
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 14344,
                "end": 14355
              },
              "prefix": true,
              "start": 14343,
              "end": 14355
            },
            "start": 14336,
            "end": 14355
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 14357,
            "end": 14361
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x1n / -0xFEDCBA97n) is 0x0n'",
            "start": 14363,
            "end": 14408
          }
        ],
        "optional": false,
        "start": 14319,
        "end": 14409
      },
      "start": 14319,
      "end": 14410
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 14411,
            "end": 14417
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 14418,
            "end": 14427
          },
          "optional": false,
          "computed": false,
          "start": 14411,
          "end": 14427
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 14428,
              "end": 14432
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 14436,
                "end": 14447
              },
              "prefix": true,
              "start": 14435,
              "end": 14447
            },
            "start": 14428,
            "end": 14447
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 14449,
            "end": 14453
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x1n / -0xFEDCBA98n) is 0x0n'",
            "start": 14455,
            "end": 14500
          }
        ],
        "optional": false,
        "start": 14411,
        "end": 14501
      },
      "start": 14411,
      "end": 14502
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 14504,
            "end": 14510
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 14511,
            "end": 14520
          },
          "optional": false,
          "computed": false,
          "start": 14504,
          "end": 14520
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 14524,
              "end": 14528
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 14532,
                "end": 14551
              },
              "prefix": true,
              "start": 14531,
              "end": 14551
            },
            "start": 14524,
            "end": 14551
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 14555,
            "end": 14559
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x1n / -0xFEDCBA987654320Fn) is 0x0n'",
            "start": 14563,
            "end": 14616
          }
        ],
        "optional": false,
        "start": 14504,
        "end": 14618
      },
      "start": 14504,
      "end": 14619
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 14621,
            "end": 14627
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 14628,
            "end": 14637
          },
          "optional": false,
          "computed": false,
          "start": 14621,
          "end": 14637
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 14641,
              "end": 14645
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 14649,
                "end": 14668
              },
              "prefix": true,
              "start": 14648,
              "end": 14668
            },
            "start": 14641,
            "end": 14668
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 14672,
            "end": 14676
          },
          {
            "type": "Literal",
            "value": "The result of (0x1n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x1n / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 14680,
            "end": 14733
          }
        ],
        "optional": false,
        "start": 14621,
        "end": 14735
      },
      "start": 14621,
      "end": 14736
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 14738,
            "end": 14744
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 14745,
            "end": 14754
          },
          "optional": false,
          "computed": false,
          "start": 14738,
          "end": 14754
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 14759,
                "end": 14763
              },
              "prefix": true,
              "start": 14758,
              "end": 14763
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 14766,
              "end": 14785
            },
            "start": 14758,
            "end": 14785
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 14789,
            "end": 14793
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x1n / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 14797,
            "end": 14850
          }
        ],
        "optional": false,
        "start": 14738,
        "end": 14852
      },
      "start": 14738,
      "end": 14853
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 14855,
            "end": 14861
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 14862,
            "end": 14871
          },
          "optional": false,
          "computed": false,
          "start": 14855,
          "end": 14871
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 14876,
                "end": 14880
              },
              "prefix": true,
              "start": 14875,
              "end": 14880
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 14883,
              "end": 14902
            },
            "start": 14875,
            "end": 14902
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 14906,
            "end": 14910
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x1n / 0xFEDCBA987654320Fn) is 0x0n'",
            "start": 14914,
            "end": 14967
          }
        ],
        "optional": false,
        "start": 14855,
        "end": 14969
      },
      "start": 14855,
      "end": 14970
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 14972,
            "end": 14978
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 14979,
            "end": 14988
          },
          "optional": false,
          "computed": false,
          "start": 14972,
          "end": 14988
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 14990,
                "end": 14994
              },
              "prefix": true,
              "start": 14989,
              "end": 14994
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 14997,
              "end": 15008
            },
            "start": 14989,
            "end": 15008
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 15010,
            "end": 15014
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x1n / 0xFEDCBA98n) is 0x0n'",
            "start": 15016,
            "end": 15061
          }
        ],
        "optional": false,
        "start": 14972,
        "end": 15062
      },
      "start": 14972,
      "end": 15063
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 15064,
            "end": 15070
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 15071,
            "end": 15080
          },
          "optional": false,
          "computed": false,
          "start": 15064,
          "end": 15080
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 15082,
                "end": 15086
              },
              "prefix": true,
              "start": 15081,
              "end": 15086
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 15089,
              "end": 15100
            },
            "start": 15081,
            "end": 15100
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 15102,
            "end": 15106
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x1n / 0xFEDCBA97n) is 0x0n'",
            "start": 15108,
            "end": 15153
          }
        ],
        "optional": false,
        "start": 15064,
        "end": 15154
      },
      "start": 15064,
      "end": 15155
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 15156,
            "end": 15162
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 15163,
            "end": 15172
          },
          "optional": false,
          "computed": false,
          "start": 15156,
          "end": 15172
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 15174,
                "end": 15178
              },
              "prefix": true,
              "start": 15173,
              "end": 15178
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 15181,
              "end": 15188
            },
            "start": 15173,
            "end": 15188
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 15190,
            "end": 15194
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / 0x1234n) is 0x0n",
            "raw": "'The result of (-0x1n / 0x1234n) is 0x0n'",
            "start": 15196,
            "end": 15237
          }
        ],
        "optional": false,
        "start": 15156,
        "end": 15238
      },
      "start": 15156,
      "end": 15239
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 15240,
            "end": 15246
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 15247,
            "end": 15256
          },
          "optional": false,
          "computed": false,
          "start": 15240,
          "end": 15256
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 15258,
                "end": 15262
              },
              "prefix": true,
              "start": 15257,
              "end": 15262
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 15265,
              "end": 15269
            },
            "start": 15257,
            "end": 15269
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 15271,
            "end": 15275
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / 0x3n) is 0x0n",
            "raw": "'The result of (-0x1n / 0x3n) is 0x0n'",
            "start": 15277,
            "end": 15315
          }
        ],
        "optional": false,
        "start": 15240,
        "end": 15316
      },
      "start": 15240,
      "end": 15317
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 15318,
            "end": 15324
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 15325,
            "end": 15334
          },
          "optional": false,
          "computed": false,
          "start": 15318,
          "end": 15334
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 15336,
                "end": 15340
              },
              "prefix": true,
              "start": 15335,
              "end": 15340
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 15343,
              "end": 15347
            },
            "start": 15335,
            "end": 15347
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 15349,
            "end": 15353
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / 0x2n) is 0x0n",
            "raw": "'The result of (-0x1n / 0x2n) is 0x0n'",
            "start": 15355,
            "end": 15393
          }
        ],
        "optional": false,
        "start": 15318,
        "end": 15394
      },
      "start": 15318,
      "end": 15395
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 15396,
            "end": 15402
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 15403,
            "end": 15412
          },
          "optional": false,
          "computed": false,
          "start": 15396,
          "end": 15412
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 15414,
                "end": 15418
              },
              "prefix": true,
              "start": 15413,
              "end": 15418
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 15421,
              "end": 15425
            },
            "start": 15413,
            "end": 15425
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 15428,
              "end": 15432
            },
            "prefix": true,
            "start": 15427,
            "end": 15432
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / 0x1n) is -0x1n",
            "raw": "'The result of (-0x1n / 0x1n) is -0x1n'",
            "start": 15434,
            "end": 15473
          }
        ],
        "optional": false,
        "start": 15396,
        "end": 15474
      },
      "start": 15396,
      "end": 15475
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 15476,
            "end": 15482
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 15483,
            "end": 15492
          },
          "optional": false,
          "computed": false,
          "start": 15476,
          "end": 15492
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 15494,
                "end": 15498
              },
              "prefix": true,
              "start": 15493,
              "end": 15498
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 15502,
                "end": 15506
              },
              "prefix": true,
              "start": 15501,
              "end": 15506
            },
            "start": 15493,
            "end": 15506
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 15508,
            "end": 15512
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / -0x1n) is 0x1n",
            "raw": "'The result of (-0x1n / -0x1n) is 0x1n'",
            "start": 15514,
            "end": 15553
          }
        ],
        "optional": false,
        "start": 15476,
        "end": 15554
      },
      "start": 15476,
      "end": 15555
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 15556,
            "end": 15562
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 15563,
            "end": 15572
          },
          "optional": false,
          "computed": false,
          "start": 15556,
          "end": 15572
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 15574,
                "end": 15578
              },
              "prefix": true,
              "start": 15573,
              "end": 15578
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 15582,
                "end": 15586
              },
              "prefix": true,
              "start": 15581,
              "end": 15586
            },
            "start": 15573,
            "end": 15586
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 15588,
            "end": 15592
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / -0x2n) is 0x0n",
            "raw": "'The result of (-0x1n / -0x2n) is 0x0n'",
            "start": 15594,
            "end": 15633
          }
        ],
        "optional": false,
        "start": 15556,
        "end": 15634
      },
      "start": 15556,
      "end": 15635
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 15636,
            "end": 15642
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 15643,
            "end": 15652
          },
          "optional": false,
          "computed": false,
          "start": 15636,
          "end": 15652
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 15654,
                "end": 15658
              },
              "prefix": true,
              "start": 15653,
              "end": 15658
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 15662,
                "end": 15666
              },
              "prefix": true,
              "start": 15661,
              "end": 15666
            },
            "start": 15653,
            "end": 15666
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 15668,
            "end": 15672
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / -0x3n) is 0x0n",
            "raw": "'The result of (-0x1n / -0x3n) is 0x0n'",
            "start": 15674,
            "end": 15713
          }
        ],
        "optional": false,
        "start": 15636,
        "end": 15714
      },
      "start": 15636,
      "end": 15715
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 15716,
            "end": 15722
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 15723,
            "end": 15732
          },
          "optional": false,
          "computed": false,
          "start": 15716,
          "end": 15732
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 15734,
                "end": 15738
              },
              "prefix": true,
              "start": 15733,
              "end": 15738
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 15742,
                "end": 15749
              },
              "prefix": true,
              "start": 15741,
              "end": 15749
            },
            "start": 15733,
            "end": 15749
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 15751,
            "end": 15755
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / -0x1234n) is 0x0n",
            "raw": "'The result of (-0x1n / -0x1234n) is 0x0n'",
            "start": 15757,
            "end": 15799
          }
        ],
        "optional": false,
        "start": 15716,
        "end": 15800
      },
      "start": 15716,
      "end": 15801
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 15802,
            "end": 15808
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 15809,
            "end": 15818
          },
          "optional": false,
          "computed": false,
          "start": 15802,
          "end": 15818
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 15820,
                "end": 15824
              },
              "prefix": true,
              "start": 15819,
              "end": 15824
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 15828,
                "end": 15839
              },
              "prefix": true,
              "start": 15827,
              "end": 15839
            },
            "start": 15819,
            "end": 15839
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 15841,
            "end": 15845
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x1n / -0xFEDCBA97n) is 0x0n'",
            "start": 15847,
            "end": 15893
          }
        ],
        "optional": false,
        "start": 15802,
        "end": 15894
      },
      "start": 15802,
      "end": 15895
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 15896,
            "end": 15902
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 15903,
            "end": 15912
          },
          "optional": false,
          "computed": false,
          "start": 15896,
          "end": 15912
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 15914,
                "end": 15918
              },
              "prefix": true,
              "start": 15913,
              "end": 15918
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 15922,
                "end": 15933
              },
              "prefix": true,
              "start": 15921,
              "end": 15933
            },
            "start": 15913,
            "end": 15933
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 15935,
            "end": 15939
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x1n / -0xFEDCBA98n) is 0x0n'",
            "start": 15941,
            "end": 15987
          }
        ],
        "optional": false,
        "start": 15896,
        "end": 15988
      },
      "start": 15896,
      "end": 15989
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 15991,
            "end": 15997
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 15998,
            "end": 16007
          },
          "optional": false,
          "computed": false,
          "start": 15991,
          "end": 16007
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 16012,
                "end": 16016
              },
              "prefix": true,
              "start": 16011,
              "end": 16016
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 16020,
                "end": 16039
              },
              "prefix": true,
              "start": 16019,
              "end": 16039
            },
            "start": 16011,
            "end": 16039
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 16043,
            "end": 16047
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x1n / -0xFEDCBA987654320Fn) is 0x0n'",
            "start": 16051,
            "end": 16105
          }
        ],
        "optional": false,
        "start": 15991,
        "end": 16107
      },
      "start": 15991,
      "end": 16108
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 16110,
            "end": 16116
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 16117,
            "end": 16126
          },
          "optional": false,
          "computed": false,
          "start": 16110,
          "end": 16126
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 16131,
                "end": 16135
              },
              "prefix": true,
              "start": 16130,
              "end": 16135
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 16139,
                "end": 16158
              },
              "prefix": true,
              "start": 16138,
              "end": 16158
            },
            "start": 16130,
            "end": 16158
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 16162,
            "end": 16166
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x1n / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 16170,
            "end": 16224
          }
        ],
        "optional": false,
        "start": 16110,
        "end": 16226
      },
      "start": 16110,
      "end": 16227
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 16229,
            "end": 16235
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 16236,
            "end": 16245
          },
          "optional": false,
          "computed": false,
          "start": 16229,
          "end": 16245
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 16250,
                "end": 16254
              },
              "prefix": true,
              "start": 16249,
              "end": 16254
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 16257,
              "end": 16276
            },
            "start": 16249,
            "end": 16276
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 16280,
            "end": 16284
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x2n / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 16288,
            "end": 16341
          }
        ],
        "optional": false,
        "start": 16229,
        "end": 16343
      },
      "start": 16229,
      "end": 16344
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 16346,
            "end": 16352
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 16353,
            "end": 16362
          },
          "optional": false,
          "computed": false,
          "start": 16346,
          "end": 16362
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 16367,
                "end": 16371
              },
              "prefix": true,
              "start": 16366,
              "end": 16371
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 16374,
              "end": 16393
            },
            "start": 16366,
            "end": 16393
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 16397,
            "end": 16401
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x2n / 0xFEDCBA987654320Fn) is 0x0n'",
            "start": 16405,
            "end": 16458
          }
        ],
        "optional": false,
        "start": 16346,
        "end": 16460
      },
      "start": 16346,
      "end": 16461
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 16463,
            "end": 16469
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 16470,
            "end": 16479
          },
          "optional": false,
          "computed": false,
          "start": 16463,
          "end": 16479
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 16481,
                "end": 16485
              },
              "prefix": true,
              "start": 16480,
              "end": 16485
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 16488,
              "end": 16499
            },
            "start": 16480,
            "end": 16499
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 16501,
            "end": 16505
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x2n / 0xFEDCBA98n) is 0x0n'",
            "start": 16507,
            "end": 16552
          }
        ],
        "optional": false,
        "start": 16463,
        "end": 16553
      },
      "start": 16463,
      "end": 16554
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 16555,
            "end": 16561
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 16562,
            "end": 16571
          },
          "optional": false,
          "computed": false,
          "start": 16555,
          "end": 16571
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 16573,
                "end": 16577
              },
              "prefix": true,
              "start": 16572,
              "end": 16577
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 16580,
              "end": 16591
            },
            "start": 16572,
            "end": 16591
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 16593,
            "end": 16597
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x2n / 0xFEDCBA97n) is 0x0n'",
            "start": 16599,
            "end": 16644
          }
        ],
        "optional": false,
        "start": 16555,
        "end": 16645
      },
      "start": 16555,
      "end": 16646
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 16647,
            "end": 16653
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 16654,
            "end": 16663
          },
          "optional": false,
          "computed": false,
          "start": 16647,
          "end": 16663
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 16665,
                "end": 16669
              },
              "prefix": true,
              "start": 16664,
              "end": 16669
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 16672,
              "end": 16679
            },
            "start": 16664,
            "end": 16679
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 16681,
            "end": 16685
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / 0x1234n) is 0x0n",
            "raw": "'The result of (-0x2n / 0x1234n) is 0x0n'",
            "start": 16687,
            "end": 16728
          }
        ],
        "optional": false,
        "start": 16647,
        "end": 16729
      },
      "start": 16647,
      "end": 16730
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 16731,
            "end": 16737
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 16738,
            "end": 16747
          },
          "optional": false,
          "computed": false,
          "start": 16731,
          "end": 16747
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 16749,
                "end": 16753
              },
              "prefix": true,
              "start": 16748,
              "end": 16753
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 16756,
              "end": 16760
            },
            "start": 16748,
            "end": 16760
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 16762,
            "end": 16766
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / 0x3n) is 0x0n",
            "raw": "'The result of (-0x2n / 0x3n) is 0x0n'",
            "start": 16768,
            "end": 16806
          }
        ],
        "optional": false,
        "start": 16731,
        "end": 16807
      },
      "start": 16731,
      "end": 16808
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 16809,
            "end": 16815
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 16816,
            "end": 16825
          },
          "optional": false,
          "computed": false,
          "start": 16809,
          "end": 16825
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 16827,
                "end": 16831
              },
              "prefix": true,
              "start": 16826,
              "end": 16831
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 16834,
              "end": 16838
            },
            "start": 16826,
            "end": 16838
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 16841,
              "end": 16845
            },
            "prefix": true,
            "start": 16840,
            "end": 16845
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / 0x2n) is -0x1n",
            "raw": "'The result of (-0x2n / 0x2n) is -0x1n'",
            "start": 16847,
            "end": 16886
          }
        ],
        "optional": false,
        "start": 16809,
        "end": 16887
      },
      "start": 16809,
      "end": 16888
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 16889,
            "end": 16895
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 16896,
            "end": 16905
          },
          "optional": false,
          "computed": false,
          "start": 16889,
          "end": 16905
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 16907,
                "end": 16911
              },
              "prefix": true,
              "start": 16906,
              "end": 16911
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 16914,
              "end": 16918
            },
            "start": 16906,
            "end": 16918
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 16921,
              "end": 16925
            },
            "prefix": true,
            "start": 16920,
            "end": 16925
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / 0x1n) is -0x2n",
            "raw": "'The result of (-0x2n / 0x1n) is -0x2n'",
            "start": 16927,
            "end": 16966
          }
        ],
        "optional": false,
        "start": 16889,
        "end": 16967
      },
      "start": 16889,
      "end": 16968
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 16969,
            "end": 16975
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 16976,
            "end": 16985
          },
          "optional": false,
          "computed": false,
          "start": 16969,
          "end": 16985
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 16987,
                "end": 16991
              },
              "prefix": true,
              "start": 16986,
              "end": 16991
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 16995,
                "end": 16999
              },
              "prefix": true,
              "start": 16994,
              "end": 16999
            },
            "start": 16986,
            "end": 16999
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x2n",
            "bigint": "2",
            "start": 17001,
            "end": 17005
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / -0x1n) is 0x2n",
            "raw": "'The result of (-0x2n / -0x1n) is 0x2n'",
            "start": 17007,
            "end": 17046
          }
        ],
        "optional": false,
        "start": 16969,
        "end": 17047
      },
      "start": 16969,
      "end": 17048
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 17049,
            "end": 17055
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 17056,
            "end": 17065
          },
          "optional": false,
          "computed": false,
          "start": 17049,
          "end": 17065
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 17067,
                "end": 17071
              },
              "prefix": true,
              "start": 17066,
              "end": 17071
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 17075,
                "end": 17079
              },
              "prefix": true,
              "start": 17074,
              "end": 17079
            },
            "start": 17066,
            "end": 17079
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 17081,
            "end": 17085
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / -0x2n) is 0x1n",
            "raw": "'The result of (-0x2n / -0x2n) is 0x1n'",
            "start": 17087,
            "end": 17126
          }
        ],
        "optional": false,
        "start": 17049,
        "end": 17127
      },
      "start": 17049,
      "end": 17128
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 17129,
            "end": 17135
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 17136,
            "end": 17145
          },
          "optional": false,
          "computed": false,
          "start": 17129,
          "end": 17145
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 17147,
                "end": 17151
              },
              "prefix": true,
              "start": 17146,
              "end": 17151
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 17155,
                "end": 17159
              },
              "prefix": true,
              "start": 17154,
              "end": 17159
            },
            "start": 17146,
            "end": 17159
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 17161,
            "end": 17165
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / -0x3n) is 0x0n",
            "raw": "'The result of (-0x2n / -0x3n) is 0x0n'",
            "start": 17167,
            "end": 17206
          }
        ],
        "optional": false,
        "start": 17129,
        "end": 17207
      },
      "start": 17129,
      "end": 17208
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 17209,
            "end": 17215
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 17216,
            "end": 17225
          },
          "optional": false,
          "computed": false,
          "start": 17209,
          "end": 17225
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 17227,
                "end": 17231
              },
              "prefix": true,
              "start": 17226,
              "end": 17231
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 17235,
                "end": 17242
              },
              "prefix": true,
              "start": 17234,
              "end": 17242
            },
            "start": 17226,
            "end": 17242
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 17244,
            "end": 17248
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / -0x1234n) is 0x0n",
            "raw": "'The result of (-0x2n / -0x1234n) is 0x0n'",
            "start": 17250,
            "end": 17292
          }
        ],
        "optional": false,
        "start": 17209,
        "end": 17293
      },
      "start": 17209,
      "end": 17294
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 17295,
            "end": 17301
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 17302,
            "end": 17311
          },
          "optional": false,
          "computed": false,
          "start": 17295,
          "end": 17311
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 17313,
                "end": 17317
              },
              "prefix": true,
              "start": 17312,
              "end": 17317
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 17321,
                "end": 17332
              },
              "prefix": true,
              "start": 17320,
              "end": 17332
            },
            "start": 17312,
            "end": 17332
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 17334,
            "end": 17338
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x2n / -0xFEDCBA97n) is 0x0n'",
            "start": 17340,
            "end": 17386
          }
        ],
        "optional": false,
        "start": 17295,
        "end": 17387
      },
      "start": 17295,
      "end": 17388
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 17389,
            "end": 17395
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 17396,
            "end": 17405
          },
          "optional": false,
          "computed": false,
          "start": 17389,
          "end": 17405
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 17407,
                "end": 17411
              },
              "prefix": true,
              "start": 17406,
              "end": 17411
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 17415,
                "end": 17426
              },
              "prefix": true,
              "start": 17414,
              "end": 17426
            },
            "start": 17406,
            "end": 17426
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 17428,
            "end": 17432
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x2n / -0xFEDCBA98n) is 0x0n'",
            "start": 17434,
            "end": 17480
          }
        ],
        "optional": false,
        "start": 17389,
        "end": 17481
      },
      "start": 17389,
      "end": 17482
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 17484,
            "end": 17490
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 17491,
            "end": 17500
          },
          "optional": false,
          "computed": false,
          "start": 17484,
          "end": 17500
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 17505,
                "end": 17509
              },
              "prefix": true,
              "start": 17504,
              "end": 17509
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 17513,
                "end": 17532
              },
              "prefix": true,
              "start": 17512,
              "end": 17532
            },
            "start": 17504,
            "end": 17532
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 17536,
            "end": 17540
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x2n / -0xFEDCBA987654320Fn) is 0x0n'",
            "start": 17544,
            "end": 17598
          }
        ],
        "optional": false,
        "start": 17484,
        "end": 17600
      },
      "start": 17484,
      "end": 17601
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 17603,
            "end": 17609
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 17610,
            "end": 17619
          },
          "optional": false,
          "computed": false,
          "start": 17603,
          "end": 17619
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 17624,
                "end": 17628
              },
              "prefix": true,
              "start": 17623,
              "end": 17628
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 17632,
                "end": 17651
              },
              "prefix": true,
              "start": 17631,
              "end": 17651
            },
            "start": 17623,
            "end": 17651
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 17655,
            "end": 17659
          },
          {
            "type": "Literal",
            "value": "The result of (-0x2n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x2n / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 17663,
            "end": 17717
          }
        ],
        "optional": false,
        "start": 17603,
        "end": 17719
      },
      "start": 17603,
      "end": 17720
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 17722,
            "end": 17728
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 17729,
            "end": 17738
          },
          "optional": false,
          "computed": false,
          "start": 17722,
          "end": 17738
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 17743,
                "end": 17747
              },
              "prefix": true,
              "start": 17742,
              "end": 17747
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 17750,
              "end": 17769
            },
            "start": 17742,
            "end": 17769
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 17773,
            "end": 17777
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x3n / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 17781,
            "end": 17834
          }
        ],
        "optional": false,
        "start": 17722,
        "end": 17836
      },
      "start": 17722,
      "end": 17837
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 17839,
            "end": 17845
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 17846,
            "end": 17855
          },
          "optional": false,
          "computed": false,
          "start": 17839,
          "end": 17855
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 17860,
                "end": 17864
              },
              "prefix": true,
              "start": 17859,
              "end": 17864
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 17867,
              "end": 17886
            },
            "start": 17859,
            "end": 17886
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 17890,
            "end": 17894
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x3n / 0xFEDCBA987654320Fn) is 0x0n'",
            "start": 17898,
            "end": 17951
          }
        ],
        "optional": false,
        "start": 17839,
        "end": 17953
      },
      "start": 17839,
      "end": 17954
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 17956,
            "end": 17962
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 17963,
            "end": 17972
          },
          "optional": false,
          "computed": false,
          "start": 17956,
          "end": 17972
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 17974,
                "end": 17978
              },
              "prefix": true,
              "start": 17973,
              "end": 17978
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 17981,
              "end": 17992
            },
            "start": 17973,
            "end": 17992
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 17994,
            "end": 17998
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x3n / 0xFEDCBA98n) is 0x0n'",
            "start": 18000,
            "end": 18045
          }
        ],
        "optional": false,
        "start": 17956,
        "end": 18046
      },
      "start": 17956,
      "end": 18047
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 18048,
            "end": 18054
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 18055,
            "end": 18064
          },
          "optional": false,
          "computed": false,
          "start": 18048,
          "end": 18064
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 18066,
                "end": 18070
              },
              "prefix": true,
              "start": 18065,
              "end": 18070
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 18073,
              "end": 18084
            },
            "start": 18065,
            "end": 18084
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 18086,
            "end": 18090
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x3n / 0xFEDCBA97n) is 0x0n'",
            "start": 18092,
            "end": 18137
          }
        ],
        "optional": false,
        "start": 18048,
        "end": 18138
      },
      "start": 18048,
      "end": 18139
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 18140,
            "end": 18146
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 18147,
            "end": 18156
          },
          "optional": false,
          "computed": false,
          "start": 18140,
          "end": 18156
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 18158,
                "end": 18162
              },
              "prefix": true,
              "start": 18157,
              "end": 18162
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 18165,
              "end": 18172
            },
            "start": 18157,
            "end": 18172
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 18174,
            "end": 18178
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / 0x1234n) is 0x0n",
            "raw": "'The result of (-0x3n / 0x1234n) is 0x0n'",
            "start": 18180,
            "end": 18221
          }
        ],
        "optional": false,
        "start": 18140,
        "end": 18222
      },
      "start": 18140,
      "end": 18223
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 18224,
            "end": 18230
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 18231,
            "end": 18240
          },
          "optional": false,
          "computed": false,
          "start": 18224,
          "end": 18240
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 18242,
                "end": 18246
              },
              "prefix": true,
              "start": 18241,
              "end": 18246
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 18249,
              "end": 18253
            },
            "start": 18241,
            "end": 18253
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 18256,
              "end": 18260
            },
            "prefix": true,
            "start": 18255,
            "end": 18260
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / 0x3n) is -0x1n",
            "raw": "'The result of (-0x3n / 0x3n) is -0x1n'",
            "start": 18262,
            "end": 18301
          }
        ],
        "optional": false,
        "start": 18224,
        "end": 18302
      },
      "start": 18224,
      "end": 18303
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 18304,
            "end": 18310
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 18311,
            "end": 18320
          },
          "optional": false,
          "computed": false,
          "start": 18304,
          "end": 18320
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 18322,
                "end": 18326
              },
              "prefix": true,
              "start": 18321,
              "end": 18326
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 18329,
              "end": 18333
            },
            "start": 18321,
            "end": 18333
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 18336,
              "end": 18340
            },
            "prefix": true,
            "start": 18335,
            "end": 18340
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / 0x2n) is -0x1n",
            "raw": "'The result of (-0x3n / 0x2n) is -0x1n'",
            "start": 18342,
            "end": 18381
          }
        ],
        "optional": false,
        "start": 18304,
        "end": 18382
      },
      "start": 18304,
      "end": 18383
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 18384,
            "end": 18390
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 18391,
            "end": 18400
          },
          "optional": false,
          "computed": false,
          "start": 18384,
          "end": 18400
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 18402,
                "end": 18406
              },
              "prefix": true,
              "start": 18401,
              "end": 18406
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 18409,
              "end": 18413
            },
            "start": 18401,
            "end": 18413
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 18416,
              "end": 18420
            },
            "prefix": true,
            "start": 18415,
            "end": 18420
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / 0x1n) is -0x3n",
            "raw": "'The result of (-0x3n / 0x1n) is -0x3n'",
            "start": 18422,
            "end": 18461
          }
        ],
        "optional": false,
        "start": 18384,
        "end": 18462
      },
      "start": 18384,
      "end": 18463
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 18464,
            "end": 18470
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 18471,
            "end": 18480
          },
          "optional": false,
          "computed": false,
          "start": 18464,
          "end": 18480
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 18482,
                "end": 18486
              },
              "prefix": true,
              "start": 18481,
              "end": 18486
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 18490,
                "end": 18494
              },
              "prefix": true,
              "start": 18489,
              "end": 18494
            },
            "start": 18481,
            "end": 18494
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x3n",
            "bigint": "3",
            "start": 18496,
            "end": 18500
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / -0x1n) is 0x3n",
            "raw": "'The result of (-0x3n / -0x1n) is 0x3n'",
            "start": 18502,
            "end": 18541
          }
        ],
        "optional": false,
        "start": 18464,
        "end": 18542
      },
      "start": 18464,
      "end": 18543
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 18544,
            "end": 18550
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 18551,
            "end": 18560
          },
          "optional": false,
          "computed": false,
          "start": 18544,
          "end": 18560
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 18562,
                "end": 18566
              },
              "prefix": true,
              "start": 18561,
              "end": 18566
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 18570,
                "end": 18574
              },
              "prefix": true,
              "start": 18569,
              "end": 18574
            },
            "start": 18561,
            "end": 18574
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 18576,
            "end": 18580
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / -0x2n) is 0x1n",
            "raw": "'The result of (-0x3n / -0x2n) is 0x1n'",
            "start": 18582,
            "end": 18621
          }
        ],
        "optional": false,
        "start": 18544,
        "end": 18622
      },
      "start": 18544,
      "end": 18623
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 18624,
            "end": 18630
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 18631,
            "end": 18640
          },
          "optional": false,
          "computed": false,
          "start": 18624,
          "end": 18640
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 18642,
                "end": 18646
              },
              "prefix": true,
              "start": 18641,
              "end": 18646
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 18650,
                "end": 18654
              },
              "prefix": true,
              "start": 18649,
              "end": 18654
            },
            "start": 18641,
            "end": 18654
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 18656,
            "end": 18660
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / -0x3n) is 0x1n",
            "raw": "'The result of (-0x3n / -0x3n) is 0x1n'",
            "start": 18662,
            "end": 18701
          }
        ],
        "optional": false,
        "start": 18624,
        "end": 18702
      },
      "start": 18624,
      "end": 18703
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 18704,
            "end": 18710
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 18711,
            "end": 18720
          },
          "optional": false,
          "computed": false,
          "start": 18704,
          "end": 18720
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 18722,
                "end": 18726
              },
              "prefix": true,
              "start": 18721,
              "end": 18726
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 18730,
                "end": 18737
              },
              "prefix": true,
              "start": 18729,
              "end": 18737
            },
            "start": 18721,
            "end": 18737
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 18739,
            "end": 18743
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / -0x1234n) is 0x0n",
            "raw": "'The result of (-0x3n / -0x1234n) is 0x0n'",
            "start": 18745,
            "end": 18787
          }
        ],
        "optional": false,
        "start": 18704,
        "end": 18788
      },
      "start": 18704,
      "end": 18789
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 18790,
            "end": 18796
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 18797,
            "end": 18806
          },
          "optional": false,
          "computed": false,
          "start": 18790,
          "end": 18806
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 18808,
                "end": 18812
              },
              "prefix": true,
              "start": 18807,
              "end": 18812
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 18816,
                "end": 18827
              },
              "prefix": true,
              "start": 18815,
              "end": 18827
            },
            "start": 18807,
            "end": 18827
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 18829,
            "end": 18833
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x3n / -0xFEDCBA97n) is 0x0n'",
            "start": 18835,
            "end": 18881
          }
        ],
        "optional": false,
        "start": 18790,
        "end": 18882
      },
      "start": 18790,
      "end": 18883
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 18884,
            "end": 18890
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 18891,
            "end": 18900
          },
          "optional": false,
          "computed": false,
          "start": 18884,
          "end": 18900
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 18902,
                "end": 18906
              },
              "prefix": true,
              "start": 18901,
              "end": 18906
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 18910,
                "end": 18921
              },
              "prefix": true,
              "start": 18909,
              "end": 18921
            },
            "start": 18901,
            "end": 18921
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 18923,
            "end": 18927
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x3n / -0xFEDCBA98n) is 0x0n'",
            "start": 18929,
            "end": 18975
          }
        ],
        "optional": false,
        "start": 18884,
        "end": 18976
      },
      "start": 18884,
      "end": 18977
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 18979,
            "end": 18985
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 18986,
            "end": 18995
          },
          "optional": false,
          "computed": false,
          "start": 18979,
          "end": 18995
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 19000,
                "end": 19004
              },
              "prefix": true,
              "start": 18999,
              "end": 19004
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 19008,
                "end": 19027
              },
              "prefix": true,
              "start": 19007,
              "end": 19027
            },
            "start": 18999,
            "end": 19027
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 19031,
            "end": 19035
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x3n / -0xFEDCBA987654320Fn) is 0x0n'",
            "start": 19039,
            "end": 19093
          }
        ],
        "optional": false,
        "start": 18979,
        "end": 19095
      },
      "start": 18979,
      "end": 19096
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 19098,
            "end": 19104
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 19105,
            "end": 19114
          },
          "optional": false,
          "computed": false,
          "start": 19098,
          "end": 19114
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 19119,
                "end": 19123
              },
              "prefix": true,
              "start": 19118,
              "end": 19123
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 19127,
                "end": 19146
              },
              "prefix": true,
              "start": 19126,
              "end": 19146
            },
            "start": 19118,
            "end": 19146
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 19150,
            "end": 19154
          },
          {
            "type": "Literal",
            "value": "The result of (-0x3n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x3n / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 19158,
            "end": 19212
          }
        ],
        "optional": false,
        "start": 19098,
        "end": 19214
      },
      "start": 19098,
      "end": 19215
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 19217,
            "end": 19223
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 19224,
            "end": 19233
          },
          "optional": false,
          "computed": false,
          "start": 19217,
          "end": 19233
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 19238,
                "end": 19245
              },
              "prefix": true,
              "start": 19237,
              "end": 19245
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 19248,
              "end": 19267
            },
            "start": 19237,
            "end": 19267
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 19271,
            "end": 19275
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x1234n / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 19279,
            "end": 19335
          }
        ],
        "optional": false,
        "start": 19217,
        "end": 19337
      },
      "start": 19217,
      "end": 19338
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 19340,
            "end": 19346
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 19347,
            "end": 19356
          },
          "optional": false,
          "computed": false,
          "start": 19340,
          "end": 19356
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 19361,
                "end": 19368
              },
              "prefix": true,
              "start": 19360,
              "end": 19368
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 19371,
              "end": 19390
            },
            "start": 19360,
            "end": 19390
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 19394,
            "end": 19398
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x1234n / 0xFEDCBA987654320Fn) is 0x0n'",
            "start": 19402,
            "end": 19458
          }
        ],
        "optional": false,
        "start": 19340,
        "end": 19460
      },
      "start": 19340,
      "end": 19461
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 19463,
            "end": 19469
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 19470,
            "end": 19479
          },
          "optional": false,
          "computed": false,
          "start": 19463,
          "end": 19479
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 19481,
                "end": 19488
              },
              "prefix": true,
              "start": 19480,
              "end": 19488
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 19491,
              "end": 19502
            },
            "start": 19480,
            "end": 19502
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 19504,
            "end": 19508
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x1234n / 0xFEDCBA98n) is 0x0n'",
            "start": 19510,
            "end": 19558
          }
        ],
        "optional": false,
        "start": 19463,
        "end": 19559
      },
      "start": 19463,
      "end": 19560
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 19561,
            "end": 19567
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 19568,
            "end": 19577
          },
          "optional": false,
          "computed": false,
          "start": 19561,
          "end": 19577
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 19579,
                "end": 19586
              },
              "prefix": true,
              "start": 19578,
              "end": 19586
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 19589,
              "end": 19600
            },
            "start": 19578,
            "end": 19600
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 19602,
            "end": 19606
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x1234n / 0xFEDCBA97n) is 0x0n'",
            "start": 19608,
            "end": 19656
          }
        ],
        "optional": false,
        "start": 19561,
        "end": 19657
      },
      "start": 19561,
      "end": 19658
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 19659,
            "end": 19665
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 19666,
            "end": 19675
          },
          "optional": false,
          "computed": false,
          "start": 19659,
          "end": 19675
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 19677,
                "end": 19684
              },
              "prefix": true,
              "start": 19676,
              "end": 19684
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 19687,
              "end": 19694
            },
            "start": 19676,
            "end": 19694
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 19697,
              "end": 19701
            },
            "prefix": true,
            "start": 19696,
            "end": 19701
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / 0x1234n) is -0x1n",
            "raw": "'The result of (-0x1234n / 0x1234n) is -0x1n'",
            "start": 19703,
            "end": 19748
          }
        ],
        "optional": false,
        "start": 19659,
        "end": 19749
      },
      "start": 19659,
      "end": 19750
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 19751,
            "end": 19757
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 19758,
            "end": 19767
          },
          "optional": false,
          "computed": false,
          "start": 19751,
          "end": 19767
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 19769,
                "end": 19776
              },
              "prefix": true,
              "start": 19768,
              "end": 19776
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 19779,
              "end": 19783
            },
            "start": 19768,
            "end": 19783
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x611n",
              "bigint": "1553",
              "start": 19786,
              "end": 19792
            },
            "prefix": true,
            "start": 19785,
            "end": 19792
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / 0x3n) is -0x611n",
            "raw": "'The result of (-0x1234n / 0x3n) is -0x611n'",
            "start": 19794,
            "end": 19838
          }
        ],
        "optional": false,
        "start": 19751,
        "end": 19839
      },
      "start": 19751,
      "end": 19840
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 19841,
            "end": 19847
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 19848,
            "end": 19857
          },
          "optional": false,
          "computed": false,
          "start": 19841,
          "end": 19857
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 19859,
                "end": 19866
              },
              "prefix": true,
              "start": 19858,
              "end": 19866
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 19869,
              "end": 19873
            },
            "start": 19858,
            "end": 19873
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x91An",
              "bigint": "2330",
              "start": 19876,
              "end": 19882
            },
            "prefix": true,
            "start": 19875,
            "end": 19882
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / 0x2n) is -0x91An",
            "raw": "'The result of (-0x1234n / 0x2n) is -0x91An'",
            "start": 19884,
            "end": 19928
          }
        ],
        "optional": false,
        "start": 19841,
        "end": 19929
      },
      "start": 19841,
      "end": 19930
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 19931,
            "end": 19937
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 19938,
            "end": 19947
          },
          "optional": false,
          "computed": false,
          "start": 19931,
          "end": 19947
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 19949,
                "end": 19956
              },
              "prefix": true,
              "start": 19948,
              "end": 19956
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 19959,
              "end": 19963
            },
            "start": 19948,
            "end": 19963
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 19966,
              "end": 19973
            },
            "prefix": true,
            "start": 19965,
            "end": 19973
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / 0x1n) is -0x1234n",
            "raw": "'The result of (-0x1234n / 0x1n) is -0x1234n'",
            "start": 19975,
            "end": 20020
          }
        ],
        "optional": false,
        "start": 19931,
        "end": 20021
      },
      "start": 19931,
      "end": 20022
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 20023,
            "end": 20029
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 20030,
            "end": 20039
          },
          "optional": false,
          "computed": false,
          "start": 20023,
          "end": 20039
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 20041,
                "end": 20048
              },
              "prefix": true,
              "start": 20040,
              "end": 20048
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 20052,
                "end": 20056
              },
              "prefix": true,
              "start": 20051,
              "end": 20056
            },
            "start": 20040,
            "end": 20056
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1234n",
            "bigint": "4660",
            "start": 20058,
            "end": 20065
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / -0x1n) is 0x1234n",
            "raw": "'The result of (-0x1234n / -0x1n) is 0x1234n'",
            "start": 20067,
            "end": 20112
          }
        ],
        "optional": false,
        "start": 20023,
        "end": 20113
      },
      "start": 20023,
      "end": 20114
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 20115,
            "end": 20121
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 20122,
            "end": 20131
          },
          "optional": false,
          "computed": false,
          "start": 20115,
          "end": 20131
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 20133,
                "end": 20140
              },
              "prefix": true,
              "start": 20132,
              "end": 20140
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 20144,
                "end": 20148
              },
              "prefix": true,
              "start": 20143,
              "end": 20148
            },
            "start": 20132,
            "end": 20148
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x91An",
            "bigint": "2330",
            "start": 20150,
            "end": 20156
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / -0x2n) is 0x91An",
            "raw": "'The result of (-0x1234n / -0x2n) is 0x91An'",
            "start": 20158,
            "end": 20202
          }
        ],
        "optional": false,
        "start": 20115,
        "end": 20203
      },
      "start": 20115,
      "end": 20204
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 20205,
            "end": 20211
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 20212,
            "end": 20221
          },
          "optional": false,
          "computed": false,
          "start": 20205,
          "end": 20221
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 20223,
                "end": 20230
              },
              "prefix": true,
              "start": 20222,
              "end": 20230
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 20234,
                "end": 20238
              },
              "prefix": true,
              "start": 20233,
              "end": 20238
            },
            "start": 20222,
            "end": 20238
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x611n",
            "bigint": "1553",
            "start": 20240,
            "end": 20246
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / -0x3n) is 0x611n",
            "raw": "'The result of (-0x1234n / -0x3n) is 0x611n'",
            "start": 20248,
            "end": 20292
          }
        ],
        "optional": false,
        "start": 20205,
        "end": 20293
      },
      "start": 20205,
      "end": 20294
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 20295,
            "end": 20301
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 20302,
            "end": 20311
          },
          "optional": false,
          "computed": false,
          "start": 20295,
          "end": 20311
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 20313,
                "end": 20320
              },
              "prefix": true,
              "start": 20312,
              "end": 20320
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 20324,
                "end": 20331
              },
              "prefix": true,
              "start": 20323,
              "end": 20331
            },
            "start": 20312,
            "end": 20331
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 20333,
            "end": 20337
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / -0x1234n) is 0x1n",
            "raw": "'The result of (-0x1234n / -0x1234n) is 0x1n'",
            "start": 20339,
            "end": 20384
          }
        ],
        "optional": false,
        "start": 20295,
        "end": 20385
      },
      "start": 20295,
      "end": 20386
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 20387,
            "end": 20393
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 20394,
            "end": 20403
          },
          "optional": false,
          "computed": false,
          "start": 20387,
          "end": 20403
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 20405,
                "end": 20412
              },
              "prefix": true,
              "start": 20404,
              "end": 20412
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 20416,
                "end": 20427
              },
              "prefix": true,
              "start": 20415,
              "end": 20427
            },
            "start": 20404,
            "end": 20427
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 20429,
            "end": 20433
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x1234n / -0xFEDCBA97n) is 0x0n'",
            "start": 20435,
            "end": 20484
          }
        ],
        "optional": false,
        "start": 20387,
        "end": 20485
      },
      "start": 20387,
      "end": 20486
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 20487,
            "end": 20493
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 20494,
            "end": 20503
          },
          "optional": false,
          "computed": false,
          "start": 20487,
          "end": 20503
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 20505,
                "end": 20512
              },
              "prefix": true,
              "start": 20504,
              "end": 20512
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 20516,
                "end": 20527
              },
              "prefix": true,
              "start": 20515,
              "end": 20527
            },
            "start": 20504,
            "end": 20527
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 20529,
            "end": 20533
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x1234n / -0xFEDCBA98n) is 0x0n'",
            "start": 20535,
            "end": 20584
          }
        ],
        "optional": false,
        "start": 20487,
        "end": 20585
      },
      "start": 20487,
      "end": 20586
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 20588,
            "end": 20594
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 20595,
            "end": 20604
          },
          "optional": false,
          "computed": false,
          "start": 20588,
          "end": 20604
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 20609,
                "end": 20616
              },
              "prefix": true,
              "start": 20608,
              "end": 20616
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 20620,
                "end": 20639
              },
              "prefix": true,
              "start": 20619,
              "end": 20639
            },
            "start": 20608,
            "end": 20639
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 20643,
            "end": 20647
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x1234n / -0xFEDCBA987654320Fn) is 0x0n'",
            "start": 20651,
            "end": 20708
          }
        ],
        "optional": false,
        "start": 20588,
        "end": 20710
      },
      "start": 20588,
      "end": 20711
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 20713,
            "end": 20719
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 20720,
            "end": 20729
          },
          "optional": false,
          "computed": false,
          "start": 20713,
          "end": 20729
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 20734,
                "end": 20741
              },
              "prefix": true,
              "start": 20733,
              "end": 20741
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 20745,
                "end": 20764
              },
              "prefix": true,
              "start": 20744,
              "end": 20764
            },
            "start": 20733,
            "end": 20764
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 20768,
            "end": 20772
          },
          {
            "type": "Literal",
            "value": "The result of (-0x1234n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x1234n / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 20776,
            "end": 20833
          }
        ],
        "optional": false,
        "start": 20713,
        "end": 20835
      },
      "start": 20713,
      "end": 20836
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 20838,
            "end": 20844
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 20845,
            "end": 20854
          },
          "optional": false,
          "computed": false,
          "start": 20838,
          "end": 20854
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 20859,
                "end": 20870
              },
              "prefix": true,
              "start": 20858,
              "end": 20870
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 20873,
              "end": 20892
            },
            "start": 20858,
            "end": 20892
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 20896,
            "end": 20900
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA97n / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 20904,
            "end": 20964
          }
        ],
        "optional": false,
        "start": 20838,
        "end": 20966
      },
      "start": 20838,
      "end": 20967
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 20969,
            "end": 20975
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 20976,
            "end": 20985
          },
          "optional": false,
          "computed": false,
          "start": 20969,
          "end": 20985
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 20990,
                "end": 21001
              },
              "prefix": true,
              "start": 20989,
              "end": 21001
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 21004,
              "end": 21023
            },
            "start": 20989,
            "end": 21023
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 21027,
            "end": 21031
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0xFEDCBA97n / 0xFEDCBA987654320Fn) is 0x0n'",
            "start": 21035,
            "end": 21095
          }
        ],
        "optional": false,
        "start": 20969,
        "end": 21097
      },
      "start": 20969,
      "end": 21098
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 21100,
            "end": 21106
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 21107,
            "end": 21116
          },
          "optional": false,
          "computed": false,
          "start": 21100,
          "end": 21116
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 21121,
                "end": 21132
              },
              "prefix": true,
              "start": 21120,
              "end": 21132
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 21135,
              "end": 21146
            },
            "start": 21120,
            "end": 21146
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 21150,
            "end": 21154
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA97n / 0xFEDCBA98n) is 0x0n'",
            "start": 21158,
            "end": 21210
          }
        ],
        "optional": false,
        "start": 21100,
        "end": 21212
      },
      "start": 21100,
      "end": 21213
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 21215,
            "end": 21221
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 21222,
            "end": 21231
          },
          "optional": false,
          "computed": false,
          "start": 21215,
          "end": 21231
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 21236,
                "end": 21247
              },
              "prefix": true,
              "start": 21235,
              "end": 21247
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 21250,
              "end": 21261
            },
            "start": 21235,
            "end": 21261
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 21266,
              "end": 21270
            },
            "prefix": true,
            "start": 21265,
            "end": 21270
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / 0xFEDCBA97n) is -0x1n",
            "raw": "'The result of (-0xFEDCBA97n / 0xFEDCBA97n) is -0x1n'",
            "start": 21274,
            "end": 21327
          }
        ],
        "optional": false,
        "start": 21215,
        "end": 21329
      },
      "start": 21215,
      "end": 21330
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 21332,
            "end": 21338
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 21339,
            "end": 21348
          },
          "optional": false,
          "computed": false,
          "start": 21332,
          "end": 21348
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 21353,
                "end": 21364
              },
              "prefix": true,
              "start": 21352,
              "end": 21364
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 21367,
              "end": 21374
            },
            "start": 21352,
            "end": 21374
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xE0042n",
              "bigint": "917570",
              "start": 21379,
              "end": 21387
            },
            "prefix": true,
            "start": 21378,
            "end": 21387
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / 0x1234n) is -0xE0042n",
            "raw": "'The result of (-0xFEDCBA97n / 0x1234n) is -0xE0042n'",
            "start": 21391,
            "end": 21444
          }
        ],
        "optional": false,
        "start": 21332,
        "end": 21446
      },
      "start": 21332,
      "end": 21447
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 21449,
            "end": 21455
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 21456,
            "end": 21465
          },
          "optional": false,
          "computed": false,
          "start": 21449,
          "end": 21465
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 21470,
                "end": 21481
              },
              "prefix": true,
              "start": 21469,
              "end": 21481
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 21484,
              "end": 21488
            },
            "start": 21469,
            "end": 21488
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x54F43E32n",
              "bigint": "1425292850",
              "start": 21493,
              "end": 21504
            },
            "prefix": true,
            "start": 21492,
            "end": 21504
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / 0x3n) is -0x54F43E32n",
            "raw": "'The result of (-0xFEDCBA97n / 0x3n) is -0x54F43E32n'",
            "start": 21508,
            "end": 21561
          }
        ],
        "optional": false,
        "start": 21449,
        "end": 21563
      },
      "start": 21449,
      "end": 21564
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 21566,
            "end": 21572
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 21573,
            "end": 21582
          },
          "optional": false,
          "computed": false,
          "start": 21566,
          "end": 21582
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 21587,
                "end": 21598
              },
              "prefix": true,
              "start": 21586,
              "end": 21598
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 21601,
              "end": 21605
            },
            "start": 21586,
            "end": 21605
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x7F6E5D4Bn",
              "bigint": "2137939275",
              "start": 21610,
              "end": 21621
            },
            "prefix": true,
            "start": 21609,
            "end": 21621
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / 0x2n) is -0x7F6E5D4Bn",
            "raw": "'The result of (-0xFEDCBA97n / 0x2n) is -0x7F6E5D4Bn'",
            "start": 21625,
            "end": 21678
          }
        ],
        "optional": false,
        "start": 21566,
        "end": 21680
      },
      "start": 21566,
      "end": 21681
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 21683,
            "end": 21689
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 21690,
            "end": 21699
          },
          "optional": false,
          "computed": false,
          "start": 21683,
          "end": 21699
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 21704,
                "end": 21715
              },
              "prefix": true,
              "start": 21703,
              "end": 21715
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 21718,
              "end": 21722
            },
            "start": 21703,
            "end": 21722
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 21727,
              "end": 21738
            },
            "prefix": true,
            "start": 21726,
            "end": 21738
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / 0x1n) is -0xFEDCBA97n",
            "raw": "'The result of (-0xFEDCBA97n / 0x1n) is -0xFEDCBA97n'",
            "start": 21742,
            "end": 21795
          }
        ],
        "optional": false,
        "start": 21683,
        "end": 21797
      },
      "start": 21683,
      "end": 21798
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 21800,
            "end": 21806
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 21807,
            "end": 21816
          },
          "optional": false,
          "computed": false,
          "start": 21800,
          "end": 21816
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 21821,
                "end": 21832
              },
              "prefix": true,
              "start": 21820,
              "end": 21832
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 21836,
                "end": 21840
              },
              "prefix": true,
              "start": 21835,
              "end": 21840
            },
            "start": 21820,
            "end": 21840
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xFEDCBA97n",
            "bigint": "4275878551",
            "start": 21844,
            "end": 21855
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / -0x1n) is 0xFEDCBA97n",
            "raw": "'The result of (-0xFEDCBA97n / -0x1n) is 0xFEDCBA97n'",
            "start": 21859,
            "end": 21912
          }
        ],
        "optional": false,
        "start": 21800,
        "end": 21914
      },
      "start": 21800,
      "end": 21915
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 21917,
            "end": 21923
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 21924,
            "end": 21933
          },
          "optional": false,
          "computed": false,
          "start": 21917,
          "end": 21933
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 21938,
                "end": 21949
              },
              "prefix": true,
              "start": 21937,
              "end": 21949
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 21953,
                "end": 21957
              },
              "prefix": true,
              "start": 21952,
              "end": 21957
            },
            "start": 21937,
            "end": 21957
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x7F6E5D4Bn",
            "bigint": "2137939275",
            "start": 21961,
            "end": 21972
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / -0x2n) is 0x7F6E5D4Bn",
            "raw": "'The result of (-0xFEDCBA97n / -0x2n) is 0x7F6E5D4Bn'",
            "start": 21976,
            "end": 22029
          }
        ],
        "optional": false,
        "start": 21917,
        "end": 22031
      },
      "start": 21917,
      "end": 22032
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 22034,
            "end": 22040
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 22041,
            "end": 22050
          },
          "optional": false,
          "computed": false,
          "start": 22034,
          "end": 22050
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 22055,
                "end": 22066
              },
              "prefix": true,
              "start": 22054,
              "end": 22066
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 22070,
                "end": 22074
              },
              "prefix": true,
              "start": 22069,
              "end": 22074
            },
            "start": 22054,
            "end": 22074
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x54F43E32n",
            "bigint": "1425292850",
            "start": 22078,
            "end": 22089
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / -0x3n) is 0x54F43E32n",
            "raw": "'The result of (-0xFEDCBA97n / -0x3n) is 0x54F43E32n'",
            "start": 22093,
            "end": 22146
          }
        ],
        "optional": false,
        "start": 22034,
        "end": 22148
      },
      "start": 22034,
      "end": 22149
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 22151,
            "end": 22157
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 22158,
            "end": 22167
          },
          "optional": false,
          "computed": false,
          "start": 22151,
          "end": 22167
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 22172,
                "end": 22183
              },
              "prefix": true,
              "start": 22171,
              "end": 22183
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 22187,
                "end": 22194
              },
              "prefix": true,
              "start": 22186,
              "end": 22194
            },
            "start": 22171,
            "end": 22194
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xE0042n",
            "bigint": "917570",
            "start": 22198,
            "end": 22206
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / -0x1234n) is 0xE0042n",
            "raw": "'The result of (-0xFEDCBA97n / -0x1234n) is 0xE0042n'",
            "start": 22210,
            "end": 22263
          }
        ],
        "optional": false,
        "start": 22151,
        "end": 22265
      },
      "start": 22151,
      "end": 22266
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 22268,
            "end": 22274
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 22275,
            "end": 22284
          },
          "optional": false,
          "computed": false,
          "start": 22268,
          "end": 22284
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 22289,
                "end": 22300
              },
              "prefix": true,
              "start": 22288,
              "end": 22300
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 22304,
                "end": 22315
              },
              "prefix": true,
              "start": 22303,
              "end": 22315
            },
            "start": 22288,
            "end": 22315
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 22319,
            "end": 22323
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / -0xFEDCBA97n) is 0x1n",
            "raw": "'The result of (-0xFEDCBA97n / -0xFEDCBA97n) is 0x1n'",
            "start": 22327,
            "end": 22380
          }
        ],
        "optional": false,
        "start": 22268,
        "end": 22382
      },
      "start": 22268,
      "end": 22383
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 22385,
            "end": 22391
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 22392,
            "end": 22401
          },
          "optional": false,
          "computed": false,
          "start": 22385,
          "end": 22401
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 22406,
                "end": 22417
              },
              "prefix": true,
              "start": 22405,
              "end": 22417
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 22421,
                "end": 22432
              },
              "prefix": true,
              "start": 22420,
              "end": 22432
            },
            "start": 22405,
            "end": 22432
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 22436,
            "end": 22440
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA97n / -0xFEDCBA98n) is 0x0n'",
            "start": 22444,
            "end": 22497
          }
        ],
        "optional": false,
        "start": 22385,
        "end": 22499
      },
      "start": 22385,
      "end": 22500
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 22502,
            "end": 22508
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 22509,
            "end": 22518
          },
          "optional": false,
          "computed": false,
          "start": 22502,
          "end": 22518
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 22523,
                "end": 22534
              },
              "prefix": true,
              "start": 22522,
              "end": 22534
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 22538,
                "end": 22557
              },
              "prefix": true,
              "start": 22537,
              "end": 22557
            },
            "start": 22522,
            "end": 22557
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 22561,
            "end": 22565
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0xFEDCBA97n / -0xFEDCBA987654320Fn) is 0x0n'",
            "start": 22569,
            "end": 22630
          }
        ],
        "optional": false,
        "start": 22502,
        "end": 22632
      },
      "start": 22502,
      "end": 22633
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 22635,
            "end": 22641
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 22642,
            "end": 22651
          },
          "optional": false,
          "computed": false,
          "start": 22635,
          "end": 22651
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 22656,
                "end": 22667
              },
              "prefix": true,
              "start": 22655,
              "end": 22667
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 22671,
                "end": 22690
              },
              "prefix": true,
              "start": 22670,
              "end": 22690
            },
            "start": 22655,
            "end": 22690
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 22694,
            "end": 22698
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA97n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA97n / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 22702,
            "end": 22763
          }
        ],
        "optional": false,
        "start": 22635,
        "end": 22765
      },
      "start": 22635,
      "end": 22766
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 22768,
            "end": 22774
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 22775,
            "end": 22784
          },
          "optional": false,
          "computed": false,
          "start": 22768,
          "end": 22784
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 22789,
                "end": 22800
              },
              "prefix": true,
              "start": 22788,
              "end": 22800
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 22803,
              "end": 22822
            },
            "start": 22788,
            "end": 22822
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 22826,
            "end": 22830
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA98n / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 22834,
            "end": 22894
          }
        ],
        "optional": false,
        "start": 22768,
        "end": 22896
      },
      "start": 22768,
      "end": 22897
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 22899,
            "end": 22905
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 22906,
            "end": 22915
          },
          "optional": false,
          "computed": false,
          "start": 22899,
          "end": 22915
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 22920,
                "end": 22931
              },
              "prefix": true,
              "start": 22919,
              "end": 22931
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 22934,
              "end": 22953
            },
            "start": 22919,
            "end": 22953
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 22957,
            "end": 22961
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0xFEDCBA98n / 0xFEDCBA987654320Fn) is 0x0n'",
            "start": 22965,
            "end": 23025
          }
        ],
        "optional": false,
        "start": 22899,
        "end": 23027
      },
      "start": 22899,
      "end": 23028
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 23030,
            "end": 23036
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 23037,
            "end": 23046
          },
          "optional": false,
          "computed": false,
          "start": 23030,
          "end": 23046
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 23051,
                "end": 23062
              },
              "prefix": true,
              "start": 23050,
              "end": 23062
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 23065,
              "end": 23076
            },
            "start": 23050,
            "end": 23076
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 23081,
              "end": 23085
            },
            "prefix": true,
            "start": 23080,
            "end": 23085
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / 0xFEDCBA98n) is -0x1n",
            "raw": "'The result of (-0xFEDCBA98n / 0xFEDCBA98n) is -0x1n'",
            "start": 23089,
            "end": 23142
          }
        ],
        "optional": false,
        "start": 23030,
        "end": 23144
      },
      "start": 23030,
      "end": 23145
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 23147,
            "end": 23153
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 23154,
            "end": 23163
          },
          "optional": false,
          "computed": false,
          "start": 23147,
          "end": 23163
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 23168,
                "end": 23179
              },
              "prefix": true,
              "start": 23167,
              "end": 23179
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 23182,
              "end": 23193
            },
            "start": 23167,
            "end": 23193
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 23198,
              "end": 23202
            },
            "prefix": true,
            "start": 23197,
            "end": 23202
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / 0xFEDCBA97n) is -0x1n",
            "raw": "'The result of (-0xFEDCBA98n / 0xFEDCBA97n) is -0x1n'",
            "start": 23206,
            "end": 23259
          }
        ],
        "optional": false,
        "start": 23147,
        "end": 23261
      },
      "start": 23147,
      "end": 23262
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 23264,
            "end": 23270
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 23271,
            "end": 23280
          },
          "optional": false,
          "computed": false,
          "start": 23264,
          "end": 23280
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 23285,
                "end": 23296
              },
              "prefix": true,
              "start": 23284,
              "end": 23296
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 23299,
              "end": 23306
            },
            "start": 23284,
            "end": 23306
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xE0042n",
              "bigint": "917570",
              "start": 23311,
              "end": 23319
            },
            "prefix": true,
            "start": 23310,
            "end": 23319
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / 0x1234n) is -0xE0042n",
            "raw": "'The result of (-0xFEDCBA98n / 0x1234n) is -0xE0042n'",
            "start": 23323,
            "end": 23376
          }
        ],
        "optional": false,
        "start": 23264,
        "end": 23378
      },
      "start": 23264,
      "end": 23379
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 23381,
            "end": 23387
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 23388,
            "end": 23397
          },
          "optional": false,
          "computed": false,
          "start": 23381,
          "end": 23397
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 23402,
                "end": 23413
              },
              "prefix": true,
              "start": 23401,
              "end": 23413
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 23416,
              "end": 23420
            },
            "start": 23401,
            "end": 23420
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x54F43E32n",
              "bigint": "1425292850",
              "start": 23425,
              "end": 23436
            },
            "prefix": true,
            "start": 23424,
            "end": 23436
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / 0x3n) is -0x54F43E32n",
            "raw": "'The result of (-0xFEDCBA98n / 0x3n) is -0x54F43E32n'",
            "start": 23440,
            "end": 23493
          }
        ],
        "optional": false,
        "start": 23381,
        "end": 23495
      },
      "start": 23381,
      "end": 23496
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 23498,
            "end": 23504
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 23505,
            "end": 23514
          },
          "optional": false,
          "computed": false,
          "start": 23498,
          "end": 23514
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 23519,
                "end": 23530
              },
              "prefix": true,
              "start": 23518,
              "end": 23530
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 23533,
              "end": 23537
            },
            "start": 23518,
            "end": 23537
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x7F6E5D4Cn",
              "bigint": "2137939276",
              "start": 23542,
              "end": 23553
            },
            "prefix": true,
            "start": 23541,
            "end": 23553
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / 0x2n) is -0x7F6E5D4Cn",
            "raw": "'The result of (-0xFEDCBA98n / 0x2n) is -0x7F6E5D4Cn'",
            "start": 23557,
            "end": 23610
          }
        ],
        "optional": false,
        "start": 23498,
        "end": 23612
      },
      "start": 23498,
      "end": 23613
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 23615,
            "end": 23621
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 23622,
            "end": 23631
          },
          "optional": false,
          "computed": false,
          "start": 23615,
          "end": 23631
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 23636,
                "end": 23647
              },
              "prefix": true,
              "start": 23635,
              "end": 23647
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 23650,
              "end": 23654
            },
            "start": 23635,
            "end": 23654
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 23659,
              "end": 23670
            },
            "prefix": true,
            "start": 23658,
            "end": 23670
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / 0x1n) is -0xFEDCBA98n",
            "raw": "'The result of (-0xFEDCBA98n / 0x1n) is -0xFEDCBA98n'",
            "start": 23674,
            "end": 23727
          }
        ],
        "optional": false,
        "start": 23615,
        "end": 23729
      },
      "start": 23615,
      "end": 23730
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 23732,
            "end": 23738
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 23739,
            "end": 23748
          },
          "optional": false,
          "computed": false,
          "start": 23732,
          "end": 23748
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 23753,
                "end": 23764
              },
              "prefix": true,
              "start": 23752,
              "end": 23764
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 23768,
                "end": 23772
              },
              "prefix": true,
              "start": 23767,
              "end": 23772
            },
            "start": 23752,
            "end": 23772
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xFEDCBA98n",
            "bigint": "4275878552",
            "start": 23776,
            "end": 23787
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / -0x1n) is 0xFEDCBA98n",
            "raw": "'The result of (-0xFEDCBA98n / -0x1n) is 0xFEDCBA98n'",
            "start": 23791,
            "end": 23844
          }
        ],
        "optional": false,
        "start": 23732,
        "end": 23846
      },
      "start": 23732,
      "end": 23847
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 23849,
            "end": 23855
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 23856,
            "end": 23865
          },
          "optional": false,
          "computed": false,
          "start": 23849,
          "end": 23865
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 23870,
                "end": 23881
              },
              "prefix": true,
              "start": 23869,
              "end": 23881
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 23885,
                "end": 23889
              },
              "prefix": true,
              "start": 23884,
              "end": 23889
            },
            "start": 23869,
            "end": 23889
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x7F6E5D4Cn",
            "bigint": "2137939276",
            "start": 23893,
            "end": 23904
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / -0x2n) is 0x7F6E5D4Cn",
            "raw": "'The result of (-0xFEDCBA98n / -0x2n) is 0x7F6E5D4Cn'",
            "start": 23908,
            "end": 23961
          }
        ],
        "optional": false,
        "start": 23849,
        "end": 23963
      },
      "start": 23849,
      "end": 23964
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 23966,
            "end": 23972
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 23973,
            "end": 23982
          },
          "optional": false,
          "computed": false,
          "start": 23966,
          "end": 23982
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 23987,
                "end": 23998
              },
              "prefix": true,
              "start": 23986,
              "end": 23998
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 24002,
                "end": 24006
              },
              "prefix": true,
              "start": 24001,
              "end": 24006
            },
            "start": 23986,
            "end": 24006
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x54F43E32n",
            "bigint": "1425292850",
            "start": 24010,
            "end": 24021
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / -0x3n) is 0x54F43E32n",
            "raw": "'The result of (-0xFEDCBA98n / -0x3n) is 0x54F43E32n'",
            "start": 24025,
            "end": 24078
          }
        ],
        "optional": false,
        "start": 23966,
        "end": 24080
      },
      "start": 23966,
      "end": 24081
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 24083,
            "end": 24089
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 24090,
            "end": 24099
          },
          "optional": false,
          "computed": false,
          "start": 24083,
          "end": 24099
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 24104,
                "end": 24115
              },
              "prefix": true,
              "start": 24103,
              "end": 24115
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 24119,
                "end": 24126
              },
              "prefix": true,
              "start": 24118,
              "end": 24126
            },
            "start": 24103,
            "end": 24126
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xE0042n",
            "bigint": "917570",
            "start": 24130,
            "end": 24138
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / -0x1234n) is 0xE0042n",
            "raw": "'The result of (-0xFEDCBA98n / -0x1234n) is 0xE0042n'",
            "start": 24142,
            "end": 24195
          }
        ],
        "optional": false,
        "start": 24083,
        "end": 24197
      },
      "start": 24083,
      "end": 24198
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 24200,
            "end": 24206
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 24207,
            "end": 24216
          },
          "optional": false,
          "computed": false,
          "start": 24200,
          "end": 24216
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 24221,
                "end": 24232
              },
              "prefix": true,
              "start": 24220,
              "end": 24232
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 24236,
                "end": 24247
              },
              "prefix": true,
              "start": 24235,
              "end": 24247
            },
            "start": 24220,
            "end": 24247
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 24251,
            "end": 24255
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / -0xFEDCBA97n) is 0x1n",
            "raw": "'The result of (-0xFEDCBA98n / -0xFEDCBA97n) is 0x1n'",
            "start": 24259,
            "end": 24312
          }
        ],
        "optional": false,
        "start": 24200,
        "end": 24314
      },
      "start": 24200,
      "end": 24315
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 24317,
            "end": 24323
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 24324,
            "end": 24333
          },
          "optional": false,
          "computed": false,
          "start": 24317,
          "end": 24333
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 24338,
                "end": 24349
              },
              "prefix": true,
              "start": 24337,
              "end": 24349
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 24353,
                "end": 24364
              },
              "prefix": true,
              "start": 24352,
              "end": 24364
            },
            "start": 24337,
            "end": 24364
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 24368,
            "end": 24372
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / -0xFEDCBA98n) is 0x1n",
            "raw": "'The result of (-0xFEDCBA98n / -0xFEDCBA98n) is 0x1n'",
            "start": 24376,
            "end": 24429
          }
        ],
        "optional": false,
        "start": 24317,
        "end": 24431
      },
      "start": 24317,
      "end": 24432
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 24434,
            "end": 24440
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 24441,
            "end": 24450
          },
          "optional": false,
          "computed": false,
          "start": 24434,
          "end": 24450
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 24455,
                "end": 24466
              },
              "prefix": true,
              "start": 24454,
              "end": 24466
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 24470,
                "end": 24489
              },
              "prefix": true,
              "start": 24469,
              "end": 24489
            },
            "start": 24454,
            "end": 24489
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 24493,
            "end": 24497
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0xFEDCBA98n / -0xFEDCBA987654320Fn) is 0x0n'",
            "start": 24501,
            "end": 24562
          }
        ],
        "optional": false,
        "start": 24434,
        "end": 24564
      },
      "start": 24434,
      "end": 24565
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 24567,
            "end": 24573
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 24574,
            "end": 24583
          },
          "optional": false,
          "computed": false,
          "start": 24567,
          "end": 24583
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 24588,
                "end": 24599
              },
              "prefix": true,
              "start": 24587,
              "end": 24599
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 24603,
                "end": 24622
              },
              "prefix": true,
              "start": 24602,
              "end": 24622
            },
            "start": 24587,
            "end": 24622
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 24626,
            "end": 24630
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA98n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA98n / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 24634,
            "end": 24695
          }
        ],
        "optional": false,
        "start": 24567,
        "end": 24697
      },
      "start": 24567,
      "end": 24698
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 24700,
            "end": 24706
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 24707,
            "end": 24716
          },
          "optional": false,
          "computed": false,
          "start": 24700,
          "end": 24716
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 24721,
                "end": 24740
              },
              "prefix": true,
              "start": 24720,
              "end": 24740
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 24743,
              "end": 24762
            },
            "start": 24720,
            "end": 24762
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 24766,
            "end": 24770
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0xFEDCBA9876543210n) is 0x0n'",
            "start": 24774,
            "end": 24842
          }
        ],
        "optional": false,
        "start": 24700,
        "end": 24844
      },
      "start": 24700,
      "end": 24845
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 24847,
            "end": 24853
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 24854,
            "end": 24863
          },
          "optional": false,
          "computed": false,
          "start": 24847,
          "end": 24863
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 24868,
                "end": 24887
              },
              "prefix": true,
              "start": 24867,
              "end": 24887
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 24890,
              "end": 24909
            },
            "start": 24867,
            "end": 24909
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 24914,
              "end": 24918
            },
            "prefix": true,
            "start": 24913,
            "end": 24918
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / 0xFEDCBA987654320Fn) is -0x1n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0xFEDCBA987654320Fn) is -0x1n'",
            "start": 24922,
            "end": 24991
          }
        ],
        "optional": false,
        "start": 24847,
        "end": 24993
      },
      "start": 24847,
      "end": 24994
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 24996,
            "end": 25002
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 25003,
            "end": 25012
          },
          "optional": false,
          "computed": false,
          "start": 24996,
          "end": 25012
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 25017,
                "end": 25036
              },
              "prefix": true,
              "start": 25016,
              "end": 25036
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 25039,
              "end": 25050
            },
            "start": 25016,
            "end": 25050
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x100000000n",
              "bigint": "4294967296",
              "start": 25055,
              "end": 25067
            },
            "prefix": true,
            "start": 25054,
            "end": 25067
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / 0xFEDCBA98n) is -0x100000000n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0xFEDCBA98n) is -0x100000000n'",
            "start": 25071,
            "end": 25140
          }
        ],
        "optional": false,
        "start": 24996,
        "end": 25142
      },
      "start": 24996,
      "end": 25143
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 25145,
            "end": 25151
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 25152,
            "end": 25161
          },
          "optional": false,
          "computed": false,
          "start": 25145,
          "end": 25161
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 25166,
                "end": 25185
              },
              "prefix": true,
              "start": 25165,
              "end": 25185
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 25188,
              "end": 25199
            },
            "start": 25165,
            "end": 25199
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x100000001n",
              "bigint": "4294967297",
              "start": 25204,
              "end": 25216
            },
            "prefix": true,
            "start": 25203,
            "end": 25216
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / 0xFEDCBA97n) is -0x100000001n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0xFEDCBA97n) is -0x100000001n'",
            "start": 25220,
            "end": 25289
          }
        ],
        "optional": false,
        "start": 25145,
        "end": 25291
      },
      "start": 25145,
      "end": 25292
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 25294,
            "end": 25300
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 25301,
            "end": 25310
          },
          "optional": false,
          "computed": false,
          "start": 25294,
          "end": 25310
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 25315,
                "end": 25334
              },
              "prefix": true,
              "start": 25314,
              "end": 25334
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 25337,
              "end": 25344
            },
            "start": 25314,
            "end": 25344
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xE0042813BE5DCn",
              "bigint": "3940935309977052",
              "start": 25349,
              "end": 25365
            },
            "prefix": true,
            "start": 25348,
            "end": 25365
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / 0x1234n) is -0xE0042813BE5DCn",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0x1234n) is -0xE0042813BE5DCn'",
            "start": 25369,
            "end": 25438
          }
        ],
        "optional": false,
        "start": 25294,
        "end": 25440
      },
      "start": 25294,
      "end": 25441
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 25443,
            "end": 25449
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 25450,
            "end": 25459
          },
          "optional": false,
          "computed": false,
          "start": 25443,
          "end": 25459
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 25464,
                "end": 25483
              },
              "prefix": true,
              "start": 25463,
              "end": 25483
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 25486,
              "end": 25490
            },
            "start": 25463,
            "end": 25490
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x54F43E32D21C10AFn",
              "bigint": "6121586181497688239",
              "start": 25495,
              "end": 25514
            },
            "prefix": true,
            "start": 25494,
            "end": 25514
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / 0x3n) is -0x54F43E32D21C10AFn",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0x3n) is -0x54F43E32D21C10AFn'",
            "start": 25518,
            "end": 25587
          }
        ],
        "optional": false,
        "start": 25443,
        "end": 25589
      },
      "start": 25443,
      "end": 25590
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 25592,
            "end": 25598
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 25599,
            "end": 25608
          },
          "optional": false,
          "computed": false,
          "start": 25592,
          "end": 25608
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 25613,
                "end": 25632
              },
              "prefix": true,
              "start": 25612,
              "end": 25632
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 25635,
              "end": 25639
            },
            "start": 25612,
            "end": 25639
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x7F6E5D4C3B2A1907n",
              "bigint": "9182379272246532359",
              "start": 25644,
              "end": 25663
            },
            "prefix": true,
            "start": 25643,
            "end": 25663
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / 0x2n) is -0x7F6E5D4C3B2A1907n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0x2n) is -0x7F6E5D4C3B2A1907n'",
            "start": 25667,
            "end": 25736
          }
        ],
        "optional": false,
        "start": 25592,
        "end": 25738
      },
      "start": 25592,
      "end": 25739
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 25741,
            "end": 25747
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 25748,
            "end": 25757
          },
          "optional": false,
          "computed": false,
          "start": 25741,
          "end": 25757
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 25762,
                "end": 25781
              },
              "prefix": true,
              "start": 25761,
              "end": 25781
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 25784,
              "end": 25788
            },
            "start": 25761,
            "end": 25788
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 25793,
              "end": 25812
            },
            "prefix": true,
            "start": 25792,
            "end": 25812
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / 0x1n) is -0xFEDCBA987654320Fn",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0x1n) is -0xFEDCBA987654320Fn'",
            "start": 25816,
            "end": 25885
          }
        ],
        "optional": false,
        "start": 25741,
        "end": 25887
      },
      "start": 25741,
      "end": 25888
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 25890,
            "end": 25896
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 25897,
            "end": 25906
          },
          "optional": false,
          "computed": false,
          "start": 25890,
          "end": 25906
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 25911,
                "end": 25930
              },
              "prefix": true,
              "start": 25910,
              "end": 25930
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 25934,
                "end": 25938
              },
              "prefix": true,
              "start": 25933,
              "end": 25938
            },
            "start": 25910,
            "end": 25938
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xFEDCBA987654320Fn",
            "bigint": "18364758544493064719",
            "start": 25942,
            "end": 25961
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / -0x1n) is 0xFEDCBA987654320Fn",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0x1n) is 0xFEDCBA987654320Fn'",
            "start": 25965,
            "end": 26034
          }
        ],
        "optional": false,
        "start": 25890,
        "end": 26036
      },
      "start": 25890,
      "end": 26037
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 26039,
            "end": 26045
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 26046,
            "end": 26055
          },
          "optional": false,
          "computed": false,
          "start": 26039,
          "end": 26055
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 26060,
                "end": 26079
              },
              "prefix": true,
              "start": 26059,
              "end": 26079
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 26083,
                "end": 26087
              },
              "prefix": true,
              "start": 26082,
              "end": 26087
            },
            "start": 26059,
            "end": 26087
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x7F6E5D4C3B2A1907n",
            "bigint": "9182379272246532359",
            "start": 26091,
            "end": 26110
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / -0x2n) is 0x7F6E5D4C3B2A1907n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0x2n) is 0x7F6E5D4C3B2A1907n'",
            "start": 26114,
            "end": 26183
          }
        ],
        "optional": false,
        "start": 26039,
        "end": 26185
      },
      "start": 26039,
      "end": 26186
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 26188,
            "end": 26194
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 26195,
            "end": 26204
          },
          "optional": false,
          "computed": false,
          "start": 26188,
          "end": 26204
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 26209,
                "end": 26228
              },
              "prefix": true,
              "start": 26208,
              "end": 26228
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 26232,
                "end": 26236
              },
              "prefix": true,
              "start": 26231,
              "end": 26236
            },
            "start": 26208,
            "end": 26236
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x54F43E32D21C10AFn",
            "bigint": "6121586181497688239",
            "start": 26240,
            "end": 26259
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / -0x3n) is 0x54F43E32D21C10AFn",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0x3n) is 0x54F43E32D21C10AFn'",
            "start": 26263,
            "end": 26332
          }
        ],
        "optional": false,
        "start": 26188,
        "end": 26334
      },
      "start": 26188,
      "end": 26335
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 26337,
            "end": 26343
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 26344,
            "end": 26353
          },
          "optional": false,
          "computed": false,
          "start": 26337,
          "end": 26353
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 26358,
                "end": 26377
              },
              "prefix": true,
              "start": 26357,
              "end": 26377
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 26381,
                "end": 26388
              },
              "prefix": true,
              "start": 26380,
              "end": 26388
            },
            "start": 26357,
            "end": 26388
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xE0042813BE5DCn",
            "bigint": "3940935309977052",
            "start": 26392,
            "end": 26408
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / -0x1234n) is 0xE0042813BE5DCn",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0x1234n) is 0xE0042813BE5DCn'",
            "start": 26412,
            "end": 26481
          }
        ],
        "optional": false,
        "start": 26337,
        "end": 26483
      },
      "start": 26337,
      "end": 26484
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 26486,
            "end": 26492
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 26493,
            "end": 26502
          },
          "optional": false,
          "computed": false,
          "start": 26486,
          "end": 26502
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 26507,
                "end": 26526
              },
              "prefix": true,
              "start": 26506,
              "end": 26526
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 26530,
                "end": 26541
              },
              "prefix": true,
              "start": 26529,
              "end": 26541
            },
            "start": 26506,
            "end": 26541
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x100000001n",
            "bigint": "4294967297",
            "start": 26545,
            "end": 26557
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / -0xFEDCBA97n) is 0x100000001n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0xFEDCBA97n) is 0x100000001n'",
            "start": 26561,
            "end": 26630
          }
        ],
        "optional": false,
        "start": 26486,
        "end": 26632
      },
      "start": 26486,
      "end": 26633
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 26635,
            "end": 26641
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 26642,
            "end": 26651
          },
          "optional": false,
          "computed": false,
          "start": 26635,
          "end": 26651
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 26656,
                "end": 26675
              },
              "prefix": true,
              "start": 26655,
              "end": 26675
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 26679,
                "end": 26690
              },
              "prefix": true,
              "start": 26678,
              "end": 26690
            },
            "start": 26655,
            "end": 26690
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x100000000n",
            "bigint": "4294967296",
            "start": 26694,
            "end": 26706
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / -0xFEDCBA98n) is 0x100000000n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0xFEDCBA98n) is 0x100000000n'",
            "start": 26710,
            "end": 26779
          }
        ],
        "optional": false,
        "start": 26635,
        "end": 26781
      },
      "start": 26635,
      "end": 26782
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 26784,
            "end": 26790
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 26791,
            "end": 26800
          },
          "optional": false,
          "computed": false,
          "start": 26784,
          "end": 26800
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 26805,
                "end": 26824
              },
              "prefix": true,
              "start": 26804,
              "end": 26824
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 26828,
                "end": 26847
              },
              "prefix": true,
              "start": 26827,
              "end": 26847
            },
            "start": 26804,
            "end": 26847
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 26851,
            "end": 26855
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / -0xFEDCBA987654320Fn) is 0x1n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0xFEDCBA987654320Fn) is 0x1n'",
            "start": 26859,
            "end": 26928
          }
        ],
        "optional": false,
        "start": 26784,
        "end": 26930
      },
      "start": 26784,
      "end": 26931
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 26933,
            "end": 26939
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 26940,
            "end": 26949
          },
          "optional": false,
          "computed": false,
          "start": 26933,
          "end": 26949
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 26954,
                "end": 26973
              },
              "prefix": true,
              "start": 26953,
              "end": 26973
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 26977,
                "end": 26996
              },
              "prefix": true,
              "start": 26976,
              "end": 26996
            },
            "start": 26953,
            "end": 26996
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x0n",
            "bigint": "0",
            "start": 27000,
            "end": 27004
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA987654320Fn / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0xFEDCBA9876543210n) is 0x0n'",
            "start": 27008,
            "end": 27077
          }
        ],
        "optional": false,
        "start": 26933,
        "end": 27079
      },
      "start": 26933,
      "end": 27080
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 27082,
            "end": 27088
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 27089,
            "end": 27098
          },
          "optional": false,
          "computed": false,
          "start": 27082,
          "end": 27098
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 27103,
                "end": 27122
              },
              "prefix": true,
              "start": 27102,
              "end": 27122
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 27125,
              "end": 27144
            },
            "start": 27102,
            "end": 27144
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 27149,
              "end": 27153
            },
            "prefix": true,
            "start": 27148,
            "end": 27153
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / 0xFEDCBA9876543210n) is -0x1n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0xFEDCBA9876543210n) is -0x1n'",
            "start": 27157,
            "end": 27226
          }
        ],
        "optional": false,
        "start": 27082,
        "end": 27228
      },
      "start": 27082,
      "end": 27229
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 27231,
            "end": 27237
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 27238,
            "end": 27247
          },
          "optional": false,
          "computed": false,
          "start": 27231,
          "end": 27247
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 27252,
                "end": 27271
              },
              "prefix": true,
              "start": 27251,
              "end": 27271
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "18364758544493064719",
              "start": 27274,
              "end": 27293
            },
            "start": 27251,
            "end": 27293
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 27298,
              "end": 27302
            },
            "prefix": true,
            "start": 27297,
            "end": 27302
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / 0xFEDCBA987654320Fn) is -0x1n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0xFEDCBA987654320Fn) is -0x1n'",
            "start": 27306,
            "end": 27375
          }
        ],
        "optional": false,
        "start": 27231,
        "end": 27377
      },
      "start": 27231,
      "end": 27378
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 27380,
            "end": 27386
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 27387,
            "end": 27396
          },
          "optional": false,
          "computed": false,
          "start": 27380,
          "end": 27396
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 27401,
                "end": 27420
              },
              "prefix": true,
              "start": 27400,
              "end": 27420
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "4275878552",
              "start": 27423,
              "end": 27434
            },
            "start": 27400,
            "end": 27434
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x100000000n",
              "bigint": "4294967296",
              "start": 27439,
              "end": 27451
            },
            "prefix": true,
            "start": 27438,
            "end": 27451
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / 0xFEDCBA98n) is -0x100000000n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0xFEDCBA98n) is -0x100000000n'",
            "start": 27455,
            "end": 27524
          }
        ],
        "optional": false,
        "start": 27380,
        "end": 27526
      },
      "start": 27380,
      "end": 27527
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 27529,
            "end": 27535
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 27536,
            "end": 27545
          },
          "optional": false,
          "computed": false,
          "start": 27529,
          "end": 27545
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 27550,
                "end": 27569
              },
              "prefix": true,
              "start": 27549,
              "end": 27569
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "4275878551",
              "start": 27572,
              "end": 27583
            },
            "start": 27549,
            "end": 27583
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x100000001n",
              "bigint": "4294967297",
              "start": 27588,
              "end": 27600
            },
            "prefix": true,
            "start": 27587,
            "end": 27600
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / 0xFEDCBA97n) is -0x100000001n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0xFEDCBA97n) is -0x100000001n'",
            "start": 27604,
            "end": 27673
          }
        ],
        "optional": false,
        "start": 27529,
        "end": 27675
      },
      "start": 27529,
      "end": 27676
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 27678,
            "end": 27684
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 27685,
            "end": 27694
          },
          "optional": false,
          "computed": false,
          "start": 27678,
          "end": 27694
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 27699,
                "end": 27718
              },
              "prefix": true,
              "start": 27698,
              "end": 27718
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1234n",
              "bigint": "4660",
              "start": 27721,
              "end": 27728
            },
            "start": 27698,
            "end": 27728
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xE0042813BE5DCn",
              "bigint": "3940935309977052",
              "start": 27733,
              "end": 27749
            },
            "prefix": true,
            "start": 27732,
            "end": 27749
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / 0x1234n) is -0xE0042813BE5DCn",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0x1234n) is -0xE0042813BE5DCn'",
            "start": 27753,
            "end": 27822
          }
        ],
        "optional": false,
        "start": 27678,
        "end": 27824
      },
      "start": 27678,
      "end": 27825
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 27827,
            "end": 27833
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 27834,
            "end": 27843
          },
          "optional": false,
          "computed": false,
          "start": 27827,
          "end": 27843
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 27848,
                "end": 27867
              },
              "prefix": true,
              "start": 27847,
              "end": 27867
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x3n",
              "bigint": "3",
              "start": 27870,
              "end": 27874
            },
            "start": 27847,
            "end": 27874
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x54F43E32D21C10B0n",
              "bigint": "6121586181497688240",
              "start": 27879,
              "end": 27898
            },
            "prefix": true,
            "start": 27878,
            "end": 27898
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / 0x3n) is -0x54F43E32D21C10B0n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0x3n) is -0x54F43E32D21C10B0n'",
            "start": 27902,
            "end": 27971
          }
        ],
        "optional": false,
        "start": 27827,
        "end": 27973
      },
      "start": 27827,
      "end": 27974
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 27976,
            "end": 27982
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 27983,
            "end": 27992
          },
          "optional": false,
          "computed": false,
          "start": 27976,
          "end": 27992
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 27997,
                "end": 28016
              },
              "prefix": true,
              "start": 27996,
              "end": 28016
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x2n",
              "bigint": "2",
              "start": 28019,
              "end": 28023
            },
            "start": 27996,
            "end": 28023
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0x7F6E5D4C3B2A1908n",
              "bigint": "9182379272246532360",
              "start": 28028,
              "end": 28047
            },
            "prefix": true,
            "start": 28027,
            "end": 28047
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / 0x2n) is -0x7F6E5D4C3B2A1908n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0x2n) is -0x7F6E5D4C3B2A1908n'",
            "start": 28051,
            "end": 28120
          }
        ],
        "optional": false,
        "start": 27976,
        "end": 28122
      },
      "start": 27976,
      "end": 28123
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 28125,
            "end": 28131
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 28132,
            "end": 28141
          },
          "optional": false,
          "computed": false,
          "start": 28125,
          "end": 28141
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 28146,
                "end": 28165
              },
              "prefix": true,
              "start": 28145,
              "end": 28165
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x1n",
              "bigint": "1",
              "start": 28168,
              "end": 28172
            },
            "start": 28145,
            "end": 28172
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "18364758544493064720",
              "start": 28177,
              "end": 28196
            },
            "prefix": true,
            "start": 28176,
            "end": 28196
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / 0x1n) is -0xFEDCBA9876543210n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0x1n) is -0xFEDCBA9876543210n'",
            "start": 28200,
            "end": 28269
          }
        ],
        "optional": false,
        "start": 28125,
        "end": 28271
      },
      "start": 28125,
      "end": 28272
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 28274,
            "end": 28280
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 28281,
            "end": 28290
          },
          "optional": false,
          "computed": false,
          "start": 28274,
          "end": 28290
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 28295,
                "end": 28314
              },
              "prefix": true,
              "start": 28294,
              "end": 28314
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1n",
                "bigint": "1",
                "start": 28318,
                "end": 28322
              },
              "prefix": true,
              "start": 28317,
              "end": 28322
            },
            "start": 28294,
            "end": 28322
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xFEDCBA9876543210n",
            "bigint": "18364758544493064720",
            "start": 28326,
            "end": 28345
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / -0x1n) is 0xFEDCBA9876543210n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0x1n) is 0xFEDCBA9876543210n'",
            "start": 28349,
            "end": 28418
          }
        ],
        "optional": false,
        "start": 28274,
        "end": 28420
      },
      "start": 28274,
      "end": 28421
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 28423,
            "end": 28429
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 28430,
            "end": 28439
          },
          "optional": false,
          "computed": false,
          "start": 28423,
          "end": 28439
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 28444,
                "end": 28463
              },
              "prefix": true,
              "start": 28443,
              "end": 28463
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x2n",
                "bigint": "2",
                "start": 28467,
                "end": 28471
              },
              "prefix": true,
              "start": 28466,
              "end": 28471
            },
            "start": 28443,
            "end": 28471
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x7F6E5D4C3B2A1908n",
            "bigint": "9182379272246532360",
            "start": 28475,
            "end": 28494
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / -0x2n) is 0x7F6E5D4C3B2A1908n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0x2n) is 0x7F6E5D4C3B2A1908n'",
            "start": 28498,
            "end": 28567
          }
        ],
        "optional": false,
        "start": 28423,
        "end": 28569
      },
      "start": 28423,
      "end": 28570
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 28572,
            "end": 28578
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 28579,
            "end": 28588
          },
          "optional": false,
          "computed": false,
          "start": 28572,
          "end": 28588
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 28593,
                "end": 28612
              },
              "prefix": true,
              "start": 28592,
              "end": 28612
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x3n",
                "bigint": "3",
                "start": 28616,
                "end": 28620
              },
              "prefix": true,
              "start": 28615,
              "end": 28620
            },
            "start": 28592,
            "end": 28620
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x54F43E32D21C10B0n",
            "bigint": "6121586181497688240",
            "start": 28624,
            "end": 28643
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / -0x3n) is 0x54F43E32D21C10B0n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0x3n) is 0x54F43E32D21C10B0n'",
            "start": 28647,
            "end": 28716
          }
        ],
        "optional": false,
        "start": 28572,
        "end": 28718
      },
      "start": 28572,
      "end": 28719
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 28721,
            "end": 28727
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 28728,
            "end": 28737
          },
          "optional": false,
          "computed": false,
          "start": 28721,
          "end": 28737
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 28742,
                "end": 28761
              },
              "prefix": true,
              "start": 28741,
              "end": 28761
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x1234n",
                "bigint": "4660",
                "start": 28765,
                "end": 28772
              },
              "prefix": true,
              "start": 28764,
              "end": 28772
            },
            "start": 28741,
            "end": 28772
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xE0042813BE5DCn",
            "bigint": "3940935309977052",
            "start": 28776,
            "end": 28792
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / -0x1234n) is 0xE0042813BE5DCn",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0x1234n) is 0xE0042813BE5DCn'",
            "start": 28796,
            "end": 28865
          }
        ],
        "optional": false,
        "start": 28721,
        "end": 28867
      },
      "start": 28721,
      "end": 28868
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 28870,
            "end": 28876
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 28877,
            "end": 28886
          },
          "optional": false,
          "computed": false,
          "start": 28870,
          "end": 28886
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 28891,
                "end": 28910
              },
              "prefix": true,
              "start": 28890,
              "end": 28910
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "4275878551",
                "start": 28914,
                "end": 28925
              },
              "prefix": true,
              "start": 28913,
              "end": 28925
            },
            "start": 28890,
            "end": 28925
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x100000001n",
            "bigint": "4294967297",
            "start": 28929,
            "end": 28941
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / -0xFEDCBA97n) is 0x100000001n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0xFEDCBA97n) is 0x100000001n'",
            "start": 28945,
            "end": 29014
          }
        ],
        "optional": false,
        "start": 28870,
        "end": 29016
      },
      "start": 28870,
      "end": 29017
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 29019,
            "end": 29025
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 29026,
            "end": 29035
          },
          "optional": false,
          "computed": false,
          "start": 29019,
          "end": 29035
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 29040,
                "end": 29059
              },
              "prefix": true,
              "start": 29039,
              "end": 29059
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "4275878552",
                "start": 29063,
                "end": 29074
              },
              "prefix": true,
              "start": 29062,
              "end": 29074
            },
            "start": 29039,
            "end": 29074
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x100000000n",
            "bigint": "4294967296",
            "start": 29078,
            "end": 29090
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / -0xFEDCBA98n) is 0x100000000n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0xFEDCBA98n) is 0x100000000n'",
            "start": 29094,
            "end": 29163
          }
        ],
        "optional": false,
        "start": 29019,
        "end": 29165
      },
      "start": 29019,
      "end": 29166
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 29168,
            "end": 29174
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 29175,
            "end": 29184
          },
          "optional": false,
          "computed": false,
          "start": 29168,
          "end": 29184
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 29189,
                "end": 29208
              },
              "prefix": true,
              "start": 29188,
              "end": 29208
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "18364758544493064719",
                "start": 29212,
                "end": 29231
              },
              "prefix": true,
              "start": 29211,
              "end": 29231
            },
            "start": 29188,
            "end": 29231
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 29235,
            "end": 29239
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / -0xFEDCBA987654320Fn) is 0x1n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0xFEDCBA987654320Fn) is 0x1n'",
            "start": 29243,
            "end": 29312
          }
        ],
        "optional": false,
        "start": 29168,
        "end": 29314
      },
      "start": 29168,
      "end": 29315
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 29317,
            "end": 29323
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 29324,
            "end": 29333
          },
          "optional": false,
          "computed": false,
          "start": 29317,
          "end": 29333
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 29338,
                "end": 29357
              },
              "prefix": true,
              "start": 29337,
              "end": 29357
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "18364758544493064720",
                "start": 29361,
                "end": 29380
              },
              "prefix": true,
              "start": 29360,
              "end": 29380
            },
            "start": 29337,
            "end": 29380
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x1n",
            "bigint": "1",
            "start": 29384,
            "end": 29388
          },
          {
            "type": "Literal",
            "value": "The result of (-0xFEDCBA9876543210n / -0xFEDCBA9876543210n) is 0x1n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0xFEDCBA9876543210n) is 0x1n'",
            "start": 29392,
            "end": 29461
          }
        ],
        "optional": false,
        "start": 29317,
        "end": 29463
      },
      "start": 29317,
      "end": 29464
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 29465
}