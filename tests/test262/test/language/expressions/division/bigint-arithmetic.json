{
  "type": "Program",
  "start": 0,
  "end": 29465,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 266,
      "end": 409,
      "expression": {
        "type": "CallExpression",
        "start": 266,
        "end": 408,
        "callee": {
          "type": "MemberExpression",
          "start": 266,
          "end": 282,
          "object": {
            "type": "Identifier",
            "start": 266,
            "end": 272,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 273,
            "end": 282,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 286,
            "end": 327,
            "left": {
              "type": "Literal",
              "start": 286,
              "end": 305,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 308,
              "end": 327,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 331,
            "end": 335,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 339,
            "end": 406,
            "value": "The result of (0xFEDCBA9876543210n / 0xFEDCBA9876543210n) is 0x1n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0xFEDCBA9876543210n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 411,
      "end": 554,
      "expression": {
        "type": "CallExpression",
        "start": 411,
        "end": 553,
        "callee": {
          "type": "MemberExpression",
          "start": 411,
          "end": 427,
          "object": {
            "type": "Identifier",
            "start": 411,
            "end": 417,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 418,
            "end": 427,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 431,
            "end": 472,
            "left": {
              "type": "Literal",
              "start": 431,
              "end": 450,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 453,
              "end": 472,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 476,
            "end": 480,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 484,
            "end": 551,
            "value": "The result of (0xFEDCBA9876543210n / 0xFEDCBA987654320Fn) is 0x1n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0xFEDCBA987654320Fn) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 556,
      "end": 699,
      "expression": {
        "type": "CallExpression",
        "start": 556,
        "end": 698,
        "callee": {
          "type": "MemberExpression",
          "start": 556,
          "end": 572,
          "object": {
            "type": "Identifier",
            "start": 556,
            "end": 562,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 563,
            "end": 572,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 576,
            "end": 609,
            "left": {
              "type": "Literal",
              "start": 576,
              "end": 595,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 598,
              "end": 609,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 613,
            "end": 625,
            "value": null,
            "raw": "0x100000000n",
            "bigint": "0x100000000"
          },
          {
            "type": "Literal",
            "start": 629,
            "end": 696,
            "value": "The result of (0xFEDCBA9876543210n / 0xFEDCBA98n) is 0x100000000n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0xFEDCBA98n) is 0x100000000n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 701,
      "end": 844,
      "expression": {
        "type": "CallExpression",
        "start": 701,
        "end": 843,
        "callee": {
          "type": "MemberExpression",
          "start": 701,
          "end": 717,
          "object": {
            "type": "Identifier",
            "start": 701,
            "end": 707,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 708,
            "end": 717,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 721,
            "end": 754,
            "left": {
              "type": "Literal",
              "start": 721,
              "end": 740,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 743,
              "end": 754,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "Literal",
            "start": 758,
            "end": 770,
            "value": null,
            "raw": "0x100000001n",
            "bigint": "0x100000001"
          },
          {
            "type": "Literal",
            "start": 774,
            "end": 841,
            "value": "The result of (0xFEDCBA9876543210n / 0xFEDCBA97n) is 0x100000001n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0xFEDCBA97n) is 0x100000001n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 846,
      "end": 989,
      "expression": {
        "type": "CallExpression",
        "start": 846,
        "end": 988,
        "callee": {
          "type": "MemberExpression",
          "start": 846,
          "end": 862,
          "object": {
            "type": "Identifier",
            "start": 846,
            "end": 852,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 853,
            "end": 862,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 866,
            "end": 895,
            "left": {
              "type": "Literal",
              "start": 866,
              "end": 885,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 888,
              "end": 895,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "Literal",
            "start": 899,
            "end": 915,
            "value": null,
            "raw": "0xE0042813BE5DCn",
            "bigint": "0xE0042813BE5DC"
          },
          {
            "type": "Literal",
            "start": 919,
            "end": 986,
            "value": "The result of (0xFEDCBA9876543210n / 0x1234n) is 0xE0042813BE5DCn",
            "raw": "'The result of (0xFEDCBA9876543210n / 0x1234n) is 0xE0042813BE5DCn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 991,
      "end": 1134,
      "expression": {
        "type": "CallExpression",
        "start": 991,
        "end": 1133,
        "callee": {
          "type": "MemberExpression",
          "start": 991,
          "end": 1007,
          "object": {
            "type": "Identifier",
            "start": 991,
            "end": 997,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 998,
            "end": 1007,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1011,
            "end": 1037,
            "left": {
              "type": "Literal",
              "start": 1011,
              "end": 1030,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 1033,
              "end": 1037,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "Literal",
            "start": 1041,
            "end": 1060,
            "value": null,
            "raw": "0x54F43E32D21C10B0n",
            "bigint": "0x54F43E32D21C10B0"
          },
          {
            "type": "Literal",
            "start": 1064,
            "end": 1131,
            "value": "The result of (0xFEDCBA9876543210n / 0x3n) is 0x54F43E32D21C10B0n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0x3n) is 0x54F43E32D21C10B0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1136,
      "end": 1279,
      "expression": {
        "type": "CallExpression",
        "start": 1136,
        "end": 1278,
        "callee": {
          "type": "MemberExpression",
          "start": 1136,
          "end": 1152,
          "object": {
            "type": "Identifier",
            "start": 1136,
            "end": 1142,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1143,
            "end": 1152,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1156,
            "end": 1182,
            "left": {
              "type": "Literal",
              "start": 1156,
              "end": 1175,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 1178,
              "end": 1182,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "Literal",
            "start": 1186,
            "end": 1205,
            "value": null,
            "raw": "0x7F6E5D4C3B2A1908n",
            "bigint": "0x7F6E5D4C3B2A1908"
          },
          {
            "type": "Literal",
            "start": 1209,
            "end": 1276,
            "value": "The result of (0xFEDCBA9876543210n / 0x2n) is 0x7F6E5D4C3B2A1908n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0x2n) is 0x7F6E5D4C3B2A1908n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1281,
      "end": 1424,
      "expression": {
        "type": "CallExpression",
        "start": 1281,
        "end": 1423,
        "callee": {
          "type": "MemberExpression",
          "start": 1281,
          "end": 1297,
          "object": {
            "type": "Identifier",
            "start": 1281,
            "end": 1287,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1288,
            "end": 1297,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1301,
            "end": 1327,
            "left": {
              "type": "Literal",
              "start": 1301,
              "end": 1320,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 1323,
              "end": 1327,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "Literal",
            "start": 1331,
            "end": 1350,
            "value": null,
            "raw": "0xFEDCBA9876543210n",
            "bigint": "0xFEDCBA9876543210"
          },
          {
            "type": "Literal",
            "start": 1354,
            "end": 1421,
            "value": "The result of (0xFEDCBA9876543210n / 0x1n) is 0xFEDCBA9876543210n",
            "raw": "'The result of (0xFEDCBA9876543210n / 0x1n) is 0xFEDCBA9876543210n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1426,
      "end": 1573,
      "expression": {
        "type": "CallExpression",
        "start": 1426,
        "end": 1572,
        "callee": {
          "type": "MemberExpression",
          "start": 1426,
          "end": 1442,
          "object": {
            "type": "Identifier",
            "start": 1426,
            "end": 1432,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1433,
            "end": 1442,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1446,
            "end": 1473,
            "left": {
              "type": "Literal",
              "start": 1446,
              "end": 1465,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 1468,
              "end": 1473,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 1469,
                "end": 1473,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 1477,
            "end": 1497,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 1478,
              "end": 1497,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 1501,
            "end": 1570,
            "value": "The result of (0xFEDCBA9876543210n / -0x1n) is -0xFEDCBA9876543210n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0x1n) is -0xFEDCBA9876543210n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1575,
      "end": 1722,
      "expression": {
        "type": "CallExpression",
        "start": 1575,
        "end": 1721,
        "callee": {
          "type": "MemberExpression",
          "start": 1575,
          "end": 1591,
          "object": {
            "type": "Identifier",
            "start": 1575,
            "end": 1581,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1582,
            "end": 1591,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1595,
            "end": 1622,
            "left": {
              "type": "Literal",
              "start": 1595,
              "end": 1614,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 1617,
              "end": 1622,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 1618,
                "end": 1622,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 1626,
            "end": 1646,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 1627,
              "end": 1646,
              "value": null,
              "raw": "0x7F6E5D4C3B2A1908n",
              "bigint": "0x7F6E5D4C3B2A1908"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 1650,
            "end": 1719,
            "value": "The result of (0xFEDCBA9876543210n / -0x2n) is -0x7F6E5D4C3B2A1908n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0x2n) is -0x7F6E5D4C3B2A1908n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1724,
      "end": 1871,
      "expression": {
        "type": "CallExpression",
        "start": 1724,
        "end": 1870,
        "callee": {
          "type": "MemberExpression",
          "start": 1724,
          "end": 1740,
          "object": {
            "type": "Identifier",
            "start": 1724,
            "end": 1730,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1731,
            "end": 1740,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1744,
            "end": 1771,
            "left": {
              "type": "Literal",
              "start": 1744,
              "end": 1763,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 1766,
              "end": 1771,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 1767,
                "end": 1771,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 1775,
            "end": 1795,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 1776,
              "end": 1795,
              "value": null,
              "raw": "0x54F43E32D21C10B0n",
              "bigint": "0x54F43E32D21C10B0"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 1799,
            "end": 1868,
            "value": "The result of (0xFEDCBA9876543210n / -0x3n) is -0x54F43E32D21C10B0n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0x3n) is -0x54F43E32D21C10B0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1873,
      "end": 2020,
      "expression": {
        "type": "CallExpression",
        "start": 1873,
        "end": 2019,
        "callee": {
          "type": "MemberExpression",
          "start": 1873,
          "end": 1889,
          "object": {
            "type": "Identifier",
            "start": 1873,
            "end": 1879,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1880,
            "end": 1889,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1893,
            "end": 1923,
            "left": {
              "type": "Literal",
              "start": 1893,
              "end": 1912,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 1915,
              "end": 1923,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 1916,
                "end": 1923,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 1927,
            "end": 1944,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 1928,
              "end": 1944,
              "value": null,
              "raw": "0xE0042813BE5DCn",
              "bigint": "0xE0042813BE5DC"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 1948,
            "end": 2017,
            "value": "The result of (0xFEDCBA9876543210n / -0x1234n) is -0xE0042813BE5DCn",
            "raw": "'The result of (0xFEDCBA9876543210n / -0x1234n) is -0xE0042813BE5DCn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2022,
      "end": 2169,
      "expression": {
        "type": "CallExpression",
        "start": 2022,
        "end": 2168,
        "callee": {
          "type": "MemberExpression",
          "start": 2022,
          "end": 2038,
          "object": {
            "type": "Identifier",
            "start": 2022,
            "end": 2028,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2029,
            "end": 2038,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2042,
            "end": 2076,
            "left": {
              "type": "Literal",
              "start": 2042,
              "end": 2061,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 2064,
              "end": 2076,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 2065,
                "end": 2076,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 2080,
            "end": 2093,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 2081,
              "end": 2093,
              "value": null,
              "raw": "0x100000001n",
              "bigint": "0x100000001"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 2097,
            "end": 2166,
            "value": "The result of (0xFEDCBA9876543210n / -0xFEDCBA97n) is -0x100000001n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0xFEDCBA97n) is -0x100000001n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2171,
      "end": 2318,
      "expression": {
        "type": "CallExpression",
        "start": 2171,
        "end": 2317,
        "callee": {
          "type": "MemberExpression",
          "start": 2171,
          "end": 2187,
          "object": {
            "type": "Identifier",
            "start": 2171,
            "end": 2177,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2178,
            "end": 2187,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2191,
            "end": 2225,
            "left": {
              "type": "Literal",
              "start": 2191,
              "end": 2210,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 2213,
              "end": 2225,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 2214,
                "end": 2225,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 2229,
            "end": 2242,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 2230,
              "end": 2242,
              "value": null,
              "raw": "0x100000000n",
              "bigint": "0x100000000"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 2246,
            "end": 2315,
            "value": "The result of (0xFEDCBA9876543210n / -0xFEDCBA98n) is -0x100000000n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0xFEDCBA98n) is -0x100000000n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2320,
      "end": 2467,
      "expression": {
        "type": "CallExpression",
        "start": 2320,
        "end": 2466,
        "callee": {
          "type": "MemberExpression",
          "start": 2320,
          "end": 2336,
          "object": {
            "type": "Identifier",
            "start": 2320,
            "end": 2326,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2327,
            "end": 2336,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2340,
            "end": 2382,
            "left": {
              "type": "Literal",
              "start": 2340,
              "end": 2359,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 2362,
              "end": 2382,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 2363,
                "end": 2382,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 2386,
            "end": 2391,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 2387,
              "end": 2391,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 2395,
            "end": 2464,
            "value": "The result of (0xFEDCBA9876543210n / -0xFEDCBA987654320Fn) is -0x1n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0xFEDCBA987654320Fn) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2469,
      "end": 2616,
      "expression": {
        "type": "CallExpression",
        "start": 2469,
        "end": 2615,
        "callee": {
          "type": "MemberExpression",
          "start": 2469,
          "end": 2485,
          "object": {
            "type": "Identifier",
            "start": 2469,
            "end": 2475,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2476,
            "end": 2485,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2489,
            "end": 2531,
            "left": {
              "type": "Literal",
              "start": 2489,
              "end": 2508,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 2511,
              "end": 2531,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 2512,
                "end": 2531,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 2535,
            "end": 2540,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 2536,
              "end": 2540,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 2544,
            "end": 2613,
            "value": "The result of (0xFEDCBA9876543210n / -0xFEDCBA9876543210n) is -0x1n",
            "raw": "'The result of (0xFEDCBA9876543210n / -0xFEDCBA9876543210n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2618,
      "end": 2761,
      "expression": {
        "type": "CallExpression",
        "start": 2618,
        "end": 2760,
        "callee": {
          "type": "MemberExpression",
          "start": 2618,
          "end": 2634,
          "object": {
            "type": "Identifier",
            "start": 2618,
            "end": 2624,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2625,
            "end": 2634,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2638,
            "end": 2679,
            "left": {
              "type": "Literal",
              "start": 2638,
              "end": 2657,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 2660,
              "end": 2679,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 2683,
            "end": 2687,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 2691,
            "end": 2758,
            "value": "The result of (0xFEDCBA987654320Fn / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2763,
      "end": 2906,
      "expression": {
        "type": "CallExpression",
        "start": 2763,
        "end": 2905,
        "callee": {
          "type": "MemberExpression",
          "start": 2763,
          "end": 2779,
          "object": {
            "type": "Identifier",
            "start": 2763,
            "end": 2769,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2770,
            "end": 2779,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2783,
            "end": 2824,
            "left": {
              "type": "Literal",
              "start": 2783,
              "end": 2802,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 2805,
              "end": 2824,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 2828,
            "end": 2832,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 2836,
            "end": 2903,
            "value": "The result of (0xFEDCBA987654320Fn / 0xFEDCBA987654320Fn) is 0x1n",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0xFEDCBA987654320Fn) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2908,
      "end": 3051,
      "expression": {
        "type": "CallExpression",
        "start": 2908,
        "end": 3050,
        "callee": {
          "type": "MemberExpression",
          "start": 2908,
          "end": 2924,
          "object": {
            "type": "Identifier",
            "start": 2908,
            "end": 2914,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2915,
            "end": 2924,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2928,
            "end": 2961,
            "left": {
              "type": "Literal",
              "start": 2928,
              "end": 2947,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 2950,
              "end": 2961,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 2965,
            "end": 2977,
            "value": null,
            "raw": "0x100000000n",
            "bigint": "0x100000000"
          },
          {
            "type": "Literal",
            "start": 2981,
            "end": 3048,
            "value": "The result of (0xFEDCBA987654320Fn / 0xFEDCBA98n) is 0x100000000n",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0xFEDCBA98n) is 0x100000000n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3053,
      "end": 3196,
      "expression": {
        "type": "CallExpression",
        "start": 3053,
        "end": 3195,
        "callee": {
          "type": "MemberExpression",
          "start": 3053,
          "end": 3069,
          "object": {
            "type": "Identifier",
            "start": 3053,
            "end": 3059,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3060,
            "end": 3069,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3073,
            "end": 3106,
            "left": {
              "type": "Literal",
              "start": 3073,
              "end": 3092,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 3095,
              "end": 3106,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "Literal",
            "start": 3110,
            "end": 3122,
            "value": null,
            "raw": "0x100000001n",
            "bigint": "0x100000001"
          },
          {
            "type": "Literal",
            "start": 3126,
            "end": 3193,
            "value": "The result of (0xFEDCBA987654320Fn / 0xFEDCBA97n) is 0x100000001n",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0xFEDCBA97n) is 0x100000001n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3198,
      "end": 3341,
      "expression": {
        "type": "CallExpression",
        "start": 3198,
        "end": 3340,
        "callee": {
          "type": "MemberExpression",
          "start": 3198,
          "end": 3214,
          "object": {
            "type": "Identifier",
            "start": 3198,
            "end": 3204,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3205,
            "end": 3214,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3218,
            "end": 3247,
            "left": {
              "type": "Literal",
              "start": 3218,
              "end": 3237,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 3240,
              "end": 3247,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "Literal",
            "start": 3251,
            "end": 3267,
            "value": null,
            "raw": "0xE0042813BE5DCn",
            "bigint": "0xE0042813BE5DC"
          },
          {
            "type": "Literal",
            "start": 3271,
            "end": 3338,
            "value": "The result of (0xFEDCBA987654320Fn / 0x1234n) is 0xE0042813BE5DCn",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0x1234n) is 0xE0042813BE5DCn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3343,
      "end": 3486,
      "expression": {
        "type": "CallExpression",
        "start": 3343,
        "end": 3485,
        "callee": {
          "type": "MemberExpression",
          "start": 3343,
          "end": 3359,
          "object": {
            "type": "Identifier",
            "start": 3343,
            "end": 3349,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3350,
            "end": 3359,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3363,
            "end": 3389,
            "left": {
              "type": "Literal",
              "start": 3363,
              "end": 3382,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 3385,
              "end": 3389,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "Literal",
            "start": 3393,
            "end": 3412,
            "value": null,
            "raw": "0x54F43E32D21C10AFn",
            "bigint": "0x54F43E32D21C10AF"
          },
          {
            "type": "Literal",
            "start": 3416,
            "end": 3483,
            "value": "The result of (0xFEDCBA987654320Fn / 0x3n) is 0x54F43E32D21C10AFn",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0x3n) is 0x54F43E32D21C10AFn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3488,
      "end": 3631,
      "expression": {
        "type": "CallExpression",
        "start": 3488,
        "end": 3630,
        "callee": {
          "type": "MemberExpression",
          "start": 3488,
          "end": 3504,
          "object": {
            "type": "Identifier",
            "start": 3488,
            "end": 3494,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3495,
            "end": 3504,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3508,
            "end": 3534,
            "left": {
              "type": "Literal",
              "start": 3508,
              "end": 3527,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 3530,
              "end": 3534,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "Literal",
            "start": 3538,
            "end": 3557,
            "value": null,
            "raw": "0x7F6E5D4C3B2A1907n",
            "bigint": "0x7F6E5D4C3B2A1907"
          },
          {
            "type": "Literal",
            "start": 3561,
            "end": 3628,
            "value": "The result of (0xFEDCBA987654320Fn / 0x2n) is 0x7F6E5D4C3B2A1907n",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0x2n) is 0x7F6E5D4C3B2A1907n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3633,
      "end": 3776,
      "expression": {
        "type": "CallExpression",
        "start": 3633,
        "end": 3775,
        "callee": {
          "type": "MemberExpression",
          "start": 3633,
          "end": 3649,
          "object": {
            "type": "Identifier",
            "start": 3633,
            "end": 3639,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3640,
            "end": 3649,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3653,
            "end": 3679,
            "left": {
              "type": "Literal",
              "start": 3653,
              "end": 3672,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 3675,
              "end": 3679,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "Literal",
            "start": 3683,
            "end": 3702,
            "value": null,
            "raw": "0xFEDCBA987654320Fn",
            "bigint": "0xFEDCBA987654320F"
          },
          {
            "type": "Literal",
            "start": 3706,
            "end": 3773,
            "value": "The result of (0xFEDCBA987654320Fn / 0x1n) is 0xFEDCBA987654320Fn",
            "raw": "'The result of (0xFEDCBA987654320Fn / 0x1n) is 0xFEDCBA987654320Fn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3778,
      "end": 3925,
      "expression": {
        "type": "CallExpression",
        "start": 3778,
        "end": 3924,
        "callee": {
          "type": "MemberExpression",
          "start": 3778,
          "end": 3794,
          "object": {
            "type": "Identifier",
            "start": 3778,
            "end": 3784,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3785,
            "end": 3794,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3798,
            "end": 3825,
            "left": {
              "type": "Literal",
              "start": 3798,
              "end": 3817,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 3820,
              "end": 3825,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 3821,
                "end": 3825,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 3829,
            "end": 3849,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 3830,
              "end": 3849,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 3853,
            "end": 3922,
            "value": "The result of (0xFEDCBA987654320Fn / -0x1n) is -0xFEDCBA987654320Fn",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0x1n) is -0xFEDCBA987654320Fn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3927,
      "end": 4074,
      "expression": {
        "type": "CallExpression",
        "start": 3927,
        "end": 4073,
        "callee": {
          "type": "MemberExpression",
          "start": 3927,
          "end": 3943,
          "object": {
            "type": "Identifier",
            "start": 3927,
            "end": 3933,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3934,
            "end": 3943,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3947,
            "end": 3974,
            "left": {
              "type": "Literal",
              "start": 3947,
              "end": 3966,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 3969,
              "end": 3974,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 3970,
                "end": 3974,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 3978,
            "end": 3998,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 3979,
              "end": 3998,
              "value": null,
              "raw": "0x7F6E5D4C3B2A1907n",
              "bigint": "0x7F6E5D4C3B2A1907"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 4002,
            "end": 4071,
            "value": "The result of (0xFEDCBA987654320Fn / -0x2n) is -0x7F6E5D4C3B2A1907n",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0x2n) is -0x7F6E5D4C3B2A1907n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4076,
      "end": 4223,
      "expression": {
        "type": "CallExpression",
        "start": 4076,
        "end": 4222,
        "callee": {
          "type": "MemberExpression",
          "start": 4076,
          "end": 4092,
          "object": {
            "type": "Identifier",
            "start": 4076,
            "end": 4082,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4083,
            "end": 4092,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4096,
            "end": 4123,
            "left": {
              "type": "Literal",
              "start": 4096,
              "end": 4115,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 4118,
              "end": 4123,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 4119,
                "end": 4123,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 4127,
            "end": 4147,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 4128,
              "end": 4147,
              "value": null,
              "raw": "0x54F43E32D21C10AFn",
              "bigint": "0x54F43E32D21C10AF"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 4151,
            "end": 4220,
            "value": "The result of (0xFEDCBA987654320Fn / -0x3n) is -0x54F43E32D21C10AFn",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0x3n) is -0x54F43E32D21C10AFn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4225,
      "end": 4372,
      "expression": {
        "type": "CallExpression",
        "start": 4225,
        "end": 4371,
        "callee": {
          "type": "MemberExpression",
          "start": 4225,
          "end": 4241,
          "object": {
            "type": "Identifier",
            "start": 4225,
            "end": 4231,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4232,
            "end": 4241,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4245,
            "end": 4275,
            "left": {
              "type": "Literal",
              "start": 4245,
              "end": 4264,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 4267,
              "end": 4275,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 4268,
                "end": 4275,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 4279,
            "end": 4296,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 4280,
              "end": 4296,
              "value": null,
              "raw": "0xE0042813BE5DCn",
              "bigint": "0xE0042813BE5DC"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 4300,
            "end": 4369,
            "value": "The result of (0xFEDCBA987654320Fn / -0x1234n) is -0xE0042813BE5DCn",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0x1234n) is -0xE0042813BE5DCn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4374,
      "end": 4521,
      "expression": {
        "type": "CallExpression",
        "start": 4374,
        "end": 4520,
        "callee": {
          "type": "MemberExpression",
          "start": 4374,
          "end": 4390,
          "object": {
            "type": "Identifier",
            "start": 4374,
            "end": 4380,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4381,
            "end": 4390,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4394,
            "end": 4428,
            "left": {
              "type": "Literal",
              "start": 4394,
              "end": 4413,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 4416,
              "end": 4428,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 4417,
                "end": 4428,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 4432,
            "end": 4445,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 4433,
              "end": 4445,
              "value": null,
              "raw": "0x100000001n",
              "bigint": "0x100000001"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 4449,
            "end": 4518,
            "value": "The result of (0xFEDCBA987654320Fn / -0xFEDCBA97n) is -0x100000001n",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0xFEDCBA97n) is -0x100000001n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4523,
      "end": 4670,
      "expression": {
        "type": "CallExpression",
        "start": 4523,
        "end": 4669,
        "callee": {
          "type": "MemberExpression",
          "start": 4523,
          "end": 4539,
          "object": {
            "type": "Identifier",
            "start": 4523,
            "end": 4529,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4530,
            "end": 4539,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4543,
            "end": 4577,
            "left": {
              "type": "Literal",
              "start": 4543,
              "end": 4562,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 4565,
              "end": 4577,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 4566,
                "end": 4577,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 4581,
            "end": 4594,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 4582,
              "end": 4594,
              "value": null,
              "raw": "0x100000000n",
              "bigint": "0x100000000"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 4598,
            "end": 4667,
            "value": "The result of (0xFEDCBA987654320Fn / -0xFEDCBA98n) is -0x100000000n",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0xFEDCBA98n) is -0x100000000n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4672,
      "end": 4819,
      "expression": {
        "type": "CallExpression",
        "start": 4672,
        "end": 4818,
        "callee": {
          "type": "MemberExpression",
          "start": 4672,
          "end": 4688,
          "object": {
            "type": "Identifier",
            "start": 4672,
            "end": 4678,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4679,
            "end": 4688,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4692,
            "end": 4734,
            "left": {
              "type": "Literal",
              "start": 4692,
              "end": 4711,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 4714,
              "end": 4734,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 4715,
                "end": 4734,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 4738,
            "end": 4743,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 4739,
              "end": 4743,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 4747,
            "end": 4816,
            "value": "The result of (0xFEDCBA987654320Fn / -0xFEDCBA987654320Fn) is -0x1n",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0xFEDCBA987654320Fn) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4821,
      "end": 4966,
      "expression": {
        "type": "CallExpression",
        "start": 4821,
        "end": 4965,
        "callee": {
          "type": "MemberExpression",
          "start": 4821,
          "end": 4837,
          "object": {
            "type": "Identifier",
            "start": 4821,
            "end": 4827,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4828,
            "end": 4837,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4841,
            "end": 4883,
            "left": {
              "type": "Literal",
              "start": 4841,
              "end": 4860,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 4863,
              "end": 4883,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 4864,
                "end": 4883,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 4887,
            "end": 4891,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 4895,
            "end": 4963,
            "value": "The result of (0xFEDCBA987654320Fn / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0xFEDCBA987654320Fn / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4968,
      "end": 5095,
      "expression": {
        "type": "CallExpression",
        "start": 4968,
        "end": 5094,
        "callee": {
          "type": "MemberExpression",
          "start": 4968,
          "end": 4984,
          "object": {
            "type": "Identifier",
            "start": 4968,
            "end": 4974,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4975,
            "end": 4984,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4988,
            "end": 5021,
            "left": {
              "type": "Literal",
              "start": 4988,
              "end": 4999,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 5002,
              "end": 5021,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 5025,
            "end": 5029,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 5033,
            "end": 5092,
            "value": "The result of (0xFEDCBA98n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0xFEDCBA98n / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5097,
      "end": 5224,
      "expression": {
        "type": "CallExpression",
        "start": 5097,
        "end": 5223,
        "callee": {
          "type": "MemberExpression",
          "start": 5097,
          "end": 5113,
          "object": {
            "type": "Identifier",
            "start": 5097,
            "end": 5103,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5104,
            "end": 5113,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5117,
            "end": 5150,
            "left": {
              "type": "Literal",
              "start": 5117,
              "end": 5128,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 5131,
              "end": 5150,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 5154,
            "end": 5158,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 5162,
            "end": 5221,
            "value": "The result of (0xFEDCBA98n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0xFEDCBA98n / 0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5226,
      "end": 5337,
      "expression": {
        "type": "CallExpression",
        "start": 5226,
        "end": 5336,
        "callee": {
          "type": "MemberExpression",
          "start": 5226,
          "end": 5242,
          "object": {
            "type": "Identifier",
            "start": 5226,
            "end": 5232,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5233,
            "end": 5242,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5246,
            "end": 5271,
            "left": {
              "type": "Literal",
              "start": 5246,
              "end": 5257,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 5260,
              "end": 5271,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 5275,
            "end": 5279,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 5283,
            "end": 5334,
            "value": "The result of (0xFEDCBA98n / 0xFEDCBA98n) is 0x1n",
            "raw": "'The result of (0xFEDCBA98n / 0xFEDCBA98n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5339,
      "end": 5450,
      "expression": {
        "type": "CallExpression",
        "start": 5339,
        "end": 5449,
        "callee": {
          "type": "MemberExpression",
          "start": 5339,
          "end": 5355,
          "object": {
            "type": "Identifier",
            "start": 5339,
            "end": 5345,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5346,
            "end": 5355,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5359,
            "end": 5384,
            "left": {
              "type": "Literal",
              "start": 5359,
              "end": 5370,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 5373,
              "end": 5384,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "Literal",
            "start": 5388,
            "end": 5392,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 5396,
            "end": 5447,
            "value": "The result of (0xFEDCBA98n / 0xFEDCBA97n) is 0x1n",
            "raw": "'The result of (0xFEDCBA98n / 0xFEDCBA97n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5452,
      "end": 5563,
      "expression": {
        "type": "CallExpression",
        "start": 5452,
        "end": 5562,
        "callee": {
          "type": "MemberExpression",
          "start": 5452,
          "end": 5468,
          "object": {
            "type": "Identifier",
            "start": 5452,
            "end": 5458,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5459,
            "end": 5468,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5472,
            "end": 5493,
            "left": {
              "type": "Literal",
              "start": 5472,
              "end": 5483,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 5486,
              "end": 5493,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "Literal",
            "start": 5497,
            "end": 5505,
            "value": null,
            "raw": "0xE0042n",
            "bigint": "0xE0042"
          },
          {
            "type": "Literal",
            "start": 5509,
            "end": 5560,
            "value": "The result of (0xFEDCBA98n / 0x1234n) is 0xE0042n",
            "raw": "'The result of (0xFEDCBA98n / 0x1234n) is 0xE0042n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5565,
      "end": 5676,
      "expression": {
        "type": "CallExpression",
        "start": 5565,
        "end": 5675,
        "callee": {
          "type": "MemberExpression",
          "start": 5565,
          "end": 5581,
          "object": {
            "type": "Identifier",
            "start": 5565,
            "end": 5571,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5572,
            "end": 5581,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5585,
            "end": 5603,
            "left": {
              "type": "Literal",
              "start": 5585,
              "end": 5596,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 5599,
              "end": 5603,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "Literal",
            "start": 5607,
            "end": 5618,
            "value": null,
            "raw": "0x54F43E32n",
            "bigint": "0x54F43E32"
          },
          {
            "type": "Literal",
            "start": 5622,
            "end": 5673,
            "value": "The result of (0xFEDCBA98n / 0x3n) is 0x54F43E32n",
            "raw": "'The result of (0xFEDCBA98n / 0x3n) is 0x54F43E32n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5678,
      "end": 5789,
      "expression": {
        "type": "CallExpression",
        "start": 5678,
        "end": 5788,
        "callee": {
          "type": "MemberExpression",
          "start": 5678,
          "end": 5694,
          "object": {
            "type": "Identifier",
            "start": 5678,
            "end": 5684,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5685,
            "end": 5694,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5698,
            "end": 5716,
            "left": {
              "type": "Literal",
              "start": 5698,
              "end": 5709,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 5712,
              "end": 5716,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "Literal",
            "start": 5720,
            "end": 5731,
            "value": null,
            "raw": "0x7F6E5D4Cn",
            "bigint": "0x7F6E5D4C"
          },
          {
            "type": "Literal",
            "start": 5735,
            "end": 5786,
            "value": "The result of (0xFEDCBA98n / 0x2n) is 0x7F6E5D4Cn",
            "raw": "'The result of (0xFEDCBA98n / 0x2n) is 0x7F6E5D4Cn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5791,
      "end": 5902,
      "expression": {
        "type": "CallExpression",
        "start": 5791,
        "end": 5901,
        "callee": {
          "type": "MemberExpression",
          "start": 5791,
          "end": 5807,
          "object": {
            "type": "Identifier",
            "start": 5791,
            "end": 5797,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5798,
            "end": 5807,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5811,
            "end": 5829,
            "left": {
              "type": "Literal",
              "start": 5811,
              "end": 5822,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 5825,
              "end": 5829,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "Literal",
            "start": 5833,
            "end": 5844,
            "value": null,
            "raw": "0xFEDCBA98n",
            "bigint": "0xFEDCBA98"
          },
          {
            "type": "Literal",
            "start": 5848,
            "end": 5899,
            "value": "The result of (0xFEDCBA98n / 0x1n) is 0xFEDCBA98n",
            "raw": "'The result of (0xFEDCBA98n / 0x1n) is 0xFEDCBA98n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5904,
      "end": 6019,
      "expression": {
        "type": "CallExpression",
        "start": 5904,
        "end": 6018,
        "callee": {
          "type": "MemberExpression",
          "start": 5904,
          "end": 5920,
          "object": {
            "type": "Identifier",
            "start": 5904,
            "end": 5910,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5911,
            "end": 5920,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5924,
            "end": 5943,
            "left": {
              "type": "Literal",
              "start": 5924,
              "end": 5935,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 5938,
              "end": 5943,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 5939,
                "end": 5943,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 5947,
            "end": 5959,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 5948,
              "end": 5959,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 5963,
            "end": 6016,
            "value": "The result of (0xFEDCBA98n / -0x1n) is -0xFEDCBA98n",
            "raw": "'The result of (0xFEDCBA98n / -0x1n) is -0xFEDCBA98n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 6021,
      "end": 6136,
      "expression": {
        "type": "CallExpression",
        "start": 6021,
        "end": 6135,
        "callee": {
          "type": "MemberExpression",
          "start": 6021,
          "end": 6037,
          "object": {
            "type": "Identifier",
            "start": 6021,
            "end": 6027,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 6028,
            "end": 6037,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 6041,
            "end": 6060,
            "left": {
              "type": "Literal",
              "start": 6041,
              "end": 6052,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 6055,
              "end": 6060,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 6056,
                "end": 6060,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 6064,
            "end": 6076,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 6065,
              "end": 6076,
              "value": null,
              "raw": "0x7F6E5D4Cn",
              "bigint": "0x7F6E5D4C"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 6080,
            "end": 6133,
            "value": "The result of (0xFEDCBA98n / -0x2n) is -0x7F6E5D4Cn",
            "raw": "'The result of (0xFEDCBA98n / -0x2n) is -0x7F6E5D4Cn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 6138,
      "end": 6253,
      "expression": {
        "type": "CallExpression",
        "start": 6138,
        "end": 6252,
        "callee": {
          "type": "MemberExpression",
          "start": 6138,
          "end": 6154,
          "object": {
            "type": "Identifier",
            "start": 6138,
            "end": 6144,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 6145,
            "end": 6154,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 6158,
            "end": 6177,
            "left": {
              "type": "Literal",
              "start": 6158,
              "end": 6169,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 6172,
              "end": 6177,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 6173,
                "end": 6177,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 6181,
            "end": 6193,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 6182,
              "end": 6193,
              "value": null,
              "raw": "0x54F43E32n",
              "bigint": "0x54F43E32"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 6197,
            "end": 6250,
            "value": "The result of (0xFEDCBA98n / -0x3n) is -0x54F43E32n",
            "raw": "'The result of (0xFEDCBA98n / -0x3n) is -0x54F43E32n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 6255,
      "end": 6370,
      "expression": {
        "type": "CallExpression",
        "start": 6255,
        "end": 6369,
        "callee": {
          "type": "MemberExpression",
          "start": 6255,
          "end": 6271,
          "object": {
            "type": "Identifier",
            "start": 6255,
            "end": 6261,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 6262,
            "end": 6271,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 6275,
            "end": 6297,
            "left": {
              "type": "Literal",
              "start": 6275,
              "end": 6286,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 6289,
              "end": 6297,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 6290,
                "end": 6297,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 6301,
            "end": 6310,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 6302,
              "end": 6310,
              "value": null,
              "raw": "0xE0042n",
              "bigint": "0xE0042"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 6314,
            "end": 6367,
            "value": "The result of (0xFEDCBA98n / -0x1234n) is -0xE0042n",
            "raw": "'The result of (0xFEDCBA98n / -0x1234n) is -0xE0042n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 6372,
      "end": 6487,
      "expression": {
        "type": "CallExpression",
        "start": 6372,
        "end": 6486,
        "callee": {
          "type": "MemberExpression",
          "start": 6372,
          "end": 6388,
          "object": {
            "type": "Identifier",
            "start": 6372,
            "end": 6378,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 6379,
            "end": 6388,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 6392,
            "end": 6418,
            "left": {
              "type": "Literal",
              "start": 6392,
              "end": 6403,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 6406,
              "end": 6418,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 6407,
                "end": 6418,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 6422,
            "end": 6427,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 6423,
              "end": 6427,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 6431,
            "end": 6484,
            "value": "The result of (0xFEDCBA98n / -0xFEDCBA97n) is -0x1n",
            "raw": "'The result of (0xFEDCBA98n / -0xFEDCBA97n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 6489,
      "end": 6604,
      "expression": {
        "type": "CallExpression",
        "start": 6489,
        "end": 6603,
        "callee": {
          "type": "MemberExpression",
          "start": 6489,
          "end": 6505,
          "object": {
            "type": "Identifier",
            "start": 6489,
            "end": 6495,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 6496,
            "end": 6505,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 6509,
            "end": 6535,
            "left": {
              "type": "Literal",
              "start": 6509,
              "end": 6520,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 6523,
              "end": 6535,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 6524,
                "end": 6535,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 6539,
            "end": 6544,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 6540,
              "end": 6544,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 6548,
            "end": 6601,
            "value": "The result of (0xFEDCBA98n / -0xFEDCBA98n) is -0x1n",
            "raw": "'The result of (0xFEDCBA98n / -0xFEDCBA98n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 6606,
      "end": 6735,
      "expression": {
        "type": "CallExpression",
        "start": 6606,
        "end": 6734,
        "callee": {
          "type": "MemberExpression",
          "start": 6606,
          "end": 6622,
          "object": {
            "type": "Identifier",
            "start": 6606,
            "end": 6612,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 6613,
            "end": 6622,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 6626,
            "end": 6660,
            "left": {
              "type": "Literal",
              "start": 6626,
              "end": 6637,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 6640,
              "end": 6660,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 6641,
                "end": 6660,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 6664,
            "end": 6668,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 6672,
            "end": 6732,
            "value": "The result of (0xFEDCBA98n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0xFEDCBA98n / -0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 6737,
      "end": 6866,
      "expression": {
        "type": "CallExpression",
        "start": 6737,
        "end": 6865,
        "callee": {
          "type": "MemberExpression",
          "start": 6737,
          "end": 6753,
          "object": {
            "type": "Identifier",
            "start": 6737,
            "end": 6743,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 6744,
            "end": 6753,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 6757,
            "end": 6791,
            "left": {
              "type": "Literal",
              "start": 6757,
              "end": 6768,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 6771,
              "end": 6791,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 6772,
                "end": 6791,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 6795,
            "end": 6799,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 6803,
            "end": 6863,
            "value": "The result of (0xFEDCBA98n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0xFEDCBA98n / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 6868,
      "end": 6995,
      "expression": {
        "type": "CallExpression",
        "start": 6868,
        "end": 6994,
        "callee": {
          "type": "MemberExpression",
          "start": 6868,
          "end": 6884,
          "object": {
            "type": "Identifier",
            "start": 6868,
            "end": 6874,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 6875,
            "end": 6884,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 6888,
            "end": 6921,
            "left": {
              "type": "Literal",
              "start": 6888,
              "end": 6899,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 6902,
              "end": 6921,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 6925,
            "end": 6929,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 6933,
            "end": 6992,
            "value": "The result of (0xFEDCBA97n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0xFEDCBA97n / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 6997,
      "end": 7124,
      "expression": {
        "type": "CallExpression",
        "start": 6997,
        "end": 7123,
        "callee": {
          "type": "MemberExpression",
          "start": 6997,
          "end": 7013,
          "object": {
            "type": "Identifier",
            "start": 6997,
            "end": 7003,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 7004,
            "end": 7013,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 7017,
            "end": 7050,
            "left": {
              "type": "Literal",
              "start": 7017,
              "end": 7028,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 7031,
              "end": 7050,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 7054,
            "end": 7058,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 7062,
            "end": 7121,
            "value": "The result of (0xFEDCBA97n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0xFEDCBA97n / 0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 7126,
      "end": 7237,
      "expression": {
        "type": "CallExpression",
        "start": 7126,
        "end": 7236,
        "callee": {
          "type": "MemberExpression",
          "start": 7126,
          "end": 7142,
          "object": {
            "type": "Identifier",
            "start": 7126,
            "end": 7132,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 7133,
            "end": 7142,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 7146,
            "end": 7171,
            "left": {
              "type": "Literal",
              "start": 7146,
              "end": 7157,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 7160,
              "end": 7171,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 7175,
            "end": 7179,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 7183,
            "end": 7234,
            "value": "The result of (0xFEDCBA97n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0xFEDCBA97n / 0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 7239,
      "end": 7350,
      "expression": {
        "type": "CallExpression",
        "start": 7239,
        "end": 7349,
        "callee": {
          "type": "MemberExpression",
          "start": 7239,
          "end": 7255,
          "object": {
            "type": "Identifier",
            "start": 7239,
            "end": 7245,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 7246,
            "end": 7255,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 7259,
            "end": 7284,
            "left": {
              "type": "Literal",
              "start": 7259,
              "end": 7270,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 7273,
              "end": 7284,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "Literal",
            "start": 7288,
            "end": 7292,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 7296,
            "end": 7347,
            "value": "The result of (0xFEDCBA97n / 0xFEDCBA97n) is 0x1n",
            "raw": "'The result of (0xFEDCBA97n / 0xFEDCBA97n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 7352,
      "end": 7463,
      "expression": {
        "type": "CallExpression",
        "start": 7352,
        "end": 7462,
        "callee": {
          "type": "MemberExpression",
          "start": 7352,
          "end": 7368,
          "object": {
            "type": "Identifier",
            "start": 7352,
            "end": 7358,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 7359,
            "end": 7368,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 7372,
            "end": 7393,
            "left": {
              "type": "Literal",
              "start": 7372,
              "end": 7383,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 7386,
              "end": 7393,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "Literal",
            "start": 7397,
            "end": 7405,
            "value": null,
            "raw": "0xE0042n",
            "bigint": "0xE0042"
          },
          {
            "type": "Literal",
            "start": 7409,
            "end": 7460,
            "value": "The result of (0xFEDCBA97n / 0x1234n) is 0xE0042n",
            "raw": "'The result of (0xFEDCBA97n / 0x1234n) is 0xE0042n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 7465,
      "end": 7576,
      "expression": {
        "type": "CallExpression",
        "start": 7465,
        "end": 7575,
        "callee": {
          "type": "MemberExpression",
          "start": 7465,
          "end": 7481,
          "object": {
            "type": "Identifier",
            "start": 7465,
            "end": 7471,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 7472,
            "end": 7481,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 7485,
            "end": 7503,
            "left": {
              "type": "Literal",
              "start": 7485,
              "end": 7496,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 7499,
              "end": 7503,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "Literal",
            "start": 7507,
            "end": 7518,
            "value": null,
            "raw": "0x54F43E32n",
            "bigint": "0x54F43E32"
          },
          {
            "type": "Literal",
            "start": 7522,
            "end": 7573,
            "value": "The result of (0xFEDCBA97n / 0x3n) is 0x54F43E32n",
            "raw": "'The result of (0xFEDCBA97n / 0x3n) is 0x54F43E32n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 7578,
      "end": 7689,
      "expression": {
        "type": "CallExpression",
        "start": 7578,
        "end": 7688,
        "callee": {
          "type": "MemberExpression",
          "start": 7578,
          "end": 7594,
          "object": {
            "type": "Identifier",
            "start": 7578,
            "end": 7584,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 7585,
            "end": 7594,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 7598,
            "end": 7616,
            "left": {
              "type": "Literal",
              "start": 7598,
              "end": 7609,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 7612,
              "end": 7616,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "Literal",
            "start": 7620,
            "end": 7631,
            "value": null,
            "raw": "0x7F6E5D4Bn",
            "bigint": "0x7F6E5D4B"
          },
          {
            "type": "Literal",
            "start": 7635,
            "end": 7686,
            "value": "The result of (0xFEDCBA97n / 0x2n) is 0x7F6E5D4Bn",
            "raw": "'The result of (0xFEDCBA97n / 0x2n) is 0x7F6E5D4Bn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 7691,
      "end": 7802,
      "expression": {
        "type": "CallExpression",
        "start": 7691,
        "end": 7801,
        "callee": {
          "type": "MemberExpression",
          "start": 7691,
          "end": 7707,
          "object": {
            "type": "Identifier",
            "start": 7691,
            "end": 7697,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 7698,
            "end": 7707,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 7711,
            "end": 7729,
            "left": {
              "type": "Literal",
              "start": 7711,
              "end": 7722,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 7725,
              "end": 7729,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "Literal",
            "start": 7733,
            "end": 7744,
            "value": null,
            "raw": "0xFEDCBA97n",
            "bigint": "0xFEDCBA97"
          },
          {
            "type": "Literal",
            "start": 7748,
            "end": 7799,
            "value": "The result of (0xFEDCBA97n / 0x1n) is 0xFEDCBA97n",
            "raw": "'The result of (0xFEDCBA97n / 0x1n) is 0xFEDCBA97n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 7804,
      "end": 7919,
      "expression": {
        "type": "CallExpression",
        "start": 7804,
        "end": 7918,
        "callee": {
          "type": "MemberExpression",
          "start": 7804,
          "end": 7820,
          "object": {
            "type": "Identifier",
            "start": 7804,
            "end": 7810,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 7811,
            "end": 7820,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 7824,
            "end": 7843,
            "left": {
              "type": "Literal",
              "start": 7824,
              "end": 7835,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 7838,
              "end": 7843,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 7839,
                "end": 7843,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 7847,
            "end": 7859,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 7848,
              "end": 7859,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 7863,
            "end": 7916,
            "value": "The result of (0xFEDCBA97n / -0x1n) is -0xFEDCBA97n",
            "raw": "'The result of (0xFEDCBA97n / -0x1n) is -0xFEDCBA97n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 7921,
      "end": 8036,
      "expression": {
        "type": "CallExpression",
        "start": 7921,
        "end": 8035,
        "callee": {
          "type": "MemberExpression",
          "start": 7921,
          "end": 7937,
          "object": {
            "type": "Identifier",
            "start": 7921,
            "end": 7927,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 7928,
            "end": 7937,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 7941,
            "end": 7960,
            "left": {
              "type": "Literal",
              "start": 7941,
              "end": 7952,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 7955,
              "end": 7960,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 7956,
                "end": 7960,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 7964,
            "end": 7976,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 7965,
              "end": 7976,
              "value": null,
              "raw": "0x7F6E5D4Bn",
              "bigint": "0x7F6E5D4B"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 7980,
            "end": 8033,
            "value": "The result of (0xFEDCBA97n / -0x2n) is -0x7F6E5D4Bn",
            "raw": "'The result of (0xFEDCBA97n / -0x2n) is -0x7F6E5D4Bn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 8038,
      "end": 8153,
      "expression": {
        "type": "CallExpression",
        "start": 8038,
        "end": 8152,
        "callee": {
          "type": "MemberExpression",
          "start": 8038,
          "end": 8054,
          "object": {
            "type": "Identifier",
            "start": 8038,
            "end": 8044,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 8045,
            "end": 8054,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 8058,
            "end": 8077,
            "left": {
              "type": "Literal",
              "start": 8058,
              "end": 8069,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 8072,
              "end": 8077,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 8073,
                "end": 8077,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 8081,
            "end": 8093,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 8082,
              "end": 8093,
              "value": null,
              "raw": "0x54F43E32n",
              "bigint": "0x54F43E32"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 8097,
            "end": 8150,
            "value": "The result of (0xFEDCBA97n / -0x3n) is -0x54F43E32n",
            "raw": "'The result of (0xFEDCBA97n / -0x3n) is -0x54F43E32n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 8155,
      "end": 8270,
      "expression": {
        "type": "CallExpression",
        "start": 8155,
        "end": 8269,
        "callee": {
          "type": "MemberExpression",
          "start": 8155,
          "end": 8171,
          "object": {
            "type": "Identifier",
            "start": 8155,
            "end": 8161,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 8162,
            "end": 8171,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 8175,
            "end": 8197,
            "left": {
              "type": "Literal",
              "start": 8175,
              "end": 8186,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 8189,
              "end": 8197,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 8190,
                "end": 8197,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 8201,
            "end": 8210,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 8202,
              "end": 8210,
              "value": null,
              "raw": "0xE0042n",
              "bigint": "0xE0042"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 8214,
            "end": 8267,
            "value": "The result of (0xFEDCBA97n / -0x1234n) is -0xE0042n",
            "raw": "'The result of (0xFEDCBA97n / -0x1234n) is -0xE0042n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 8272,
      "end": 8387,
      "expression": {
        "type": "CallExpression",
        "start": 8272,
        "end": 8386,
        "callee": {
          "type": "MemberExpression",
          "start": 8272,
          "end": 8288,
          "object": {
            "type": "Identifier",
            "start": 8272,
            "end": 8278,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 8279,
            "end": 8288,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 8292,
            "end": 8318,
            "left": {
              "type": "Literal",
              "start": 8292,
              "end": 8303,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 8306,
              "end": 8318,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 8307,
                "end": 8318,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 8322,
            "end": 8327,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 8323,
              "end": 8327,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 8331,
            "end": 8384,
            "value": "The result of (0xFEDCBA97n / -0xFEDCBA97n) is -0x1n",
            "raw": "'The result of (0xFEDCBA97n / -0xFEDCBA97n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 8389,
      "end": 8502,
      "expression": {
        "type": "CallExpression",
        "start": 8389,
        "end": 8501,
        "callee": {
          "type": "MemberExpression",
          "start": 8389,
          "end": 8405,
          "object": {
            "type": "Identifier",
            "start": 8389,
            "end": 8395,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 8396,
            "end": 8405,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 8409,
            "end": 8435,
            "left": {
              "type": "Literal",
              "start": 8409,
              "end": 8420,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 8423,
              "end": 8435,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 8424,
                "end": 8435,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 8439,
            "end": 8443,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 8447,
            "end": 8499,
            "value": "The result of (0xFEDCBA97n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0xFEDCBA97n / -0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 8504,
      "end": 8633,
      "expression": {
        "type": "CallExpression",
        "start": 8504,
        "end": 8632,
        "callee": {
          "type": "MemberExpression",
          "start": 8504,
          "end": 8520,
          "object": {
            "type": "Identifier",
            "start": 8504,
            "end": 8510,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 8511,
            "end": 8520,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 8524,
            "end": 8558,
            "left": {
              "type": "Literal",
              "start": 8524,
              "end": 8535,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 8538,
              "end": 8558,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 8539,
                "end": 8558,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 8562,
            "end": 8566,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 8570,
            "end": 8630,
            "value": "The result of (0xFEDCBA97n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0xFEDCBA97n / -0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 8635,
      "end": 8764,
      "expression": {
        "type": "CallExpression",
        "start": 8635,
        "end": 8763,
        "callee": {
          "type": "MemberExpression",
          "start": 8635,
          "end": 8651,
          "object": {
            "type": "Identifier",
            "start": 8635,
            "end": 8641,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 8642,
            "end": 8651,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 8655,
            "end": 8689,
            "left": {
              "type": "Literal",
              "start": 8655,
              "end": 8666,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 8669,
              "end": 8689,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 8670,
                "end": 8689,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 8693,
            "end": 8697,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 8701,
            "end": 8761,
            "value": "The result of (0xFEDCBA97n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0xFEDCBA97n / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 8766,
      "end": 8885,
      "expression": {
        "type": "CallExpression",
        "start": 8766,
        "end": 8884,
        "callee": {
          "type": "MemberExpression",
          "start": 8766,
          "end": 8782,
          "object": {
            "type": "Identifier",
            "start": 8766,
            "end": 8772,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 8773,
            "end": 8782,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 8786,
            "end": 8815,
            "left": {
              "type": "Literal",
              "start": 8786,
              "end": 8793,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 8796,
              "end": 8815,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 8819,
            "end": 8823,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 8827,
            "end": 8882,
            "value": "The result of (0x1234n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x1234n / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 8887,
      "end": 9006,
      "expression": {
        "type": "CallExpression",
        "start": 8887,
        "end": 9005,
        "callee": {
          "type": "MemberExpression",
          "start": 8887,
          "end": 8903,
          "object": {
            "type": "Identifier",
            "start": 8887,
            "end": 8893,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 8894,
            "end": 8903,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 8907,
            "end": 8936,
            "left": {
              "type": "Literal",
              "start": 8907,
              "end": 8914,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 8917,
              "end": 8936,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 8940,
            "end": 8944,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 8948,
            "end": 9003,
            "value": "The result of (0x1234n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x1234n / 0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 9008,
      "end": 9103,
      "expression": {
        "type": "CallExpression",
        "start": 9008,
        "end": 9102,
        "callee": {
          "type": "MemberExpression",
          "start": 9008,
          "end": 9024,
          "object": {
            "type": "Identifier",
            "start": 9008,
            "end": 9014,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 9015,
            "end": 9024,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 9025,
            "end": 9046,
            "left": {
              "type": "Literal",
              "start": 9025,
              "end": 9032,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 9035,
              "end": 9046,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 9048,
            "end": 9052,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 9054,
            "end": 9101,
            "value": "The result of (0x1234n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x1234n / 0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 9104,
      "end": 9199,
      "expression": {
        "type": "CallExpression",
        "start": 9104,
        "end": 9198,
        "callee": {
          "type": "MemberExpression",
          "start": 9104,
          "end": 9120,
          "object": {
            "type": "Identifier",
            "start": 9104,
            "end": 9110,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 9111,
            "end": 9120,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 9121,
            "end": 9142,
            "left": {
              "type": "Literal",
              "start": 9121,
              "end": 9128,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 9131,
              "end": 9142,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "Literal",
            "start": 9144,
            "end": 9148,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 9150,
            "end": 9197,
            "value": "The result of (0x1234n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x1234n / 0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 9200,
      "end": 9287,
      "expression": {
        "type": "CallExpression",
        "start": 9200,
        "end": 9286,
        "callee": {
          "type": "MemberExpression",
          "start": 9200,
          "end": 9216,
          "object": {
            "type": "Identifier",
            "start": 9200,
            "end": 9206,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 9207,
            "end": 9216,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 9217,
            "end": 9234,
            "left": {
              "type": "Literal",
              "start": 9217,
              "end": 9224,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 9227,
              "end": 9234,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "Literal",
            "start": 9236,
            "end": 9240,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 9242,
            "end": 9285,
            "value": "The result of (0x1234n / 0x1234n) is 0x1n",
            "raw": "'The result of (0x1234n / 0x1234n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 9288,
      "end": 9373,
      "expression": {
        "type": "CallExpression",
        "start": 9288,
        "end": 9372,
        "callee": {
          "type": "MemberExpression",
          "start": 9288,
          "end": 9304,
          "object": {
            "type": "Identifier",
            "start": 9288,
            "end": 9294,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 9295,
            "end": 9304,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 9305,
            "end": 9319,
            "left": {
              "type": "Literal",
              "start": 9305,
              "end": 9312,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 9315,
              "end": 9319,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "Literal",
            "start": 9321,
            "end": 9327,
            "value": null,
            "raw": "0x611n",
            "bigint": "0x611"
          },
          {
            "type": "Literal",
            "start": 9329,
            "end": 9371,
            "value": "The result of (0x1234n / 0x3n) is 0x611n",
            "raw": "'The result of (0x1234n / 0x3n) is 0x611n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 9374,
      "end": 9459,
      "expression": {
        "type": "CallExpression",
        "start": 9374,
        "end": 9458,
        "callee": {
          "type": "MemberExpression",
          "start": 9374,
          "end": 9390,
          "object": {
            "type": "Identifier",
            "start": 9374,
            "end": 9380,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 9381,
            "end": 9390,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 9391,
            "end": 9405,
            "left": {
              "type": "Literal",
              "start": 9391,
              "end": 9398,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 9401,
              "end": 9405,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "Literal",
            "start": 9407,
            "end": 9413,
            "value": null,
            "raw": "0x91An",
            "bigint": "0x91A"
          },
          {
            "type": "Literal",
            "start": 9415,
            "end": 9457,
            "value": "The result of (0x1234n / 0x2n) is 0x91An",
            "raw": "'The result of (0x1234n / 0x2n) is 0x91An'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 9460,
      "end": 9547,
      "expression": {
        "type": "CallExpression",
        "start": 9460,
        "end": 9546,
        "callee": {
          "type": "MemberExpression",
          "start": 9460,
          "end": 9476,
          "object": {
            "type": "Identifier",
            "start": 9460,
            "end": 9466,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 9467,
            "end": 9476,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 9477,
            "end": 9491,
            "left": {
              "type": "Literal",
              "start": 9477,
              "end": 9484,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 9487,
              "end": 9491,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "Literal",
            "start": 9493,
            "end": 9500,
            "value": null,
            "raw": "0x1234n",
            "bigint": "0x1234"
          },
          {
            "type": "Literal",
            "start": 9502,
            "end": 9545,
            "value": "The result of (0x1234n / 0x1n) is 0x1234n",
            "raw": "'The result of (0x1234n / 0x1n) is 0x1234n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 9548,
      "end": 9639,
      "expression": {
        "type": "CallExpression",
        "start": 9548,
        "end": 9638,
        "callee": {
          "type": "MemberExpression",
          "start": 9548,
          "end": 9564,
          "object": {
            "type": "Identifier",
            "start": 9548,
            "end": 9554,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 9555,
            "end": 9564,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 9565,
            "end": 9580,
            "left": {
              "type": "Literal",
              "start": 9565,
              "end": 9572,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 9575,
              "end": 9580,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 9576,
                "end": 9580,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 9582,
            "end": 9590,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 9583,
              "end": 9590,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 9592,
            "end": 9637,
            "value": "The result of (0x1234n / -0x1n) is -0x1234n",
            "raw": "'The result of (0x1234n / -0x1n) is -0x1234n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 9640,
      "end": 9729,
      "expression": {
        "type": "CallExpression",
        "start": 9640,
        "end": 9728,
        "callee": {
          "type": "MemberExpression",
          "start": 9640,
          "end": 9656,
          "object": {
            "type": "Identifier",
            "start": 9640,
            "end": 9646,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 9647,
            "end": 9656,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 9657,
            "end": 9672,
            "left": {
              "type": "Literal",
              "start": 9657,
              "end": 9664,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 9667,
              "end": 9672,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 9668,
                "end": 9672,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 9674,
            "end": 9681,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 9675,
              "end": 9681,
              "value": null,
              "raw": "0x91An",
              "bigint": "0x91A"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 9683,
            "end": 9727,
            "value": "The result of (0x1234n / -0x2n) is -0x91An",
            "raw": "'The result of (0x1234n / -0x2n) is -0x91An'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 9730,
      "end": 9819,
      "expression": {
        "type": "CallExpression",
        "start": 9730,
        "end": 9818,
        "callee": {
          "type": "MemberExpression",
          "start": 9730,
          "end": 9746,
          "object": {
            "type": "Identifier",
            "start": 9730,
            "end": 9736,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 9737,
            "end": 9746,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 9747,
            "end": 9762,
            "left": {
              "type": "Literal",
              "start": 9747,
              "end": 9754,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 9757,
              "end": 9762,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 9758,
                "end": 9762,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 9764,
            "end": 9771,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 9765,
              "end": 9771,
              "value": null,
              "raw": "0x611n",
              "bigint": "0x611"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 9773,
            "end": 9817,
            "value": "The result of (0x1234n / -0x3n) is -0x611n",
            "raw": "'The result of (0x1234n / -0x3n) is -0x611n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 9820,
      "end": 9911,
      "expression": {
        "type": "CallExpression",
        "start": 9820,
        "end": 9910,
        "callee": {
          "type": "MemberExpression",
          "start": 9820,
          "end": 9836,
          "object": {
            "type": "Identifier",
            "start": 9820,
            "end": 9826,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 9827,
            "end": 9836,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 9837,
            "end": 9855,
            "left": {
              "type": "Literal",
              "start": 9837,
              "end": 9844,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 9847,
              "end": 9855,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 9848,
                "end": 9855,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 9857,
            "end": 9862,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 9858,
              "end": 9862,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 9864,
            "end": 9909,
            "value": "The result of (0x1234n / -0x1234n) is -0x1n",
            "raw": "'The result of (0x1234n / -0x1234n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 9912,
      "end": 10009,
      "expression": {
        "type": "CallExpression",
        "start": 9912,
        "end": 10008,
        "callee": {
          "type": "MemberExpression",
          "start": 9912,
          "end": 9928,
          "object": {
            "type": "Identifier",
            "start": 9912,
            "end": 9918,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 9919,
            "end": 9928,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 9929,
            "end": 9951,
            "left": {
              "type": "Literal",
              "start": 9929,
              "end": 9936,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 9939,
              "end": 9951,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 9940,
                "end": 9951,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 9953,
            "end": 9957,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 9959,
            "end": 10007,
            "value": "The result of (0x1234n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x1234n / -0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 10010,
      "end": 10107,
      "expression": {
        "type": "CallExpression",
        "start": 10010,
        "end": 10106,
        "callee": {
          "type": "MemberExpression",
          "start": 10010,
          "end": 10026,
          "object": {
            "type": "Identifier",
            "start": 10010,
            "end": 10016,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 10017,
            "end": 10026,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 10027,
            "end": 10049,
            "left": {
              "type": "Literal",
              "start": 10027,
              "end": 10034,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 10037,
              "end": 10049,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 10038,
                "end": 10049,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 10051,
            "end": 10055,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 10057,
            "end": 10105,
            "value": "The result of (0x1234n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x1234n / -0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 10109,
      "end": 10230,
      "expression": {
        "type": "CallExpression",
        "start": 10109,
        "end": 10229,
        "callee": {
          "type": "MemberExpression",
          "start": 10109,
          "end": 10125,
          "object": {
            "type": "Identifier",
            "start": 10109,
            "end": 10115,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 10116,
            "end": 10125,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 10129,
            "end": 10159,
            "left": {
              "type": "Literal",
              "start": 10129,
              "end": 10136,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 10139,
              "end": 10159,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 10140,
                "end": 10159,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 10163,
            "end": 10167,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 10171,
            "end": 10227,
            "value": "The result of (0x1234n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x1234n / -0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 10232,
      "end": 10353,
      "expression": {
        "type": "CallExpression",
        "start": 10232,
        "end": 10352,
        "callee": {
          "type": "MemberExpression",
          "start": 10232,
          "end": 10248,
          "object": {
            "type": "Identifier",
            "start": 10232,
            "end": 10238,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 10239,
            "end": 10248,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 10252,
            "end": 10282,
            "left": {
              "type": "Literal",
              "start": 10252,
              "end": 10259,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 10262,
              "end": 10282,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 10263,
                "end": 10282,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 10286,
            "end": 10290,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 10294,
            "end": 10350,
            "value": "The result of (0x1234n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x1234n / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 10355,
      "end": 10468,
      "expression": {
        "type": "CallExpression",
        "start": 10355,
        "end": 10467,
        "callee": {
          "type": "MemberExpression",
          "start": 10355,
          "end": 10371,
          "object": {
            "type": "Identifier",
            "start": 10355,
            "end": 10361,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 10362,
            "end": 10371,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 10375,
            "end": 10401,
            "left": {
              "type": "Literal",
              "start": 10375,
              "end": 10379,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 10382,
              "end": 10401,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 10405,
            "end": 10409,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 10413,
            "end": 10465,
            "value": "The result of (0x3n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x3n / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 10470,
      "end": 10583,
      "expression": {
        "type": "CallExpression",
        "start": 10470,
        "end": 10582,
        "callee": {
          "type": "MemberExpression",
          "start": 10470,
          "end": 10486,
          "object": {
            "type": "Identifier",
            "start": 10470,
            "end": 10476,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 10477,
            "end": 10486,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 10490,
            "end": 10516,
            "left": {
              "type": "Literal",
              "start": 10490,
              "end": 10494,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 10497,
              "end": 10516,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 10520,
            "end": 10524,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 10528,
            "end": 10580,
            "value": "The result of (0x3n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x3n / 0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 10585,
      "end": 10674,
      "expression": {
        "type": "CallExpression",
        "start": 10585,
        "end": 10673,
        "callee": {
          "type": "MemberExpression",
          "start": 10585,
          "end": 10601,
          "object": {
            "type": "Identifier",
            "start": 10585,
            "end": 10591,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 10592,
            "end": 10601,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 10602,
            "end": 10620,
            "left": {
              "type": "Literal",
              "start": 10602,
              "end": 10606,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 10609,
              "end": 10620,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 10622,
            "end": 10626,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 10628,
            "end": 10672,
            "value": "The result of (0x3n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x3n / 0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 10675,
      "end": 10764,
      "expression": {
        "type": "CallExpression",
        "start": 10675,
        "end": 10763,
        "callee": {
          "type": "MemberExpression",
          "start": 10675,
          "end": 10691,
          "object": {
            "type": "Identifier",
            "start": 10675,
            "end": 10681,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 10682,
            "end": 10691,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 10692,
            "end": 10710,
            "left": {
              "type": "Literal",
              "start": 10692,
              "end": 10696,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 10699,
              "end": 10710,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "Literal",
            "start": 10712,
            "end": 10716,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 10718,
            "end": 10762,
            "value": "The result of (0x3n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x3n / 0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 10765,
      "end": 10846,
      "expression": {
        "type": "CallExpression",
        "start": 10765,
        "end": 10845,
        "callee": {
          "type": "MemberExpression",
          "start": 10765,
          "end": 10781,
          "object": {
            "type": "Identifier",
            "start": 10765,
            "end": 10771,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 10772,
            "end": 10781,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 10782,
            "end": 10796,
            "left": {
              "type": "Literal",
              "start": 10782,
              "end": 10786,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 10789,
              "end": 10796,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "Literal",
            "start": 10798,
            "end": 10802,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 10804,
            "end": 10844,
            "value": "The result of (0x3n / 0x1234n) is 0x0n",
            "raw": "'The result of (0x3n / 0x1234n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 10847,
      "end": 10922,
      "expression": {
        "type": "CallExpression",
        "start": 10847,
        "end": 10921,
        "callee": {
          "type": "MemberExpression",
          "start": 10847,
          "end": 10863,
          "object": {
            "type": "Identifier",
            "start": 10847,
            "end": 10853,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 10854,
            "end": 10863,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 10864,
            "end": 10875,
            "left": {
              "type": "Literal",
              "start": 10864,
              "end": 10868,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 10871,
              "end": 10875,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "Literal",
            "start": 10877,
            "end": 10881,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 10883,
            "end": 10920,
            "value": "The result of (0x3n / 0x3n) is 0x1n",
            "raw": "'The result of (0x3n / 0x3n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 10923,
      "end": 10998,
      "expression": {
        "type": "CallExpression",
        "start": 10923,
        "end": 10997,
        "callee": {
          "type": "MemberExpression",
          "start": 10923,
          "end": 10939,
          "object": {
            "type": "Identifier",
            "start": 10923,
            "end": 10929,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 10930,
            "end": 10939,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 10940,
            "end": 10951,
            "left": {
              "type": "Literal",
              "start": 10940,
              "end": 10944,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 10947,
              "end": 10951,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "Literal",
            "start": 10953,
            "end": 10957,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 10959,
            "end": 10996,
            "value": "The result of (0x3n / 0x2n) is 0x1n",
            "raw": "'The result of (0x3n / 0x2n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 10999,
      "end": 11074,
      "expression": {
        "type": "CallExpression",
        "start": 10999,
        "end": 11073,
        "callee": {
          "type": "MemberExpression",
          "start": 10999,
          "end": 11015,
          "object": {
            "type": "Identifier",
            "start": 10999,
            "end": 11005,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 11006,
            "end": 11015,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 11016,
            "end": 11027,
            "left": {
              "type": "Literal",
              "start": 11016,
              "end": 11020,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 11023,
              "end": 11027,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "Literal",
            "start": 11029,
            "end": 11033,
            "value": null,
            "raw": "0x3n",
            "bigint": "0x3"
          },
          {
            "type": "Literal",
            "start": 11035,
            "end": 11072,
            "value": "The result of (0x3n / 0x1n) is 0x3n",
            "raw": "'The result of (0x3n / 0x1n) is 0x3n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 11075,
      "end": 11154,
      "expression": {
        "type": "CallExpression",
        "start": 11075,
        "end": 11153,
        "callee": {
          "type": "MemberExpression",
          "start": 11075,
          "end": 11091,
          "object": {
            "type": "Identifier",
            "start": 11075,
            "end": 11081,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 11082,
            "end": 11091,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 11092,
            "end": 11104,
            "left": {
              "type": "Literal",
              "start": 11092,
              "end": 11096,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 11099,
              "end": 11104,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 11100,
                "end": 11104,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 11106,
            "end": 11111,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 11107,
              "end": 11111,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 11113,
            "end": 11152,
            "value": "The result of (0x3n / -0x1n) is -0x3n",
            "raw": "'The result of (0x3n / -0x1n) is -0x3n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 11155,
      "end": 11234,
      "expression": {
        "type": "CallExpression",
        "start": 11155,
        "end": 11233,
        "callee": {
          "type": "MemberExpression",
          "start": 11155,
          "end": 11171,
          "object": {
            "type": "Identifier",
            "start": 11155,
            "end": 11161,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 11162,
            "end": 11171,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 11172,
            "end": 11184,
            "left": {
              "type": "Literal",
              "start": 11172,
              "end": 11176,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 11179,
              "end": 11184,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 11180,
                "end": 11184,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 11186,
            "end": 11191,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 11187,
              "end": 11191,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 11193,
            "end": 11232,
            "value": "The result of (0x3n / -0x2n) is -0x1n",
            "raw": "'The result of (0x3n / -0x2n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 11235,
      "end": 11314,
      "expression": {
        "type": "CallExpression",
        "start": 11235,
        "end": 11313,
        "callee": {
          "type": "MemberExpression",
          "start": 11235,
          "end": 11251,
          "object": {
            "type": "Identifier",
            "start": 11235,
            "end": 11241,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 11242,
            "end": 11251,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 11252,
            "end": 11264,
            "left": {
              "type": "Literal",
              "start": 11252,
              "end": 11256,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 11259,
              "end": 11264,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 11260,
                "end": 11264,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 11266,
            "end": 11271,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 11267,
              "end": 11271,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 11273,
            "end": 11312,
            "value": "The result of (0x3n / -0x3n) is -0x1n",
            "raw": "'The result of (0x3n / -0x3n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 11315,
      "end": 11398,
      "expression": {
        "type": "CallExpression",
        "start": 11315,
        "end": 11397,
        "callee": {
          "type": "MemberExpression",
          "start": 11315,
          "end": 11331,
          "object": {
            "type": "Identifier",
            "start": 11315,
            "end": 11321,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 11322,
            "end": 11331,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 11332,
            "end": 11347,
            "left": {
              "type": "Literal",
              "start": 11332,
              "end": 11336,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 11339,
              "end": 11347,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 11340,
                "end": 11347,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 11349,
            "end": 11353,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 11355,
            "end": 11396,
            "value": "The result of (0x3n / -0x1234n) is 0x0n",
            "raw": "'The result of (0x3n / -0x1234n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 11399,
      "end": 11490,
      "expression": {
        "type": "CallExpression",
        "start": 11399,
        "end": 11489,
        "callee": {
          "type": "MemberExpression",
          "start": 11399,
          "end": 11415,
          "object": {
            "type": "Identifier",
            "start": 11399,
            "end": 11405,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 11406,
            "end": 11415,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 11416,
            "end": 11435,
            "left": {
              "type": "Literal",
              "start": 11416,
              "end": 11420,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 11423,
              "end": 11435,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 11424,
                "end": 11435,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 11437,
            "end": 11441,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 11443,
            "end": 11488,
            "value": "The result of (0x3n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x3n / -0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 11491,
      "end": 11582,
      "expression": {
        "type": "CallExpression",
        "start": 11491,
        "end": 11581,
        "callee": {
          "type": "MemberExpression",
          "start": 11491,
          "end": 11507,
          "object": {
            "type": "Identifier",
            "start": 11491,
            "end": 11497,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 11498,
            "end": 11507,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 11508,
            "end": 11527,
            "left": {
              "type": "Literal",
              "start": 11508,
              "end": 11512,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 11515,
              "end": 11527,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 11516,
                "end": 11527,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 11529,
            "end": 11533,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 11535,
            "end": 11580,
            "value": "The result of (0x3n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x3n / -0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 11584,
      "end": 11699,
      "expression": {
        "type": "CallExpression",
        "start": 11584,
        "end": 11698,
        "callee": {
          "type": "MemberExpression",
          "start": 11584,
          "end": 11600,
          "object": {
            "type": "Identifier",
            "start": 11584,
            "end": 11590,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 11591,
            "end": 11600,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 11604,
            "end": 11631,
            "left": {
              "type": "Literal",
              "start": 11604,
              "end": 11608,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 11611,
              "end": 11631,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 11612,
                "end": 11631,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 11635,
            "end": 11639,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 11643,
            "end": 11696,
            "value": "The result of (0x3n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x3n / -0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 11701,
      "end": 11816,
      "expression": {
        "type": "CallExpression",
        "start": 11701,
        "end": 11815,
        "callee": {
          "type": "MemberExpression",
          "start": 11701,
          "end": 11717,
          "object": {
            "type": "Identifier",
            "start": 11701,
            "end": 11707,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 11708,
            "end": 11717,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 11721,
            "end": 11748,
            "left": {
              "type": "Literal",
              "start": 11721,
              "end": 11725,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 11728,
              "end": 11748,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 11729,
                "end": 11748,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 11752,
            "end": 11756,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 11760,
            "end": 11813,
            "value": "The result of (0x3n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x3n / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 11818,
      "end": 11931,
      "expression": {
        "type": "CallExpression",
        "start": 11818,
        "end": 11930,
        "callee": {
          "type": "MemberExpression",
          "start": 11818,
          "end": 11834,
          "object": {
            "type": "Identifier",
            "start": 11818,
            "end": 11824,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 11825,
            "end": 11834,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 11838,
            "end": 11864,
            "left": {
              "type": "Literal",
              "start": 11838,
              "end": 11842,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 11845,
              "end": 11864,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 11868,
            "end": 11872,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 11876,
            "end": 11928,
            "value": "The result of (0x2n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x2n / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 11933,
      "end": 12046,
      "expression": {
        "type": "CallExpression",
        "start": 11933,
        "end": 12045,
        "callee": {
          "type": "MemberExpression",
          "start": 11933,
          "end": 11949,
          "object": {
            "type": "Identifier",
            "start": 11933,
            "end": 11939,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 11940,
            "end": 11949,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 11953,
            "end": 11979,
            "left": {
              "type": "Literal",
              "start": 11953,
              "end": 11957,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 11960,
              "end": 11979,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 11983,
            "end": 11987,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 11991,
            "end": 12043,
            "value": "The result of (0x2n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x2n / 0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 12048,
      "end": 12137,
      "expression": {
        "type": "CallExpression",
        "start": 12048,
        "end": 12136,
        "callee": {
          "type": "MemberExpression",
          "start": 12048,
          "end": 12064,
          "object": {
            "type": "Identifier",
            "start": 12048,
            "end": 12054,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 12055,
            "end": 12064,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 12065,
            "end": 12083,
            "left": {
              "type": "Literal",
              "start": 12065,
              "end": 12069,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 12072,
              "end": 12083,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 12085,
            "end": 12089,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 12091,
            "end": 12135,
            "value": "The result of (0x2n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x2n / 0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 12138,
      "end": 12227,
      "expression": {
        "type": "CallExpression",
        "start": 12138,
        "end": 12226,
        "callee": {
          "type": "MemberExpression",
          "start": 12138,
          "end": 12154,
          "object": {
            "type": "Identifier",
            "start": 12138,
            "end": 12144,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 12145,
            "end": 12154,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 12155,
            "end": 12173,
            "left": {
              "type": "Literal",
              "start": 12155,
              "end": 12159,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 12162,
              "end": 12173,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "Literal",
            "start": 12175,
            "end": 12179,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 12181,
            "end": 12225,
            "value": "The result of (0x2n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x2n / 0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 12228,
      "end": 12309,
      "expression": {
        "type": "CallExpression",
        "start": 12228,
        "end": 12308,
        "callee": {
          "type": "MemberExpression",
          "start": 12228,
          "end": 12244,
          "object": {
            "type": "Identifier",
            "start": 12228,
            "end": 12234,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 12235,
            "end": 12244,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 12245,
            "end": 12259,
            "left": {
              "type": "Literal",
              "start": 12245,
              "end": 12249,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 12252,
              "end": 12259,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "Literal",
            "start": 12261,
            "end": 12265,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 12267,
            "end": 12307,
            "value": "The result of (0x2n / 0x1234n) is 0x0n",
            "raw": "'The result of (0x2n / 0x1234n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 12310,
      "end": 12385,
      "expression": {
        "type": "CallExpression",
        "start": 12310,
        "end": 12384,
        "callee": {
          "type": "MemberExpression",
          "start": 12310,
          "end": 12326,
          "object": {
            "type": "Identifier",
            "start": 12310,
            "end": 12316,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 12317,
            "end": 12326,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 12327,
            "end": 12338,
            "left": {
              "type": "Literal",
              "start": 12327,
              "end": 12331,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 12334,
              "end": 12338,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "Literal",
            "start": 12340,
            "end": 12344,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 12346,
            "end": 12383,
            "value": "The result of (0x2n / 0x3n) is 0x0n",
            "raw": "'The result of (0x2n / 0x3n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 12386,
      "end": 12461,
      "expression": {
        "type": "CallExpression",
        "start": 12386,
        "end": 12460,
        "callee": {
          "type": "MemberExpression",
          "start": 12386,
          "end": 12402,
          "object": {
            "type": "Identifier",
            "start": 12386,
            "end": 12392,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 12393,
            "end": 12402,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 12403,
            "end": 12414,
            "left": {
              "type": "Literal",
              "start": 12403,
              "end": 12407,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 12410,
              "end": 12414,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "Literal",
            "start": 12416,
            "end": 12420,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 12422,
            "end": 12459,
            "value": "The result of (0x2n / 0x2n) is 0x1n",
            "raw": "'The result of (0x2n / 0x2n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 12462,
      "end": 12537,
      "expression": {
        "type": "CallExpression",
        "start": 12462,
        "end": 12536,
        "callee": {
          "type": "MemberExpression",
          "start": 12462,
          "end": 12478,
          "object": {
            "type": "Identifier",
            "start": 12462,
            "end": 12468,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 12469,
            "end": 12478,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 12479,
            "end": 12490,
            "left": {
              "type": "Literal",
              "start": 12479,
              "end": 12483,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 12486,
              "end": 12490,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "Literal",
            "start": 12492,
            "end": 12496,
            "value": null,
            "raw": "0x2n",
            "bigint": "0x2"
          },
          {
            "type": "Literal",
            "start": 12498,
            "end": 12535,
            "value": "The result of (0x2n / 0x1n) is 0x2n",
            "raw": "'The result of (0x2n / 0x1n) is 0x2n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 12538,
      "end": 12617,
      "expression": {
        "type": "CallExpression",
        "start": 12538,
        "end": 12616,
        "callee": {
          "type": "MemberExpression",
          "start": 12538,
          "end": 12554,
          "object": {
            "type": "Identifier",
            "start": 12538,
            "end": 12544,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 12545,
            "end": 12554,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 12555,
            "end": 12567,
            "left": {
              "type": "Literal",
              "start": 12555,
              "end": 12559,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 12562,
              "end": 12567,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 12563,
                "end": 12567,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 12569,
            "end": 12574,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 12570,
              "end": 12574,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 12576,
            "end": 12615,
            "value": "The result of (0x2n / -0x1n) is -0x2n",
            "raw": "'The result of (0x2n / -0x1n) is -0x2n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 12618,
      "end": 12697,
      "expression": {
        "type": "CallExpression",
        "start": 12618,
        "end": 12696,
        "callee": {
          "type": "MemberExpression",
          "start": 12618,
          "end": 12634,
          "object": {
            "type": "Identifier",
            "start": 12618,
            "end": 12624,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 12625,
            "end": 12634,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 12635,
            "end": 12647,
            "left": {
              "type": "Literal",
              "start": 12635,
              "end": 12639,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 12642,
              "end": 12647,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 12643,
                "end": 12647,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 12649,
            "end": 12654,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 12650,
              "end": 12654,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 12656,
            "end": 12695,
            "value": "The result of (0x2n / -0x2n) is -0x1n",
            "raw": "'The result of (0x2n / -0x2n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 12698,
      "end": 12775,
      "expression": {
        "type": "CallExpression",
        "start": 12698,
        "end": 12774,
        "callee": {
          "type": "MemberExpression",
          "start": 12698,
          "end": 12714,
          "object": {
            "type": "Identifier",
            "start": 12698,
            "end": 12704,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 12705,
            "end": 12714,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 12715,
            "end": 12727,
            "left": {
              "type": "Literal",
              "start": 12715,
              "end": 12719,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 12722,
              "end": 12727,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 12723,
                "end": 12727,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 12729,
            "end": 12733,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 12735,
            "end": 12773,
            "value": "The result of (0x2n / -0x3n) is 0x0n",
            "raw": "'The result of (0x2n / -0x3n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 12776,
      "end": 12859,
      "expression": {
        "type": "CallExpression",
        "start": 12776,
        "end": 12858,
        "callee": {
          "type": "MemberExpression",
          "start": 12776,
          "end": 12792,
          "object": {
            "type": "Identifier",
            "start": 12776,
            "end": 12782,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 12783,
            "end": 12792,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 12793,
            "end": 12808,
            "left": {
              "type": "Literal",
              "start": 12793,
              "end": 12797,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 12800,
              "end": 12808,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 12801,
                "end": 12808,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 12810,
            "end": 12814,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 12816,
            "end": 12857,
            "value": "The result of (0x2n / -0x1234n) is 0x0n",
            "raw": "'The result of (0x2n / -0x1234n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 12860,
      "end": 12951,
      "expression": {
        "type": "CallExpression",
        "start": 12860,
        "end": 12950,
        "callee": {
          "type": "MemberExpression",
          "start": 12860,
          "end": 12876,
          "object": {
            "type": "Identifier",
            "start": 12860,
            "end": 12866,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 12867,
            "end": 12876,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 12877,
            "end": 12896,
            "left": {
              "type": "Literal",
              "start": 12877,
              "end": 12881,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 12884,
              "end": 12896,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 12885,
                "end": 12896,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 12898,
            "end": 12902,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 12904,
            "end": 12949,
            "value": "The result of (0x2n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x2n / -0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 12952,
      "end": 13043,
      "expression": {
        "type": "CallExpression",
        "start": 12952,
        "end": 13042,
        "callee": {
          "type": "MemberExpression",
          "start": 12952,
          "end": 12968,
          "object": {
            "type": "Identifier",
            "start": 12952,
            "end": 12958,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 12959,
            "end": 12968,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 12969,
            "end": 12988,
            "left": {
              "type": "Literal",
              "start": 12969,
              "end": 12973,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 12976,
              "end": 12988,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 12977,
                "end": 12988,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 12990,
            "end": 12994,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 12996,
            "end": 13041,
            "value": "The result of (0x2n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x2n / -0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 13045,
      "end": 13160,
      "expression": {
        "type": "CallExpression",
        "start": 13045,
        "end": 13159,
        "callee": {
          "type": "MemberExpression",
          "start": 13045,
          "end": 13061,
          "object": {
            "type": "Identifier",
            "start": 13045,
            "end": 13051,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 13052,
            "end": 13061,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 13065,
            "end": 13092,
            "left": {
              "type": "Literal",
              "start": 13065,
              "end": 13069,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 13072,
              "end": 13092,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 13073,
                "end": 13092,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 13096,
            "end": 13100,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 13104,
            "end": 13157,
            "value": "The result of (0x2n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x2n / -0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 13162,
      "end": 13277,
      "expression": {
        "type": "CallExpression",
        "start": 13162,
        "end": 13276,
        "callee": {
          "type": "MemberExpression",
          "start": 13162,
          "end": 13178,
          "object": {
            "type": "Identifier",
            "start": 13162,
            "end": 13168,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 13169,
            "end": 13178,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 13182,
            "end": 13209,
            "left": {
              "type": "Literal",
              "start": 13182,
              "end": 13186,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 13189,
              "end": 13209,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 13190,
                "end": 13209,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 13213,
            "end": 13217,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 13221,
            "end": 13274,
            "value": "The result of (0x2n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x2n / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 13279,
      "end": 13392,
      "expression": {
        "type": "CallExpression",
        "start": 13279,
        "end": 13391,
        "callee": {
          "type": "MemberExpression",
          "start": 13279,
          "end": 13295,
          "object": {
            "type": "Identifier",
            "start": 13279,
            "end": 13285,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 13286,
            "end": 13295,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 13299,
            "end": 13325,
            "left": {
              "type": "Literal",
              "start": 13299,
              "end": 13303,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 13306,
              "end": 13325,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 13329,
            "end": 13333,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 13337,
            "end": 13389,
            "value": "The result of (0x1n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x1n / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 13394,
      "end": 13507,
      "expression": {
        "type": "CallExpression",
        "start": 13394,
        "end": 13506,
        "callee": {
          "type": "MemberExpression",
          "start": 13394,
          "end": 13410,
          "object": {
            "type": "Identifier",
            "start": 13394,
            "end": 13400,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 13401,
            "end": 13410,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 13414,
            "end": 13440,
            "left": {
              "type": "Literal",
              "start": 13414,
              "end": 13418,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 13421,
              "end": 13440,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 13444,
            "end": 13448,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 13452,
            "end": 13504,
            "value": "The result of (0x1n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x1n / 0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 13509,
      "end": 13598,
      "expression": {
        "type": "CallExpression",
        "start": 13509,
        "end": 13597,
        "callee": {
          "type": "MemberExpression",
          "start": 13509,
          "end": 13525,
          "object": {
            "type": "Identifier",
            "start": 13509,
            "end": 13515,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 13516,
            "end": 13525,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 13526,
            "end": 13544,
            "left": {
              "type": "Literal",
              "start": 13526,
              "end": 13530,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 13533,
              "end": 13544,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 13546,
            "end": 13550,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 13552,
            "end": 13596,
            "value": "The result of (0x1n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x1n / 0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 13599,
      "end": 13688,
      "expression": {
        "type": "CallExpression",
        "start": 13599,
        "end": 13687,
        "callee": {
          "type": "MemberExpression",
          "start": 13599,
          "end": 13615,
          "object": {
            "type": "Identifier",
            "start": 13599,
            "end": 13605,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 13606,
            "end": 13615,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 13616,
            "end": 13634,
            "left": {
              "type": "Literal",
              "start": 13616,
              "end": 13620,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 13623,
              "end": 13634,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "Literal",
            "start": 13636,
            "end": 13640,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 13642,
            "end": 13686,
            "value": "The result of (0x1n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x1n / 0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 13689,
      "end": 13770,
      "expression": {
        "type": "CallExpression",
        "start": 13689,
        "end": 13769,
        "callee": {
          "type": "MemberExpression",
          "start": 13689,
          "end": 13705,
          "object": {
            "type": "Identifier",
            "start": 13689,
            "end": 13695,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 13696,
            "end": 13705,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 13706,
            "end": 13720,
            "left": {
              "type": "Literal",
              "start": 13706,
              "end": 13710,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 13713,
              "end": 13720,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "Literal",
            "start": 13722,
            "end": 13726,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 13728,
            "end": 13768,
            "value": "The result of (0x1n / 0x1234n) is 0x0n",
            "raw": "'The result of (0x1n / 0x1234n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 13771,
      "end": 13846,
      "expression": {
        "type": "CallExpression",
        "start": 13771,
        "end": 13845,
        "callee": {
          "type": "MemberExpression",
          "start": 13771,
          "end": 13787,
          "object": {
            "type": "Identifier",
            "start": 13771,
            "end": 13777,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 13778,
            "end": 13787,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 13788,
            "end": 13799,
            "left": {
              "type": "Literal",
              "start": 13788,
              "end": 13792,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 13795,
              "end": 13799,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "Literal",
            "start": 13801,
            "end": 13805,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 13807,
            "end": 13844,
            "value": "The result of (0x1n / 0x3n) is 0x0n",
            "raw": "'The result of (0x1n / 0x3n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 13847,
      "end": 13922,
      "expression": {
        "type": "CallExpression",
        "start": 13847,
        "end": 13921,
        "callee": {
          "type": "MemberExpression",
          "start": 13847,
          "end": 13863,
          "object": {
            "type": "Identifier",
            "start": 13847,
            "end": 13853,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 13854,
            "end": 13863,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 13864,
            "end": 13875,
            "left": {
              "type": "Literal",
              "start": 13864,
              "end": 13868,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 13871,
              "end": 13875,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "Literal",
            "start": 13877,
            "end": 13881,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 13883,
            "end": 13920,
            "value": "The result of (0x1n / 0x2n) is 0x0n",
            "raw": "'The result of (0x1n / 0x2n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 13923,
      "end": 13998,
      "expression": {
        "type": "CallExpression",
        "start": 13923,
        "end": 13997,
        "callee": {
          "type": "MemberExpression",
          "start": 13923,
          "end": 13939,
          "object": {
            "type": "Identifier",
            "start": 13923,
            "end": 13929,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 13930,
            "end": 13939,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 13940,
            "end": 13951,
            "left": {
              "type": "Literal",
              "start": 13940,
              "end": 13944,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 13947,
              "end": 13951,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "Literal",
            "start": 13953,
            "end": 13957,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 13959,
            "end": 13996,
            "value": "The result of (0x1n / 0x1n) is 0x1n",
            "raw": "'The result of (0x1n / 0x1n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 13999,
      "end": 14078,
      "expression": {
        "type": "CallExpression",
        "start": 13999,
        "end": 14077,
        "callee": {
          "type": "MemberExpression",
          "start": 13999,
          "end": 14015,
          "object": {
            "type": "Identifier",
            "start": 13999,
            "end": 14005,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 14006,
            "end": 14015,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 14016,
            "end": 14028,
            "left": {
              "type": "Literal",
              "start": 14016,
              "end": 14020,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 14023,
              "end": 14028,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 14024,
                "end": 14028,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "UnaryExpression",
            "start": 14030,
            "end": 14035,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 14031,
              "end": 14035,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 14037,
            "end": 14076,
            "value": "The result of (0x1n / -0x1n) is -0x1n",
            "raw": "'The result of (0x1n / -0x1n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 14079,
      "end": 14156,
      "expression": {
        "type": "CallExpression",
        "start": 14079,
        "end": 14155,
        "callee": {
          "type": "MemberExpression",
          "start": 14079,
          "end": 14095,
          "object": {
            "type": "Identifier",
            "start": 14079,
            "end": 14085,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 14086,
            "end": 14095,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 14096,
            "end": 14108,
            "left": {
              "type": "Literal",
              "start": 14096,
              "end": 14100,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 14103,
              "end": 14108,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 14104,
                "end": 14108,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 14110,
            "end": 14114,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 14116,
            "end": 14154,
            "value": "The result of (0x1n / -0x2n) is 0x0n",
            "raw": "'The result of (0x1n / -0x2n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 14157,
      "end": 14234,
      "expression": {
        "type": "CallExpression",
        "start": 14157,
        "end": 14233,
        "callee": {
          "type": "MemberExpression",
          "start": 14157,
          "end": 14173,
          "object": {
            "type": "Identifier",
            "start": 14157,
            "end": 14163,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 14164,
            "end": 14173,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 14174,
            "end": 14186,
            "left": {
              "type": "Literal",
              "start": 14174,
              "end": 14178,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 14181,
              "end": 14186,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 14182,
                "end": 14186,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 14188,
            "end": 14192,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 14194,
            "end": 14232,
            "value": "The result of (0x1n / -0x3n) is 0x0n",
            "raw": "'The result of (0x1n / -0x3n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 14235,
      "end": 14318,
      "expression": {
        "type": "CallExpression",
        "start": 14235,
        "end": 14317,
        "callee": {
          "type": "MemberExpression",
          "start": 14235,
          "end": 14251,
          "object": {
            "type": "Identifier",
            "start": 14235,
            "end": 14241,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 14242,
            "end": 14251,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 14252,
            "end": 14267,
            "left": {
              "type": "Literal",
              "start": 14252,
              "end": 14256,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 14259,
              "end": 14267,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 14260,
                "end": 14267,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 14269,
            "end": 14273,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 14275,
            "end": 14316,
            "value": "The result of (0x1n / -0x1234n) is 0x0n",
            "raw": "'The result of (0x1n / -0x1234n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 14319,
      "end": 14410,
      "expression": {
        "type": "CallExpression",
        "start": 14319,
        "end": 14409,
        "callee": {
          "type": "MemberExpression",
          "start": 14319,
          "end": 14335,
          "object": {
            "type": "Identifier",
            "start": 14319,
            "end": 14325,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 14326,
            "end": 14335,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 14336,
            "end": 14355,
            "left": {
              "type": "Literal",
              "start": 14336,
              "end": 14340,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 14343,
              "end": 14355,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 14344,
                "end": 14355,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 14357,
            "end": 14361,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 14363,
            "end": 14408,
            "value": "The result of (0x1n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (0x1n / -0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 14411,
      "end": 14502,
      "expression": {
        "type": "CallExpression",
        "start": 14411,
        "end": 14501,
        "callee": {
          "type": "MemberExpression",
          "start": 14411,
          "end": 14427,
          "object": {
            "type": "Identifier",
            "start": 14411,
            "end": 14417,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 14418,
            "end": 14427,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 14428,
            "end": 14447,
            "left": {
              "type": "Literal",
              "start": 14428,
              "end": 14432,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 14435,
              "end": 14447,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 14436,
                "end": 14447,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 14449,
            "end": 14453,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 14455,
            "end": 14500,
            "value": "The result of (0x1n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (0x1n / -0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 14504,
      "end": 14619,
      "expression": {
        "type": "CallExpression",
        "start": 14504,
        "end": 14618,
        "callee": {
          "type": "MemberExpression",
          "start": 14504,
          "end": 14520,
          "object": {
            "type": "Identifier",
            "start": 14504,
            "end": 14510,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 14511,
            "end": 14520,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 14524,
            "end": 14551,
            "left": {
              "type": "Literal",
              "start": 14524,
              "end": 14528,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 14531,
              "end": 14551,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 14532,
                "end": 14551,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 14555,
            "end": 14559,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 14563,
            "end": 14616,
            "value": "The result of (0x1n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (0x1n / -0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 14621,
      "end": 14736,
      "expression": {
        "type": "CallExpression",
        "start": 14621,
        "end": 14735,
        "callee": {
          "type": "MemberExpression",
          "start": 14621,
          "end": 14637,
          "object": {
            "type": "Identifier",
            "start": 14621,
            "end": 14627,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 14628,
            "end": 14637,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 14641,
            "end": 14668,
            "left": {
              "type": "Literal",
              "start": 14641,
              "end": 14645,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 14648,
              "end": 14668,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 14649,
                "end": 14668,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 14672,
            "end": 14676,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 14680,
            "end": 14733,
            "value": "The result of (0x1n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (0x1n / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 14738,
      "end": 14853,
      "expression": {
        "type": "CallExpression",
        "start": 14738,
        "end": 14852,
        "callee": {
          "type": "MemberExpression",
          "start": 14738,
          "end": 14754,
          "object": {
            "type": "Identifier",
            "start": 14738,
            "end": 14744,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 14745,
            "end": 14754,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 14758,
            "end": 14785,
            "left": {
              "type": "UnaryExpression",
              "start": 14758,
              "end": 14763,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 14759,
                "end": 14763,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 14766,
              "end": 14785,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 14789,
            "end": 14793,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 14797,
            "end": 14850,
            "value": "The result of (-0x1n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x1n / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 14855,
      "end": 14970,
      "expression": {
        "type": "CallExpression",
        "start": 14855,
        "end": 14969,
        "callee": {
          "type": "MemberExpression",
          "start": 14855,
          "end": 14871,
          "object": {
            "type": "Identifier",
            "start": 14855,
            "end": 14861,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 14862,
            "end": 14871,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 14875,
            "end": 14902,
            "left": {
              "type": "UnaryExpression",
              "start": 14875,
              "end": 14880,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 14876,
                "end": 14880,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 14883,
              "end": 14902,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 14906,
            "end": 14910,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 14914,
            "end": 14967,
            "value": "The result of (-0x1n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x1n / 0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 14972,
      "end": 15063,
      "expression": {
        "type": "CallExpression",
        "start": 14972,
        "end": 15062,
        "callee": {
          "type": "MemberExpression",
          "start": 14972,
          "end": 14988,
          "object": {
            "type": "Identifier",
            "start": 14972,
            "end": 14978,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 14979,
            "end": 14988,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 14989,
            "end": 15008,
            "left": {
              "type": "UnaryExpression",
              "start": 14989,
              "end": 14994,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 14990,
                "end": 14994,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 14997,
              "end": 15008,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 15010,
            "end": 15014,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 15016,
            "end": 15061,
            "value": "The result of (-0x1n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x1n / 0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 15064,
      "end": 15155,
      "expression": {
        "type": "CallExpression",
        "start": 15064,
        "end": 15154,
        "callee": {
          "type": "MemberExpression",
          "start": 15064,
          "end": 15080,
          "object": {
            "type": "Identifier",
            "start": 15064,
            "end": 15070,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 15071,
            "end": 15080,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 15081,
            "end": 15100,
            "left": {
              "type": "UnaryExpression",
              "start": 15081,
              "end": 15086,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15082,
                "end": 15086,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 15089,
              "end": 15100,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "Literal",
            "start": 15102,
            "end": 15106,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 15108,
            "end": 15153,
            "value": "The result of (-0x1n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x1n / 0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 15156,
      "end": 15239,
      "expression": {
        "type": "CallExpression",
        "start": 15156,
        "end": 15238,
        "callee": {
          "type": "MemberExpression",
          "start": 15156,
          "end": 15172,
          "object": {
            "type": "Identifier",
            "start": 15156,
            "end": 15162,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 15163,
            "end": 15172,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 15173,
            "end": 15188,
            "left": {
              "type": "UnaryExpression",
              "start": 15173,
              "end": 15178,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15174,
                "end": 15178,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 15181,
              "end": 15188,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "Literal",
            "start": 15190,
            "end": 15194,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 15196,
            "end": 15237,
            "value": "The result of (-0x1n / 0x1234n) is 0x0n",
            "raw": "'The result of (-0x1n / 0x1234n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 15240,
      "end": 15317,
      "expression": {
        "type": "CallExpression",
        "start": 15240,
        "end": 15316,
        "callee": {
          "type": "MemberExpression",
          "start": 15240,
          "end": 15256,
          "object": {
            "type": "Identifier",
            "start": 15240,
            "end": 15246,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 15247,
            "end": 15256,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 15257,
            "end": 15269,
            "left": {
              "type": "UnaryExpression",
              "start": 15257,
              "end": 15262,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15258,
                "end": 15262,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 15265,
              "end": 15269,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "Literal",
            "start": 15271,
            "end": 15275,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 15277,
            "end": 15315,
            "value": "The result of (-0x1n / 0x3n) is 0x0n",
            "raw": "'The result of (-0x1n / 0x3n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 15318,
      "end": 15395,
      "expression": {
        "type": "CallExpression",
        "start": 15318,
        "end": 15394,
        "callee": {
          "type": "MemberExpression",
          "start": 15318,
          "end": 15334,
          "object": {
            "type": "Identifier",
            "start": 15318,
            "end": 15324,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 15325,
            "end": 15334,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 15335,
            "end": 15347,
            "left": {
              "type": "UnaryExpression",
              "start": 15335,
              "end": 15340,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15336,
                "end": 15340,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 15343,
              "end": 15347,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "Literal",
            "start": 15349,
            "end": 15353,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 15355,
            "end": 15393,
            "value": "The result of (-0x1n / 0x2n) is 0x0n",
            "raw": "'The result of (-0x1n / 0x2n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 15396,
      "end": 15475,
      "expression": {
        "type": "CallExpression",
        "start": 15396,
        "end": 15474,
        "callee": {
          "type": "MemberExpression",
          "start": 15396,
          "end": 15412,
          "object": {
            "type": "Identifier",
            "start": 15396,
            "end": 15402,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 15403,
            "end": 15412,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 15413,
            "end": 15425,
            "left": {
              "type": "UnaryExpression",
              "start": 15413,
              "end": 15418,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15414,
                "end": 15418,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 15421,
              "end": 15425,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 15427,
            "end": 15432,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 15428,
              "end": 15432,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 15434,
            "end": 15473,
            "value": "The result of (-0x1n / 0x1n) is -0x1n",
            "raw": "'The result of (-0x1n / 0x1n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 15476,
      "end": 15555,
      "expression": {
        "type": "CallExpression",
        "start": 15476,
        "end": 15554,
        "callee": {
          "type": "MemberExpression",
          "start": 15476,
          "end": 15492,
          "object": {
            "type": "Identifier",
            "start": 15476,
            "end": 15482,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 15483,
            "end": 15492,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 15493,
            "end": 15506,
            "left": {
              "type": "UnaryExpression",
              "start": 15493,
              "end": 15498,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15494,
                "end": 15498,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 15501,
              "end": 15506,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15502,
                "end": 15506,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 15508,
            "end": 15512,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 15514,
            "end": 15553,
            "value": "The result of (-0x1n / -0x1n) is 0x1n",
            "raw": "'The result of (-0x1n / -0x1n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 15556,
      "end": 15635,
      "expression": {
        "type": "CallExpression",
        "start": 15556,
        "end": 15634,
        "callee": {
          "type": "MemberExpression",
          "start": 15556,
          "end": 15572,
          "object": {
            "type": "Identifier",
            "start": 15556,
            "end": 15562,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 15563,
            "end": 15572,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 15573,
            "end": 15586,
            "left": {
              "type": "UnaryExpression",
              "start": 15573,
              "end": 15578,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15574,
                "end": 15578,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 15581,
              "end": 15586,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15582,
                "end": 15586,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 15588,
            "end": 15592,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 15594,
            "end": 15633,
            "value": "The result of (-0x1n / -0x2n) is 0x0n",
            "raw": "'The result of (-0x1n / -0x2n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 15636,
      "end": 15715,
      "expression": {
        "type": "CallExpression",
        "start": 15636,
        "end": 15714,
        "callee": {
          "type": "MemberExpression",
          "start": 15636,
          "end": 15652,
          "object": {
            "type": "Identifier",
            "start": 15636,
            "end": 15642,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 15643,
            "end": 15652,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 15653,
            "end": 15666,
            "left": {
              "type": "UnaryExpression",
              "start": 15653,
              "end": 15658,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15654,
                "end": 15658,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 15661,
              "end": 15666,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15662,
                "end": 15666,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 15668,
            "end": 15672,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 15674,
            "end": 15713,
            "value": "The result of (-0x1n / -0x3n) is 0x0n",
            "raw": "'The result of (-0x1n / -0x3n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 15716,
      "end": 15801,
      "expression": {
        "type": "CallExpression",
        "start": 15716,
        "end": 15800,
        "callee": {
          "type": "MemberExpression",
          "start": 15716,
          "end": 15732,
          "object": {
            "type": "Identifier",
            "start": 15716,
            "end": 15722,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 15723,
            "end": 15732,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 15733,
            "end": 15749,
            "left": {
              "type": "UnaryExpression",
              "start": 15733,
              "end": 15738,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15734,
                "end": 15738,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 15741,
              "end": 15749,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15742,
                "end": 15749,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 15751,
            "end": 15755,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 15757,
            "end": 15799,
            "value": "The result of (-0x1n / -0x1234n) is 0x0n",
            "raw": "'The result of (-0x1n / -0x1234n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 15802,
      "end": 15895,
      "expression": {
        "type": "CallExpression",
        "start": 15802,
        "end": 15894,
        "callee": {
          "type": "MemberExpression",
          "start": 15802,
          "end": 15818,
          "object": {
            "type": "Identifier",
            "start": 15802,
            "end": 15808,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 15809,
            "end": 15818,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 15819,
            "end": 15839,
            "left": {
              "type": "UnaryExpression",
              "start": 15819,
              "end": 15824,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15820,
                "end": 15824,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 15827,
              "end": 15839,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15828,
                "end": 15839,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 15841,
            "end": 15845,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 15847,
            "end": 15893,
            "value": "The result of (-0x1n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x1n / -0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 15896,
      "end": 15989,
      "expression": {
        "type": "CallExpression",
        "start": 15896,
        "end": 15988,
        "callee": {
          "type": "MemberExpression",
          "start": 15896,
          "end": 15912,
          "object": {
            "type": "Identifier",
            "start": 15896,
            "end": 15902,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 15903,
            "end": 15912,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 15913,
            "end": 15933,
            "left": {
              "type": "UnaryExpression",
              "start": 15913,
              "end": 15918,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15914,
                "end": 15918,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 15921,
              "end": 15933,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 15922,
                "end": 15933,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 15935,
            "end": 15939,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 15941,
            "end": 15987,
            "value": "The result of (-0x1n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x1n / -0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 15991,
      "end": 16108,
      "expression": {
        "type": "CallExpression",
        "start": 15991,
        "end": 16107,
        "callee": {
          "type": "MemberExpression",
          "start": 15991,
          "end": 16007,
          "object": {
            "type": "Identifier",
            "start": 15991,
            "end": 15997,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 15998,
            "end": 16007,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 16011,
            "end": 16039,
            "left": {
              "type": "UnaryExpression",
              "start": 16011,
              "end": 16016,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16012,
                "end": 16016,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 16019,
              "end": 16039,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16020,
                "end": 16039,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 16043,
            "end": 16047,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 16051,
            "end": 16105,
            "value": "The result of (-0x1n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x1n / -0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 16110,
      "end": 16227,
      "expression": {
        "type": "CallExpression",
        "start": 16110,
        "end": 16226,
        "callee": {
          "type": "MemberExpression",
          "start": 16110,
          "end": 16126,
          "object": {
            "type": "Identifier",
            "start": 16110,
            "end": 16116,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 16117,
            "end": 16126,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 16130,
            "end": 16158,
            "left": {
              "type": "UnaryExpression",
              "start": 16130,
              "end": 16135,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16131,
                "end": 16135,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 16138,
              "end": 16158,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16139,
                "end": 16158,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 16162,
            "end": 16166,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 16170,
            "end": 16224,
            "value": "The result of (-0x1n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x1n / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 16229,
      "end": 16344,
      "expression": {
        "type": "CallExpression",
        "start": 16229,
        "end": 16343,
        "callee": {
          "type": "MemberExpression",
          "start": 16229,
          "end": 16245,
          "object": {
            "type": "Identifier",
            "start": 16229,
            "end": 16235,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 16236,
            "end": 16245,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 16249,
            "end": 16276,
            "left": {
              "type": "UnaryExpression",
              "start": 16249,
              "end": 16254,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16250,
                "end": 16254,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 16257,
              "end": 16276,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 16280,
            "end": 16284,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 16288,
            "end": 16341,
            "value": "The result of (-0x2n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x2n / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 16346,
      "end": 16461,
      "expression": {
        "type": "CallExpression",
        "start": 16346,
        "end": 16460,
        "callee": {
          "type": "MemberExpression",
          "start": 16346,
          "end": 16362,
          "object": {
            "type": "Identifier",
            "start": 16346,
            "end": 16352,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 16353,
            "end": 16362,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 16366,
            "end": 16393,
            "left": {
              "type": "UnaryExpression",
              "start": 16366,
              "end": 16371,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16367,
                "end": 16371,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 16374,
              "end": 16393,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 16397,
            "end": 16401,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 16405,
            "end": 16458,
            "value": "The result of (-0x2n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x2n / 0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 16463,
      "end": 16554,
      "expression": {
        "type": "CallExpression",
        "start": 16463,
        "end": 16553,
        "callee": {
          "type": "MemberExpression",
          "start": 16463,
          "end": 16479,
          "object": {
            "type": "Identifier",
            "start": 16463,
            "end": 16469,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 16470,
            "end": 16479,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 16480,
            "end": 16499,
            "left": {
              "type": "UnaryExpression",
              "start": 16480,
              "end": 16485,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16481,
                "end": 16485,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 16488,
              "end": 16499,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 16501,
            "end": 16505,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 16507,
            "end": 16552,
            "value": "The result of (-0x2n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x2n / 0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 16555,
      "end": 16646,
      "expression": {
        "type": "CallExpression",
        "start": 16555,
        "end": 16645,
        "callee": {
          "type": "MemberExpression",
          "start": 16555,
          "end": 16571,
          "object": {
            "type": "Identifier",
            "start": 16555,
            "end": 16561,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 16562,
            "end": 16571,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 16572,
            "end": 16591,
            "left": {
              "type": "UnaryExpression",
              "start": 16572,
              "end": 16577,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16573,
                "end": 16577,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 16580,
              "end": 16591,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "Literal",
            "start": 16593,
            "end": 16597,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 16599,
            "end": 16644,
            "value": "The result of (-0x2n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x2n / 0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 16647,
      "end": 16730,
      "expression": {
        "type": "CallExpression",
        "start": 16647,
        "end": 16729,
        "callee": {
          "type": "MemberExpression",
          "start": 16647,
          "end": 16663,
          "object": {
            "type": "Identifier",
            "start": 16647,
            "end": 16653,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 16654,
            "end": 16663,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 16664,
            "end": 16679,
            "left": {
              "type": "UnaryExpression",
              "start": 16664,
              "end": 16669,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16665,
                "end": 16669,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 16672,
              "end": 16679,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "Literal",
            "start": 16681,
            "end": 16685,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 16687,
            "end": 16728,
            "value": "The result of (-0x2n / 0x1234n) is 0x0n",
            "raw": "'The result of (-0x2n / 0x1234n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 16731,
      "end": 16808,
      "expression": {
        "type": "CallExpression",
        "start": 16731,
        "end": 16807,
        "callee": {
          "type": "MemberExpression",
          "start": 16731,
          "end": 16747,
          "object": {
            "type": "Identifier",
            "start": 16731,
            "end": 16737,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 16738,
            "end": 16747,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 16748,
            "end": 16760,
            "left": {
              "type": "UnaryExpression",
              "start": 16748,
              "end": 16753,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16749,
                "end": 16753,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 16756,
              "end": 16760,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "Literal",
            "start": 16762,
            "end": 16766,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 16768,
            "end": 16806,
            "value": "The result of (-0x2n / 0x3n) is 0x0n",
            "raw": "'The result of (-0x2n / 0x3n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 16809,
      "end": 16888,
      "expression": {
        "type": "CallExpression",
        "start": 16809,
        "end": 16887,
        "callee": {
          "type": "MemberExpression",
          "start": 16809,
          "end": 16825,
          "object": {
            "type": "Identifier",
            "start": 16809,
            "end": 16815,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 16816,
            "end": 16825,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 16826,
            "end": 16838,
            "left": {
              "type": "UnaryExpression",
              "start": 16826,
              "end": 16831,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16827,
                "end": 16831,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 16834,
              "end": 16838,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 16840,
            "end": 16845,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 16841,
              "end": 16845,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 16847,
            "end": 16886,
            "value": "The result of (-0x2n / 0x2n) is -0x1n",
            "raw": "'The result of (-0x2n / 0x2n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 16889,
      "end": 16968,
      "expression": {
        "type": "CallExpression",
        "start": 16889,
        "end": 16967,
        "callee": {
          "type": "MemberExpression",
          "start": 16889,
          "end": 16905,
          "object": {
            "type": "Identifier",
            "start": 16889,
            "end": 16895,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 16896,
            "end": 16905,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 16906,
            "end": 16918,
            "left": {
              "type": "UnaryExpression",
              "start": 16906,
              "end": 16911,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16907,
                "end": 16911,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 16914,
              "end": 16918,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 16920,
            "end": 16925,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 16921,
              "end": 16925,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 16927,
            "end": 16966,
            "value": "The result of (-0x2n / 0x1n) is -0x2n",
            "raw": "'The result of (-0x2n / 0x1n) is -0x2n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 16969,
      "end": 17048,
      "expression": {
        "type": "CallExpression",
        "start": 16969,
        "end": 17047,
        "callee": {
          "type": "MemberExpression",
          "start": 16969,
          "end": 16985,
          "object": {
            "type": "Identifier",
            "start": 16969,
            "end": 16975,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 16976,
            "end": 16985,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 16986,
            "end": 16999,
            "left": {
              "type": "UnaryExpression",
              "start": 16986,
              "end": 16991,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16987,
                "end": 16991,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 16994,
              "end": 16999,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 16995,
                "end": 16999,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 17001,
            "end": 17005,
            "value": null,
            "raw": "0x2n",
            "bigint": "0x2"
          },
          {
            "type": "Literal",
            "start": 17007,
            "end": 17046,
            "value": "The result of (-0x2n / -0x1n) is 0x2n",
            "raw": "'The result of (-0x2n / -0x1n) is 0x2n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 17049,
      "end": 17128,
      "expression": {
        "type": "CallExpression",
        "start": 17049,
        "end": 17127,
        "callee": {
          "type": "MemberExpression",
          "start": 17049,
          "end": 17065,
          "object": {
            "type": "Identifier",
            "start": 17049,
            "end": 17055,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 17056,
            "end": 17065,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 17066,
            "end": 17079,
            "left": {
              "type": "UnaryExpression",
              "start": 17066,
              "end": 17071,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17067,
                "end": 17071,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 17074,
              "end": 17079,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17075,
                "end": 17079,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 17081,
            "end": 17085,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 17087,
            "end": 17126,
            "value": "The result of (-0x2n / -0x2n) is 0x1n",
            "raw": "'The result of (-0x2n / -0x2n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 17129,
      "end": 17208,
      "expression": {
        "type": "CallExpression",
        "start": 17129,
        "end": 17207,
        "callee": {
          "type": "MemberExpression",
          "start": 17129,
          "end": 17145,
          "object": {
            "type": "Identifier",
            "start": 17129,
            "end": 17135,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 17136,
            "end": 17145,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 17146,
            "end": 17159,
            "left": {
              "type": "UnaryExpression",
              "start": 17146,
              "end": 17151,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17147,
                "end": 17151,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 17154,
              "end": 17159,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17155,
                "end": 17159,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 17161,
            "end": 17165,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 17167,
            "end": 17206,
            "value": "The result of (-0x2n / -0x3n) is 0x0n",
            "raw": "'The result of (-0x2n / -0x3n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 17209,
      "end": 17294,
      "expression": {
        "type": "CallExpression",
        "start": 17209,
        "end": 17293,
        "callee": {
          "type": "MemberExpression",
          "start": 17209,
          "end": 17225,
          "object": {
            "type": "Identifier",
            "start": 17209,
            "end": 17215,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 17216,
            "end": 17225,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 17226,
            "end": 17242,
            "left": {
              "type": "UnaryExpression",
              "start": 17226,
              "end": 17231,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17227,
                "end": 17231,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 17234,
              "end": 17242,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17235,
                "end": 17242,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 17244,
            "end": 17248,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 17250,
            "end": 17292,
            "value": "The result of (-0x2n / -0x1234n) is 0x0n",
            "raw": "'The result of (-0x2n / -0x1234n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 17295,
      "end": 17388,
      "expression": {
        "type": "CallExpression",
        "start": 17295,
        "end": 17387,
        "callee": {
          "type": "MemberExpression",
          "start": 17295,
          "end": 17311,
          "object": {
            "type": "Identifier",
            "start": 17295,
            "end": 17301,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 17302,
            "end": 17311,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 17312,
            "end": 17332,
            "left": {
              "type": "UnaryExpression",
              "start": 17312,
              "end": 17317,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17313,
                "end": 17317,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 17320,
              "end": 17332,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17321,
                "end": 17332,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 17334,
            "end": 17338,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 17340,
            "end": 17386,
            "value": "The result of (-0x2n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x2n / -0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 17389,
      "end": 17482,
      "expression": {
        "type": "CallExpression",
        "start": 17389,
        "end": 17481,
        "callee": {
          "type": "MemberExpression",
          "start": 17389,
          "end": 17405,
          "object": {
            "type": "Identifier",
            "start": 17389,
            "end": 17395,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 17396,
            "end": 17405,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 17406,
            "end": 17426,
            "left": {
              "type": "UnaryExpression",
              "start": 17406,
              "end": 17411,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17407,
                "end": 17411,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 17414,
              "end": 17426,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17415,
                "end": 17426,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 17428,
            "end": 17432,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 17434,
            "end": 17480,
            "value": "The result of (-0x2n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x2n / -0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 17484,
      "end": 17601,
      "expression": {
        "type": "CallExpression",
        "start": 17484,
        "end": 17600,
        "callee": {
          "type": "MemberExpression",
          "start": 17484,
          "end": 17500,
          "object": {
            "type": "Identifier",
            "start": 17484,
            "end": 17490,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 17491,
            "end": 17500,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 17504,
            "end": 17532,
            "left": {
              "type": "UnaryExpression",
              "start": 17504,
              "end": 17509,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17505,
                "end": 17509,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 17512,
              "end": 17532,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17513,
                "end": 17532,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 17536,
            "end": 17540,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 17544,
            "end": 17598,
            "value": "The result of (-0x2n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x2n / -0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 17603,
      "end": 17720,
      "expression": {
        "type": "CallExpression",
        "start": 17603,
        "end": 17719,
        "callee": {
          "type": "MemberExpression",
          "start": 17603,
          "end": 17619,
          "object": {
            "type": "Identifier",
            "start": 17603,
            "end": 17609,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 17610,
            "end": 17619,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 17623,
            "end": 17651,
            "left": {
              "type": "UnaryExpression",
              "start": 17623,
              "end": 17628,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17624,
                "end": 17628,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 17631,
              "end": 17651,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17632,
                "end": 17651,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 17655,
            "end": 17659,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 17663,
            "end": 17717,
            "value": "The result of (-0x2n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x2n / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 17722,
      "end": 17837,
      "expression": {
        "type": "CallExpression",
        "start": 17722,
        "end": 17836,
        "callee": {
          "type": "MemberExpression",
          "start": 17722,
          "end": 17738,
          "object": {
            "type": "Identifier",
            "start": 17722,
            "end": 17728,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 17729,
            "end": 17738,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 17742,
            "end": 17769,
            "left": {
              "type": "UnaryExpression",
              "start": 17742,
              "end": 17747,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17743,
                "end": 17747,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 17750,
              "end": 17769,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 17773,
            "end": 17777,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 17781,
            "end": 17834,
            "value": "The result of (-0x3n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x3n / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 17839,
      "end": 17954,
      "expression": {
        "type": "CallExpression",
        "start": 17839,
        "end": 17953,
        "callee": {
          "type": "MemberExpression",
          "start": 17839,
          "end": 17855,
          "object": {
            "type": "Identifier",
            "start": 17839,
            "end": 17845,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 17846,
            "end": 17855,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 17859,
            "end": 17886,
            "left": {
              "type": "UnaryExpression",
              "start": 17859,
              "end": 17864,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17860,
                "end": 17864,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 17867,
              "end": 17886,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 17890,
            "end": 17894,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 17898,
            "end": 17951,
            "value": "The result of (-0x3n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x3n / 0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 17956,
      "end": 18047,
      "expression": {
        "type": "CallExpression",
        "start": 17956,
        "end": 18046,
        "callee": {
          "type": "MemberExpression",
          "start": 17956,
          "end": 17972,
          "object": {
            "type": "Identifier",
            "start": 17956,
            "end": 17962,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 17963,
            "end": 17972,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 17973,
            "end": 17992,
            "left": {
              "type": "UnaryExpression",
              "start": 17973,
              "end": 17978,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 17974,
                "end": 17978,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 17981,
              "end": 17992,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 17994,
            "end": 17998,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 18000,
            "end": 18045,
            "value": "The result of (-0x3n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x3n / 0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 18048,
      "end": 18139,
      "expression": {
        "type": "CallExpression",
        "start": 18048,
        "end": 18138,
        "callee": {
          "type": "MemberExpression",
          "start": 18048,
          "end": 18064,
          "object": {
            "type": "Identifier",
            "start": 18048,
            "end": 18054,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 18055,
            "end": 18064,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 18065,
            "end": 18084,
            "left": {
              "type": "UnaryExpression",
              "start": 18065,
              "end": 18070,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18066,
                "end": 18070,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 18073,
              "end": 18084,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "Literal",
            "start": 18086,
            "end": 18090,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 18092,
            "end": 18137,
            "value": "The result of (-0x3n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x3n / 0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 18140,
      "end": 18223,
      "expression": {
        "type": "CallExpression",
        "start": 18140,
        "end": 18222,
        "callee": {
          "type": "MemberExpression",
          "start": 18140,
          "end": 18156,
          "object": {
            "type": "Identifier",
            "start": 18140,
            "end": 18146,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 18147,
            "end": 18156,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 18157,
            "end": 18172,
            "left": {
              "type": "UnaryExpression",
              "start": 18157,
              "end": 18162,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18158,
                "end": 18162,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 18165,
              "end": 18172,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "Literal",
            "start": 18174,
            "end": 18178,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 18180,
            "end": 18221,
            "value": "The result of (-0x3n / 0x1234n) is 0x0n",
            "raw": "'The result of (-0x3n / 0x1234n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 18224,
      "end": 18303,
      "expression": {
        "type": "CallExpression",
        "start": 18224,
        "end": 18302,
        "callee": {
          "type": "MemberExpression",
          "start": 18224,
          "end": 18240,
          "object": {
            "type": "Identifier",
            "start": 18224,
            "end": 18230,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 18231,
            "end": 18240,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 18241,
            "end": 18253,
            "left": {
              "type": "UnaryExpression",
              "start": 18241,
              "end": 18246,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18242,
                "end": 18246,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 18249,
              "end": 18253,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 18255,
            "end": 18260,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 18256,
              "end": 18260,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 18262,
            "end": 18301,
            "value": "The result of (-0x3n / 0x3n) is -0x1n",
            "raw": "'The result of (-0x3n / 0x3n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 18304,
      "end": 18383,
      "expression": {
        "type": "CallExpression",
        "start": 18304,
        "end": 18382,
        "callee": {
          "type": "MemberExpression",
          "start": 18304,
          "end": 18320,
          "object": {
            "type": "Identifier",
            "start": 18304,
            "end": 18310,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 18311,
            "end": 18320,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 18321,
            "end": 18333,
            "left": {
              "type": "UnaryExpression",
              "start": 18321,
              "end": 18326,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18322,
                "end": 18326,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 18329,
              "end": 18333,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 18335,
            "end": 18340,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 18336,
              "end": 18340,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 18342,
            "end": 18381,
            "value": "The result of (-0x3n / 0x2n) is -0x1n",
            "raw": "'The result of (-0x3n / 0x2n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 18384,
      "end": 18463,
      "expression": {
        "type": "CallExpression",
        "start": 18384,
        "end": 18462,
        "callee": {
          "type": "MemberExpression",
          "start": 18384,
          "end": 18400,
          "object": {
            "type": "Identifier",
            "start": 18384,
            "end": 18390,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 18391,
            "end": 18400,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 18401,
            "end": 18413,
            "left": {
              "type": "UnaryExpression",
              "start": 18401,
              "end": 18406,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18402,
                "end": 18406,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 18409,
              "end": 18413,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 18415,
            "end": 18420,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 18416,
              "end": 18420,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 18422,
            "end": 18461,
            "value": "The result of (-0x3n / 0x1n) is -0x3n",
            "raw": "'The result of (-0x3n / 0x1n) is -0x3n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 18464,
      "end": 18543,
      "expression": {
        "type": "CallExpression",
        "start": 18464,
        "end": 18542,
        "callee": {
          "type": "MemberExpression",
          "start": 18464,
          "end": 18480,
          "object": {
            "type": "Identifier",
            "start": 18464,
            "end": 18470,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 18471,
            "end": 18480,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 18481,
            "end": 18494,
            "left": {
              "type": "UnaryExpression",
              "start": 18481,
              "end": 18486,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18482,
                "end": 18486,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 18489,
              "end": 18494,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18490,
                "end": 18494,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 18496,
            "end": 18500,
            "value": null,
            "raw": "0x3n",
            "bigint": "0x3"
          },
          {
            "type": "Literal",
            "start": 18502,
            "end": 18541,
            "value": "The result of (-0x3n / -0x1n) is 0x3n",
            "raw": "'The result of (-0x3n / -0x1n) is 0x3n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 18544,
      "end": 18623,
      "expression": {
        "type": "CallExpression",
        "start": 18544,
        "end": 18622,
        "callee": {
          "type": "MemberExpression",
          "start": 18544,
          "end": 18560,
          "object": {
            "type": "Identifier",
            "start": 18544,
            "end": 18550,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 18551,
            "end": 18560,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 18561,
            "end": 18574,
            "left": {
              "type": "UnaryExpression",
              "start": 18561,
              "end": 18566,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18562,
                "end": 18566,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 18569,
              "end": 18574,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18570,
                "end": 18574,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 18576,
            "end": 18580,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 18582,
            "end": 18621,
            "value": "The result of (-0x3n / -0x2n) is 0x1n",
            "raw": "'The result of (-0x3n / -0x2n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 18624,
      "end": 18703,
      "expression": {
        "type": "CallExpression",
        "start": 18624,
        "end": 18702,
        "callee": {
          "type": "MemberExpression",
          "start": 18624,
          "end": 18640,
          "object": {
            "type": "Identifier",
            "start": 18624,
            "end": 18630,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 18631,
            "end": 18640,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 18641,
            "end": 18654,
            "left": {
              "type": "UnaryExpression",
              "start": 18641,
              "end": 18646,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18642,
                "end": 18646,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 18649,
              "end": 18654,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18650,
                "end": 18654,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 18656,
            "end": 18660,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 18662,
            "end": 18701,
            "value": "The result of (-0x3n / -0x3n) is 0x1n",
            "raw": "'The result of (-0x3n / -0x3n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 18704,
      "end": 18789,
      "expression": {
        "type": "CallExpression",
        "start": 18704,
        "end": 18788,
        "callee": {
          "type": "MemberExpression",
          "start": 18704,
          "end": 18720,
          "object": {
            "type": "Identifier",
            "start": 18704,
            "end": 18710,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 18711,
            "end": 18720,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 18721,
            "end": 18737,
            "left": {
              "type": "UnaryExpression",
              "start": 18721,
              "end": 18726,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18722,
                "end": 18726,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 18729,
              "end": 18737,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18730,
                "end": 18737,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 18739,
            "end": 18743,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 18745,
            "end": 18787,
            "value": "The result of (-0x3n / -0x1234n) is 0x0n",
            "raw": "'The result of (-0x3n / -0x1234n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 18790,
      "end": 18883,
      "expression": {
        "type": "CallExpression",
        "start": 18790,
        "end": 18882,
        "callee": {
          "type": "MemberExpression",
          "start": 18790,
          "end": 18806,
          "object": {
            "type": "Identifier",
            "start": 18790,
            "end": 18796,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 18797,
            "end": 18806,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 18807,
            "end": 18827,
            "left": {
              "type": "UnaryExpression",
              "start": 18807,
              "end": 18812,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18808,
                "end": 18812,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 18815,
              "end": 18827,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18816,
                "end": 18827,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 18829,
            "end": 18833,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 18835,
            "end": 18881,
            "value": "The result of (-0x3n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x3n / -0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 18884,
      "end": 18977,
      "expression": {
        "type": "CallExpression",
        "start": 18884,
        "end": 18976,
        "callee": {
          "type": "MemberExpression",
          "start": 18884,
          "end": 18900,
          "object": {
            "type": "Identifier",
            "start": 18884,
            "end": 18890,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 18891,
            "end": 18900,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 18901,
            "end": 18921,
            "left": {
              "type": "UnaryExpression",
              "start": 18901,
              "end": 18906,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18902,
                "end": 18906,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 18909,
              "end": 18921,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 18910,
                "end": 18921,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 18923,
            "end": 18927,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 18929,
            "end": 18975,
            "value": "The result of (-0x3n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x3n / -0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 18979,
      "end": 19096,
      "expression": {
        "type": "CallExpression",
        "start": 18979,
        "end": 19095,
        "callee": {
          "type": "MemberExpression",
          "start": 18979,
          "end": 18995,
          "object": {
            "type": "Identifier",
            "start": 18979,
            "end": 18985,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 18986,
            "end": 18995,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 18999,
            "end": 19027,
            "left": {
              "type": "UnaryExpression",
              "start": 18999,
              "end": 19004,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 19000,
                "end": 19004,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 19007,
              "end": 19027,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 19008,
                "end": 19027,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 19031,
            "end": 19035,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 19039,
            "end": 19093,
            "value": "The result of (-0x3n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x3n / -0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 19098,
      "end": 19215,
      "expression": {
        "type": "CallExpression",
        "start": 19098,
        "end": 19214,
        "callee": {
          "type": "MemberExpression",
          "start": 19098,
          "end": 19114,
          "object": {
            "type": "Identifier",
            "start": 19098,
            "end": 19104,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 19105,
            "end": 19114,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 19118,
            "end": 19146,
            "left": {
              "type": "UnaryExpression",
              "start": 19118,
              "end": 19123,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 19119,
                "end": 19123,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 19126,
              "end": 19146,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 19127,
                "end": 19146,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 19150,
            "end": 19154,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 19158,
            "end": 19212,
            "value": "The result of (-0x3n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x3n / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 19217,
      "end": 19338,
      "expression": {
        "type": "CallExpression",
        "start": 19217,
        "end": 19337,
        "callee": {
          "type": "MemberExpression",
          "start": 19217,
          "end": 19233,
          "object": {
            "type": "Identifier",
            "start": 19217,
            "end": 19223,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 19224,
            "end": 19233,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 19237,
            "end": 19267,
            "left": {
              "type": "UnaryExpression",
              "start": 19237,
              "end": 19245,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 19238,
                "end": 19245,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 19248,
              "end": 19267,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 19271,
            "end": 19275,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 19279,
            "end": 19335,
            "value": "The result of (-0x1234n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x1234n / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 19340,
      "end": 19461,
      "expression": {
        "type": "CallExpression",
        "start": 19340,
        "end": 19460,
        "callee": {
          "type": "MemberExpression",
          "start": 19340,
          "end": 19356,
          "object": {
            "type": "Identifier",
            "start": 19340,
            "end": 19346,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 19347,
            "end": 19356,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 19360,
            "end": 19390,
            "left": {
              "type": "UnaryExpression",
              "start": 19360,
              "end": 19368,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 19361,
                "end": 19368,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 19371,
              "end": 19390,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 19394,
            "end": 19398,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 19402,
            "end": 19458,
            "value": "The result of (-0x1234n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x1234n / 0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 19463,
      "end": 19560,
      "expression": {
        "type": "CallExpression",
        "start": 19463,
        "end": 19559,
        "callee": {
          "type": "MemberExpression",
          "start": 19463,
          "end": 19479,
          "object": {
            "type": "Identifier",
            "start": 19463,
            "end": 19469,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 19470,
            "end": 19479,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 19480,
            "end": 19502,
            "left": {
              "type": "UnaryExpression",
              "start": 19480,
              "end": 19488,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 19481,
                "end": 19488,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 19491,
              "end": 19502,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 19504,
            "end": 19508,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 19510,
            "end": 19558,
            "value": "The result of (-0x1234n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x1234n / 0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 19561,
      "end": 19658,
      "expression": {
        "type": "CallExpression",
        "start": 19561,
        "end": 19657,
        "callee": {
          "type": "MemberExpression",
          "start": 19561,
          "end": 19577,
          "object": {
            "type": "Identifier",
            "start": 19561,
            "end": 19567,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 19568,
            "end": 19577,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 19578,
            "end": 19600,
            "left": {
              "type": "UnaryExpression",
              "start": 19578,
              "end": 19586,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 19579,
                "end": 19586,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 19589,
              "end": 19600,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "Literal",
            "start": 19602,
            "end": 19606,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 19608,
            "end": 19656,
            "value": "The result of (-0x1234n / 0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x1234n / 0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 19659,
      "end": 19750,
      "expression": {
        "type": "CallExpression",
        "start": 19659,
        "end": 19749,
        "callee": {
          "type": "MemberExpression",
          "start": 19659,
          "end": 19675,
          "object": {
            "type": "Identifier",
            "start": 19659,
            "end": 19665,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 19666,
            "end": 19675,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 19676,
            "end": 19694,
            "left": {
              "type": "UnaryExpression",
              "start": 19676,
              "end": 19684,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 19677,
                "end": 19684,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 19687,
              "end": 19694,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 19696,
            "end": 19701,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 19697,
              "end": 19701,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 19703,
            "end": 19748,
            "value": "The result of (-0x1234n / 0x1234n) is -0x1n",
            "raw": "'The result of (-0x1234n / 0x1234n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 19751,
      "end": 19840,
      "expression": {
        "type": "CallExpression",
        "start": 19751,
        "end": 19839,
        "callee": {
          "type": "MemberExpression",
          "start": 19751,
          "end": 19767,
          "object": {
            "type": "Identifier",
            "start": 19751,
            "end": 19757,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 19758,
            "end": 19767,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 19768,
            "end": 19783,
            "left": {
              "type": "UnaryExpression",
              "start": 19768,
              "end": 19776,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 19769,
                "end": 19776,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 19779,
              "end": 19783,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 19785,
            "end": 19792,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 19786,
              "end": 19792,
              "value": null,
              "raw": "0x611n",
              "bigint": "0x611"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 19794,
            "end": 19838,
            "value": "The result of (-0x1234n / 0x3n) is -0x611n",
            "raw": "'The result of (-0x1234n / 0x3n) is -0x611n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 19841,
      "end": 19930,
      "expression": {
        "type": "CallExpression",
        "start": 19841,
        "end": 19929,
        "callee": {
          "type": "MemberExpression",
          "start": 19841,
          "end": 19857,
          "object": {
            "type": "Identifier",
            "start": 19841,
            "end": 19847,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 19848,
            "end": 19857,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 19858,
            "end": 19873,
            "left": {
              "type": "UnaryExpression",
              "start": 19858,
              "end": 19866,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 19859,
                "end": 19866,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 19869,
              "end": 19873,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 19875,
            "end": 19882,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 19876,
              "end": 19882,
              "value": null,
              "raw": "0x91An",
              "bigint": "0x91A"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 19884,
            "end": 19928,
            "value": "The result of (-0x1234n / 0x2n) is -0x91An",
            "raw": "'The result of (-0x1234n / 0x2n) is -0x91An'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 19931,
      "end": 20022,
      "expression": {
        "type": "CallExpression",
        "start": 19931,
        "end": 20021,
        "callee": {
          "type": "MemberExpression",
          "start": 19931,
          "end": 19947,
          "object": {
            "type": "Identifier",
            "start": 19931,
            "end": 19937,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 19938,
            "end": 19947,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 19948,
            "end": 19963,
            "left": {
              "type": "UnaryExpression",
              "start": 19948,
              "end": 19956,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 19949,
                "end": 19956,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 19959,
              "end": 19963,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 19965,
            "end": 19973,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 19966,
              "end": 19973,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 19975,
            "end": 20020,
            "value": "The result of (-0x1234n / 0x1n) is -0x1234n",
            "raw": "'The result of (-0x1234n / 0x1n) is -0x1234n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 20023,
      "end": 20114,
      "expression": {
        "type": "CallExpression",
        "start": 20023,
        "end": 20113,
        "callee": {
          "type": "MemberExpression",
          "start": 20023,
          "end": 20039,
          "object": {
            "type": "Identifier",
            "start": 20023,
            "end": 20029,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 20030,
            "end": 20039,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 20040,
            "end": 20056,
            "left": {
              "type": "UnaryExpression",
              "start": 20040,
              "end": 20048,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20041,
                "end": 20048,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 20051,
              "end": 20056,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20052,
                "end": 20056,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 20058,
            "end": 20065,
            "value": null,
            "raw": "0x1234n",
            "bigint": "0x1234"
          },
          {
            "type": "Literal",
            "start": 20067,
            "end": 20112,
            "value": "The result of (-0x1234n / -0x1n) is 0x1234n",
            "raw": "'The result of (-0x1234n / -0x1n) is 0x1234n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 20115,
      "end": 20204,
      "expression": {
        "type": "CallExpression",
        "start": 20115,
        "end": 20203,
        "callee": {
          "type": "MemberExpression",
          "start": 20115,
          "end": 20131,
          "object": {
            "type": "Identifier",
            "start": 20115,
            "end": 20121,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 20122,
            "end": 20131,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 20132,
            "end": 20148,
            "left": {
              "type": "UnaryExpression",
              "start": 20132,
              "end": 20140,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20133,
                "end": 20140,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 20143,
              "end": 20148,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20144,
                "end": 20148,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 20150,
            "end": 20156,
            "value": null,
            "raw": "0x91An",
            "bigint": "0x91A"
          },
          {
            "type": "Literal",
            "start": 20158,
            "end": 20202,
            "value": "The result of (-0x1234n / -0x2n) is 0x91An",
            "raw": "'The result of (-0x1234n / -0x2n) is 0x91An'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 20205,
      "end": 20294,
      "expression": {
        "type": "CallExpression",
        "start": 20205,
        "end": 20293,
        "callee": {
          "type": "MemberExpression",
          "start": 20205,
          "end": 20221,
          "object": {
            "type": "Identifier",
            "start": 20205,
            "end": 20211,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 20212,
            "end": 20221,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 20222,
            "end": 20238,
            "left": {
              "type": "UnaryExpression",
              "start": 20222,
              "end": 20230,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20223,
                "end": 20230,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 20233,
              "end": 20238,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20234,
                "end": 20238,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 20240,
            "end": 20246,
            "value": null,
            "raw": "0x611n",
            "bigint": "0x611"
          },
          {
            "type": "Literal",
            "start": 20248,
            "end": 20292,
            "value": "The result of (-0x1234n / -0x3n) is 0x611n",
            "raw": "'The result of (-0x1234n / -0x3n) is 0x611n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 20295,
      "end": 20386,
      "expression": {
        "type": "CallExpression",
        "start": 20295,
        "end": 20385,
        "callee": {
          "type": "MemberExpression",
          "start": 20295,
          "end": 20311,
          "object": {
            "type": "Identifier",
            "start": 20295,
            "end": 20301,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 20302,
            "end": 20311,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 20312,
            "end": 20331,
            "left": {
              "type": "UnaryExpression",
              "start": 20312,
              "end": 20320,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20313,
                "end": 20320,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 20323,
              "end": 20331,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20324,
                "end": 20331,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 20333,
            "end": 20337,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 20339,
            "end": 20384,
            "value": "The result of (-0x1234n / -0x1234n) is 0x1n",
            "raw": "'The result of (-0x1234n / -0x1234n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 20387,
      "end": 20486,
      "expression": {
        "type": "CallExpression",
        "start": 20387,
        "end": 20485,
        "callee": {
          "type": "MemberExpression",
          "start": 20387,
          "end": 20403,
          "object": {
            "type": "Identifier",
            "start": 20387,
            "end": 20393,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 20394,
            "end": 20403,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 20404,
            "end": 20427,
            "left": {
              "type": "UnaryExpression",
              "start": 20404,
              "end": 20412,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20405,
                "end": 20412,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 20415,
              "end": 20427,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20416,
                "end": 20427,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 20429,
            "end": 20433,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 20435,
            "end": 20484,
            "value": "The result of (-0x1234n / -0xFEDCBA97n) is 0x0n",
            "raw": "'The result of (-0x1234n / -0xFEDCBA97n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 20487,
      "end": 20586,
      "expression": {
        "type": "CallExpression",
        "start": 20487,
        "end": 20585,
        "callee": {
          "type": "MemberExpression",
          "start": 20487,
          "end": 20503,
          "object": {
            "type": "Identifier",
            "start": 20487,
            "end": 20493,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 20494,
            "end": 20503,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 20504,
            "end": 20527,
            "left": {
              "type": "UnaryExpression",
              "start": 20504,
              "end": 20512,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20505,
                "end": 20512,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 20515,
              "end": 20527,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20516,
                "end": 20527,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 20529,
            "end": 20533,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 20535,
            "end": 20584,
            "value": "The result of (-0x1234n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0x1234n / -0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 20588,
      "end": 20711,
      "expression": {
        "type": "CallExpression",
        "start": 20588,
        "end": 20710,
        "callee": {
          "type": "MemberExpression",
          "start": 20588,
          "end": 20604,
          "object": {
            "type": "Identifier",
            "start": 20588,
            "end": 20594,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 20595,
            "end": 20604,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 20608,
            "end": 20639,
            "left": {
              "type": "UnaryExpression",
              "start": 20608,
              "end": 20616,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20609,
                "end": 20616,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 20619,
              "end": 20639,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20620,
                "end": 20639,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 20643,
            "end": 20647,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 20651,
            "end": 20708,
            "value": "The result of (-0x1234n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0x1234n / -0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 20713,
      "end": 20836,
      "expression": {
        "type": "CallExpression",
        "start": 20713,
        "end": 20835,
        "callee": {
          "type": "MemberExpression",
          "start": 20713,
          "end": 20729,
          "object": {
            "type": "Identifier",
            "start": 20713,
            "end": 20719,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 20720,
            "end": 20729,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 20733,
            "end": 20764,
            "left": {
              "type": "UnaryExpression",
              "start": 20733,
              "end": 20741,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20734,
                "end": 20741,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 20744,
              "end": 20764,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20745,
                "end": 20764,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 20768,
            "end": 20772,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 20776,
            "end": 20833,
            "value": "The result of (-0x1234n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0x1234n / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 20838,
      "end": 20967,
      "expression": {
        "type": "CallExpression",
        "start": 20838,
        "end": 20966,
        "callee": {
          "type": "MemberExpression",
          "start": 20838,
          "end": 20854,
          "object": {
            "type": "Identifier",
            "start": 20838,
            "end": 20844,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 20845,
            "end": 20854,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 20858,
            "end": 20892,
            "left": {
              "type": "UnaryExpression",
              "start": 20858,
              "end": 20870,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20859,
                "end": 20870,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 20873,
              "end": 20892,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 20896,
            "end": 20900,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 20904,
            "end": 20964,
            "value": "The result of (-0xFEDCBA97n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA97n / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 20969,
      "end": 21098,
      "expression": {
        "type": "CallExpression",
        "start": 20969,
        "end": 21097,
        "callee": {
          "type": "MemberExpression",
          "start": 20969,
          "end": 20985,
          "object": {
            "type": "Identifier",
            "start": 20969,
            "end": 20975,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 20976,
            "end": 20985,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 20989,
            "end": 21023,
            "left": {
              "type": "UnaryExpression",
              "start": 20989,
              "end": 21001,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 20990,
                "end": 21001,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 21004,
              "end": 21023,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 21027,
            "end": 21031,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 21035,
            "end": 21095,
            "value": "The result of (-0xFEDCBA97n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0xFEDCBA97n / 0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 21100,
      "end": 21213,
      "expression": {
        "type": "CallExpression",
        "start": 21100,
        "end": 21212,
        "callee": {
          "type": "MemberExpression",
          "start": 21100,
          "end": 21116,
          "object": {
            "type": "Identifier",
            "start": 21100,
            "end": 21106,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 21107,
            "end": 21116,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 21120,
            "end": 21146,
            "left": {
              "type": "UnaryExpression",
              "start": 21120,
              "end": 21132,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 21121,
                "end": 21132,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 21135,
              "end": 21146,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "Literal",
            "start": 21150,
            "end": 21154,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 21158,
            "end": 21210,
            "value": "The result of (-0xFEDCBA97n / 0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA97n / 0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 21215,
      "end": 21330,
      "expression": {
        "type": "CallExpression",
        "start": 21215,
        "end": 21329,
        "callee": {
          "type": "MemberExpression",
          "start": 21215,
          "end": 21231,
          "object": {
            "type": "Identifier",
            "start": 21215,
            "end": 21221,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 21222,
            "end": 21231,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 21235,
            "end": 21261,
            "left": {
              "type": "UnaryExpression",
              "start": 21235,
              "end": 21247,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 21236,
                "end": 21247,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 21250,
              "end": 21261,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 21265,
            "end": 21270,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 21266,
              "end": 21270,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 21274,
            "end": 21327,
            "value": "The result of (-0xFEDCBA97n / 0xFEDCBA97n) is -0x1n",
            "raw": "'The result of (-0xFEDCBA97n / 0xFEDCBA97n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 21332,
      "end": 21447,
      "expression": {
        "type": "CallExpression",
        "start": 21332,
        "end": 21446,
        "callee": {
          "type": "MemberExpression",
          "start": 21332,
          "end": 21348,
          "object": {
            "type": "Identifier",
            "start": 21332,
            "end": 21338,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 21339,
            "end": 21348,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 21352,
            "end": 21374,
            "left": {
              "type": "UnaryExpression",
              "start": 21352,
              "end": 21364,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 21353,
                "end": 21364,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 21367,
              "end": 21374,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 21378,
            "end": 21387,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 21379,
              "end": 21387,
              "value": null,
              "raw": "0xE0042n",
              "bigint": "0xE0042"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 21391,
            "end": 21444,
            "value": "The result of (-0xFEDCBA97n / 0x1234n) is -0xE0042n",
            "raw": "'The result of (-0xFEDCBA97n / 0x1234n) is -0xE0042n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 21449,
      "end": 21564,
      "expression": {
        "type": "CallExpression",
        "start": 21449,
        "end": 21563,
        "callee": {
          "type": "MemberExpression",
          "start": 21449,
          "end": 21465,
          "object": {
            "type": "Identifier",
            "start": 21449,
            "end": 21455,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 21456,
            "end": 21465,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 21469,
            "end": 21488,
            "left": {
              "type": "UnaryExpression",
              "start": 21469,
              "end": 21481,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 21470,
                "end": 21481,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 21484,
              "end": 21488,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 21492,
            "end": 21504,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 21493,
              "end": 21504,
              "value": null,
              "raw": "0x54F43E32n",
              "bigint": "0x54F43E32"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 21508,
            "end": 21561,
            "value": "The result of (-0xFEDCBA97n / 0x3n) is -0x54F43E32n",
            "raw": "'The result of (-0xFEDCBA97n / 0x3n) is -0x54F43E32n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 21566,
      "end": 21681,
      "expression": {
        "type": "CallExpression",
        "start": 21566,
        "end": 21680,
        "callee": {
          "type": "MemberExpression",
          "start": 21566,
          "end": 21582,
          "object": {
            "type": "Identifier",
            "start": 21566,
            "end": 21572,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 21573,
            "end": 21582,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 21586,
            "end": 21605,
            "left": {
              "type": "UnaryExpression",
              "start": 21586,
              "end": 21598,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 21587,
                "end": 21598,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 21601,
              "end": 21605,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 21609,
            "end": 21621,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 21610,
              "end": 21621,
              "value": null,
              "raw": "0x7F6E5D4Bn",
              "bigint": "0x7F6E5D4B"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 21625,
            "end": 21678,
            "value": "The result of (-0xFEDCBA97n / 0x2n) is -0x7F6E5D4Bn",
            "raw": "'The result of (-0xFEDCBA97n / 0x2n) is -0x7F6E5D4Bn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 21683,
      "end": 21798,
      "expression": {
        "type": "CallExpression",
        "start": 21683,
        "end": 21797,
        "callee": {
          "type": "MemberExpression",
          "start": 21683,
          "end": 21699,
          "object": {
            "type": "Identifier",
            "start": 21683,
            "end": 21689,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 21690,
            "end": 21699,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 21703,
            "end": 21722,
            "left": {
              "type": "UnaryExpression",
              "start": 21703,
              "end": 21715,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 21704,
                "end": 21715,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 21718,
              "end": 21722,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 21726,
            "end": 21738,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 21727,
              "end": 21738,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 21742,
            "end": 21795,
            "value": "The result of (-0xFEDCBA97n / 0x1n) is -0xFEDCBA97n",
            "raw": "'The result of (-0xFEDCBA97n / 0x1n) is -0xFEDCBA97n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 21800,
      "end": 21915,
      "expression": {
        "type": "CallExpression",
        "start": 21800,
        "end": 21914,
        "callee": {
          "type": "MemberExpression",
          "start": 21800,
          "end": 21816,
          "object": {
            "type": "Identifier",
            "start": 21800,
            "end": 21806,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 21807,
            "end": 21816,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 21820,
            "end": 21840,
            "left": {
              "type": "UnaryExpression",
              "start": 21820,
              "end": 21832,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 21821,
                "end": 21832,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 21835,
              "end": 21840,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 21836,
                "end": 21840,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 21844,
            "end": 21855,
            "value": null,
            "raw": "0xFEDCBA97n",
            "bigint": "0xFEDCBA97"
          },
          {
            "type": "Literal",
            "start": 21859,
            "end": 21912,
            "value": "The result of (-0xFEDCBA97n / -0x1n) is 0xFEDCBA97n",
            "raw": "'The result of (-0xFEDCBA97n / -0x1n) is 0xFEDCBA97n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 21917,
      "end": 22032,
      "expression": {
        "type": "CallExpression",
        "start": 21917,
        "end": 22031,
        "callee": {
          "type": "MemberExpression",
          "start": 21917,
          "end": 21933,
          "object": {
            "type": "Identifier",
            "start": 21917,
            "end": 21923,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 21924,
            "end": 21933,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 21937,
            "end": 21957,
            "left": {
              "type": "UnaryExpression",
              "start": 21937,
              "end": 21949,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 21938,
                "end": 21949,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 21952,
              "end": 21957,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 21953,
                "end": 21957,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 21961,
            "end": 21972,
            "value": null,
            "raw": "0x7F6E5D4Bn",
            "bigint": "0x7F6E5D4B"
          },
          {
            "type": "Literal",
            "start": 21976,
            "end": 22029,
            "value": "The result of (-0xFEDCBA97n / -0x2n) is 0x7F6E5D4Bn",
            "raw": "'The result of (-0xFEDCBA97n / -0x2n) is 0x7F6E5D4Bn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 22034,
      "end": 22149,
      "expression": {
        "type": "CallExpression",
        "start": 22034,
        "end": 22148,
        "callee": {
          "type": "MemberExpression",
          "start": 22034,
          "end": 22050,
          "object": {
            "type": "Identifier",
            "start": 22034,
            "end": 22040,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 22041,
            "end": 22050,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 22054,
            "end": 22074,
            "left": {
              "type": "UnaryExpression",
              "start": 22054,
              "end": 22066,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22055,
                "end": 22066,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 22069,
              "end": 22074,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22070,
                "end": 22074,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 22078,
            "end": 22089,
            "value": null,
            "raw": "0x54F43E32n",
            "bigint": "0x54F43E32"
          },
          {
            "type": "Literal",
            "start": 22093,
            "end": 22146,
            "value": "The result of (-0xFEDCBA97n / -0x3n) is 0x54F43E32n",
            "raw": "'The result of (-0xFEDCBA97n / -0x3n) is 0x54F43E32n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 22151,
      "end": 22266,
      "expression": {
        "type": "CallExpression",
        "start": 22151,
        "end": 22265,
        "callee": {
          "type": "MemberExpression",
          "start": 22151,
          "end": 22167,
          "object": {
            "type": "Identifier",
            "start": 22151,
            "end": 22157,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 22158,
            "end": 22167,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 22171,
            "end": 22194,
            "left": {
              "type": "UnaryExpression",
              "start": 22171,
              "end": 22183,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22172,
                "end": 22183,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 22186,
              "end": 22194,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22187,
                "end": 22194,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 22198,
            "end": 22206,
            "value": null,
            "raw": "0xE0042n",
            "bigint": "0xE0042"
          },
          {
            "type": "Literal",
            "start": 22210,
            "end": 22263,
            "value": "The result of (-0xFEDCBA97n / -0x1234n) is 0xE0042n",
            "raw": "'The result of (-0xFEDCBA97n / -0x1234n) is 0xE0042n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 22268,
      "end": 22383,
      "expression": {
        "type": "CallExpression",
        "start": 22268,
        "end": 22382,
        "callee": {
          "type": "MemberExpression",
          "start": 22268,
          "end": 22284,
          "object": {
            "type": "Identifier",
            "start": 22268,
            "end": 22274,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 22275,
            "end": 22284,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 22288,
            "end": 22315,
            "left": {
              "type": "UnaryExpression",
              "start": 22288,
              "end": 22300,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22289,
                "end": 22300,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 22303,
              "end": 22315,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22304,
                "end": 22315,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 22319,
            "end": 22323,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 22327,
            "end": 22380,
            "value": "The result of (-0xFEDCBA97n / -0xFEDCBA97n) is 0x1n",
            "raw": "'The result of (-0xFEDCBA97n / -0xFEDCBA97n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 22385,
      "end": 22500,
      "expression": {
        "type": "CallExpression",
        "start": 22385,
        "end": 22499,
        "callee": {
          "type": "MemberExpression",
          "start": 22385,
          "end": 22401,
          "object": {
            "type": "Identifier",
            "start": 22385,
            "end": 22391,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 22392,
            "end": 22401,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 22405,
            "end": 22432,
            "left": {
              "type": "UnaryExpression",
              "start": 22405,
              "end": 22417,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22406,
                "end": 22417,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 22420,
              "end": 22432,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22421,
                "end": 22432,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 22436,
            "end": 22440,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 22444,
            "end": 22497,
            "value": "The result of (-0xFEDCBA97n / -0xFEDCBA98n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA97n / -0xFEDCBA98n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 22502,
      "end": 22633,
      "expression": {
        "type": "CallExpression",
        "start": 22502,
        "end": 22632,
        "callee": {
          "type": "MemberExpression",
          "start": 22502,
          "end": 22518,
          "object": {
            "type": "Identifier",
            "start": 22502,
            "end": 22508,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 22509,
            "end": 22518,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 22522,
            "end": 22557,
            "left": {
              "type": "UnaryExpression",
              "start": 22522,
              "end": 22534,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22523,
                "end": 22534,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 22537,
              "end": 22557,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22538,
                "end": 22557,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 22561,
            "end": 22565,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 22569,
            "end": 22630,
            "value": "The result of (-0xFEDCBA97n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0xFEDCBA97n / -0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 22635,
      "end": 22766,
      "expression": {
        "type": "CallExpression",
        "start": 22635,
        "end": 22765,
        "callee": {
          "type": "MemberExpression",
          "start": 22635,
          "end": 22651,
          "object": {
            "type": "Identifier",
            "start": 22635,
            "end": 22641,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 22642,
            "end": 22651,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 22655,
            "end": 22690,
            "left": {
              "type": "UnaryExpression",
              "start": 22655,
              "end": 22667,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22656,
                "end": 22667,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 22670,
              "end": 22690,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22671,
                "end": 22690,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 22694,
            "end": 22698,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 22702,
            "end": 22763,
            "value": "The result of (-0xFEDCBA97n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA97n / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 22768,
      "end": 22897,
      "expression": {
        "type": "CallExpression",
        "start": 22768,
        "end": 22896,
        "callee": {
          "type": "MemberExpression",
          "start": 22768,
          "end": 22784,
          "object": {
            "type": "Identifier",
            "start": 22768,
            "end": 22774,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 22775,
            "end": 22784,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 22788,
            "end": 22822,
            "left": {
              "type": "UnaryExpression",
              "start": 22788,
              "end": 22800,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22789,
                "end": 22800,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 22803,
              "end": 22822,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 22826,
            "end": 22830,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 22834,
            "end": 22894,
            "value": "The result of (-0xFEDCBA98n / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA98n / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 22899,
      "end": 23028,
      "expression": {
        "type": "CallExpression",
        "start": 22899,
        "end": 23027,
        "callee": {
          "type": "MemberExpression",
          "start": 22899,
          "end": 22915,
          "object": {
            "type": "Identifier",
            "start": 22899,
            "end": 22905,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 22906,
            "end": 22915,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 22919,
            "end": 22953,
            "left": {
              "type": "UnaryExpression",
              "start": 22919,
              "end": 22931,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 22920,
                "end": 22931,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 22934,
              "end": 22953,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "Literal",
            "start": 22957,
            "end": 22961,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 22965,
            "end": 23025,
            "value": "The result of (-0xFEDCBA98n / 0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0xFEDCBA98n / 0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 23030,
      "end": 23145,
      "expression": {
        "type": "CallExpression",
        "start": 23030,
        "end": 23144,
        "callee": {
          "type": "MemberExpression",
          "start": 23030,
          "end": 23046,
          "object": {
            "type": "Identifier",
            "start": 23030,
            "end": 23036,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 23037,
            "end": 23046,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 23050,
            "end": 23076,
            "left": {
              "type": "UnaryExpression",
              "start": 23050,
              "end": 23062,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 23051,
                "end": 23062,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 23065,
              "end": 23076,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 23080,
            "end": 23085,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 23081,
              "end": 23085,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 23089,
            "end": 23142,
            "value": "The result of (-0xFEDCBA98n / 0xFEDCBA98n) is -0x1n",
            "raw": "'The result of (-0xFEDCBA98n / 0xFEDCBA98n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 23147,
      "end": 23262,
      "expression": {
        "type": "CallExpression",
        "start": 23147,
        "end": 23261,
        "callee": {
          "type": "MemberExpression",
          "start": 23147,
          "end": 23163,
          "object": {
            "type": "Identifier",
            "start": 23147,
            "end": 23153,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 23154,
            "end": 23163,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 23167,
            "end": 23193,
            "left": {
              "type": "UnaryExpression",
              "start": 23167,
              "end": 23179,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 23168,
                "end": 23179,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 23182,
              "end": 23193,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 23197,
            "end": 23202,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 23198,
              "end": 23202,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 23206,
            "end": 23259,
            "value": "The result of (-0xFEDCBA98n / 0xFEDCBA97n) is -0x1n",
            "raw": "'The result of (-0xFEDCBA98n / 0xFEDCBA97n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 23264,
      "end": 23379,
      "expression": {
        "type": "CallExpression",
        "start": 23264,
        "end": 23378,
        "callee": {
          "type": "MemberExpression",
          "start": 23264,
          "end": 23280,
          "object": {
            "type": "Identifier",
            "start": 23264,
            "end": 23270,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 23271,
            "end": 23280,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 23284,
            "end": 23306,
            "left": {
              "type": "UnaryExpression",
              "start": 23284,
              "end": 23296,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 23285,
                "end": 23296,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 23299,
              "end": 23306,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 23310,
            "end": 23319,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 23311,
              "end": 23319,
              "value": null,
              "raw": "0xE0042n",
              "bigint": "0xE0042"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 23323,
            "end": 23376,
            "value": "The result of (-0xFEDCBA98n / 0x1234n) is -0xE0042n",
            "raw": "'The result of (-0xFEDCBA98n / 0x1234n) is -0xE0042n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 23381,
      "end": 23496,
      "expression": {
        "type": "CallExpression",
        "start": 23381,
        "end": 23495,
        "callee": {
          "type": "MemberExpression",
          "start": 23381,
          "end": 23397,
          "object": {
            "type": "Identifier",
            "start": 23381,
            "end": 23387,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 23388,
            "end": 23397,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 23401,
            "end": 23420,
            "left": {
              "type": "UnaryExpression",
              "start": 23401,
              "end": 23413,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 23402,
                "end": 23413,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 23416,
              "end": 23420,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 23424,
            "end": 23436,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 23425,
              "end": 23436,
              "value": null,
              "raw": "0x54F43E32n",
              "bigint": "0x54F43E32"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 23440,
            "end": 23493,
            "value": "The result of (-0xFEDCBA98n / 0x3n) is -0x54F43E32n",
            "raw": "'The result of (-0xFEDCBA98n / 0x3n) is -0x54F43E32n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 23498,
      "end": 23613,
      "expression": {
        "type": "CallExpression",
        "start": 23498,
        "end": 23612,
        "callee": {
          "type": "MemberExpression",
          "start": 23498,
          "end": 23514,
          "object": {
            "type": "Identifier",
            "start": 23498,
            "end": 23504,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 23505,
            "end": 23514,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 23518,
            "end": 23537,
            "left": {
              "type": "UnaryExpression",
              "start": 23518,
              "end": 23530,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 23519,
                "end": 23530,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 23533,
              "end": 23537,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 23541,
            "end": 23553,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 23542,
              "end": 23553,
              "value": null,
              "raw": "0x7F6E5D4Cn",
              "bigint": "0x7F6E5D4C"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 23557,
            "end": 23610,
            "value": "The result of (-0xFEDCBA98n / 0x2n) is -0x7F6E5D4Cn",
            "raw": "'The result of (-0xFEDCBA98n / 0x2n) is -0x7F6E5D4Cn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 23615,
      "end": 23730,
      "expression": {
        "type": "CallExpression",
        "start": 23615,
        "end": 23729,
        "callee": {
          "type": "MemberExpression",
          "start": 23615,
          "end": 23631,
          "object": {
            "type": "Identifier",
            "start": 23615,
            "end": 23621,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 23622,
            "end": 23631,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 23635,
            "end": 23654,
            "left": {
              "type": "UnaryExpression",
              "start": 23635,
              "end": 23647,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 23636,
                "end": 23647,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 23650,
              "end": 23654,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 23658,
            "end": 23670,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 23659,
              "end": 23670,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 23674,
            "end": 23727,
            "value": "The result of (-0xFEDCBA98n / 0x1n) is -0xFEDCBA98n",
            "raw": "'The result of (-0xFEDCBA98n / 0x1n) is -0xFEDCBA98n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 23732,
      "end": 23847,
      "expression": {
        "type": "CallExpression",
        "start": 23732,
        "end": 23846,
        "callee": {
          "type": "MemberExpression",
          "start": 23732,
          "end": 23748,
          "object": {
            "type": "Identifier",
            "start": 23732,
            "end": 23738,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 23739,
            "end": 23748,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 23752,
            "end": 23772,
            "left": {
              "type": "UnaryExpression",
              "start": 23752,
              "end": 23764,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 23753,
                "end": 23764,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 23767,
              "end": 23772,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 23768,
                "end": 23772,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 23776,
            "end": 23787,
            "value": null,
            "raw": "0xFEDCBA98n",
            "bigint": "0xFEDCBA98"
          },
          {
            "type": "Literal",
            "start": 23791,
            "end": 23844,
            "value": "The result of (-0xFEDCBA98n / -0x1n) is 0xFEDCBA98n",
            "raw": "'The result of (-0xFEDCBA98n / -0x1n) is 0xFEDCBA98n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 23849,
      "end": 23964,
      "expression": {
        "type": "CallExpression",
        "start": 23849,
        "end": 23963,
        "callee": {
          "type": "MemberExpression",
          "start": 23849,
          "end": 23865,
          "object": {
            "type": "Identifier",
            "start": 23849,
            "end": 23855,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 23856,
            "end": 23865,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 23869,
            "end": 23889,
            "left": {
              "type": "UnaryExpression",
              "start": 23869,
              "end": 23881,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 23870,
                "end": 23881,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 23884,
              "end": 23889,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 23885,
                "end": 23889,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 23893,
            "end": 23904,
            "value": null,
            "raw": "0x7F6E5D4Cn",
            "bigint": "0x7F6E5D4C"
          },
          {
            "type": "Literal",
            "start": 23908,
            "end": 23961,
            "value": "The result of (-0xFEDCBA98n / -0x2n) is 0x7F6E5D4Cn",
            "raw": "'The result of (-0xFEDCBA98n / -0x2n) is 0x7F6E5D4Cn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 23966,
      "end": 24081,
      "expression": {
        "type": "CallExpression",
        "start": 23966,
        "end": 24080,
        "callee": {
          "type": "MemberExpression",
          "start": 23966,
          "end": 23982,
          "object": {
            "type": "Identifier",
            "start": 23966,
            "end": 23972,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 23973,
            "end": 23982,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 23986,
            "end": 24006,
            "left": {
              "type": "UnaryExpression",
              "start": 23986,
              "end": 23998,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 23987,
                "end": 23998,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 24001,
              "end": 24006,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24002,
                "end": 24006,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 24010,
            "end": 24021,
            "value": null,
            "raw": "0x54F43E32n",
            "bigint": "0x54F43E32"
          },
          {
            "type": "Literal",
            "start": 24025,
            "end": 24078,
            "value": "The result of (-0xFEDCBA98n / -0x3n) is 0x54F43E32n",
            "raw": "'The result of (-0xFEDCBA98n / -0x3n) is 0x54F43E32n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 24083,
      "end": 24198,
      "expression": {
        "type": "CallExpression",
        "start": 24083,
        "end": 24197,
        "callee": {
          "type": "MemberExpression",
          "start": 24083,
          "end": 24099,
          "object": {
            "type": "Identifier",
            "start": 24083,
            "end": 24089,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 24090,
            "end": 24099,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 24103,
            "end": 24126,
            "left": {
              "type": "UnaryExpression",
              "start": 24103,
              "end": 24115,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24104,
                "end": 24115,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 24118,
              "end": 24126,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24119,
                "end": 24126,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 24130,
            "end": 24138,
            "value": null,
            "raw": "0xE0042n",
            "bigint": "0xE0042"
          },
          {
            "type": "Literal",
            "start": 24142,
            "end": 24195,
            "value": "The result of (-0xFEDCBA98n / -0x1234n) is 0xE0042n",
            "raw": "'The result of (-0xFEDCBA98n / -0x1234n) is 0xE0042n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 24200,
      "end": 24315,
      "expression": {
        "type": "CallExpression",
        "start": 24200,
        "end": 24314,
        "callee": {
          "type": "MemberExpression",
          "start": 24200,
          "end": 24216,
          "object": {
            "type": "Identifier",
            "start": 24200,
            "end": 24206,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 24207,
            "end": 24216,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 24220,
            "end": 24247,
            "left": {
              "type": "UnaryExpression",
              "start": 24220,
              "end": 24232,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24221,
                "end": 24232,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 24235,
              "end": 24247,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24236,
                "end": 24247,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 24251,
            "end": 24255,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 24259,
            "end": 24312,
            "value": "The result of (-0xFEDCBA98n / -0xFEDCBA97n) is 0x1n",
            "raw": "'The result of (-0xFEDCBA98n / -0xFEDCBA97n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 24317,
      "end": 24432,
      "expression": {
        "type": "CallExpression",
        "start": 24317,
        "end": 24431,
        "callee": {
          "type": "MemberExpression",
          "start": 24317,
          "end": 24333,
          "object": {
            "type": "Identifier",
            "start": 24317,
            "end": 24323,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 24324,
            "end": 24333,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 24337,
            "end": 24364,
            "left": {
              "type": "UnaryExpression",
              "start": 24337,
              "end": 24349,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24338,
                "end": 24349,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 24352,
              "end": 24364,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24353,
                "end": 24364,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 24368,
            "end": 24372,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 24376,
            "end": 24429,
            "value": "The result of (-0xFEDCBA98n / -0xFEDCBA98n) is 0x1n",
            "raw": "'The result of (-0xFEDCBA98n / -0xFEDCBA98n) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 24434,
      "end": 24565,
      "expression": {
        "type": "CallExpression",
        "start": 24434,
        "end": 24564,
        "callee": {
          "type": "MemberExpression",
          "start": 24434,
          "end": 24450,
          "object": {
            "type": "Identifier",
            "start": 24434,
            "end": 24440,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 24441,
            "end": 24450,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 24454,
            "end": 24489,
            "left": {
              "type": "UnaryExpression",
              "start": 24454,
              "end": 24466,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24455,
                "end": 24466,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 24469,
              "end": 24489,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24470,
                "end": 24489,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 24493,
            "end": 24497,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 24501,
            "end": 24562,
            "value": "The result of (-0xFEDCBA98n / -0xFEDCBA987654320Fn) is 0x0n",
            "raw": "'The result of (-0xFEDCBA98n / -0xFEDCBA987654320Fn) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 24567,
      "end": 24698,
      "expression": {
        "type": "CallExpression",
        "start": 24567,
        "end": 24697,
        "callee": {
          "type": "MemberExpression",
          "start": 24567,
          "end": 24583,
          "object": {
            "type": "Identifier",
            "start": 24567,
            "end": 24573,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 24574,
            "end": 24583,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 24587,
            "end": 24622,
            "left": {
              "type": "UnaryExpression",
              "start": 24587,
              "end": 24599,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24588,
                "end": 24599,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 24602,
              "end": 24622,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24603,
                "end": 24622,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 24626,
            "end": 24630,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 24634,
            "end": 24695,
            "value": "The result of (-0xFEDCBA98n / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA98n / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 24700,
      "end": 24845,
      "expression": {
        "type": "CallExpression",
        "start": 24700,
        "end": 24844,
        "callee": {
          "type": "MemberExpression",
          "start": 24700,
          "end": 24716,
          "object": {
            "type": "Identifier",
            "start": 24700,
            "end": 24706,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 24707,
            "end": 24716,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 24720,
            "end": 24762,
            "left": {
              "type": "UnaryExpression",
              "start": 24720,
              "end": 24740,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24721,
                "end": 24740,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 24743,
              "end": 24762,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "Literal",
            "start": 24766,
            "end": 24770,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 24774,
            "end": 24842,
            "value": "The result of (-0xFEDCBA987654320Fn / 0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 24847,
      "end": 24994,
      "expression": {
        "type": "CallExpression",
        "start": 24847,
        "end": 24993,
        "callee": {
          "type": "MemberExpression",
          "start": 24847,
          "end": 24863,
          "object": {
            "type": "Identifier",
            "start": 24847,
            "end": 24853,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 24854,
            "end": 24863,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 24867,
            "end": 24909,
            "left": {
              "type": "UnaryExpression",
              "start": 24867,
              "end": 24887,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 24868,
                "end": 24887,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 24890,
              "end": 24909,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 24913,
            "end": 24918,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 24914,
              "end": 24918,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 24922,
            "end": 24991,
            "value": "The result of (-0xFEDCBA987654320Fn / 0xFEDCBA987654320Fn) is -0x1n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0xFEDCBA987654320Fn) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 24996,
      "end": 25143,
      "expression": {
        "type": "CallExpression",
        "start": 24996,
        "end": 25142,
        "callee": {
          "type": "MemberExpression",
          "start": 24996,
          "end": 25012,
          "object": {
            "type": "Identifier",
            "start": 24996,
            "end": 25002,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 25003,
            "end": 25012,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 25016,
            "end": 25050,
            "left": {
              "type": "UnaryExpression",
              "start": 25016,
              "end": 25036,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 25017,
                "end": 25036,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 25039,
              "end": 25050,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 25054,
            "end": 25067,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 25055,
              "end": 25067,
              "value": null,
              "raw": "0x100000000n",
              "bigint": "0x100000000"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 25071,
            "end": 25140,
            "value": "The result of (-0xFEDCBA987654320Fn / 0xFEDCBA98n) is -0x100000000n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0xFEDCBA98n) is -0x100000000n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 25145,
      "end": 25292,
      "expression": {
        "type": "CallExpression",
        "start": 25145,
        "end": 25291,
        "callee": {
          "type": "MemberExpression",
          "start": 25145,
          "end": 25161,
          "object": {
            "type": "Identifier",
            "start": 25145,
            "end": 25151,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 25152,
            "end": 25161,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 25165,
            "end": 25199,
            "left": {
              "type": "UnaryExpression",
              "start": 25165,
              "end": 25185,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 25166,
                "end": 25185,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 25188,
              "end": 25199,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 25203,
            "end": 25216,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 25204,
              "end": 25216,
              "value": null,
              "raw": "0x100000001n",
              "bigint": "0x100000001"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 25220,
            "end": 25289,
            "value": "The result of (-0xFEDCBA987654320Fn / 0xFEDCBA97n) is -0x100000001n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0xFEDCBA97n) is -0x100000001n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 25294,
      "end": 25441,
      "expression": {
        "type": "CallExpression",
        "start": 25294,
        "end": 25440,
        "callee": {
          "type": "MemberExpression",
          "start": 25294,
          "end": 25310,
          "object": {
            "type": "Identifier",
            "start": 25294,
            "end": 25300,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 25301,
            "end": 25310,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 25314,
            "end": 25344,
            "left": {
              "type": "UnaryExpression",
              "start": 25314,
              "end": 25334,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 25315,
                "end": 25334,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 25337,
              "end": 25344,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 25348,
            "end": 25365,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 25349,
              "end": 25365,
              "value": null,
              "raw": "0xE0042813BE5DCn",
              "bigint": "0xE0042813BE5DC"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 25369,
            "end": 25438,
            "value": "The result of (-0xFEDCBA987654320Fn / 0x1234n) is -0xE0042813BE5DCn",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0x1234n) is -0xE0042813BE5DCn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 25443,
      "end": 25590,
      "expression": {
        "type": "CallExpression",
        "start": 25443,
        "end": 25589,
        "callee": {
          "type": "MemberExpression",
          "start": 25443,
          "end": 25459,
          "object": {
            "type": "Identifier",
            "start": 25443,
            "end": 25449,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 25450,
            "end": 25459,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 25463,
            "end": 25490,
            "left": {
              "type": "UnaryExpression",
              "start": 25463,
              "end": 25483,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 25464,
                "end": 25483,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 25486,
              "end": 25490,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 25494,
            "end": 25514,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 25495,
              "end": 25514,
              "value": null,
              "raw": "0x54F43E32D21C10AFn",
              "bigint": "0x54F43E32D21C10AF"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 25518,
            "end": 25587,
            "value": "The result of (-0xFEDCBA987654320Fn / 0x3n) is -0x54F43E32D21C10AFn",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0x3n) is -0x54F43E32D21C10AFn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 25592,
      "end": 25739,
      "expression": {
        "type": "CallExpression",
        "start": 25592,
        "end": 25738,
        "callee": {
          "type": "MemberExpression",
          "start": 25592,
          "end": 25608,
          "object": {
            "type": "Identifier",
            "start": 25592,
            "end": 25598,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 25599,
            "end": 25608,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 25612,
            "end": 25639,
            "left": {
              "type": "UnaryExpression",
              "start": 25612,
              "end": 25632,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 25613,
                "end": 25632,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 25635,
              "end": 25639,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 25643,
            "end": 25663,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 25644,
              "end": 25663,
              "value": null,
              "raw": "0x7F6E5D4C3B2A1907n",
              "bigint": "0x7F6E5D4C3B2A1907"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 25667,
            "end": 25736,
            "value": "The result of (-0xFEDCBA987654320Fn / 0x2n) is -0x7F6E5D4C3B2A1907n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0x2n) is -0x7F6E5D4C3B2A1907n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 25741,
      "end": 25888,
      "expression": {
        "type": "CallExpression",
        "start": 25741,
        "end": 25887,
        "callee": {
          "type": "MemberExpression",
          "start": 25741,
          "end": 25757,
          "object": {
            "type": "Identifier",
            "start": 25741,
            "end": 25747,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 25748,
            "end": 25757,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 25761,
            "end": 25788,
            "left": {
              "type": "UnaryExpression",
              "start": 25761,
              "end": 25781,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 25762,
                "end": 25781,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 25784,
              "end": 25788,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 25792,
            "end": 25812,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 25793,
              "end": 25812,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 25816,
            "end": 25885,
            "value": "The result of (-0xFEDCBA987654320Fn / 0x1n) is -0xFEDCBA987654320Fn",
            "raw": "'The result of (-0xFEDCBA987654320Fn / 0x1n) is -0xFEDCBA987654320Fn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 25890,
      "end": 26037,
      "expression": {
        "type": "CallExpression",
        "start": 25890,
        "end": 26036,
        "callee": {
          "type": "MemberExpression",
          "start": 25890,
          "end": 25906,
          "object": {
            "type": "Identifier",
            "start": 25890,
            "end": 25896,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 25897,
            "end": 25906,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 25910,
            "end": 25938,
            "left": {
              "type": "UnaryExpression",
              "start": 25910,
              "end": 25930,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 25911,
                "end": 25930,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 25933,
              "end": 25938,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 25934,
                "end": 25938,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 25942,
            "end": 25961,
            "value": null,
            "raw": "0xFEDCBA987654320Fn",
            "bigint": "0xFEDCBA987654320F"
          },
          {
            "type": "Literal",
            "start": 25965,
            "end": 26034,
            "value": "The result of (-0xFEDCBA987654320Fn / -0x1n) is 0xFEDCBA987654320Fn",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0x1n) is 0xFEDCBA987654320Fn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 26039,
      "end": 26186,
      "expression": {
        "type": "CallExpression",
        "start": 26039,
        "end": 26185,
        "callee": {
          "type": "MemberExpression",
          "start": 26039,
          "end": 26055,
          "object": {
            "type": "Identifier",
            "start": 26039,
            "end": 26045,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 26046,
            "end": 26055,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 26059,
            "end": 26087,
            "left": {
              "type": "UnaryExpression",
              "start": 26059,
              "end": 26079,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26060,
                "end": 26079,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 26082,
              "end": 26087,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26083,
                "end": 26087,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 26091,
            "end": 26110,
            "value": null,
            "raw": "0x7F6E5D4C3B2A1907n",
            "bigint": "0x7F6E5D4C3B2A1907"
          },
          {
            "type": "Literal",
            "start": 26114,
            "end": 26183,
            "value": "The result of (-0xFEDCBA987654320Fn / -0x2n) is 0x7F6E5D4C3B2A1907n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0x2n) is 0x7F6E5D4C3B2A1907n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 26188,
      "end": 26335,
      "expression": {
        "type": "CallExpression",
        "start": 26188,
        "end": 26334,
        "callee": {
          "type": "MemberExpression",
          "start": 26188,
          "end": 26204,
          "object": {
            "type": "Identifier",
            "start": 26188,
            "end": 26194,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 26195,
            "end": 26204,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 26208,
            "end": 26236,
            "left": {
              "type": "UnaryExpression",
              "start": 26208,
              "end": 26228,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26209,
                "end": 26228,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 26231,
              "end": 26236,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26232,
                "end": 26236,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 26240,
            "end": 26259,
            "value": null,
            "raw": "0x54F43E32D21C10AFn",
            "bigint": "0x54F43E32D21C10AF"
          },
          {
            "type": "Literal",
            "start": 26263,
            "end": 26332,
            "value": "The result of (-0xFEDCBA987654320Fn / -0x3n) is 0x54F43E32D21C10AFn",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0x3n) is 0x54F43E32D21C10AFn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 26337,
      "end": 26484,
      "expression": {
        "type": "CallExpression",
        "start": 26337,
        "end": 26483,
        "callee": {
          "type": "MemberExpression",
          "start": 26337,
          "end": 26353,
          "object": {
            "type": "Identifier",
            "start": 26337,
            "end": 26343,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 26344,
            "end": 26353,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 26357,
            "end": 26388,
            "left": {
              "type": "UnaryExpression",
              "start": 26357,
              "end": 26377,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26358,
                "end": 26377,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 26380,
              "end": 26388,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26381,
                "end": 26388,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 26392,
            "end": 26408,
            "value": null,
            "raw": "0xE0042813BE5DCn",
            "bigint": "0xE0042813BE5DC"
          },
          {
            "type": "Literal",
            "start": 26412,
            "end": 26481,
            "value": "The result of (-0xFEDCBA987654320Fn / -0x1234n) is 0xE0042813BE5DCn",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0x1234n) is 0xE0042813BE5DCn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 26486,
      "end": 26633,
      "expression": {
        "type": "CallExpression",
        "start": 26486,
        "end": 26632,
        "callee": {
          "type": "MemberExpression",
          "start": 26486,
          "end": 26502,
          "object": {
            "type": "Identifier",
            "start": 26486,
            "end": 26492,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 26493,
            "end": 26502,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 26506,
            "end": 26541,
            "left": {
              "type": "UnaryExpression",
              "start": 26506,
              "end": 26526,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26507,
                "end": 26526,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 26529,
              "end": 26541,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26530,
                "end": 26541,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 26545,
            "end": 26557,
            "value": null,
            "raw": "0x100000001n",
            "bigint": "0x100000001"
          },
          {
            "type": "Literal",
            "start": 26561,
            "end": 26630,
            "value": "The result of (-0xFEDCBA987654320Fn / -0xFEDCBA97n) is 0x100000001n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0xFEDCBA97n) is 0x100000001n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 26635,
      "end": 26782,
      "expression": {
        "type": "CallExpression",
        "start": 26635,
        "end": 26781,
        "callee": {
          "type": "MemberExpression",
          "start": 26635,
          "end": 26651,
          "object": {
            "type": "Identifier",
            "start": 26635,
            "end": 26641,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 26642,
            "end": 26651,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 26655,
            "end": 26690,
            "left": {
              "type": "UnaryExpression",
              "start": 26655,
              "end": 26675,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26656,
                "end": 26675,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 26678,
              "end": 26690,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26679,
                "end": 26690,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 26694,
            "end": 26706,
            "value": null,
            "raw": "0x100000000n",
            "bigint": "0x100000000"
          },
          {
            "type": "Literal",
            "start": 26710,
            "end": 26779,
            "value": "The result of (-0xFEDCBA987654320Fn / -0xFEDCBA98n) is 0x100000000n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0xFEDCBA98n) is 0x100000000n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 26784,
      "end": 26931,
      "expression": {
        "type": "CallExpression",
        "start": 26784,
        "end": 26930,
        "callee": {
          "type": "MemberExpression",
          "start": 26784,
          "end": 26800,
          "object": {
            "type": "Identifier",
            "start": 26784,
            "end": 26790,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 26791,
            "end": 26800,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 26804,
            "end": 26847,
            "left": {
              "type": "UnaryExpression",
              "start": 26804,
              "end": 26824,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26805,
                "end": 26824,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 26827,
              "end": 26847,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26828,
                "end": 26847,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 26851,
            "end": 26855,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 26859,
            "end": 26928,
            "value": "The result of (-0xFEDCBA987654320Fn / -0xFEDCBA987654320Fn) is 0x1n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0xFEDCBA987654320Fn) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 26933,
      "end": 27080,
      "expression": {
        "type": "CallExpression",
        "start": 26933,
        "end": 27079,
        "callee": {
          "type": "MemberExpression",
          "start": 26933,
          "end": 26949,
          "object": {
            "type": "Identifier",
            "start": 26933,
            "end": 26939,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 26940,
            "end": 26949,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 26953,
            "end": 26996,
            "left": {
              "type": "UnaryExpression",
              "start": 26953,
              "end": 26973,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26954,
                "end": 26973,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 26976,
              "end": 26996,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 26977,
                "end": 26996,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 27000,
            "end": 27004,
            "value": null,
            "raw": "0x0n",
            "bigint": "0x0"
          },
          {
            "type": "Literal",
            "start": 27008,
            "end": 27077,
            "value": "The result of (-0xFEDCBA987654320Fn / -0xFEDCBA9876543210n) is 0x0n",
            "raw": "'The result of (-0xFEDCBA987654320Fn / -0xFEDCBA9876543210n) is 0x0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 27082,
      "end": 27229,
      "expression": {
        "type": "CallExpression",
        "start": 27082,
        "end": 27228,
        "callee": {
          "type": "MemberExpression",
          "start": 27082,
          "end": 27098,
          "object": {
            "type": "Identifier",
            "start": 27082,
            "end": 27088,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 27089,
            "end": 27098,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 27102,
            "end": 27144,
            "left": {
              "type": "UnaryExpression",
              "start": 27102,
              "end": 27122,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 27103,
                "end": 27122,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 27125,
              "end": 27144,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 27148,
            "end": 27153,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 27149,
              "end": 27153,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 27157,
            "end": 27226,
            "value": "The result of (-0xFEDCBA9876543210n / 0xFEDCBA9876543210n) is -0x1n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0xFEDCBA9876543210n) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 27231,
      "end": 27378,
      "expression": {
        "type": "CallExpression",
        "start": 27231,
        "end": 27377,
        "callee": {
          "type": "MemberExpression",
          "start": 27231,
          "end": 27247,
          "object": {
            "type": "Identifier",
            "start": 27231,
            "end": 27237,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 27238,
            "end": 27247,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 27251,
            "end": 27293,
            "left": {
              "type": "UnaryExpression",
              "start": 27251,
              "end": 27271,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 27252,
                "end": 27271,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 27274,
              "end": 27293,
              "value": null,
              "raw": "0xFEDCBA987654320Fn",
              "bigint": "0xFEDCBA987654320F"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 27297,
            "end": 27302,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 27298,
              "end": 27302,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 27306,
            "end": 27375,
            "value": "The result of (-0xFEDCBA9876543210n / 0xFEDCBA987654320Fn) is -0x1n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0xFEDCBA987654320Fn) is -0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 27380,
      "end": 27527,
      "expression": {
        "type": "CallExpression",
        "start": 27380,
        "end": 27526,
        "callee": {
          "type": "MemberExpression",
          "start": 27380,
          "end": 27396,
          "object": {
            "type": "Identifier",
            "start": 27380,
            "end": 27386,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 27387,
            "end": 27396,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 27400,
            "end": 27434,
            "left": {
              "type": "UnaryExpression",
              "start": 27400,
              "end": 27420,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 27401,
                "end": 27420,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 27423,
              "end": 27434,
              "value": null,
              "raw": "0xFEDCBA98n",
              "bigint": "0xFEDCBA98"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 27438,
            "end": 27451,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 27439,
              "end": 27451,
              "value": null,
              "raw": "0x100000000n",
              "bigint": "0x100000000"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 27455,
            "end": 27524,
            "value": "The result of (-0xFEDCBA9876543210n / 0xFEDCBA98n) is -0x100000000n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0xFEDCBA98n) is -0x100000000n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 27529,
      "end": 27676,
      "expression": {
        "type": "CallExpression",
        "start": 27529,
        "end": 27675,
        "callee": {
          "type": "MemberExpression",
          "start": 27529,
          "end": 27545,
          "object": {
            "type": "Identifier",
            "start": 27529,
            "end": 27535,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 27536,
            "end": 27545,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 27549,
            "end": 27583,
            "left": {
              "type": "UnaryExpression",
              "start": 27549,
              "end": 27569,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 27550,
                "end": 27569,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 27572,
              "end": 27583,
              "value": null,
              "raw": "0xFEDCBA97n",
              "bigint": "0xFEDCBA97"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 27587,
            "end": 27600,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 27588,
              "end": 27600,
              "value": null,
              "raw": "0x100000001n",
              "bigint": "0x100000001"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 27604,
            "end": 27673,
            "value": "The result of (-0xFEDCBA9876543210n / 0xFEDCBA97n) is -0x100000001n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0xFEDCBA97n) is -0x100000001n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 27678,
      "end": 27825,
      "expression": {
        "type": "CallExpression",
        "start": 27678,
        "end": 27824,
        "callee": {
          "type": "MemberExpression",
          "start": 27678,
          "end": 27694,
          "object": {
            "type": "Identifier",
            "start": 27678,
            "end": 27684,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 27685,
            "end": 27694,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 27698,
            "end": 27728,
            "left": {
              "type": "UnaryExpression",
              "start": 27698,
              "end": 27718,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 27699,
                "end": 27718,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 27721,
              "end": 27728,
              "value": null,
              "raw": "0x1234n",
              "bigint": "0x1234"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 27732,
            "end": 27749,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 27733,
              "end": 27749,
              "value": null,
              "raw": "0xE0042813BE5DCn",
              "bigint": "0xE0042813BE5DC"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 27753,
            "end": 27822,
            "value": "The result of (-0xFEDCBA9876543210n / 0x1234n) is -0xE0042813BE5DCn",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0x1234n) is -0xE0042813BE5DCn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 27827,
      "end": 27974,
      "expression": {
        "type": "CallExpression",
        "start": 27827,
        "end": 27973,
        "callee": {
          "type": "MemberExpression",
          "start": 27827,
          "end": 27843,
          "object": {
            "type": "Identifier",
            "start": 27827,
            "end": 27833,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 27834,
            "end": 27843,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 27847,
            "end": 27874,
            "left": {
              "type": "UnaryExpression",
              "start": 27847,
              "end": 27867,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 27848,
                "end": 27867,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 27870,
              "end": 27874,
              "value": null,
              "raw": "0x3n",
              "bigint": "0x3"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 27878,
            "end": 27898,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 27879,
              "end": 27898,
              "value": null,
              "raw": "0x54F43E32D21C10B0n",
              "bigint": "0x54F43E32D21C10B0"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 27902,
            "end": 27971,
            "value": "The result of (-0xFEDCBA9876543210n / 0x3n) is -0x54F43E32D21C10B0n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0x3n) is -0x54F43E32D21C10B0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 27976,
      "end": 28123,
      "expression": {
        "type": "CallExpression",
        "start": 27976,
        "end": 28122,
        "callee": {
          "type": "MemberExpression",
          "start": 27976,
          "end": 27992,
          "object": {
            "type": "Identifier",
            "start": 27976,
            "end": 27982,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 27983,
            "end": 27992,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 27996,
            "end": 28023,
            "left": {
              "type": "UnaryExpression",
              "start": 27996,
              "end": 28016,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 27997,
                "end": 28016,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 28019,
              "end": 28023,
              "value": null,
              "raw": "0x2n",
              "bigint": "0x2"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 28027,
            "end": 28047,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 28028,
              "end": 28047,
              "value": null,
              "raw": "0x7F6E5D4C3B2A1908n",
              "bigint": "0x7F6E5D4C3B2A1908"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 28051,
            "end": 28120,
            "value": "The result of (-0xFEDCBA9876543210n / 0x2n) is -0x7F6E5D4C3B2A1908n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0x2n) is -0x7F6E5D4C3B2A1908n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 28125,
      "end": 28272,
      "expression": {
        "type": "CallExpression",
        "start": 28125,
        "end": 28271,
        "callee": {
          "type": "MemberExpression",
          "start": 28125,
          "end": 28141,
          "object": {
            "type": "Identifier",
            "start": 28125,
            "end": 28131,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 28132,
            "end": 28141,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 28145,
            "end": 28172,
            "left": {
              "type": "UnaryExpression",
              "start": 28145,
              "end": 28165,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 28146,
                "end": 28165,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 28168,
              "end": 28172,
              "value": null,
              "raw": "0x1n",
              "bigint": "0x1"
            }
          },
          {
            "type": "UnaryExpression",
            "start": 28176,
            "end": 28196,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 28177,
              "end": 28196,
              "value": null,
              "raw": "0xFEDCBA9876543210n",
              "bigint": "0xFEDCBA9876543210"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 28200,
            "end": 28269,
            "value": "The result of (-0xFEDCBA9876543210n / 0x1n) is -0xFEDCBA9876543210n",
            "raw": "'The result of (-0xFEDCBA9876543210n / 0x1n) is -0xFEDCBA9876543210n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 28274,
      "end": 28421,
      "expression": {
        "type": "CallExpression",
        "start": 28274,
        "end": 28420,
        "callee": {
          "type": "MemberExpression",
          "start": 28274,
          "end": 28290,
          "object": {
            "type": "Identifier",
            "start": 28274,
            "end": 28280,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 28281,
            "end": 28290,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 28294,
            "end": 28322,
            "left": {
              "type": "UnaryExpression",
              "start": 28294,
              "end": 28314,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 28295,
                "end": 28314,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 28317,
              "end": 28322,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 28318,
                "end": 28322,
                "value": null,
                "raw": "0x1n",
                "bigint": "0x1"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 28326,
            "end": 28345,
            "value": null,
            "raw": "0xFEDCBA9876543210n",
            "bigint": "0xFEDCBA9876543210"
          },
          {
            "type": "Literal",
            "start": 28349,
            "end": 28418,
            "value": "The result of (-0xFEDCBA9876543210n / -0x1n) is 0xFEDCBA9876543210n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0x1n) is 0xFEDCBA9876543210n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 28423,
      "end": 28570,
      "expression": {
        "type": "CallExpression",
        "start": 28423,
        "end": 28569,
        "callee": {
          "type": "MemberExpression",
          "start": 28423,
          "end": 28439,
          "object": {
            "type": "Identifier",
            "start": 28423,
            "end": 28429,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 28430,
            "end": 28439,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 28443,
            "end": 28471,
            "left": {
              "type": "UnaryExpression",
              "start": 28443,
              "end": 28463,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 28444,
                "end": 28463,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 28466,
              "end": 28471,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 28467,
                "end": 28471,
                "value": null,
                "raw": "0x2n",
                "bigint": "0x2"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 28475,
            "end": 28494,
            "value": null,
            "raw": "0x7F6E5D4C3B2A1908n",
            "bigint": "0x7F6E5D4C3B2A1908"
          },
          {
            "type": "Literal",
            "start": 28498,
            "end": 28567,
            "value": "The result of (-0xFEDCBA9876543210n / -0x2n) is 0x7F6E5D4C3B2A1908n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0x2n) is 0x7F6E5D4C3B2A1908n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 28572,
      "end": 28719,
      "expression": {
        "type": "CallExpression",
        "start": 28572,
        "end": 28718,
        "callee": {
          "type": "MemberExpression",
          "start": 28572,
          "end": 28588,
          "object": {
            "type": "Identifier",
            "start": 28572,
            "end": 28578,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 28579,
            "end": 28588,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 28592,
            "end": 28620,
            "left": {
              "type": "UnaryExpression",
              "start": 28592,
              "end": 28612,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 28593,
                "end": 28612,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 28615,
              "end": 28620,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 28616,
                "end": 28620,
                "value": null,
                "raw": "0x3n",
                "bigint": "0x3"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 28624,
            "end": 28643,
            "value": null,
            "raw": "0x54F43E32D21C10B0n",
            "bigint": "0x54F43E32D21C10B0"
          },
          {
            "type": "Literal",
            "start": 28647,
            "end": 28716,
            "value": "The result of (-0xFEDCBA9876543210n / -0x3n) is 0x54F43E32D21C10B0n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0x3n) is 0x54F43E32D21C10B0n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 28721,
      "end": 28868,
      "expression": {
        "type": "CallExpression",
        "start": 28721,
        "end": 28867,
        "callee": {
          "type": "MemberExpression",
          "start": 28721,
          "end": 28737,
          "object": {
            "type": "Identifier",
            "start": 28721,
            "end": 28727,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 28728,
            "end": 28737,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 28741,
            "end": 28772,
            "left": {
              "type": "UnaryExpression",
              "start": 28741,
              "end": 28761,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 28742,
                "end": 28761,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 28764,
              "end": 28772,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 28765,
                "end": 28772,
                "value": null,
                "raw": "0x1234n",
                "bigint": "0x1234"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 28776,
            "end": 28792,
            "value": null,
            "raw": "0xE0042813BE5DCn",
            "bigint": "0xE0042813BE5DC"
          },
          {
            "type": "Literal",
            "start": 28796,
            "end": 28865,
            "value": "The result of (-0xFEDCBA9876543210n / -0x1234n) is 0xE0042813BE5DCn",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0x1234n) is 0xE0042813BE5DCn'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 28870,
      "end": 29017,
      "expression": {
        "type": "CallExpression",
        "start": 28870,
        "end": 29016,
        "callee": {
          "type": "MemberExpression",
          "start": 28870,
          "end": 28886,
          "object": {
            "type": "Identifier",
            "start": 28870,
            "end": 28876,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 28877,
            "end": 28886,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 28890,
            "end": 28925,
            "left": {
              "type": "UnaryExpression",
              "start": 28890,
              "end": 28910,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 28891,
                "end": 28910,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 28913,
              "end": 28925,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 28914,
                "end": 28925,
                "value": null,
                "raw": "0xFEDCBA97n",
                "bigint": "0xFEDCBA97"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 28929,
            "end": 28941,
            "value": null,
            "raw": "0x100000001n",
            "bigint": "0x100000001"
          },
          {
            "type": "Literal",
            "start": 28945,
            "end": 29014,
            "value": "The result of (-0xFEDCBA9876543210n / -0xFEDCBA97n) is 0x100000001n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0xFEDCBA97n) is 0x100000001n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 29019,
      "end": 29166,
      "expression": {
        "type": "CallExpression",
        "start": 29019,
        "end": 29165,
        "callee": {
          "type": "MemberExpression",
          "start": 29019,
          "end": 29035,
          "object": {
            "type": "Identifier",
            "start": 29019,
            "end": 29025,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 29026,
            "end": 29035,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 29039,
            "end": 29074,
            "left": {
              "type": "UnaryExpression",
              "start": 29039,
              "end": 29059,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 29040,
                "end": 29059,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 29062,
              "end": 29074,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 29063,
                "end": 29074,
                "value": null,
                "raw": "0xFEDCBA98n",
                "bigint": "0xFEDCBA98"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 29078,
            "end": 29090,
            "value": null,
            "raw": "0x100000000n",
            "bigint": "0x100000000"
          },
          {
            "type": "Literal",
            "start": 29094,
            "end": 29163,
            "value": "The result of (-0xFEDCBA9876543210n / -0xFEDCBA98n) is 0x100000000n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0xFEDCBA98n) is 0x100000000n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 29168,
      "end": 29315,
      "expression": {
        "type": "CallExpression",
        "start": 29168,
        "end": 29314,
        "callee": {
          "type": "MemberExpression",
          "start": 29168,
          "end": 29184,
          "object": {
            "type": "Identifier",
            "start": 29168,
            "end": 29174,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 29175,
            "end": 29184,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 29188,
            "end": 29231,
            "left": {
              "type": "UnaryExpression",
              "start": 29188,
              "end": 29208,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 29189,
                "end": 29208,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 29211,
              "end": 29231,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 29212,
                "end": 29231,
                "value": null,
                "raw": "0xFEDCBA987654320Fn",
                "bigint": "0xFEDCBA987654320F"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 29235,
            "end": 29239,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 29243,
            "end": 29312,
            "value": "The result of (-0xFEDCBA9876543210n / -0xFEDCBA987654320Fn) is 0x1n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0xFEDCBA987654320Fn) is 0x1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 29317,
      "end": 29464,
      "expression": {
        "type": "CallExpression",
        "start": 29317,
        "end": 29463,
        "callee": {
          "type": "MemberExpression",
          "start": 29317,
          "end": 29333,
          "object": {
            "type": "Identifier",
            "start": 29317,
            "end": 29323,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 29324,
            "end": 29333,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 29337,
            "end": 29380,
            "left": {
              "type": "UnaryExpression",
              "start": 29337,
              "end": 29357,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 29338,
                "end": 29357,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            },
            "operator": "/",
            "right": {
              "type": "UnaryExpression",
              "start": 29360,
              "end": 29380,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 29361,
                "end": 29380,
                "value": null,
                "raw": "0xFEDCBA9876543210n",
                "bigint": "0xFEDCBA9876543210"
              },
              "prefix": true
            }
          },
          {
            "type": "Literal",
            "start": 29384,
            "end": 29388,
            "value": null,
            "raw": "0x1n",
            "bigint": "0x1"
          },
          {
            "type": "Literal",
            "start": 29392,
            "end": 29461,
            "value": "The result of (-0xFEDCBA9876543210n / -0xFEDCBA9876543210n) is 0x1n",
            "raw": "'The result of (-0xFEDCBA9876543210n / -0xFEDCBA9876543210n) is 0x1n'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}