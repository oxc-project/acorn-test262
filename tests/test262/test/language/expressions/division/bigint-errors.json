{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 336,
            "end": 342
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 343,
            "end": 349
          },
          "optional": false,
          "computed": false,
          "start": 336,
          "end": 349
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 350,
            "end": 359
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Symbol",
                        "start": 376,
                        "end": 382
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1",
                          "raw": "'1'",
                          "start": 383,
                          "end": 386
                        }
                      ],
                      "optional": false,
                      "start": 376,
                      "end": 387
                    },
                    "operator": "/",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "1n",
                      "bigint": "1",
                      "start": 390,
                      "end": 392
                    },
                    "start": 376,
                    "end": 392
                  },
                  "start": 376,
                  "end": 393
                }
              ],
              "start": 372,
              "end": 395
            },
            "expression": false,
            "start": 361,
            "end": 395
          },
          {
            "type": "Literal",
            "value": "Symbol(\"1\") / 1n throws TypeError",
            "raw": "'Symbol(\"1\") / 1n throws TypeError'",
            "start": 397,
            "end": 432
          }
        ],
        "optional": false,
        "start": 336,
        "end": 433
      },
      "start": 336,
      "end": 434
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 436,
            "end": 442
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 443,
            "end": 449
          },
          "optional": false,
          "computed": false,
          "start": 436,
          "end": 449
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 450,
            "end": 459
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 476,
                      "end": 478
                    },
                    "operator": "/",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Symbol",
                        "start": 481,
                        "end": 487
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1",
                          "raw": "'1'",
                          "start": 488,
                          "end": 491
                        }
                      ],
                      "optional": false,
                      "start": 481,
                      "end": 492
                    },
                    "start": 476,
                    "end": 492
                  },
                  "start": 476,
                  "end": 493
                }
              ],
              "start": 472,
              "end": 495
            },
            "expression": false,
            "start": 461,
            "end": 495
          },
          {
            "type": "Literal",
            "value": "0n / Symbol(\"1\") throws TypeError",
            "raw": "'0n / Symbol(\"1\") throws TypeError'",
            "start": 497,
            "end": 532
          }
        ],
        "optional": false,
        "start": 436,
        "end": 533
      },
      "start": 436,
      "end": 534
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 536,
            "end": 542
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 543,
            "end": 549
          },
          "optional": false,
          "computed": false,
          "start": 536,
          "end": 549
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 550,
            "end": 559
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 576,
                        "end": 582
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 583,
                            "end": 589
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "'1'",
                              "start": 590,
                              "end": 593
                            }
                          ],
                          "optional": false,
                          "start": 583,
                          "end": 594
                        }
                      ],
                      "optional": false,
                      "start": 576,
                      "end": 595
                    },
                    "operator": "/",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "1n",
                      "bigint": "1",
                      "start": 598,
                      "end": 600
                    },
                    "start": 576,
                    "end": 600
                  },
                  "start": 576,
                  "end": 601
                }
              ],
              "start": 572,
              "end": 603
            },
            "expression": false,
            "start": 561,
            "end": 603
          },
          {
            "type": "Literal",
            "value": "Object(Symbol(\"1\")) / 1n throws TypeError",
            "raw": "'Object(Symbol(\"1\")) / 1n throws TypeError'",
            "start": 605,
            "end": 648
          }
        ],
        "optional": false,
        "start": 536,
        "end": 649
      },
      "start": 536,
      "end": 650
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 652,
            "end": 658
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 659,
            "end": 665
          },
          "optional": false,
          "computed": false,
          "start": 652,
          "end": 665
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 666,
            "end": 675
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 692,
                      "end": 694
                    },
                    "operator": "/",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 697,
                        "end": 703
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 704,
                            "end": 710
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "'1'",
                              "start": 711,
                              "end": 714
                            }
                          ],
                          "optional": false,
                          "start": 704,
                          "end": 715
                        }
                      ],
                      "optional": false,
                      "start": 697,
                      "end": 716
                    },
                    "start": 692,
                    "end": 716
                  },
                  "start": 692,
                  "end": 717
                }
              ],
              "start": 688,
              "end": 719
            },
            "expression": false,
            "start": 677,
            "end": 719
          },
          {
            "type": "Literal",
            "value": "0n / Object(Symbol(\"1\")) throws TypeError",
            "raw": "'0n / Object(Symbol(\"1\")) throws TypeError'",
            "start": 721,
            "end": 764
          }
        ],
        "optional": false,
        "start": 652,
        "end": 765
      },
      "start": 652,
      "end": 766
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 768,
            "end": 774
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 775,
            "end": 781
          },
          "optional": false,
          "computed": false,
          "start": 768,
          "end": 781
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 782,
            "end": 791
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Symbol",
                                "start": 816,
                                "end": 822
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toPrimitive",
                                "start": 823,
                                "end": 834
                              },
                              "optional": false,
                              "computed": false,
                              "start": 816,
                              "end": 834
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 863,
                                        "end": 869
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 870,
                                          "end": 873
                                        }
                                      ],
                                      "optional": false,
                                      "start": 863,
                                      "end": 874
                                    },
                                    "start": 856,
                                    "end": 875
                                  }
                                ],
                                "start": 848,
                                "end": 881
                              },
                              "expression": false,
                              "start": 837,
                              "end": 881
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": true,
                            "start": 815,
                            "end": 881
                          }
                        ],
                        "start": 809,
                        "end": 885
                      },
                      "start": 808,
                      "end": 886
                    },
                    "operator": "/",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "1n",
                      "bigint": "1",
                      "start": 889,
                      "end": 891
                    },
                    "start": 808,
                    "end": 891
                  },
                  "start": 808,
                  "end": 892
                }
              ],
              "start": 804,
              "end": 894
            },
            "expression": false,
            "start": 793,
            "end": 894
          },
          {
            "type": "Literal",
            "value": "({[Symbol.toPrimitive]: function() {return Symbol(\"1\");}}) / 1n throws TypeError",
            "raw": "'({[Symbol.toPrimitive]: function() {return Symbol(\"1\");}}) / 1n throws TypeError'",
            "start": 896,
            "end": 978
          }
        ],
        "optional": false,
        "start": 768,
        "end": 979
      },
      "start": 768,
      "end": 980
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 982,
            "end": 988
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 989,
            "end": 995
          },
          "optional": false,
          "computed": false,
          "start": 982,
          "end": 995
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 996,
            "end": 1005
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1022,
                      "end": 1024
                    },
                    "operator": "/",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "Symbol",
                              "start": 1034,
                              "end": 1040
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "toPrimitive",
                              "start": 1041,
                              "end": 1052
                            },
                            "optional": false,
                            "computed": false,
                            "start": 1034,
                            "end": 1052
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1081,
                                      "end": 1087
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1088,
                                        "end": 1091
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1081,
                                    "end": 1092
                                  },
                                  "start": 1074,
                                  "end": 1093
                                }
                              ],
                              "start": 1066,
                              "end": 1099
                            },
                            "expression": false,
                            "start": 1055,
                            "end": 1099
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": true,
                          "start": 1033,
                          "end": 1099
                        }
                      ],
                      "start": 1027,
                      "end": 1103
                    },
                    "start": 1022,
                    "end": 1103
                  },
                  "start": 1022,
                  "end": 1104
                }
              ],
              "start": 1018,
              "end": 1106
            },
            "expression": false,
            "start": 1007,
            "end": 1106
          },
          {
            "type": "Literal",
            "value": "0n / {[Symbol.toPrimitive]: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n / {[Symbol.toPrimitive]: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1108,
            "end": 1188
          }
        ],
        "optional": false,
        "start": 982,
        "end": 1189
      },
      "start": 982,
      "end": 1190
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1192,
            "end": 1198
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1199,
            "end": 1205
          },
          "optional": false,
          "computed": false,
          "start": 1192,
          "end": 1205
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1206,
            "end": 1215
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "valueOf",
                              "start": 1239,
                              "end": 1246
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 1274,
                                        "end": 1280
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 1281,
                                          "end": 1284
                                        }
                                      ],
                                      "optional": false,
                                      "start": 1274,
                                      "end": 1285
                                    },
                                    "start": 1267,
                                    "end": 1286
                                  }
                                ],
                                "start": 1259,
                                "end": 1292
                              },
                              "expression": false,
                              "start": 1248,
                              "end": 1292
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1239,
                            "end": 1292
                          }
                        ],
                        "start": 1233,
                        "end": 1296
                      },
                      "start": 1232,
                      "end": 1297
                    },
                    "operator": "/",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "1n",
                      "bigint": "1",
                      "start": 1300,
                      "end": 1302
                    },
                    "start": 1232,
                    "end": 1302
                  },
                  "start": 1232,
                  "end": 1303
                }
              ],
              "start": 1228,
              "end": 1305
            },
            "expression": false,
            "start": 1217,
            "end": 1305
          },
          {
            "type": "Literal",
            "value": "({valueOf: function() {return Symbol(\"1\");}}) / 1n throws TypeError",
            "raw": "'({valueOf: function() {return Symbol(\"1\");}}) / 1n throws TypeError'",
            "start": 1307,
            "end": 1376
          }
        ],
        "optional": false,
        "start": 1192,
        "end": 1377
      },
      "start": 1192,
      "end": 1378
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1380,
            "end": 1386
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1387,
            "end": 1393
          },
          "optional": false,
          "computed": false,
          "start": 1380,
          "end": 1393
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1394,
            "end": 1403
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1420,
                      "end": 1422
                    },
                    "operator": "/",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "valueOf",
                            "start": 1431,
                            "end": 1438
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1466,
                                      "end": 1472
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1473,
                                        "end": 1476
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1466,
                                    "end": 1477
                                  },
                                  "start": 1459,
                                  "end": 1478
                                }
                              ],
                              "start": 1451,
                              "end": 1484
                            },
                            "expression": false,
                            "start": 1440,
                            "end": 1484
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1431,
                          "end": 1484
                        }
                      ],
                      "start": 1425,
                      "end": 1488
                    },
                    "start": 1420,
                    "end": 1488
                  },
                  "start": 1420,
                  "end": 1489
                }
              ],
              "start": 1416,
              "end": 1491
            },
            "expression": false,
            "start": 1405,
            "end": 1491
          },
          {
            "type": "Literal",
            "value": "0n / {valueOf: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n / {valueOf: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1493,
            "end": 1560
          }
        ],
        "optional": false,
        "start": 1380,
        "end": 1561
      },
      "start": 1380,
      "end": 1562
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1564,
            "end": 1570
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1571,
            "end": 1577
          },
          "optional": false,
          "computed": false,
          "start": 1564,
          "end": 1577
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1578,
            "end": 1587
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "toString",
                              "start": 1611,
                              "end": 1619
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 1647,
                                        "end": 1653
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 1654,
                                          "end": 1657
                                        }
                                      ],
                                      "optional": false,
                                      "start": 1647,
                                      "end": 1658
                                    },
                                    "start": 1640,
                                    "end": 1659
                                  }
                                ],
                                "start": 1632,
                                "end": 1665
                              },
                              "expression": false,
                              "start": 1621,
                              "end": 1665
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1611,
                            "end": 1665
                          }
                        ],
                        "start": 1605,
                        "end": 1669
                      },
                      "start": 1604,
                      "end": 1670
                    },
                    "operator": "/",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "1n",
                      "bigint": "1",
                      "start": 1673,
                      "end": 1675
                    },
                    "start": 1604,
                    "end": 1675
                  },
                  "start": 1604,
                  "end": 1676
                }
              ],
              "start": 1600,
              "end": 1678
            },
            "expression": false,
            "start": 1589,
            "end": 1678
          },
          {
            "type": "Literal",
            "value": "({toString: function() {return Symbol(\"1\");}}) / 1n throws TypeError",
            "raw": "'({toString: function() {return Symbol(\"1\");}}) / 1n throws TypeError'",
            "start": 1680,
            "end": 1750
          }
        ],
        "optional": false,
        "start": 1564,
        "end": 1751
      },
      "start": 1564,
      "end": 1752
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1754,
            "end": 1760
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1761,
            "end": 1767
          },
          "optional": false,
          "computed": false,
          "start": 1754,
          "end": 1767
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1768,
            "end": 1777
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1794,
                      "end": 1796
                    },
                    "operator": "/",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "toString",
                            "start": 1805,
                            "end": 1813
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1841,
                                      "end": 1847
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1848,
                                        "end": 1851
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1841,
                                    "end": 1852
                                  },
                                  "start": 1834,
                                  "end": 1853
                                }
                              ],
                              "start": 1826,
                              "end": 1859
                            },
                            "expression": false,
                            "start": 1815,
                            "end": 1859
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1805,
                          "end": 1859
                        }
                      ],
                      "start": 1799,
                      "end": 1863
                    },
                    "start": 1794,
                    "end": 1863
                  },
                  "start": 1794,
                  "end": 1864
                }
              ],
              "start": 1790,
              "end": 1866
            },
            "expression": false,
            "start": 1779,
            "end": 1866
          },
          {
            "type": "Literal",
            "value": "0n / {toString: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n / {toString: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1868,
            "end": 1936
          }
        ],
        "optional": false,
        "start": 1754,
        "end": 1937
      },
      "start": 1754,
      "end": 1938
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1939
}