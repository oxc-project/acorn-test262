{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 335,
            "end": 340
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "+",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 342,
                  "end": 343
                },
                "prefix": true,
                "start": 341,
                "end": 343
              },
              "operator": "/",
              "right": {
                "type": "UnaryExpression",
                "operator": "+",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 347,
                  "end": 348
                },
                "prefix": true,
                "start": 346,
                "end": 348
              },
              "start": 341,
              "end": 348
            }
          ],
          "optional": false,
          "start": 335,
          "end": 349
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 354,
          "end": 358
        },
        "start": 335,
        "end": 358
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 374,
                "end": 386
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: +0 / +0 === Not-a-Number. Actual: ",
                    "raw": "'#1: +0 / +0 === Not-a-Number. Actual: '",
                    "start": 387,
                    "end": 427
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "+",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 432,
                          "end": 433
                        },
                        "prefix": true,
                        "start": 431,
                        "end": 433
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "+",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 437,
                          "end": 438
                        },
                        "prefix": true,
                        "start": 436,
                        "end": 438
                      },
                      "start": 431,
                      "end": 438
                    },
                    "start": 430,
                    "end": 439
                  },
                  "start": 387,
                  "end": 439
                }
              ],
              "start": 370,
              "end": 440
            },
            "start": 364,
            "end": 441
          }
        ],
        "start": 360,
        "end": 443
      },
      "alternate": null,
      "start": 331,
      "end": 443
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 461,
            "end": 466
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 468,
                  "end": 469
                },
                "prefix": true,
                "start": 467,
                "end": 469
              },
              "operator": "/",
              "right": {
                "type": "UnaryExpression",
                "operator": "+",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 473,
                  "end": 474
                },
                "prefix": true,
                "start": 472,
                "end": 474
              },
              "start": 467,
              "end": 474
            }
          ],
          "optional": false,
          "start": 461,
          "end": 475
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 480,
          "end": 484
        },
        "start": 461,
        "end": 484
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 500,
                "end": 512
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: -0 / +0 === Not-a-Number. Actual: ",
                    "raw": "'#2: -0 / +0 === Not-a-Number. Actual: '",
                    "start": 513,
                    "end": 553
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 558,
                          "end": 559
                        },
                        "prefix": true,
                        "start": 557,
                        "end": 559
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "+",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 563,
                          "end": 564
                        },
                        "prefix": true,
                        "start": 562,
                        "end": 564
                      },
                      "start": 557,
                      "end": 564
                    },
                    "start": 556,
                    "end": 565
                  },
                  "start": 513,
                  "end": 565
                }
              ],
              "start": 496,
              "end": 566
            },
            "start": 490,
            "end": 567
          }
        ],
        "start": 486,
        "end": 570
      },
      "alternate": null,
      "start": 457,
      "end": 570
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 587,
            "end": 592
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "+",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 594,
                  "end": 595
                },
                "prefix": true,
                "start": 593,
                "end": 595
              },
              "operator": "/",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 599,
                  "end": 600
                },
                "prefix": true,
                "start": 598,
                "end": 600
              },
              "start": 593,
              "end": 600
            }
          ],
          "optional": false,
          "start": 587,
          "end": 601
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 606,
          "end": 610
        },
        "start": 587,
        "end": 610
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 626,
                "end": 638
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: +0 / -0 === Not-a-Number. Actual: ",
                    "raw": "'#3: +0 / -0 === Not-a-Number. Actual: '",
                    "start": 639,
                    "end": 679
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "+",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 684,
                          "end": 685
                        },
                        "prefix": true,
                        "start": 683,
                        "end": 685
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 689,
                          "end": 690
                        },
                        "prefix": true,
                        "start": 688,
                        "end": 690
                      },
                      "start": 683,
                      "end": 690
                    },
                    "start": 682,
                    "end": 691
                  },
                  "start": 639,
                  "end": 691
                }
              ],
              "start": 622,
              "end": 692
            },
            "start": 616,
            "end": 693
          }
        ],
        "start": 612,
        "end": 696
      },
      "alternate": null,
      "start": 583,
      "end": 696
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 713,
            "end": 718
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 720,
                  "end": 721
                },
                "prefix": true,
                "start": 719,
                "end": 721
              },
              "operator": "/",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 725,
                  "end": 726
                },
                "prefix": true,
                "start": 724,
                "end": 726
              },
              "start": 719,
              "end": 726
            }
          ],
          "optional": false,
          "start": 713,
          "end": 727
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 732,
          "end": 736
        },
        "start": 713,
        "end": 736
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 752,
                "end": 764
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: -0 / -0 === Not-a-Number. Actual: ",
                    "raw": "'#4: -0 / -0 === Not-a-Number. Actual: '",
                    "start": 765,
                    "end": 805
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 810,
                          "end": 811
                        },
                        "prefix": true,
                        "start": 809,
                        "end": 811
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 815,
                          "end": 816
                        },
                        "prefix": true,
                        "start": 814,
                        "end": 816
                      },
                      "start": 809,
                      "end": 816
                    },
                    "start": 808,
                    "end": 817
                  },
                  "start": 765,
                  "end": 817
                }
              ],
              "start": 748,
              "end": 818
            },
            "start": 742,
            "end": 819
          }
        ],
        "start": 738,
        "end": 821
      },
      "alternate": null,
      "start": 709,
      "end": 821
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 822
}