{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 386,
            "end": 390
          },
          "operator": "/",
          "right": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 393,
            "end": 394
          },
          "start": 386,
          "end": 394
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 399,
          "end": 400
        },
        "start": 386,
        "end": 400
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 416,
                "end": 428
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: true / 1 === 1. Actual: ",
                    "raw": "'#1: true / 1 === 1. Actual: '",
                    "start": 429,
                    "end": 459
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 463,
                        "end": 467
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 470,
                        "end": 471
                      },
                      "start": 463,
                      "end": 471
                    },
                    "start": 462,
                    "end": 472
                  },
                  "start": 429,
                  "end": 472
                }
              ],
              "start": 412,
              "end": 473
            },
            "start": 406,
            "end": 474
          }
        ],
        "start": 402,
        "end": 476
      },
      "alternate": null,
      "start": 382,
      "end": 476
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 492,
            "end": 493
          },
          "operator": "/",
          "right": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 496,
            "end": 500
          },
          "start": 492,
          "end": 500
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 505,
          "end": 506
        },
        "start": 492,
        "end": 506
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 522,
                "end": 534
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: 1 / true === 1. Actual: ",
                    "raw": "'#2: 1 / true === 1. Actual: '",
                    "start": 535,
                    "end": 565
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 569,
                        "end": 570
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 573,
                        "end": 577
                      },
                      "start": 569,
                      "end": 577
                    },
                    "start": 568,
                    "end": 578
                  },
                  "start": 535,
                  "end": 578
                }
              ],
              "start": 518,
              "end": 579
            },
            "start": 512,
            "end": 580
          }
        ],
        "start": 508,
        "end": 582
      },
      "alternate": null,
      "start": 488,
      "end": 582
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 602,
              "end": 609
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 610,
                "end": 614
              }
            ],
            "start": 598,
            "end": 615
          },
          "operator": "/",
          "right": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 618,
            "end": 619
          },
          "start": 598,
          "end": 619
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 624,
          "end": 625
        },
        "start": 598,
        "end": 625
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 641,
                "end": 653
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new Boolean(true) / 1 === 1. Actual: ",
                    "raw": "'#3: new Boolean(true) / 1 === 1. Actual: '",
                    "start": 654,
                    "end": 697
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 705,
                          "end": 712
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 713,
                            "end": 717
                          }
                        ],
                        "start": 701,
                        "end": 718
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 721,
                        "end": 722
                      },
                      "start": 701,
                      "end": 722
                    },
                    "start": 700,
                    "end": 723
                  },
                  "start": 654,
                  "end": 723
                }
              ],
              "start": 637,
              "end": 724
            },
            "start": 631,
            "end": 725
          }
        ],
        "start": 627,
        "end": 727
      },
      "alternate": null,
      "start": 594,
      "end": 727
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 743,
            "end": 744
          },
          "operator": "/",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 751,
              "end": 758
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 759,
                "end": 763
              }
            ],
            "start": 747,
            "end": 764
          },
          "start": 743,
          "end": 764
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 769,
          "end": 770
        },
        "start": 743,
        "end": 770
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 786,
                "end": 798
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: 1 / new Boolean(true) === 1. Actual: ",
                    "raw": "'#4: 1 / new Boolean(true) === 1. Actual: '",
                    "start": 799,
                    "end": 842
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 846,
                        "end": 847
                      },
                      "operator": "/",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 854,
                          "end": 861
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 862,
                            "end": 866
                          }
                        ],
                        "start": 850,
                        "end": 867
                      },
                      "start": 846,
                      "end": 867
                    },
                    "start": 845,
                    "end": 868
                  },
                  "start": 799,
                  "end": 868
                }
              ],
              "start": 782,
              "end": 869
            },
            "start": 776,
            "end": 870
          }
        ],
        "start": 772,
        "end": 872
      },
      "alternate": null,
      "start": 739,
      "end": 872
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 888,
            "end": 892
          },
          "operator": "/",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 899,
              "end": 905
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 906,
                "end": 907
              }
            ],
            "start": 895,
            "end": 908
          },
          "start": 888,
          "end": 908
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 913,
          "end": 914
        },
        "start": 888,
        "end": 914
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 930,
                "end": 942
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: true / new Number(1) === 1. Actual: ",
                    "raw": "'#5: true / new Number(1) === 1. Actual: '",
                    "start": 943,
                    "end": 985
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 989,
                        "end": 993
                      },
                      "operator": "/",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1000,
                          "end": 1006
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1007,
                            "end": 1008
                          }
                        ],
                        "start": 996,
                        "end": 1009
                      },
                      "start": 989,
                      "end": 1009
                    },
                    "start": 988,
                    "end": 1010
                  },
                  "start": 943,
                  "end": 1010
                }
              ],
              "start": 926,
              "end": 1011
            },
            "start": 920,
            "end": 1012
          }
        ],
        "start": 916,
        "end": 1014
      },
      "alternate": null,
      "start": 884,
      "end": 1014
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 1034,
              "end": 1040
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1041,
                "end": 1042
              }
            ],
            "start": 1030,
            "end": 1043
          },
          "operator": "/",
          "right": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 1046,
            "end": 1050
          },
          "start": 1030,
          "end": 1050
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1055,
          "end": 1056
        },
        "start": 1030,
        "end": 1056
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1072,
                "end": 1084
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: new Number(1) / true === 1. Actual: ",
                    "raw": "'#6: new Number(1) / true === 1. Actual: '",
                    "start": 1085,
                    "end": 1127
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1135,
                          "end": 1141
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1142,
                            "end": 1143
                          }
                        ],
                        "start": 1131,
                        "end": 1144
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 1147,
                        "end": 1151
                      },
                      "start": 1131,
                      "end": 1151
                    },
                    "start": 1130,
                    "end": 1152
                  },
                  "start": 1085,
                  "end": 1152
                }
              ],
              "start": 1068,
              "end": 1153
            },
            "start": 1062,
            "end": 1154
          }
        ],
        "start": 1058,
        "end": 1156
      },
      "alternate": null,
      "start": 1026,
      "end": 1156
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 1176,
              "end": 1183
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 1184,
                "end": 1188
              }
            ],
            "start": 1172,
            "end": 1189
          },
          "operator": "/",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 1196,
              "end": 1202
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1203,
                "end": 1204
              }
            ],
            "start": 1192,
            "end": 1205
          },
          "start": 1172,
          "end": 1205
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1210,
          "end": 1211
        },
        "start": 1172,
        "end": 1211
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1227,
                "end": 1239
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: new Boolean(true) / new Number(1) === 1. Actual: ",
                    "raw": "'#7: new Boolean(true) / new Number(1) === 1. Actual: '",
                    "start": 1240,
                    "end": 1295
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 1303,
                          "end": 1310
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 1311,
                            "end": 1315
                          }
                        ],
                        "start": 1299,
                        "end": 1316
                      },
                      "operator": "/",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1323,
                          "end": 1329
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1330,
                            "end": 1331
                          }
                        ],
                        "start": 1319,
                        "end": 1332
                      },
                      "start": 1299,
                      "end": 1332
                    },
                    "start": 1298,
                    "end": 1333
                  },
                  "start": 1240,
                  "end": 1333
                }
              ],
              "start": 1223,
              "end": 1334
            },
            "start": 1217,
            "end": 1335
          }
        ],
        "start": 1213,
        "end": 1337
      },
      "alternate": null,
      "start": 1168,
      "end": 1337
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 1357,
              "end": 1363
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1364,
                "end": 1365
              }
            ],
            "start": 1353,
            "end": 1366
          },
          "operator": "/",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 1373,
              "end": 1380
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 1381,
                "end": 1385
              }
            ],
            "start": 1369,
            "end": 1386
          },
          "start": 1353,
          "end": 1386
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1391,
          "end": 1392
        },
        "start": 1353,
        "end": 1392
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1408,
                "end": 1420
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: new Number(1) / new Boolean(true) === 1. Actual: ",
                    "raw": "'#8: new Number(1) / new Boolean(true) === 1. Actual: '",
                    "start": 1421,
                    "end": 1476
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1484,
                          "end": 1490
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1491,
                            "end": 1492
                          }
                        ],
                        "start": 1480,
                        "end": 1493
                      },
                      "operator": "/",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 1500,
                          "end": 1507
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 1508,
                            "end": 1512
                          }
                        ],
                        "start": 1496,
                        "end": 1513
                      },
                      "start": 1480,
                      "end": 1513
                    },
                    "start": 1479,
                    "end": 1514
                  },
                  "start": 1421,
                  "end": 1514
                }
              ],
              "start": 1404,
              "end": 1515
            },
            "start": 1398,
            "end": 1516
          }
        ],
        "start": 1394,
        "end": 1518
      },
      "alternate": null,
      "start": 1349,
      "end": 1518
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1519
}