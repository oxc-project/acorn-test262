{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 360,
            "end": 361
          },
          "operator": "/",
          "right": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 364,
            "end": 368
          },
          "start": 360,
          "end": 368
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 373,
            "end": 379
          },
          "property": {
            "type": "Identifier",
            "name": "POSITIVE_INFINITY",
            "start": 380,
            "end": 397
          },
          "optional": false,
          "computed": false,
          "start": 373,
          "end": 397
        },
        "start": 360,
        "end": 397
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 413,
                "end": 425
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: 1 / null === +Infinity. Actual: ",
                    "raw": "'#1: 1 / null === +Infinity. Actual: '",
                    "start": 426,
                    "end": 464
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 468,
                        "end": 469
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 472,
                        "end": 476
                      },
                      "start": 468,
                      "end": 476
                    },
                    "start": 467,
                    "end": 477
                  },
                  "start": 426,
                  "end": 477
                }
              ],
              "start": 409,
              "end": 478
            },
            "start": 403,
            "end": 479
          }
        ],
        "start": 399,
        "end": 481
      },
      "alternate": null,
      "start": 356,
      "end": 481
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 497,
            "end": 501
          },
          "operator": "/",
          "right": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 504,
            "end": 505
          },
          "start": 497,
          "end": 505
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 510,
          "end": 511
        },
        "start": 497,
        "end": 511
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 527,
                "end": 539
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: null / 1 === 0. Actual: ",
                    "raw": "'#2: null / 1 === 0. Actual: '",
                    "start": 540,
                    "end": 570
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 574,
                        "end": 578
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 581,
                        "end": 582
                      },
                      "start": 574,
                      "end": 582
                    },
                    "start": 573,
                    "end": 583
                  },
                  "start": 540,
                  "end": 583
                }
              ],
              "start": 523,
              "end": 584
            },
            "start": 517,
            "end": 585
          }
        ],
        "start": 513,
        "end": 587
      },
      "alternate": null,
      "start": 493,
      "end": 587
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 607,
              "end": 613
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 614,
                "end": 615
              }
            ],
            "start": 603,
            "end": 616
          },
          "operator": "/",
          "right": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 619,
            "end": 623
          },
          "start": 603,
          "end": 623
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 628,
            "end": 634
          },
          "property": {
            "type": "Identifier",
            "name": "POSITIVE_INFINITY",
            "start": 635,
            "end": 652
          },
          "optional": false,
          "computed": false,
          "start": 628,
          "end": 652
        },
        "start": 603,
        "end": 652
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 668,
                "end": 680
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new Number(1) / null === +Infinity. Actual: ",
                    "raw": "'#3: new Number(1) / null === +Infinity. Actual: '",
                    "start": 681,
                    "end": 731
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 739,
                          "end": 745
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 746,
                            "end": 747
                          }
                        ],
                        "start": 735,
                        "end": 748
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 751,
                        "end": 755
                      },
                      "start": 735,
                      "end": 755
                    },
                    "start": 734,
                    "end": 756
                  },
                  "start": 681,
                  "end": 756
                }
              ],
              "start": 664,
              "end": 757
            },
            "start": 658,
            "end": 758
          }
        ],
        "start": 654,
        "end": 760
      },
      "alternate": null,
      "start": 599,
      "end": 760
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 776,
            "end": 780
          },
          "operator": "/",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 787,
              "end": 793
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 794,
                "end": 795
              }
            ],
            "start": 783,
            "end": 796
          },
          "start": 776,
          "end": 796
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 801,
          "end": 802
        },
        "start": 776,
        "end": 802
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 818,
                "end": 830
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: null / new Number(1) === 0. Actual: ",
                    "raw": "'#4: null / new Number(1) === 0. Actual: '",
                    "start": 831,
                    "end": 873
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 877,
                        "end": 881
                      },
                      "operator": "/",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 888,
                          "end": 894
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 895,
                            "end": 896
                          }
                        ],
                        "start": 884,
                        "end": 897
                      },
                      "start": 877,
                      "end": 897
                    },
                    "start": 876,
                    "end": 898
                  },
                  "start": 831,
                  "end": 898
                }
              ],
              "start": 814,
              "end": 899
            },
            "start": 808,
            "end": 900
          }
        ],
        "start": 804,
        "end": 902
      },
      "alternate": null,
      "start": 772,
      "end": 902
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 903
}