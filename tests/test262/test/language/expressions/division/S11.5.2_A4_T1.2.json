{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 336,
            "end": 341
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 342,
                  "end": 348
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 349,
                  "end": 352
                },
                "optional": false,
                "computed": false,
                "start": 342,
                "end": 352
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 355,
                  "end": 361
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 362,
                  "end": 365
                },
                "optional": false,
                "computed": false,
                "start": 355,
                "end": 365
              },
              "start": 342,
              "end": 365
            }
          ],
          "optional": false,
          "start": 336,
          "end": 366
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 371,
          "end": 375
        },
        "start": 336,
        "end": 375
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 391,
                "end": 403
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: NaN / NaN === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN / NaN === Not-a-Number. Actual: '",
                    "start": 404,
                    "end": 446
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 450,
                        "end": 453
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 456,
                        "end": 459
                      },
                      "start": 450,
                      "end": 459
                    },
                    "start": 449,
                    "end": 460
                  },
                  "start": 404,
                  "end": 460
                }
              ],
              "start": 387,
              "end": 461
            },
            "start": 381,
            "end": 462
          }
        ],
        "start": 377,
        "end": 464
      },
      "alternate": null,
      "start": 332,
      "end": 464
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 482,
            "end": 487
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "+",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 489,
                  "end": 490
                },
                "prefix": true,
                "start": 488,
                "end": 490
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 493,
                  "end": 499
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 500,
                  "end": 503
                },
                "optional": false,
                "computed": false,
                "start": 493,
                "end": 503
              },
              "start": 488,
              "end": 503
            }
          ],
          "optional": false,
          "start": 482,
          "end": 504
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 509,
          "end": 513
        },
        "start": 482,
        "end": 513
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 529,
                "end": 541
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: +0 / NaN === Not-a-Number. Actual: ",
                    "raw": "'#2: +0 / NaN === Not-a-Number. Actual: '",
                    "start": 542,
                    "end": 583
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "+",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 588,
                          "end": 589
                        },
                        "prefix": true,
                        "start": 587,
                        "end": 589
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 592,
                        "end": 595
                      },
                      "start": 587,
                      "end": 595
                    },
                    "start": 586,
                    "end": 596
                  },
                  "start": 542,
                  "end": 596
                }
              ],
              "start": 525,
              "end": 597
            },
            "start": 519,
            "end": 598
          }
        ],
        "start": 515,
        "end": 601
      },
      "alternate": null,
      "start": 478,
      "end": 601
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 618,
            "end": 623
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 625,
                  "end": 626
                },
                "prefix": true,
                "start": 624,
                "end": 626
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 629,
                  "end": 635
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 636,
                  "end": 639
                },
                "optional": false,
                "computed": false,
                "start": 629,
                "end": 639
              },
              "start": 624,
              "end": 639
            }
          ],
          "optional": false,
          "start": 618,
          "end": 640
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 645,
          "end": 649
        },
        "start": 618,
        "end": 649
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 665,
                "end": 677
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: -0 / NaN === Not-a-Number. Actual: ",
                    "raw": "'#3: -0 / NaN === Not-a-Number. Actual: '",
                    "start": 678,
                    "end": 719
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 724,
                          "end": 725
                        },
                        "prefix": true,
                        "start": 723,
                        "end": 725
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 728,
                        "end": 731
                      },
                      "start": 723,
                      "end": 731
                    },
                    "start": 722,
                    "end": 732
                  },
                  "start": 678,
                  "end": 732
                }
              ],
              "start": 661,
              "end": 733
            },
            "start": 655,
            "end": 734
          }
        ],
        "start": 651,
        "end": 737
      },
      "alternate": null,
      "start": 614,
      "end": 737
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 754,
            "end": 759
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 760,
                  "end": 766
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 767,
                  "end": 784
                },
                "optional": false,
                "computed": false,
                "start": 760,
                "end": 784
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 787,
                  "end": 793
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 794,
                  "end": 797
                },
                "optional": false,
                "computed": false,
                "start": 787,
                "end": 797
              },
              "start": 760,
              "end": 797
            }
          ],
          "optional": false,
          "start": 754,
          "end": 798
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 803,
          "end": 807
        },
        "start": 754,
        "end": 807
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 823,
                "end": 835
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: Infinity / NaN === Not-a-Number. Actual: ",
                    "raw": "'#4: Infinity / NaN === Not-a-Number. Actual: '",
                    "start": 836,
                    "end": 883
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 887,
                        "end": 895
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 898,
                        "end": 901
                      },
                      "start": 887,
                      "end": 901
                    },
                    "start": 886,
                    "end": 902
                  },
                  "start": 836,
                  "end": 902
                }
              ],
              "start": 819,
              "end": 903
            },
            "start": 813,
            "end": 904
          }
        ],
        "start": 809,
        "end": 906
      },
      "alternate": null,
      "start": 750,
      "end": 906
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 923,
            "end": 928
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 929,
                  "end": 935
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 936,
                  "end": 953
                },
                "optional": false,
                "computed": false,
                "start": 929,
                "end": 953
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 956,
                  "end": 962
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 963,
                  "end": 966
                },
                "optional": false,
                "computed": false,
                "start": 956,
                "end": 966
              },
              "start": 929,
              "end": 966
            }
          ],
          "optional": false,
          "start": 923,
          "end": 967
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 972,
          "end": 976
        },
        "start": 923,
        "end": 976
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 992,
                "end": 1004
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5:  -Infinity / NaN === Not-a-Number. Actual: ",
                    "raw": "'#5:  -Infinity / NaN === Not-a-Number. Actual: '",
                    "start": 1005,
                    "end": 1054
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Identifier",
                          "name": "Infinity",
                          "start": 1060,
                          "end": 1068
                        },
                        "prefix": true,
                        "start": 1059,
                        "end": 1068
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1071,
                        "end": 1074
                      },
                      "start": 1059,
                      "end": 1074
                    },
                    "start": 1057,
                    "end": 1075
                  },
                  "start": 1005,
                  "end": 1075
                }
              ],
              "start": 988,
              "end": 1076
            },
            "start": 982,
            "end": 1077
          }
        ],
        "start": 978,
        "end": 1080
      },
      "alternate": null,
      "start": 919,
      "end": 1080
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1097,
            "end": 1102
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1103,
                  "end": 1109
                },
                "property": {
                  "type": "Identifier",
                  "name": "MAX_VALUE",
                  "start": 1110,
                  "end": 1119
                },
                "optional": false,
                "computed": false,
                "start": 1103,
                "end": 1119
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1122,
                  "end": 1128
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1129,
                  "end": 1132
                },
                "optional": false,
                "computed": false,
                "start": 1122,
                "end": 1132
              },
              "start": 1103,
              "end": 1132
            }
          ],
          "optional": false,
          "start": 1097,
          "end": 1133
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1138,
          "end": 1142
        },
        "start": 1097,
        "end": 1142
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1158,
                "end": 1170
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: Number.MAX_VALUE / NaN === Not-a-Number. Actual: ",
                    "raw": "'#6: Number.MAX_VALUE / NaN === Not-a-Number. Actual: '",
                    "start": 1171,
                    "end": 1226
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1230,
                          "end": 1236
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MAX_VALUE",
                          "start": 1237,
                          "end": 1246
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1230,
                        "end": 1246
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1249,
                        "end": 1252
                      },
                      "start": 1230,
                      "end": 1252
                    },
                    "start": 1229,
                    "end": 1253
                  },
                  "start": 1171,
                  "end": 1253
                }
              ],
              "start": 1154,
              "end": 1254
            },
            "start": 1148,
            "end": 1255
          }
        ],
        "start": 1144,
        "end": 1257
      },
      "alternate": null,
      "start": 1093,
      "end": 1257
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1274,
            "end": 1279
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1280,
                  "end": 1286
                },
                "property": {
                  "type": "Identifier",
                  "name": "MIN_VALUE",
                  "start": 1287,
                  "end": 1296
                },
                "optional": false,
                "computed": false,
                "start": 1280,
                "end": 1296
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1299,
                  "end": 1305
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1306,
                  "end": 1309
                },
                "optional": false,
                "computed": false,
                "start": 1299,
                "end": 1309
              },
              "start": 1280,
              "end": 1309
            }
          ],
          "optional": false,
          "start": 1274,
          "end": 1310
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1315,
          "end": 1319
        },
        "start": 1274,
        "end": 1319
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1335,
                "end": 1347
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: Number.MIN_VALUE / NaN === Not-a-Number. Actual: ",
                    "raw": "'#7: Number.MIN_VALUE / NaN === Not-a-Number. Actual: '",
                    "start": 1348,
                    "end": 1403
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1407,
                          "end": 1413
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MIN_VALUE",
                          "start": 1414,
                          "end": 1423
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1407,
                        "end": 1423
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1426,
                        "end": 1429
                      },
                      "start": 1407,
                      "end": 1429
                    },
                    "start": 1406,
                    "end": 1430
                  },
                  "start": 1348,
                  "end": 1430
                }
              ],
              "start": 1331,
              "end": 1431
            },
            "start": 1325,
            "end": 1432
          }
        ],
        "start": 1321,
        "end": 1435
      },
      "alternate": null,
      "start": 1270,
      "end": 1435
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1451,
            "end": 1456
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1457,
                "end": 1458
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1461,
                  "end": 1467
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1468,
                  "end": 1471
                },
                "optional": false,
                "computed": false,
                "start": 1461,
                "end": 1471
              },
              "start": 1457,
              "end": 1471
            }
          ],
          "optional": false,
          "start": 1451,
          "end": 1472
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1477,
          "end": 1481
        },
        "start": 1451,
        "end": 1481
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1497,
                "end": 1509
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: 1 / NaN === Not-a-Number. Actual: ",
                    "raw": "'#8: 1 / NaN === Not-a-Number. Actual: '",
                    "start": 1510,
                    "end": 1550
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1554,
                        "end": 1555
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1558,
                        "end": 1561
                      },
                      "start": 1554,
                      "end": 1561
                    },
                    "start": 1553,
                    "end": 1562
                  },
                  "start": 1510,
                  "end": 1562
                }
              ],
              "start": 1493,
              "end": 1563
            },
            "start": 1487,
            "end": 1564
          }
        ],
        "start": 1483,
        "end": 1568
      },
      "alternate": null,
      "start": 1447,
      "end": 1568
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1569
}