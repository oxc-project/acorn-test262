{
  "type": "Program",
  "start": 0,
  "end": 1396,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 328,
      "end": 407,
      "expression": {
        "type": "CallExpression",
        "start": 328,
        "end": 406,
        "callee": {
          "type": "MemberExpression",
          "start": 328,
          "end": 344,
          "object": {
            "type": "Identifier",
            "start": 328,
            "end": 334,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 335,
            "end": 344,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 345,
            "end": 360,
            "left": {
              "type": "CallExpression",
              "start": 345,
              "end": 355,
              "callee": {
                "type": "Identifier",
                "start": 345,
                "end": 351,
                "name": "Object"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 352,
                  "end": 354,
                  "value": null,
                  "raw": "2n",
                  "bigint": "2"
                }
              ],
              "optional": false
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 358,
              "end": 360,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            }
          },
          {
            "type": "Literal",
            "start": 362,
            "end": 364,
            "value": null,
            "raw": "1n",
            "bigint": "1"
          },
          {
            "type": "Literal",
            "start": 366,
            "end": 405,
            "value": "The result of (Object(2n) / 2n) is 1n",
            "raw": "'The result of (Object(2n) / 2n) is 1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 408,
      "end": 487,
      "expression": {
        "type": "CallExpression",
        "start": 408,
        "end": 486,
        "callee": {
          "type": "MemberExpression",
          "start": 408,
          "end": 424,
          "object": {
            "type": "Identifier",
            "start": 408,
            "end": 414,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 415,
            "end": 424,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 425,
            "end": 440,
            "left": {
              "type": "Literal",
              "start": 425,
              "end": 427,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            },
            "operator": "/",
            "right": {
              "type": "CallExpression",
              "start": 430,
              "end": 440,
              "callee": {
                "type": "Identifier",
                "start": 430,
                "end": 436,
                "name": "Object"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 437,
                  "end": 439,
                  "value": null,
                  "raw": "2n",
                  "bigint": "2"
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 442,
            "end": 444,
            "value": null,
            "raw": "1n",
            "bigint": "1"
          },
          {
            "type": "Literal",
            "start": 446,
            "end": 485,
            "value": "The result of (2n / Object(2n)) is 1n",
            "raw": "'The result of (2n / Object(2n)) is 1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 489,
      "end": 656,
      "expression": {
        "type": "CallExpression",
        "start": 489,
        "end": 655,
        "callee": {
          "type": "MemberExpression",
          "start": 489,
          "end": 505,
          "object": {
            "type": "Identifier",
            "start": 489,
            "end": 495,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 496,
            "end": 505,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 506,
            "end": 570,
            "left": {
              "type": "ObjectExpression",
              "start": 506,
              "end": 565,
              "properties": [
                {
                  "type": "Property",
                  "start": 510,
                  "end": 563,
                  "kind": "init",
                  "key": {
                    "type": "MemberExpression",
                    "start": 511,
                    "end": 529,
                    "object": {
                      "type": "Identifier",
                      "start": 511,
                      "end": 517,
                      "name": "Symbol"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 518,
                      "end": 529,
                      "name": "toPrimitive"
                    },
                    "optional": false,
                    "computed": false
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 532,
                    "end": 563,
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 543,
                      "end": 563,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 549,
                          "end": 559,
                          "argument": {
                            "type": "Literal",
                            "start": 556,
                            "end": 558,
                            "value": null,
                            "raw": "2n",
                            "bigint": "2"
                          }
                        }
                      ]
                    },
                    "expression": false
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": true
                }
              ]
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 568,
              "end": 570,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            }
          },
          {
            "type": "Literal",
            "start": 572,
            "end": 574,
            "value": null,
            "raw": "1n",
            "bigint": "1"
          },
          {
            "type": "Literal",
            "start": 576,
            "end": 654,
            "value": "The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) / 2n) is 1n",
            "raw": "'The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) / 2n) is 1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 658,
      "end": 823,
      "expression": {
        "type": "CallExpression",
        "start": 658,
        "end": 822,
        "callee": {
          "type": "MemberExpression",
          "start": 658,
          "end": 674,
          "object": {
            "type": "Identifier",
            "start": 658,
            "end": 664,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 665,
            "end": 674,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 675,
            "end": 739,
            "left": {
              "type": "Literal",
              "start": 675,
              "end": 677,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            },
            "operator": "/",
            "right": {
              "type": "ObjectExpression",
              "start": 680,
              "end": 739,
              "properties": [
                {
                  "type": "Property",
                  "start": 684,
                  "end": 737,
                  "kind": "init",
                  "key": {
                    "type": "MemberExpression",
                    "start": 685,
                    "end": 703,
                    "object": {
                      "type": "Identifier",
                      "start": 685,
                      "end": 691,
                      "name": "Symbol"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 692,
                      "end": 703,
                      "name": "toPrimitive"
                    },
                    "optional": false,
                    "computed": false
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 706,
                    "end": 737,
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 717,
                      "end": 737,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 723,
                          "end": 733,
                          "argument": {
                            "type": "Literal",
                            "start": 730,
                            "end": 732,
                            "value": null,
                            "raw": "2n",
                            "bigint": "2"
                          }
                        }
                      ]
                    },
                    "expression": false
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": true
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 741,
            "end": 743,
            "value": null,
            "raw": "1n",
            "bigint": "1"
          },
          {
            "type": "Literal",
            "start": 745,
            "end": 821,
            "value": "The result of (2n / {[Symbol.toPrimitive]: function() {return 2n;}}) is 1n",
            "raw": "'The result of (2n / {[Symbol.toPrimitive]: function() {return 2n;}}) is 1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 825,
      "end": 966,
      "expression": {
        "type": "CallExpression",
        "start": 825,
        "end": 965,
        "callee": {
          "type": "MemberExpression",
          "start": 825,
          "end": 841,
          "object": {
            "type": "Identifier",
            "start": 825,
            "end": 831,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 832,
            "end": 841,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 842,
            "end": 893,
            "left": {
              "type": "ObjectExpression",
              "start": 842,
              "end": 888,
              "properties": [
                {
                  "type": "Property",
                  "start": 846,
                  "end": 886,
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "start": 846,
                    "end": 853,
                    "name": "valueOf"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 855,
                    "end": 886,
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 866,
                      "end": 886,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 872,
                          "end": 882,
                          "argument": {
                            "type": "Literal",
                            "start": 879,
                            "end": 881,
                            "value": null,
                            "raw": "2n",
                            "bigint": "2"
                          }
                        }
                      ]
                    },
                    "expression": false
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false
                }
              ]
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 891,
              "end": 893,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            }
          },
          {
            "type": "Literal",
            "start": 895,
            "end": 897,
            "value": null,
            "raw": "1n",
            "bigint": "1"
          },
          {
            "type": "Literal",
            "start": 899,
            "end": 964,
            "value": "The result of (({valueOf: function() {return 2n;}}) / 2n) is 1n",
            "raw": "'The result of (({valueOf: function() {return 2n;}}) / 2n) is 1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 968,
      "end": 1107,
      "expression": {
        "type": "CallExpression",
        "start": 968,
        "end": 1106,
        "callee": {
          "type": "MemberExpression",
          "start": 968,
          "end": 984,
          "object": {
            "type": "Identifier",
            "start": 968,
            "end": 974,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 975,
            "end": 984,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 985,
            "end": 1036,
            "left": {
              "type": "Literal",
              "start": 985,
              "end": 987,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            },
            "operator": "/",
            "right": {
              "type": "ObjectExpression",
              "start": 990,
              "end": 1036,
              "properties": [
                {
                  "type": "Property",
                  "start": 994,
                  "end": 1034,
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "start": 994,
                    "end": 1001,
                    "name": "valueOf"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1003,
                    "end": 1034,
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1014,
                      "end": 1034,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1020,
                          "end": 1030,
                          "argument": {
                            "type": "Literal",
                            "start": 1027,
                            "end": 1029,
                            "value": null,
                            "raw": "2n",
                            "bigint": "2"
                          }
                        }
                      ]
                    },
                    "expression": false
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1038,
            "end": 1040,
            "value": null,
            "raw": "1n",
            "bigint": "1"
          },
          {
            "type": "Literal",
            "start": 1042,
            "end": 1105,
            "value": "The result of (2n / {valueOf: function() {return 2n;}}) is 1n",
            "raw": "'The result of (2n / {valueOf: function() {return 2n;}}) is 1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1109,
      "end": 1252,
      "expression": {
        "type": "CallExpression",
        "start": 1109,
        "end": 1251,
        "callee": {
          "type": "MemberExpression",
          "start": 1109,
          "end": 1125,
          "object": {
            "type": "Identifier",
            "start": 1109,
            "end": 1115,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1116,
            "end": 1125,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1126,
            "end": 1178,
            "left": {
              "type": "ObjectExpression",
              "start": 1126,
              "end": 1173,
              "properties": [
                {
                  "type": "Property",
                  "start": 1130,
                  "end": 1171,
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "start": 1130,
                    "end": 1138,
                    "name": "toString"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1140,
                    "end": 1171,
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1151,
                      "end": 1171,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1157,
                          "end": 1167,
                          "argument": {
                            "type": "Literal",
                            "start": 1164,
                            "end": 1166,
                            "value": null,
                            "raw": "2n",
                            "bigint": "2"
                          }
                        }
                      ]
                    },
                    "expression": false
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false
                }
              ]
            },
            "operator": "/",
            "right": {
              "type": "Literal",
              "start": 1176,
              "end": 1178,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            }
          },
          {
            "type": "Literal",
            "start": 1180,
            "end": 1182,
            "value": null,
            "raw": "1n",
            "bigint": "1"
          },
          {
            "type": "Literal",
            "start": 1184,
            "end": 1250,
            "value": "The result of (({toString: function() {return 2n;}}) / 2n) is 1n",
            "raw": "'The result of (({toString: function() {return 2n;}}) / 2n) is 1n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1254,
      "end": 1395,
      "expression": {
        "type": "CallExpression",
        "start": 1254,
        "end": 1394,
        "callee": {
          "type": "MemberExpression",
          "start": 1254,
          "end": 1270,
          "object": {
            "type": "Identifier",
            "start": 1254,
            "end": 1260,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1261,
            "end": 1270,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1271,
            "end": 1323,
            "left": {
              "type": "Literal",
              "start": 1271,
              "end": 1273,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            },
            "operator": "/",
            "right": {
              "type": "ObjectExpression",
              "start": 1276,
              "end": 1323,
              "properties": [
                {
                  "type": "Property",
                  "start": 1280,
                  "end": 1321,
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "start": 1280,
                    "end": 1288,
                    "name": "toString"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1290,
                    "end": 1321,
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1301,
                      "end": 1321,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1307,
                          "end": 1317,
                          "argument": {
                            "type": "Literal",
                            "start": 1314,
                            "end": 1316,
                            "value": null,
                            "raw": "2n",
                            "bigint": "2"
                          }
                        }
                      ]
                    },
                    "expression": false
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1325,
            "end": 1327,
            "value": null,
            "raw": "1n",
            "bigint": "1"
          },
          {
            "type": "Literal",
            "start": 1329,
            "end": 1393,
            "value": "The result of (2n / {toString: function() {return 2n;}}) is 1n",
            "raw": "'The result of (2n / {toString: function() {return 2n;}}) is 1n'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}