{
  "type": "Program",
  "start": 0,
  "end": 859,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 283,
      "end": 318,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 287,
          "end": 317,
          "id": {
            "type": "Identifier",
            "start": 287,
            "end": 288,
            "name": "x"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 291,
            "end": 317,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 303,
              "end": 317,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 305,
                  "end": 315,
                  "argument": {
                    "type": "Literal",
                    "start": 311,
                    "end": 314,
                    "value": "x",
                    "raw": "\"x\""
                  }
                }
              ]
            },
            "expression": false
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 319,
      "end": 354,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 323,
          "end": 353,
          "id": {
            "type": "Identifier",
            "start": 323,
            "end": 324,
            "name": "y"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 327,
            "end": 353,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 339,
              "end": 353,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 341,
                  "end": 351,
                  "argument": {
                    "type": "Literal",
                    "start": 347,
                    "end": 350,
                    "value": "y",
                    "raw": "\"y\""
                  }
                }
              ]
            },
            "expression": false
          }
        }
      ]
    },
    {
      "type": "TryStatement",
      "start": 355,
      "end": 858,
      "block": {
        "type": "BlockStatement",
        "start": 359,
        "end": 528,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 364,
            "end": 374,
            "expression": {
              "type": "BinaryExpression",
              "start": 364,
              "end": 373,
              "left": {
                "type": "CallExpression",
                "start": 364,
                "end": 367,
                "callee": {
                  "type": "Identifier",
                  "start": 364,
                  "end": 365,
                  "name": "x"
                },
                "arguments": [],
                "optional": false
              },
              "operator": "/",
              "right": {
                "type": "CallExpression",
                "start": 370,
                "end": 373,
                "callee": {
                  "type": "Identifier",
                  "start": 370,
                  "end": 371,
                  "name": "y"
                },
                "arguments": [],
                "optional": false
              }
            }
          },
          {
            "type": "ThrowStatement",
            "start": 378,
            "end": 526,
            "argument": {
              "type": "NewExpression",
              "start": 384,
              "end": 525,
              "callee": {
                "type": "Identifier",
                "start": 388,
                "end": 400,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 401,
                  "end": 524,
                  "left": {
                    "type": "Literal",
                    "start": 401,
                    "end": 510,
                    "value": "#1.1: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() / y() throw \"x\". Actual: ",
                    "raw": "'#1.1: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() / y() throw \"x\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 513,
                    "end": 524,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 514,
                      "end": 523,
                      "left": {
                        "type": "CallExpression",
                        "start": 514,
                        "end": 517,
                        "callee": {
                          "type": "Identifier",
                          "start": 514,
                          "end": 515,
                          "name": "x"
                        },
                        "arguments": [],
                        "optional": false
                      },
                      "operator": "/",
                      "right": {
                        "type": "CallExpression",
                        "start": 520,
                        "end": 523,
                        "callee": {
                          "type": "Identifier",
                          "start": 520,
                          "end": 521,
                          "name": "y"
                        },
                        "arguments": [],
                        "optional": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 529,
        "end": 858,
        "param": {
          "type": "Identifier",
          "start": 536,
          "end": 537,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 539,
          "end": 858,
          "body": [
            {
              "type": "IfStatement",
              "start": 544,
              "end": 856,
              "test": {
                "type": "BinaryExpression",
                "start": 548,
                "end": 557,
                "left": {
                  "type": "Identifier",
                  "start": 548,
                  "end": 549,
                  "name": "e"
                },
                "operator": "===",
                "right": {
                  "type": "Literal",
                  "start": 554,
                  "end": 557,
                  "value": "y",
                  "raw": "\"y\""
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 559,
                "end": 667,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 566,
                    "end": 662,
                    "argument": {
                      "type": "NewExpression",
                      "start": 572,
                      "end": 661,
                      "callee": {
                        "type": "Identifier",
                        "start": 576,
                        "end": 588,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 589,
                          "end": 660,
                          "value": "#1.2: First expression is evaluated first, and then second expression",
                          "raw": "'#1.2: First expression is evaluated first, and then second expression'"
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": {
                "type": "BlockStatement",
                "start": 673,
                "end": 856,
                "body": [
                  {
                    "type": "IfStatement",
                    "start": 680,
                    "end": 851,
                    "test": {
                      "type": "BinaryExpression",
                      "start": 684,
                      "end": 693,
                      "left": {
                        "type": "Identifier",
                        "start": 684,
                        "end": 685,
                        "name": "e"
                      },
                      "operator": "!==",
                      "right": {
                        "type": "Literal",
                        "start": 690,
                        "end": 693,
                        "value": "x",
                        "raw": "\"x\""
                      }
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "start": 695,
                      "end": 851,
                      "body": [
                        {
                          "type": "ThrowStatement",
                          "start": 704,
                          "end": 844,
                          "argument": {
                            "type": "NewExpression",
                            "start": 710,
                            "end": 843,
                            "callee": {
                              "type": "Identifier",
                              "start": 714,
                              "end": 726,
                              "name": "Test262Error"
                            },
                            "arguments": [
                              {
                                "type": "BinaryExpression",
                                "start": 727,
                                "end": 842,
                                "left": {
                                  "type": "Literal",
                                  "start": 727,
                                  "end": 836,
                                  "value": "#1.3: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() / y() throw \"x\". Actual: ",
                                  "raw": "'#1.3: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() / y() throw \"x\". Actual: '"
                                },
                                "operator": "+",
                                "right": {
                                  "type": "ParenthesizedExpression",
                                  "start": 839,
                                  "end": 842,
                                  "expression": {
                                    "type": "Identifier",
                                    "start": 840,
                                    "end": 841,
                                    "name": "e"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "alternate": null
                  }
                ]
              }
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}