{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 365,
            "end": 370
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 371,
                "end": 372
              },
              "operator": "/",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 375,
                "end": 384
              },
              "start": 371,
              "end": 384
            }
          ],
          "optional": false,
          "start": 365,
          "end": 385
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 390,
          "end": 394
        },
        "start": 365,
        "end": 394
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 410,
                "end": 422
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: 1 / undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: 1 / undefined === Not-a-Number. Actual: '",
                    "start": 423,
                    "end": 469
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 473,
                        "end": 474
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 477,
                        "end": 486
                      },
                      "start": 473,
                      "end": 486
                    },
                    "start": 472,
                    "end": 487
                  },
                  "start": 423,
                  "end": 487
                }
              ],
              "start": 406,
              "end": 488
            },
            "start": 400,
            "end": 489
          }
        ],
        "start": 396,
        "end": 491
      },
      "alternate": null,
      "start": 361,
      "end": 491
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 507,
            "end": 512
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 513,
                "end": 522
              },
              "operator": "/",
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 525,
                "end": 526
              },
              "start": 513,
              "end": 526
            }
          ],
          "optional": false,
          "start": 507,
          "end": 527
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 532,
          "end": 536
        },
        "start": 507,
        "end": 536
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 552,
                "end": 564
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: undefined / 1 === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined / 1 === Not-a-Number. Actual: '",
                    "start": 565,
                    "end": 611
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 615,
                        "end": 624
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 627,
                        "end": 628
                      },
                      "start": 615,
                      "end": 628
                    },
                    "start": 614,
                    "end": 629
                  },
                  "start": 565,
                  "end": 629
                }
              ],
              "start": 548,
              "end": 630
            },
            "start": 542,
            "end": 631
          }
        ],
        "start": 538,
        "end": 633
      },
      "alternate": null,
      "start": 503,
      "end": 633
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 649,
            "end": 654
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 659,
                  "end": 665
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 666,
                    "end": 667
                  }
                ],
                "start": 655,
                "end": 668
              },
              "operator": "/",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 671,
                "end": 680
              },
              "start": 655,
              "end": 680
            }
          ],
          "optional": false,
          "start": 649,
          "end": 681
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 686,
          "end": 690
        },
        "start": 649,
        "end": 690
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 706,
                "end": 718
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new Number(1) / undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: new Number(1) / undefined === Not-a-Number. Actual: '",
                    "start": 719,
                    "end": 777
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 785,
                          "end": 791
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 792,
                            "end": 793
                          }
                        ],
                        "start": 781,
                        "end": 794
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 797,
                        "end": 806
                      },
                      "start": 781,
                      "end": 806
                    },
                    "start": 780,
                    "end": 807
                  },
                  "start": 719,
                  "end": 807
                }
              ],
              "start": 702,
              "end": 808
            },
            "start": 696,
            "end": 809
          }
        ],
        "start": 692,
        "end": 811
      },
      "alternate": null,
      "start": 645,
      "end": 811
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 827,
            "end": 832
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 833,
                "end": 842
              },
              "operator": "/",
              "right": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 849,
                  "end": 855
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 856,
                    "end": 857
                  }
                ],
                "start": 845,
                "end": 858
              },
              "start": 833,
              "end": 858
            }
          ],
          "optional": false,
          "start": 827,
          "end": 859
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 864,
          "end": 868
        },
        "start": 827,
        "end": 868
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 884,
                "end": 896
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: undefined / new Number(1) === Not-a-Number. Actual: ",
                    "raw": "'#4: undefined / new Number(1) === Not-a-Number. Actual: '",
                    "start": 897,
                    "end": 955
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 959,
                        "end": 968
                      },
                      "operator": "/",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 975,
                          "end": 981
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 982,
                            "end": 983
                          }
                        ],
                        "start": 971,
                        "end": 984
                      },
                      "start": 959,
                      "end": 984
                    },
                    "start": 958,
                    "end": 985
                  },
                  "start": 897,
                  "end": 985
                }
              ],
              "start": 880,
              "end": 986
            },
            "start": 874,
            "end": 987
          }
        ],
        "start": 870,
        "end": 989
      },
      "alternate": null,
      "start": 823,
      "end": 989
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 990
}