{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 335,
            "end": 340
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 341,
                  "end": 347
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 348,
                  "end": 351
                },
                "optional": false,
                "computed": false,
                "start": 341,
                "end": 351
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 354,
                  "end": 360
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 361,
                  "end": 364
                },
                "optional": false,
                "computed": false,
                "start": 354,
                "end": 364
              },
              "start": 341,
              "end": 364
            }
          ],
          "optional": false,
          "start": 335,
          "end": 365
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 370,
          "end": 374
        },
        "start": 335,
        "end": 374
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 390,
                "end": 402
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: NaN / NaN === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN / NaN === Not-a-Number. Actual: '",
                    "start": 403,
                    "end": 445
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 449,
                        "end": 452
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 455,
                        "end": 458
                      },
                      "start": 449,
                      "end": 458
                    },
                    "start": 448,
                    "end": 459
                  },
                  "start": 403,
                  "end": 459
                }
              ],
              "start": 386,
              "end": 460
            },
            "start": 380,
            "end": 461
          }
        ],
        "start": 376,
        "end": 463
      },
      "alternate": null,
      "start": 331,
      "end": 463
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 481,
            "end": 486
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 487,
                  "end": 493
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 494,
                  "end": 497
                },
                "optional": false,
                "computed": false,
                "start": 487,
                "end": 497
              },
              "operator": "/",
              "right": {
                "type": "UnaryExpression",
                "operator": "+",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 501,
                  "end": 502
                },
                "prefix": true,
                "start": 500,
                "end": 502
              },
              "start": 487,
              "end": 502
            }
          ],
          "optional": false,
          "start": 481,
          "end": 503
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 508,
          "end": 512
        },
        "start": 481,
        "end": 512
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 528,
                "end": 540
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: NaN / +0 === Not-a-Number. Actual: ",
                    "raw": "'#2: NaN / +0 === Not-a-Number. Actual: '",
                    "start": 541,
                    "end": 582
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 586,
                        "end": 589
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "+",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 593,
                          "end": 594
                        },
                        "prefix": true,
                        "start": 592,
                        "end": 594
                      },
                      "start": 586,
                      "end": 594
                    },
                    "start": 585,
                    "end": 595
                  },
                  "start": 541,
                  "end": 595
                }
              ],
              "start": 524,
              "end": 596
            },
            "start": 518,
            "end": 597
          }
        ],
        "start": 514,
        "end": 600
      },
      "alternate": null,
      "start": 477,
      "end": 600
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 617,
            "end": 622
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 623,
                  "end": 629
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 630,
                  "end": 633
                },
                "optional": false,
                "computed": false,
                "start": 623,
                "end": 633
              },
              "operator": "/",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 637,
                  "end": 638
                },
                "prefix": true,
                "start": 636,
                "end": 638
              },
              "start": 623,
              "end": 638
            }
          ],
          "optional": false,
          "start": 617,
          "end": 639
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 644,
          "end": 648
        },
        "start": 617,
        "end": 648
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 664,
                "end": 676
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: NaN / -0 === Not-a-Number. Actual: ",
                    "raw": "'#3: NaN / -0 === Not-a-Number. Actual: '",
                    "start": 677,
                    "end": 718
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 722,
                        "end": 725
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 729,
                          "end": 730
                        },
                        "prefix": true,
                        "start": 728,
                        "end": 730
                      },
                      "start": 722,
                      "end": 730
                    },
                    "start": 721,
                    "end": 731
                  },
                  "start": 677,
                  "end": 731
                }
              ],
              "start": 660,
              "end": 732
            },
            "start": 654,
            "end": 733
          }
        ],
        "start": 650,
        "end": 736
      },
      "alternate": null,
      "start": 613,
      "end": 736
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 753,
            "end": 758
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 759,
                  "end": 765
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 766,
                  "end": 769
                },
                "optional": false,
                "computed": false,
                "start": 759,
                "end": 769
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 772,
                  "end": 778
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 779,
                  "end": 796
                },
                "optional": false,
                "computed": false,
                "start": 772,
                "end": 796
              },
              "start": 759,
              "end": 796
            }
          ],
          "optional": false,
          "start": 753,
          "end": 797
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 802,
          "end": 806
        },
        "start": 753,
        "end": 806
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 822,
                "end": 834
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: NaN / Infinity === Not-a-Number. Actual: ",
                    "raw": "'#4: NaN / Infinity === Not-a-Number. Actual: '",
                    "start": 835,
                    "end": 882
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 886,
                        "end": 889
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 892,
                        "end": 900
                      },
                      "start": 886,
                      "end": 900
                    },
                    "start": 885,
                    "end": 901
                  },
                  "start": 835,
                  "end": 901
                }
              ],
              "start": 818,
              "end": 902
            },
            "start": 812,
            "end": 903
          }
        ],
        "start": 808,
        "end": 905
      },
      "alternate": null,
      "start": 749,
      "end": 905
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 922,
            "end": 927
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 928,
                  "end": 934
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 935,
                  "end": 938
                },
                "optional": false,
                "computed": false,
                "start": 928,
                "end": 938
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 941,
                  "end": 947
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 948,
                  "end": 965
                },
                "optional": false,
                "computed": false,
                "start": 941,
                "end": 965
              },
              "start": 928,
              "end": 965
            }
          ],
          "optional": false,
          "start": 922,
          "end": 966
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 971,
          "end": 975
        },
        "start": 922,
        "end": 975
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 991,
                "end": 1003
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: NaN / -Infinity === Not-a-Number. Actual: ",
                    "raw": "'#5: NaN / -Infinity === Not-a-Number. Actual: '",
                    "start": 1004,
                    "end": 1052
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1056,
                        "end": 1059
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Identifier",
                          "name": "Infinity",
                          "start": 1063,
                          "end": 1071
                        },
                        "prefix": true,
                        "start": 1062,
                        "end": 1071
                      },
                      "start": 1056,
                      "end": 1071
                    },
                    "start": 1055,
                    "end": 1072
                  },
                  "start": 1004,
                  "end": 1072
                }
              ],
              "start": 987,
              "end": 1073
            },
            "start": 981,
            "end": 1074
          }
        ],
        "start": 977,
        "end": 1077
      },
      "alternate": null,
      "start": 918,
      "end": 1077
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1094,
            "end": 1099
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1100,
                  "end": 1106
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1107,
                  "end": 1110
                },
                "optional": false,
                "computed": false,
                "start": 1100,
                "end": 1110
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1113,
                  "end": 1119
                },
                "property": {
                  "type": "Identifier",
                  "name": "MAX_VALUE",
                  "start": 1120,
                  "end": 1129
                },
                "optional": false,
                "computed": false,
                "start": 1113,
                "end": 1129
              },
              "start": 1100,
              "end": 1129
            }
          ],
          "optional": false,
          "start": 1094,
          "end": 1130
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1135,
          "end": 1139
        },
        "start": 1094,
        "end": 1139
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1155,
                "end": 1167
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: NaN / Number.MAX_VALUE === Not-a-Number. Actual: ",
                    "raw": "'#6: NaN / Number.MAX_VALUE === Not-a-Number. Actual: '",
                    "start": 1168,
                    "end": 1223
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1227,
                        "end": 1230
                      },
                      "operator": "/",
                      "right": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1233,
                          "end": 1239
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MAX_VALUE",
                          "start": 1240,
                          "end": 1249
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1233,
                        "end": 1249
                      },
                      "start": 1227,
                      "end": 1249
                    },
                    "start": 1226,
                    "end": 1250
                  },
                  "start": 1168,
                  "end": 1250
                }
              ],
              "start": 1151,
              "end": 1251
            },
            "start": 1145,
            "end": 1252
          }
        ],
        "start": 1141,
        "end": 1254
      },
      "alternate": null,
      "start": 1090,
      "end": 1254
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1271,
            "end": 1276
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1277,
                  "end": 1283
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1284,
                  "end": 1287
                },
                "optional": false,
                "computed": false,
                "start": 1277,
                "end": 1287
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1290,
                  "end": 1296
                },
                "property": {
                  "type": "Identifier",
                  "name": "MIN_VALUE",
                  "start": 1297,
                  "end": 1306
                },
                "optional": false,
                "computed": false,
                "start": 1290,
                "end": 1306
              },
              "start": 1277,
              "end": 1306
            }
          ],
          "optional": false,
          "start": 1271,
          "end": 1307
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1312,
          "end": 1316
        },
        "start": 1271,
        "end": 1316
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1332,
                "end": 1344
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: NaN / Number.MIN_VALUE === Not-a-Number. Actual: ",
                    "raw": "'#7: NaN / Number.MIN_VALUE === Not-a-Number. Actual: '",
                    "start": 1345,
                    "end": 1400
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1404,
                        "end": 1407
                      },
                      "operator": "/",
                      "right": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1410,
                          "end": 1416
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MIN_VALUE",
                          "start": 1417,
                          "end": 1426
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1410,
                        "end": 1426
                      },
                      "start": 1404,
                      "end": 1426
                    },
                    "start": 1403,
                    "end": 1427
                  },
                  "start": 1345,
                  "end": 1427
                }
              ],
              "start": 1328,
              "end": 1428
            },
            "start": 1322,
            "end": 1429
          }
        ],
        "start": 1318,
        "end": 1432
      },
      "alternate": null,
      "start": 1267,
      "end": 1432
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1448,
            "end": 1453
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1454,
                  "end": 1460
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1461,
                  "end": 1464
                },
                "optional": false,
                "computed": false,
                "start": 1454,
                "end": 1464
              },
              "operator": "/",
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1467,
                "end": 1468
              },
              "start": 1454,
              "end": 1468
            }
          ],
          "optional": false,
          "start": 1448,
          "end": 1469
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1474,
          "end": 1478
        },
        "start": 1448,
        "end": 1478
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1494,
                "end": 1506
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: NaN / 1 === Not-a-Number. Actual: ",
                    "raw": "'#8: NaN / 1 === Not-a-Number. Actual: '",
                    "start": 1507,
                    "end": 1547
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1551,
                        "end": 1554
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1557,
                        "end": 1558
                      },
                      "start": 1551,
                      "end": 1558
                    },
                    "start": 1550,
                    "end": 1559
                  },
                  "start": 1507,
                  "end": 1559
                }
              ],
              "start": 1490,
              "end": 1560
            },
            "start": 1484,
            "end": 1561
          }
        ],
        "start": 1480,
        "end": 1565
      },
      "alternate": null,
      "start": 1444,
      "end": 1565
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1566
}