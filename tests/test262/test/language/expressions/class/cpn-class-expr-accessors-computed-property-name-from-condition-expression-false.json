{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "C",
            "start": 907,
            "end": 908
          },
          "init": {
            "type": "ClassExpression",
            "decorators": [],
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "body": [
                {
                  "type": "MethodDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 926,
                      "end": 931
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 934,
                      "end": 935
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 938,
                      "end": 939
                    },
                    "start": 926,
                    "end": 939
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 956,
                            "end": 957
                          },
                          "start": 949,
                          "end": 958
                        }
                      ],
                      "start": 943,
                      "end": 962
                    },
                    "expression": false,
                    "start": 940,
                    "end": 962
                  },
                  "kind": "get",
                  "computed": true,
                  "static": false,
                  "start": 921,
                  "end": 962
                },
                {
                  "type": "MethodDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 971,
                      "end": 976
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 979,
                      "end": 980
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 983,
                      "end": 984
                    },
                    "start": 971,
                    "end": 984
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "v",
                        "start": 986,
                        "end": 987
                      }
                    ],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1002,
                            "end": 1003
                          },
                          "start": 995,
                          "end": 1004
                        }
                      ],
                      "start": 989,
                      "end": 1008
                    },
                    "expression": false,
                    "start": 985,
                    "end": 1008
                  },
                  "kind": "set",
                  "computed": true,
                  "static": false,
                  "start": 966,
                  "end": 1008
                },
                {
                  "type": "MethodDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 1024,
                      "end": 1029
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1032,
                      "end": 1033
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1036,
                      "end": 1037
                    },
                    "start": 1024,
                    "end": 1037
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1054,
                            "end": 1055
                          },
                          "start": 1047,
                          "end": 1056
                        }
                      ],
                      "start": 1041,
                      "end": 1060
                    },
                    "expression": false,
                    "start": 1038,
                    "end": 1060
                  },
                  "kind": "get",
                  "computed": true,
                  "static": true,
                  "start": 1012,
                  "end": 1060
                },
                {
                  "type": "MethodDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 1076,
                      "end": 1081
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1084,
                      "end": 1085
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1088,
                      "end": 1089
                    },
                    "start": 1076,
                    "end": 1089
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "v",
                        "start": 1091,
                        "end": 1092
                      }
                    ],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1107,
                            "end": 1108
                          },
                          "start": 1100,
                          "end": 1109
                        }
                      ],
                      "start": 1094,
                      "end": 1113
                    },
                    "expression": false,
                    "start": 1090,
                    "end": 1113
                  },
                  "kind": "set",
                  "computed": true,
                  "static": true,
                  "start": 1064,
                  "end": 1113
                }
              ],
              "start": 917,
              "end": 1115
            },
            "start": 911,
            "end": 1115
          },
          "start": 907,
          "end": 1115
        }
      ],
      "start": 903,
      "end": 1116
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c",
            "start": 1122,
            "end": 1123
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "C",
              "start": 1130,
              "end": 1131
            },
            "arguments": [],
            "start": 1126,
            "end": 1133
          },
          "start": 1122,
          "end": 1133
        }
      ],
      "start": 1118,
      "end": 1134
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1136,
            "end": 1142
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1143,
            "end": 1152
          },
          "optional": false,
          "computed": false,
          "start": 1136,
          "end": 1152
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "c",
              "start": 1156,
              "end": 1157
            },
            "property": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1158,
                "end": 1163
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1166,
                "end": 1167
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1170,
                "end": 1171
              },
              "start": 1158,
              "end": 1171
            },
            "optional": false,
            "computed": true,
            "start": 1156,
            "end": 1172
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1176,
            "end": 1177
          }
        ],
        "optional": false,
        "start": 1136,
        "end": 1179
      },
      "start": 1136,
      "end": 1180
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1181,
            "end": 1187
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1188,
            "end": 1197
          },
          "optional": false,
          "computed": false,
          "start": 1181,
          "end": 1197
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1201,
                "end": 1202
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1203,
                  "end": 1208
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1211,
                  "end": 1212
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1215,
                  "end": 1216
                },
                "start": 1203,
                "end": 1216
              },
              "optional": false,
              "computed": true,
              "start": 1201,
              "end": 1217
            },
            "right": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1220,
              "end": 1221
            },
            "start": 1201,
            "end": 1221
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1225,
            "end": 1226
          }
        ],
        "optional": false,
        "start": 1181,
        "end": 1228
      },
      "start": 1181,
      "end": 1229
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1231,
            "end": 1237
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1238,
            "end": 1247
          },
          "optional": false,
          "computed": false,
          "start": 1231,
          "end": 1247
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "C",
              "start": 1251,
              "end": 1252
            },
            "property": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1253,
                "end": 1258
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1261,
                "end": 1262
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1265,
                "end": 1266
              },
              "start": 1253,
              "end": 1266
            },
            "optional": false,
            "computed": true,
            "start": 1251,
            "end": 1267
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1271,
            "end": 1272
          }
        ],
        "optional": false,
        "start": 1231,
        "end": 1274
      },
      "start": 1231,
      "end": 1275
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1276,
            "end": 1282
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1283,
            "end": 1292
          },
          "optional": false,
          "computed": false,
          "start": 1276,
          "end": 1292
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1296,
                "end": 1297
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1298,
                  "end": 1303
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1306,
                  "end": 1307
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1310,
                  "end": 1311
                },
                "start": 1298,
                "end": 1311
              },
              "optional": false,
              "computed": true,
              "start": 1296,
              "end": 1312
            },
            "right": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1315,
              "end": 1316
            },
            "start": 1296,
            "end": 1316
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1320,
            "end": 1321
          }
        ],
        "optional": false,
        "start": 1276,
        "end": 1323
      },
      "start": 1276,
      "end": 1324
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1325,
            "end": 1331
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1332,
            "end": 1341
          },
          "optional": false,
          "computed": false,
          "start": 1325,
          "end": 1341
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "c",
              "start": 1345,
              "end": 1346
            },
            "property": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1347,
                "end": 1353
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "Literal",
                    "value": false,
                    "raw": "false",
                    "start": 1354,
                    "end": 1359
                  },
                  "consequent": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1362,
                    "end": 1363
                  },
                  "alternate": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 1366,
                    "end": 1367
                  },
                  "start": 1354,
                  "end": 1367
                }
              ],
              "optional": false,
              "start": 1347,
              "end": 1368
            },
            "optional": false,
            "computed": true,
            "start": 1345,
            "end": 1369
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1373,
            "end": 1374
          }
        ],
        "optional": false,
        "start": 1325,
        "end": 1376
      },
      "start": 1325,
      "end": 1377
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1378,
            "end": 1384
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1385,
            "end": 1394
          },
          "optional": false,
          "computed": false,
          "start": 1378,
          "end": 1394
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1398,
                "end": 1399
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1400,
                  "end": 1406
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 1407,
                      "end": 1412
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1415,
                      "end": 1416
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1419,
                      "end": 1420
                    },
                    "start": 1407,
                    "end": 1420
                  }
                ],
                "optional": false,
                "start": 1400,
                "end": 1421
              },
              "optional": false,
              "computed": true,
              "start": 1398,
              "end": 1422
            },
            "right": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1425,
              "end": 1426
            },
            "start": 1398,
            "end": 1426
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1430,
            "end": 1431
          }
        ],
        "optional": false,
        "start": 1378,
        "end": 1433
      },
      "start": 1378,
      "end": 1434
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1436,
            "end": 1442
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1443,
            "end": 1452
          },
          "optional": false,
          "computed": false,
          "start": 1436,
          "end": 1452
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "C",
              "start": 1456,
              "end": 1457
            },
            "property": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1458,
                "end": 1464
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "Literal",
                    "value": false,
                    "raw": "false",
                    "start": 1465,
                    "end": 1470
                  },
                  "consequent": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1473,
                    "end": 1474
                  },
                  "alternate": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 1477,
                    "end": 1478
                  },
                  "start": 1465,
                  "end": 1478
                }
              ],
              "optional": false,
              "start": 1458,
              "end": 1479
            },
            "optional": false,
            "computed": true,
            "start": 1456,
            "end": 1480
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1484,
            "end": 1485
          }
        ],
        "optional": false,
        "start": 1436,
        "end": 1487
      },
      "start": 1436,
      "end": 1488
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1489,
            "end": 1495
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1496,
            "end": 1505
          },
          "optional": false,
          "computed": false,
          "start": 1489,
          "end": 1505
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1509,
                "end": 1510
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1511,
                  "end": 1517
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 1518,
                      "end": 1523
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1526,
                      "end": 1527
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1530,
                      "end": 1531
                    },
                    "start": 1518,
                    "end": 1531
                  }
                ],
                "optional": false,
                "start": 1511,
                "end": 1532
              },
              "optional": false,
              "computed": true,
              "start": 1509,
              "end": 1533
            },
            "right": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1536,
              "end": 1537
            },
            "start": 1509,
            "end": 1537
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1541,
            "end": 1542
          }
        ],
        "optional": false,
        "start": 1489,
        "end": 1544
      },
      "start": 1489,
      "end": 1545
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1546
}