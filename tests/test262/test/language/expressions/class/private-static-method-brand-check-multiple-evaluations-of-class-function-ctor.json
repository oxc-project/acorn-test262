{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "classStringExpression",
            "start": 1010,
            "end": 1031
          },
          "init": {
            "type": "TemplateLiteral",
            "quasis": [
              {
                "type": "TemplateElement",
                "value": {
                  "raw": "\nreturn class {\n  static #m() { return 'test262'; }\n\n  static access() {\n    return this.#m();\n  }\n}\n",
                  "cooked": "\nreturn class {\n  static #m() { return 'test262'; }\n\n  static access() {\n    return this.#m();\n  }\n}\n"
                },
                "tail": true,
                "start": 1035,
                "end": 1136
              }
            ],
            "expressions": [],
            "start": 1034,
            "end": 1137
          },
          "start": 1010,
          "end": 1137
        }
      ],
      "start": 1006,
      "end": 1138
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "createClass",
            "start": 1144,
            "end": 1155
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "let",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "classFactoryFunction",
                        "start": 1178,
                        "end": 1198
                      },
                      "init": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Function",
                          "start": 1205,
                          "end": 1213
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "classStringExpression",
                            "start": 1214,
                            "end": 1235
                          }
                        ],
                        "start": 1201,
                        "end": 1236
                      },
                      "start": 1178,
                      "end": 1236
                    }
                  ],
                  "start": 1174,
                  "end": 1237
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "classFactoryFunction",
                      "start": 1247,
                      "end": 1267
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 1247,
                    "end": 1269
                  },
                  "start": 1240,
                  "end": 1270
                }
              ],
              "start": 1170,
              "end": 1272
            },
            "expression": false,
            "start": 1158,
            "end": 1272
          },
          "start": 1144,
          "end": 1272
        }
      ],
      "start": 1140,
      "end": 1273
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "C1",
            "start": 1279,
            "end": 1281
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "createClass",
              "start": 1284,
              "end": 1295
            },
            "arguments": [],
            "optional": false,
            "start": 1284,
            "end": 1297
          },
          "start": 1279,
          "end": 1297
        }
      ],
      "start": 1275,
      "end": 1298
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "C2",
            "start": 1303,
            "end": 1305
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "createClass",
              "start": 1308,
              "end": 1319
            },
            "arguments": [],
            "optional": false,
            "start": 1308,
            "end": 1321
          },
          "start": 1303,
          "end": 1321
        }
      ],
      "start": 1299,
      "end": 1322
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1324,
            "end": 1330
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1331,
            "end": 1340
          },
          "optional": false,
          "computed": false,
          "start": 1324,
          "end": 1340
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C1",
                "start": 1341,
                "end": 1343
              },
              "property": {
                "type": "Identifier",
                "name": "access",
                "start": 1344,
                "end": 1350
              },
              "optional": false,
              "computed": false,
              "start": 1341,
              "end": 1350
            },
            "arguments": [],
            "optional": false,
            "start": 1341,
            "end": 1352
          },
          {
            "type": "Literal",
            "value": "test262",
            "raw": "'test262'",
            "start": 1354,
            "end": 1363
          }
        ],
        "optional": false,
        "start": 1324,
        "end": 1364
      },
      "start": 1324,
      "end": 1365
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1366,
            "end": 1372
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1373,
            "end": 1382
          },
          "optional": false,
          "computed": false,
          "start": 1366,
          "end": 1382
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C2",
                "start": 1383,
                "end": 1385
              },
              "property": {
                "type": "Identifier",
                "name": "access",
                "start": 1386,
                "end": 1392
              },
              "optional": false,
              "computed": false,
              "start": 1383,
              "end": 1392
            },
            "arguments": [],
            "optional": false,
            "start": 1383,
            "end": 1394
          },
          {
            "type": "Literal",
            "value": "test262",
            "raw": "'test262'",
            "start": 1396,
            "end": 1405
          }
        ],
        "optional": false,
        "start": 1366,
        "end": 1406
      },
      "start": 1366,
      "end": 1407
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1409,
            "end": 1415
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1416,
            "end": 1422
          },
          "optional": false,
          "computed": false,
          "start": 1409,
          "end": 1422
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1423,
            "end": 1432
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "C1",
                          "start": 1449,
                          "end": 1451
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "access",
                          "start": 1452,
                          "end": 1458
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1449,
                        "end": 1458
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "call",
                        "start": 1459,
                        "end": 1463
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1449,
                      "end": 1463
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "C2",
                        "start": 1464,
                        "end": 1466
                      }
                    ],
                    "optional": false,
                    "start": 1449,
                    "end": 1467
                  },
                  "start": 1449,
                  "end": 1468
                }
              ],
              "start": 1445,
              "end": 1470
            },
            "expression": false,
            "start": 1434,
            "end": 1470
          },
          {
            "type": "Literal",
            "value": "invalid access of c1 private static method",
            "raw": "'invalid access of c1 private static method'",
            "start": 1472,
            "end": 1516
          }
        ],
        "optional": false,
        "start": 1409,
        "end": 1517
      },
      "start": 1409,
      "end": 1518
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1520,
            "end": 1526
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1527,
            "end": 1533
          },
          "optional": false,
          "computed": false,
          "start": 1520,
          "end": 1533
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1534,
            "end": 1543
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "C2",
                          "start": 1560,
                          "end": 1562
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "access",
                          "start": 1563,
                          "end": 1569
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1560,
                        "end": 1569
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "call",
                        "start": 1570,
                        "end": 1574
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1560,
                      "end": 1574
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "C1",
                        "start": 1575,
                        "end": 1577
                      }
                    ],
                    "optional": false,
                    "start": 1560,
                    "end": 1578
                  },
                  "start": 1560,
                  "end": 1579
                }
              ],
              "start": 1556,
              "end": 1581
            },
            "expression": false,
            "start": 1545,
            "end": 1581
          },
          {
            "type": "Literal",
            "value": "invalid access of c2 private static method",
            "raw": "'invalid access of c2 private static method'",
            "start": 1583,
            "end": 1627
          }
        ],
        "optional": false,
        "start": 1520,
        "end": 1628
      },
      "start": 1520,
      "end": 1629
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1630
}