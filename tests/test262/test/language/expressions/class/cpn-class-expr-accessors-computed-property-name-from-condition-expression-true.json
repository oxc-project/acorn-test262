{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "C",
            "start": 906,
            "end": 907
          },
          "init": {
            "type": "ClassExpression",
            "decorators": [],
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "body": [
                {
                  "type": "MethodDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 925,
                      "end": 929
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 932,
                      "end": 933
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 936,
                      "end": 937
                    },
                    "start": 925,
                    "end": 937
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 954,
                            "end": 955
                          },
                          "start": 947,
                          "end": 956
                        }
                      ],
                      "start": 941,
                      "end": 960
                    },
                    "expression": false,
                    "start": 938,
                    "end": 960
                  },
                  "kind": "get",
                  "computed": true,
                  "static": false,
                  "start": 920,
                  "end": 960
                },
                {
                  "type": "MethodDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 969,
                      "end": 973
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 976,
                      "end": 977
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 980,
                      "end": 981
                    },
                    "start": 969,
                    "end": 981
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "v",
                        "start": 983,
                        "end": 984
                      }
                    ],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 999,
                            "end": 1000
                          },
                          "start": 992,
                          "end": 1001
                        }
                      ],
                      "start": 986,
                      "end": 1005
                    },
                    "expression": false,
                    "start": 982,
                    "end": 1005
                  },
                  "kind": "set",
                  "computed": true,
                  "static": false,
                  "start": 964,
                  "end": 1005
                },
                {
                  "type": "MethodDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 1021,
                      "end": 1025
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1028,
                      "end": 1029
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1032,
                      "end": 1033
                    },
                    "start": 1021,
                    "end": 1033
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 1050,
                            "end": 1051
                          },
                          "start": 1043,
                          "end": 1052
                        }
                      ],
                      "start": 1037,
                      "end": 1056
                    },
                    "expression": false,
                    "start": 1034,
                    "end": 1056
                  },
                  "kind": "get",
                  "computed": true,
                  "static": true,
                  "start": 1009,
                  "end": 1056
                },
                {
                  "type": "MethodDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 1072,
                      "end": 1076
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1079,
                      "end": 1080
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1083,
                      "end": 1084
                    },
                    "start": 1072,
                    "end": 1084
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "v",
                        "start": 1086,
                        "end": 1087
                      }
                    ],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 1102,
                            "end": 1103
                          },
                          "start": 1095,
                          "end": 1104
                        }
                      ],
                      "start": 1089,
                      "end": 1108
                    },
                    "expression": false,
                    "start": 1085,
                    "end": 1108
                  },
                  "kind": "set",
                  "computed": true,
                  "static": true,
                  "start": 1060,
                  "end": 1108
                }
              ],
              "start": 916,
              "end": 1110
            },
            "start": 910,
            "end": 1110
          },
          "start": 906,
          "end": 1110
        }
      ],
      "start": 902,
      "end": 1111
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c",
            "start": 1117,
            "end": 1118
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "C",
              "start": 1125,
              "end": 1126
            },
            "arguments": [],
            "start": 1121,
            "end": 1128
          },
          "start": 1117,
          "end": 1128
        }
      ],
      "start": 1113,
      "end": 1129
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1131,
            "end": 1137
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1138,
            "end": 1147
          },
          "optional": false,
          "computed": false,
          "start": 1131,
          "end": 1147
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "c",
              "start": 1151,
              "end": 1152
            },
            "property": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 1153,
                "end": 1157
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1160,
                "end": 1161
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1164,
                "end": 1165
              },
              "start": 1153,
              "end": 1165
            },
            "optional": false,
            "computed": true,
            "start": 1151,
            "end": 1166
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1170,
            "end": 1171
          }
        ],
        "optional": false,
        "start": 1131,
        "end": 1173
      },
      "start": 1131,
      "end": 1174
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1175,
            "end": 1181
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1182,
            "end": 1191
          },
          "optional": false,
          "computed": false,
          "start": 1175,
          "end": 1191
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1195,
                "end": 1196
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1197,
                  "end": 1201
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1204,
                  "end": 1205
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1208,
                  "end": 1209
                },
                "start": 1197,
                "end": 1209
              },
              "optional": false,
              "computed": true,
              "start": 1195,
              "end": 1210
            },
            "right": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1213,
              "end": 1214
            },
            "start": 1195,
            "end": 1214
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1218,
            "end": 1219
          }
        ],
        "optional": false,
        "start": 1175,
        "end": 1221
      },
      "start": 1175,
      "end": 1222
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1224,
            "end": 1230
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1231,
            "end": 1240
          },
          "optional": false,
          "computed": false,
          "start": 1224,
          "end": 1240
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "C",
              "start": 1244,
              "end": 1245
            },
            "property": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 1246,
                "end": 1250
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1253,
                "end": 1254
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1257,
                "end": 1258
              },
              "start": 1246,
              "end": 1258
            },
            "optional": false,
            "computed": true,
            "start": 1244,
            "end": 1259
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1263,
            "end": 1264
          }
        ],
        "optional": false,
        "start": 1224,
        "end": 1266
      },
      "start": 1224,
      "end": 1267
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1268,
            "end": 1274
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1275,
            "end": 1284
          },
          "optional": false,
          "computed": false,
          "start": 1268,
          "end": 1284
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1288,
                "end": 1289
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1290,
                  "end": 1294
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1297,
                  "end": 1298
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1301,
                  "end": 1302
                },
                "start": 1290,
                "end": 1302
              },
              "optional": false,
              "computed": true,
              "start": 1288,
              "end": 1303
            },
            "right": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1306,
              "end": 1307
            },
            "start": 1288,
            "end": 1307
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1311,
            "end": 1312
          }
        ],
        "optional": false,
        "start": 1268,
        "end": 1314
      },
      "start": 1268,
      "end": 1315
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1316,
            "end": 1322
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1323,
            "end": 1332
          },
          "optional": false,
          "computed": false,
          "start": 1316,
          "end": 1332
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "c",
              "start": 1336,
              "end": 1337
            },
            "property": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1338,
                "end": 1344
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 1345,
                    "end": 1349
                  },
                  "consequent": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1352,
                    "end": 1353
                  },
                  "alternate": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 1356,
                    "end": 1357
                  },
                  "start": 1345,
                  "end": 1357
                }
              ],
              "optional": false,
              "start": 1338,
              "end": 1358
            },
            "optional": false,
            "computed": true,
            "start": 1336,
            "end": 1359
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1363,
            "end": 1364
          }
        ],
        "optional": false,
        "start": 1316,
        "end": 1366
      },
      "start": 1316,
      "end": 1367
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1368,
            "end": 1374
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1375,
            "end": 1384
          },
          "optional": false,
          "computed": false,
          "start": 1368,
          "end": 1384
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1388,
                "end": 1389
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1390,
                  "end": 1396
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 1397,
                      "end": 1401
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1404,
                      "end": 1405
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1408,
                      "end": 1409
                    },
                    "start": 1397,
                    "end": 1409
                  }
                ],
                "optional": false,
                "start": 1390,
                "end": 1410
              },
              "optional": false,
              "computed": true,
              "start": 1388,
              "end": 1411
            },
            "right": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1414,
              "end": 1415
            },
            "start": 1388,
            "end": 1415
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1419,
            "end": 1420
          }
        ],
        "optional": false,
        "start": 1368,
        "end": 1422
      },
      "start": 1368,
      "end": 1423
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1425,
            "end": 1431
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1432,
            "end": 1441
          },
          "optional": false,
          "computed": false,
          "start": 1425,
          "end": 1441
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "C",
              "start": 1445,
              "end": 1446
            },
            "property": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1447,
                "end": 1453
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 1454,
                    "end": 1458
                  },
                  "consequent": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1461,
                    "end": 1462
                  },
                  "alternate": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 1465,
                    "end": 1466
                  },
                  "start": 1454,
                  "end": 1466
                }
              ],
              "optional": false,
              "start": 1447,
              "end": 1467
            },
            "optional": false,
            "computed": true,
            "start": 1445,
            "end": 1468
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1472,
            "end": 1473
          }
        ],
        "optional": false,
        "start": 1425,
        "end": 1475
      },
      "start": 1425,
      "end": 1476
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1477,
            "end": 1483
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1484,
            "end": 1493
          },
          "optional": false,
          "computed": false,
          "start": 1477,
          "end": 1493
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1497,
                "end": 1498
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1499,
                  "end": 1505
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 1506,
                      "end": 1510
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1513,
                      "end": 1514
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1517,
                      "end": 1518
                    },
                    "start": 1506,
                    "end": 1518
                  }
                ],
                "optional": false,
                "start": 1499,
                "end": 1519
              },
              "optional": false,
              "computed": true,
              "start": 1497,
              "end": 1520
            },
            "right": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1523,
              "end": 1524
            },
            "start": 1497,
            "end": 1524
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1528,
            "end": 1529
          }
        ],
        "optional": false,
        "start": 1477,
        "end": 1531
      },
      "start": 1477,
      "end": 1532
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1533
}