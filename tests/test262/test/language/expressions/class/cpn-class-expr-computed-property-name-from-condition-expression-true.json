{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "C",
            "start": 896,
            "end": 897
          },
          "init": {
            "type": "ClassExpression",
            "decorators": [],
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "body": [
                {
                  "type": "MethodDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 911,
                      "end": 915
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 918,
                      "end": 919
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 922,
                      "end": 923
                    },
                    "start": 911,
                    "end": 923
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 940,
                            "end": 941
                          },
                          "start": 933,
                          "end": 942
                        }
                      ],
                      "start": 927,
                      "end": 946
                    },
                    "expression": false,
                    "start": 924,
                    "end": 946
                  },
                  "kind": "method",
                  "computed": true,
                  "static": false,
                  "start": 910,
                  "end": 946
                },
                {
                  "type": "MethodDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 957,
                      "end": 961
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 964,
                      "end": 965
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 968,
                      "end": 969
                    },
                    "start": 957,
                    "end": 969
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 986,
                            "end": 987
                          },
                          "start": 979,
                          "end": 988
                        }
                      ],
                      "start": 973,
                      "end": 992
                    },
                    "expression": false,
                    "start": 970,
                    "end": 992
                  },
                  "kind": "method",
                  "computed": true,
                  "static": true,
                  "start": 949,
                  "end": 992
                }
              ],
              "start": 906,
              "end": 994
            },
            "start": 900,
            "end": 994
          },
          "start": 896,
          "end": 994
        }
      ],
      "start": 892,
      "end": 995
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c",
            "start": 1001,
            "end": 1002
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "C",
              "start": 1009,
              "end": 1010
            },
            "arguments": [],
            "start": 1005,
            "end": 1012
          },
          "start": 1001,
          "end": 1012
        }
      ],
      "start": 997,
      "end": 1013
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1015,
            "end": 1021
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1022,
            "end": 1031
          },
          "optional": false,
          "computed": false,
          "start": 1015,
          "end": 1031
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1035,
                "end": 1036
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1037,
                  "end": 1041
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1044,
                  "end": 1045
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1048,
                  "end": 1049
                },
                "start": 1037,
                "end": 1049
              },
              "optional": false,
              "computed": true,
              "start": 1035,
              "end": 1050
            },
            "arguments": [],
            "optional": false,
            "start": 1035,
            "end": 1052
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1056,
            "end": 1057
          }
        ],
        "optional": false,
        "start": 1015,
        "end": 1059
      },
      "start": 1015,
      "end": 1060
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1061,
            "end": 1067
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1068,
            "end": 1077
          },
          "optional": false,
          "computed": false,
          "start": 1061,
          "end": 1077
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1081,
                "end": 1082
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1083,
                  "end": 1087
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1090,
                  "end": 1091
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1094,
                  "end": 1095
                },
                "start": 1083,
                "end": 1095
              },
              "optional": false,
              "computed": true,
              "start": 1081,
              "end": 1096
            },
            "arguments": [],
            "optional": false,
            "start": 1081,
            "end": 1098
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1102,
            "end": 1103
          }
        ],
        "optional": false,
        "start": 1061,
        "end": 1105
      },
      "start": 1061,
      "end": 1106
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1107,
            "end": 1113
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1114,
            "end": 1123
          },
          "optional": false,
          "computed": false,
          "start": 1107,
          "end": 1123
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1127,
                "end": 1128
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1129,
                  "end": 1135
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 1136,
                      "end": 1140
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1143,
                      "end": 1144
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1147,
                      "end": 1148
                    },
                    "start": 1136,
                    "end": 1148
                  }
                ],
                "optional": false,
                "start": 1129,
                "end": 1149
              },
              "optional": false,
              "computed": true,
              "start": 1127,
              "end": 1150
            },
            "arguments": [],
            "optional": false,
            "start": 1127,
            "end": 1152
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1156,
            "end": 1157
          }
        ],
        "optional": false,
        "start": 1107,
        "end": 1159
      },
      "start": 1107,
      "end": 1160
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1161,
            "end": 1167
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1168,
            "end": 1177
          },
          "optional": false,
          "computed": false,
          "start": 1161,
          "end": 1177
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1181,
                "end": 1182
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1183,
                  "end": 1189
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 1190,
                      "end": 1194
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1197,
                      "end": 1198
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1201,
                      "end": 1202
                    },
                    "start": 1190,
                    "end": 1202
                  }
                ],
                "optional": false,
                "start": 1183,
                "end": 1203
              },
              "optional": false,
              "computed": true,
              "start": 1181,
              "end": 1204
            },
            "arguments": [],
            "optional": false,
            "start": 1181,
            "end": 1206
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1210,
            "end": 1211
          }
        ],
        "optional": false,
        "start": 1161,
        "end": 1213
      },
      "start": 1161,
      "end": 1214
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1215
}