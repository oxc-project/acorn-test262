{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "C",
            "start": 953,
            "end": 954
          },
          "init": {
            "type": "ClassExpression",
            "decorators": [],
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "body": [
                {
                  "type": "PropertyDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 968,
                      "end": 973
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 976,
                      "end": 977
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 980,
                      "end": 981
                    },
                    "start": 968,
                    "end": 981
                  },
                  "value": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 985,
                    "end": 986
                  },
                  "computed": true,
                  "static": false,
                  "start": 967,
                  "end": 987
                },
                {
                  "type": "PropertyDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 999,
                      "end": 1004
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1007,
                      "end": 1008
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1011,
                      "end": 1012
                    },
                    "start": 999,
                    "end": 1012
                  },
                  "value": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1016,
                    "end": 1017
                  },
                  "computed": true,
                  "static": true,
                  "start": 991,
                  "end": 1018
                }
              ],
              "start": 963,
              "end": 1020
            },
            "start": 957,
            "end": 1020
          },
          "start": 953,
          "end": 1020
        }
      ],
      "start": 949,
      "end": 1021
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c",
            "start": 1027,
            "end": 1028
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "C",
              "start": 1035,
              "end": 1036
            },
            "arguments": [],
            "start": 1031,
            "end": 1038
          },
          "start": 1027,
          "end": 1038
        }
      ],
      "start": 1023,
      "end": 1039
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1041,
            "end": 1047
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1048,
            "end": 1057
          },
          "optional": false,
          "computed": false,
          "start": 1041,
          "end": 1057
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "c",
              "start": 1061,
              "end": 1062
            },
            "property": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1063,
                "end": 1068
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1071,
                "end": 1072
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1075,
                "end": 1076
              },
              "start": 1063,
              "end": 1076
            },
            "optional": false,
            "computed": true,
            "start": 1061,
            "end": 1077
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1081,
            "end": 1082
          }
        ],
        "optional": false,
        "start": 1041,
        "end": 1084
      },
      "start": 1041,
      "end": 1085
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1086,
            "end": 1092
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1093,
            "end": 1102
          },
          "optional": false,
          "computed": false,
          "start": 1086,
          "end": 1102
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "C",
              "start": 1106,
              "end": 1107
            },
            "property": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1108,
                "end": 1113
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1116,
                "end": 1117
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1120,
                "end": 1121
              },
              "start": 1108,
              "end": 1121
            },
            "optional": false,
            "computed": true,
            "start": 1106,
            "end": 1122
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1126,
            "end": 1127
          }
        ],
        "optional": false,
        "start": 1086,
        "end": 1129
      },
      "start": 1086,
      "end": 1130
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1131,
            "end": 1137
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1138,
            "end": 1147
          },
          "optional": false,
          "computed": false,
          "start": 1131,
          "end": 1147
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "c",
              "start": 1151,
              "end": 1152
            },
            "property": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1153,
                "end": 1159
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "Literal",
                    "value": false,
                    "raw": "false",
                    "start": 1160,
                    "end": 1165
                  },
                  "consequent": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1168,
                    "end": 1169
                  },
                  "alternate": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 1172,
                    "end": 1173
                  },
                  "start": 1160,
                  "end": 1173
                }
              ],
              "optional": false,
              "start": 1153,
              "end": 1174
            },
            "optional": false,
            "computed": true,
            "start": 1151,
            "end": 1175
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1179,
            "end": 1180
          }
        ],
        "optional": false,
        "start": 1131,
        "end": 1182
      },
      "start": 1131,
      "end": 1183
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1184,
            "end": 1190
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1191,
            "end": 1200
          },
          "optional": false,
          "computed": false,
          "start": 1184,
          "end": 1200
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "C",
              "start": 1204,
              "end": 1205
            },
            "property": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1206,
                "end": 1212
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "Literal",
                    "value": false,
                    "raw": "false",
                    "start": 1213,
                    "end": 1218
                  },
                  "consequent": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1221,
                    "end": 1222
                  },
                  "alternate": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 1225,
                    "end": 1226
                  },
                  "start": 1213,
                  "end": 1226
                }
              ],
              "optional": false,
              "start": 1206,
              "end": 1227
            },
            "optional": false,
            "computed": true,
            "start": 1204,
            "end": 1228
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1232,
            "end": 1233
          }
        ],
        "optional": false,
        "start": 1184,
        "end": 1235
      },
      "start": 1184,
      "end": 1236
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1237
}