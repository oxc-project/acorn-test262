{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "callCount",
            "start": 2737,
            "end": 2746
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 2749,
            "end": 2750
          },
          "start": 2737,
          "end": 2750
        }
      ],
      "start": 2733,
      "end": 2751
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "C",
            "start": 2756,
            "end": 2757
          },
          "init": {
            "type": "ClassExpression",
            "decorators": [],
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "body": [
                {
                  "type": "MethodDefinition",
                  "decorators": [],
                  "key": {
                    "type": "Identifier",
                    "name": "method",
                    "start": 2771,
                    "end": 2777
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": true,
                    "async": false,
                    "params": [
                      {
                        "type": "AssignmentPattern",
                        "left": {
                          "type": "ArrayPattern",
                          "elements": [
                            {
                              "type": "AssignmentPattern",
                              "left": {
                                "type": "Identifier",
                                "name": "x",
                                "start": 2779,
                                "end": 2780
                              },
                              "right": {
                                "type": "Literal",
                                "value": 23,
                                "raw": "23",
                                "start": 2783,
                                "end": 2785
                              },
                              "start": 2779,
                              "end": 2785
                            }
                          ],
                          "start": 2778,
                          "end": 2786
                        },
                        "right": {
                          "type": "ArrayExpression",
                          "elements": [
                            null
                          ],
                          "start": 2789,
                          "end": 2792
                        },
                        "start": 2778,
                        "end": 2792
                      }
                    ],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "assert",
                                "start": 2800,
                                "end": 2806
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "sameValue",
                                "start": 2807,
                                "end": 2816
                              },
                              "optional": false,
                              "computed": false,
                              "start": 2800,
                              "end": 2816
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "x",
                                "start": 2817,
                                "end": 2818
                              },
                              {
                                "type": "Literal",
                                "value": 23,
                                "raw": "23",
                                "start": 2820,
                                "end": 2822
                              }
                            ],
                            "optional": false,
                            "start": 2800,
                            "end": 2823
                          },
                          "start": 2800,
                          "end": 2824
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "name": "callCount",
                              "start": 2854,
                              "end": 2863
                            },
                            "right": {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "Identifier",
                                "name": "callCount",
                                "start": 2866,
                                "end": 2875
                              },
                              "operator": "+",
                              "right": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "1",
                                "start": 2878,
                                "end": 2879
                              },
                              "start": 2866,
                              "end": 2879
                            },
                            "start": 2854,
                            "end": 2879
                          },
                          "start": 2854,
                          "end": 2880
                        }
                      ],
                      "start": 2794,
                      "end": 2884
                    },
                    "expression": false,
                    "start": 2777,
                    "end": 2884
                  },
                  "kind": "method",
                  "computed": false,
                  "static": false,
                  "start": 2770,
                  "end": 2884
                }
              ],
              "start": 2766,
              "end": 2886
            },
            "start": 2760,
            "end": 2886
          },
          "start": 2756,
          "end": 2886
        }
      ],
      "start": 2752,
      "end": 2887
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "C",
                  "start": 2893,
                  "end": 2894
                },
                "arguments": [],
                "start": 2889,
                "end": 2896
              },
              "property": {
                "type": "Identifier",
                "name": "method",
                "start": 2897,
                "end": 2903
              },
              "optional": false,
              "computed": false,
              "start": 2889,
              "end": 2903
            },
            "arguments": [],
            "optional": false,
            "start": 2889,
            "end": 2905
          },
          "property": {
            "type": "Identifier",
            "name": "next",
            "start": 2906,
            "end": 2910
          },
          "optional": false,
          "computed": false,
          "start": 2889,
          "end": 2910
        },
        "arguments": [],
        "optional": false,
        "start": 2889,
        "end": 2912
      },
      "start": 2889,
      "end": 2913
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2914,
            "end": 2920
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2921,
            "end": 2930
          },
          "optional": false,
          "computed": false,
          "start": 2914,
          "end": 2930
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "callCount",
            "start": 2931,
            "end": 2940
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 2942,
            "end": 2943
          },
          {
            "type": "Literal",
            "value": "method invoked exactly once",
            "raw": "'method invoked exactly once'",
            "start": 2945,
            "end": 2974
          }
        ],
        "optional": false,
        "start": 2914,
        "end": 2975
      },
      "start": 2914,
      "end": 2976
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2977
}