{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "C",
            "start": 960,
            "end": 961
          },
          "init": {
            "type": "ClassExpression",
            "decorators": [],
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "body": [
                {
                  "type": "PropertyDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 975,
                      "end": 979
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 982,
                      "end": 983
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 986,
                      "end": 987
                    },
                    "start": 975,
                    "end": 987
                  },
                  "value": {
                    "type": "ArrowFunctionExpression",
                    "expression": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 1010,
                            "end": 1011
                          },
                          "start": 1003,
                          "end": 1012
                        }
                      ],
                      "start": 997,
                      "end": 1016
                    },
                    "id": null,
                    "generator": false,
                    "start": 991,
                    "end": 1016
                  },
                  "computed": true,
                  "static": false,
                  "start": 974,
                  "end": 1017
                },
                {
                  "type": "PropertyDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 1029,
                      "end": 1033
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1036,
                      "end": 1037
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1040,
                      "end": 1041
                    },
                    "start": 1029,
                    "end": 1041
                  },
                  "value": {
                    "type": "ArrowFunctionExpression",
                    "expression": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 1064,
                            "end": 1065
                          },
                          "start": 1057,
                          "end": 1066
                        }
                      ],
                      "start": 1051,
                      "end": 1070
                    },
                    "id": null,
                    "generator": false,
                    "start": 1045,
                    "end": 1070
                  },
                  "computed": true,
                  "static": true,
                  "start": 1021,
                  "end": 1071
                }
              ],
              "start": 970,
              "end": 1073
            },
            "start": 964,
            "end": 1073
          },
          "start": 960,
          "end": 1073
        }
      ],
      "start": 956,
      "end": 1074
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c",
            "start": 1080,
            "end": 1081
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "C",
              "start": 1088,
              "end": 1089
            },
            "arguments": [],
            "start": 1084,
            "end": 1091
          },
          "start": 1080,
          "end": 1091
        }
      ],
      "start": 1076,
      "end": 1092
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1094,
            "end": 1100
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1101,
            "end": 1110
          },
          "optional": false,
          "computed": false,
          "start": 1094,
          "end": 1110
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1114,
                "end": 1115
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1116,
                  "end": 1120
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1123,
                  "end": 1124
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1127,
                  "end": 1128
                },
                "start": 1116,
                "end": 1128
              },
              "optional": false,
              "computed": true,
              "start": 1114,
              "end": 1129
            },
            "arguments": [],
            "optional": false,
            "start": 1114,
            "end": 1131
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1135,
            "end": 1136
          }
        ],
        "optional": false,
        "start": 1094,
        "end": 1138
      },
      "start": 1094,
      "end": 1139
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1140,
            "end": 1146
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1147,
            "end": 1156
          },
          "optional": false,
          "computed": false,
          "start": 1140,
          "end": 1156
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1160,
                "end": 1161
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1162,
                  "end": 1166
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1169,
                  "end": 1170
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1173,
                  "end": 1174
                },
                "start": 1162,
                "end": 1174
              },
              "optional": false,
              "computed": true,
              "start": 1160,
              "end": 1175
            },
            "arguments": [],
            "optional": false,
            "start": 1160,
            "end": 1177
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1181,
            "end": 1182
          }
        ],
        "optional": false,
        "start": 1140,
        "end": 1184
      },
      "start": 1140,
      "end": 1185
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1186,
            "end": 1192
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1193,
            "end": 1202
          },
          "optional": false,
          "computed": false,
          "start": 1186,
          "end": 1202
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1206,
                "end": 1207
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1208,
                  "end": 1214
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 1215,
                      "end": 1219
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1222,
                      "end": 1223
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1226,
                      "end": 1227
                    },
                    "start": 1215,
                    "end": 1227
                  }
                ],
                "optional": false,
                "start": 1208,
                "end": 1228
              },
              "optional": false,
              "computed": true,
              "start": 1206,
              "end": 1229
            },
            "arguments": [],
            "optional": false,
            "start": 1206,
            "end": 1231
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1235,
            "end": 1236
          }
        ],
        "optional": false,
        "start": 1186,
        "end": 1238
      },
      "start": 1186,
      "end": 1239
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1240,
            "end": 1246
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1247,
            "end": 1256
          },
          "optional": false,
          "computed": false,
          "start": 1240,
          "end": 1256
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1260,
                "end": 1261
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1262,
                  "end": 1268
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 1269,
                      "end": 1273
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1276,
                      "end": 1277
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1280,
                      "end": 1281
                    },
                    "start": 1269,
                    "end": 1281
                  }
                ],
                "optional": false,
                "start": 1262,
                "end": 1282
              },
              "optional": false,
              "computed": true,
              "start": 1260,
              "end": 1283
            },
            "arguments": [],
            "optional": false,
            "start": 1260,
            "end": 1285
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1289,
            "end": 1290
          }
        ],
        "optional": false,
        "start": 1240,
        "end": 1292
      },
      "start": 1240,
      "end": 1293
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1294
}