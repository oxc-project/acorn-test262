{
  "type": "Program",
  "start": 0,
  "end": 589,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 280,
      "end": 291,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 284,
          "end": 290,
          "id": {
            "type": "Identifier",
            "start": 284,
            "end": 285,
            "name": "x"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 288,
            "end": 290,
            "properties": []
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 293,
      "end": 297,
      "expression": {
        "type": "UpdateExpression",
        "start": 293,
        "end": 296,
        "operator": "--",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 293,
          "end": 294,
          "name": "x"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 299,
      "end": 410,
      "test": {
        "type": "BinaryExpression",
        "start": 303,
        "end": 320,
        "left": {
          "type": "CallExpression",
          "start": 303,
          "end": 311,
          "callee": {
            "type": "Identifier",
            "start": 303,
            "end": 308,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 309,
              "end": 310,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 316,
          "end": 320,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 322,
        "end": 410,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 326,
            "end": 408,
            "argument": {
              "type": "NewExpression",
              "start": 332,
              "end": 407,
              "callee": {
                "type": "Identifier",
                "start": 336,
                "end": 348,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 349,
                  "end": 406,
                  "left": {
                    "type": "Literal",
                    "start": 349,
                    "end": 400,
                    "value": "#1: var x = {}; x--; x === Not-a-Number. Actual: ",
                    "raw": "'#1: var x = {}; x--; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 403,
                    "end": 406,
                    "expression": {
                      "type": "Identifier",
                      "start": 404,
                      "end": 405,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 422,
      "end": 451,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 426,
          "end": 450,
          "id": {
            "type": "Identifier",
            "start": 426,
            "end": 427,
            "name": "x"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 430,
            "end": 450,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 440,
              "end": 450,
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 441,
                  "end": 449,
                  "argument": {
                    "type": "Literal",
                    "start": 448,
                    "end": 449,
                    "value": 1,
                    "raw": "1"
                  }
                }
              ]
            },
            "expression": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 453,
      "end": 457,
      "expression": {
        "type": "UpdateExpression",
        "start": 453,
        "end": 456,
        "operator": "--",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 453,
          "end": 454,
          "name": "x"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 459,
      "end": 588,
      "test": {
        "type": "BinaryExpression",
        "start": 463,
        "end": 480,
        "left": {
          "type": "CallExpression",
          "start": 463,
          "end": 471,
          "callee": {
            "type": "Identifier",
            "start": 463,
            "end": 468,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 469,
              "end": 470,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 476,
          "end": 480,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 482,
        "end": 588,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 486,
            "end": 586,
            "argument": {
              "type": "NewExpression",
              "start": 492,
              "end": 585,
              "callee": {
                "type": "Identifier",
                "start": 496,
                "end": 508,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 509,
                  "end": 584,
                  "left": {
                    "type": "Literal",
                    "start": 509,
                    "end": 578,
                    "value": "#2: var x = function(){return 1}; x--; x === Not-a-Number. Actual: ",
                    "raw": "'#2: var x = function(){return 1}; x--; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 581,
                    "end": 584,
                    "expression": {
                      "type": "Identifier",
                      "start": 582,
                      "end": 583,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}