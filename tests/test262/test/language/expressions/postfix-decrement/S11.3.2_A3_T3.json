{
  "type": "Program",
  "start": 0,
  "end": 703,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 281,
      "end": 293,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 285,
          "end": 292,
          "id": {
            "type": "Identifier",
            "start": 285,
            "end": 286,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 289,
            "end": 292,
            "value": "1",
            "raw": "\"1\""
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 295,
      "end": 299,
      "expression": {
        "type": "UpdateExpression",
        "start": 295,
        "end": 298,
        "operator": "--",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 295,
          "end": 296,
          "name": "x"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 301,
      "end": 400,
      "test": {
        "type": "BinaryExpression",
        "start": 305,
        "end": 316,
        "left": {
          "type": "Identifier",
          "start": 305,
          "end": 306,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 311,
          "end": 316,
          "left": {
            "type": "Literal",
            "start": 311,
            "end": 312,
            "value": 1,
            "raw": "1"
          },
          "operator": "-",
          "right": {
            "type": "Literal",
            "start": 315,
            "end": 316,
            "value": 1,
            "raw": "1"
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 318,
        "end": 400,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 322,
            "end": 398,
            "argument": {
              "type": "NewExpression",
              "start": 328,
              "end": 397,
              "callee": {
                "type": "Identifier",
                "start": 332,
                "end": 344,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 345,
                  "end": 396,
                  "left": {
                    "type": "Literal",
                    "start": 345,
                    "end": 390,
                    "value": "#1: var x = \"1\"; x--; x === 1 - 1. Actual: ",
                    "raw": "'#1: var x = \"1\"; x--; x === 1 - 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 393,
                    "end": 396,
                    "expression": {
                      "type": "Identifier",
                      "start": 394,
                      "end": 395,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 412,
      "end": 424,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 416,
          "end": 423,
          "id": {
            "type": "Identifier",
            "start": 416,
            "end": 417,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 420,
            "end": 423,
            "value": "x",
            "raw": "\"x\""
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 426,
      "end": 430,
      "expression": {
        "type": "UpdateExpression",
        "start": 426,
        "end": 429,
        "operator": "--",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 426,
          "end": 427,
          "name": "x"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 432,
      "end": 544,
      "test": {
        "type": "BinaryExpression",
        "start": 436,
        "end": 453,
        "left": {
          "type": "CallExpression",
          "start": 436,
          "end": 444,
          "callee": {
            "type": "Identifier",
            "start": 436,
            "end": 441,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 442,
              "end": 443,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 449,
          "end": 453,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 455,
        "end": 544,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 459,
            "end": 542,
            "argument": {
              "type": "NewExpression",
              "start": 465,
              "end": 541,
              "callee": {
                "type": "Identifier",
                "start": 469,
                "end": 481,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 482,
                  "end": 540,
                  "left": {
                    "type": "Literal",
                    "start": 482,
                    "end": 534,
                    "value": "#2: var x = \"x\"; x--; x === Not-a-Number. Actual: ",
                    "raw": "'#2: var x = \"x\"; x--; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 537,
                    "end": 540,
                    "expression": {
                      "type": "Identifier",
                      "start": 538,
                      "end": 539,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 556,
      "end": 581,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 560,
          "end": 580,
          "id": {
            "type": "Identifier",
            "start": 560,
            "end": 561,
            "name": "x"
          },
          "init": {
            "type": "NewExpression",
            "start": 564,
            "end": 580,
            "callee": {
              "type": "Identifier",
              "start": 568,
              "end": 574,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 575,
                "end": 579,
                "value": "-1",
                "raw": "\"-1\""
              }
            ]
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 583,
      "end": 587,
      "expression": {
        "type": "UpdateExpression",
        "start": 583,
        "end": 586,
        "operator": "--",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 583,
          "end": 584,
          "name": "x"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 588,
      "end": 702,
      "test": {
        "type": "BinaryExpression",
        "start": 592,
        "end": 604,
        "left": {
          "type": "Identifier",
          "start": 592,
          "end": 593,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 598,
          "end": 604,
          "left": {
            "type": "UnaryExpression",
            "start": 598,
            "end": 600,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 599,
              "end": 600,
              "value": 1,
              "raw": "1"
            },
            "prefix": true
          },
          "operator": "-",
          "right": {
            "type": "Literal",
            "start": 603,
            "end": 604,
            "value": 1,
            "raw": "1"
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 606,
        "end": 702,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 610,
            "end": 700,
            "argument": {
              "type": "NewExpression",
              "start": 616,
              "end": 699,
              "callee": {
                "type": "Identifier",
                "start": 620,
                "end": 632,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 633,
                  "end": 698,
                  "left": {
                    "type": "Literal",
                    "start": 633,
                    "end": 692,
                    "value": "#3: var x = new String(\"-1\"); x--; x === -1 - 1. Actual: ",
                    "raw": "'#3: var x = new String(\"-1\"); x--; x === -1 - 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 695,
                    "end": 698,
                    "expression": {
                      "type": "Identifier",
                      "start": 696,
                      "end": 697,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}