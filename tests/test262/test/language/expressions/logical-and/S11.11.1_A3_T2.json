{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 305,
                "end": 306
              },
              "prefix": true,
              "start": 304,
              "end": 306
            },
            "operator": "&&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 311,
                "end": 312
              },
              "prefix": true,
              "start": 310,
              "end": 312
            },
            "start": 304,
            "end": 312
          },
          "start": 303,
          "end": 313
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 318,
          "end": 319
        },
        "start": 303,
        "end": 319
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 335,
                "end": 347
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1.1: (-0 && -1) === 0",
                  "raw": "'#1.1: (-0 && -1) === 0'",
                  "start": 348,
                  "end": 372
                }
              ],
              "start": 331,
              "end": 373
            },
            "start": 325,
            "end": 374
          }
        ],
        "start": 321,
        "end": 376
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 391,
                    "end": 392
                  },
                  "operator": "/",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "LogicalExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 397,
                          "end": 398
                        },
                        "prefix": true,
                        "start": 396,
                        "end": 398
                      },
                      "operator": "&&",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 1,
                          "raw": "1",
                          "start": 403,
                          "end": 404
                        },
                        "prefix": true,
                        "start": 402,
                        "end": 404
                      },
                      "start": 396,
                      "end": 404
                    },
                    "start": 395,
                    "end": 405
                  },
                  "start": 391,
                  "end": 405
                },
                "start": 390,
                "end": 406
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 411,
                  "end": 417
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 418,
                  "end": 435
                },
                "optional": false,
                "computed": false,
                "start": 411,
                "end": 435
              },
              "start": 390,
              "end": 435
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 453,
                      "end": 465
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "#1.2: (-0 && -1) === -0",
                        "raw": "'#1.2: (-0 && -1) === -0'",
                        "start": 466,
                        "end": 491
                      }
                    ],
                    "start": 449,
                    "end": 492
                  },
                  "start": 443,
                  "end": 493
                }
              ],
              "start": 437,
              "end": 497
            },
            "alternate": null,
            "start": 386,
            "end": 497
          }
        ],
        "start": 382,
        "end": 499
      },
      "start": 299,
      "end": 499
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 516,
              "end": 517
            },
            "operator": "&&",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 525,
                "end": 531
              },
              "arguments": [
                {
                  "type": "UnaryExpression",
                  "operator": "-",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 533,
                    "end": 534
                  },
                  "prefix": true,
                  "start": 532,
                  "end": 534
                }
              ],
              "start": 521,
              "end": 535
            },
            "start": 516,
            "end": 535
          },
          "start": 515,
          "end": 536
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 541,
          "end": 542
        },
        "start": 515,
        "end": 542
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 558,
                "end": 570
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2.1: (0 && new Number(-1)) === 0",
                  "raw": "'#2.1: (0 && new Number(-1)) === 0'",
                  "start": 571,
                  "end": 606
                }
              ],
              "start": 554,
              "end": 607
            },
            "start": 548,
            "end": 608
          }
        ],
        "start": 544,
        "end": 610
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 625,
                    "end": 626
                  },
                  "operator": "/",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "LogicalExpression",
                      "left": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 630,
                        "end": 631
                      },
                      "operator": "&&",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 639,
                          "end": 645
                        },
                        "arguments": [
                          {
                            "type": "UnaryExpression",
                            "operator": "-",
                            "argument": {
                              "type": "Literal",
                              "value": 1,
                              "raw": "1",
                              "start": 647,
                              "end": 648
                            },
                            "prefix": true,
                            "start": 646,
                            "end": 648
                          }
                        ],
                        "start": 635,
                        "end": 649
                      },
                      "start": 630,
                      "end": 649
                    },
                    "start": 629,
                    "end": 650
                  },
                  "start": 625,
                  "end": 650
                },
                "start": 624,
                "end": 651
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 656,
                  "end": 662
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 663,
                  "end": 680
                },
                "optional": false,
                "computed": false,
                "start": 656,
                "end": 680
              },
              "start": 624,
              "end": 680
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 698,
                      "end": 710
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "#2.2: (0 && new Number(-1)) === +0",
                        "raw": "'#2.2: (0 && new Number(-1)) === +0'",
                        "start": 711,
                        "end": 747
                      }
                    ],
                    "start": 694,
                    "end": 748
                  },
                  "start": 688,
                  "end": 749
                }
              ],
              "start": 682,
              "end": 753
            },
            "alternate": null,
            "start": 620,
            "end": 753
          }
        ],
        "start": 616,
        "end": 755
      },
      "start": 511,
      "end": 755
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "isNaN",
              "start": 772,
              "end": 777
            },
            "arguments": [
              {
                "type": "LogicalExpression",
                "left": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 778,
                  "end": 781
                },
                "operator": "&&",
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 785,
                  "end": 786
                },
                "start": 778,
                "end": 786
              }
            ],
            "optional": false,
            "start": 772,
            "end": 787
          },
          "start": 771,
          "end": 788
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 793,
          "end": 797
        },
        "start": 771,
        "end": 797
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 813,
                "end": 825
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: (NaN && 1) === Not-a-Number",
                  "raw": "'#3: (NaN && 1) === Not-a-Number'",
                  "start": 826,
                  "end": 859
                }
              ],
              "start": 809,
              "end": 860
            },
            "start": 803,
            "end": 861
          }
        ],
        "start": 799,
        "end": 863
      },
      "alternate": null,
      "start": 767,
      "end": 863
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 864
}