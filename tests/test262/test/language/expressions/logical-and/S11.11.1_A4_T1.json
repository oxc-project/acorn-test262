{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 315,
              "end": 319
            },
            "operator": "&&",
            "right": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 323,
              "end": 327
            },
            "start": 315,
            "end": 327
          },
          "start": 314,
          "end": 328
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 333,
          "end": 337
        },
        "start": 314,
        "end": 337
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 353,
                "end": 365
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: (true && true) === true",
                  "raw": "'#1: (true && true) === true'",
                  "start": 366,
                  "end": 395
                }
              ],
              "start": 349,
              "end": 396
            },
            "start": 343,
            "end": 397
          }
        ],
        "start": 339,
        "end": 399
      },
      "alternate": null,
      "start": 310,
      "end": 399
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 416,
              "end": 420
            },
            "operator": "&&",
            "right": {
              "type": "Literal",
              "value": false,
              "raw": "false",
              "start": 424,
              "end": 429
            },
            "start": 416,
            "end": 429
          },
          "start": 415,
          "end": 430
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 435,
          "end": 440
        },
        "start": 415,
        "end": 440
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 456,
                "end": 468
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: (true && false) === false",
                  "raw": "'#2: (true && false) === false'",
                  "start": 469,
                  "end": 500
                }
              ],
              "start": 452,
              "end": 501
            },
            "start": 446,
            "end": 502
          }
        ],
        "start": 442,
        "end": 504
      },
      "alternate": null,
      "start": 411,
      "end": 504
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 520,
            "end": 521
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 528,
              "end": 535
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 536,
                "end": 540
              }
            ],
            "start": 524,
            "end": 541
          },
          "start": 520,
          "end": 541
        }
      ],
      "start": 516,
      "end": 542
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 552,
                "end": 559
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 560,
                  "end": 564
                }
              ],
              "start": 548,
              "end": 565
            },
            "operator": "&&",
            "right": {
              "type": "Identifier",
              "name": "y",
              "start": 570,
              "end": 571
            },
            "start": 548,
            "end": 571
          },
          "start": 547,
          "end": 572
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "y",
          "start": 577,
          "end": 578
        },
        "start": 547,
        "end": 578
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 594,
                "end": 606
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: (var y = new Boolean(true); (new Boolean(true) &&  y) === y",
                  "raw": "'#3: (var y = new Boolean(true); (new Boolean(true) &&  y) === y'",
                  "start": 607,
                  "end": 672
                }
              ],
              "start": 590,
              "end": 673
            },
            "start": 584,
            "end": 674
          }
        ],
        "start": 580,
        "end": 676
      },
      "alternate": null,
      "start": 543,
      "end": 676
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 692,
            "end": 693
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 700,
              "end": 707
            },
            "arguments": [
              {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 708,
                "end": 713
              }
            ],
            "start": 696,
            "end": 714
          },
          "start": 692,
          "end": 714
        }
      ],
      "start": 688,
      "end": 715
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 725,
                "end": 732
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 733,
                  "end": 737
                }
              ],
              "start": 721,
              "end": 738
            },
            "operator": "&&",
            "right": {
              "type": "Identifier",
              "name": "y",
              "start": 743,
              "end": 744
            },
            "start": 721,
            "end": 744
          },
          "start": 720,
          "end": 745
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "y",
          "start": 750,
          "end": 751
        },
        "start": 720,
        "end": 751
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 767,
                "end": 779
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4: (var y = new Boolean(false); (new Boolean(true) &&  y) === y",
                  "raw": "'#4: (var y = new Boolean(false); (new Boolean(true) &&  y) === y'",
                  "start": 780,
                  "end": 846
                }
              ],
              "start": 763,
              "end": 847
            },
            "start": 757,
            "end": 848
          }
        ],
        "start": 753,
        "end": 850
      },
      "alternate": null,
      "start": 716,
      "end": 850
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 866,
            "end": 867
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 874,
              "end": 881
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 882,
                "end": 886
              }
            ],
            "start": 870,
            "end": 887
          },
          "start": 866,
          "end": 887
        }
      ],
      "start": 862,
      "end": 888
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 898,
                "end": 905
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 906,
                  "end": 911
                }
              ],
              "start": 894,
              "end": 912
            },
            "operator": "&&",
            "right": {
              "type": "Identifier",
              "name": "y",
              "start": 917,
              "end": 918
            },
            "start": 894,
            "end": 918
          },
          "start": 893,
          "end": 919
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "y",
          "start": 924,
          "end": 925
        },
        "start": 893,
        "end": 925
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 941,
                "end": 953
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#5: (var y = new Boolean(true); (new Boolean(false) &&  y) === y",
                  "raw": "'#5: (var y = new Boolean(true); (new Boolean(false) &&  y) === y'",
                  "start": 954,
                  "end": 1020
                }
              ],
              "start": 937,
              "end": 1021
            },
            "start": 931,
            "end": 1022
          }
        ],
        "start": 927,
        "end": 1024
      },
      "alternate": null,
      "start": 889,
      "end": 1024
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 1040,
            "end": 1041
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 1048,
              "end": 1055
            },
            "arguments": [
              {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1056,
                "end": 1061
              }
            ],
            "start": 1044,
            "end": 1062
          },
          "start": 1040,
          "end": 1062
        }
      ],
      "start": 1036,
      "end": 1063
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 1073,
                "end": 1080
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1081,
                  "end": 1086
                }
              ],
              "start": 1069,
              "end": 1087
            },
            "operator": "&&",
            "right": {
              "type": "Identifier",
              "name": "y",
              "start": 1092,
              "end": 1093
            },
            "start": 1069,
            "end": 1093
          },
          "start": 1068,
          "end": 1094
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "y",
          "start": 1099,
          "end": 1100
        },
        "start": 1068,
        "end": 1100
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1116,
                "end": 1128
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#6: (var y = new Boolean(false); (new Boolean(false) &&  y) === y",
                  "raw": "'#6: (var y = new Boolean(false); (new Boolean(false) &&  y) === y'",
                  "start": 1129,
                  "end": 1196
                }
              ],
              "start": 1112,
              "end": 1197
            },
            "start": 1106,
            "end": 1198
          }
        ],
        "start": 1102,
        "end": 1200
      },
      "alternate": null,
      "start": 1064,
      "end": 1200
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1201
}