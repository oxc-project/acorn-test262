{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "Literal",
              "value": false,
              "raw": "false",
              "start": 343,
              "end": 348
            },
            "operator": "&&",
            "right": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 352,
              "end": 356
            },
            "start": 343,
            "end": 356
          },
          "start": 342,
          "end": 357
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 362,
          "end": 367
        },
        "start": 342,
        "end": 367
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 383,
                "end": 395
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: (false && true) === false",
                  "raw": "'#1: (false && true) === false'",
                  "start": 396,
                  "end": 427
                }
              ],
              "start": 379,
              "end": 428
            },
            "start": 373,
            "end": 429
          }
        ],
        "start": 369,
        "end": 431
      },
      "alternate": null,
      "start": 338,
      "end": 431
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "Literal",
              "value": false,
              "raw": "false",
              "start": 448,
              "end": 453
            },
            "operator": "&&",
            "right": {
              "type": "Literal",
              "value": false,
              "raw": "false",
              "start": 457,
              "end": 462
            },
            "start": 448,
            "end": 462
          },
          "start": 447,
          "end": 463
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 468,
          "end": 473
        },
        "start": 447,
        "end": 473
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 489,
                "end": 501
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: (false && false) === false",
                  "raw": "'#2: (false && false) === false'",
                  "start": 502,
                  "end": 534
                }
              ],
              "start": 485,
              "end": 535
            },
            "start": 479,
            "end": 536
          }
        ],
        "start": 475,
        "end": 538
      },
      "alternate": null,
      "start": 443,
      "end": 538
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "Literal",
              "value": false,
              "raw": "false",
              "start": 555,
              "end": 560
            },
            "operator": "&&",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 568,
                "end": 575
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 576,
                  "end": 580
                }
              ],
              "start": 564,
              "end": 581
            },
            "start": 555,
            "end": 581
          },
          "start": 554,
          "end": 582
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 587,
          "end": 592
        },
        "start": 554,
        "end": 592
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 608,
                "end": 620
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: (false && new Boolean(true)) === false",
                  "raw": "'#3: (false && new Boolean(true)) === false'",
                  "start": 621,
                  "end": 665
                }
              ],
              "start": 604,
              "end": 666
            },
            "start": 598,
            "end": 667
          }
        ],
        "start": 594,
        "end": 669
      },
      "alternate": null,
      "start": 550,
      "end": 669
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "Literal",
              "value": false,
              "raw": "false",
              "start": 686,
              "end": 691
            },
            "operator": "&&",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 699,
                "end": 706
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 707,
                  "end": 712
                }
              ],
              "start": 695,
              "end": 713
            },
            "start": 686,
            "end": 713
          },
          "start": 685,
          "end": 714
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 719,
          "end": 724
        },
        "start": 685,
        "end": 724
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 740,
                "end": 752
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4: (false && new Boolean(false)) === false",
                  "raw": "'#4: (false && new Boolean(false)) === false'",
                  "start": 753,
                  "end": 798
                }
              ],
              "start": 736,
              "end": 799
            },
            "start": 730,
            "end": 800
          }
        ],
        "start": 726,
        "end": 802
      },
      "alternate": null,
      "start": 681,
      "end": 802
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 803
}