{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 288,
            "end": 289
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "x",
                    "raw": "\"x\"",
                    "start": 312,
                    "end": 315
                  },
                  "start": 306,
                  "end": 316
                }
              ],
              "start": 304,
              "end": 318
            },
            "expression": false,
            "start": 292,
            "end": 318
          },
          "start": 288,
          "end": 318
        }
      ],
      "start": 284,
      "end": 319
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 324,
            "end": 325
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "y",
                    "raw": "\"y\"",
                    "start": 348,
                    "end": 351
                  },
                  "start": 342,
                  "end": 352
                }
              ],
              "start": 340,
              "end": 354
            },
            "expression": false,
            "start": 328,
            "end": 354
          },
          "start": 324,
          "end": 354
        }
      ],
      "start": 320,
      "end": 355
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "LogicalExpression",
              "left": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 365,
                  "end": 366
                },
                "arguments": [],
                "optional": false,
                "start": 365,
                "end": 368
              },
              "operator": "&&",
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "y",
                  "start": 372,
                  "end": 373
                },
                "arguments": [],
                "optional": false,
                "start": 372,
                "end": 375
              },
              "start": 365,
              "end": 375
            },
            "start": 365,
            "end": 376
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 390,
                "end": 402
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1.1: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() && y() throw \"x\". Actual: ",
                    "raw": "'#1.1: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() && y() throw \"x\". Actual: '",
                    "start": 403,
                    "end": 513
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "LogicalExpression",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "x",
                          "start": 517,
                          "end": 518
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 517,
                        "end": 520
                      },
                      "operator": "&&",
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "y",
                          "start": 524,
                          "end": 525
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 524,
                        "end": 527
                      },
                      "start": 517,
                      "end": 527
                    },
                    "start": 516,
                    "end": 528
                  },
                  "start": 403,
                  "end": 528
                }
              ],
              "start": 386,
              "end": 529
            },
            "start": 380,
            "end": 530
          }
        ],
        "start": 360,
        "end": 532
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 540,
          "end": 541
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 552,
                  "end": 553
                },
                "operator": "===",
                "right": {
                  "type": "Literal",
                  "value": "y",
                  "raw": "\"y\"",
                  "start": 558,
                  "end": 561
                },
                "start": 552,
                "end": 561
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 580,
                        "end": 592
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#1.2: First expression is evaluated first, and then second expression",
                          "raw": "'#1.2: First expression is evaluated first, and then second expression'",
                          "start": 593,
                          "end": 664
                        }
                      ],
                      "start": 576,
                      "end": 665
                    },
                    "start": 570,
                    "end": 666
                  }
                ],
                "start": 563,
                "end": 671
              },
              "alternate": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 688,
                        "end": 689
                      },
                      "operator": "!==",
                      "right": {
                        "type": "Literal",
                        "value": "x",
                        "raw": "\"x\"",
                        "start": 694,
                        "end": 697
                      },
                      "start": 688,
                      "end": 697
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ThrowStatement",
                          "argument": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Test262Error",
                              "start": 718,
                              "end": 730
                            },
                            "arguments": [
                              {
                                "type": "BinaryExpression",
                                "left": {
                                  "type": "Literal",
                                  "value": "#1.3: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() && y() throw \"x\". Actual: ",
                                  "raw": "'#1.3: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() && y() throw \"x\". Actual: '",
                                  "start": 731,
                                  "end": 841
                                },
                                "operator": "+",
                                "right": {
                                  "type": "ParenthesizedExpression",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "e",
                                    "start": 845,
                                    "end": 846
                                  },
                                  "start": 844,
                                  "end": 847
                                },
                                "start": 731,
                                "end": 847
                              }
                            ],
                            "start": 714,
                            "end": 848
                          },
                          "start": 708,
                          "end": 849
                        }
                      ],
                      "start": 699,
                      "end": 856
                    },
                    "alternate": null,
                    "start": 684,
                    "end": 856
                  }
                ],
                "start": 677,
                "end": 861
              },
              "start": 548,
              "end": 861
            }
          ],
          "start": 543,
          "end": 863
        },
        "start": 533,
        "end": 863
      },
      "finalizer": null,
      "start": 356,
      "end": 863
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 864
}