{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 333,
            "end": 339
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 340,
            "end": 349
          },
          "optional": false,
          "computed": false,
          "start": 333,
          "end": 349
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 350,
                "end": 356
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "2n",
                  "bigint": "2",
                  "start": 357,
                  "end": 359
                }
              ],
              "optional": false,
              "start": 350,
              "end": 360
            },
            "operator": "-",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 363,
              "end": 365
            },
            "start": 350,
            "end": 365
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 367,
            "end": 369
          },
          {
            "type": "Literal",
            "value": "The result of (Object(2n) - 1n) is 1n",
            "raw": "'The result of (Object(2n) - 1n) is 1n'",
            "start": 371,
            "end": 410
          }
        ],
        "optional": false,
        "start": 333,
        "end": 411
      },
      "start": 333,
      "end": 412
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 413,
            "end": 419
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 420,
            "end": 429
          },
          "optional": false,
          "computed": false,
          "start": 413,
          "end": 429
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "3n",
              "bigint": "3",
              "start": 430,
              "end": 432
            },
            "operator": "-",
            "right": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 435,
                "end": 441
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "2n",
                  "bigint": "2",
                  "start": 442,
                  "end": 444
                }
              ],
              "optional": false,
              "start": 435,
              "end": 445
            },
            "start": 430,
            "end": 445
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 447,
            "end": 449
          },
          {
            "type": "Literal",
            "value": "The result of (3n - Object(2n)) is 1n",
            "raw": "'The result of (3n - Object(2n)) is 1n'",
            "start": 451,
            "end": 490
          }
        ],
        "optional": false,
        "start": 413,
        "end": 491
      },
      "start": 413,
      "end": 492
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 494,
            "end": 500
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 501,
            "end": 510
          },
          "optional": false,
          "computed": false,
          "start": 494,
          "end": 510
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 516,
                      "end": 522
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toPrimitive",
                      "start": 523,
                      "end": 534
                    },
                    "optional": false,
                    "computed": false,
                    "start": 516,
                    "end": 534
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 561,
                            "end": 563
                          },
                          "start": 554,
                          "end": 564
                        }
                      ],
                      "start": 548,
                      "end": 568
                    },
                    "expression": false,
                    "start": 537,
                    "end": 568
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "start": 515,
                  "end": 568
                }
              ],
              "start": 511,
              "end": 570
            },
            "operator": "-",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 573,
              "end": 575
            },
            "start": 511,
            "end": 575
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 577,
            "end": 579
          },
          {
            "type": "Literal",
            "value": "The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) - 1n) is 1n",
            "raw": "'The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) - 1n) is 1n'",
            "start": 581,
            "end": 659
          }
        ],
        "optional": false,
        "start": 494,
        "end": 660
      },
      "start": 494,
      "end": 661
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 663,
            "end": 669
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 670,
            "end": 679
          },
          "optional": false,
          "computed": false,
          "start": 663,
          "end": 679
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "3n",
              "bigint": "3",
              "start": 680,
              "end": 682
            },
            "operator": "-",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 690,
                      "end": 696
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toPrimitive",
                      "start": 697,
                      "end": 708
                    },
                    "optional": false,
                    "computed": false,
                    "start": 690,
                    "end": 708
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 735,
                            "end": 737
                          },
                          "start": 728,
                          "end": 738
                        }
                      ],
                      "start": 722,
                      "end": 742
                    },
                    "expression": false,
                    "start": 711,
                    "end": 742
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "start": 689,
                  "end": 742
                }
              ],
              "start": 685,
              "end": 744
            },
            "start": 680,
            "end": 744
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 746,
            "end": 748
          },
          {
            "type": "Literal",
            "value": "The result of (3n - {[Symbol.toPrimitive]: function() {return 2n;}}) is 1n",
            "raw": "'The result of (3n - {[Symbol.toPrimitive]: function() {return 2n;}}) is 1n'",
            "start": 750,
            "end": 826
          }
        ],
        "optional": false,
        "start": 663,
        "end": 827
      },
      "start": 663,
      "end": 828
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 830,
            "end": 836
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 837,
            "end": 846
          },
          "optional": false,
          "computed": false,
          "start": 830,
          "end": 846
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "valueOf",
                    "start": 851,
                    "end": 858
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 884,
                            "end": 886
                          },
                          "start": 877,
                          "end": 887
                        }
                      ],
                      "start": 871,
                      "end": 891
                    },
                    "expression": false,
                    "start": 860,
                    "end": 891
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 851,
                  "end": 891
                }
              ],
              "start": 847,
              "end": 893
            },
            "operator": "-",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 896,
              "end": 898
            },
            "start": 847,
            "end": 898
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 900,
            "end": 902
          },
          {
            "type": "Literal",
            "value": "The result of (({valueOf: function() {return 2n;}}) - 1n) is 1n",
            "raw": "'The result of (({valueOf: function() {return 2n;}}) - 1n) is 1n'",
            "start": 904,
            "end": 969
          }
        ],
        "optional": false,
        "start": 830,
        "end": 970
      },
      "start": 830,
      "end": 971
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 973,
            "end": 979
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 980,
            "end": 989
          },
          "optional": false,
          "computed": false,
          "start": 973,
          "end": 989
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "3n",
              "bigint": "3",
              "start": 990,
              "end": 992
            },
            "operator": "-",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "valueOf",
                    "start": 999,
                    "end": 1006
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1032,
                            "end": 1034
                          },
                          "start": 1025,
                          "end": 1035
                        }
                      ],
                      "start": 1019,
                      "end": 1039
                    },
                    "expression": false,
                    "start": 1008,
                    "end": 1039
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 999,
                  "end": 1039
                }
              ],
              "start": 995,
              "end": 1041
            },
            "start": 990,
            "end": 1041
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 1043,
            "end": 1045
          },
          {
            "type": "Literal",
            "value": "The result of (3n - {valueOf: function() {return 2n;}}) is 1n",
            "raw": "'The result of (3n - {valueOf: function() {return 2n;}}) is 1n'",
            "start": 1047,
            "end": 1110
          }
        ],
        "optional": false,
        "start": 973,
        "end": 1111
      },
      "start": 973,
      "end": 1112
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1114,
            "end": 1120
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1121,
            "end": 1130
          },
          "optional": false,
          "computed": false,
          "start": 1114,
          "end": 1130
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "toString",
                    "start": 1135,
                    "end": 1143
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1169,
                            "end": 1171
                          },
                          "start": 1162,
                          "end": 1172
                        }
                      ],
                      "start": 1156,
                      "end": 1176
                    },
                    "expression": false,
                    "start": 1145,
                    "end": 1176
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 1135,
                  "end": 1176
                }
              ],
              "start": 1131,
              "end": 1178
            },
            "operator": "-",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 1181,
              "end": 1183
            },
            "start": 1131,
            "end": 1183
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 1185,
            "end": 1187
          },
          {
            "type": "Literal",
            "value": "The result of (({toString: function() {return 2n;}}) - 1n) is 1n",
            "raw": "'The result of (({toString: function() {return 2n;}}) - 1n) is 1n'",
            "start": 1189,
            "end": 1255
          }
        ],
        "optional": false,
        "start": 1114,
        "end": 1256
      },
      "start": 1114,
      "end": 1257
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1259,
            "end": 1265
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1266,
            "end": 1275
          },
          "optional": false,
          "computed": false,
          "start": 1259,
          "end": 1275
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "3n",
              "bigint": "3",
              "start": 1276,
              "end": 1278
            },
            "operator": "-",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "toString",
                    "start": 1285,
                    "end": 1293
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1319,
                            "end": 1321
                          },
                          "start": 1312,
                          "end": 1322
                        }
                      ],
                      "start": 1306,
                      "end": 1326
                    },
                    "expression": false,
                    "start": 1295,
                    "end": 1326
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 1285,
                  "end": 1326
                }
              ],
              "start": 1281,
              "end": 1328
            },
            "start": 1276,
            "end": 1328
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 1330,
            "end": 1332
          },
          {
            "type": "Literal",
            "value": "The result of (3n - {toString: function() {return 2n;}}) is 1n",
            "raw": "'The result of (3n - {toString: function() {return 2n;}}) is 1n'",
            "start": 1334,
            "end": 1398
          }
        ],
        "optional": false,
        "start": 1259,
        "end": 1399
      },
      "start": 1259,
      "end": 1400
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1401
}