{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 366,
            "end": 371
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 372,
                "end": 376
              },
              "operator": "-",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 379,
                "end": 388
              },
              "start": 372,
              "end": 388
            }
          ],
          "optional": false,
          "start": 366,
          "end": 389
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 394,
          "end": 398
        },
        "start": 366,
        "end": 398
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 414,
                "end": 426
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: true - undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: true - undefined === Not-a-Number. Actual: '",
                    "start": 427,
                    "end": 476
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 480,
                        "end": 484
                      },
                      "operator": "-",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 487,
                        "end": 496
                      },
                      "start": 480,
                      "end": 496
                    },
                    "start": 479,
                    "end": 497
                  },
                  "start": 427,
                  "end": 497
                }
              ],
              "start": 410,
              "end": 498
            },
            "start": 404,
            "end": 499
          }
        ],
        "start": 400,
        "end": 501
      },
      "alternate": null,
      "start": 362,
      "end": 501
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 517,
            "end": 522
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 523,
                "end": 532
              },
              "operator": "-",
              "right": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 535,
                "end": 539
              },
              "start": 523,
              "end": 539
            }
          ],
          "optional": false,
          "start": 517,
          "end": 540
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 545,
          "end": 549
        },
        "start": 517,
        "end": 549
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 565,
                "end": 577
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: undefined - true === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined - true === Not-a-Number. Actual: '",
                    "start": 578,
                    "end": 627
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 631,
                        "end": 640
                      },
                      "operator": "-",
                      "right": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 643,
                        "end": 647
                      },
                      "start": 631,
                      "end": 647
                    },
                    "start": 630,
                    "end": 648
                  },
                  "start": 578,
                  "end": 648
                }
              ],
              "start": 561,
              "end": 649
            },
            "start": 555,
            "end": 650
          }
        ],
        "start": 551,
        "end": 652
      },
      "alternate": null,
      "start": 513,
      "end": 652
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 668,
            "end": 673
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Boolean",
                  "start": 678,
                  "end": 685
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 686,
                    "end": 690
                  }
                ],
                "start": 674,
                "end": 691
              },
              "operator": "-",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 694,
                "end": 703
              },
              "start": 674,
              "end": 703
            }
          ],
          "optional": false,
          "start": 668,
          "end": 704
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 709,
          "end": 713
        },
        "start": 668,
        "end": 713
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 729,
                "end": 741
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new Boolean(true) - undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: new Boolean(true) - undefined === Not-a-Number. Actual: '",
                    "start": 742,
                    "end": 804
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 812,
                          "end": 819
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 820,
                            "end": 824
                          }
                        ],
                        "start": 808,
                        "end": 825
                      },
                      "operator": "-",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 828,
                        "end": 837
                      },
                      "start": 808,
                      "end": 837
                    },
                    "start": 807,
                    "end": 838
                  },
                  "start": 742,
                  "end": 838
                }
              ],
              "start": 725,
              "end": 839
            },
            "start": 719,
            "end": 840
          }
        ],
        "start": 715,
        "end": 842
      },
      "alternate": null,
      "start": 664,
      "end": 842
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 858,
            "end": 863
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 864,
                "end": 873
              },
              "operator": "-",
              "right": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Boolean",
                  "start": 880,
                  "end": 887
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 888,
                    "end": 892
                  }
                ],
                "start": 876,
                "end": 893
              },
              "start": 864,
              "end": 893
            }
          ],
          "optional": false,
          "start": 858,
          "end": 894
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 899,
          "end": 903
        },
        "start": 858,
        "end": 903
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 919,
                "end": 931
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: undefined - new Boolean(true) === Not-a-Number. Actual: ",
                    "raw": "'#4: undefined - new Boolean(true) === Not-a-Number. Actual: '",
                    "start": 932,
                    "end": 994
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 998,
                        "end": 1007
                      },
                      "operator": "-",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 1014,
                          "end": 1021
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 1022,
                            "end": 1026
                          }
                        ],
                        "start": 1010,
                        "end": 1027
                      },
                      "start": 998,
                      "end": 1027
                    },
                    "start": 997,
                    "end": 1028
                  },
                  "start": 932,
                  "end": 1028
                }
              ],
              "start": 915,
              "end": 1029
            },
            "start": 909,
            "end": 1030
          }
        ],
        "start": 905,
        "end": 1032
      },
      "alternate": null,
      "start": 854,
      "end": 1032
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1033
}