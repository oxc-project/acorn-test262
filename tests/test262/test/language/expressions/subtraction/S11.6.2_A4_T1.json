{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 295,
            "end": 300
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 301,
                  "end": 307
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 308,
                  "end": 311
                },
                "optional": false,
                "computed": false,
                "start": 301,
                "end": 311
              },
              "operator": "-",
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 314,
                "end": 315
              },
              "start": 301,
              "end": 315
            }
          ],
          "optional": false,
          "start": 295,
          "end": 316
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 321,
          "end": 325
        },
        "start": 295,
        "end": 325
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 342,
                "end": 354
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: NaN - 1 === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN - 1 === Not-a-Number. Actual: '",
                    "start": 355,
                    "end": 395
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 399,
                        "end": 402
                      },
                      "operator": "-",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 405,
                        "end": 406
                      },
                      "start": 399,
                      "end": 406
                    },
                    "start": 398,
                    "end": 407
                  },
                  "start": 355,
                  "end": 407
                }
              ],
              "start": 338,
              "end": 408
            },
            "start": 332,
            "end": 409
          }
        ],
        "start": 328,
        "end": 411
      },
      "alternate": null,
      "start": 291,
      "end": 411
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 427,
            "end": 432
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 433,
                "end": 434
              },
              "operator": "-",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 437,
                  "end": 443
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 444,
                  "end": 447
                },
                "optional": false,
                "computed": false,
                "start": 437,
                "end": 447
              },
              "start": 433,
              "end": 447
            }
          ],
          "optional": false,
          "start": 427,
          "end": 448
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 453,
          "end": 457
        },
        "start": 427,
        "end": 457
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 474,
                "end": 486
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: 1 - NaN === Not-a-Number. Actual: ",
                    "raw": "'#2: 1 - NaN === Not-a-Number. Actual: '",
                    "start": 487,
                    "end": 527
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 531,
                        "end": 532
                      },
                      "operator": "-",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 535,
                        "end": 538
                      },
                      "start": 531,
                      "end": 538
                    },
                    "start": 530,
                    "end": 539
                  },
                  "start": 487,
                  "end": 539
                }
              ],
              "start": 470,
              "end": 540
            },
            "start": 464,
            "end": 541
          }
        ],
        "start": 460,
        "end": 543
      },
      "alternate": null,
      "start": 423,
      "end": 543
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 559,
            "end": 564
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 565,
                  "end": 571
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 572,
                  "end": 575
                },
                "optional": false,
                "computed": false,
                "start": 565,
                "end": 575
              },
              "operator": "-",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 578,
                  "end": 584
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 585,
                  "end": 602
                },
                "optional": false,
                "computed": false,
                "start": 578,
                "end": 602
              },
              "start": 565,
              "end": 602
            }
          ],
          "optional": false,
          "start": 559,
          "end": 603
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 608,
          "end": 612
        },
        "start": 559,
        "end": 612
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 629,
                "end": 641
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: NaN - Infinity === Not-a-Number. Actual: ",
                    "raw": "'#3: NaN - Infinity === Not-a-Number. Actual: '",
                    "start": 642,
                    "end": 689
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 693,
                        "end": 696
                      },
                      "operator": "-",
                      "right": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 699,
                        "end": 707
                      },
                      "start": 693,
                      "end": 707
                    },
                    "start": 692,
                    "end": 708
                  },
                  "start": 642,
                  "end": 708
                }
              ],
              "start": 625,
              "end": 709
            },
            "start": 619,
            "end": 710
          }
        ],
        "start": 615,
        "end": 712
      },
      "alternate": null,
      "start": 555,
      "end": 712
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 728,
            "end": 733
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 734,
                  "end": 740
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 741,
                  "end": 758
                },
                "optional": false,
                "computed": false,
                "start": 734,
                "end": 758
              },
              "operator": "-",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 761,
                  "end": 767
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 768,
                  "end": 771
                },
                "optional": false,
                "computed": false,
                "start": 761,
                "end": 771
              },
              "start": 734,
              "end": 771
            }
          ],
          "optional": false,
          "start": 728,
          "end": 772
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 777,
          "end": 781
        },
        "start": 728,
        "end": 781
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 798,
                "end": 810
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: Infinity - NaN === Not-a-Number. Actual: ",
                    "raw": "'#4: Infinity - NaN === Not-a-Number. Actual: '",
                    "start": 811,
                    "end": 858
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 862,
                        "end": 870
                      },
                      "operator": "-",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 873,
                        "end": 876
                      },
                      "start": 862,
                      "end": 876
                    },
                    "start": 861,
                    "end": 877
                  },
                  "start": 811,
                  "end": 877
                }
              ],
              "start": 794,
              "end": 878
            },
            "start": 788,
            "end": 879
          }
        ],
        "start": 784,
        "end": 881
      },
      "alternate": null,
      "start": 724,
      "end": 881
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 897,
            "end": 902
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 903,
                  "end": 909
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 910,
                  "end": 913
                },
                "optional": false,
                "computed": false,
                "start": 903,
                "end": 913
              },
              "operator": "-",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 916,
                  "end": 922
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 923,
                  "end": 940
                },
                "optional": false,
                "computed": false,
                "start": 916,
                "end": 940
              },
              "start": 903,
              "end": 940
            }
          ],
          "optional": false,
          "start": 897,
          "end": 941
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 946,
          "end": 950
        },
        "start": 897,
        "end": 950
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 967,
                "end": 979
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: NaN - Infinity === Not-a-Number. Actual: ",
                    "raw": "'#5: NaN - Infinity === Not-a-Number. Actual: '",
                    "start": 980,
                    "end": 1027
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1031,
                        "end": 1034
                      },
                      "operator": "-",
                      "right": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 1037,
                        "end": 1045
                      },
                      "start": 1031,
                      "end": 1045
                    },
                    "start": 1030,
                    "end": 1046
                  },
                  "start": 980,
                  "end": 1046
                }
              ],
              "start": 963,
              "end": 1047
            },
            "start": 957,
            "end": 1048
          }
        ],
        "start": 953,
        "end": 1050
      },
      "alternate": null,
      "start": 893,
      "end": 1050
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1066,
            "end": 1071
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1072,
                  "end": 1078
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 1079,
                  "end": 1096
                },
                "optional": false,
                "computed": false,
                "start": 1072,
                "end": 1096
              },
              "operator": "-",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1099,
                  "end": 1105
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1106,
                  "end": 1109
                },
                "optional": false,
                "computed": false,
                "start": 1099,
                "end": 1109
              },
              "start": 1072,
              "end": 1109
            }
          ],
          "optional": false,
          "start": 1066,
          "end": 1110
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1115,
          "end": 1119
        },
        "start": 1066,
        "end": 1119
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1136,
                "end": 1148
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: Infinity - NaN === Not-a-Number. Actual: ",
                    "raw": "'#6: Infinity - NaN === Not-a-Number. Actual: '",
                    "start": 1149,
                    "end": 1196
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 1200,
                        "end": 1208
                      },
                      "operator": "-",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1211,
                        "end": 1214
                      },
                      "start": 1200,
                      "end": 1214
                    },
                    "start": 1199,
                    "end": 1215
                  },
                  "start": 1149,
                  "end": 1215
                }
              ],
              "start": 1132,
              "end": 1216
            },
            "start": 1126,
            "end": 1217
          }
        ],
        "start": 1122,
        "end": 1219
      },
      "alternate": null,
      "start": 1062,
      "end": 1219
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1220
}