{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 352,
            "end": 356
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1\t-\t1",
              "raw": "\"1\\u0009-\\u00091\"",
              "start": 357,
              "end": 374
            }
          ],
          "optional": false,
          "start": 352,
          "end": 375
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 380,
          "end": 381
        },
        "start": 352,
        "end": 381
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 397,
                "end": 409
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: 1\\u0009-\\u00091 === 0",
                  "raw": "'#1: 1\\\\u0009-\\\\u00091 === 0'",
                  "start": 410,
                  "end": 439
                }
              ],
              "start": 393,
              "end": 440
            },
            "start": 387,
            "end": 441
          }
        ],
        "start": 383,
        "end": 443
      },
      "alternate": null,
      "start": 348,
      "end": 443
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 459,
            "end": 463
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1\u000b-\u000b1",
              "raw": "\"1\\u000B-\\u000B1\"",
              "start": 464,
              "end": 481
            }
          ],
          "optional": false,
          "start": 459,
          "end": 482
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 487,
          "end": 488
        },
        "start": 459,
        "end": 488
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 504,
                "end": 516
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: 1\\u000B-\\u000B1 === 0",
                  "raw": "'#2: 1\\\\u000B-\\\\u000B1 === 0'",
                  "start": 517,
                  "end": 546
                }
              ],
              "start": 500,
              "end": 547
            },
            "start": 494,
            "end": 548
          }
        ],
        "start": 490,
        "end": 552
      },
      "alternate": null,
      "start": 455,
      "end": 552
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 568,
            "end": 572
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1\f-\f1",
              "raw": "\"1\\u000C-\\u000C1\"",
              "start": 573,
              "end": 590
            }
          ],
          "optional": false,
          "start": 568,
          "end": 591
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 596,
          "end": 597
        },
        "start": 568,
        "end": 597
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 613,
                "end": 625
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: 1\\u000C-\\u000C1 === 0",
                  "raw": "'#3: 1\\\\u000C-\\\\u000C1 === 0'",
                  "start": 626,
                  "end": 655
                }
              ],
              "start": 609,
              "end": 656
            },
            "start": 603,
            "end": 657
          }
        ],
        "start": 599,
        "end": 659
      },
      "alternate": null,
      "start": 564,
      "end": 659
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 675,
            "end": 679
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1 - 1",
              "raw": "\"1\\u0020-\\u00201\"",
              "start": 680,
              "end": 697
            }
          ],
          "optional": false,
          "start": 675,
          "end": 698
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 703,
          "end": 704
        },
        "start": 675,
        "end": 704
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 720,
                "end": 732
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4: 1\\u0020-\\u00201 === 0",
                  "raw": "'#4: 1\\\\u0020-\\\\u00201 === 0'",
                  "start": 733,
                  "end": 762
                }
              ],
              "start": 716,
              "end": 763
            },
            "start": 710,
            "end": 764
          }
        ],
        "start": 706,
        "end": 766
      },
      "alternate": null,
      "start": 671,
      "end": 766
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 782,
            "end": 786
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1 - 1",
              "raw": "\"1\\u00A0-\\u00A01\"",
              "start": 787,
              "end": 804
            }
          ],
          "optional": false,
          "start": 782,
          "end": 805
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 810,
          "end": 811
        },
        "start": 782,
        "end": 811
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 827,
                "end": 839
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#5: 1\\u00A0-\\u00A01 === 0",
                  "raw": "'#5: 1\\\\u00A0-\\\\u00A01 === 0'",
                  "start": 840,
                  "end": 869
                }
              ],
              "start": 823,
              "end": 870
            },
            "start": 817,
            "end": 871
          }
        ],
        "start": 813,
        "end": 873
      },
      "alternate": null,
      "start": 778,
      "end": 873
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 889,
            "end": 893
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1\n-\n1",
              "raw": "\"1\\u000A-\\u000A1\"",
              "start": 894,
              "end": 911
            }
          ],
          "optional": false,
          "start": 889,
          "end": 912
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 917,
          "end": 918
        },
        "start": 889,
        "end": 918
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 934,
                "end": 946
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#6: 1\\u000A-\\u000A1 === 0",
                  "raw": "'#6: 1\\\\u000A-\\\\u000A1 === 0'",
                  "start": 947,
                  "end": 976
                }
              ],
              "start": 930,
              "end": 977
            },
            "start": 924,
            "end": 978
          }
        ],
        "start": 920,
        "end": 982
      },
      "alternate": null,
      "start": 885,
      "end": 982
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 998,
            "end": 1002
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1\r-\r1",
              "raw": "\"1\\u000D-\\u000D1\"",
              "start": 1003,
              "end": 1020
            }
          ],
          "optional": false,
          "start": 998,
          "end": 1021
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1026,
          "end": 1027
        },
        "start": 998,
        "end": 1027
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1043,
                "end": 1055
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#7: 1\\u000D-\\u000D1 === 0",
                  "raw": "'#7: 1\\\\u000D-\\\\u000D1 === 0'",
                  "start": 1056,
                  "end": 1085
                }
              ],
              "start": 1039,
              "end": 1086
            },
            "start": 1033,
            "end": 1087
          }
        ],
        "start": 1029,
        "end": 1089
      },
      "alternate": null,
      "start": 994,
      "end": 1089
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 1105,
            "end": 1109
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1 - 1",
              "raw": "\"1\\u2028-\\u20281\"",
              "start": 1110,
              "end": 1127
            }
          ],
          "optional": false,
          "start": 1105,
          "end": 1128
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1133,
          "end": 1134
        },
        "start": 1105,
        "end": 1134
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1150,
                "end": 1162
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#8: 1\\u2028-\\u20281 === 0",
                  "raw": "'#8: 1\\\\u2028-\\\\u20281 === 0'",
                  "start": 1163,
                  "end": 1192
                }
              ],
              "start": 1146,
              "end": 1193
            },
            "start": 1140,
            "end": 1194
          }
        ],
        "start": 1136,
        "end": 1196
      },
      "alternate": null,
      "start": 1101,
      "end": 1196
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 1212,
            "end": 1216
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1 - 1",
              "raw": "\"1\\u2029-\\u20291\"",
              "start": 1217,
              "end": 1234
            }
          ],
          "optional": false,
          "start": 1212,
          "end": 1235
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1240,
          "end": 1241
        },
        "start": 1212,
        "end": 1241
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1257,
                "end": 1269
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#9: 1\\u2029-\\u20291 === 0",
                  "raw": "'#9: 1\\\\u2029-\\\\u20291 === 0'",
                  "start": 1270,
                  "end": 1299
                }
              ],
              "start": 1253,
              "end": 1300
            },
            "start": 1247,
            "end": 1301
          }
        ],
        "start": 1243,
        "end": 1303
      },
      "alternate": null,
      "start": 1208,
      "end": 1303
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 1320,
            "end": 1324
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1\t\u000b\f  \n\r  -\t\u000b\f  \n\r  1",
              "raw": "\"1\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029-\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291\"",
              "start": 1325,
              "end": 1438
            }
          ],
          "optional": false,
          "start": 1320,
          "end": 1439
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1444,
          "end": 1445
        },
        "start": 1320,
        "end": 1445
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1461,
                "end": 1473
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#10: 1\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029-\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291 === 0",
                  "raw": "'#10: 1\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029-\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u20291 === 0'",
                  "start": 1474,
                  "end": 1616
                }
              ],
              "start": 1457,
              "end": 1617
            },
            "start": 1451,
            "end": 1618
          }
        ],
        "start": 1447,
        "end": 1620
      },
      "alternate": null,
      "start": 1316,
      "end": 1620
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1621
}