{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 341,
            "end": 347
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 348,
            "end": 354
          },
          "optional": false,
          "computed": false,
          "start": 341,
          "end": 354
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 355,
            "end": 364
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Symbol",
                        "start": 381,
                        "end": 387
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1",
                          "raw": "'1'",
                          "start": 388,
                          "end": 391
                        }
                      ],
                      "optional": false,
                      "start": 381,
                      "end": 392
                    },
                    "operator": "-",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 395,
                      "end": 397
                    },
                    "start": 381,
                    "end": 397
                  },
                  "start": 381,
                  "end": 398
                }
              ],
              "start": 377,
              "end": 400
            },
            "expression": false,
            "start": 366,
            "end": 400
          },
          {
            "type": "Literal",
            "value": "Symbol(\"1\") - 0n throws TypeError",
            "raw": "'Symbol(\"1\") - 0n throws TypeError'",
            "start": 402,
            "end": 437
          }
        ],
        "optional": false,
        "start": 341,
        "end": 438
      },
      "start": 341,
      "end": 439
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 441,
            "end": 447
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 448,
            "end": 454
          },
          "optional": false,
          "computed": false,
          "start": 441,
          "end": 454
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 455,
            "end": 464
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 481,
                      "end": 483
                    },
                    "operator": "-",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Symbol",
                        "start": 486,
                        "end": 492
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1",
                          "raw": "'1'",
                          "start": 493,
                          "end": 496
                        }
                      ],
                      "optional": false,
                      "start": 486,
                      "end": 497
                    },
                    "start": 481,
                    "end": 497
                  },
                  "start": 481,
                  "end": 498
                }
              ],
              "start": 477,
              "end": 500
            },
            "expression": false,
            "start": 466,
            "end": 500
          },
          {
            "type": "Literal",
            "value": "0n - Symbol(\"1\") throws TypeError",
            "raw": "'0n - Symbol(\"1\") throws TypeError'",
            "start": 502,
            "end": 537
          }
        ],
        "optional": false,
        "start": 441,
        "end": 538
      },
      "start": 441,
      "end": 539
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 541,
            "end": 547
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 548,
            "end": 554
          },
          "optional": false,
          "computed": false,
          "start": 541,
          "end": 554
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 555,
            "end": 564
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 581,
                        "end": 587
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 588,
                            "end": 594
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "'1'",
                              "start": 595,
                              "end": 598
                            }
                          ],
                          "optional": false,
                          "start": 588,
                          "end": 599
                        }
                      ],
                      "optional": false,
                      "start": 581,
                      "end": 600
                    },
                    "operator": "-",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 603,
                      "end": 605
                    },
                    "start": 581,
                    "end": 605
                  },
                  "start": 581,
                  "end": 606
                }
              ],
              "start": 577,
              "end": 608
            },
            "expression": false,
            "start": 566,
            "end": 608
          },
          {
            "type": "Literal",
            "value": "Object(Symbol(\"1\")) - 0n throws TypeError",
            "raw": "'Object(Symbol(\"1\")) - 0n throws TypeError'",
            "start": 610,
            "end": 653
          }
        ],
        "optional": false,
        "start": 541,
        "end": 654
      },
      "start": 541,
      "end": 655
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 657,
            "end": 663
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 664,
            "end": 670
          },
          "optional": false,
          "computed": false,
          "start": 657,
          "end": 670
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 671,
            "end": 680
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 697,
                      "end": 699
                    },
                    "operator": "-",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 702,
                        "end": 708
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 709,
                            "end": 715
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "'1'",
                              "start": 716,
                              "end": 719
                            }
                          ],
                          "optional": false,
                          "start": 709,
                          "end": 720
                        }
                      ],
                      "optional": false,
                      "start": 702,
                      "end": 721
                    },
                    "start": 697,
                    "end": 721
                  },
                  "start": 697,
                  "end": 722
                }
              ],
              "start": 693,
              "end": 724
            },
            "expression": false,
            "start": 682,
            "end": 724
          },
          {
            "type": "Literal",
            "value": "0n - Object(Symbol(\"1\")) throws TypeError",
            "raw": "'0n - Object(Symbol(\"1\")) throws TypeError'",
            "start": 726,
            "end": 769
          }
        ],
        "optional": false,
        "start": 657,
        "end": 770
      },
      "start": 657,
      "end": 771
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 773,
            "end": 779
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 780,
            "end": 786
          },
          "optional": false,
          "computed": false,
          "start": 773,
          "end": 786
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 787,
            "end": 796
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Symbol",
                                "start": 821,
                                "end": 827
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toPrimitive",
                                "start": 828,
                                "end": 839
                              },
                              "optional": false,
                              "computed": false,
                              "start": 821,
                              "end": 839
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 868,
                                        "end": 874
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 875,
                                          "end": 878
                                        }
                                      ],
                                      "optional": false,
                                      "start": 868,
                                      "end": 879
                                    },
                                    "start": 861,
                                    "end": 880
                                  }
                                ],
                                "start": 853,
                                "end": 886
                              },
                              "expression": false,
                              "start": 842,
                              "end": 886
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": true,
                            "start": 820,
                            "end": 886
                          }
                        ],
                        "start": 814,
                        "end": 890
                      },
                      "start": 813,
                      "end": 891
                    },
                    "operator": "-",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 894,
                      "end": 896
                    },
                    "start": 813,
                    "end": 896
                  },
                  "start": 813,
                  "end": 897
                }
              ],
              "start": 809,
              "end": 899
            },
            "expression": false,
            "start": 798,
            "end": 899
          },
          {
            "type": "Literal",
            "value": "({[Symbol.toPrimitive]: function() {return Symbol(\"1\");}}) - 0n throws TypeError",
            "raw": "'({[Symbol.toPrimitive]: function() {return Symbol(\"1\");}}) - 0n throws TypeError'",
            "start": 901,
            "end": 983
          }
        ],
        "optional": false,
        "start": 773,
        "end": 984
      },
      "start": 773,
      "end": 985
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 987,
            "end": 993
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 994,
            "end": 1000
          },
          "optional": false,
          "computed": false,
          "start": 987,
          "end": 1000
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1001,
            "end": 1010
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1027,
                      "end": 1029
                    },
                    "operator": "-",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "Symbol",
                              "start": 1039,
                              "end": 1045
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "toPrimitive",
                              "start": 1046,
                              "end": 1057
                            },
                            "optional": false,
                            "computed": false,
                            "start": 1039,
                            "end": 1057
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1086,
                                      "end": 1092
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1093,
                                        "end": 1096
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1086,
                                    "end": 1097
                                  },
                                  "start": 1079,
                                  "end": 1098
                                }
                              ],
                              "start": 1071,
                              "end": 1104
                            },
                            "expression": false,
                            "start": 1060,
                            "end": 1104
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": true,
                          "start": 1038,
                          "end": 1104
                        }
                      ],
                      "start": 1032,
                      "end": 1108
                    },
                    "start": 1027,
                    "end": 1108
                  },
                  "start": 1027,
                  "end": 1109
                }
              ],
              "start": 1023,
              "end": 1111
            },
            "expression": false,
            "start": 1012,
            "end": 1111
          },
          {
            "type": "Literal",
            "value": "0n - {[Symbol.toPrimitive]: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n - {[Symbol.toPrimitive]: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1113,
            "end": 1193
          }
        ],
        "optional": false,
        "start": 987,
        "end": 1194
      },
      "start": 987,
      "end": 1195
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1197,
            "end": 1203
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1204,
            "end": 1210
          },
          "optional": false,
          "computed": false,
          "start": 1197,
          "end": 1210
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1211,
            "end": 1220
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "valueOf",
                              "start": 1244,
                              "end": 1251
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 1279,
                                        "end": 1285
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 1286,
                                          "end": 1289
                                        }
                                      ],
                                      "optional": false,
                                      "start": 1279,
                                      "end": 1290
                                    },
                                    "start": 1272,
                                    "end": 1291
                                  }
                                ],
                                "start": 1264,
                                "end": 1297
                              },
                              "expression": false,
                              "start": 1253,
                              "end": 1297
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1244,
                            "end": 1297
                          }
                        ],
                        "start": 1238,
                        "end": 1301
                      },
                      "start": 1237,
                      "end": 1302
                    },
                    "operator": "-",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1305,
                      "end": 1307
                    },
                    "start": 1237,
                    "end": 1307
                  },
                  "start": 1237,
                  "end": 1308
                }
              ],
              "start": 1233,
              "end": 1310
            },
            "expression": false,
            "start": 1222,
            "end": 1310
          },
          {
            "type": "Literal",
            "value": "({valueOf: function() {return Symbol(\"1\");}}) - 0n throws TypeError",
            "raw": "'({valueOf: function() {return Symbol(\"1\");}}) - 0n throws TypeError'",
            "start": 1312,
            "end": 1381
          }
        ],
        "optional": false,
        "start": 1197,
        "end": 1382
      },
      "start": 1197,
      "end": 1383
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1385,
            "end": 1391
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1392,
            "end": 1398
          },
          "optional": false,
          "computed": false,
          "start": 1385,
          "end": 1398
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1399,
            "end": 1408
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1425,
                      "end": 1427
                    },
                    "operator": "-",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "valueOf",
                            "start": 1436,
                            "end": 1443
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1471,
                                      "end": 1477
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1478,
                                        "end": 1481
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1471,
                                    "end": 1482
                                  },
                                  "start": 1464,
                                  "end": 1483
                                }
                              ],
                              "start": 1456,
                              "end": 1489
                            },
                            "expression": false,
                            "start": 1445,
                            "end": 1489
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1436,
                          "end": 1489
                        }
                      ],
                      "start": 1430,
                      "end": 1493
                    },
                    "start": 1425,
                    "end": 1493
                  },
                  "start": 1425,
                  "end": 1494
                }
              ],
              "start": 1421,
              "end": 1496
            },
            "expression": false,
            "start": 1410,
            "end": 1496
          },
          {
            "type": "Literal",
            "value": "0n - {valueOf: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n - {valueOf: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1498,
            "end": 1565
          }
        ],
        "optional": false,
        "start": 1385,
        "end": 1566
      },
      "start": 1385,
      "end": 1567
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1569,
            "end": 1575
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1576,
            "end": 1582
          },
          "optional": false,
          "computed": false,
          "start": 1569,
          "end": 1582
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1583,
            "end": 1592
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "toString",
                              "start": 1616,
                              "end": 1624
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 1652,
                                        "end": 1658
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 1659,
                                          "end": 1662
                                        }
                                      ],
                                      "optional": false,
                                      "start": 1652,
                                      "end": 1663
                                    },
                                    "start": 1645,
                                    "end": 1664
                                  }
                                ],
                                "start": 1637,
                                "end": 1670
                              },
                              "expression": false,
                              "start": 1626,
                              "end": 1670
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1616,
                            "end": 1670
                          }
                        ],
                        "start": 1610,
                        "end": 1674
                      },
                      "start": 1609,
                      "end": 1675
                    },
                    "operator": "-",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1678,
                      "end": 1680
                    },
                    "start": 1609,
                    "end": 1680
                  },
                  "start": 1609,
                  "end": 1681
                }
              ],
              "start": 1605,
              "end": 1683
            },
            "expression": false,
            "start": 1594,
            "end": 1683
          },
          {
            "type": "Literal",
            "value": "({toString: function() {return Symbol(\"1\");}}) - 0n throws TypeError",
            "raw": "'({toString: function() {return Symbol(\"1\");}}) - 0n throws TypeError'",
            "start": 1685,
            "end": 1755
          }
        ],
        "optional": false,
        "start": 1569,
        "end": 1756
      },
      "start": 1569,
      "end": 1757
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1759,
            "end": 1765
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1766,
            "end": 1772
          },
          "optional": false,
          "computed": false,
          "start": 1759,
          "end": 1772
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1773,
            "end": 1782
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1799,
                      "end": 1801
                    },
                    "operator": "-",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "toString",
                            "start": 1810,
                            "end": 1818
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1846,
                                      "end": 1852
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1853,
                                        "end": 1856
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1846,
                                    "end": 1857
                                  },
                                  "start": 1839,
                                  "end": 1858
                                }
                              ],
                              "start": 1831,
                              "end": 1864
                            },
                            "expression": false,
                            "start": 1820,
                            "end": 1864
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1810,
                          "end": 1864
                        }
                      ],
                      "start": 1804,
                      "end": 1868
                    },
                    "start": 1799,
                    "end": 1868
                  },
                  "start": 1799,
                  "end": 1869
                }
              ],
              "start": 1795,
              "end": 1871
            },
            "expression": false,
            "start": 1784,
            "end": 1871
          },
          {
            "type": "Literal",
            "value": "0n - {toString: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n - {toString: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1873,
            "end": 1941
          }
        ],
        "optional": false,
        "start": 1759,
        "end": 1942
      },
      "start": 1759,
      "end": 1943
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1944
}