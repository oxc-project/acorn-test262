{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 387,
            "end": 391
          },
          "operator": "<<",
          "right": {
            "type": "Literal",
            "value": "1",
            "raw": "\"1\"",
            "start": 395,
            "end": 398
          },
          "start": 387,
          "end": 398
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 403,
          "end": 404
        },
        "start": 387,
        "end": 404
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 420,
                "end": 432
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: true << \"1\" === 2. Actual: ",
                    "raw": "'#1: true << \"1\" === 2. Actual: '",
                    "start": 433,
                    "end": 466
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 470,
                        "end": 474
                      },
                      "operator": "<<",
                      "right": {
                        "type": "Literal",
                        "value": "1",
                        "raw": "\"1\"",
                        "start": 478,
                        "end": 481
                      },
                      "start": 470,
                      "end": 481
                    },
                    "start": 469,
                    "end": 482
                  },
                  "start": 433,
                  "end": 482
                }
              ],
              "start": 416,
              "end": 483
            },
            "start": 410,
            "end": 484
          }
        ],
        "start": 406,
        "end": 486
      },
      "alternate": null,
      "start": 383,
      "end": 486
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": "1",
            "raw": "\"1\"",
            "start": 502,
            "end": 505
          },
          "operator": "<<",
          "right": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 509,
            "end": 513
          },
          "start": 502,
          "end": 513
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 518,
          "end": 519
        },
        "start": 502,
        "end": 519
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 535,
                "end": 547
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: \"1\" << true === 2. Actual: ",
                    "raw": "'#2: \"1\" << true === 2. Actual: '",
                    "start": 548,
                    "end": 581
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "1",
                        "raw": "\"1\"",
                        "start": 585,
                        "end": 588
                      },
                      "operator": "<<",
                      "right": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 592,
                        "end": 596
                      },
                      "start": 585,
                      "end": 596
                    },
                    "start": 584,
                    "end": 597
                  },
                  "start": 548,
                  "end": 597
                }
              ],
              "start": 531,
              "end": 598
            },
            "start": 525,
            "end": 599
          }
        ],
        "start": 521,
        "end": 601
      },
      "alternate": null,
      "start": 498,
      "end": 601
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 621,
              "end": 628
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 629,
                "end": 633
              }
            ],
            "start": 617,
            "end": 634
          },
          "operator": "<<",
          "right": {
            "type": "Literal",
            "value": "1",
            "raw": "\"1\"",
            "start": 638,
            "end": 641
          },
          "start": 617,
          "end": 641
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 646,
          "end": 647
        },
        "start": 617,
        "end": 647
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 663,
                "end": 675
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new Boolean(true) << \"1\" === 2. Actual: ",
                    "raw": "'#3: new Boolean(true) << \"1\" === 2. Actual: '",
                    "start": 676,
                    "end": 722
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 730,
                          "end": 737
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 738,
                            "end": 742
                          }
                        ],
                        "start": 726,
                        "end": 743
                      },
                      "operator": "<<",
                      "right": {
                        "type": "Literal",
                        "value": "1",
                        "raw": "\"1\"",
                        "start": 747,
                        "end": 750
                      },
                      "start": 726,
                      "end": 750
                    },
                    "start": 725,
                    "end": 751
                  },
                  "start": 676,
                  "end": 751
                }
              ],
              "start": 659,
              "end": 752
            },
            "start": 653,
            "end": 753
          }
        ],
        "start": 649,
        "end": 755
      },
      "alternate": null,
      "start": 613,
      "end": 755
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": "1",
            "raw": "\"1\"",
            "start": 771,
            "end": 774
          },
          "operator": "<<",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 782,
              "end": 789
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 790,
                "end": 794
              }
            ],
            "start": 778,
            "end": 795
          },
          "start": 771,
          "end": 795
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 800,
          "end": 801
        },
        "start": 771,
        "end": 801
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 817,
                "end": 829
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: \"1\" << new Boolean(true) === 2. Actual: ",
                    "raw": "'#4: \"1\" << new Boolean(true) === 2. Actual: '",
                    "start": 830,
                    "end": 876
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "1",
                        "raw": "\"1\"",
                        "start": 880,
                        "end": 883
                      },
                      "operator": "<<",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 891,
                          "end": 898
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 899,
                            "end": 903
                          }
                        ],
                        "start": 887,
                        "end": 904
                      },
                      "start": 880,
                      "end": 904
                    },
                    "start": 879,
                    "end": 905
                  },
                  "start": 830,
                  "end": 905
                }
              ],
              "start": 813,
              "end": 906
            },
            "start": 807,
            "end": 907
          }
        ],
        "start": 803,
        "end": 909
      },
      "alternate": null,
      "start": 767,
      "end": 909
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 925,
            "end": 929
          },
          "operator": "<<",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "String",
              "start": 937,
              "end": 943
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 944,
                "end": 947
              }
            ],
            "start": 933,
            "end": 948
          },
          "start": 925,
          "end": 948
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 953,
          "end": 954
        },
        "start": 925,
        "end": 954
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 970,
                "end": 982
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: true << new String(\"1\") === 2. Actual: ",
                    "raw": "'#5: true << new String(\"1\") === 2. Actual: '",
                    "start": 983,
                    "end": 1028
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 1032,
                        "end": 1036
                      },
                      "operator": "<<",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 1044,
                          "end": 1050
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "1",
                            "raw": "\"1\"",
                            "start": 1051,
                            "end": 1054
                          }
                        ],
                        "start": 1040,
                        "end": 1055
                      },
                      "start": 1032,
                      "end": 1055
                    },
                    "start": 1031,
                    "end": 1056
                  },
                  "start": 983,
                  "end": 1056
                }
              ],
              "start": 966,
              "end": 1057
            },
            "start": 960,
            "end": 1058
          }
        ],
        "start": 956,
        "end": 1060
      },
      "alternate": null,
      "start": 921,
      "end": 1060
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "String",
              "start": 1080,
              "end": 1086
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 1087,
                "end": 1090
              }
            ],
            "start": 1076,
            "end": 1091
          },
          "operator": "<<",
          "right": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 1095,
            "end": 1099
          },
          "start": 1076,
          "end": 1099
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1104,
          "end": 1105
        },
        "start": 1076,
        "end": 1105
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1121,
                "end": 1133
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: new String(\"1\") << true === 2. Actual: ",
                    "raw": "'#6: new String(\"1\") << true === 2. Actual: '",
                    "start": 1134,
                    "end": 1179
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 1187,
                          "end": 1193
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "1",
                            "raw": "\"1\"",
                            "start": 1194,
                            "end": 1197
                          }
                        ],
                        "start": 1183,
                        "end": 1198
                      },
                      "operator": "<<",
                      "right": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 1202,
                        "end": 1206
                      },
                      "start": 1183,
                      "end": 1206
                    },
                    "start": 1182,
                    "end": 1207
                  },
                  "start": 1134,
                  "end": 1207
                }
              ],
              "start": 1117,
              "end": 1208
            },
            "start": 1111,
            "end": 1209
          }
        ],
        "start": 1107,
        "end": 1211
      },
      "alternate": null,
      "start": 1072,
      "end": 1211
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 1231,
              "end": 1238
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 1239,
                "end": 1243
              }
            ],
            "start": 1227,
            "end": 1244
          },
          "operator": "<<",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "String",
              "start": 1252,
              "end": 1258
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 1259,
                "end": 1262
              }
            ],
            "start": 1248,
            "end": 1263
          },
          "start": 1227,
          "end": 1263
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1268,
          "end": 1269
        },
        "start": 1227,
        "end": 1269
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1285,
                "end": 1297
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: new Boolean(true) << new String(\"1\") === 2. Actual: ",
                    "raw": "'#7: new Boolean(true) << new String(\"1\") === 2. Actual: '",
                    "start": 1298,
                    "end": 1356
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 1364,
                          "end": 1371
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 1372,
                            "end": 1376
                          }
                        ],
                        "start": 1360,
                        "end": 1377
                      },
                      "operator": "<<",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 1385,
                          "end": 1391
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "1",
                            "raw": "\"1\"",
                            "start": 1392,
                            "end": 1395
                          }
                        ],
                        "start": 1381,
                        "end": 1396
                      },
                      "start": 1360,
                      "end": 1396
                    },
                    "start": 1359,
                    "end": 1397
                  },
                  "start": 1298,
                  "end": 1397
                }
              ],
              "start": 1281,
              "end": 1398
            },
            "start": 1275,
            "end": 1399
          }
        ],
        "start": 1271,
        "end": 1401
      },
      "alternate": null,
      "start": 1223,
      "end": 1401
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "String",
              "start": 1421,
              "end": 1427
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 1428,
                "end": 1431
              }
            ],
            "start": 1417,
            "end": 1432
          },
          "operator": "<<",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 1440,
              "end": 1447
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 1448,
                "end": 1452
              }
            ],
            "start": 1436,
            "end": 1453
          },
          "start": 1417,
          "end": 1453
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1458,
          "end": 1459
        },
        "start": 1417,
        "end": 1459
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1475,
                "end": 1487
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: new String(\"1\") << new Boolean(true) === 2. Actual: ",
                    "raw": "'#8: new String(\"1\") << new Boolean(true) === 2. Actual: '",
                    "start": 1488,
                    "end": 1546
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 1554,
                          "end": 1560
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "1",
                            "raw": "\"1\"",
                            "start": 1561,
                            "end": 1564
                          }
                        ],
                        "start": 1550,
                        "end": 1565
                      },
                      "operator": "<<",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 1573,
                          "end": 1580
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 1581,
                            "end": 1585
                          }
                        ],
                        "start": 1569,
                        "end": 1586
                      },
                      "start": 1550,
                      "end": 1586
                    },
                    "start": 1549,
                    "end": 1587
                  },
                  "start": 1488,
                  "end": 1587
                }
              ],
              "start": 1471,
              "end": 1588
            },
            "start": 1465,
            "end": 1589
          }
        ],
        "start": 1461,
        "end": 1591
      },
      "alternate": null,
      "start": 1413,
      "end": 1591
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1592
}