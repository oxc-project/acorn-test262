{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 388,
            "end": 392
          },
          "operator": "<<",
          "right": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 396,
            "end": 397
          },
          "start": 388,
          "end": 397
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 402,
          "end": 403
        },
        "start": 388,
        "end": 403
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 419,
                "end": 431
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: true << 1 === 2. Actual: ",
                    "raw": "'#1: true << 1 === 2. Actual: '",
                    "start": 432,
                    "end": 463
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 467,
                        "end": 471
                      },
                      "operator": "<<",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 475,
                        "end": 476
                      },
                      "start": 467,
                      "end": 476
                    },
                    "start": 466,
                    "end": 477
                  },
                  "start": 432,
                  "end": 477
                }
              ],
              "start": 415,
              "end": 478
            },
            "start": 409,
            "end": 479
          }
        ],
        "start": 405,
        "end": 481
      },
      "alternate": null,
      "start": 384,
      "end": 481
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 497,
            "end": 498
          },
          "operator": "<<",
          "right": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 502,
            "end": 506
          },
          "start": 497,
          "end": 506
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 511,
          "end": 512
        },
        "start": 497,
        "end": 512
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 528,
                "end": 540
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: 1 << true === 2. Actual: ",
                    "raw": "'#2: 1 << true === 2. Actual: '",
                    "start": 541,
                    "end": 572
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 576,
                        "end": 577
                      },
                      "operator": "<<",
                      "right": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 581,
                        "end": 585
                      },
                      "start": 576,
                      "end": 585
                    },
                    "start": 575,
                    "end": 586
                  },
                  "start": 541,
                  "end": 586
                }
              ],
              "start": 524,
              "end": 587
            },
            "start": 518,
            "end": 588
          }
        ],
        "start": 514,
        "end": 590
      },
      "alternate": null,
      "start": 493,
      "end": 590
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 610,
              "end": 617
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 618,
                "end": 622
              }
            ],
            "start": 606,
            "end": 623
          },
          "operator": "<<",
          "right": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 627,
            "end": 628
          },
          "start": 606,
          "end": 628
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 633,
          "end": 634
        },
        "start": 606,
        "end": 634
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 650,
                "end": 662
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new Boolean(true) << 1 === 2. Actual: ",
                    "raw": "'#3: new Boolean(true) << 1 === 2. Actual: '",
                    "start": 663,
                    "end": 707
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 715,
                          "end": 722
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 723,
                            "end": 727
                          }
                        ],
                        "start": 711,
                        "end": 728
                      },
                      "operator": "<<",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 732,
                        "end": 733
                      },
                      "start": 711,
                      "end": 733
                    },
                    "start": 710,
                    "end": 734
                  },
                  "start": 663,
                  "end": 734
                }
              ],
              "start": 646,
              "end": 735
            },
            "start": 640,
            "end": 736
          }
        ],
        "start": 636,
        "end": 738
      },
      "alternate": null,
      "start": 602,
      "end": 738
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 754,
            "end": 755
          },
          "operator": "<<",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 763,
              "end": 770
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 771,
                "end": 775
              }
            ],
            "start": 759,
            "end": 776
          },
          "start": 754,
          "end": 776
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 781,
          "end": 782
        },
        "start": 754,
        "end": 782
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 798,
                "end": 810
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: 1 << new Boolean(true) === 2. Actual: ",
                    "raw": "'#4: 1 << new Boolean(true) === 2. Actual: '",
                    "start": 811,
                    "end": 855
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 859,
                        "end": 860
                      },
                      "operator": "<<",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 868,
                          "end": 875
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 876,
                            "end": 880
                          }
                        ],
                        "start": 864,
                        "end": 881
                      },
                      "start": 859,
                      "end": 881
                    },
                    "start": 858,
                    "end": 882
                  },
                  "start": 811,
                  "end": 882
                }
              ],
              "start": 794,
              "end": 883
            },
            "start": 788,
            "end": 884
          }
        ],
        "start": 784,
        "end": 886
      },
      "alternate": null,
      "start": 750,
      "end": 886
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 902,
            "end": 906
          },
          "operator": "<<",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 914,
              "end": 920
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 921,
                "end": 922
              }
            ],
            "start": 910,
            "end": 923
          },
          "start": 902,
          "end": 923
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 928,
          "end": 929
        },
        "start": 902,
        "end": 929
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 945,
                "end": 957
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: true << new Number(1) === 2. Actual: ",
                    "raw": "'#5: true << new Number(1) === 2. Actual: '",
                    "start": 958,
                    "end": 1001
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 1005,
                        "end": 1009
                      },
                      "operator": "<<",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1017,
                          "end": 1023
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1024,
                            "end": 1025
                          }
                        ],
                        "start": 1013,
                        "end": 1026
                      },
                      "start": 1005,
                      "end": 1026
                    },
                    "start": 1004,
                    "end": 1027
                  },
                  "start": 958,
                  "end": 1027
                }
              ],
              "start": 941,
              "end": 1028
            },
            "start": 935,
            "end": 1029
          }
        ],
        "start": 931,
        "end": 1031
      },
      "alternate": null,
      "start": 898,
      "end": 1031
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 1051,
              "end": 1057
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1058,
                "end": 1059
              }
            ],
            "start": 1047,
            "end": 1060
          },
          "operator": "<<",
          "right": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 1064,
            "end": 1068
          },
          "start": 1047,
          "end": 1068
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1073,
          "end": 1074
        },
        "start": 1047,
        "end": 1074
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1090,
                "end": 1102
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: new Number(1) << true === 2. Actual: ",
                    "raw": "'#6: new Number(1) << true === 2. Actual: '",
                    "start": 1103,
                    "end": 1146
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1154,
                          "end": 1160
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1161,
                            "end": 1162
                          }
                        ],
                        "start": 1150,
                        "end": 1163
                      },
                      "operator": "<<",
                      "right": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 1167,
                        "end": 1171
                      },
                      "start": 1150,
                      "end": 1171
                    },
                    "start": 1149,
                    "end": 1172
                  },
                  "start": 1103,
                  "end": 1172
                }
              ],
              "start": 1086,
              "end": 1173
            },
            "start": 1080,
            "end": 1174
          }
        ],
        "start": 1076,
        "end": 1176
      },
      "alternate": null,
      "start": 1043,
      "end": 1176
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 1196,
              "end": 1203
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 1204,
                "end": 1208
              }
            ],
            "start": 1192,
            "end": 1209
          },
          "operator": "<<",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 1217,
              "end": 1223
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1224,
                "end": 1225
              }
            ],
            "start": 1213,
            "end": 1226
          },
          "start": 1192,
          "end": 1226
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1231,
          "end": 1232
        },
        "start": 1192,
        "end": 1232
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1248,
                "end": 1260
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: new Boolean(true) << new Number(1) === 2. Actual: ",
                    "raw": "'#7: new Boolean(true) << new Number(1) === 2. Actual: '",
                    "start": 1261,
                    "end": 1317
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 1325,
                          "end": 1332
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 1333,
                            "end": 1337
                          }
                        ],
                        "start": 1321,
                        "end": 1338
                      },
                      "operator": "<<",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1346,
                          "end": 1352
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1353,
                            "end": 1354
                          }
                        ],
                        "start": 1342,
                        "end": 1355
                      },
                      "start": 1321,
                      "end": 1355
                    },
                    "start": 1320,
                    "end": 1356
                  },
                  "start": 1261,
                  "end": 1356
                }
              ],
              "start": 1244,
              "end": 1357
            },
            "start": 1238,
            "end": 1358
          }
        ],
        "start": 1234,
        "end": 1360
      },
      "alternate": null,
      "start": 1188,
      "end": 1360
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 1380,
              "end": 1386
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1387,
                "end": 1388
              }
            ],
            "start": 1376,
            "end": 1389
          },
          "operator": "<<",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 1397,
              "end": 1404
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 1405,
                "end": 1409
              }
            ],
            "start": 1393,
            "end": 1410
          },
          "start": 1376,
          "end": 1410
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1415,
          "end": 1416
        },
        "start": 1376,
        "end": 1416
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1432,
                "end": 1444
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: new Number(1) << new Boolean(true) === 2. Actual: ",
                    "raw": "'#8: new Number(1) << new Boolean(true) === 2. Actual: '",
                    "start": 1445,
                    "end": 1501
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1509,
                          "end": 1515
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1516,
                            "end": 1517
                          }
                        ],
                        "start": 1505,
                        "end": 1518
                      },
                      "operator": "<<",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 1526,
                          "end": 1533
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 1534,
                            "end": 1538
                          }
                        ],
                        "start": 1522,
                        "end": 1539
                      },
                      "start": 1505,
                      "end": 1539
                    },
                    "start": 1504,
                    "end": 1540
                  },
                  "start": 1445,
                  "end": 1540
                }
              ],
              "start": 1428,
              "end": 1541
            },
            "start": 1422,
            "end": 1542
          }
        ],
        "start": 1418,
        "end": 1544
      },
      "alternate": null,
      "start": 1372,
      "end": 1544
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1545
}