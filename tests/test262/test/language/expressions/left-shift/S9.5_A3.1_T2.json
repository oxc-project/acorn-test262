{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 245,
                "end": 251
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 252,
                  "end": 253
                }
              ],
              "start": 241,
              "end": 254
            },
            "operator": "<<",
            "right": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 258,
              "end": 259
            },
            "start": 241,
            "end": 259
          },
          "start": 240,
          "end": 260
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 265,
          "end": 266
        },
        "start": 240,
        "end": 266
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 282,
                "end": 294
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: (new Number(1) << 0) === 1. Actual: ",
                    "raw": "'#1: (new Number(1) << 0) === 1. Actual: '",
                    "start": 295,
                    "end": 337
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 346,
                            "end": 352
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1,
                              "raw": "1",
                              "start": 353,
                              "end": 354
                            }
                          ],
                          "start": 342,
                          "end": 355
                        },
                        "operator": "<<",
                        "right": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 359,
                          "end": 360
                        },
                        "start": 342,
                        "end": 360
                      },
                      "start": 341,
                      "end": 361
                    },
                    "start": 340,
                    "end": 362
                  },
                  "start": 295,
                  "end": 362
                }
              ],
              "start": 278,
              "end": 363
            },
            "start": 272,
            "end": 364
          }
        ],
        "start": 268,
        "end": 366
      },
      "alternate": null,
      "start": 236,
      "end": 366
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1.234,
                "raw": "1.234",
                "start": 385,
                "end": 390
              },
              "prefix": true,
              "start": 384,
              "end": 390
            },
            "operator": "<<",
            "right": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 394,
              "end": 395
            },
            "start": 384,
            "end": 395
          },
          "start": 383,
          "end": 396
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 402,
            "end": 403
          },
          "prefix": true,
          "start": 401,
          "end": 403
        },
        "start": 383,
        "end": 403
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 419,
                "end": 431
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: (-1.234 << 0) === -1. Actual: ",
                    "raw": "'#2: (-1.234 << 0) === -1. Actual: '",
                    "start": 432,
                    "end": 468
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 1.234,
                            "raw": "1.234",
                            "start": 474,
                            "end": 479
                          },
                          "prefix": true,
                          "start": 473,
                          "end": 479
                        },
                        "operator": "<<",
                        "right": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 483,
                          "end": 484
                        },
                        "start": 473,
                        "end": 484
                      },
                      "start": 472,
                      "end": 485
                    },
                    "start": 471,
                    "end": 486
                  },
                  "start": 432,
                  "end": 486
                }
              ],
              "start": 415,
              "end": 487
            },
            "start": 409,
            "end": 488
          }
        ],
        "start": 405,
        "end": 490
      },
      "alternate": null,
      "start": 379,
      "end": 490
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 491
}