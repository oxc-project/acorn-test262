{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 285,
                "end": 291
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 292,
                "end": 295
              },
              "optional": false,
              "computed": false,
              "start": 285,
              "end": 295
            },
            "operator": ">>>",
            "right": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 300,
              "end": 301
            },
            "start": 285,
            "end": 301
          },
          "start": 284,
          "end": 302
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 308,
            "end": 309
          },
          "prefix": true,
          "start": 307,
          "end": 309
        },
        "start": 284,
        "end": 309
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 325,
                "end": 337
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1.1: (Number.NaN >>> 0) === 0. Actual: ",
                    "raw": "'#1.1: (Number.NaN >>> 0) === 0. Actual: '",
                    "start": 338,
                    "end": 380
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 385,
                            "end": 391
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "NaN",
                            "start": 392,
                            "end": 395
                          },
                          "optional": false,
                          "computed": false,
                          "start": 385,
                          "end": 395
                        },
                        "operator": ">>>",
                        "right": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 400,
                          "end": 401
                        },
                        "start": 385,
                        "end": 401
                      },
                      "start": 384,
                      "end": 402
                    },
                    "start": 383,
                    "end": 403
                  },
                  "start": 338,
                  "end": 403
                }
              ],
              "start": 321,
              "end": 404
            },
            "start": 315,
            "end": 405
          }
        ],
        "start": 311,
        "end": 407
      },
      "alternate": {
        "type": "IfStatement",
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 417,
              "end": 418
            },
            "operator": "/",
            "right": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "BinaryExpression",
                "left": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 420,
                    "end": 426
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "NaN",
                    "start": 427,
                    "end": 430
                  },
                  "optional": false,
                  "computed": false,
                  "start": 420,
                  "end": 430
                },
                "operator": ">>>",
                "right": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 435,
                  "end": 436
                },
                "start": 420,
                "end": 436
              },
              "start": 419,
              "end": 437
            },
            "start": 417,
            "end": 437
          },
          "operator": "!==",
          "right": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Number",
              "start": 442,
              "end": 448
            },
            "property": {
              "type": "Identifier",
              "name": "POSITIVE_INFINITY",
              "start": 449,
              "end": 466
            },
            "optional": false,
            "computed": false,
            "start": 442,
            "end": 466
          },
          "start": 417,
          "end": 466
        },
        "consequent": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 482,
                  "end": 494
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "#1.2: (Number.NaN >>> 0) === +0. Actual: -0",
                    "raw": "'#1.2: (Number.NaN >>> 0) === +0. Actual: -0'",
                    "start": 495,
                    "end": 540
                  }
                ],
                "start": 478,
                "end": 541
              },
              "start": 472,
              "end": 542
            }
          ],
          "start": 468,
          "end": 544
        },
        "alternate": null,
        "start": 413,
        "end": 544
      },
      "start": 280,
      "end": 544
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 562,
                "end": 568
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "abc",
                  "raw": "\"abc\"",
                  "start": 569,
                  "end": 574
                }
              ],
              "optional": false,
              "start": 562,
              "end": 575
            },
            "operator": ">>>",
            "right": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 580,
              "end": 581
            },
            "start": 562,
            "end": 581
          },
          "start": 561,
          "end": 582
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 588,
            "end": 589
          },
          "prefix": true,
          "start": 587,
          "end": 589
        },
        "start": 561,
        "end": 589
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 605,
                "end": 617
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2.1: (Number(\"abc\") >>> 0) === 0. Actual: ",
                    "raw": "'#2.1: (Number(\"abc\") >>> 0) === 0. Actual: '",
                    "start": 618,
                    "end": 663
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 668,
                            "end": 674
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "abc",
                              "raw": "\"abc\"",
                              "start": 675,
                              "end": 680
                            }
                          ],
                          "optional": false,
                          "start": 668,
                          "end": 681
                        },
                        "operator": ">>>",
                        "right": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 686,
                          "end": 687
                        },
                        "start": 668,
                        "end": 687
                      },
                      "start": 667,
                      "end": 688
                    },
                    "start": 666,
                    "end": 689
                  },
                  "start": 618,
                  "end": 689
                }
              ],
              "start": 601,
              "end": 690
            },
            "start": 595,
            "end": 691
          }
        ],
        "start": 591,
        "end": 693
      },
      "alternate": {
        "type": "IfStatement",
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 703,
              "end": 704
            },
            "operator": "/",
            "right": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 706,
                  "end": 707
                },
                "operator": ">>>",
                "right": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 712,
                  "end": 713
                },
                "start": 706,
                "end": 713
              },
              "start": 705,
              "end": 714
            },
            "start": 703,
            "end": 714
          },
          "operator": "!==",
          "right": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Number",
              "start": 719,
              "end": 725
            },
            "property": {
              "type": "Identifier",
              "name": "POSITIVE_INFINITY",
              "start": 726,
              "end": 743
            },
            "optional": false,
            "computed": false,
            "start": 719,
            "end": 743
          },
          "start": 703,
          "end": 743
        },
        "consequent": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 759,
                  "end": 771
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "#2.2: (0 >>> 0) === +0. Actual: -0",
                    "raw": "'#2.2: (0 >>> 0) === +0. Actual: -0'",
                    "start": 772,
                    "end": 808
                  }
                ],
                "start": 755,
                "end": 809
              },
              "start": 749,
              "end": 810
            }
          ],
          "start": 745,
          "end": 812
        },
        "alternate": null,
        "start": 699,
        "end": 812
      },
      "start": 557,
      "end": 812
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 830,
              "end": 831
            },
            "operator": ">>>",
            "right": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 836,
              "end": 837
            },
            "start": 830,
            "end": 837
          },
          "start": 829,
          "end": 838
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 844,
            "end": 845
          },
          "prefix": true,
          "start": 843,
          "end": 845
        },
        "start": 829,
        "end": 845
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 861,
                "end": 873
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3.1: (0 >>> 0) === 0. Actual: ",
                    "raw": "'#3.1: (0 >>> 0) === 0. Actual: '",
                    "start": 874,
                    "end": 907
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 912,
                          "end": 913
                        },
                        "operator": ">>>",
                        "right": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 918,
                          "end": 919
                        },
                        "start": 912,
                        "end": 919
                      },
                      "start": 911,
                      "end": 920
                    },
                    "start": 910,
                    "end": 921
                  },
                  "start": 874,
                  "end": 921
                }
              ],
              "start": 857,
              "end": 922
            },
            "start": 851,
            "end": 923
          }
        ],
        "start": 847,
        "end": 925
      },
      "alternate": {
        "type": "IfStatement",
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 935,
              "end": 936
            },
            "operator": "/",
            "right": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 938,
                  "end": 939
                },
                "operator": ">>>",
                "right": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 944,
                  "end": 945
                },
                "start": 938,
                "end": 945
              },
              "start": 937,
              "end": 946
            },
            "start": 935,
            "end": 946
          },
          "operator": "!==",
          "right": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Number",
              "start": 951,
              "end": 957
            },
            "property": {
              "type": "Identifier",
              "name": "POSITIVE_INFINITY",
              "start": 958,
              "end": 975
            },
            "optional": false,
            "computed": false,
            "start": 951,
            "end": 975
          },
          "start": 935,
          "end": 975
        },
        "consequent": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 991,
                  "end": 1003
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "#3.2: (0 >>> 0) === +0. Actual: -0",
                    "raw": "'#3.2: (0 >>> 0) === +0. Actual: -0'",
                    "start": 1004,
                    "end": 1040
                  }
                ],
                "start": 987,
                "end": 1041
              },
              "start": 981,
              "end": 1042
            }
          ],
          "start": 977,
          "end": 1044
        },
        "alternate": null,
        "start": 931,
        "end": 1044
      },
      "start": 825,
      "end": 1044
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1063,
                "end": 1064
              },
              "prefix": true,
              "start": 1062,
              "end": 1064
            },
            "operator": ">>>",
            "right": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1069,
              "end": 1070
            },
            "start": 1062,
            "end": 1070
          },
          "start": 1061,
          "end": 1071
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1077,
            "end": 1078
          },
          "prefix": true,
          "start": 1076,
          "end": 1078
        },
        "start": 1061,
        "end": 1078
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1094,
                "end": 1106
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4.1: (-0 >>> 0) === 0",
                  "raw": "\"#4.1: (-0 >>> 0) === 0\"",
                  "start": 1107,
                  "end": 1131
                }
              ],
              "start": 1090,
              "end": 1132
            },
            "start": 1084,
            "end": 1133
          }
        ],
        "start": 1080,
        "end": 1135
      },
      "alternate": {
        "type": "IfStatement",
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1145,
              "end": 1146
            },
            "operator": "/",
            "right": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "BinaryExpression",
                "left": {
                  "type": "UnaryExpression",
                  "operator": "-",
                  "argument": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0",
                    "start": 1149,
                    "end": 1150
                  },
                  "prefix": true,
                  "start": 1148,
                  "end": 1150
                },
                "operator": ">>>",
                "right": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 1155,
                  "end": 1156
                },
                "start": 1148,
                "end": 1156
              },
              "start": 1147,
              "end": 1157
            },
            "start": 1145,
            "end": 1157
          },
          "operator": "!==",
          "right": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Number",
              "start": 1162,
              "end": 1168
            },
            "property": {
              "type": "Identifier",
              "name": "POSITIVE_INFINITY",
              "start": 1169,
              "end": 1186
            },
            "optional": false,
            "computed": false,
            "start": 1162,
            "end": 1186
          },
          "start": 1145,
          "end": 1186
        },
        "consequent": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 1202,
                  "end": 1214
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "#4.2: (-0 >>> 0) === +0. Actual: -0",
                    "raw": "\"#4.2: (-0 >>> 0) === +0. Actual: -0\"",
                    "start": 1215,
                    "end": 1252
                  }
                ],
                "start": 1198,
                "end": 1253
              },
              "start": 1192,
              "end": 1254
            }
          ],
          "start": 1188,
          "end": 1256
        },
        "alternate": null,
        "start": 1141,
        "end": 1256
      },
      "start": 1057,
      "end": 1256
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1274,
                "end": 1280
              },
              "property": {
                "type": "Identifier",
                "name": "POSITIVE_INFINITY",
                "start": 1281,
                "end": 1298
              },
              "optional": false,
              "computed": false,
              "start": 1274,
              "end": 1298
            },
            "operator": ">>>",
            "right": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1303,
              "end": 1304
            },
            "start": 1274,
            "end": 1304
          },
          "start": 1273,
          "end": 1305
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1311,
            "end": 1312
          },
          "prefix": true,
          "start": 1310,
          "end": 1312
        },
        "start": 1273,
        "end": 1312
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1328,
                "end": 1340
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5.1: (Number.POSITIVE_INFINITY >>> 0) === 0. Actual: ",
                    "raw": "'#5.1: (Number.POSITIVE_INFINITY >>> 0) === 0. Actual: '",
                    "start": 1341,
                    "end": 1397
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1402,
                            "end": 1408
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "POSITIVE_INFINITY",
                            "start": 1409,
                            "end": 1426
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1402,
                          "end": 1426
                        },
                        "operator": ">>>",
                        "right": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 1431,
                          "end": 1432
                        },
                        "start": 1402,
                        "end": 1432
                      },
                      "start": 1401,
                      "end": 1433
                    },
                    "start": 1400,
                    "end": 1434
                  },
                  "start": 1341,
                  "end": 1434
                }
              ],
              "start": 1324,
              "end": 1435
            },
            "start": 1318,
            "end": 1436
          }
        ],
        "start": 1314,
        "end": 1438
      },
      "alternate": {
        "type": "IfStatement",
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1448,
              "end": 1449
            },
            "operator": "/",
            "right": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "BinaryExpression",
                "left": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 1451,
                    "end": 1457
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "POSITIVE_INFINITY",
                    "start": 1458,
                    "end": 1475
                  },
                  "optional": false,
                  "computed": false,
                  "start": 1451,
                  "end": 1475
                },
                "operator": ">>>",
                "right": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 1480,
                  "end": 1481
                },
                "start": 1451,
                "end": 1481
              },
              "start": 1450,
              "end": 1482
            },
            "start": 1448,
            "end": 1482
          },
          "operator": "!==",
          "right": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Number",
              "start": 1487,
              "end": 1493
            },
            "property": {
              "type": "Identifier",
              "name": "POSITIVE_INFINITY",
              "start": 1494,
              "end": 1511
            },
            "optional": false,
            "computed": false,
            "start": 1487,
            "end": 1511
          },
          "start": 1448,
          "end": 1511
        },
        "consequent": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 1527,
                  "end": 1539
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "#5.2: (Number.POSITIVE_INFINITY >>> 0) === +0. Actual: -0",
                    "raw": "'#5.2: (Number.POSITIVE_INFINITY >>> 0) === +0. Actual: -0'",
                    "start": 1540,
                    "end": 1599
                  }
                ],
                "start": 1523,
                "end": 1600
              },
              "start": 1517,
              "end": 1601
            }
          ],
          "start": 1513,
          "end": 1603
        },
        "alternate": null,
        "start": 1444,
        "end": 1603
      },
      "start": 1269,
      "end": 1603
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1621,
                "end": 1627
              },
              "property": {
                "type": "Identifier",
                "name": "NEGATIVE_INFINITY",
                "start": 1628,
                "end": 1645
              },
              "optional": false,
              "computed": false,
              "start": 1621,
              "end": 1645
            },
            "operator": ">>>",
            "right": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1650,
              "end": 1651
            },
            "start": 1621,
            "end": 1651
          },
          "start": 1620,
          "end": 1652
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1658,
            "end": 1659
          },
          "prefix": true,
          "start": 1657,
          "end": 1659
        },
        "start": 1620,
        "end": 1659
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1675,
                "end": 1687
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#6.1: (Number.NEGATIVE_INFINITY >>> 0) === 0",
                  "raw": "\"#6.1: (Number.NEGATIVE_INFINITY >>> 0) === 0\"",
                  "start": 1688,
                  "end": 1734
                }
              ],
              "start": 1671,
              "end": 1735
            },
            "start": 1665,
            "end": 1736
          }
        ],
        "start": 1661,
        "end": 1738
      },
      "alternate": {
        "type": "IfStatement",
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1748,
              "end": 1749
            },
            "operator": "/",
            "right": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "BinaryExpression",
                "left": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 1751,
                    "end": 1757
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "NEGATIVE_INFINITY",
                    "start": 1758,
                    "end": 1775
                  },
                  "optional": false,
                  "computed": false,
                  "start": 1751,
                  "end": 1775
                },
                "operator": ">>>",
                "right": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 1780,
                  "end": 1781
                },
                "start": 1751,
                "end": 1781
              },
              "start": 1750,
              "end": 1782
            },
            "start": 1748,
            "end": 1782
          },
          "operator": "!==",
          "right": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Number",
              "start": 1787,
              "end": 1793
            },
            "property": {
              "type": "Identifier",
              "name": "POSITIVE_INFINITY",
              "start": 1794,
              "end": 1811
            },
            "optional": false,
            "computed": false,
            "start": 1787,
            "end": 1811
          },
          "start": 1748,
          "end": 1811
        },
        "consequent": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 1827,
                  "end": 1839
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "#6.2: (Number.NEGATIVE_INFINITY >>> 0) === +0. Actual: -0",
                    "raw": "\"#6.2: (Number.NEGATIVE_INFINITY >>> 0) === +0. Actual: -0\"",
                    "start": 1840,
                    "end": 1899
                  }
                ],
                "start": 1823,
                "end": 1900
              },
              "start": 1817,
              "end": 1901
            }
          ],
          "start": 1813,
          "end": 1903
        },
        "alternate": null,
        "start": 1744,
        "end": 1903
      },
      "start": 1616,
      "end": 1903
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1904
}