{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 437,
            "end": 443
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 444,
            "end": 450
          },
          "optional": false,
          "computed": false,
          "start": 437,
          "end": 450
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 451,
            "end": 460
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 477,
                        "end": 483
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": null,
                          "raw": "2n",
                          "bigint": "2",
                          "start": 484,
                          "end": 486
                        }
                      ],
                      "optional": false,
                      "start": 477,
                      "end": 487
                    },
                    "operator": ">>>",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 492,
                      "end": 494
                    },
                    "start": 477,
                    "end": 494
                  },
                  "start": 477,
                  "end": 495
                }
              ],
              "start": 473,
              "end": 497
            },
            "expression": false,
            "start": 462,
            "end": 497
          },
          {
            "type": "Literal",
            "value": "Object(2n) >>> 0n throws TypeError",
            "raw": "'Object(2n) >>> 0n throws TypeError'",
            "start": 499,
            "end": 535
          }
        ],
        "optional": false,
        "start": 437,
        "end": 536
      },
      "start": 437,
      "end": 537
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 539,
            "end": 545
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 546,
            "end": 552
          },
          "optional": false,
          "computed": false,
          "start": 539,
          "end": 552
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 553,
            "end": 562
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 579,
                      "end": 581
                    },
                    "operator": ">>>",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 586,
                        "end": 592
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": null,
                          "raw": "2n",
                          "bigint": "2",
                          "start": 593,
                          "end": 595
                        }
                      ],
                      "optional": false,
                      "start": 586,
                      "end": 596
                    },
                    "start": 579,
                    "end": 596
                  },
                  "start": 579,
                  "end": 597
                }
              ],
              "start": 575,
              "end": 599
            },
            "expression": false,
            "start": 564,
            "end": 599
          },
          {
            "type": "Literal",
            "value": "0n >>> Object(2n) throws TypeError",
            "raw": "'0n >>> Object(2n) throws TypeError'",
            "start": 601,
            "end": 637
          }
        ],
        "optional": false,
        "start": 539,
        "end": 638
      },
      "start": 539,
      "end": 639
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 641,
            "end": 647
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 648,
            "end": 654
          },
          "optional": false,
          "computed": false,
          "start": 641,
          "end": 654
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 655,
            "end": 664
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Symbol",
                                "start": 689,
                                "end": 695
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toPrimitive",
                                "start": 696,
                                "end": 707
                              },
                              "optional": false,
                              "computed": false,
                              "start": 689,
                              "end": 707
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "Literal",
                                      "value": null,
                                      "raw": "2n",
                                      "bigint": "2",
                                      "start": 736,
                                      "end": 738
                                    },
                                    "start": 729,
                                    "end": 739
                                  }
                                ],
                                "start": 721,
                                "end": 745
                              },
                              "expression": false,
                              "start": 710,
                              "end": 745
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": true,
                            "start": 688,
                            "end": 745
                          }
                        ],
                        "start": 682,
                        "end": 749
                      },
                      "start": 681,
                      "end": 750
                    },
                    "operator": ">>>",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 755,
                      "end": 757
                    },
                    "start": 681,
                    "end": 757
                  },
                  "start": 681,
                  "end": 758
                }
              ],
              "start": 677,
              "end": 760
            },
            "expression": false,
            "start": 666,
            "end": 760
          },
          {
            "type": "Literal",
            "value": "({[Symbol.toPrimitive]: function() {return 2n;}}) >>> 0n throws TypeError",
            "raw": "'({[Symbol.toPrimitive]: function() {return 2n;}}) >>> 0n throws TypeError'",
            "start": 762,
            "end": 837
          }
        ],
        "optional": false,
        "start": 641,
        "end": 838
      },
      "start": 641,
      "end": 839
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 841,
            "end": 847
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 848,
            "end": 854
          },
          "optional": false,
          "computed": false,
          "start": 841,
          "end": 854
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 855,
            "end": 864
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 881,
                      "end": 883
                    },
                    "operator": ">>>",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "Symbol",
                              "start": 895,
                              "end": 901
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "toPrimitive",
                              "start": 902,
                              "end": 913
                            },
                            "optional": false,
                            "computed": false,
                            "start": 895,
                            "end": 913
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "2n",
                                    "bigint": "2",
                                    "start": 942,
                                    "end": 944
                                  },
                                  "start": 935,
                                  "end": 945
                                }
                              ],
                              "start": 927,
                              "end": 951
                            },
                            "expression": false,
                            "start": 916,
                            "end": 951
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": true,
                          "start": 894,
                          "end": 951
                        }
                      ],
                      "start": 888,
                      "end": 955
                    },
                    "start": 881,
                    "end": 955
                  },
                  "start": 881,
                  "end": 956
                }
              ],
              "start": 877,
              "end": 958
            },
            "expression": false,
            "start": 866,
            "end": 958
          },
          {
            "type": "Literal",
            "value": "0n >>> {[Symbol.toPrimitive]: function() {return 2n;}} throws TypeError",
            "raw": "'0n >>> {[Symbol.toPrimitive]: function() {return 2n;}} throws TypeError'",
            "start": 960,
            "end": 1033
          }
        ],
        "optional": false,
        "start": 841,
        "end": 1034
      },
      "start": 841,
      "end": 1035
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1037,
            "end": 1043
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1044,
            "end": 1050
          },
          "optional": false,
          "computed": false,
          "start": 1037,
          "end": 1050
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1051,
            "end": 1060
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "valueOf",
                              "start": 1084,
                              "end": 1091
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "Literal",
                                      "value": null,
                                      "raw": "2n",
                                      "bigint": "2",
                                      "start": 1119,
                                      "end": 1121
                                    },
                                    "start": 1112,
                                    "end": 1122
                                  }
                                ],
                                "start": 1104,
                                "end": 1128
                              },
                              "expression": false,
                              "start": 1093,
                              "end": 1128
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1084,
                            "end": 1128
                          }
                        ],
                        "start": 1078,
                        "end": 1132
                      },
                      "start": 1077,
                      "end": 1133
                    },
                    "operator": ">>>",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1138,
                      "end": 1140
                    },
                    "start": 1077,
                    "end": 1140
                  },
                  "start": 1077,
                  "end": 1141
                }
              ],
              "start": 1073,
              "end": 1143
            },
            "expression": false,
            "start": 1062,
            "end": 1143
          },
          {
            "type": "Literal",
            "value": "({valueOf: function() {return 2n;}}) >>> 0n throws TypeError",
            "raw": "'({valueOf: function() {return 2n;}}) >>> 0n throws TypeError'",
            "start": 1145,
            "end": 1207
          }
        ],
        "optional": false,
        "start": 1037,
        "end": 1208
      },
      "start": 1037,
      "end": 1209
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1211,
            "end": 1217
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1218,
            "end": 1224
          },
          "optional": false,
          "computed": false,
          "start": 1211,
          "end": 1224
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1225,
            "end": 1234
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1251,
                      "end": 1253
                    },
                    "operator": ">>>",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "valueOf",
                            "start": 1264,
                            "end": 1271
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "2n",
                                    "bigint": "2",
                                    "start": 1299,
                                    "end": 1301
                                  },
                                  "start": 1292,
                                  "end": 1302
                                }
                              ],
                              "start": 1284,
                              "end": 1308
                            },
                            "expression": false,
                            "start": 1273,
                            "end": 1308
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1264,
                          "end": 1308
                        }
                      ],
                      "start": 1258,
                      "end": 1312
                    },
                    "start": 1251,
                    "end": 1312
                  },
                  "start": 1251,
                  "end": 1313
                }
              ],
              "start": 1247,
              "end": 1315
            },
            "expression": false,
            "start": 1236,
            "end": 1315
          },
          {
            "type": "Literal",
            "value": "0n >>> {valueOf: function() {return 2n;}} throws TypeError",
            "raw": "'0n >>> {valueOf: function() {return 2n;}} throws TypeError'",
            "start": 1317,
            "end": 1377
          }
        ],
        "optional": false,
        "start": 1211,
        "end": 1378
      },
      "start": 1211,
      "end": 1379
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1381,
            "end": 1387
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1388,
            "end": 1394
          },
          "optional": false,
          "computed": false,
          "start": 1381,
          "end": 1394
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1395,
            "end": 1404
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "toString",
                              "start": 1428,
                              "end": 1436
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "Literal",
                                      "value": null,
                                      "raw": "2n",
                                      "bigint": "2",
                                      "start": 1464,
                                      "end": 1466
                                    },
                                    "start": 1457,
                                    "end": 1467
                                  }
                                ],
                                "start": 1449,
                                "end": 1473
                              },
                              "expression": false,
                              "start": 1438,
                              "end": 1473
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1428,
                            "end": 1473
                          }
                        ],
                        "start": 1422,
                        "end": 1477
                      },
                      "start": 1421,
                      "end": 1478
                    },
                    "operator": ">>>",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1483,
                      "end": 1485
                    },
                    "start": 1421,
                    "end": 1485
                  },
                  "start": 1421,
                  "end": 1486
                }
              ],
              "start": 1417,
              "end": 1488
            },
            "expression": false,
            "start": 1406,
            "end": 1488
          },
          {
            "type": "Literal",
            "value": "({toString: function() {return 2n;}}) >>> 0n throws TypeError",
            "raw": "'({toString: function() {return 2n;}}) >>> 0n throws TypeError'",
            "start": 1490,
            "end": 1553
          }
        ],
        "optional": false,
        "start": 1381,
        "end": 1554
      },
      "start": 1381,
      "end": 1555
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1557,
            "end": 1563
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1564,
            "end": 1570
          },
          "optional": false,
          "computed": false,
          "start": 1557,
          "end": 1570
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1571,
            "end": 1580
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1597,
                      "end": 1599
                    },
                    "operator": ">>>",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "toString",
                            "start": 1610,
                            "end": 1618
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "2n",
                                    "bigint": "2",
                                    "start": 1646,
                                    "end": 1648
                                  },
                                  "start": 1639,
                                  "end": 1649
                                }
                              ],
                              "start": 1631,
                              "end": 1655
                            },
                            "expression": false,
                            "start": 1620,
                            "end": 1655
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1610,
                          "end": 1655
                        }
                      ],
                      "start": 1604,
                      "end": 1659
                    },
                    "start": 1597,
                    "end": 1659
                  },
                  "start": 1597,
                  "end": 1660
                }
              ],
              "start": 1593,
              "end": 1662
            },
            "expression": false,
            "start": 1582,
            "end": 1662
          },
          {
            "type": "Literal",
            "value": "0n >>> {toString: function() {return 2n;}} throws TypeError",
            "raw": "'0n >>> {toString: function() {return 2n;}} throws TypeError'",
            "start": 1664,
            "end": 1725
          }
        ],
        "optional": false,
        "start": 1557,
        "end": 1726
      },
      "start": 1557,
      "end": 1727
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1728
}