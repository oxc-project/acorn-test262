{
  "type": "Program",
  "start": 0,
  "end": 1568,
  "body": [
    {
      "type": "IfStatement",
      "start": 383,
      "end": 483,
      "test": {
        "type": "BinaryExpression",
        "start": 387,
        "end": 403,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 387,
          "end": 397,
          "expression": {
            "type": "BinaryExpression",
            "start": 388,
            "end": 396,
            "left": {
              "type": "Literal",
              "start": 388,
              "end": 392,
              "value": true,
              "raw": "true"
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "start": 395,
              "end": 396,
              "value": 1,
              "raw": "1"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 402,
          "end": 403,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 405,
        "end": 483,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 409,
            "end": 481,
            "argument": {
              "type": "NewExpression",
              "start": 415,
              "end": 480,
              "callee": {
                "type": "Identifier",
                "start": 419,
                "end": 431,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 432,
                  "end": 479,
                  "left": {
                    "type": "Literal",
                    "start": 432,
                    "end": 464,
                    "value": "#1: (true ^ 1) === 0. Actual: ",
                    "raw": "'#1: (true ^ 1) === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 467,
                    "end": 479,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 468,
                      "end": 478,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 469,
                        "end": 477,
                        "left": {
                          "type": "Literal",
                          "start": 469,
                          "end": 473,
                          "value": true,
                          "raw": "true"
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "start": 476,
                          "end": 477,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 495,
      "end": 595,
      "test": {
        "type": "BinaryExpression",
        "start": 499,
        "end": 515,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 499,
          "end": 509,
          "expression": {
            "type": "BinaryExpression",
            "start": 500,
            "end": 508,
            "left": {
              "type": "Literal",
              "start": 500,
              "end": 501,
              "value": 1,
              "raw": "1"
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "start": 504,
              "end": 508,
              "value": true,
              "raw": "true"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 514,
          "end": 515,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 517,
        "end": 595,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 521,
            "end": 593,
            "argument": {
              "type": "NewExpression",
              "start": 527,
              "end": 592,
              "callee": {
                "type": "Identifier",
                "start": 531,
                "end": 543,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 544,
                  "end": 591,
                  "left": {
                    "type": "Literal",
                    "start": 544,
                    "end": 576,
                    "value": "#2: (1 ^ true) === 0. Actual: ",
                    "raw": "'#2: (1 ^ true) === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 579,
                    "end": 591,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 580,
                      "end": 590,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 581,
                        "end": 589,
                        "left": {
                          "type": "Literal",
                          "start": 581,
                          "end": 582,
                          "value": 1,
                          "raw": "1"
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "start": 585,
                          "end": 589,
                          "value": true,
                          "raw": "true"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 607,
      "end": 746,
      "test": {
        "type": "BinaryExpression",
        "start": 611,
        "end": 640,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 611,
          "end": 634,
          "expression": {
            "type": "BinaryExpression",
            "start": 612,
            "end": 633,
            "left": {
              "type": "NewExpression",
              "start": 612,
              "end": 629,
              "callee": {
                "type": "Identifier",
                "start": 616,
                "end": 623,
                "name": "Boolean"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 624,
                  "end": 628,
                  "value": true,
                  "raw": "true"
                }
              ]
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "start": 632,
              "end": 633,
              "value": 1,
              "raw": "1"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 639,
          "end": 640,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 642,
        "end": 746,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 646,
            "end": 744,
            "argument": {
              "type": "NewExpression",
              "start": 652,
              "end": 743,
              "callee": {
                "type": "Identifier",
                "start": 656,
                "end": 668,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 669,
                  "end": 742,
                  "left": {
                    "type": "Literal",
                    "start": 669,
                    "end": 714,
                    "value": "#3: (new Boolean(true) ^ 1) === 0. Actual: ",
                    "raw": "'#3: (new Boolean(true) ^ 1) === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 717,
                    "end": 742,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 718,
                      "end": 741,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 719,
                        "end": 740,
                        "left": {
                          "type": "NewExpression",
                          "start": 719,
                          "end": 736,
                          "callee": {
                            "type": "Identifier",
                            "start": 723,
                            "end": 730,
                            "name": "Boolean"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 731,
                              "end": 735,
                              "value": true,
                              "raw": "true"
                            }
                          ]
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "start": 739,
                          "end": 740,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 758,
      "end": 897,
      "test": {
        "type": "BinaryExpression",
        "start": 762,
        "end": 791,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 762,
          "end": 785,
          "expression": {
            "type": "BinaryExpression",
            "start": 763,
            "end": 784,
            "left": {
              "type": "Literal",
              "start": 763,
              "end": 764,
              "value": 1,
              "raw": "1"
            },
            "operator": "^",
            "right": {
              "type": "NewExpression",
              "start": 767,
              "end": 784,
              "callee": {
                "type": "Identifier",
                "start": 771,
                "end": 778,
                "name": "Boolean"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 779,
                  "end": 783,
                  "value": true,
                  "raw": "true"
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 790,
          "end": 791,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 793,
        "end": 897,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 797,
            "end": 895,
            "argument": {
              "type": "NewExpression",
              "start": 803,
              "end": 894,
              "callee": {
                "type": "Identifier",
                "start": 807,
                "end": 819,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 820,
                  "end": 893,
                  "left": {
                    "type": "Literal",
                    "start": 820,
                    "end": 865,
                    "value": "#4: (1 ^ new Boolean(true)) === 0. Actual: ",
                    "raw": "'#4: (1 ^ new Boolean(true)) === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 868,
                    "end": 893,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 869,
                      "end": 892,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 870,
                        "end": 891,
                        "left": {
                          "type": "Literal",
                          "start": 870,
                          "end": 871,
                          "value": 1,
                          "raw": "1"
                        },
                        "operator": "^",
                        "right": {
                          "type": "NewExpression",
                          "start": 874,
                          "end": 891,
                          "callee": {
                            "type": "Identifier",
                            "start": 878,
                            "end": 885,
                            "name": "Boolean"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 886,
                              "end": 890,
                              "value": true,
                              "raw": "true"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 909,
      "end": 1045,
      "test": {
        "type": "BinaryExpression",
        "start": 913,
        "end": 941,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 913,
          "end": 935,
          "expression": {
            "type": "BinaryExpression",
            "start": 914,
            "end": 934,
            "left": {
              "type": "Literal",
              "start": 914,
              "end": 918,
              "value": true,
              "raw": "true"
            },
            "operator": "^",
            "right": {
              "type": "NewExpression",
              "start": 921,
              "end": 934,
              "callee": {
                "type": "Identifier",
                "start": 925,
                "end": 931,
                "name": "Number"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 932,
                  "end": 933,
                  "value": 1,
                  "raw": "1"
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 940,
          "end": 941,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 943,
        "end": 1045,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 947,
            "end": 1043,
            "argument": {
              "type": "NewExpression",
              "start": 953,
              "end": 1042,
              "callee": {
                "type": "Identifier",
                "start": 957,
                "end": 969,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 970,
                  "end": 1041,
                  "left": {
                    "type": "Literal",
                    "start": 970,
                    "end": 1014,
                    "value": "#5: (true ^ new Number(1)) === 0. Actual: ",
                    "raw": "'#5: (true ^ new Number(1)) === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1017,
                    "end": 1041,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1018,
                      "end": 1040,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1019,
                        "end": 1039,
                        "left": {
                          "type": "Literal",
                          "start": 1019,
                          "end": 1023,
                          "value": true,
                          "raw": "true"
                        },
                        "operator": "^",
                        "right": {
                          "type": "NewExpression",
                          "start": 1026,
                          "end": 1039,
                          "callee": {
                            "type": "Identifier",
                            "start": 1030,
                            "end": 1036,
                            "name": "Number"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1037,
                              "end": 1038,
                              "value": 1,
                              "raw": "1"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1057,
      "end": 1193,
      "test": {
        "type": "BinaryExpression",
        "start": 1061,
        "end": 1089,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1061,
          "end": 1083,
          "expression": {
            "type": "BinaryExpression",
            "start": 1062,
            "end": 1082,
            "left": {
              "type": "NewExpression",
              "start": 1062,
              "end": 1075,
              "callee": {
                "type": "Identifier",
                "start": 1066,
                "end": 1072,
                "name": "Number"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1073,
                  "end": 1074,
                  "value": 1,
                  "raw": "1"
                }
              ]
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "start": 1078,
              "end": 1082,
              "value": true,
              "raw": "true"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1088,
          "end": 1089,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1091,
        "end": 1193,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1095,
            "end": 1191,
            "argument": {
              "type": "NewExpression",
              "start": 1101,
              "end": 1190,
              "callee": {
                "type": "Identifier",
                "start": 1105,
                "end": 1117,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1118,
                  "end": 1189,
                  "left": {
                    "type": "Literal",
                    "start": 1118,
                    "end": 1162,
                    "value": "#6: (new Number(1) ^ true) === 0. Actual: ",
                    "raw": "'#6: (new Number(1) ^ true) === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1165,
                    "end": 1189,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1166,
                      "end": 1188,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1167,
                        "end": 1187,
                        "left": {
                          "type": "NewExpression",
                          "start": 1167,
                          "end": 1180,
                          "callee": {
                            "type": "Identifier",
                            "start": 1171,
                            "end": 1177,
                            "name": "Number"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1178,
                              "end": 1179,
                              "value": 1,
                              "raw": "1"
                            }
                          ]
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "start": 1183,
                          "end": 1187,
                          "value": true,
                          "raw": "true"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1205,
      "end": 1380,
      "test": {
        "type": "BinaryExpression",
        "start": 1209,
        "end": 1250,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1209,
          "end": 1244,
          "expression": {
            "type": "BinaryExpression",
            "start": 1210,
            "end": 1243,
            "left": {
              "type": "NewExpression",
              "start": 1210,
              "end": 1227,
              "callee": {
                "type": "Identifier",
                "start": 1214,
                "end": 1221,
                "name": "Boolean"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1222,
                  "end": 1226,
                  "value": true,
                  "raw": "true"
                }
              ]
            },
            "operator": "^",
            "right": {
              "type": "NewExpression",
              "start": 1230,
              "end": 1243,
              "callee": {
                "type": "Identifier",
                "start": 1234,
                "end": 1240,
                "name": "Number"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1241,
                  "end": 1242,
                  "value": 1,
                  "raw": "1"
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1249,
          "end": 1250,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1252,
        "end": 1380,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1256,
            "end": 1378,
            "argument": {
              "type": "NewExpression",
              "start": 1262,
              "end": 1377,
              "callee": {
                "type": "Identifier",
                "start": 1266,
                "end": 1278,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1279,
                  "end": 1376,
                  "left": {
                    "type": "Literal",
                    "start": 1279,
                    "end": 1336,
                    "value": "#7: (new Boolean(true) ^ new Number(1)) === 0. Actual: ",
                    "raw": "'#7: (new Boolean(true) ^ new Number(1)) === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1339,
                    "end": 1376,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1340,
                      "end": 1375,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1341,
                        "end": 1374,
                        "left": {
                          "type": "NewExpression",
                          "start": 1341,
                          "end": 1358,
                          "callee": {
                            "type": "Identifier",
                            "start": 1345,
                            "end": 1352,
                            "name": "Boolean"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1353,
                              "end": 1357,
                              "value": true,
                              "raw": "true"
                            }
                          ]
                        },
                        "operator": "^",
                        "right": {
                          "type": "NewExpression",
                          "start": 1361,
                          "end": 1374,
                          "callee": {
                            "type": "Identifier",
                            "start": 1365,
                            "end": 1371,
                            "name": "Number"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1372,
                              "end": 1373,
                              "value": 1,
                              "raw": "1"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1392,
      "end": 1567,
      "test": {
        "type": "BinaryExpression",
        "start": 1396,
        "end": 1437,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1396,
          "end": 1431,
          "expression": {
            "type": "BinaryExpression",
            "start": 1397,
            "end": 1430,
            "left": {
              "type": "NewExpression",
              "start": 1397,
              "end": 1410,
              "callee": {
                "type": "Identifier",
                "start": 1401,
                "end": 1407,
                "name": "Number"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1408,
                  "end": 1409,
                  "value": 1,
                  "raw": "1"
                }
              ]
            },
            "operator": "^",
            "right": {
              "type": "NewExpression",
              "start": 1413,
              "end": 1430,
              "callee": {
                "type": "Identifier",
                "start": 1417,
                "end": 1424,
                "name": "Boolean"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1425,
                  "end": 1429,
                  "value": true,
                  "raw": "true"
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1436,
          "end": 1437,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1439,
        "end": 1567,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1443,
            "end": 1565,
            "argument": {
              "type": "NewExpression",
              "start": 1449,
              "end": 1564,
              "callee": {
                "type": "Identifier",
                "start": 1453,
                "end": 1465,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1466,
                  "end": 1563,
                  "left": {
                    "type": "Literal",
                    "start": 1466,
                    "end": 1523,
                    "value": "#8: (new Number(1) ^ new Boolean(true)) === 0. Actual: ",
                    "raw": "'#8: (new Number(1) ^ new Boolean(true)) === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1526,
                    "end": 1563,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1527,
                      "end": 1562,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1528,
                        "end": 1561,
                        "left": {
                          "type": "NewExpression",
                          "start": 1528,
                          "end": 1541,
                          "callee": {
                            "type": "Identifier",
                            "start": 1532,
                            "end": 1538,
                            "name": "Number"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1539,
                              "end": 1540,
                              "value": 1,
                              "raw": "1"
                            }
                          ]
                        },
                        "operator": "^",
                        "right": {
                          "type": "NewExpression",
                          "start": 1544,
                          "end": 1561,
                          "callee": {
                            "type": "Identifier",
                            "start": 1548,
                            "end": 1555,
                            "name": "Boolean"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1556,
                              "end": 1560,
                              "value": true,
                              "raw": "true"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}