{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 388,
              "end": 392
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 395,
              "end": 398
            },
            "start": 388,
            "end": 398
          },
          "start": 387,
          "end": 399
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 404,
          "end": 405
        },
        "start": 387,
        "end": 405
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 421,
                "end": 433
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: (true ^ \"1\") === 0. Actual: ",
                    "raw": "'#1: (true ^ \"1\") === 0. Actual: '",
                    "start": 434,
                    "end": 468
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true",
                          "start": 473,
                          "end": 477
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "value": "1",
                          "raw": "\"1\"",
                          "start": 480,
                          "end": 483
                        },
                        "start": 473,
                        "end": 483
                      },
                      "start": 472,
                      "end": 484
                    },
                    "start": 471,
                    "end": 485
                  },
                  "start": 434,
                  "end": 485
                }
              ],
              "start": 417,
              "end": 486
            },
            "start": 411,
            "end": 487
          }
        ],
        "start": 407,
        "end": 489
      },
      "alternate": null,
      "start": 383,
      "end": 489
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 506,
              "end": 509
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 512,
              "end": 516
            },
            "start": 506,
            "end": 516
          },
          "start": 505,
          "end": 517
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 522,
          "end": 523
        },
        "start": 505,
        "end": 523
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 539,
                "end": 551
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: (\"1\" ^ true) === 0. Actual: ",
                    "raw": "'#2: (\"1\" ^ true) === 0. Actual: '",
                    "start": 552,
                    "end": 586
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": "1",
                          "raw": "\"1\"",
                          "start": 591,
                          "end": 594
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true",
                          "start": 597,
                          "end": 601
                        },
                        "start": 591,
                        "end": 601
                      },
                      "start": 590,
                      "end": 602
                    },
                    "start": 589,
                    "end": 603
                  },
                  "start": 552,
                  "end": 603
                }
              ],
              "start": 535,
              "end": 604
            },
            "start": 529,
            "end": 605
          }
        ],
        "start": 525,
        "end": 607
      },
      "alternate": null,
      "start": 501,
      "end": 607
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 628,
                "end": 635
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 636,
                  "end": 640
                }
              ],
              "start": 624,
              "end": 641
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 644,
              "end": 647
            },
            "start": 624,
            "end": 647
          },
          "start": 623,
          "end": 648
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 653,
          "end": 654
        },
        "start": 623,
        "end": 654
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 670,
                "end": 682
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: (new Boolean(true) ^ \"1\") === 0. Actual: ",
                    "raw": "'#3: (new Boolean(true) ^ \"1\") === 0. Actual: '",
                    "start": 683,
                    "end": 730
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 739,
                            "end": 746
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 747,
                              "end": 751
                            }
                          ],
                          "start": 735,
                          "end": 752
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "value": "1",
                          "raw": "\"1\"",
                          "start": 755,
                          "end": 758
                        },
                        "start": 735,
                        "end": 758
                      },
                      "start": 734,
                      "end": 759
                    },
                    "start": 733,
                    "end": 760
                  },
                  "start": 683,
                  "end": 760
                }
              ],
              "start": 666,
              "end": 761
            },
            "start": 660,
            "end": 762
          }
        ],
        "start": 656,
        "end": 764
      },
      "alternate": null,
      "start": 619,
      "end": 764
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 781,
              "end": 784
            },
            "operator": "^",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 791,
                "end": 798
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 799,
                  "end": 803
                }
              ],
              "start": 787,
              "end": 804
            },
            "start": 781,
            "end": 804
          },
          "start": 780,
          "end": 805
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 810,
          "end": 811
        },
        "start": 780,
        "end": 811
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 827,
                "end": 839
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: (\"1\" ^ new Boolean(true)) === 0. Actual: ",
                    "raw": "'#4: (\"1\" ^ new Boolean(true)) === 0. Actual: '",
                    "start": 840,
                    "end": 887
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": "1",
                          "raw": "\"1\"",
                          "start": 892,
                          "end": 895
                        },
                        "operator": "^",
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 902,
                            "end": 909
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 910,
                              "end": 914
                            }
                          ],
                          "start": 898,
                          "end": 915
                        },
                        "start": 892,
                        "end": 915
                      },
                      "start": 891,
                      "end": 916
                    },
                    "start": 890,
                    "end": 917
                  },
                  "start": 840,
                  "end": 917
                }
              ],
              "start": 823,
              "end": 918
            },
            "start": 817,
            "end": 919
          }
        ],
        "start": 813,
        "end": 921
      },
      "alternate": null,
      "start": 776,
      "end": 921
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 938,
              "end": 942
            },
            "operator": "^",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 949,
                "end": 955
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "1",
                  "raw": "\"1\"",
                  "start": 956,
                  "end": 959
                }
              ],
              "start": 945,
              "end": 960
            },
            "start": 938,
            "end": 960
          },
          "start": 937,
          "end": 961
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 966,
          "end": 967
        },
        "start": 937,
        "end": 967
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 983,
                "end": 995
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: (true ^ new String(\"1\")) === 0. Actual: ",
                    "raw": "'#5: (true ^ new String(\"1\")) === 0. Actual: '",
                    "start": 996,
                    "end": 1042
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true",
                          "start": 1047,
                          "end": 1051
                        },
                        "operator": "^",
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 1058,
                            "end": 1064
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "\"1\"",
                              "start": 1065,
                              "end": 1068
                            }
                          ],
                          "start": 1054,
                          "end": 1069
                        },
                        "start": 1047,
                        "end": 1069
                      },
                      "start": 1046,
                      "end": 1070
                    },
                    "start": 1045,
                    "end": 1071
                  },
                  "start": 996,
                  "end": 1071
                }
              ],
              "start": 979,
              "end": 1072
            },
            "start": 973,
            "end": 1073
          }
        ],
        "start": 969,
        "end": 1075
      },
      "alternate": null,
      "start": 933,
      "end": 1075
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1096,
                "end": 1102
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "1",
                  "raw": "\"1\"",
                  "start": 1103,
                  "end": 1106
                }
              ],
              "start": 1092,
              "end": 1107
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1110,
              "end": 1114
            },
            "start": 1092,
            "end": 1114
          },
          "start": 1091,
          "end": 1115
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1120,
          "end": 1121
        },
        "start": 1091,
        "end": 1121
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1137,
                "end": 1149
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: (new String(\"1\") ^ true) === 0. Actual: ",
                    "raw": "'#6: (new String(\"1\") ^ true) === 0. Actual: '",
                    "start": 1150,
                    "end": 1196
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 1205,
                            "end": 1211
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "\"1\"",
                              "start": 1212,
                              "end": 1215
                            }
                          ],
                          "start": 1201,
                          "end": 1216
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true",
                          "start": 1219,
                          "end": 1223
                        },
                        "start": 1201,
                        "end": 1223
                      },
                      "start": 1200,
                      "end": 1224
                    },
                    "start": 1199,
                    "end": 1225
                  },
                  "start": 1150,
                  "end": 1225
                }
              ],
              "start": 1133,
              "end": 1226
            },
            "start": 1127,
            "end": 1227
          }
        ],
        "start": 1123,
        "end": 1229
      },
      "alternate": null,
      "start": 1087,
      "end": 1229
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 1250,
                "end": 1257
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1258,
                  "end": 1262
                }
              ],
              "start": 1246,
              "end": 1263
            },
            "operator": "^",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1270,
                "end": 1276
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "1",
                  "raw": "\"1\"",
                  "start": 1277,
                  "end": 1280
                }
              ],
              "start": 1266,
              "end": 1281
            },
            "start": 1246,
            "end": 1281
          },
          "start": 1245,
          "end": 1282
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1287,
          "end": 1288
        },
        "start": 1245,
        "end": 1288
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1304,
                "end": 1316
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: (new Boolean(true) ^ new String(\"1\")) === 0. Actual: ",
                    "raw": "'#7: (new Boolean(true) ^ new String(\"1\")) === 0. Actual: '",
                    "start": 1317,
                    "end": 1376
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 1385,
                            "end": 1392
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 1393,
                              "end": 1397
                            }
                          ],
                          "start": 1381,
                          "end": 1398
                        },
                        "operator": "^",
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 1405,
                            "end": 1411
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "\"1\"",
                              "start": 1412,
                              "end": 1415
                            }
                          ],
                          "start": 1401,
                          "end": 1416
                        },
                        "start": 1381,
                        "end": 1416
                      },
                      "start": 1380,
                      "end": 1417
                    },
                    "start": 1379,
                    "end": 1418
                  },
                  "start": 1317,
                  "end": 1418
                }
              ],
              "start": 1300,
              "end": 1419
            },
            "start": 1294,
            "end": 1420
          }
        ],
        "start": 1290,
        "end": 1422
      },
      "alternate": null,
      "start": 1241,
      "end": 1422
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1443,
                "end": 1449
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "1",
                  "raw": "\"1\"",
                  "start": 1450,
                  "end": 1453
                }
              ],
              "start": 1439,
              "end": 1454
            },
            "operator": "^",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 1461,
                "end": 1468
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1469,
                  "end": 1473
                }
              ],
              "start": 1457,
              "end": 1474
            },
            "start": 1439,
            "end": 1474
          },
          "start": 1438,
          "end": 1475
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1480,
          "end": 1481
        },
        "start": 1438,
        "end": 1481
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1497,
                "end": 1509
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: (new String(\"1\") ^ new Boolean(true)) === 0. Actual: ",
                    "raw": "'#8: (new String(\"1\") ^ new Boolean(true)) === 0. Actual: '",
                    "start": 1510,
                    "end": 1569
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 1578,
                            "end": 1584
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "\"1\"",
                              "start": 1585,
                              "end": 1588
                            }
                          ],
                          "start": 1574,
                          "end": 1589
                        },
                        "operator": "^",
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 1596,
                            "end": 1603
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 1604,
                              "end": 1608
                            }
                          ],
                          "start": 1592,
                          "end": 1609
                        },
                        "start": 1574,
                        "end": 1609
                      },
                      "start": 1573,
                      "end": 1610
                    },
                    "start": 1572,
                    "end": 1611
                  },
                  "start": 1510,
                  "end": 1611
                }
              ],
              "start": 1493,
              "end": 1612
            },
            "start": 1487,
            "end": 1613
          }
        ],
        "start": 1483,
        "end": 1615
      },
      "alternate": null,
      "start": 1434,
      "end": 1615
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1616
}