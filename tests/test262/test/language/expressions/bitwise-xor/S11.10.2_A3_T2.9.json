{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 363,
              "end": 367
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "null",
              "start": 370,
              "end": 374
            },
            "start": 363,
            "end": 374
          },
          "start": 362,
          "end": 375
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 380,
          "end": 381
        },
        "start": 362,
        "end": 381
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 397,
                "end": 409
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: (true ^ null) === 1. Actual: ",
                    "raw": "'#1: (true ^ null) === 1. Actual: '",
                    "start": 410,
                    "end": 445
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true",
                          "start": 450,
                          "end": 454
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "start": 457,
                          "end": 461
                        },
                        "start": 450,
                        "end": 461
                      },
                      "start": 449,
                      "end": 462
                    },
                    "start": 448,
                    "end": 463
                  },
                  "start": 410,
                  "end": 463
                }
              ],
              "start": 393,
              "end": 464
            },
            "start": 387,
            "end": 465
          }
        ],
        "start": 383,
        "end": 467
      },
      "alternate": null,
      "start": 358,
      "end": 467
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "null",
              "start": 484,
              "end": 488
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 491,
              "end": 495
            },
            "start": 484,
            "end": 495
          },
          "start": 483,
          "end": 496
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 501,
          "end": 502
        },
        "start": 483,
        "end": 502
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 518,
                "end": 530
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: (null ^ true) === 1. Actual: ",
                    "raw": "'#2: (null ^ true) === 1. Actual: '",
                    "start": 531,
                    "end": 566
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "start": 571,
                          "end": 575
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true",
                          "start": 578,
                          "end": 582
                        },
                        "start": 571,
                        "end": 582
                      },
                      "start": 570,
                      "end": 583
                    },
                    "start": 569,
                    "end": 584
                  },
                  "start": 531,
                  "end": 584
                }
              ],
              "start": 514,
              "end": 585
            },
            "start": 508,
            "end": 586
          }
        ],
        "start": 504,
        "end": 588
      },
      "alternate": null,
      "start": 479,
      "end": 588
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 609,
                "end": 616
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 617,
                  "end": 621
                }
              ],
              "start": 605,
              "end": 622
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "null",
              "start": 625,
              "end": 629
            },
            "start": 605,
            "end": 629
          },
          "start": 604,
          "end": 630
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 635,
          "end": 636
        },
        "start": 604,
        "end": 636
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 652,
                "end": 664
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: (new Boolean(true) ^ null) === 1. Actual: ",
                    "raw": "'#3: (new Boolean(true) ^ null) === 1. Actual: '",
                    "start": 665,
                    "end": 713
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 722,
                            "end": 729
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 730,
                              "end": 734
                            }
                          ],
                          "start": 718,
                          "end": 735
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "start": 738,
                          "end": 742
                        },
                        "start": 718,
                        "end": 742
                      },
                      "start": 717,
                      "end": 743
                    },
                    "start": 716,
                    "end": 744
                  },
                  "start": 665,
                  "end": 744
                }
              ],
              "start": 648,
              "end": 745
            },
            "start": 642,
            "end": 746
          }
        ],
        "start": 638,
        "end": 748
      },
      "alternate": null,
      "start": 600,
      "end": 748
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "null",
              "start": 765,
              "end": 769
            },
            "operator": "^",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 776,
                "end": 783
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 784,
                  "end": 788
                }
              ],
              "start": 772,
              "end": 789
            },
            "start": 765,
            "end": 789
          },
          "start": 764,
          "end": 790
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 795,
          "end": 796
        },
        "start": 764,
        "end": 796
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 812,
                "end": 824
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: (null ^ new Boolean(true)) === 1. Actual: ",
                    "raw": "'#4: (null ^ new Boolean(true)) === 1. Actual: '",
                    "start": 825,
                    "end": 873
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "start": 878,
                          "end": 882
                        },
                        "operator": "^",
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 889,
                            "end": 896
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 897,
                              "end": 901
                            }
                          ],
                          "start": 885,
                          "end": 902
                        },
                        "start": 878,
                        "end": 902
                      },
                      "start": 877,
                      "end": 903
                    },
                    "start": 876,
                    "end": 904
                  },
                  "start": 825,
                  "end": 904
                }
              ],
              "start": 808,
              "end": 905
            },
            "start": 802,
            "end": 906
          }
        ],
        "start": 798,
        "end": 908
      },
      "alternate": null,
      "start": 760,
      "end": 908
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 909
}