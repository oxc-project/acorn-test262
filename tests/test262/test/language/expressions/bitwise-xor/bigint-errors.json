{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 339,
            "end": 345
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 346,
            "end": 352
          },
          "optional": false,
          "computed": false,
          "start": 339,
          "end": 352
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 353,
            "end": 362
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Symbol",
                        "start": 379,
                        "end": 385
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1",
                          "raw": "'1'",
                          "start": 386,
                          "end": 389
                        }
                      ],
                      "optional": false,
                      "start": 379,
                      "end": 390
                    },
                    "operator": "^",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 393,
                      "end": 395
                    },
                    "start": 379,
                    "end": 395
                  },
                  "start": 379,
                  "end": 396
                }
              ],
              "start": 375,
              "end": 398
            },
            "expression": false,
            "start": 364,
            "end": 398
          },
          {
            "type": "Literal",
            "value": "Symbol(\"1\") ^ 0n throws TypeError",
            "raw": "'Symbol(\"1\") ^ 0n throws TypeError'",
            "start": 400,
            "end": 435
          }
        ],
        "optional": false,
        "start": 339,
        "end": 436
      },
      "start": 339,
      "end": 437
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 439,
            "end": 445
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 446,
            "end": 452
          },
          "optional": false,
          "computed": false,
          "start": 439,
          "end": 452
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 453,
            "end": 462
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 479,
                      "end": 481
                    },
                    "operator": "^",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Symbol",
                        "start": 484,
                        "end": 490
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1",
                          "raw": "'1'",
                          "start": 491,
                          "end": 494
                        }
                      ],
                      "optional": false,
                      "start": 484,
                      "end": 495
                    },
                    "start": 479,
                    "end": 495
                  },
                  "start": 479,
                  "end": 496
                }
              ],
              "start": 475,
              "end": 498
            },
            "expression": false,
            "start": 464,
            "end": 498
          },
          {
            "type": "Literal",
            "value": "0n ^ Symbol(\"1\") throws TypeError",
            "raw": "'0n ^ Symbol(\"1\") throws TypeError'",
            "start": 500,
            "end": 535
          }
        ],
        "optional": false,
        "start": 439,
        "end": 536
      },
      "start": 439,
      "end": 537
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 539,
            "end": 545
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 546,
            "end": 552
          },
          "optional": false,
          "computed": false,
          "start": 539,
          "end": 552
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 553,
            "end": 562
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 579,
                        "end": 585
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 586,
                            "end": 592
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "'1'",
                              "start": 593,
                              "end": 596
                            }
                          ],
                          "optional": false,
                          "start": 586,
                          "end": 597
                        }
                      ],
                      "optional": false,
                      "start": 579,
                      "end": 598
                    },
                    "operator": "^",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 601,
                      "end": 603
                    },
                    "start": 579,
                    "end": 603
                  },
                  "start": 579,
                  "end": 604
                }
              ],
              "start": 575,
              "end": 606
            },
            "expression": false,
            "start": 564,
            "end": 606
          },
          {
            "type": "Literal",
            "value": "Object(Symbol(\"1\")) ^ 0n throws TypeError",
            "raw": "'Object(Symbol(\"1\")) ^ 0n throws TypeError'",
            "start": 608,
            "end": 651
          }
        ],
        "optional": false,
        "start": 539,
        "end": 652
      },
      "start": 539,
      "end": 653
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 655,
            "end": 661
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 662,
            "end": 668
          },
          "optional": false,
          "computed": false,
          "start": 655,
          "end": 668
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 669,
            "end": 678
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 695,
                      "end": 697
                    },
                    "operator": "^",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 700,
                        "end": 706
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 707,
                            "end": 713
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "'1'",
                              "start": 714,
                              "end": 717
                            }
                          ],
                          "optional": false,
                          "start": 707,
                          "end": 718
                        }
                      ],
                      "optional": false,
                      "start": 700,
                      "end": 719
                    },
                    "start": 695,
                    "end": 719
                  },
                  "start": 695,
                  "end": 720
                }
              ],
              "start": 691,
              "end": 722
            },
            "expression": false,
            "start": 680,
            "end": 722
          },
          {
            "type": "Literal",
            "value": "0n ^ Object(Symbol(\"1\")) throws TypeError",
            "raw": "'0n ^ Object(Symbol(\"1\")) throws TypeError'",
            "start": 724,
            "end": 767
          }
        ],
        "optional": false,
        "start": 655,
        "end": 768
      },
      "start": 655,
      "end": 769
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 771,
            "end": 777
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 778,
            "end": 784
          },
          "optional": false,
          "computed": false,
          "start": 771,
          "end": 784
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 785,
            "end": 794
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Symbol",
                                "start": 819,
                                "end": 825
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toPrimitive",
                                "start": 826,
                                "end": 837
                              },
                              "optional": false,
                              "computed": false,
                              "start": 819,
                              "end": 837
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 866,
                                        "end": 872
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 873,
                                          "end": 876
                                        }
                                      ],
                                      "optional": false,
                                      "start": 866,
                                      "end": 877
                                    },
                                    "start": 859,
                                    "end": 878
                                  }
                                ],
                                "start": 851,
                                "end": 884
                              },
                              "expression": false,
                              "start": 840,
                              "end": 884
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": true,
                            "start": 818,
                            "end": 884
                          }
                        ],
                        "start": 812,
                        "end": 888
                      },
                      "start": 811,
                      "end": 889
                    },
                    "operator": "^",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 892,
                      "end": 894
                    },
                    "start": 811,
                    "end": 894
                  },
                  "start": 811,
                  "end": 895
                }
              ],
              "start": 807,
              "end": 897
            },
            "expression": false,
            "start": 796,
            "end": 897
          },
          {
            "type": "Literal",
            "value": "({[Symbol.toPrimitive]: function() {return Symbol(\"1\");}}) ^ 0n throws TypeError",
            "raw": "'({[Symbol.toPrimitive]: function() {return Symbol(\"1\");}}) ^ 0n throws TypeError'",
            "start": 899,
            "end": 981
          }
        ],
        "optional": false,
        "start": 771,
        "end": 982
      },
      "start": 771,
      "end": 983
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 985,
            "end": 991
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 992,
            "end": 998
          },
          "optional": false,
          "computed": false,
          "start": 985,
          "end": 998
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 999,
            "end": 1008
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1025,
                      "end": 1027
                    },
                    "operator": "^",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "Symbol",
                              "start": 1037,
                              "end": 1043
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "toPrimitive",
                              "start": 1044,
                              "end": 1055
                            },
                            "optional": false,
                            "computed": false,
                            "start": 1037,
                            "end": 1055
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1084,
                                      "end": 1090
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1091,
                                        "end": 1094
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1084,
                                    "end": 1095
                                  },
                                  "start": 1077,
                                  "end": 1096
                                }
                              ],
                              "start": 1069,
                              "end": 1102
                            },
                            "expression": false,
                            "start": 1058,
                            "end": 1102
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": true,
                          "start": 1036,
                          "end": 1102
                        }
                      ],
                      "start": 1030,
                      "end": 1106
                    },
                    "start": 1025,
                    "end": 1106
                  },
                  "start": 1025,
                  "end": 1107
                }
              ],
              "start": 1021,
              "end": 1109
            },
            "expression": false,
            "start": 1010,
            "end": 1109
          },
          {
            "type": "Literal",
            "value": "0n ^ {[Symbol.toPrimitive]: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n ^ {[Symbol.toPrimitive]: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1111,
            "end": 1191
          }
        ],
        "optional": false,
        "start": 985,
        "end": 1192
      },
      "start": 985,
      "end": 1193
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1195,
            "end": 1201
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1202,
            "end": 1208
          },
          "optional": false,
          "computed": false,
          "start": 1195,
          "end": 1208
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1209,
            "end": 1218
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "valueOf",
                              "start": 1242,
                              "end": 1249
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 1277,
                                        "end": 1283
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 1284,
                                          "end": 1287
                                        }
                                      ],
                                      "optional": false,
                                      "start": 1277,
                                      "end": 1288
                                    },
                                    "start": 1270,
                                    "end": 1289
                                  }
                                ],
                                "start": 1262,
                                "end": 1295
                              },
                              "expression": false,
                              "start": 1251,
                              "end": 1295
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1242,
                            "end": 1295
                          }
                        ],
                        "start": 1236,
                        "end": 1299
                      },
                      "start": 1235,
                      "end": 1300
                    },
                    "operator": "^",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1303,
                      "end": 1305
                    },
                    "start": 1235,
                    "end": 1305
                  },
                  "start": 1235,
                  "end": 1306
                }
              ],
              "start": 1231,
              "end": 1308
            },
            "expression": false,
            "start": 1220,
            "end": 1308
          },
          {
            "type": "Literal",
            "value": "({valueOf: function() {return Symbol(\"1\");}}) ^ 0n throws TypeError",
            "raw": "'({valueOf: function() {return Symbol(\"1\");}}) ^ 0n throws TypeError'",
            "start": 1310,
            "end": 1379
          }
        ],
        "optional": false,
        "start": 1195,
        "end": 1380
      },
      "start": 1195,
      "end": 1381
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1383,
            "end": 1389
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1390,
            "end": 1396
          },
          "optional": false,
          "computed": false,
          "start": 1383,
          "end": 1396
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1397,
            "end": 1406
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1423,
                      "end": 1425
                    },
                    "operator": "^",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "valueOf",
                            "start": 1434,
                            "end": 1441
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1469,
                                      "end": 1475
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1476,
                                        "end": 1479
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1469,
                                    "end": 1480
                                  },
                                  "start": 1462,
                                  "end": 1481
                                }
                              ],
                              "start": 1454,
                              "end": 1487
                            },
                            "expression": false,
                            "start": 1443,
                            "end": 1487
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1434,
                          "end": 1487
                        }
                      ],
                      "start": 1428,
                      "end": 1491
                    },
                    "start": 1423,
                    "end": 1491
                  },
                  "start": 1423,
                  "end": 1492
                }
              ],
              "start": 1419,
              "end": 1494
            },
            "expression": false,
            "start": 1408,
            "end": 1494
          },
          {
            "type": "Literal",
            "value": "0n ^ {valueOf: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n ^ {valueOf: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1496,
            "end": 1563
          }
        ],
        "optional": false,
        "start": 1383,
        "end": 1564
      },
      "start": 1383,
      "end": 1565
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1567,
            "end": 1573
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1574,
            "end": 1580
          },
          "optional": false,
          "computed": false,
          "start": 1567,
          "end": 1580
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1581,
            "end": 1590
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "toString",
                              "start": 1614,
                              "end": 1622
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 1650,
                                        "end": 1656
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 1657,
                                          "end": 1660
                                        }
                                      ],
                                      "optional": false,
                                      "start": 1650,
                                      "end": 1661
                                    },
                                    "start": 1643,
                                    "end": 1662
                                  }
                                ],
                                "start": 1635,
                                "end": 1668
                              },
                              "expression": false,
                              "start": 1624,
                              "end": 1668
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1614,
                            "end": 1668
                          }
                        ],
                        "start": 1608,
                        "end": 1672
                      },
                      "start": 1607,
                      "end": 1673
                    },
                    "operator": "^",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1676,
                      "end": 1678
                    },
                    "start": 1607,
                    "end": 1678
                  },
                  "start": 1607,
                  "end": 1679
                }
              ],
              "start": 1603,
              "end": 1681
            },
            "expression": false,
            "start": 1592,
            "end": 1681
          },
          {
            "type": "Literal",
            "value": "({toString: function() {return Symbol(\"1\");}}) ^ 0n throws TypeError",
            "raw": "'({toString: function() {return Symbol(\"1\");}}) ^ 0n throws TypeError'",
            "start": 1683,
            "end": 1753
          }
        ],
        "optional": false,
        "start": 1567,
        "end": 1754
      },
      "start": 1567,
      "end": 1755
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1757,
            "end": 1763
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1764,
            "end": 1770
          },
          "optional": false,
          "computed": false,
          "start": 1757,
          "end": 1770
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1771,
            "end": 1780
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1797,
                      "end": 1799
                    },
                    "operator": "^",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "toString",
                            "start": 1808,
                            "end": 1816
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1844,
                                      "end": 1850
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1851,
                                        "end": 1854
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1844,
                                    "end": 1855
                                  },
                                  "start": 1837,
                                  "end": 1856
                                }
                              ],
                              "start": 1829,
                              "end": 1862
                            },
                            "expression": false,
                            "start": 1818,
                            "end": 1862
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1808,
                          "end": 1862
                        }
                      ],
                      "start": 1802,
                      "end": 1866
                    },
                    "start": 1797,
                    "end": 1866
                  },
                  "start": 1797,
                  "end": 1867
                }
              ],
              "start": 1793,
              "end": 1869
            },
            "expression": false,
            "start": 1782,
            "end": 1869
          },
          {
            "type": "Literal",
            "value": "0n ^ {toString: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n ^ {toString: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1871,
            "end": 1939
          }
        ],
        "optional": false,
        "start": 1757,
        "end": 1940
      },
      "start": 1757,
      "end": 1941
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1942
}