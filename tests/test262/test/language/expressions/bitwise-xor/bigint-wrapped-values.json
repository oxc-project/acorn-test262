{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 331,
            "end": 337
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 338,
            "end": 347
          },
          "optional": false,
          "computed": false,
          "start": 331,
          "end": 347
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 348,
                "end": 354
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "2n",
                  "bigint": "2",
                  "start": 355,
                  "end": 357
                }
              ],
              "optional": false,
              "start": 348,
              "end": 358
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "3n",
              "bigint": "3",
              "start": 361,
              "end": 363
            },
            "start": 348,
            "end": 363
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 365,
            "end": 367
          },
          {
            "type": "Literal",
            "value": "The result of (Object(2n) ^ 3n) is 1n",
            "raw": "'The result of (Object(2n) ^ 3n) is 1n'",
            "start": 369,
            "end": 408
          }
        ],
        "optional": false,
        "start": 331,
        "end": 409
      },
      "start": 331,
      "end": 410
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 411,
            "end": 417
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 418,
            "end": 427
          },
          "optional": false,
          "computed": false,
          "start": 411,
          "end": 427
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "3n",
              "bigint": "3",
              "start": 428,
              "end": 430
            },
            "operator": "^",
            "right": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 433,
                "end": 439
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "2n",
                  "bigint": "2",
                  "start": 440,
                  "end": 442
                }
              ],
              "optional": false,
              "start": 433,
              "end": 443
            },
            "start": 428,
            "end": 443
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 445,
            "end": 447
          },
          {
            "type": "Literal",
            "value": "The result of (3n ^ Object(2n)) is 1n",
            "raw": "'The result of (3n ^ Object(2n)) is 1n'",
            "start": 449,
            "end": 488
          }
        ],
        "optional": false,
        "start": 411,
        "end": 489
      },
      "start": 411,
      "end": 490
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 492,
            "end": 498
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 499,
            "end": 508
          },
          "optional": false,
          "computed": false,
          "start": 492,
          "end": 508
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 514,
                      "end": 520
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toPrimitive",
                      "start": 521,
                      "end": 532
                    },
                    "optional": false,
                    "computed": false,
                    "start": 514,
                    "end": 532
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 559,
                            "end": 561
                          },
                          "start": 552,
                          "end": 562
                        }
                      ],
                      "start": 546,
                      "end": 566
                    },
                    "expression": false,
                    "start": 535,
                    "end": 566
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "start": 513,
                  "end": 566
                }
              ],
              "start": 509,
              "end": 568
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "3n",
              "bigint": "3",
              "start": 571,
              "end": 573
            },
            "start": 509,
            "end": 573
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 575,
            "end": 577
          },
          {
            "type": "Literal",
            "value": "The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) ^ 3n) is 1n",
            "raw": "'The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) ^ 3n) is 1n'",
            "start": 579,
            "end": 657
          }
        ],
        "optional": false,
        "start": 492,
        "end": 658
      },
      "start": 492,
      "end": 659
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 661,
            "end": 667
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 668,
            "end": 677
          },
          "optional": false,
          "computed": false,
          "start": 661,
          "end": 677
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "3n",
              "bigint": "3",
              "start": 678,
              "end": 680
            },
            "operator": "^",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 688,
                      "end": 694
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toPrimitive",
                      "start": 695,
                      "end": 706
                    },
                    "optional": false,
                    "computed": false,
                    "start": 688,
                    "end": 706
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 733,
                            "end": 735
                          },
                          "start": 726,
                          "end": 736
                        }
                      ],
                      "start": 720,
                      "end": 740
                    },
                    "expression": false,
                    "start": 709,
                    "end": 740
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "start": 687,
                  "end": 740
                }
              ],
              "start": 683,
              "end": 742
            },
            "start": 678,
            "end": 742
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 744,
            "end": 746
          },
          {
            "type": "Literal",
            "value": "The result of (3n ^ {[Symbol.toPrimitive]: function() {return 2n;}}) is 1n",
            "raw": "'The result of (3n ^ {[Symbol.toPrimitive]: function() {return 2n;}}) is 1n'",
            "start": 748,
            "end": 824
          }
        ],
        "optional": false,
        "start": 661,
        "end": 825
      },
      "start": 661,
      "end": 826
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 828,
            "end": 834
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 835,
            "end": 844
          },
          "optional": false,
          "computed": false,
          "start": 828,
          "end": 844
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "valueOf",
                    "start": 849,
                    "end": 856
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 882,
                            "end": 884
                          },
                          "start": 875,
                          "end": 885
                        }
                      ],
                      "start": 869,
                      "end": 889
                    },
                    "expression": false,
                    "start": 858,
                    "end": 889
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 849,
                  "end": 889
                }
              ],
              "start": 845,
              "end": 891
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "3n",
              "bigint": "3",
              "start": 894,
              "end": 896
            },
            "start": 845,
            "end": 896
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 898,
            "end": 900
          },
          {
            "type": "Literal",
            "value": "The result of (({valueOf: function() {return 2n;}}) ^ 3n) is 1n",
            "raw": "'The result of (({valueOf: function() {return 2n;}}) ^ 3n) is 1n'",
            "start": 902,
            "end": 967
          }
        ],
        "optional": false,
        "start": 828,
        "end": 968
      },
      "start": 828,
      "end": 969
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 971,
            "end": 977
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 978,
            "end": 987
          },
          "optional": false,
          "computed": false,
          "start": 971,
          "end": 987
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "3n",
              "bigint": "3",
              "start": 988,
              "end": 990
            },
            "operator": "^",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "valueOf",
                    "start": 997,
                    "end": 1004
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1030,
                            "end": 1032
                          },
                          "start": 1023,
                          "end": 1033
                        }
                      ],
                      "start": 1017,
                      "end": 1037
                    },
                    "expression": false,
                    "start": 1006,
                    "end": 1037
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 997,
                  "end": 1037
                }
              ],
              "start": 993,
              "end": 1039
            },
            "start": 988,
            "end": 1039
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 1041,
            "end": 1043
          },
          {
            "type": "Literal",
            "value": "The result of (3n ^ {valueOf: function() {return 2n;}}) is 1n",
            "raw": "'The result of (3n ^ {valueOf: function() {return 2n;}}) is 1n'",
            "start": 1045,
            "end": 1108
          }
        ],
        "optional": false,
        "start": 971,
        "end": 1109
      },
      "start": 971,
      "end": 1110
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1112,
            "end": 1118
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1119,
            "end": 1128
          },
          "optional": false,
          "computed": false,
          "start": 1112,
          "end": 1128
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "toString",
                    "start": 1133,
                    "end": 1141
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1167,
                            "end": 1169
                          },
                          "start": 1160,
                          "end": 1170
                        }
                      ],
                      "start": 1154,
                      "end": 1174
                    },
                    "expression": false,
                    "start": 1143,
                    "end": 1174
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 1133,
                  "end": 1174
                }
              ],
              "start": 1129,
              "end": 1176
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "3n",
              "bigint": "3",
              "start": 1179,
              "end": 1181
            },
            "start": 1129,
            "end": 1181
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 1183,
            "end": 1185
          },
          {
            "type": "Literal",
            "value": "The result of (({toString: function() {return 2n;}}) ^ 3n) is 1n",
            "raw": "'The result of (({toString: function() {return 2n;}}) ^ 3n) is 1n'",
            "start": 1187,
            "end": 1253
          }
        ],
        "optional": false,
        "start": 1112,
        "end": 1254
      },
      "start": 1112,
      "end": 1255
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1257,
            "end": 1263
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1264,
            "end": 1273
          },
          "optional": false,
          "computed": false,
          "start": 1257,
          "end": 1273
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "3n",
              "bigint": "3",
              "start": 1274,
              "end": 1276
            },
            "operator": "^",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "toString",
                    "start": 1283,
                    "end": 1291
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1317,
                            "end": 1319
                          },
                          "start": 1310,
                          "end": 1320
                        }
                      ],
                      "start": 1304,
                      "end": 1324
                    },
                    "expression": false,
                    "start": 1293,
                    "end": 1324
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 1283,
                  "end": 1324
                }
              ],
              "start": 1279,
              "end": 1326
            },
            "start": 1274,
            "end": 1326
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 1328,
            "end": 1330
          },
          {
            "type": "Literal",
            "value": "The result of (3n ^ {toString: function() {return 2n;}}) is 1n",
            "raw": "'The result of (3n ^ {toString: function() {return 2n;}}) is 1n'",
            "start": 1332,
            "end": 1396
          }
        ],
        "optional": false,
        "start": 1257,
        "end": 1397
      },
      "start": 1257,
      "end": 1398
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1399
}