{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 362,
              "end": 365
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "null",
              "start": 368,
              "end": 372
            },
            "start": 362,
            "end": 372
          },
          "start": 361,
          "end": 373
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 378,
          "end": 379
        },
        "start": 361,
        "end": 379
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 395,
                "end": 407
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: (\"1\" ^ null) === 1. Actual: ",
                    "raw": "'#1: (\"1\" ^ null) === 1. Actual: '",
                    "start": 408,
                    "end": 442
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": "1",
                          "raw": "\"1\"",
                          "start": 447,
                          "end": 450
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "start": 453,
                          "end": 457
                        },
                        "start": 447,
                        "end": 457
                      },
                      "start": 446,
                      "end": 458
                    },
                    "start": 445,
                    "end": 459
                  },
                  "start": 408,
                  "end": 459
                }
              ],
              "start": 391,
              "end": 460
            },
            "start": 385,
            "end": 461
          }
        ],
        "start": 381,
        "end": 463
      },
      "alternate": null,
      "start": 357,
      "end": 463
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "null",
              "start": 480,
              "end": 484
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 487,
              "end": 490
            },
            "start": 480,
            "end": 490
          },
          "start": 479,
          "end": 491
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 496,
          "end": 497
        },
        "start": 479,
        "end": 497
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 513,
                "end": 525
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: (null ^ \"1\") === 1. Actual: ",
                    "raw": "'#2: (null ^ \"1\") === 1. Actual: '",
                    "start": 526,
                    "end": 560
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "start": 565,
                          "end": 569
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "value": "1",
                          "raw": "\"1\"",
                          "start": 572,
                          "end": 575
                        },
                        "start": 565,
                        "end": 575
                      },
                      "start": 564,
                      "end": 576
                    },
                    "start": 563,
                    "end": 577
                  },
                  "start": 526,
                  "end": 577
                }
              ],
              "start": 509,
              "end": 578
            },
            "start": 503,
            "end": 579
          }
        ],
        "start": 499,
        "end": 581
      },
      "alternate": null,
      "start": 475,
      "end": 581
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 602,
                "end": 608
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "1",
                  "raw": "\"1\"",
                  "start": 609,
                  "end": 612
                }
              ],
              "start": 598,
              "end": 613
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "null",
              "start": 616,
              "end": 620
            },
            "start": 598,
            "end": 620
          },
          "start": 597,
          "end": 621
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 626,
          "end": 627
        },
        "start": 597,
        "end": 627
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 643,
                "end": 655
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: (new String(\"1\") ^ null) === 1. Actual: ",
                    "raw": "'#3: (new String(\"1\") ^ null) === 1. Actual: '",
                    "start": 656,
                    "end": 702
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 711,
                            "end": 717
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "\"1\"",
                              "start": 718,
                              "end": 721
                            }
                          ],
                          "start": 707,
                          "end": 722
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "start": 725,
                          "end": 729
                        },
                        "start": 707,
                        "end": 729
                      },
                      "start": 706,
                      "end": 730
                    },
                    "start": 705,
                    "end": 731
                  },
                  "start": 656,
                  "end": 731
                }
              ],
              "start": 639,
              "end": 732
            },
            "start": 633,
            "end": 733
          }
        ],
        "start": 629,
        "end": 735
      },
      "alternate": null,
      "start": 593,
      "end": 735
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "null",
              "start": 752,
              "end": 756
            },
            "operator": "^",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 763,
                "end": 769
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "1",
                  "raw": "\"1\"",
                  "start": 770,
                  "end": 773
                }
              ],
              "start": 759,
              "end": 774
            },
            "start": 752,
            "end": 774
          },
          "start": 751,
          "end": 775
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 780,
          "end": 781
        },
        "start": 751,
        "end": 781
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 797,
                "end": 809
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: (null ^ new String(\"1\")) === 1. Actual: ",
                    "raw": "'#4: (null ^ new String(\"1\")) === 1. Actual: '",
                    "start": 810,
                    "end": 856
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "start": 861,
                          "end": 865
                        },
                        "operator": "^",
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 872,
                            "end": 878
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "\"1\"",
                              "start": 879,
                              "end": 882
                            }
                          ],
                          "start": 868,
                          "end": 883
                        },
                        "start": 861,
                        "end": 883
                      },
                      "start": 860,
                      "end": 884
                    },
                    "start": 859,
                    "end": 885
                  },
                  "start": 810,
                  "end": 885
                }
              ],
              "start": 793,
              "end": 886
            },
            "start": 787,
            "end": 887
          }
        ],
        "start": 783,
        "end": 889
      },
      "alternate": null,
      "start": 747,
      "end": 889
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 890
}