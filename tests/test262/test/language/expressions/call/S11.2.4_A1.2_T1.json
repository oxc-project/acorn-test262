{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "f_arg",
            "start": 269,
            "end": 274
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "arguments",
                    "start": 299,
                    "end": 308
                  },
                  "start": 292,
                  "end": 309
                }
              ],
              "start": 288,
              "end": 311
            },
            "expression": false,
            "start": 277,
            "end": 311
          },
          "start": 269,
          "end": 311
        }
      ],
      "start": 265,
      "end": 311
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f_arg",
              "start": 327,
              "end": 332
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 333,
                "end": 334
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 335,
                "end": 336
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 337,
                "end": 338
              }
            ],
            "optional": false,
            "start": 327,
            "end": 339
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 340,
            "end": 346
          },
          "optional": false,
          "computed": false,
          "start": 327,
          "end": 346
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 351,
          "end": 352
        },
        "start": 327,
        "end": 352
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 368,
                "end": 380
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: f_arg = function()() {return arguments;} f_arg(1,2,3).length === 3. Actual: ",
                    "raw": "'#1: f_arg = function()() {return arguments;} f_arg(1,2,3).length === 3. Actual: '",
                    "start": 381,
                    "end": 463
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "f_arg",
                          "start": 467,
                          "end": 472
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 473,
                            "end": 474
                          },
                          {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 475,
                            "end": 476
                          },
                          {
                            "type": "Literal",
                            "value": 3,
                            "raw": "3",
                            "start": 477,
                            "end": 478
                          }
                        ],
                        "optional": false,
                        "start": 467,
                        "end": 479
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length",
                        "start": 480,
                        "end": 486
                      },
                      "optional": false,
                      "computed": false,
                      "start": 467,
                      "end": 486
                    },
                    "start": 466,
                    "end": 487
                  },
                  "start": 381,
                  "end": 487
                }
              ],
              "start": 364,
              "end": 488
            },
            "start": 358,
            "end": 489
          }
        ],
        "start": 354,
        "end": 491
      },
      "alternate": null,
      "start": 323,
      "end": 491
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f_arg",
              "start": 507,
              "end": 512
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 513,
                "end": 514
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 515,
                "end": 516
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 517,
                "end": 518
              }
            ],
            "optional": false,
            "start": 507,
            "end": 519
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 520,
            "end": 521
          },
          "optional": false,
          "computed": true,
          "start": 507,
          "end": 522
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 527,
          "end": 528
        },
        "start": 507,
        "end": 528
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 544,
                "end": 556
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: f_arg = function()() {return arguments;} f_arg(1,2,3)[0] === 1. Actual: ",
                    "raw": "'#1: f_arg = function()() {return arguments;} f_arg(1,2,3)[0] === 1. Actual: '",
                    "start": 557,
                    "end": 635
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "f_arg",
                          "start": 639,
                          "end": 644
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 645,
                            "end": 646
                          },
                          {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 647,
                            "end": 648
                          },
                          {
                            "type": "Literal",
                            "value": 3,
                            "raw": "3",
                            "start": 649,
                            "end": 650
                          }
                        ],
                        "optional": false,
                        "start": 639,
                        "end": 651
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 652,
                        "end": 653
                      },
                      "optional": false,
                      "computed": true,
                      "start": 639,
                      "end": 654
                    },
                    "start": 638,
                    "end": 655
                  },
                  "start": 557,
                  "end": 655
                }
              ],
              "start": 540,
              "end": 656
            },
            "start": 534,
            "end": 657
          }
        ],
        "start": 530,
        "end": 659
      },
      "alternate": null,
      "start": 503,
      "end": 659
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f_arg",
              "start": 675,
              "end": 680
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 681,
                "end": 682
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 683,
                "end": 684
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 685,
                "end": 686
              }
            ],
            "optional": false,
            "start": 675,
            "end": 687
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 688,
            "end": 689
          },
          "optional": false,
          "computed": true,
          "start": 675,
          "end": 690
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 695,
          "end": 696
        },
        "start": 675,
        "end": 696
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 712,
                "end": 724
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: f_arg = function()() {return arguments;} f_arg(1,2,3)[1] === 2. Actual: ",
                    "raw": "'#3: f_arg = function()() {return arguments;} f_arg(1,2,3)[1] === 2. Actual: '",
                    "start": 725,
                    "end": 803
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "f_arg",
                          "start": 807,
                          "end": 812
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 813,
                            "end": 814
                          },
                          {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 815,
                            "end": 816
                          },
                          {
                            "type": "Literal",
                            "value": 3,
                            "raw": "3",
                            "start": 817,
                            "end": 818
                          }
                        ],
                        "optional": false,
                        "start": 807,
                        "end": 819
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 820,
                        "end": 821
                      },
                      "optional": false,
                      "computed": true,
                      "start": 807,
                      "end": 822
                    },
                    "start": 806,
                    "end": 823
                  },
                  "start": 725,
                  "end": 823
                }
              ],
              "start": 708,
              "end": 824
            },
            "start": 702,
            "end": 825
          }
        ],
        "start": 698,
        "end": 827
      },
      "alternate": null,
      "start": 671,
      "end": 827
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f_arg",
              "start": 843,
              "end": 848
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 849,
                "end": 850
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 851,
                "end": 852
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 853,
                "end": 854
              }
            ],
            "optional": false,
            "start": 843,
            "end": 855
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 856,
            "end": 857
          },
          "optional": false,
          "computed": true,
          "start": 843,
          "end": 858
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 863,
          "end": 864
        },
        "start": 843,
        "end": 864
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 880,
                "end": 892
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: f_arg = function()() {return arguments;} f_arg(1,2,3)[2] === 3. Actual: ",
                    "raw": "'#4: f_arg = function()() {return arguments;} f_arg(1,2,3)[2] === 3. Actual: '",
                    "start": 893,
                    "end": 971
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "f_arg",
                          "start": 975,
                          "end": 980
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 981,
                            "end": 982
                          },
                          {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 983,
                            "end": 984
                          },
                          {
                            "type": "Literal",
                            "value": 3,
                            "raw": "3",
                            "start": 985,
                            "end": 986
                          }
                        ],
                        "optional": false,
                        "start": 975,
                        "end": 987
                      },
                      "property": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 988,
                        "end": 989
                      },
                      "optional": false,
                      "computed": true,
                      "start": 975,
                      "end": 990
                    },
                    "start": 974,
                    "end": 991
                  },
                  "start": 893,
                  "end": 991
                }
              ],
              "start": 876,
              "end": 992
            },
            "start": 870,
            "end": 993
          }
        ],
        "start": 866,
        "end": 995
      },
      "alternate": null,
      "start": 839,
      "end": 995
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f_arg",
              "start": 1011,
              "end": 1016
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1017,
                "end": 1018
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1019,
                "end": 1020
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 1021,
                "end": 1022
              }
            ],
            "optional": false,
            "start": 1011,
            "end": 1023
          },
          "property": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 1024,
            "end": 1025
          },
          "optional": false,
          "computed": true,
          "start": 1011,
          "end": 1026
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 1031,
          "end": 1040
        },
        "start": 1011,
        "end": 1040
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1056,
                "end": 1068
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: f_arg = function()() {return arguments;} f_arg(1,2,3)[3] === undefined. Actual: ",
                    "raw": "'#5: f_arg = function()() {return arguments;} f_arg(1,2,3)[3] === undefined. Actual: '",
                    "start": 1069,
                    "end": 1155
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "f_arg",
                          "start": 1159,
                          "end": 1164
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1165,
                            "end": 1166
                          },
                          {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 1167,
                            "end": 1168
                          },
                          {
                            "type": "Literal",
                            "value": 3,
                            "raw": "3",
                            "start": 1169,
                            "end": 1170
                          }
                        ],
                        "optional": false,
                        "start": 1159,
                        "end": 1171
                      },
                      "property": {
                        "type": "Literal",
                        "value": 3,
                        "raw": "3",
                        "start": 1172,
                        "end": 1173
                      },
                      "optional": false,
                      "computed": true,
                      "start": 1159,
                      "end": 1174
                    },
                    "start": 1158,
                    "end": 1175
                  },
                  "start": 1069,
                  "end": 1175
                }
              ],
              "start": 1052,
              "end": 1176
            },
            "start": 1046,
            "end": 1177
          }
        ],
        "start": 1042,
        "end": 1179
      },
      "alternate": null,
      "start": 1007,
      "end": 1179
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1180
}