{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "eval",
              "start": 433,
              "end": 437
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "false\t?\ttrue\t:\ttrue",
                "raw": "\"false\\u0009?\\u0009true\\u0009:\\u0009true\"",
                "start": 438,
                "end": 479
              }
            ],
            "optional": false,
            "start": 433,
            "end": 480
          },
          "start": 432,
          "end": 481
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 486,
          "end": 490
        },
        "start": 432,
        "end": 490
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 506,
                "end": 518
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: (false\\u0009?\\u0009true\\u0009:\\u0009true) === true",
                  "raw": "'#1: (false\\\\u0009?\\\\u0009true\\\\u0009:\\\\u0009true) === true'",
                  "start": 519,
                  "end": 579
                }
              ],
              "start": 502,
              "end": 580
            },
            "start": 496,
            "end": 581
          }
        ],
        "start": 492,
        "end": 583
      },
      "alternate": null,
      "start": 428,
      "end": 583
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "eval",
              "start": 600,
              "end": 604
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "false\u000b?\u000btrue\u000b:\u000btrue",
                "raw": "\"false\\u000B?\\u000Btrue\\u000B:\\u000Btrue\"",
                "start": 605,
                "end": 646
              }
            ],
            "optional": false,
            "start": 600,
            "end": 647
          },
          "start": 599,
          "end": 648
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 653,
          "end": 657
        },
        "start": 599,
        "end": 657
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 673,
                "end": 685
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: (false\\u000B?\\u000Btrue\\u000B:\\u000Btrue) === true",
                  "raw": "'#2: (false\\\\u000B?\\\\u000Btrue\\\\u000B:\\\\u000Btrue) === true'",
                  "start": 686,
                  "end": 746
                }
              ],
              "start": 669,
              "end": 747
            },
            "start": 663,
            "end": 748
          }
        ],
        "start": 659,
        "end": 750
      },
      "alternate": null,
      "start": 595,
      "end": 750
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "eval",
              "start": 767,
              "end": 771
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "false\f?\ftrue\f:\ftrue",
                "raw": "\"false\\u000C?\\u000Ctrue\\u000C:\\u000Ctrue\"",
                "start": 772,
                "end": 813
              }
            ],
            "optional": false,
            "start": 767,
            "end": 814
          },
          "start": 766,
          "end": 815
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 820,
          "end": 824
        },
        "start": 766,
        "end": 824
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 840,
                "end": 852
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: (false\\u000C?\\u000Ctrue\\u000C:\\u000Ctrue) === true",
                  "raw": "'#3: (false\\\\u000C?\\\\u000Ctrue\\\\u000C:\\\\u000Ctrue) === true'",
                  "start": 853,
                  "end": 913
                }
              ],
              "start": 836,
              "end": 914
            },
            "start": 830,
            "end": 915
          }
        ],
        "start": 826,
        "end": 917
      },
      "alternate": null,
      "start": 762,
      "end": 917
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "eval",
              "start": 934,
              "end": 938
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "false ? true : true",
                "raw": "\"false\\u0020?\\u0020true\\u0020:\\u0020true\"",
                "start": 939,
                "end": 980
              }
            ],
            "optional": false,
            "start": 934,
            "end": 981
          },
          "start": 933,
          "end": 982
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 987,
          "end": 991
        },
        "start": 933,
        "end": 991
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1007,
                "end": 1019
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4: (false\\u0020?\\u0020true\\u0020:\\u0020true) === true",
                  "raw": "'#4: (false\\\\u0020?\\\\u0020true\\\\u0020:\\\\u0020true) === true'",
                  "start": 1020,
                  "end": 1080
                }
              ],
              "start": 1003,
              "end": 1081
            },
            "start": 997,
            "end": 1082
          }
        ],
        "start": 993,
        "end": 1084
      },
      "alternate": null,
      "start": 929,
      "end": 1084
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "eval",
              "start": 1101,
              "end": 1105
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "false ? true : true",
                "raw": "\"false\\u00A0?\\u00A0true\\u00A0:\\u00A0true\"",
                "start": 1106,
                "end": 1147
              }
            ],
            "optional": false,
            "start": 1101,
            "end": 1148
          },
          "start": 1100,
          "end": 1149
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1154,
          "end": 1158
        },
        "start": 1100,
        "end": 1158
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1174,
                "end": 1186
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#5: (false\\u00A0?\\u00A0true\\u00A0:\\u00A0true) === true",
                  "raw": "'#5: (false\\\\u00A0?\\\\u00A0true\\\\u00A0:\\\\u00A0true) === true'",
                  "start": 1187,
                  "end": 1247
                }
              ],
              "start": 1170,
              "end": 1248
            },
            "start": 1164,
            "end": 1249
          }
        ],
        "start": 1160,
        "end": 1251
      },
      "alternate": null,
      "start": 1096,
      "end": 1251
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "eval",
              "start": 1268,
              "end": 1272
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "false\n?\ntrue\n:\ntrue",
                "raw": "\"false\\u000A?\\u000Atrue\\u000A:\\u000Atrue\"",
                "start": 1273,
                "end": 1314
              }
            ],
            "optional": false,
            "start": 1268,
            "end": 1315
          },
          "start": 1267,
          "end": 1316
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1321,
          "end": 1325
        },
        "start": 1267,
        "end": 1325
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1341,
                "end": 1353
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#6: (false\\u000A?\\u000Atrue\\u000A:\\u000Atrue) === true",
                  "raw": "'#6: (false\\\\u000A?\\\\u000Atrue\\\\u000A:\\\\u000Atrue) === true'",
                  "start": 1354,
                  "end": 1414
                }
              ],
              "start": 1337,
              "end": 1415
            },
            "start": 1331,
            "end": 1416
          }
        ],
        "start": 1327,
        "end": 1418
      },
      "alternate": null,
      "start": 1263,
      "end": 1418
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "eval",
              "start": 1435,
              "end": 1439
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "false\r?\rtrue\r:\rtrue",
                "raw": "\"false\\u000D?\\u000Dtrue\\u000D:\\u000Dtrue\"",
                "start": 1440,
                "end": 1481
              }
            ],
            "optional": false,
            "start": 1435,
            "end": 1482
          },
          "start": 1434,
          "end": 1483
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1488,
          "end": 1492
        },
        "start": 1434,
        "end": 1492
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1508,
                "end": 1520
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#7: (false\\u000D?\\u000Dtrue\\u000D:\\u000Dtrue) === true",
                  "raw": "'#7: (false\\\\u000D?\\\\u000Dtrue\\\\u000D:\\\\u000Dtrue) === true'",
                  "start": 1521,
                  "end": 1581
                }
              ],
              "start": 1504,
              "end": 1582
            },
            "start": 1498,
            "end": 1583
          }
        ],
        "start": 1494,
        "end": 1585
      },
      "alternate": null,
      "start": 1430,
      "end": 1585
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "eval",
              "start": 1602,
              "end": 1606
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "false ? true : true",
                "raw": "\"false\\u2028?\\u2028true\\u2028:\\u2028true\"",
                "start": 1607,
                "end": 1648
              }
            ],
            "optional": false,
            "start": 1602,
            "end": 1649
          },
          "start": 1601,
          "end": 1650
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1655,
          "end": 1659
        },
        "start": 1601,
        "end": 1659
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1675,
                "end": 1687
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#8: (false\\u2028?\\u2028true\\u2028:\\u2028true) === true",
                  "raw": "'#8: (false\\\\u2028?\\\\u2028true\\\\u2028:\\\\u2028true) === true'",
                  "start": 1688,
                  "end": 1748
                }
              ],
              "start": 1671,
              "end": 1749
            },
            "start": 1665,
            "end": 1750
          }
        ],
        "start": 1661,
        "end": 1752
      },
      "alternate": null,
      "start": 1597,
      "end": 1752
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "eval",
              "start": 1769,
              "end": 1773
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "false ? true : true",
                "raw": "\"false\\u2029?\\u2029true\\u2029:\\u2029true\"",
                "start": 1774,
                "end": 1815
              }
            ],
            "optional": false,
            "start": 1769,
            "end": 1816
          },
          "start": 1768,
          "end": 1817
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1822,
          "end": 1826
        },
        "start": 1768,
        "end": 1826
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1842,
                "end": 1854
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#9: (false\\u2029?\\u2029true\\u2029:\\u2029true) === true",
                  "raw": "'#9: (false\\\\u2029?\\\\u2029true\\\\u2029:\\\\u2029true) === true'",
                  "start": 1855,
                  "end": 1915
                }
              ],
              "start": 1838,
              "end": 1916
            },
            "start": 1832,
            "end": 1917
          }
        ],
        "start": 1828,
        "end": 1919
      },
      "alternate": null,
      "start": 1764,
      "end": 1919
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "eval",
              "start": 1937,
              "end": 1941
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "false\t\u000b\f  \n\r  ?\t\u000b\f  \n\r  true\t\u000b\f  \n\r  :\t\u000b\f  \n\r  true",
                "raw": "\"false\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029?\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029true\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029:\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029true\"",
                "start": 1942,
                "end": 2175
              }
            ],
            "optional": false,
            "start": 1937,
            "end": 2176
          },
          "start": 1936,
          "end": 2177
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 2182,
          "end": 2186
        },
        "start": 1936,
        "end": 2186
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2202,
                "end": 2214
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#10: (false\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029?\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029true\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029:\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029true) === true",
                  "raw": "'#10: (false\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029?\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029true\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029:\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029true) === true'",
                  "start": 2215,
                  "end": 2500
                }
              ],
              "start": 2198,
              "end": 2501
            },
            "start": 2192,
            "end": 2502
          }
        ],
        "start": 2188,
        "end": 2504
      },
      "alternate": null,
      "start": 1932,
      "end": 2504
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2505
}