{
  "type": "Program",
  "start": 0,
  "end": 603,
  "body": [
    {
      "type": "TryStatement",
      "start": 310,
      "end": 602,
      "block": {
        "type": "BlockStatement",
        "start": 314,
        "end": 443,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 318,
            "end": 335,
            "expression": {
              "type": "ConditionalExpression",
              "start": 318,
              "end": 334,
              "test": {
                "type": "Literal",
                "start": 318,
                "end": 322,
                "value": true,
                "raw": "true"
              },
              "consequent": {
                "type": "Identifier",
                "start": 325,
                "end": 326,
                "name": "y"
              },
              "alternate": {
                "type": "Literal",
                "start": 329,
                "end": 334,
                "value": false,
                "raw": "false"
              }
            }
          },
          {
            "type": "ThrowStatement",
            "start": 338,
            "end": 439,
            "argument": {
              "type": "NewExpression",
              "start": 344,
              "end": 438,
              "callee": {
                "type": "Identifier",
                "start": 348,
                "end": 360,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 361,
                  "end": 437,
                  "left": {
                    "type": "Literal",
                    "start": 361,
                    "end": 416,
                    "value": "#1.1: true ? y : false throw ReferenceError. Actual: ",
                    "raw": "'#1.1: true ? y : false throw ReferenceError. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 419,
                    "end": 437,
                    "expression": {
                      "type": "ConditionalExpression",
                      "start": 420,
                      "end": 436,
                      "test": {
                        "type": "Literal",
                        "start": 420,
                        "end": 424,
                        "value": true,
                        "raw": "true"
                      },
                      "consequent": {
                        "type": "Identifier",
                        "start": 427,
                        "end": 428,
                        "name": "y"
                      },
                      "alternate": {
                        "type": "Literal",
                        "start": 431,
                        "end": 436,
                        "value": false,
                        "raw": "false"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 444,
        "end": 602,
        "param": {
          "type": "Identifier",
          "start": 451,
          "end": 452,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 454,
          "end": 602,
          "body": [
            {
              "type": "IfStatement",
              "start": 458,
              "end": 600,
              "test": {
                "type": "BinaryExpression",
                "start": 462,
                "end": 500,
                "left": {
                  "type": "ParenthesizedExpression",
                  "start": 462,
                  "end": 491,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 463,
                    "end": 490,
                    "left": {
                      "type": "Identifier",
                      "start": 463,
                      "end": 464,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 476,
                      "end": 490,
                      "name": "ReferenceError"
                    }
                  }
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 496,
                  "end": 500,
                  "value": true,
                  "raw": "true"
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 502,
                "end": 600,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 508,
                    "end": 594,
                    "argument": {
                      "type": "NewExpression",
                      "start": 514,
                      "end": 593,
                      "callee": {
                        "type": "Identifier",
                        "start": 518,
                        "end": 530,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 531,
                          "end": 592,
                          "left": {
                            "type": "Literal",
                            "start": 531,
                            "end": 586,
                            "value": "#1.2: true ? y : false throw ReferenceError. Actual: ",
                            "raw": "'#1.2: true ? y : false throw ReferenceError. Actual: '"
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "start": 589,
                            "end": 592,
                            "expression": {
                              "type": "Identifier",
                              "start": 590,
                              "end": 591,
                              "name": "e"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}