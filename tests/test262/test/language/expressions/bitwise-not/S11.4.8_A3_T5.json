{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "~",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "ObjectExpression",
              "properties": [],
              "start": 277,
              "end": 279
            },
            "start": 276,
            "end": 280
          },
          "prefix": true,
          "start": 275,
          "end": 280
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 286,
            "end": 287
          },
          "prefix": true,
          "start": 285,
          "end": 287
        },
        "start": 275,
        "end": 287
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 303,
                "end": 315
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: ~({}) === -1. Actual: ",
                    "raw": "'#1: ~({}) === -1. Actual: '",
                    "start": 316,
                    "end": 344
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "~",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "ObjectExpression",
                          "properties": [],
                          "start": 350,
                          "end": 352
                        },
                        "start": 349,
                        "end": 353
                      },
                      "prefix": true,
                      "start": 348,
                      "end": 353
                    },
                    "start": 347,
                    "end": 354
                  },
                  "start": 316,
                  "end": 354
                }
              ],
              "start": 299,
              "end": 355
            },
            "start": 293,
            "end": 356
          }
        ],
        "start": 289,
        "end": 358
      },
      "alternate": null,
      "start": 271,
      "end": 358
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "~",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 396,
                      "end": 397
                    },
                    "start": 389,
                    "end": 397
                  }
                ],
                "start": 388,
                "end": 398
              },
              "expression": false,
              "start": 378,
              "end": 398
            },
            "start": 377,
            "end": 399
          },
          "prefix": true,
          "start": 376,
          "end": 399
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 405,
            "end": 406
          },
          "prefix": true,
          "start": 404,
          "end": 406
        },
        "start": 376,
        "end": 406
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 422,
                "end": 434
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: ~(function(){return 1}) === -1. Actual: ",
                    "raw": "'#2: ~(function(){return 1}) === -1. Actual: '",
                    "start": 435,
                    "end": 481
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "~",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "FunctionExpression",
                          "id": null,
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "Literal",
                                  "value": 1,
                                  "raw": "1",
                                  "start": 505,
                                  "end": 506
                                },
                                "start": 498,
                                "end": 506
                              }
                            ],
                            "start": 497,
                            "end": 507
                          },
                          "expression": false,
                          "start": 487,
                          "end": 507
                        },
                        "start": 486,
                        "end": 508
                      },
                      "prefix": true,
                      "start": 485,
                      "end": 508
                    },
                    "start": 484,
                    "end": 509
                  },
                  "start": 435,
                  "end": 509
                }
              ],
              "start": 418,
              "end": 510
            },
            "start": 412,
            "end": 511
          }
        ],
        "start": 408,
        "end": 513
      },
      "alternate": null,
      "start": 372,
      "end": 513
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 514
}