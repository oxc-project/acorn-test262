{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 334,
            "end": 340
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 341,
            "end": 350
          },
          "optional": false,
          "computed": false,
          "start": 334,
          "end": 350
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 351,
                "end": 357
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "2n",
                  "bigint": "2",
                  "start": 358,
                  "end": 360
                }
              ],
              "optional": false,
              "start": 351,
              "end": 361
            },
            "operator": ">>",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 365,
              "end": 367
            },
            "start": 351,
            "end": 367
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 369,
            "end": 371
          },
          {
            "type": "Literal",
            "value": "The result of (Object(2n) >> 1n) is 1n",
            "raw": "'The result of (Object(2n) >> 1n) is 1n'",
            "start": 373,
            "end": 413
          }
        ],
        "optional": false,
        "start": 334,
        "end": 414
      },
      "start": 334,
      "end": 415
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 416,
            "end": 422
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 423,
            "end": 432
          },
          "optional": false,
          "computed": false,
          "start": 416,
          "end": 432
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "4n",
              "bigint": "4",
              "start": 433,
              "end": 435
            },
            "operator": ">>",
            "right": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 439,
                "end": 445
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "2n",
                  "bigint": "2",
                  "start": 446,
                  "end": 448
                }
              ],
              "optional": false,
              "start": 439,
              "end": 449
            },
            "start": 433,
            "end": 449
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 451,
            "end": 453
          },
          {
            "type": "Literal",
            "value": "The result of (4n >> Object(2n)) is 1n",
            "raw": "'The result of (4n >> Object(2n)) is 1n'",
            "start": 455,
            "end": 495
          }
        ],
        "optional": false,
        "start": 416,
        "end": 496
      },
      "start": 416,
      "end": 497
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 499,
            "end": 505
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 506,
            "end": 515
          },
          "optional": false,
          "computed": false,
          "start": 499,
          "end": 515
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 521,
                      "end": 527
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toPrimitive",
                      "start": 528,
                      "end": 539
                    },
                    "optional": false,
                    "computed": false,
                    "start": 521,
                    "end": 539
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 566,
                            "end": 568
                          },
                          "start": 559,
                          "end": 569
                        }
                      ],
                      "start": 553,
                      "end": 573
                    },
                    "expression": false,
                    "start": 542,
                    "end": 573
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "start": 520,
                  "end": 573
                }
              ],
              "start": 516,
              "end": 575
            },
            "operator": ">>",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 579,
              "end": 581
            },
            "start": 516,
            "end": 581
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 583,
            "end": 585
          },
          {
            "type": "Literal",
            "value": "The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) >> 1n) is 1n",
            "raw": "'The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) >> 1n) is 1n'",
            "start": 587,
            "end": 666
          }
        ],
        "optional": false,
        "start": 499,
        "end": 667
      },
      "start": 499,
      "end": 668
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 670,
            "end": 676
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 677,
            "end": 686
          },
          "optional": false,
          "computed": false,
          "start": 670,
          "end": 686
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "4n",
              "bigint": "4",
              "start": 687,
              "end": 689
            },
            "operator": ">>",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 698,
                      "end": 704
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toPrimitive",
                      "start": 705,
                      "end": 716
                    },
                    "optional": false,
                    "computed": false,
                    "start": 698,
                    "end": 716
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 743,
                            "end": 745
                          },
                          "start": 736,
                          "end": 746
                        }
                      ],
                      "start": 730,
                      "end": 750
                    },
                    "expression": false,
                    "start": 719,
                    "end": 750
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "start": 697,
                  "end": 750
                }
              ],
              "start": 693,
              "end": 752
            },
            "start": 687,
            "end": 752
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 754,
            "end": 756
          },
          {
            "type": "Literal",
            "value": "The result of (4n >> {[Symbol.toPrimitive]: function() {return 2n;}}) is 1n",
            "raw": "'The result of (4n >> {[Symbol.toPrimitive]: function() {return 2n;}}) is 1n'",
            "start": 758,
            "end": 835
          }
        ],
        "optional": false,
        "start": 670,
        "end": 836
      },
      "start": 670,
      "end": 837
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 839,
            "end": 845
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 846,
            "end": 855
          },
          "optional": false,
          "computed": false,
          "start": 839,
          "end": 855
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "valueOf",
                    "start": 860,
                    "end": 867
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 893,
                            "end": 895
                          },
                          "start": 886,
                          "end": 896
                        }
                      ],
                      "start": 880,
                      "end": 900
                    },
                    "expression": false,
                    "start": 869,
                    "end": 900
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 860,
                  "end": 900
                }
              ],
              "start": 856,
              "end": 902
            },
            "operator": ">>",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 906,
              "end": 908
            },
            "start": 856,
            "end": 908
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 910,
            "end": 912
          },
          {
            "type": "Literal",
            "value": "The result of (({valueOf: function() {return 2n;}}) >> 1n) is 1n",
            "raw": "'The result of (({valueOf: function() {return 2n;}}) >> 1n) is 1n'",
            "start": 914,
            "end": 980
          }
        ],
        "optional": false,
        "start": 839,
        "end": 981
      },
      "start": 839,
      "end": 982
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 984,
            "end": 990
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 991,
            "end": 1000
          },
          "optional": false,
          "computed": false,
          "start": 984,
          "end": 1000
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "4n",
              "bigint": "4",
              "start": 1001,
              "end": 1003
            },
            "operator": ">>",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "valueOf",
                    "start": 1011,
                    "end": 1018
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1044,
                            "end": 1046
                          },
                          "start": 1037,
                          "end": 1047
                        }
                      ],
                      "start": 1031,
                      "end": 1051
                    },
                    "expression": false,
                    "start": 1020,
                    "end": 1051
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 1011,
                  "end": 1051
                }
              ],
              "start": 1007,
              "end": 1053
            },
            "start": 1001,
            "end": 1053
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 1055,
            "end": 1057
          },
          {
            "type": "Literal",
            "value": "The result of (4n >> {valueOf: function() {return 2n;}}) is 1n",
            "raw": "'The result of (4n >> {valueOf: function() {return 2n;}}) is 1n'",
            "start": 1059,
            "end": 1123
          }
        ],
        "optional": false,
        "start": 984,
        "end": 1124
      },
      "start": 984,
      "end": 1125
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1127,
            "end": 1133
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1134,
            "end": 1143
          },
          "optional": false,
          "computed": false,
          "start": 1127,
          "end": 1143
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "toString",
                    "start": 1148,
                    "end": 1156
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1182,
                            "end": 1184
                          },
                          "start": 1175,
                          "end": 1185
                        }
                      ],
                      "start": 1169,
                      "end": 1189
                    },
                    "expression": false,
                    "start": 1158,
                    "end": 1189
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 1148,
                  "end": 1189
                }
              ],
              "start": 1144,
              "end": 1191
            },
            "operator": ">>",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 1195,
              "end": 1197
            },
            "start": 1144,
            "end": 1197
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 1199,
            "end": 1201
          },
          {
            "type": "Literal",
            "value": "The result of (({toString: function() {return 2n;}}) >> 1n) is 1n",
            "raw": "'The result of (({toString: function() {return 2n;}}) >> 1n) is 1n'",
            "start": 1203,
            "end": 1270
          }
        ],
        "optional": false,
        "start": 1127,
        "end": 1271
      },
      "start": 1127,
      "end": 1272
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1274,
            "end": 1280
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1281,
            "end": 1290
          },
          "optional": false,
          "computed": false,
          "start": 1274,
          "end": 1290
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "4n",
              "bigint": "4",
              "start": 1291,
              "end": 1293
            },
            "operator": ">>",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "toString",
                    "start": 1301,
                    "end": 1309
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1335,
                            "end": 1337
                          },
                          "start": 1328,
                          "end": 1338
                        }
                      ],
                      "start": 1322,
                      "end": 1342
                    },
                    "expression": false,
                    "start": 1311,
                    "end": 1342
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 1301,
                  "end": 1342
                }
              ],
              "start": 1297,
              "end": 1344
            },
            "start": 1291,
            "end": 1344
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "1n",
            "bigint": "1",
            "start": 1346,
            "end": 1348
          },
          {
            "type": "Literal",
            "value": "The result of (4n >> {toString: function() {return 2n;}}) is 1n",
            "raw": "'The result of (4n >> {toString: function() {return 2n;}}) is 1n'",
            "start": 1350,
            "end": 1415
          }
        ],
        "optional": false,
        "start": 1274,
        "end": 1416
      },
      "start": 1274,
      "end": 1417
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1418
}