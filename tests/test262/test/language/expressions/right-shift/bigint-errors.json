{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 342,
            "end": 348
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 349,
            "end": 355
          },
          "optional": false,
          "computed": false,
          "start": 342,
          "end": 355
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 356,
            "end": 365
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Symbol",
                        "start": 382,
                        "end": 388
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1",
                          "raw": "'1'",
                          "start": 389,
                          "end": 392
                        }
                      ],
                      "optional": false,
                      "start": 382,
                      "end": 393
                    },
                    "operator": ">>",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 397,
                      "end": 399
                    },
                    "start": 382,
                    "end": 399
                  },
                  "start": 382,
                  "end": 400
                }
              ],
              "start": 378,
              "end": 402
            },
            "expression": false,
            "start": 367,
            "end": 402
          },
          {
            "type": "Literal",
            "value": "Symbol(\"1\") >> 0n throws TypeError",
            "raw": "'Symbol(\"1\") >> 0n throws TypeError'",
            "start": 404,
            "end": 440
          }
        ],
        "optional": false,
        "start": 342,
        "end": 441
      },
      "start": 342,
      "end": 442
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 444,
            "end": 450
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 451,
            "end": 457
          },
          "optional": false,
          "computed": false,
          "start": 444,
          "end": 457
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 458,
            "end": 467
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 484,
                      "end": 486
                    },
                    "operator": ">>",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Symbol",
                        "start": 490,
                        "end": 496
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1",
                          "raw": "'1'",
                          "start": 497,
                          "end": 500
                        }
                      ],
                      "optional": false,
                      "start": 490,
                      "end": 501
                    },
                    "start": 484,
                    "end": 501
                  },
                  "start": 484,
                  "end": 502
                }
              ],
              "start": 480,
              "end": 504
            },
            "expression": false,
            "start": 469,
            "end": 504
          },
          {
            "type": "Literal",
            "value": "0n >> Symbol(\"1\") throws TypeError",
            "raw": "'0n >> Symbol(\"1\") throws TypeError'",
            "start": 506,
            "end": 542
          }
        ],
        "optional": false,
        "start": 444,
        "end": 543
      },
      "start": 444,
      "end": 544
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 546,
            "end": 552
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 553,
            "end": 559
          },
          "optional": false,
          "computed": false,
          "start": 546,
          "end": 559
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 560,
            "end": 569
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 586,
                        "end": 592
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 593,
                            "end": 599
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "'1'",
                              "start": 600,
                              "end": 603
                            }
                          ],
                          "optional": false,
                          "start": 593,
                          "end": 604
                        }
                      ],
                      "optional": false,
                      "start": 586,
                      "end": 605
                    },
                    "operator": ">>",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 609,
                      "end": 611
                    },
                    "start": 586,
                    "end": 611
                  },
                  "start": 586,
                  "end": 612
                }
              ],
              "start": 582,
              "end": 614
            },
            "expression": false,
            "start": 571,
            "end": 614
          },
          {
            "type": "Literal",
            "value": "Object(Symbol(\"1\")) >> 0n throws TypeError",
            "raw": "'Object(Symbol(\"1\")) >> 0n throws TypeError'",
            "start": 616,
            "end": 660
          }
        ],
        "optional": false,
        "start": 546,
        "end": 661
      },
      "start": 546,
      "end": 662
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 664,
            "end": 670
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 671,
            "end": 677
          },
          "optional": false,
          "computed": false,
          "start": 664,
          "end": 677
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 678,
            "end": 687
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 704,
                      "end": 706
                    },
                    "operator": ">>",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 710,
                        "end": 716
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 717,
                            "end": 723
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "'1'",
                              "start": 724,
                              "end": 727
                            }
                          ],
                          "optional": false,
                          "start": 717,
                          "end": 728
                        }
                      ],
                      "optional": false,
                      "start": 710,
                      "end": 729
                    },
                    "start": 704,
                    "end": 729
                  },
                  "start": 704,
                  "end": 730
                }
              ],
              "start": 700,
              "end": 732
            },
            "expression": false,
            "start": 689,
            "end": 732
          },
          {
            "type": "Literal",
            "value": "0n >> Object(Symbol(\"1\")) throws TypeError",
            "raw": "'0n >> Object(Symbol(\"1\")) throws TypeError'",
            "start": 734,
            "end": 778
          }
        ],
        "optional": false,
        "start": 664,
        "end": 779
      },
      "start": 664,
      "end": 780
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 782,
            "end": 788
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 789,
            "end": 795
          },
          "optional": false,
          "computed": false,
          "start": 782,
          "end": 795
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 796,
            "end": 805
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Symbol",
                                "start": 830,
                                "end": 836
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toPrimitive",
                                "start": 837,
                                "end": 848
                              },
                              "optional": false,
                              "computed": false,
                              "start": 830,
                              "end": 848
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 877,
                                        "end": 883
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 884,
                                          "end": 887
                                        }
                                      ],
                                      "optional": false,
                                      "start": 877,
                                      "end": 888
                                    },
                                    "start": 870,
                                    "end": 889
                                  }
                                ],
                                "start": 862,
                                "end": 895
                              },
                              "expression": false,
                              "start": 851,
                              "end": 895
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": true,
                            "start": 829,
                            "end": 895
                          }
                        ],
                        "start": 823,
                        "end": 899
                      },
                      "start": 822,
                      "end": 900
                    },
                    "operator": ">>",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 904,
                      "end": 906
                    },
                    "start": 822,
                    "end": 906
                  },
                  "start": 822,
                  "end": 907
                }
              ],
              "start": 818,
              "end": 909
            },
            "expression": false,
            "start": 807,
            "end": 909
          },
          {
            "type": "Literal",
            "value": "({[Symbol.toPrimitive]: function() {return Symbol(\"1\");}}) >> 0n throws TypeError",
            "raw": "'({[Symbol.toPrimitive]: function() {return Symbol(\"1\");}}) >> 0n throws TypeError'",
            "start": 911,
            "end": 994
          }
        ],
        "optional": false,
        "start": 782,
        "end": 995
      },
      "start": 782,
      "end": 996
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 998,
            "end": 1004
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1005,
            "end": 1011
          },
          "optional": false,
          "computed": false,
          "start": 998,
          "end": 1011
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1012,
            "end": 1021
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1038,
                      "end": 1040
                    },
                    "operator": ">>",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "Symbol",
                              "start": 1051,
                              "end": 1057
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "toPrimitive",
                              "start": 1058,
                              "end": 1069
                            },
                            "optional": false,
                            "computed": false,
                            "start": 1051,
                            "end": 1069
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1098,
                                      "end": 1104
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1105,
                                        "end": 1108
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1098,
                                    "end": 1109
                                  },
                                  "start": 1091,
                                  "end": 1110
                                }
                              ],
                              "start": 1083,
                              "end": 1116
                            },
                            "expression": false,
                            "start": 1072,
                            "end": 1116
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": true,
                          "start": 1050,
                          "end": 1116
                        }
                      ],
                      "start": 1044,
                      "end": 1120
                    },
                    "start": 1038,
                    "end": 1120
                  },
                  "start": 1038,
                  "end": 1121
                }
              ],
              "start": 1034,
              "end": 1123
            },
            "expression": false,
            "start": 1023,
            "end": 1123
          },
          {
            "type": "Literal",
            "value": "0n >> {[Symbol.toPrimitive]: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n >> {[Symbol.toPrimitive]: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1125,
            "end": 1206
          }
        ],
        "optional": false,
        "start": 998,
        "end": 1207
      },
      "start": 998,
      "end": 1208
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1210,
            "end": 1216
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1217,
            "end": 1223
          },
          "optional": false,
          "computed": false,
          "start": 1210,
          "end": 1223
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1224,
            "end": 1233
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "valueOf",
                              "start": 1257,
                              "end": 1264
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 1292,
                                        "end": 1298
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 1299,
                                          "end": 1302
                                        }
                                      ],
                                      "optional": false,
                                      "start": 1292,
                                      "end": 1303
                                    },
                                    "start": 1285,
                                    "end": 1304
                                  }
                                ],
                                "start": 1277,
                                "end": 1310
                              },
                              "expression": false,
                              "start": 1266,
                              "end": 1310
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1257,
                            "end": 1310
                          }
                        ],
                        "start": 1251,
                        "end": 1314
                      },
                      "start": 1250,
                      "end": 1315
                    },
                    "operator": ">>",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1319,
                      "end": 1321
                    },
                    "start": 1250,
                    "end": 1321
                  },
                  "start": 1250,
                  "end": 1322
                }
              ],
              "start": 1246,
              "end": 1324
            },
            "expression": false,
            "start": 1235,
            "end": 1324
          },
          {
            "type": "Literal",
            "value": "({valueOf: function() {return Symbol(\"1\");}}) >> 0n throws TypeError",
            "raw": "'({valueOf: function() {return Symbol(\"1\");}}) >> 0n throws TypeError'",
            "start": 1326,
            "end": 1396
          }
        ],
        "optional": false,
        "start": 1210,
        "end": 1397
      },
      "start": 1210,
      "end": 1398
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1400,
            "end": 1406
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1407,
            "end": 1413
          },
          "optional": false,
          "computed": false,
          "start": 1400,
          "end": 1413
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1414,
            "end": 1423
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1440,
                      "end": 1442
                    },
                    "operator": ">>",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "valueOf",
                            "start": 1452,
                            "end": 1459
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1487,
                                      "end": 1493
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1494,
                                        "end": 1497
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1487,
                                    "end": 1498
                                  },
                                  "start": 1480,
                                  "end": 1499
                                }
                              ],
                              "start": 1472,
                              "end": 1505
                            },
                            "expression": false,
                            "start": 1461,
                            "end": 1505
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1452,
                          "end": 1505
                        }
                      ],
                      "start": 1446,
                      "end": 1509
                    },
                    "start": 1440,
                    "end": 1509
                  },
                  "start": 1440,
                  "end": 1510
                }
              ],
              "start": 1436,
              "end": 1512
            },
            "expression": false,
            "start": 1425,
            "end": 1512
          },
          {
            "type": "Literal",
            "value": "0n >> {valueOf: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n >> {valueOf: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1514,
            "end": 1582
          }
        ],
        "optional": false,
        "start": 1400,
        "end": 1583
      },
      "start": 1400,
      "end": 1584
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1586,
            "end": 1592
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1593,
            "end": 1599
          },
          "optional": false,
          "computed": false,
          "start": 1586,
          "end": 1599
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1600,
            "end": 1609
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "toString",
                              "start": 1633,
                              "end": 1641
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 1669,
                                        "end": 1675
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 1676,
                                          "end": 1679
                                        }
                                      ],
                                      "optional": false,
                                      "start": 1669,
                                      "end": 1680
                                    },
                                    "start": 1662,
                                    "end": 1681
                                  }
                                ],
                                "start": 1654,
                                "end": 1687
                              },
                              "expression": false,
                              "start": 1643,
                              "end": 1687
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1633,
                            "end": 1687
                          }
                        ],
                        "start": 1627,
                        "end": 1691
                      },
                      "start": 1626,
                      "end": 1692
                    },
                    "operator": ">>",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1696,
                      "end": 1698
                    },
                    "start": 1626,
                    "end": 1698
                  },
                  "start": 1626,
                  "end": 1699
                }
              ],
              "start": 1622,
              "end": 1701
            },
            "expression": false,
            "start": 1611,
            "end": 1701
          },
          {
            "type": "Literal",
            "value": "({toString: function() {return Symbol(\"1\");}}) >> 0n throws TypeError",
            "raw": "'({toString: function() {return Symbol(\"1\");}}) >> 0n throws TypeError'",
            "start": 1703,
            "end": 1774
          }
        ],
        "optional": false,
        "start": 1586,
        "end": 1775
      },
      "start": 1586,
      "end": 1776
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1778,
            "end": 1784
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1785,
            "end": 1791
          },
          "optional": false,
          "computed": false,
          "start": 1778,
          "end": 1791
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1792,
            "end": 1801
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1818,
                      "end": 1820
                    },
                    "operator": ">>",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "toString",
                            "start": 1830,
                            "end": 1838
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1866,
                                      "end": 1872
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1873,
                                        "end": 1876
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1866,
                                    "end": 1877
                                  },
                                  "start": 1859,
                                  "end": 1878
                                }
                              ],
                              "start": 1851,
                              "end": 1884
                            },
                            "expression": false,
                            "start": 1840,
                            "end": 1884
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1830,
                          "end": 1884
                        }
                      ],
                      "start": 1824,
                      "end": 1888
                    },
                    "start": 1818,
                    "end": 1888
                  },
                  "start": 1818,
                  "end": 1889
                }
              ],
              "start": 1814,
              "end": 1891
            },
            "expression": false,
            "start": 1803,
            "end": 1891
          },
          {
            "type": "Literal",
            "value": "0n >> {toString: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n >> {toString: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1893,
            "end": 1962
          }
        ],
        "optional": false,
        "start": 1778,
        "end": 1963
      },
      "start": 1778,
      "end": 1964
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1965
}