{
  "type": "Program",
  "start": 0,
  "end": 1121,
  "body": [
    {
      "type": "IfStatement",
      "start": 316,
      "end": 416,
      "test": {
        "type": "BinaryExpression",
        "start": 320,
        "end": 336,
        "left": {
          "type": "BinaryExpression",
          "start": 320,
          "end": 330,
          "left": {
            "type": "Literal",
            "start": 320,
            "end": 323,
            "value": "1",
            "raw": "\"1\""
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 327,
            "end": 330,
            "value": "1",
            "raw": "\"1\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 335,
          "end": 336,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 338,
        "end": 416,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 342,
            "end": 414,
            "argument": {
              "type": "NewExpression",
              "start": 348,
              "end": 413,
              "callee": {
                "type": "Identifier",
                "start": 352,
                "end": 364,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 365,
                  "end": 412,
                  "left": {
                    "type": "Literal",
                    "start": 365,
                    "end": 397,
                    "value": "#1: \"1\" >> \"1\" === 0. Actual: ",
                    "raw": "'#1: \"1\" >> \"1\" === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 400,
                    "end": 412,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 401,
                      "end": 411,
                      "left": {
                        "type": "Literal",
                        "start": 401,
                        "end": 404,
                        "value": "1",
                        "raw": "\"1\""
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 408,
                        "end": 411,
                        "value": "1",
                        "raw": "\"1\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 428,
      "end": 564,
      "test": {
        "type": "BinaryExpression",
        "start": 432,
        "end": 460,
        "left": {
          "type": "BinaryExpression",
          "start": 432,
          "end": 454,
          "left": {
            "type": "NewExpression",
            "start": 432,
            "end": 447,
            "callee": {
              "type": "Identifier",
              "start": 436,
              "end": 442,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 443,
                "end": 446,
                "value": "1",
                "raw": "\"1\""
              }
            ]
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 451,
            "end": 454,
            "value": "1",
            "raw": "\"1\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 459,
          "end": 460,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 462,
        "end": 564,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 466,
            "end": 562,
            "argument": {
              "type": "NewExpression",
              "start": 472,
              "end": 561,
              "callee": {
                "type": "Identifier",
                "start": 476,
                "end": 488,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 489,
                  "end": 560,
                  "left": {
                    "type": "Literal",
                    "start": 489,
                    "end": 533,
                    "value": "#2: new String(\"1\") >> \"1\" === 0. Actual: ",
                    "raw": "'#2: new String(\"1\") >> \"1\" === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 536,
                    "end": 560,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 537,
                      "end": 559,
                      "left": {
                        "type": "NewExpression",
                        "start": 537,
                        "end": 552,
                        "callee": {
                          "type": "Identifier",
                          "start": 541,
                          "end": 547,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 548,
                            "end": 551,
                            "value": "1",
                            "raw": "\"1\""
                          }
                        ]
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 556,
                        "end": 559,
                        "value": "1",
                        "raw": "\"1\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 576,
      "end": 712,
      "test": {
        "type": "BinaryExpression",
        "start": 580,
        "end": 608,
        "left": {
          "type": "BinaryExpression",
          "start": 580,
          "end": 602,
          "left": {
            "type": "Literal",
            "start": 580,
            "end": 583,
            "value": "1",
            "raw": "\"1\""
          },
          "operator": ">>",
          "right": {
            "type": "NewExpression",
            "start": 587,
            "end": 602,
            "callee": {
              "type": "Identifier",
              "start": 591,
              "end": 597,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 598,
                "end": 601,
                "value": "1",
                "raw": "\"1\""
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 607,
          "end": 608,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 610,
        "end": 712,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 614,
            "end": 710,
            "argument": {
              "type": "NewExpression",
              "start": 620,
              "end": 709,
              "callee": {
                "type": "Identifier",
                "start": 624,
                "end": 636,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 637,
                  "end": 708,
                  "left": {
                    "type": "Literal",
                    "start": 637,
                    "end": 681,
                    "value": "#3: \"1\" >> new String(\"1\") === 0. Actual: ",
                    "raw": "'#3: \"1\" >> new String(\"1\") === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 684,
                    "end": 708,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 685,
                      "end": 707,
                      "left": {
                        "type": "Literal",
                        "start": 685,
                        "end": 688,
                        "value": "1",
                        "raw": "\"1\""
                      },
                      "operator": ">>",
                      "right": {
                        "type": "NewExpression",
                        "start": 692,
                        "end": 707,
                        "callee": {
                          "type": "Identifier",
                          "start": 696,
                          "end": 702,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 703,
                            "end": 706,
                            "value": "1",
                            "raw": "\"1\""
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 724,
      "end": 896,
      "test": {
        "type": "BinaryExpression",
        "start": 728,
        "end": 768,
        "left": {
          "type": "BinaryExpression",
          "start": 728,
          "end": 762,
          "left": {
            "type": "NewExpression",
            "start": 728,
            "end": 743,
            "callee": {
              "type": "Identifier",
              "start": 732,
              "end": 738,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 739,
                "end": 742,
                "value": "1",
                "raw": "\"1\""
              }
            ]
          },
          "operator": ">>",
          "right": {
            "type": "NewExpression",
            "start": 747,
            "end": 762,
            "callee": {
              "type": "Identifier",
              "start": 751,
              "end": 757,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 758,
                "end": 761,
                "value": "1",
                "raw": "\"1\""
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 767,
          "end": 768,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 770,
        "end": 896,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 774,
            "end": 894,
            "argument": {
              "type": "NewExpression",
              "start": 780,
              "end": 893,
              "callee": {
                "type": "Identifier",
                "start": 784,
                "end": 796,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 797,
                  "end": 892,
                  "left": {
                    "type": "Literal",
                    "start": 797,
                    "end": 853,
                    "value": "#4: new String(\"1\") >> new String(\"1\") === 0. Actual: ",
                    "raw": "'#4: new String(\"1\") >> new String(\"1\") === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 856,
                    "end": 892,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 857,
                      "end": 891,
                      "left": {
                        "type": "NewExpression",
                        "start": 857,
                        "end": 872,
                        "callee": {
                          "type": "Identifier",
                          "start": 861,
                          "end": 867,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 868,
                            "end": 871,
                            "value": "1",
                            "raw": "\"1\""
                          }
                        ]
                      },
                      "operator": ">>",
                      "right": {
                        "type": "NewExpression",
                        "start": 876,
                        "end": 891,
                        "callee": {
                          "type": "Identifier",
                          "start": 880,
                          "end": 886,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 887,
                            "end": 890,
                            "value": "1",
                            "raw": "\"1\""
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 908,
      "end": 1008,
      "test": {
        "type": "BinaryExpression",
        "start": 912,
        "end": 928,
        "left": {
          "type": "BinaryExpression",
          "start": 912,
          "end": 922,
          "left": {
            "type": "Literal",
            "start": 912,
            "end": 915,
            "value": "x",
            "raw": "\"x\""
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 919,
            "end": 922,
            "value": "1",
            "raw": "\"1\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 927,
          "end": 928,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 930,
        "end": 1008,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 934,
            "end": 1006,
            "argument": {
              "type": "NewExpression",
              "start": 940,
              "end": 1005,
              "callee": {
                "type": "Identifier",
                "start": 944,
                "end": 956,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 957,
                  "end": 1004,
                  "left": {
                    "type": "Literal",
                    "start": 957,
                    "end": 989,
                    "value": "#5: \"x\" >> \"1\" === 0. Actual: ",
                    "raw": "'#5: \"x\" >> \"1\" === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 992,
                    "end": 1004,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 993,
                      "end": 1003,
                      "left": {
                        "type": "Literal",
                        "start": 993,
                        "end": 996,
                        "value": "x",
                        "raw": "\"x\""
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1000,
                        "end": 1003,
                        "value": "1",
                        "raw": "\"1\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1020,
      "end": 1120,
      "test": {
        "type": "BinaryExpression",
        "start": 1024,
        "end": 1040,
        "left": {
          "type": "BinaryExpression",
          "start": 1024,
          "end": 1034,
          "left": {
            "type": "Literal",
            "start": 1024,
            "end": 1027,
            "value": "1",
            "raw": "\"1\""
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1031,
            "end": 1034,
            "value": "x",
            "raw": "\"x\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1039,
          "end": 1040,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1042,
        "end": 1120,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1046,
            "end": 1118,
            "argument": {
              "type": "NewExpression",
              "start": 1052,
              "end": 1117,
              "callee": {
                "type": "Identifier",
                "start": 1056,
                "end": 1068,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1069,
                  "end": 1116,
                  "left": {
                    "type": "Literal",
                    "start": 1069,
                    "end": 1101,
                    "value": "#6: \"1\" >> \"x\" === 1. Actual: ",
                    "raw": "'#6: \"1\" >> \"x\" === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1104,
                    "end": 1116,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1105,
                      "end": 1115,
                      "left": {
                        "type": "Literal",
                        "start": 1105,
                        "end": 1108,
                        "value": "1",
                        "raw": "\"1\""
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1112,
                        "end": 1115,
                        "value": "x",
                        "raw": "\"x\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}