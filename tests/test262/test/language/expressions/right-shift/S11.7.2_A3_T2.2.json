{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": "1",
            "raw": "\"1\"",
            "start": 387,
            "end": 390
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 394,
            "end": 395
          },
          "start": 387,
          "end": 395
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 400,
          "end": 401
        },
        "start": 387,
        "end": 401
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 417,
                "end": 429
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: \"1\" >> 1 === 0. Actual: ",
                    "raw": "'#1: \"1\" >> 1 === 0. Actual: '",
                    "start": 430,
                    "end": 460
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "1",
                        "raw": "\"1\"",
                        "start": 464,
                        "end": 467
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 471,
                        "end": 472
                      },
                      "start": 464,
                      "end": 472
                    },
                    "start": 463,
                    "end": 473
                  },
                  "start": 430,
                  "end": 473
                }
              ],
              "start": 413,
              "end": 474
            },
            "start": 407,
            "end": 475
          }
        ],
        "start": 403,
        "end": 477
      },
      "alternate": null,
      "start": 383,
      "end": 477
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 493,
            "end": 494
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "value": "1",
            "raw": "\"1\"",
            "start": 498,
            "end": 501
          },
          "start": 493,
          "end": 501
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 506,
          "end": 507
        },
        "start": 493,
        "end": 507
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 523,
                "end": 535
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: 1 >> \"1\" === 0. Actual: ",
                    "raw": "'#2: 1 >> \"1\" === 0. Actual: '",
                    "start": 536,
                    "end": 566
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 570,
                        "end": 571
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "value": "1",
                        "raw": "\"1\"",
                        "start": 575,
                        "end": 578
                      },
                      "start": 570,
                      "end": 578
                    },
                    "start": 569,
                    "end": 579
                  },
                  "start": 536,
                  "end": 579
                }
              ],
              "start": 519,
              "end": 580
            },
            "start": 513,
            "end": 581
          }
        ],
        "start": 509,
        "end": 583
      },
      "alternate": null,
      "start": 489,
      "end": 583
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "String",
              "start": 603,
              "end": 609
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 610,
                "end": 613
              }
            ],
            "start": 599,
            "end": 614
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 618,
            "end": 619
          },
          "start": 599,
          "end": 619
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 624,
          "end": 625
        },
        "start": 599,
        "end": 625
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 641,
                "end": 653
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new String(\"1\") >> 1 === 0. Actual: ",
                    "raw": "'#3: new String(\"1\") >> 1 === 0. Actual: '",
                    "start": 654,
                    "end": 696
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 704,
                          "end": 710
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "1",
                            "raw": "\"1\"",
                            "start": 711,
                            "end": 714
                          }
                        ],
                        "start": 700,
                        "end": 715
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 719,
                        "end": 720
                      },
                      "start": 700,
                      "end": 720
                    },
                    "start": 699,
                    "end": 721
                  },
                  "start": 654,
                  "end": 721
                }
              ],
              "start": 637,
              "end": 722
            },
            "start": 631,
            "end": 723
          }
        ],
        "start": 627,
        "end": 725
      },
      "alternate": null,
      "start": 595,
      "end": 725
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 741,
            "end": 742
          },
          "operator": ">>",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "String",
              "start": 750,
              "end": 756
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 757,
                "end": 760
              }
            ],
            "start": 746,
            "end": 761
          },
          "start": 741,
          "end": 761
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 766,
          "end": 767
        },
        "start": 741,
        "end": 767
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 783,
                "end": 795
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: 1 >> new String(\"1\") === 0. Actual: ",
                    "raw": "'#4: 1 >> new String(\"1\") === 0. Actual: '",
                    "start": 796,
                    "end": 838
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 842,
                        "end": 843
                      },
                      "operator": ">>",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 851,
                          "end": 857
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "1",
                            "raw": "\"1\"",
                            "start": 858,
                            "end": 861
                          }
                        ],
                        "start": 847,
                        "end": 862
                      },
                      "start": 842,
                      "end": 862
                    },
                    "start": 841,
                    "end": 863
                  },
                  "start": 796,
                  "end": 863
                }
              ],
              "start": 779,
              "end": 864
            },
            "start": 773,
            "end": 865
          }
        ],
        "start": 769,
        "end": 867
      },
      "alternate": null,
      "start": 737,
      "end": 867
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": "1",
            "raw": "\"1\"",
            "start": 883,
            "end": 886
          },
          "operator": ">>",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 894,
              "end": 900
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 901,
                "end": 902
              }
            ],
            "start": 890,
            "end": 903
          },
          "start": 883,
          "end": 903
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 908,
          "end": 909
        },
        "start": 883,
        "end": 909
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 925,
                "end": 937
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: \"1\" >> new Number(1) === 0. Actual: ",
                    "raw": "'#5: \"1\" >> new Number(1) === 0. Actual: '",
                    "start": 938,
                    "end": 980
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "1",
                        "raw": "\"1\"",
                        "start": 984,
                        "end": 987
                      },
                      "operator": ">>",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 995,
                          "end": 1001
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1002,
                            "end": 1003
                          }
                        ],
                        "start": 991,
                        "end": 1004
                      },
                      "start": 984,
                      "end": 1004
                    },
                    "start": 983,
                    "end": 1005
                  },
                  "start": 938,
                  "end": 1005
                }
              ],
              "start": 921,
              "end": 1006
            },
            "start": 915,
            "end": 1007
          }
        ],
        "start": 911,
        "end": 1009
      },
      "alternate": null,
      "start": 879,
      "end": 1009
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 1029,
              "end": 1035
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1036,
                "end": 1037
              }
            ],
            "start": 1025,
            "end": 1038
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "value": "1",
            "raw": "\"1\"",
            "start": 1042,
            "end": 1045
          },
          "start": 1025,
          "end": 1045
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1050,
          "end": 1051
        },
        "start": 1025,
        "end": 1051
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1067,
                "end": 1079
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: new Number(1) >> \"1\" === 0. Actual: ",
                    "raw": "'#6: new Number(1) >> \"1\" === 0. Actual: '",
                    "start": 1080,
                    "end": 1122
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1130,
                          "end": 1136
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1137,
                            "end": 1138
                          }
                        ],
                        "start": 1126,
                        "end": 1139
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "value": "1",
                        "raw": "\"1\"",
                        "start": 1143,
                        "end": 1146
                      },
                      "start": 1126,
                      "end": 1146
                    },
                    "start": 1125,
                    "end": 1147
                  },
                  "start": 1080,
                  "end": 1147
                }
              ],
              "start": 1063,
              "end": 1148
            },
            "start": 1057,
            "end": 1149
          }
        ],
        "start": 1053,
        "end": 1151
      },
      "alternate": null,
      "start": 1021,
      "end": 1151
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "String",
              "start": 1171,
              "end": 1177
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 1178,
                "end": 1181
              }
            ],
            "start": 1167,
            "end": 1182
          },
          "operator": ">>",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 1190,
              "end": 1196
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1197,
                "end": 1198
              }
            ],
            "start": 1186,
            "end": 1199
          },
          "start": 1167,
          "end": 1199
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1204,
          "end": 1205
        },
        "start": 1167,
        "end": 1205
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1221,
                "end": 1233
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: new String(\"1\") >> new Number(1) === 0. Actual: ",
                    "raw": "'#7: new String(\"1\") >> new Number(1) === 0. Actual: '",
                    "start": 1234,
                    "end": 1288
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 1296,
                          "end": 1302
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "1",
                            "raw": "\"1\"",
                            "start": 1303,
                            "end": 1306
                          }
                        ],
                        "start": 1292,
                        "end": 1307
                      },
                      "operator": ">>",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1315,
                          "end": 1321
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1322,
                            "end": 1323
                          }
                        ],
                        "start": 1311,
                        "end": 1324
                      },
                      "start": 1292,
                      "end": 1324
                    },
                    "start": 1291,
                    "end": 1325
                  },
                  "start": 1234,
                  "end": 1325
                }
              ],
              "start": 1217,
              "end": 1326
            },
            "start": 1211,
            "end": 1327
          }
        ],
        "start": 1207,
        "end": 1329
      },
      "alternate": null,
      "start": 1163,
      "end": 1329
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 1349,
              "end": 1355
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1356,
                "end": 1357
              }
            ],
            "start": 1345,
            "end": 1358
          },
          "operator": ">>",
          "right": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "String",
              "start": 1366,
              "end": 1372
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "1",
                "raw": "\"1\"",
                "start": 1373,
                "end": 1376
              }
            ],
            "start": 1362,
            "end": 1377
          },
          "start": 1345,
          "end": 1377
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1382,
          "end": 1383
        },
        "start": 1345,
        "end": 1383
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1399,
                "end": 1411
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: new Number(1) >> new String(\"1\") === 0. Actual: ",
                    "raw": "'#8: new Number(1) >> new String(\"1\") === 0. Actual: '",
                    "start": 1412,
                    "end": 1466
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1474,
                          "end": 1480
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1481,
                            "end": 1482
                          }
                        ],
                        "start": 1470,
                        "end": 1483
                      },
                      "operator": ">>",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "String",
                          "start": 1491,
                          "end": 1497
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "1",
                            "raw": "\"1\"",
                            "start": 1498,
                            "end": 1501
                          }
                        ],
                        "start": 1487,
                        "end": 1502
                      },
                      "start": 1470,
                      "end": 1502
                    },
                    "start": 1469,
                    "end": 1503
                  },
                  "start": 1412,
                  "end": 1503
                }
              ],
              "start": 1395,
              "end": 1504
            },
            "start": 1389,
            "end": 1505
          }
        ],
        "start": 1385,
        "end": 1507
      },
      "alternate": null,
      "start": 1341,
      "end": 1507
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": "x",
            "raw": "\"x\"",
            "start": 1523,
            "end": 1526
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1530,
            "end": 1531
          },
          "start": 1523,
          "end": 1531
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1536,
          "end": 1537
        },
        "start": 1523,
        "end": 1537
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1553,
                "end": 1565
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: \"x\" >> 1 === 0. Actual: ",
                    "raw": "'#9: \"x\" >> 1 === 0. Actual: '",
                    "start": 1566,
                    "end": 1596
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "x",
                        "raw": "\"x\"",
                        "start": 1600,
                        "end": 1603
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1607,
                        "end": 1608
                      },
                      "start": 1600,
                      "end": 1608
                    },
                    "start": 1599,
                    "end": 1609
                  },
                  "start": 1566,
                  "end": 1609
                }
              ],
              "start": 1549,
              "end": 1610
            },
            "start": 1543,
            "end": 1611
          }
        ],
        "start": 1539,
        "end": 1613
      },
      "alternate": null,
      "start": 1519,
      "end": 1613
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1630,
            "end": 1631
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "value": "x",
            "raw": "\"x\"",
            "start": 1635,
            "end": 1638
          },
          "start": 1630,
          "end": 1638
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1643,
          "end": 1644
        },
        "start": 1630,
        "end": 1644
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1660,
                "end": 1672
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: 1 >> \"x\" === 1. Actual: ",
                    "raw": "'#10: 1 >> \"x\" === 1. Actual: '",
                    "start": 1673,
                    "end": 1704
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1708,
                        "end": 1709
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "value": "x",
                        "raw": "\"x\"",
                        "start": 1713,
                        "end": 1716
                      },
                      "start": 1708,
                      "end": 1716
                    },
                    "start": 1707,
                    "end": 1717
                  },
                  "start": 1673,
                  "end": 1717
                }
              ],
              "start": 1656,
              "end": 1718
            },
            "start": 1650,
            "end": 1719
          }
        ],
        "start": 1646,
        "end": 1721
      },
      "alternate": null,
      "start": 1626,
      "end": 1721
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1722
}