{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 334,
            "end": 340
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 341,
            "end": 347
          },
          "optional": false,
          "computed": false,
          "start": 334,
          "end": 347
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 348,
            "end": 357
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Symbol",
                        "start": 374,
                        "end": 380
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1",
                          "raw": "'1'",
                          "start": 381,
                          "end": 384
                        }
                      ],
                      "optional": false,
                      "start": 374,
                      "end": 385
                    },
                    "operator": "+",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 388,
                      "end": 390
                    },
                    "start": 374,
                    "end": 390
                  },
                  "start": 374,
                  "end": 391
                }
              ],
              "start": 370,
              "end": 393
            },
            "expression": false,
            "start": 359,
            "end": 393
          },
          {
            "type": "Literal",
            "value": "Symbol(\"1\") + 0n throws TypeError",
            "raw": "'Symbol(\"1\") + 0n throws TypeError'",
            "start": 395,
            "end": 430
          }
        ],
        "optional": false,
        "start": 334,
        "end": 431
      },
      "start": 334,
      "end": 432
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 434,
            "end": 440
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 441,
            "end": 447
          },
          "optional": false,
          "computed": false,
          "start": 434,
          "end": 447
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 448,
            "end": 457
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 474,
                      "end": 476
                    },
                    "operator": "+",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Symbol",
                        "start": 479,
                        "end": 485
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1",
                          "raw": "'1'",
                          "start": 486,
                          "end": 489
                        }
                      ],
                      "optional": false,
                      "start": 479,
                      "end": 490
                    },
                    "start": 474,
                    "end": 490
                  },
                  "start": 474,
                  "end": 491
                }
              ],
              "start": 470,
              "end": 493
            },
            "expression": false,
            "start": 459,
            "end": 493
          },
          {
            "type": "Literal",
            "value": "0n + Symbol(\"1\") throws TypeError",
            "raw": "'0n + Symbol(\"1\") throws TypeError'",
            "start": 495,
            "end": 530
          }
        ],
        "optional": false,
        "start": 434,
        "end": 531
      },
      "start": 434,
      "end": 532
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 534,
            "end": 540
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 541,
            "end": 547
          },
          "optional": false,
          "computed": false,
          "start": 534,
          "end": 547
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 548,
            "end": 557
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 574,
                        "end": 580
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 581,
                            "end": 587
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "'1'",
                              "start": 588,
                              "end": 591
                            }
                          ],
                          "optional": false,
                          "start": 581,
                          "end": 592
                        }
                      ],
                      "optional": false,
                      "start": 574,
                      "end": 593
                    },
                    "operator": "+",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 596,
                      "end": 598
                    },
                    "start": 574,
                    "end": 598
                  },
                  "start": 574,
                  "end": 599
                }
              ],
              "start": 570,
              "end": 601
            },
            "expression": false,
            "start": 559,
            "end": 601
          },
          {
            "type": "Literal",
            "value": "Object(Symbol(\"1\")) + 0n throws TypeError",
            "raw": "'Object(Symbol(\"1\")) + 0n throws TypeError'",
            "start": 603,
            "end": 646
          }
        ],
        "optional": false,
        "start": 534,
        "end": 647
      },
      "start": 534,
      "end": 648
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 650,
            "end": 656
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 657,
            "end": 663
          },
          "optional": false,
          "computed": false,
          "start": 650,
          "end": 663
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 664,
            "end": 673
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 690,
                      "end": 692
                    },
                    "operator": "+",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 695,
                        "end": 701
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 702,
                            "end": 708
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "'1'",
                              "start": 709,
                              "end": 712
                            }
                          ],
                          "optional": false,
                          "start": 702,
                          "end": 713
                        }
                      ],
                      "optional": false,
                      "start": 695,
                      "end": 714
                    },
                    "start": 690,
                    "end": 714
                  },
                  "start": 690,
                  "end": 715
                }
              ],
              "start": 686,
              "end": 717
            },
            "expression": false,
            "start": 675,
            "end": 717
          },
          {
            "type": "Literal",
            "value": "0n + Object(Symbol(\"1\")) throws TypeError",
            "raw": "'0n + Object(Symbol(\"1\")) throws TypeError'",
            "start": 719,
            "end": 762
          }
        ],
        "optional": false,
        "start": 650,
        "end": 763
      },
      "start": 650,
      "end": 764
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 766,
            "end": 772
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 773,
            "end": 779
          },
          "optional": false,
          "computed": false,
          "start": 766,
          "end": 779
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 780,
            "end": 789
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Symbol",
                                "start": 814,
                                "end": 820
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toPrimitive",
                                "start": 821,
                                "end": 832
                              },
                              "optional": false,
                              "computed": false,
                              "start": 814,
                              "end": 832
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 861,
                                        "end": 867
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 868,
                                          "end": 871
                                        }
                                      ],
                                      "optional": false,
                                      "start": 861,
                                      "end": 872
                                    },
                                    "start": 854,
                                    "end": 873
                                  }
                                ],
                                "start": 846,
                                "end": 879
                              },
                              "expression": false,
                              "start": 835,
                              "end": 879
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": true,
                            "start": 813,
                            "end": 879
                          }
                        ],
                        "start": 807,
                        "end": 883
                      },
                      "start": 806,
                      "end": 884
                    },
                    "operator": "+",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 887,
                      "end": 889
                    },
                    "start": 806,
                    "end": 889
                  },
                  "start": 806,
                  "end": 890
                }
              ],
              "start": 802,
              "end": 892
            },
            "expression": false,
            "start": 791,
            "end": 892
          },
          {
            "type": "Literal",
            "value": "({[Symbol.toPrimitive]: function() {return Symbol(\"1\");}}) + 0n throws TypeError",
            "raw": "'({[Symbol.toPrimitive]: function() {return Symbol(\"1\");}}) + 0n throws TypeError'",
            "start": 894,
            "end": 976
          }
        ],
        "optional": false,
        "start": 766,
        "end": 977
      },
      "start": 766,
      "end": 978
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 980,
            "end": 986
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 987,
            "end": 993
          },
          "optional": false,
          "computed": false,
          "start": 980,
          "end": 993
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 994,
            "end": 1003
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1020,
                      "end": 1022
                    },
                    "operator": "+",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "Symbol",
                              "start": 1032,
                              "end": 1038
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "toPrimitive",
                              "start": 1039,
                              "end": 1050
                            },
                            "optional": false,
                            "computed": false,
                            "start": 1032,
                            "end": 1050
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1079,
                                      "end": 1085
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1086,
                                        "end": 1089
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1079,
                                    "end": 1090
                                  },
                                  "start": 1072,
                                  "end": 1091
                                }
                              ],
                              "start": 1064,
                              "end": 1097
                            },
                            "expression": false,
                            "start": 1053,
                            "end": 1097
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": true,
                          "start": 1031,
                          "end": 1097
                        }
                      ],
                      "start": 1025,
                      "end": 1101
                    },
                    "start": 1020,
                    "end": 1101
                  },
                  "start": 1020,
                  "end": 1102
                }
              ],
              "start": 1016,
              "end": 1104
            },
            "expression": false,
            "start": 1005,
            "end": 1104
          },
          {
            "type": "Literal",
            "value": "0n + {[Symbol.toPrimitive]: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n + {[Symbol.toPrimitive]: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1106,
            "end": 1186
          }
        ],
        "optional": false,
        "start": 980,
        "end": 1187
      },
      "start": 980,
      "end": 1188
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1190,
            "end": 1196
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1197,
            "end": 1203
          },
          "optional": false,
          "computed": false,
          "start": 1190,
          "end": 1203
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1204,
            "end": 1213
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "valueOf",
                              "start": 1237,
                              "end": 1244
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 1272,
                                        "end": 1278
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 1279,
                                          "end": 1282
                                        }
                                      ],
                                      "optional": false,
                                      "start": 1272,
                                      "end": 1283
                                    },
                                    "start": 1265,
                                    "end": 1284
                                  }
                                ],
                                "start": 1257,
                                "end": 1290
                              },
                              "expression": false,
                              "start": 1246,
                              "end": 1290
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1237,
                            "end": 1290
                          }
                        ],
                        "start": 1231,
                        "end": 1294
                      },
                      "start": 1230,
                      "end": 1295
                    },
                    "operator": "+",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1298,
                      "end": 1300
                    },
                    "start": 1230,
                    "end": 1300
                  },
                  "start": 1230,
                  "end": 1301
                }
              ],
              "start": 1226,
              "end": 1303
            },
            "expression": false,
            "start": 1215,
            "end": 1303
          },
          {
            "type": "Literal",
            "value": "({valueOf: function() {return Symbol(\"1\");}}) + 0n throws TypeError",
            "raw": "'({valueOf: function() {return Symbol(\"1\");}}) + 0n throws TypeError'",
            "start": 1305,
            "end": 1374
          }
        ],
        "optional": false,
        "start": 1190,
        "end": 1375
      },
      "start": 1190,
      "end": 1376
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1378,
            "end": 1384
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1385,
            "end": 1391
          },
          "optional": false,
          "computed": false,
          "start": 1378,
          "end": 1391
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1392,
            "end": 1401
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1418,
                      "end": 1420
                    },
                    "operator": "+",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "valueOf",
                            "start": 1429,
                            "end": 1436
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1464,
                                      "end": 1470
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1471,
                                        "end": 1474
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1464,
                                    "end": 1475
                                  },
                                  "start": 1457,
                                  "end": 1476
                                }
                              ],
                              "start": 1449,
                              "end": 1482
                            },
                            "expression": false,
                            "start": 1438,
                            "end": 1482
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1429,
                          "end": 1482
                        }
                      ],
                      "start": 1423,
                      "end": 1486
                    },
                    "start": 1418,
                    "end": 1486
                  },
                  "start": 1418,
                  "end": 1487
                }
              ],
              "start": 1414,
              "end": 1489
            },
            "expression": false,
            "start": 1403,
            "end": 1489
          },
          {
            "type": "Literal",
            "value": "0n + {valueOf: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n + {valueOf: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1491,
            "end": 1558
          }
        ],
        "optional": false,
        "start": 1378,
        "end": 1559
      },
      "start": 1378,
      "end": 1560
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1562,
            "end": 1568
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1569,
            "end": 1575
          },
          "optional": false,
          "computed": false,
          "start": 1562,
          "end": 1575
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1576,
            "end": 1585
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "toString",
                              "start": 1609,
                              "end": 1617
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 1645,
                                        "end": 1651
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 1652,
                                          "end": 1655
                                        }
                                      ],
                                      "optional": false,
                                      "start": 1645,
                                      "end": 1656
                                    },
                                    "start": 1638,
                                    "end": 1657
                                  }
                                ],
                                "start": 1630,
                                "end": 1663
                              },
                              "expression": false,
                              "start": 1619,
                              "end": 1663
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1609,
                            "end": 1663
                          }
                        ],
                        "start": 1603,
                        "end": 1667
                      },
                      "start": 1602,
                      "end": 1668
                    },
                    "operator": "+",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1671,
                      "end": 1673
                    },
                    "start": 1602,
                    "end": 1673
                  },
                  "start": 1602,
                  "end": 1674
                }
              ],
              "start": 1598,
              "end": 1676
            },
            "expression": false,
            "start": 1587,
            "end": 1676
          },
          {
            "type": "Literal",
            "value": "({toString: function() {return Symbol(\"1\");}}) + 0n throws TypeError",
            "raw": "'({toString: function() {return Symbol(\"1\");}}) + 0n throws TypeError'",
            "start": 1678,
            "end": 1748
          }
        ],
        "optional": false,
        "start": 1562,
        "end": 1749
      },
      "start": 1562,
      "end": 1750
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1752,
            "end": 1758
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1759,
            "end": 1765
          },
          "optional": false,
          "computed": false,
          "start": 1752,
          "end": 1765
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1766,
            "end": 1775
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1792,
                      "end": 1794
                    },
                    "operator": "+",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "toString",
                            "start": 1803,
                            "end": 1811
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1839,
                                      "end": 1845
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1846,
                                        "end": 1849
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1839,
                                    "end": 1850
                                  },
                                  "start": 1832,
                                  "end": 1851
                                }
                              ],
                              "start": 1824,
                              "end": 1857
                            },
                            "expression": false,
                            "start": 1813,
                            "end": 1857
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1803,
                          "end": 1857
                        }
                      ],
                      "start": 1797,
                      "end": 1861
                    },
                    "start": 1792,
                    "end": 1861
                  },
                  "start": 1792,
                  "end": 1862
                }
              ],
              "start": 1788,
              "end": 1864
            },
            "expression": false,
            "start": 1777,
            "end": 1864
          },
          {
            "type": "Literal",
            "value": "0n + {toString: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n + {toString: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1866,
            "end": 1934
          }
        ],
        "optional": false,
        "start": 1752,
        "end": 1935
      },
      "start": 1752,
      "end": 1936
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1937
}