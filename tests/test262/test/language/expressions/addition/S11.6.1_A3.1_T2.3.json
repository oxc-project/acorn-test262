{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 478,
            "end": 483
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 484,
                "end": 485
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 488,
                "end": 497
              },
              "start": 484,
              "end": 497
            }
          ],
          "optional": false,
          "start": 478,
          "end": 498
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 503,
          "end": 507
        },
        "start": 478,
        "end": 507
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 523,
                "end": 535
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: 1 + undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: 1 + undefined === Not-a-Number. Actual: '",
                    "start": 536,
                    "end": 582
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 586,
                        "end": 587
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 590,
                        "end": 599
                      },
                      "start": 586,
                      "end": 599
                    },
                    "start": 585,
                    "end": 600
                  },
                  "start": 536,
                  "end": 600
                }
              ],
              "start": 519,
              "end": 601
            },
            "start": 513,
            "end": 602
          }
        ],
        "start": 509,
        "end": 604
      },
      "alternate": null,
      "start": 474,
      "end": 604
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 620,
            "end": 625
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 626,
                "end": 635
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 638,
                "end": 639
              },
              "start": 626,
              "end": 639
            }
          ],
          "optional": false,
          "start": 620,
          "end": 640
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 645,
          "end": 649
        },
        "start": 620,
        "end": 649
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 665,
                "end": 677
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: undefined + 1 === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined + 1 === Not-a-Number. Actual: '",
                    "start": 678,
                    "end": 724
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 728,
                        "end": 737
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 740,
                        "end": 741
                      },
                      "start": 728,
                      "end": 741
                    },
                    "start": 727,
                    "end": 742
                  },
                  "start": 678,
                  "end": 742
                }
              ],
              "start": 661,
              "end": 743
            },
            "start": 655,
            "end": 744
          }
        ],
        "start": 651,
        "end": 746
      },
      "alternate": null,
      "start": 616,
      "end": 746
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 762,
            "end": 767
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 772,
                  "end": 778
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 779,
                    "end": 780
                  }
                ],
                "start": 768,
                "end": 781
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 784,
                "end": 793
              },
              "start": 768,
              "end": 793
            }
          ],
          "optional": false,
          "start": 762,
          "end": 794
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 799,
          "end": 803
        },
        "start": 762,
        "end": 803
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 819,
                "end": 831
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new Number(1) + undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: new Number(1) + undefined === Not-a-Number. Actual: '",
                    "start": 832,
                    "end": 890
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 898,
                          "end": 904
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 905,
                            "end": 906
                          }
                        ],
                        "start": 894,
                        "end": 907
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 910,
                        "end": 919
                      },
                      "start": 894,
                      "end": 919
                    },
                    "start": 893,
                    "end": 920
                  },
                  "start": 832,
                  "end": 920
                }
              ],
              "start": 815,
              "end": 921
            },
            "start": 809,
            "end": 922
          }
        ],
        "start": 805,
        "end": 924
      },
      "alternate": null,
      "start": 758,
      "end": 924
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 940,
            "end": 945
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 946,
                "end": 955
              },
              "operator": "+",
              "right": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 962,
                  "end": 968
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 969,
                    "end": 970
                  }
                ],
                "start": 958,
                "end": 971
              },
              "start": 946,
              "end": 971
            }
          ],
          "optional": false,
          "start": 940,
          "end": 972
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 977,
          "end": 981
        },
        "start": 940,
        "end": 981
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 997,
                "end": 1009
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: undefined + new Number(1) === Not-a-Number. Actual: ",
                    "raw": "'#4: undefined + new Number(1) === Not-a-Number. Actual: '",
                    "start": 1010,
                    "end": 1068
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 1072,
                        "end": 1081
                      },
                      "operator": "+",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1088,
                          "end": 1094
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 1095,
                            "end": 1096
                          }
                        ],
                        "start": 1084,
                        "end": 1097
                      },
                      "start": 1072,
                      "end": 1097
                    },
                    "start": 1071,
                    "end": 1098
                  },
                  "start": 1010,
                  "end": 1098
                }
              ],
              "start": 993,
              "end": 1099
            },
            "start": 987,
            "end": 1100
          }
        ],
        "start": 983,
        "end": 1102
      },
      "alternate": null,
      "start": 936,
      "end": 1102
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1103
}