{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 479,
            "end": 484
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 485,
                "end": 489
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 492,
                "end": 501
              },
              "start": 485,
              "end": 501
            }
          ],
          "optional": false,
          "start": 479,
          "end": 502
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 507,
          "end": 511
        },
        "start": 479,
        "end": 511
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 527,
                "end": 539
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: true + undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: true + undefined === Not-a-Number. Actual: '",
                    "start": 540,
                    "end": 589
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 593,
                        "end": 597
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 600,
                        "end": 609
                      },
                      "start": 593,
                      "end": 609
                    },
                    "start": 592,
                    "end": 610
                  },
                  "start": 540,
                  "end": 610
                }
              ],
              "start": 523,
              "end": 611
            },
            "start": 517,
            "end": 612
          }
        ],
        "start": 513,
        "end": 614
      },
      "alternate": null,
      "start": 475,
      "end": 614
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 630,
            "end": 635
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 636,
                "end": 645
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 648,
                "end": 652
              },
              "start": 636,
              "end": 652
            }
          ],
          "optional": false,
          "start": 630,
          "end": 653
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 658,
          "end": 662
        },
        "start": 630,
        "end": 662
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 678,
                "end": 690
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: undefined + true === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined + true === Not-a-Number. Actual: '",
                    "start": 691,
                    "end": 740
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 744,
                        "end": 753
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 756,
                        "end": 760
                      },
                      "start": 744,
                      "end": 760
                    },
                    "start": 743,
                    "end": 761
                  },
                  "start": 691,
                  "end": 761
                }
              ],
              "start": 674,
              "end": 762
            },
            "start": 668,
            "end": 763
          }
        ],
        "start": 664,
        "end": 765
      },
      "alternate": null,
      "start": 626,
      "end": 765
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 781,
            "end": 786
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Boolean",
                  "start": 791,
                  "end": 798
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 799,
                    "end": 803
                  }
                ],
                "start": 787,
                "end": 804
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 807,
                "end": 816
              },
              "start": 787,
              "end": 816
            }
          ],
          "optional": false,
          "start": 781,
          "end": 817
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 822,
          "end": 826
        },
        "start": 781,
        "end": 826
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 842,
                "end": 854
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new Boolean(true) + undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: new Boolean(true) + undefined === Not-a-Number. Actual: '",
                    "start": 855,
                    "end": 917
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 925,
                          "end": 932
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 933,
                            "end": 937
                          }
                        ],
                        "start": 921,
                        "end": 938
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 941,
                        "end": 950
                      },
                      "start": 921,
                      "end": 950
                    },
                    "start": 920,
                    "end": 951
                  },
                  "start": 855,
                  "end": 951
                }
              ],
              "start": 838,
              "end": 952
            },
            "start": 832,
            "end": 953
          }
        ],
        "start": 828,
        "end": 955
      },
      "alternate": null,
      "start": 777,
      "end": 955
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 971,
            "end": 976
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 977,
                "end": 986
              },
              "operator": "+",
              "right": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Boolean",
                  "start": 993,
                  "end": 1000
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 1001,
                    "end": 1005
                  }
                ],
                "start": 989,
                "end": 1006
              },
              "start": 977,
              "end": 1006
            }
          ],
          "optional": false,
          "start": 971,
          "end": 1007
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1012,
          "end": 1016
        },
        "start": 971,
        "end": 1016
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1032,
                "end": 1044
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: undefined + new Boolean(true) === Not-a-Number. Actual: ",
                    "raw": "'#4: undefined + new Boolean(true) === Not-a-Number. Actual: '",
                    "start": 1045,
                    "end": 1107
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 1111,
                        "end": 1120
                      },
                      "operator": "+",
                      "right": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 1127,
                          "end": 1134
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 1135,
                            "end": 1139
                          }
                        ],
                        "start": 1123,
                        "end": 1140
                      },
                      "start": 1111,
                      "end": 1140
                    },
                    "start": 1110,
                    "end": 1141
                  },
                  "start": 1045,
                  "end": 1141
                }
              ],
              "start": 1028,
              "end": 1142
            },
            "start": 1022,
            "end": 1143
          }
        ],
        "start": 1018,
        "end": 1145
      },
      "alternate": null,
      "start": 967,
      "end": 1145
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1146
}