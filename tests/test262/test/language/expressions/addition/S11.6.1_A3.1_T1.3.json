{
  "type": "Program",
  "start": 0,
  "end": 993,
  "body": [
    {
      "type": "IfStatement",
      "start": 421,
      "end": 560,
      "test": {
        "type": "BinaryExpression",
        "start": 425,
        "end": 457,
        "left": {
          "type": "CallExpression",
          "start": 425,
          "end": 448,
          "callee": {
            "type": "Identifier",
            "start": 425,
            "end": 430,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 431,
              "end": 447,
              "left": {
                "type": "Literal",
                "start": 431,
                "end": 435,
                "value": null,
                "raw": "null"
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "start": 438,
                "end": 447,
                "name": "undefined"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 453,
          "end": 457,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 459,
        "end": 560,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 463,
            "end": 558,
            "argument": {
              "type": "NewExpression",
              "start": 469,
              "end": 557,
              "callee": {
                "type": "Identifier",
                "start": 473,
                "end": 485,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 486,
                  "end": 556,
                  "left": {
                    "type": "Literal",
                    "start": 486,
                    "end": 535,
                    "value": "#1: null + undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: null + undefined === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 538,
                    "end": 556,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 539,
                      "end": 555,
                      "left": {
                        "type": "Literal",
                        "start": 539,
                        "end": 543,
                        "value": null,
                        "raw": "null"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 546,
                        "end": 555,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 572,
      "end": 711,
      "test": {
        "type": "BinaryExpression",
        "start": 576,
        "end": 608,
        "left": {
          "type": "CallExpression",
          "start": 576,
          "end": 599,
          "callee": {
            "type": "Identifier",
            "start": 576,
            "end": 581,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 582,
              "end": 598,
              "left": {
                "type": "Identifier",
                "start": 582,
                "end": 591,
                "name": "undefined"
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "start": 594,
                "end": 598,
                "value": null,
                "raw": "null"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 604,
          "end": 608,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 610,
        "end": 711,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 614,
            "end": 709,
            "argument": {
              "type": "NewExpression",
              "start": 620,
              "end": 708,
              "callee": {
                "type": "Identifier",
                "start": 624,
                "end": 636,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 637,
                  "end": 707,
                  "left": {
                    "type": "Literal",
                    "start": 637,
                    "end": 686,
                    "value": "#2: undefined + null === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined + null === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 689,
                    "end": 707,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 690,
                      "end": 706,
                      "left": {
                        "type": "Identifier",
                        "start": 690,
                        "end": 699,
                        "name": "undefined"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 702,
                        "end": 706,
                        "value": null,
                        "raw": "null"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 723,
      "end": 877,
      "test": {
        "type": "BinaryExpression",
        "start": 727,
        "end": 764,
        "left": {
          "type": "CallExpression",
          "start": 727,
          "end": 755,
          "callee": {
            "type": "Identifier",
            "start": 727,
            "end": 732,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 733,
              "end": 754,
              "left": {
                "type": "Identifier",
                "start": 733,
                "end": 742,
                "name": "undefined"
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "start": 745,
                "end": 754,
                "name": "undefined"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 760,
          "end": 764,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 766,
        "end": 877,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 770,
            "end": 875,
            "argument": {
              "type": "NewExpression",
              "start": 776,
              "end": 874,
              "callee": {
                "type": "Identifier",
                "start": 780,
                "end": 792,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 793,
                  "end": 873,
                  "left": {
                    "type": "Literal",
                    "start": 793,
                    "end": 847,
                    "value": "#3: undefined + undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: undefined + undefined === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 850,
                    "end": 873,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 851,
                      "end": 872,
                      "left": {
                        "type": "Identifier",
                        "start": 851,
                        "end": 860,
                        "name": "undefined"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 863,
                        "end": 872,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 889,
      "end": 992,
      "test": {
        "type": "BinaryExpression",
        "start": 893,
        "end": 910,
        "left": {
          "type": "BinaryExpression",
          "start": 893,
          "end": 904,
          "left": {
            "type": "Literal",
            "start": 893,
            "end": 897,
            "value": null,
            "raw": "null"
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 900,
            "end": 904,
            "value": null,
            "raw": "null"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 909,
          "end": 910,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 912,
        "end": 992,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 916,
            "end": 990,
            "argument": {
              "type": "NewExpression",
              "start": 922,
              "end": 989,
              "callee": {
                "type": "Identifier",
                "start": 926,
                "end": 938,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 939,
                  "end": 988,
                  "left": {
                    "type": "Literal",
                    "start": 939,
                    "end": 972,
                    "value": "#4: null + null === 0. Actual: ",
                    "raw": "'#4: null + null === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 975,
                    "end": 988,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 976,
                      "end": 987,
                      "left": {
                        "type": "Literal",
                        "start": 976,
                        "end": 980,
                        "value": null,
                        "raw": "null"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 983,
                        "end": 987,
                        "value": null,
                        "raw": "null"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}