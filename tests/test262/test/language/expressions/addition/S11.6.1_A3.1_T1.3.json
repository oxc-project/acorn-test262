{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 425,
            "end": 430
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 431,
                "end": 435
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 438,
                "end": 447
              },
              "start": 431,
              "end": 447
            }
          ],
          "optional": false,
          "start": 425,
          "end": 448
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 453,
          "end": 457
        },
        "start": 425,
        "end": 457
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 473,
                "end": 485
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: null + undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: null + undefined === Not-a-Number. Actual: '",
                    "start": 486,
                    "end": 535
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 539,
                        "end": 543
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 546,
                        "end": 555
                      },
                      "start": 539,
                      "end": 555
                    },
                    "start": 538,
                    "end": 556
                  },
                  "start": 486,
                  "end": 556
                }
              ],
              "start": 469,
              "end": 557
            },
            "start": 463,
            "end": 558
          }
        ],
        "start": 459,
        "end": 560
      },
      "alternate": null,
      "start": 421,
      "end": 560
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 576,
            "end": 581
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 582,
                "end": 591
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 594,
                "end": 598
              },
              "start": 582,
              "end": 598
            }
          ],
          "optional": false,
          "start": 576,
          "end": 599
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 604,
          "end": 608
        },
        "start": 576,
        "end": 608
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 624,
                "end": 636
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: undefined + null === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined + null === Not-a-Number. Actual: '",
                    "start": 637,
                    "end": 686
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 690,
                        "end": 699
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 702,
                        "end": 706
                      },
                      "start": 690,
                      "end": 706
                    },
                    "start": 689,
                    "end": 707
                  },
                  "start": 637,
                  "end": 707
                }
              ],
              "start": 620,
              "end": 708
            },
            "start": 614,
            "end": 709
          }
        ],
        "start": 610,
        "end": 711
      },
      "alternate": null,
      "start": 572,
      "end": 711
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 727,
            "end": 732
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "undefined",
                "start": 733,
                "end": 742
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "undefined",
                "start": 745,
                "end": 754
              },
              "start": 733,
              "end": 754
            }
          ],
          "optional": false,
          "start": 727,
          "end": 755
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 760,
          "end": 764
        },
        "start": 727,
        "end": 764
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 780,
                "end": 792
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: undefined + undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: undefined + undefined === Not-a-Number. Actual: '",
                    "start": 793,
                    "end": 847
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 851,
                        "end": 860
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 863,
                        "end": 872
                      },
                      "start": 851,
                      "end": 872
                    },
                    "start": 850,
                    "end": 873
                  },
                  "start": 793,
                  "end": 873
                }
              ],
              "start": 776,
              "end": 874
            },
            "start": 770,
            "end": 875
          }
        ],
        "start": 766,
        "end": 877
      },
      "alternate": null,
      "start": 723,
      "end": 877
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 893,
            "end": 897
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 900,
            "end": 904
          },
          "start": 893,
          "end": 904
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 909,
          "end": 910
        },
        "start": 893,
        "end": 910
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 926,
                "end": 938
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: null + null === 0. Actual: ",
                    "raw": "'#4: null + null === 0. Actual: '",
                    "start": 939,
                    "end": 972
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 976,
                        "end": 980
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 983,
                        "end": 987
                      },
                      "start": 976,
                      "end": 987
                    },
                    "start": 975,
                    "end": 988
                  },
                  "start": 939,
                  "end": 988
                }
              ],
              "start": 922,
              "end": 989
            },
            "start": 916,
            "end": 990
          }
        ],
        "start": 912,
        "end": 992
      },
      "alternate": null,
      "start": 889,
      "end": 992
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 993
}