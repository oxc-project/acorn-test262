{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 326,
            "end": 332
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 333,
            "end": 342
          },
          "optional": false,
          "computed": false,
          "start": 326,
          "end": 342
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 343,
                "end": 349
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "2n",
                  "bigint": "2",
                  "start": 350,
                  "end": 352
                }
              ],
              "optional": false,
              "start": 343,
              "end": 353
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 356,
              "end": 358
            },
            "start": 343,
            "end": 358
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 360,
            "end": 362
          },
          {
            "type": "Literal",
            "value": "The result of (Object(2n) + 1n) is 3n",
            "raw": "'The result of (Object(2n) + 1n) is 3n'",
            "start": 364,
            "end": 403
          }
        ],
        "optional": false,
        "start": 326,
        "end": 404
      },
      "start": 326,
      "end": 405
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 406,
            "end": 412
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 413,
            "end": 422
          },
          "optional": false,
          "computed": false,
          "start": 406,
          "end": 422
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 423,
              "end": 425
            },
            "operator": "+",
            "right": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 428,
                "end": 434
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "2n",
                  "bigint": "2",
                  "start": 435,
                  "end": 437
                }
              ],
              "optional": false,
              "start": 428,
              "end": 438
            },
            "start": 423,
            "end": 438
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 440,
            "end": 442
          },
          {
            "type": "Literal",
            "value": "The result of (1n + Object(2n)) is 3n",
            "raw": "'The result of (1n + Object(2n)) is 3n'",
            "start": 444,
            "end": 483
          }
        ],
        "optional": false,
        "start": 406,
        "end": 484
      },
      "start": 406,
      "end": 485
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 487,
            "end": 493
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 494,
            "end": 503
          },
          "optional": false,
          "computed": false,
          "start": 487,
          "end": 503
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 509,
                      "end": 515
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toPrimitive",
                      "start": 516,
                      "end": 527
                    },
                    "optional": false,
                    "computed": false,
                    "start": 509,
                    "end": 527
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 554,
                            "end": 556
                          },
                          "start": 547,
                          "end": 557
                        }
                      ],
                      "start": 541,
                      "end": 561
                    },
                    "expression": false,
                    "start": 530,
                    "end": 561
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "start": 508,
                  "end": 561
                }
              ],
              "start": 504,
              "end": 563
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 566,
              "end": 568
            },
            "start": 504,
            "end": 568
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 570,
            "end": 572
          },
          {
            "type": "Literal",
            "value": "The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) + 1n) is 3n",
            "raw": "'The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) + 1n) is 3n'",
            "start": 574,
            "end": 652
          }
        ],
        "optional": false,
        "start": 487,
        "end": 653
      },
      "start": 487,
      "end": 654
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 656,
            "end": 662
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 663,
            "end": 672
          },
          "optional": false,
          "computed": false,
          "start": 656,
          "end": 672
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 673,
              "end": 675
            },
            "operator": "+",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "start": 683,
                      "end": 689
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toPrimitive",
                      "start": 690,
                      "end": 701
                    },
                    "optional": false,
                    "computed": false,
                    "start": 683,
                    "end": 701
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 728,
                            "end": 730
                          },
                          "start": 721,
                          "end": 731
                        }
                      ],
                      "start": 715,
                      "end": 735
                    },
                    "expression": false,
                    "start": 704,
                    "end": 735
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "start": 682,
                  "end": 735
                }
              ],
              "start": 678,
              "end": 737
            },
            "start": 673,
            "end": 737
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 739,
            "end": 741
          },
          {
            "type": "Literal",
            "value": "The result of (1n + {[Symbol.toPrimitive]: function() {return 2n;}}) is 3n",
            "raw": "'The result of (1n + {[Symbol.toPrimitive]: function() {return 2n;}}) is 3n'",
            "start": 743,
            "end": 819
          }
        ],
        "optional": false,
        "start": 656,
        "end": 820
      },
      "start": 656,
      "end": 821
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 823,
            "end": 829
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 830,
            "end": 839
          },
          "optional": false,
          "computed": false,
          "start": 823,
          "end": 839
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "valueOf",
                    "start": 844,
                    "end": 851
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 877,
                            "end": 879
                          },
                          "start": 870,
                          "end": 880
                        }
                      ],
                      "start": 864,
                      "end": 884
                    },
                    "expression": false,
                    "start": 853,
                    "end": 884
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 844,
                  "end": 884
                }
              ],
              "start": 840,
              "end": 886
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 889,
              "end": 891
            },
            "start": 840,
            "end": 891
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 893,
            "end": 895
          },
          {
            "type": "Literal",
            "value": "The result of (({valueOf: function() {return 2n;}}) + 1n) is 3n",
            "raw": "'The result of (({valueOf: function() {return 2n;}}) + 1n) is 3n'",
            "start": 897,
            "end": 962
          }
        ],
        "optional": false,
        "start": 823,
        "end": 963
      },
      "start": 823,
      "end": 964
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 966,
            "end": 972
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 973,
            "end": 982
          },
          "optional": false,
          "computed": false,
          "start": 966,
          "end": 982
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 983,
              "end": 985
            },
            "operator": "+",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "valueOf",
                    "start": 992,
                    "end": 999
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1025,
                            "end": 1027
                          },
                          "start": 1018,
                          "end": 1028
                        }
                      ],
                      "start": 1012,
                      "end": 1032
                    },
                    "expression": false,
                    "start": 1001,
                    "end": 1032
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 992,
                  "end": 1032
                }
              ],
              "start": 988,
              "end": 1034
            },
            "start": 983,
            "end": 1034
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 1036,
            "end": 1038
          },
          {
            "type": "Literal",
            "value": "The result of (1n + {valueOf: function() {return 2n;}}) is 3n",
            "raw": "'The result of (1n + {valueOf: function() {return 2n;}}) is 3n'",
            "start": 1040,
            "end": 1103
          }
        ],
        "optional": false,
        "start": 966,
        "end": 1104
      },
      "start": 966,
      "end": 1105
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1107,
            "end": 1113
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1114,
            "end": 1123
          },
          "optional": false,
          "computed": false,
          "start": 1107,
          "end": 1123
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "toString",
                    "start": 1128,
                    "end": 1136
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1162,
                            "end": 1164
                          },
                          "start": 1155,
                          "end": 1165
                        }
                      ],
                      "start": 1149,
                      "end": 1169
                    },
                    "expression": false,
                    "start": 1138,
                    "end": 1169
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 1128,
                  "end": 1169
                }
              ],
              "start": 1124,
              "end": 1171
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 1174,
              "end": 1176
            },
            "start": 1124,
            "end": 1176
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 1178,
            "end": 1180
          },
          {
            "type": "Literal",
            "value": "The result of (({toString: function() {return 2n;}}) + 1n) is 3n",
            "raw": "'The result of (({toString: function() {return 2n;}}) + 1n) is 3n'",
            "start": 1182,
            "end": 1248
          }
        ],
        "optional": false,
        "start": 1107,
        "end": 1249
      },
      "start": 1107,
      "end": 1250
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1252,
            "end": 1258
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1259,
            "end": 1268
          },
          "optional": false,
          "computed": false,
          "start": 1252,
          "end": 1268
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 1269,
              "end": 1271
            },
            "operator": "+",
            "right": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "kind": "init",
                  "key": {
                    "type": "Identifier",
                    "name": "toString",
                    "start": 1278,
                    "end": 1286
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": null,
                            "raw": "2n",
                            "bigint": "2",
                            "start": 1312,
                            "end": 1314
                          },
                          "start": 1305,
                          "end": 1315
                        }
                      ],
                      "start": 1299,
                      "end": 1319
                    },
                    "expression": false,
                    "start": 1288,
                    "end": 1319
                  },
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "start": 1278,
                  "end": 1319
                }
              ],
              "start": 1274,
              "end": 1321
            },
            "start": 1269,
            "end": 1321
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "3n",
            "bigint": "3",
            "start": 1323,
            "end": 1325
          },
          {
            "type": "Literal",
            "value": "The result of (1n + {toString: function() {return 2n;}}) is 3n",
            "raw": "'The result of (1n + {toString: function() {return 2n;}}) is 3n'",
            "start": 1327,
            "end": 1391
          }
        ],
        "optional": false,
        "start": 1252,
        "end": 1392
      },
      "start": 1252,
      "end": 1393
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1394
}