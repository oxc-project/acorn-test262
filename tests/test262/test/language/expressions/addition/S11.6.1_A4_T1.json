{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 350,
            "end": 355
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 356,
                  "end": 362
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 363,
                  "end": 366
                },
                "optional": false,
                "computed": false,
                "start": 356,
                "end": 366
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 369,
                "end": 370
              },
              "start": 356,
              "end": 370
            }
          ],
          "optional": false,
          "start": 350,
          "end": 371
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 376,
          "end": 380
        },
        "start": 350,
        "end": 380
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 397,
                "end": 409
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: NaN + 1 === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN + 1 === Not-a-Number. Actual: '",
                    "start": 410,
                    "end": 450
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 454,
                        "end": 457
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 460,
                        "end": 461
                      },
                      "start": 454,
                      "end": 461
                    },
                    "start": 453,
                    "end": 462
                  },
                  "start": 410,
                  "end": 462
                }
              ],
              "start": 393,
              "end": 463
            },
            "start": 387,
            "end": 464
          }
        ],
        "start": 383,
        "end": 466
      },
      "alternate": null,
      "start": 346,
      "end": 466
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 482,
            "end": 487
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 488,
                "end": 489
              },
              "operator": "+",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 492,
                  "end": 498
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 499,
                  "end": 502
                },
                "optional": false,
                "computed": false,
                "start": 492,
                "end": 502
              },
              "start": 488,
              "end": 502
            }
          ],
          "optional": false,
          "start": 482,
          "end": 503
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 508,
          "end": 512
        },
        "start": 482,
        "end": 512
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 529,
                "end": 541
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: 1 + NaN === Not-a-Number. Actual: ",
                    "raw": "'#2: 1 + NaN === Not-a-Number. Actual: '",
                    "start": 542,
                    "end": 582
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 586,
                        "end": 587
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 590,
                        "end": 593
                      },
                      "start": 586,
                      "end": 593
                    },
                    "start": 585,
                    "end": 594
                  },
                  "start": 542,
                  "end": 594
                }
              ],
              "start": 525,
              "end": 595
            },
            "start": 519,
            "end": 596
          }
        ],
        "start": 515,
        "end": 598
      },
      "alternate": null,
      "start": 478,
      "end": 598
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 614,
            "end": 619
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 620,
                  "end": 626
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 627,
                  "end": 630
                },
                "optional": false,
                "computed": false,
                "start": 620,
                "end": 630
              },
              "operator": "+",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 633,
                  "end": 639
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 640,
                  "end": 657
                },
                "optional": false,
                "computed": false,
                "start": 633,
                "end": 657
              },
              "start": 620,
              "end": 657
            }
          ],
          "optional": false,
          "start": 614,
          "end": 658
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 663,
          "end": 667
        },
        "start": 614,
        "end": 667
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 684,
                "end": 696
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: NaN + Infinity === Not-a-Number. Actual: ",
                    "raw": "'#3: NaN + Infinity === Not-a-Number. Actual: '",
                    "start": 697,
                    "end": 744
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 748,
                        "end": 751
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 754,
                        "end": 762
                      },
                      "start": 748,
                      "end": 762
                    },
                    "start": 747,
                    "end": 763
                  },
                  "start": 697,
                  "end": 763
                }
              ],
              "start": 680,
              "end": 764
            },
            "start": 674,
            "end": 765
          }
        ],
        "start": 670,
        "end": 767
      },
      "alternate": null,
      "start": 610,
      "end": 767
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 783,
            "end": 788
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 789,
                  "end": 795
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 796,
                  "end": 813
                },
                "optional": false,
                "computed": false,
                "start": 789,
                "end": 813
              },
              "operator": "+",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 816,
                  "end": 822
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 823,
                  "end": 826
                },
                "optional": false,
                "computed": false,
                "start": 816,
                "end": 826
              },
              "start": 789,
              "end": 826
            }
          ],
          "optional": false,
          "start": 783,
          "end": 827
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 832,
          "end": 836
        },
        "start": 783,
        "end": 836
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 853,
                "end": 865
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: Infinity + NaN === Not-a-Number. Actual: ",
                    "raw": "'#4: Infinity + NaN === Not-a-Number. Actual: '",
                    "start": 866,
                    "end": 913
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 917,
                        "end": 925
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 928,
                        "end": 931
                      },
                      "start": 917,
                      "end": 931
                    },
                    "start": 916,
                    "end": 932
                  },
                  "start": 866,
                  "end": 932
                }
              ],
              "start": 849,
              "end": 933
            },
            "start": 843,
            "end": 934
          }
        ],
        "start": 839,
        "end": 936
      },
      "alternate": null,
      "start": 779,
      "end": 936
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 952,
            "end": 957
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 958,
                  "end": 964
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 965,
                  "end": 968
                },
                "optional": false,
                "computed": false,
                "start": 958,
                "end": 968
              },
              "operator": "+",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 971,
                  "end": 977
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 978,
                  "end": 995
                },
                "optional": false,
                "computed": false,
                "start": 971,
                "end": 995
              },
              "start": 958,
              "end": 995
            }
          ],
          "optional": false,
          "start": 952,
          "end": 996
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1001,
          "end": 1005
        },
        "start": 952,
        "end": 1005
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1022,
                "end": 1034
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: NaN + Infinity === Not-a-Number. Actual: ",
                    "raw": "'#5: NaN + Infinity === Not-a-Number. Actual: '",
                    "start": 1035,
                    "end": 1082
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1086,
                        "end": 1089
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 1092,
                        "end": 1100
                      },
                      "start": 1086,
                      "end": 1100
                    },
                    "start": 1085,
                    "end": 1101
                  },
                  "start": 1035,
                  "end": 1101
                }
              ],
              "start": 1018,
              "end": 1102
            },
            "start": 1012,
            "end": 1103
          }
        ],
        "start": 1008,
        "end": 1105
      },
      "alternate": null,
      "start": 948,
      "end": 1105
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1121,
            "end": 1126
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1127,
                  "end": 1133
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 1134,
                  "end": 1151
                },
                "optional": false,
                "computed": false,
                "start": 1127,
                "end": 1151
              },
              "operator": "+",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1154,
                  "end": 1160
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1161,
                  "end": 1164
                },
                "optional": false,
                "computed": false,
                "start": 1154,
                "end": 1164
              },
              "start": 1127,
              "end": 1164
            }
          ],
          "optional": false,
          "start": 1121,
          "end": 1165
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1170,
          "end": 1174
        },
        "start": 1121,
        "end": 1174
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1191,
                "end": 1203
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: Infinity + NaN === Not-a-Number. Actual: ",
                    "raw": "'#6: Infinity + NaN === Not-a-Number. Actual: '",
                    "start": 1204,
                    "end": 1251
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 1255,
                        "end": 1263
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1266,
                        "end": 1269
                      },
                      "start": 1255,
                      "end": 1269
                    },
                    "start": 1254,
                    "end": 1270
                  },
                  "start": 1204,
                  "end": 1270
                }
              ],
              "start": 1187,
              "end": 1271
            },
            "start": 1181,
            "end": 1272
          }
        ],
        "start": 1177,
        "end": 1274
      },
      "alternate": null,
      "start": 1117,
      "end": 1274
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1275
}