{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 365,
            "end": 370
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 371,
                  "end": 377
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 378,
                  "end": 381
                },
                "optional": false,
                "computed": false,
                "start": 371,
                "end": 381
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 384,
                  "end": 390
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 391,
                  "end": 394
                },
                "optional": false,
                "computed": false,
                "start": 384,
                "end": 394
              },
              "start": 371,
              "end": 394
            }
          ],
          "optional": false,
          "start": 365,
          "end": 395
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 400,
          "end": 404
        },
        "start": 365,
        "end": 404
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 420,
                "end": 432
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: NaN * NaN === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN * NaN === Not-a-Number. Actual: '",
                    "start": 433,
                    "end": 475
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 479,
                        "end": 482
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 485,
                        "end": 488
                      },
                      "start": 479,
                      "end": 488
                    },
                    "start": 478,
                    "end": 489
                  },
                  "start": 433,
                  "end": 489
                }
              ],
              "start": 416,
              "end": 490
            },
            "start": 410,
            "end": 491
          }
        ],
        "start": 406,
        "end": 493
      },
      "alternate": null,
      "start": 361,
      "end": 493
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 511,
            "end": 516
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 517,
                  "end": 523
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 524,
                  "end": 527
                },
                "optional": false,
                "computed": false,
                "start": 517,
                "end": 527
              },
              "operator": "*",
              "right": {
                "type": "UnaryExpression",
                "operator": "+",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 531,
                  "end": 532
                },
                "prefix": true,
                "start": 530,
                "end": 532
              },
              "start": 517,
              "end": 532
            }
          ],
          "optional": false,
          "start": 511,
          "end": 533
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 538,
          "end": 542
        },
        "start": 511,
        "end": 542
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 558,
                "end": 570
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: NaN * +0 === Not-a-Number. Actual: ",
                    "raw": "'#2: NaN * +0 === Not-a-Number. Actual: '",
                    "start": 571,
                    "end": 612
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 616,
                        "end": 619
                      },
                      "operator": "*",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "+",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 623,
                          "end": 624
                        },
                        "prefix": true,
                        "start": 622,
                        "end": 624
                      },
                      "start": 616,
                      "end": 624
                    },
                    "start": 615,
                    "end": 625
                  },
                  "start": 571,
                  "end": 625
                }
              ],
              "start": 554,
              "end": 626
            },
            "start": 548,
            "end": 627
          }
        ],
        "start": 544,
        "end": 630
      },
      "alternate": null,
      "start": 507,
      "end": 630
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 647,
            "end": 652
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 653,
                  "end": 659
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 660,
                  "end": 663
                },
                "optional": false,
                "computed": false,
                "start": 653,
                "end": 663
              },
              "operator": "*",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 667,
                  "end": 668
                },
                "prefix": true,
                "start": 666,
                "end": 668
              },
              "start": 653,
              "end": 668
            }
          ],
          "optional": false,
          "start": 647,
          "end": 669
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 674,
          "end": 678
        },
        "start": 647,
        "end": 678
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 694,
                "end": 706
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: NaN * -0 === Not-a-Number. Actual: ",
                    "raw": "'#3: NaN * -0 === Not-a-Number. Actual: '",
                    "start": 707,
                    "end": 748
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 752,
                        "end": 755
                      },
                      "operator": "*",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 759,
                          "end": 760
                        },
                        "prefix": true,
                        "start": 758,
                        "end": 760
                      },
                      "start": 752,
                      "end": 760
                    },
                    "start": 751,
                    "end": 761
                  },
                  "start": 707,
                  "end": 761
                }
              ],
              "start": 690,
              "end": 762
            },
            "start": 684,
            "end": 763
          }
        ],
        "start": 680,
        "end": 766
      },
      "alternate": null,
      "start": 643,
      "end": 766
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 783,
            "end": 788
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 789,
                  "end": 795
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 796,
                  "end": 799
                },
                "optional": false,
                "computed": false,
                "start": 789,
                "end": 799
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 802,
                  "end": 808
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 809,
                  "end": 826
                },
                "optional": false,
                "computed": false,
                "start": 802,
                "end": 826
              },
              "start": 789,
              "end": 826
            }
          ],
          "optional": false,
          "start": 783,
          "end": 827
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 832,
          "end": 836
        },
        "start": 783,
        "end": 836
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 852,
                "end": 864
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: NaN * Infinity === Not-a-Number. Actual: ",
                    "raw": "'#4: NaN * Infinity === Not-a-Number. Actual: '",
                    "start": 865,
                    "end": 912
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 916,
                        "end": 919
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 922,
                        "end": 930
                      },
                      "start": 916,
                      "end": 930
                    },
                    "start": 915,
                    "end": 931
                  },
                  "start": 865,
                  "end": 931
                }
              ],
              "start": 848,
              "end": 932
            },
            "start": 842,
            "end": 933
          }
        ],
        "start": 838,
        "end": 935
      },
      "alternate": null,
      "start": 779,
      "end": 935
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 952,
            "end": 957
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 958,
                  "end": 964
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 965,
                  "end": 968
                },
                "optional": false,
                "computed": false,
                "start": 958,
                "end": 968
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 971,
                  "end": 977
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 978,
                  "end": 995
                },
                "optional": false,
                "computed": false,
                "start": 971,
                "end": 995
              },
              "start": 958,
              "end": 995
            }
          ],
          "optional": false,
          "start": 952,
          "end": 996
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1001,
          "end": 1005
        },
        "start": 952,
        "end": 1005
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1021,
                "end": 1033
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: NaN * -Infinity === Not-a-Number. Actual: ",
                    "raw": "'#5: NaN * -Infinity === Not-a-Number. Actual: '",
                    "start": 1034,
                    "end": 1082
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1086,
                        "end": 1089
                      },
                      "operator": "*",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Identifier",
                          "name": "Infinity",
                          "start": 1093,
                          "end": 1101
                        },
                        "prefix": true,
                        "start": 1092,
                        "end": 1101
                      },
                      "start": 1086,
                      "end": 1101
                    },
                    "start": 1085,
                    "end": 1102
                  },
                  "start": 1034,
                  "end": 1102
                }
              ],
              "start": 1017,
              "end": 1103
            },
            "start": 1011,
            "end": 1104
          }
        ],
        "start": 1007,
        "end": 1107
      },
      "alternate": null,
      "start": 948,
      "end": 1107
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1124,
            "end": 1129
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1130,
                  "end": 1136
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1137,
                  "end": 1140
                },
                "optional": false,
                "computed": false,
                "start": 1130,
                "end": 1140
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1143,
                  "end": 1149
                },
                "property": {
                  "type": "Identifier",
                  "name": "MAX_VALUE",
                  "start": 1150,
                  "end": 1159
                },
                "optional": false,
                "computed": false,
                "start": 1143,
                "end": 1159
              },
              "start": 1130,
              "end": 1159
            }
          ],
          "optional": false,
          "start": 1124,
          "end": 1160
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1165,
          "end": 1169
        },
        "start": 1124,
        "end": 1169
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1185,
                "end": 1197
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: NaN * Number.MAX_VALUE === Not-a-Number. Actual: ",
                    "raw": "'#6: NaN * Number.MAX_VALUE === Not-a-Number. Actual: '",
                    "start": 1198,
                    "end": 1253
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1257,
                        "end": 1260
                      },
                      "operator": "*",
                      "right": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1263,
                          "end": 1269
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MAX_VALUE",
                          "start": 1270,
                          "end": 1279
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1263,
                        "end": 1279
                      },
                      "start": 1257,
                      "end": 1279
                    },
                    "start": 1256,
                    "end": 1280
                  },
                  "start": 1198,
                  "end": 1280
                }
              ],
              "start": 1181,
              "end": 1281
            },
            "start": 1175,
            "end": 1282
          }
        ],
        "start": 1171,
        "end": 1284
      },
      "alternate": null,
      "start": 1120,
      "end": 1284
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1301,
            "end": 1306
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1307,
                  "end": 1313
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1314,
                  "end": 1317
                },
                "optional": false,
                "computed": false,
                "start": 1307,
                "end": 1317
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1320,
                  "end": 1326
                },
                "property": {
                  "type": "Identifier",
                  "name": "MIN_VALUE",
                  "start": 1327,
                  "end": 1336
                },
                "optional": false,
                "computed": false,
                "start": 1320,
                "end": 1336
              },
              "start": 1307,
              "end": 1336
            }
          ],
          "optional": false,
          "start": 1301,
          "end": 1337
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1342,
          "end": 1346
        },
        "start": 1301,
        "end": 1346
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1362,
                "end": 1374
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: NaN * Number.MIN_VALUE === Not-a-Number. Actual: ",
                    "raw": "'#7: NaN * Number.MIN_VALUE === Not-a-Number. Actual: '",
                    "start": 1375,
                    "end": 1430
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1434,
                        "end": 1437
                      },
                      "operator": "*",
                      "right": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1440,
                          "end": 1446
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MIN_VALUE",
                          "start": 1447,
                          "end": 1456
                        },
                        "optional": false,
                        "computed": false,
                        "start": 1440,
                        "end": 1456
                      },
                      "start": 1434,
                      "end": 1456
                    },
                    "start": 1433,
                    "end": 1457
                  },
                  "start": 1375,
                  "end": 1457
                }
              ],
              "start": 1358,
              "end": 1458
            },
            "start": 1352,
            "end": 1459
          }
        ],
        "start": 1348,
        "end": 1462
      },
      "alternate": null,
      "start": 1297,
      "end": 1462
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1478,
            "end": 1483
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1484,
                  "end": 1490
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1491,
                  "end": 1494
                },
                "optional": false,
                "computed": false,
                "start": 1484,
                "end": 1494
              },
              "operator": "*",
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1497,
                "end": 1498
              },
              "start": 1484,
              "end": 1498
            }
          ],
          "optional": false,
          "start": 1478,
          "end": 1499
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1504,
          "end": 1508
        },
        "start": 1478,
        "end": 1508
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1524,
                "end": 1536
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: NaN * 1 === Not-a-Number. Actual: ",
                    "raw": "'#8: NaN * 1 === Not-a-Number. Actual: '",
                    "start": 1537,
                    "end": 1577
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 1581,
                        "end": 1584
                      },
                      "operator": "*",
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1587,
                        "end": 1588
                      },
                      "start": 1581,
                      "end": 1588
                    },
                    "start": 1580,
                    "end": 1589
                  },
                  "start": 1537,
                  "end": 1589
                }
              ],
              "start": 1520,
              "end": 1590
            },
            "start": 1514,
            "end": 1591
          }
        ],
        "start": 1510,
        "end": 1595
      },
      "alternate": null,
      "start": 1474,
      "end": 1595
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1596
}