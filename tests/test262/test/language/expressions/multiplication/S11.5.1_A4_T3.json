{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 376,
            "end": 381
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 382,
                  "end": 388
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 389,
                  "end": 406
                },
                "optional": false,
                "computed": false,
                "start": 382,
                "end": 406
              },
              "operator": "*",
              "right": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 409,
                "end": 410
              },
              "start": 382,
              "end": 410
            }
          ],
          "optional": false,
          "start": 376,
          "end": 411
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 416,
          "end": 420
        },
        "start": 376,
        "end": 420
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 436,
                "end": 448
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: Infinity * 0 === Not-a-Number. Actual: ",
                    "raw": "'#1: Infinity * 0 === Not-a-Number. Actual: '",
                    "start": 449,
                    "end": 494
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 498,
                        "end": 506
                      },
                      "operator": "*",
                      "right": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 509,
                        "end": 510
                      },
                      "start": 498,
                      "end": 510
                    },
                    "start": 497,
                    "end": 511
                  },
                  "start": 449,
                  "end": 511
                }
              ],
              "start": 432,
              "end": 512
            },
            "start": 426,
            "end": 513
          }
        ],
        "start": 422,
        "end": 515
      },
      "alternate": null,
      "start": 372,
      "end": 515
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 531,
            "end": 536
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 538,
                  "end": 539
                },
                "prefix": true,
                "start": 537,
                "end": 539
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 542,
                  "end": 548
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 549,
                  "end": 566
                },
                "optional": false,
                "computed": false,
                "start": 542,
                "end": 566
              },
              "start": 537,
              "end": 566
            }
          ],
          "optional": false,
          "start": 531,
          "end": 567
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 572,
          "end": 576
        },
        "start": 531,
        "end": 576
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 592,
                "end": 604
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: -0 * -Infinity === Not-a-Number. Actual: ",
                    "raw": "'#2: -0 * -Infinity === Not-a-Number. Actual: '",
                    "start": 605,
                    "end": 652
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 657,
                          "end": 658
                        },
                        "prefix": true,
                        "start": 656,
                        "end": 658
                      },
                      "operator": "*",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Identifier",
                          "name": "Infinity",
                          "start": 662,
                          "end": 670
                        },
                        "prefix": true,
                        "start": 661,
                        "end": 670
                      },
                      "start": 656,
                      "end": 670
                    },
                    "start": 655,
                    "end": 671
                  },
                  "start": 605,
                  "end": 671
                }
              ],
              "start": 588,
              "end": 672
            },
            "start": 582,
            "end": 673
          }
        ],
        "start": 578,
        "end": 675
      },
      "alternate": null,
      "start": 527,
      "end": 675
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 691,
            "end": 696
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 697,
                  "end": 703
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 704,
                  "end": 721
                },
                "optional": false,
                "computed": false,
                "start": 697,
                "end": 721
              },
              "operator": "*",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 725,
                  "end": 726
                },
                "prefix": true,
                "start": 724,
                "end": 726
              },
              "start": 697,
              "end": 726
            }
          ],
          "optional": false,
          "start": 691,
          "end": 727
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 732,
          "end": 736
        },
        "start": 691,
        "end": 736
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 752,
                "end": 764
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: Infinity * -0 === Not-a-Number. Actual: ",
                    "raw": "'#3: Infinity * -0 === Not-a-Number. Actual: '",
                    "start": 765,
                    "end": 811
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 815,
                        "end": 823
                      },
                      "operator": "*",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 827,
                          "end": 828
                        },
                        "prefix": true,
                        "start": 826,
                        "end": 828
                      },
                      "start": 815,
                      "end": 828
                    },
                    "start": 814,
                    "end": 829
                  },
                  "start": 765,
                  "end": 829
                }
              ],
              "start": 748,
              "end": 830
            },
            "start": 742,
            "end": 831
          }
        ],
        "start": 738,
        "end": 833
      },
      "alternate": null,
      "start": 687,
      "end": 833
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 849,
            "end": 854
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 855,
                "end": 856
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 859,
                  "end": 865
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 866,
                  "end": 883
                },
                "optional": false,
                "computed": false,
                "start": 859,
                "end": 883
              },
              "start": 855,
              "end": 883
            }
          ],
          "optional": false,
          "start": 849,
          "end": 884
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 889,
          "end": 893
        },
        "start": 849,
        "end": 893
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 909,
                "end": 921
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: 0 * Infinity === Not-a-Number. Actual: ",
                    "raw": "'#4: 0 * Infinity === Not-a-Number. Actual: '",
                    "start": 922,
                    "end": 967
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 971,
                        "end": 972
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 975,
                        "end": 983
                      },
                      "start": 971,
                      "end": 983
                    },
                    "start": 970,
                    "end": 984
                  },
                  "start": 922,
                  "end": 984
                }
              ],
              "start": 905,
              "end": 985
            },
            "start": 899,
            "end": 986
          }
        ],
        "start": 895,
        "end": 988
      },
      "alternate": null,
      "start": 845,
      "end": 988
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1004,
            "end": 1009
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1010,
                  "end": 1016
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 1017,
                  "end": 1034
                },
                "optional": false,
                "computed": false,
                "start": 1010,
                "end": 1034
              },
              "operator": "*",
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 1038,
                  "end": 1039
                },
                "prefix": true,
                "start": 1037,
                "end": 1039
              },
              "start": 1010,
              "end": 1039
            }
          ],
          "optional": false,
          "start": 1004,
          "end": 1040
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1045,
          "end": 1049
        },
        "start": 1004,
        "end": 1049
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1065,
                "end": 1077
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: Infinity * -0 === Not-a-Number. Actual: ",
                    "raw": "'#5: Infinity * -0 === Not-a-Number. Actual: '",
                    "start": 1078,
                    "end": 1124
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 1128,
                        "end": 1136
                      },
                      "operator": "*",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 1140,
                          "end": 1141
                        },
                        "prefix": true,
                        "start": 1139,
                        "end": 1141
                      },
                      "start": 1128,
                      "end": 1141
                    },
                    "start": 1127,
                    "end": 1142
                  },
                  "start": 1078,
                  "end": 1142
                }
              ],
              "start": 1061,
              "end": 1143
            },
            "start": 1055,
            "end": 1144
          }
        ],
        "start": 1051,
        "end": 1146
      },
      "alternate": null,
      "start": 1000,
      "end": 1146
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1162,
            "end": 1167
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1168,
                "end": 1169
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1172,
                  "end": 1178
                },
                "property": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY",
                  "start": 1179,
                  "end": 1196
                },
                "optional": false,
                "computed": false,
                "start": 1172,
                "end": 1196
              },
              "start": 1168,
              "end": 1196
            }
          ],
          "optional": false,
          "start": 1162,
          "end": 1197
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1202,
          "end": 1206
        },
        "start": 1162,
        "end": 1206
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1222,
                "end": 1234
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: 0 * -Infinity === Not-a-Number. Actual: ",
                    "raw": "'#6: 0 * -Infinity === Not-a-Number. Actual: '",
                    "start": 1235,
                    "end": 1281
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1285,
                        "end": 1286
                      },
                      "operator": "*",
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Identifier",
                          "name": "Infinity",
                          "start": 1290,
                          "end": 1298
                        },
                        "prefix": true,
                        "start": 1289,
                        "end": 1298
                      },
                      "start": 1285,
                      "end": 1298
                    },
                    "start": 1284,
                    "end": 1299
                  },
                  "start": 1235,
                  "end": 1299
                }
              ],
              "start": 1218,
              "end": 1300
            },
            "start": 1212,
            "end": 1301
          }
        ],
        "start": 1208,
        "end": 1303
      },
      "alternate": null,
      "start": 1158,
      "end": 1303
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1319,
            "end": 1324
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1325,
                  "end": 1331
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 1332,
                  "end": 1349
                },
                "optional": false,
                "computed": false,
                "start": 1325,
                "end": 1349
              },
              "operator": "*",
              "right": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1352,
                "end": 1353
              },
              "start": 1325,
              "end": 1353
            }
          ],
          "optional": false,
          "start": 1319,
          "end": 1354
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1359,
          "end": 1363
        },
        "start": 1319,
        "end": 1363
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1379,
                "end": 1391
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: Infinity * 0 === Not-a-Number. Actual: ",
                    "raw": "'#7: Infinity * 0 === Not-a-Number. Actual: '",
                    "start": 1392,
                    "end": 1437
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 1441,
                        "end": 1449
                      },
                      "operator": "*",
                      "right": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0",
                        "start": 1452,
                        "end": 1453
                      },
                      "start": 1441,
                      "end": 1453
                    },
                    "start": 1440,
                    "end": 1454
                  },
                  "start": 1392,
                  "end": 1454
                }
              ],
              "start": 1375,
              "end": 1455
            },
            "start": 1369,
            "end": 1456
          }
        ],
        "start": 1365,
        "end": 1458
      },
      "alternate": null,
      "start": 1315,
      "end": 1458
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1474,
            "end": 1479
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 1481,
                  "end": 1482
                },
                "prefix": true,
                "start": 1480,
                "end": 1482
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 1485,
                  "end": 1491
                },
                "property": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY",
                  "start": 1492,
                  "end": 1509
                },
                "optional": false,
                "computed": false,
                "start": 1485,
                "end": 1509
              },
              "start": 1480,
              "end": 1509
            }
          ],
          "optional": false,
          "start": 1474,
          "end": 1510
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1515,
          "end": 1519
        },
        "start": 1474,
        "end": 1519
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1535,
                "end": 1547
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: -0 * Infinity === Not-a-Number. Actual: ",
                    "raw": "'#8: -0 * Infinity === Not-a-Number. Actual: '",
                    "start": 1548,
                    "end": 1594
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 1599,
                          "end": 1600
                        },
                        "prefix": true,
                        "start": 1598,
                        "end": 1600
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "name": "Infinity",
                        "start": 1603,
                        "end": 1611
                      },
                      "start": 1598,
                      "end": 1611
                    },
                    "start": 1597,
                    "end": 1612
                  },
                  "start": 1548,
                  "end": 1612
                }
              ],
              "start": 1531,
              "end": 1613
            },
            "start": 1525,
            "end": 1614
          }
        ],
        "start": 1521,
        "end": 1616
      },
      "alternate": null,
      "start": 1470,
      "end": 1616
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1617
}