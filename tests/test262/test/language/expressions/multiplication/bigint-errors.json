{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 342,
            "end": 348
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 349,
            "end": 355
          },
          "optional": false,
          "computed": false,
          "start": 342,
          "end": 355
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 356,
            "end": 365
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Symbol",
                        "start": 382,
                        "end": 388
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1",
                          "raw": "'1'",
                          "start": 389,
                          "end": 392
                        }
                      ],
                      "optional": false,
                      "start": 382,
                      "end": 393
                    },
                    "operator": "*",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 396,
                      "end": 398
                    },
                    "start": 382,
                    "end": 398
                  },
                  "start": 382,
                  "end": 399
                }
              ],
              "start": 378,
              "end": 401
            },
            "expression": false,
            "start": 367,
            "end": 401
          },
          {
            "type": "Literal",
            "value": "Symbol(\"1\") * 0n throws TypeError",
            "raw": "'Symbol(\"1\") * 0n throws TypeError'",
            "start": 403,
            "end": 438
          }
        ],
        "optional": false,
        "start": 342,
        "end": 439
      },
      "start": 342,
      "end": 440
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 442,
            "end": 448
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 449,
            "end": 455
          },
          "optional": false,
          "computed": false,
          "start": 442,
          "end": 455
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 456,
            "end": 465
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 482,
                      "end": 484
                    },
                    "operator": "*",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Symbol",
                        "start": 487,
                        "end": 493
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "1",
                          "raw": "'1'",
                          "start": 494,
                          "end": 497
                        }
                      ],
                      "optional": false,
                      "start": 487,
                      "end": 498
                    },
                    "start": 482,
                    "end": 498
                  },
                  "start": 482,
                  "end": 499
                }
              ],
              "start": 478,
              "end": 501
            },
            "expression": false,
            "start": 467,
            "end": 501
          },
          {
            "type": "Literal",
            "value": "0n * Symbol(\"1\") throws TypeError",
            "raw": "'0n * Symbol(\"1\") throws TypeError'",
            "start": 503,
            "end": 538
          }
        ],
        "optional": false,
        "start": 442,
        "end": 539
      },
      "start": 442,
      "end": 540
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 542,
            "end": 548
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 549,
            "end": 555
          },
          "optional": false,
          "computed": false,
          "start": 542,
          "end": 555
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 556,
            "end": 565
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 582,
                        "end": 588
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 589,
                            "end": 595
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "'1'",
                              "start": 596,
                              "end": 599
                            }
                          ],
                          "optional": false,
                          "start": 589,
                          "end": 600
                        }
                      ],
                      "optional": false,
                      "start": 582,
                      "end": 601
                    },
                    "operator": "*",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 604,
                      "end": 606
                    },
                    "start": 582,
                    "end": 606
                  },
                  "start": 582,
                  "end": 607
                }
              ],
              "start": 578,
              "end": 609
            },
            "expression": false,
            "start": 567,
            "end": 609
          },
          {
            "type": "Literal",
            "value": "Object(Symbol(\"1\")) * 0n throws TypeError",
            "raw": "'Object(Symbol(\"1\")) * 0n throws TypeError'",
            "start": 611,
            "end": 654
          }
        ],
        "optional": false,
        "start": 542,
        "end": 655
      },
      "start": 542,
      "end": 656
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 658,
            "end": 664
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 665,
            "end": 671
          },
          "optional": false,
          "computed": false,
          "start": 658,
          "end": 671
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 672,
            "end": 681
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 698,
                      "end": 700
                    },
                    "operator": "*",
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Object",
                        "start": 703,
                        "end": 709
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Symbol",
                            "start": 710,
                            "end": 716
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "'1'",
                              "start": 717,
                              "end": 720
                            }
                          ],
                          "optional": false,
                          "start": 710,
                          "end": 721
                        }
                      ],
                      "optional": false,
                      "start": 703,
                      "end": 722
                    },
                    "start": 698,
                    "end": 722
                  },
                  "start": 698,
                  "end": 723
                }
              ],
              "start": 694,
              "end": 725
            },
            "expression": false,
            "start": 683,
            "end": 725
          },
          {
            "type": "Literal",
            "value": "0n * Object(Symbol(\"1\")) throws TypeError",
            "raw": "'0n * Object(Symbol(\"1\")) throws TypeError'",
            "start": 727,
            "end": 770
          }
        ],
        "optional": false,
        "start": 658,
        "end": 771
      },
      "start": 658,
      "end": 772
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 774,
            "end": 780
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 781,
            "end": 787
          },
          "optional": false,
          "computed": false,
          "start": 774,
          "end": 787
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 788,
            "end": 797
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Symbol",
                                "start": 822,
                                "end": 828
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toPrimitive",
                                "start": 829,
                                "end": 840
                              },
                              "optional": false,
                              "computed": false,
                              "start": 822,
                              "end": 840
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 869,
                                        "end": 875
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 876,
                                          "end": 879
                                        }
                                      ],
                                      "optional": false,
                                      "start": 869,
                                      "end": 880
                                    },
                                    "start": 862,
                                    "end": 881
                                  }
                                ],
                                "start": 854,
                                "end": 887
                              },
                              "expression": false,
                              "start": 843,
                              "end": 887
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": true,
                            "start": 821,
                            "end": 887
                          }
                        ],
                        "start": 815,
                        "end": 891
                      },
                      "start": 814,
                      "end": 892
                    },
                    "operator": "*",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 895,
                      "end": 897
                    },
                    "start": 814,
                    "end": 897
                  },
                  "start": 814,
                  "end": 898
                }
              ],
              "start": 810,
              "end": 900
            },
            "expression": false,
            "start": 799,
            "end": 900
          },
          {
            "type": "Literal",
            "value": "({[Symbol.toPrimitive]: function() {return Symbol(\"1\");}}) * 0n throws TypeError",
            "raw": "'({[Symbol.toPrimitive]: function() {return Symbol(\"1\");}}) * 0n throws TypeError'",
            "start": 902,
            "end": 984
          }
        ],
        "optional": false,
        "start": 774,
        "end": 985
      },
      "start": 774,
      "end": 986
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 988,
            "end": 994
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 995,
            "end": 1001
          },
          "optional": false,
          "computed": false,
          "start": 988,
          "end": 1001
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1002,
            "end": 1011
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1028,
                      "end": 1030
                    },
                    "operator": "*",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "Symbol",
                              "start": 1040,
                              "end": 1046
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "toPrimitive",
                              "start": 1047,
                              "end": 1058
                            },
                            "optional": false,
                            "computed": false,
                            "start": 1040,
                            "end": 1058
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1087,
                                      "end": 1093
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1094,
                                        "end": 1097
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1087,
                                    "end": 1098
                                  },
                                  "start": 1080,
                                  "end": 1099
                                }
                              ],
                              "start": 1072,
                              "end": 1105
                            },
                            "expression": false,
                            "start": 1061,
                            "end": 1105
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": true,
                          "start": 1039,
                          "end": 1105
                        }
                      ],
                      "start": 1033,
                      "end": 1109
                    },
                    "start": 1028,
                    "end": 1109
                  },
                  "start": 1028,
                  "end": 1110
                }
              ],
              "start": 1024,
              "end": 1112
            },
            "expression": false,
            "start": 1013,
            "end": 1112
          },
          {
            "type": "Literal",
            "value": "0n * {[Symbol.toPrimitive]: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n * {[Symbol.toPrimitive]: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1114,
            "end": 1194
          }
        ],
        "optional": false,
        "start": 988,
        "end": 1195
      },
      "start": 988,
      "end": 1196
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1198,
            "end": 1204
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1205,
            "end": 1211
          },
          "optional": false,
          "computed": false,
          "start": 1198,
          "end": 1211
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1212,
            "end": 1221
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "valueOf",
                              "start": 1245,
                              "end": 1252
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 1280,
                                        "end": 1286
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 1287,
                                          "end": 1290
                                        }
                                      ],
                                      "optional": false,
                                      "start": 1280,
                                      "end": 1291
                                    },
                                    "start": 1273,
                                    "end": 1292
                                  }
                                ],
                                "start": 1265,
                                "end": 1298
                              },
                              "expression": false,
                              "start": 1254,
                              "end": 1298
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1245,
                            "end": 1298
                          }
                        ],
                        "start": 1239,
                        "end": 1302
                      },
                      "start": 1238,
                      "end": 1303
                    },
                    "operator": "*",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1306,
                      "end": 1308
                    },
                    "start": 1238,
                    "end": 1308
                  },
                  "start": 1238,
                  "end": 1309
                }
              ],
              "start": 1234,
              "end": 1311
            },
            "expression": false,
            "start": 1223,
            "end": 1311
          },
          {
            "type": "Literal",
            "value": "({valueOf: function() {return Symbol(\"1\");}}) * 0n throws TypeError",
            "raw": "'({valueOf: function() {return Symbol(\"1\");}}) * 0n throws TypeError'",
            "start": 1313,
            "end": 1382
          }
        ],
        "optional": false,
        "start": 1198,
        "end": 1383
      },
      "start": 1198,
      "end": 1384
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1386,
            "end": 1392
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1393,
            "end": 1399
          },
          "optional": false,
          "computed": false,
          "start": 1386,
          "end": 1399
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1400,
            "end": 1409
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1426,
                      "end": 1428
                    },
                    "operator": "*",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "valueOf",
                            "start": 1437,
                            "end": 1444
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1472,
                                      "end": 1478
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1479,
                                        "end": 1482
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1472,
                                    "end": 1483
                                  },
                                  "start": 1465,
                                  "end": 1484
                                }
                              ],
                              "start": 1457,
                              "end": 1490
                            },
                            "expression": false,
                            "start": 1446,
                            "end": 1490
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1437,
                          "end": 1490
                        }
                      ],
                      "start": 1431,
                      "end": 1494
                    },
                    "start": 1426,
                    "end": 1494
                  },
                  "start": 1426,
                  "end": 1495
                }
              ],
              "start": 1422,
              "end": 1497
            },
            "expression": false,
            "start": 1411,
            "end": 1497
          },
          {
            "type": "Literal",
            "value": "0n * {valueOf: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n * {valueOf: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1499,
            "end": 1566
          }
        ],
        "optional": false,
        "start": 1386,
        "end": 1567
      },
      "start": 1386,
      "end": 1568
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1570,
            "end": 1576
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1577,
            "end": 1583
          },
          "optional": false,
          "computed": false,
          "start": 1570,
          "end": 1583
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1584,
            "end": 1593
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "kind": "init",
                            "key": {
                              "type": "Identifier",
                              "name": "toString",
                              "start": 1617,
                              "end": 1625
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Symbol",
                                        "start": 1653,
                                        "end": 1659
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "1",
                                          "raw": "'1'",
                                          "start": 1660,
                                          "end": 1663
                                        }
                                      ],
                                      "optional": false,
                                      "start": 1653,
                                      "end": 1664
                                    },
                                    "start": 1646,
                                    "end": 1665
                                  }
                                ],
                                "start": 1638,
                                "end": 1671
                              },
                              "expression": false,
                              "start": 1627,
                              "end": 1671
                            },
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "start": 1617,
                            "end": 1671
                          }
                        ],
                        "start": 1611,
                        "end": 1675
                      },
                      "start": 1610,
                      "end": 1676
                    },
                    "operator": "*",
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1679,
                      "end": 1681
                    },
                    "start": 1610,
                    "end": 1681
                  },
                  "start": 1610,
                  "end": 1682
                }
              ],
              "start": 1606,
              "end": 1684
            },
            "expression": false,
            "start": 1595,
            "end": 1684
          },
          {
            "type": "Literal",
            "value": "({toString: function() {return Symbol(\"1\");}}) * 0n throws TypeError",
            "raw": "'({toString: function() {return Symbol(\"1\");}}) * 0n throws TypeError'",
            "start": 1686,
            "end": 1756
          }
        ],
        "optional": false,
        "start": 1570,
        "end": 1757
      },
      "start": 1570,
      "end": 1758
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1760,
            "end": 1766
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1767,
            "end": 1773
          },
          "optional": false,
          "computed": false,
          "start": 1760,
          "end": 1773
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "TypeError",
            "start": 1774,
            "end": 1783
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": null,
                      "raw": "0n",
                      "bigint": "0",
                      "start": 1800,
                      "end": 1802
                    },
                    "operator": "*",
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "toString",
                            "start": 1811,
                            "end": 1819
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Symbol",
                                      "start": 1847,
                                      "end": 1853
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "1",
                                        "raw": "'1'",
                                        "start": 1854,
                                        "end": 1857
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1847,
                                    "end": 1858
                                  },
                                  "start": 1840,
                                  "end": 1859
                                }
                              ],
                              "start": 1832,
                              "end": 1865
                            },
                            "expression": false,
                            "start": 1821,
                            "end": 1865
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 1811,
                          "end": 1865
                        }
                      ],
                      "start": 1805,
                      "end": 1869
                    },
                    "start": 1800,
                    "end": 1869
                  },
                  "start": 1800,
                  "end": 1870
                }
              ],
              "start": 1796,
              "end": 1872
            },
            "expression": false,
            "start": 1785,
            "end": 1872
          },
          {
            "type": "Literal",
            "value": "0n * {toString: function() {return Symbol(\"1\");}} throws TypeError",
            "raw": "'0n * {toString: function() {return Symbol(\"1\");}} throws TypeError'",
            "start": 1874,
            "end": 1942
          }
        ],
        "optional": false,
        "start": 1760,
        "end": 1943
      },
      "start": 1760,
      "end": 1944
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1945
}