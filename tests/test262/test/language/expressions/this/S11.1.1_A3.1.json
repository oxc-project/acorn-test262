{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "ReturnThis",
        "start": 383,
        "end": 393
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "ThisExpression",
              "start": 404,
              "end": 408
            },
            "start": 397,
            "end": 408
          }
        ],
        "start": 396,
        "end": 409
      },
      "expression": false,
      "start": 374,
      "end": 409
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "ReturnThis",
            "start": 414,
            "end": 424
          },
          "arguments": [],
          "optional": false,
          "start": 414,
          "end": 426
        },
        "operator": "!==",
        "right": {
          "type": "ThisExpression",
          "start": 431,
          "end": 435
        },
        "start": 414,
        "end": 435
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 451,
                "end": 463
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: function ReturnThis() {return this} ReturnThis() === this. Actual: ",
                    "raw": "'#1: function ReturnThis() {return this} ReturnThis() === this. Actual: '",
                    "start": 464,
                    "end": 537
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "ReturnThis",
                        "start": 541,
                        "end": 551
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 541,
                      "end": 553
                    },
                    "start": 540,
                    "end": 554
                  },
                  "start": 464,
                  "end": 554
                }
              ],
              "start": 447,
              "end": 555
            },
            "start": 441,
            "end": 556
          }
        ],
        "start": 437,
        "end": 558
      },
      "alternate": null,
      "start": 410,
      "end": 558
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "ReturnEvalThis",
        "start": 579,
        "end": 593
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "eval",
                "start": 604,
                "end": 608
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "this",
                  "raw": "\"this\"",
                  "start": 609,
                  "end": 615
                }
              ],
              "optional": false,
              "start": 604,
              "end": 616
            },
            "start": 597,
            "end": 616
          }
        ],
        "start": 596,
        "end": 617
      },
      "expression": false,
      "start": 570,
      "end": 617
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "ReturnEvalThis",
            "start": 622,
            "end": 636
          },
          "arguments": [],
          "optional": false,
          "start": 622,
          "end": 638
        },
        "operator": "!==",
        "right": {
          "type": "ThisExpression",
          "start": 643,
          "end": 647
        },
        "start": 622,
        "end": 647
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 663,
                "end": 675
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: function ReturnEvalThis() {return eval(\"this\")} ReturnEvalThis() === this. Actual: ",
                    "raw": "'#2: function ReturnEvalThis() {return eval(\"this\")} ReturnEvalThis() === this. Actual: '",
                    "start": 676,
                    "end": 765
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "ReturnEvalThis",
                        "start": 769,
                        "end": 783
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 769,
                      "end": 785
                    },
                    "start": 768,
                    "end": 786
                  },
                  "start": 676,
                  "end": 786
                }
              ],
              "start": 659,
              "end": 787
            },
            "start": 653,
            "end": 788
          }
        ],
        "start": 649,
        "end": 790
      },
      "alternate": null,
      "start": 618,
      "end": 790
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 791
}