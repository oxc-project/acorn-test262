{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "MyFunction",
            "start": 355,
            "end": 365
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Function",
              "start": 372,
              "end": 380
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "return this",
                "raw": "\"return this\"",
                "start": 381,
                "end": 394
              }
            ],
            "start": 368,
            "end": 395
          },
          "start": 355,
          "end": 395
        }
      ],
      "start": 351,
      "end": 396
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "MyFunction",
            "start": 401,
            "end": 411
          },
          "arguments": [],
          "optional": false,
          "start": 401,
          "end": 413
        },
        "operator": "!==",
        "right": {
          "type": "ThisExpression",
          "start": 418,
          "end": 422
        },
        "start": 401,
        "end": 422
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 438,
                "end": 450
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var MyFunction = new Function(\"return this\"); MyFunction() === this. Actual: ",
                    "raw": "'#1: var MyFunction = new Function(\"return this\"); MyFunction() === this. Actual: '",
                    "start": 451,
                    "end": 534
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "MyFunction",
                        "start": 538,
                        "end": 548
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 538,
                      "end": 550
                    },
                    "start": 537,
                    "end": 551
                  },
                  "start": 451,
                  "end": 551
                }
              ],
              "start": 434,
              "end": 552
            },
            "start": 428,
            "end": 553
          }
        ],
        "start": 424,
        "end": 555
      },
      "alternate": null,
      "start": 397,
      "end": 555
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "MyFunction",
          "start": 567,
          "end": 577
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Function",
            "start": 584,
            "end": 592
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "return eval('this')",
              "raw": "\"return eval(\\'this\\')\"",
              "start": 593,
              "end": 616
            }
          ],
          "start": 580,
          "end": 617
        },
        "start": 567,
        "end": 617
      },
      "start": 567,
      "end": 618
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "MyFunction",
            "start": 623,
            "end": 633
          },
          "arguments": [],
          "optional": false,
          "start": 623,
          "end": 635
        },
        "operator": "!==",
        "right": {
          "type": "ThisExpression",
          "start": 640,
          "end": 644
        },
        "start": 623,
        "end": 644
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 660,
                "end": 672
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var MyFunction = new Function(\"return eval('this')\"); MyFunction() === this. Actual: ",
                    "raw": "'#2: var MyFunction = new Function(\"return eval(\\'this\\')\"); MyFunction() === this. Actual: '",
                    "start": 673,
                    "end": 766
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "MyFunction",
                        "start": 770,
                        "end": 780
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 770,
                      "end": 782
                    },
                    "start": 769,
                    "end": 783
                  },
                  "start": 673,
                  "end": 783
                }
              ],
              "start": 656,
              "end": 784
            },
            "start": 650,
            "end": 785
          }
        ],
        "start": 646,
        "end": 787
      },
      "alternate": null,
      "start": 619,
      "end": 787
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 788
}