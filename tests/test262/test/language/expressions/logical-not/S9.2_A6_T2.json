{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 316,
                "end": 322
              },
              "arguments": [],
              "start": 312,
              "end": 324
            },
            "start": 311,
            "end": 325
          },
          "prefix": true,
          "start": 310,
          "end": 325
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 330,
          "end": 335
        },
        "start": 310,
        "end": 335
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 351,
                "end": 363
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: !(new Object()) === false. Actual: ",
                    "raw": "'#1: !(new Object()) === false. Actual: '",
                    "start": 364,
                    "end": 405
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Object",
                            "start": 415,
                            "end": 421
                          },
                          "arguments": [],
                          "start": 411,
                          "end": 423
                        },
                        "start": 410,
                        "end": 424
                      },
                      "prefix": true,
                      "start": 409,
                      "end": 424
                    },
                    "start": 408,
                    "end": 425
                  },
                  "start": 364,
                  "end": 425
                }
              ],
              "start": 347,
              "end": 426
            },
            "start": 341,
            "end": 427
          }
        ],
        "start": 337,
        "end": 430
      },
      "alternate": null,
      "start": 306,
      "end": 430
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 453,
                "end": 459
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "",
                  "raw": "\"\"",
                  "start": 460,
                  "end": 462
                }
              ],
              "start": 449,
              "end": 463
            },
            "start": 448,
            "end": 464
          },
          "prefix": true,
          "start": 447,
          "end": 464
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 469,
          "end": 474
        },
        "start": 447,
        "end": 474
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 490,
                "end": 502
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: !(new String(\"\")) === false. Actual: ",
                    "raw": "'#2: !(new String(\"\")) === false. Actual: '",
                    "start": 503,
                    "end": 546
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 556,
                            "end": 562
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "",
                              "raw": "\"\"",
                              "start": 563,
                              "end": 565
                            }
                          ],
                          "start": 552,
                          "end": 566
                        },
                        "start": 551,
                        "end": 567
                      },
                      "prefix": true,
                      "start": 550,
                      "end": 567
                    },
                    "start": 549,
                    "end": 568
                  },
                  "start": 503,
                  "end": 568
                }
              ],
              "start": 486,
              "end": 569
            },
            "start": 480,
            "end": 570
          }
        ],
        "start": 476,
        "end": 573
      },
      "alternate": null,
      "start": 443,
      "end": 573
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 596,
                "end": 602
              },
              "arguments": [],
              "start": 592,
              "end": 604
            },
            "start": 591,
            "end": 605
          },
          "prefix": true,
          "start": 590,
          "end": 605
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 610,
          "end": 615
        },
        "start": 590,
        "end": 615
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 631,
                "end": 643
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: !(new String()) === false. Actual: ",
                    "raw": "'#3: !(new String()) === false. Actual: '",
                    "start": 644,
                    "end": 685
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 695,
                            "end": 701
                          },
                          "arguments": [],
                          "start": 691,
                          "end": 703
                        },
                        "start": 690,
                        "end": 704
                      },
                      "prefix": true,
                      "start": 689,
                      "end": 704
                    },
                    "start": 688,
                    "end": 705
                  },
                  "start": 644,
                  "end": 705
                }
              ],
              "start": 627,
              "end": 706
            },
            "start": 621,
            "end": 707
          }
        ],
        "start": 617,
        "end": 710
      },
      "alternate": null,
      "start": 586,
      "end": 710
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 733,
                "end": 740
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 741,
                  "end": 745
                }
              ],
              "start": 729,
              "end": 746
            },
            "start": 728,
            "end": 747
          },
          "prefix": true,
          "start": 727,
          "end": 747
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 752,
          "end": 757
        },
        "start": 727,
        "end": 757
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 773,
                "end": 785
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: !(new Boolean(true)) === false. Actual: ",
                    "raw": "'#4: !(new Boolean(true)) === false. Actual: '",
                    "start": 786,
                    "end": 832
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 842,
                            "end": 849
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 850,
                              "end": 854
                            }
                          ],
                          "start": 838,
                          "end": 855
                        },
                        "start": 837,
                        "end": 856
                      },
                      "prefix": true,
                      "start": 836,
                      "end": 856
                    },
                    "start": 835,
                    "end": 857
                  },
                  "start": 786,
                  "end": 857
                }
              ],
              "start": 769,
              "end": 858
            },
            "start": 763,
            "end": 859
          }
        ],
        "start": 759,
        "end": 862
      },
      "alternate": null,
      "start": 723,
      "end": 862
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 885,
                "end": 892
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 893,
                  "end": 898
                }
              ],
              "start": 881,
              "end": 899
            },
            "start": 880,
            "end": 900
          },
          "prefix": true,
          "start": 879,
          "end": 900
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 905,
          "end": 910
        },
        "start": 879,
        "end": 910
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 926,
                "end": 938
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: !(new Boolean(false)) === false. Actual: ",
                    "raw": "'#5: !(new Boolean(false)) === false. Actual: '",
                    "start": 939,
                    "end": 986
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 996,
                            "end": 1003
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "start": 1004,
                              "end": 1009
                            }
                          ],
                          "start": 992,
                          "end": 1010
                        },
                        "start": 991,
                        "end": 1011
                      },
                      "prefix": true,
                      "start": 990,
                      "end": 1011
                    },
                    "start": 989,
                    "end": 1012
                  },
                  "start": 939,
                  "end": 1012
                }
              ],
              "start": 922,
              "end": 1013
            },
            "start": 916,
            "end": 1014
          }
        ],
        "start": 912,
        "end": 1017
      },
      "alternate": null,
      "start": 875,
      "end": 1017
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 1040,
                "end": 1047
              },
              "arguments": [],
              "start": 1036,
              "end": 1049
            },
            "start": 1035,
            "end": 1050
          },
          "prefix": true,
          "start": 1034,
          "end": 1050
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 1055,
          "end": 1060
        },
        "start": 1034,
        "end": 1060
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1076,
                "end": 1088
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: !(new Boolean()) === false. Actual: ",
                    "raw": "'#6: !(new Boolean()) === false. Actual: '",
                    "start": 1089,
                    "end": 1131
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 1141,
                            "end": 1148
                          },
                          "arguments": [],
                          "start": 1137,
                          "end": 1150
                        },
                        "start": 1136,
                        "end": 1151
                      },
                      "prefix": true,
                      "start": 1135,
                      "end": 1151
                    },
                    "start": 1134,
                    "end": 1152
                  },
                  "start": 1089,
                  "end": 1152
                }
              ],
              "start": 1072,
              "end": 1153
            },
            "start": 1066,
            "end": 1154
          }
        ],
        "start": 1062,
        "end": 1157
      },
      "alternate": null,
      "start": 1030,
      "end": 1157
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Array",
                "start": 1180,
                "end": 1185
              },
              "arguments": [],
              "start": 1176,
              "end": 1187
            },
            "start": 1175,
            "end": 1188
          },
          "prefix": true,
          "start": 1174,
          "end": 1188
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 1193,
          "end": 1198
        },
        "start": 1174,
        "end": 1198
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1214,
                "end": 1226
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: !(new Array()) === false. Actual: ",
                    "raw": "'#7: !(new Array()) === false. Actual: '",
                    "start": 1227,
                    "end": 1267
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Array",
                            "start": 1277,
                            "end": 1282
                          },
                          "arguments": [],
                          "start": 1273,
                          "end": 1284
                        },
                        "start": 1272,
                        "end": 1285
                      },
                      "prefix": true,
                      "start": 1271,
                      "end": 1285
                    },
                    "start": 1270,
                    "end": 1286
                  },
                  "start": 1227,
                  "end": 1286
                }
              ],
              "start": 1210,
              "end": 1287
            },
            "start": 1204,
            "end": 1288
          }
        ],
        "start": 1200,
        "end": 1291
      },
      "alternate": null,
      "start": 1170,
      "end": 1291
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 1314,
                "end": 1320
              },
              "arguments": [],
              "start": 1310,
              "end": 1322
            },
            "start": 1309,
            "end": 1323
          },
          "prefix": true,
          "start": 1308,
          "end": 1323
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 1328,
          "end": 1333
        },
        "start": 1308,
        "end": 1333
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1349,
                "end": 1361
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: !(new Number()) === false. Actual: ",
                    "raw": "'#8: !(new Number()) === false. Actual: '",
                    "start": 1362,
                    "end": 1403
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1413,
                            "end": 1419
                          },
                          "arguments": [],
                          "start": 1409,
                          "end": 1421
                        },
                        "start": 1408,
                        "end": 1422
                      },
                      "prefix": true,
                      "start": 1407,
                      "end": 1422
                    },
                    "start": 1406,
                    "end": 1423
                  },
                  "start": 1362,
                  "end": 1423
                }
              ],
              "start": 1345,
              "end": 1424
            },
            "start": 1339,
            "end": 1425
          }
        ],
        "start": 1335,
        "end": 1428
      },
      "alternate": null,
      "start": 1304,
      "end": 1428
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 1451,
                "end": 1457
              },
              "arguments": [
                {
                  "type": "UnaryExpression",
                  "operator": "-",
                  "argument": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0",
                    "start": 1459,
                    "end": 1460
                  },
                  "prefix": true,
                  "start": 1458,
                  "end": 1460
                }
              ],
              "start": 1447,
              "end": 1461
            },
            "start": 1446,
            "end": 1462
          },
          "prefix": true,
          "start": 1445,
          "end": 1462
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 1467,
          "end": 1472
        },
        "start": 1445,
        "end": 1472
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1488,
                "end": 1500
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: !(new Number(-0)) === false. Actual: ",
                    "raw": "'#9: !(new Number(-0)) === false. Actual: '",
                    "start": 1501,
                    "end": 1544
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1554,
                            "end": 1560
                          },
                          "arguments": [
                            {
                              "type": "UnaryExpression",
                              "operator": "-",
                              "argument": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0",
                                "start": 1562,
                                "end": 1563
                              },
                              "prefix": true,
                              "start": 1561,
                              "end": 1563
                            }
                          ],
                          "start": 1550,
                          "end": 1564
                        },
                        "start": 1549,
                        "end": 1565
                      },
                      "prefix": true,
                      "start": 1548,
                      "end": 1565
                    },
                    "start": 1547,
                    "end": 1566
                  },
                  "start": 1501,
                  "end": 1566
                }
              ],
              "start": 1484,
              "end": 1567
            },
            "start": 1478,
            "end": 1568
          }
        ],
        "start": 1474,
        "end": 1571
      },
      "alternate": null,
      "start": 1441,
      "end": 1571
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 1595,
                "end": 1601
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 1602,
                  "end": 1603
                }
              ],
              "start": 1591,
              "end": 1604
            },
            "start": 1590,
            "end": 1605
          },
          "prefix": true,
          "start": 1589,
          "end": 1605
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 1610,
          "end": 1615
        },
        "start": 1589,
        "end": 1615
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1631,
                "end": 1643
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: !(new Number(0)) === false. Actual: ",
                    "raw": "'#10: !(new Number(0)) === false. Actual: '",
                    "start": 1644,
                    "end": 1687
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1697,
                            "end": 1703
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 0,
                              "raw": "0",
                              "start": 1704,
                              "end": 1705
                            }
                          ],
                          "start": 1693,
                          "end": 1706
                        },
                        "start": 1692,
                        "end": 1707
                      },
                      "prefix": true,
                      "start": 1691,
                      "end": 1707
                    },
                    "start": 1690,
                    "end": 1708
                  },
                  "start": 1644,
                  "end": 1708
                }
              ],
              "start": 1627,
              "end": 1709
            },
            "start": 1621,
            "end": 1710
          }
        ],
        "start": 1617,
        "end": 1713
      },
      "alternate": null,
      "start": 1585,
      "end": 1713
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 1737,
                "end": 1743
              },
              "arguments": [],
              "start": 1733,
              "end": 1745
            },
            "start": 1732,
            "end": 1746
          },
          "prefix": true,
          "start": 1731,
          "end": 1746
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 1751,
          "end": 1756
        },
        "start": 1731,
        "end": 1756
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1772,
                "end": 1784
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#11: !(new Number()) === false. Actual: ",
                    "raw": "'#11: !(new Number()) === false. Actual: '",
                    "start": 1785,
                    "end": 1827
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1837,
                            "end": 1843
                          },
                          "arguments": [],
                          "start": 1833,
                          "end": 1845
                        },
                        "start": 1832,
                        "end": 1846
                      },
                      "prefix": true,
                      "start": 1831,
                      "end": 1846
                    },
                    "start": 1830,
                    "end": 1847
                  },
                  "start": 1785,
                  "end": 1847
                }
              ],
              "start": 1768,
              "end": 1848
            },
            "start": 1762,
            "end": 1849
          }
        ],
        "start": 1758,
        "end": 1852
      },
      "alternate": null,
      "start": 1727,
      "end": 1852
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 1876,
                "end": 1882
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 1883,
                    "end": 1889
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "NaN",
                    "start": 1890,
                    "end": 1893
                  },
                  "optional": false,
                  "computed": false,
                  "start": 1883,
                  "end": 1893
                }
              ],
              "start": 1872,
              "end": 1894
            },
            "start": 1871,
            "end": 1895
          },
          "prefix": true,
          "start": 1870,
          "end": 1895
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 1900,
          "end": 1905
        },
        "start": 1870,
        "end": 1905
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1921,
                "end": 1933
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#12: !(new Number(Number.NaN)) === false. Actual: ",
                    "raw": "'#12: !(new Number(Number.NaN)) === false. Actual: '",
                    "start": 1934,
                    "end": 1986
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 1996,
                            "end": 2002
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Number",
                                "start": 2003,
                                "end": 2009
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "NaN",
                                "start": 2010,
                                "end": 2013
                              },
                              "optional": false,
                              "computed": false,
                              "start": 2003,
                              "end": 2013
                            }
                          ],
                          "start": 1992,
                          "end": 2014
                        },
                        "start": 1991,
                        "end": 2015
                      },
                      "prefix": true,
                      "start": 1990,
                      "end": 2015
                    },
                    "start": 1989,
                    "end": 2016
                  },
                  "start": 1934,
                  "end": 2016
                }
              ],
              "start": 1917,
              "end": 2017
            },
            "start": 1911,
            "end": 2018
          }
        ],
        "start": 1907,
        "end": 2021
      },
      "alternate": null,
      "start": 1866,
      "end": 2021
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 2045,
                "end": 2051
              },
              "arguments": [
                {
                  "type": "UnaryExpression",
                  "operator": "-",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 2053,
                    "end": 2054
                  },
                  "prefix": true,
                  "start": 2052,
                  "end": 2054
                }
              ],
              "start": 2041,
              "end": 2055
            },
            "start": 2040,
            "end": 2056
          },
          "prefix": true,
          "start": 2039,
          "end": 2056
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 2061,
          "end": 2066
        },
        "start": 2039,
        "end": 2066
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2082,
                "end": 2094
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#13: !(new Number(-1)) === false. Actual: ",
                    "raw": "'#13: !(new Number(-1)) === false. Actual: '",
                    "start": 2095,
                    "end": 2139
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 2149,
                            "end": 2155
                          },
                          "arguments": [
                            {
                              "type": "UnaryExpression",
                              "operator": "-",
                              "argument": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "1",
                                "start": 2157,
                                "end": 2158
                              },
                              "prefix": true,
                              "start": 2156,
                              "end": 2158
                            }
                          ],
                          "start": 2145,
                          "end": 2159
                        },
                        "start": 2144,
                        "end": 2160
                      },
                      "prefix": true,
                      "start": 2143,
                      "end": 2160
                    },
                    "start": 2142,
                    "end": 2161
                  },
                  "start": 2095,
                  "end": 2161
                }
              ],
              "start": 2078,
              "end": 2162
            },
            "start": 2072,
            "end": 2163
          }
        ],
        "start": 2068,
        "end": 2166
      },
      "alternate": null,
      "start": 2035,
      "end": 2166
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 2190,
                "end": 2196
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 2197,
                  "end": 2198
                }
              ],
              "start": 2186,
              "end": 2199
            },
            "start": 2185,
            "end": 2200
          },
          "prefix": true,
          "start": 2184,
          "end": 2200
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 2205,
          "end": 2210
        },
        "start": 2184,
        "end": 2210
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2226,
                "end": 2238
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#14: !(new Number(1)) === false. Actual: ",
                    "raw": "'#14: !(new Number(1)) === false. Actual: '",
                    "start": 2239,
                    "end": 2282
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 2292,
                            "end": 2298
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1,
                              "raw": "1",
                              "start": 2299,
                              "end": 2300
                            }
                          ],
                          "start": 2288,
                          "end": 2301
                        },
                        "start": 2287,
                        "end": 2302
                      },
                      "prefix": true,
                      "start": 2286,
                      "end": 2302
                    },
                    "start": 2285,
                    "end": 2303
                  },
                  "start": 2239,
                  "end": 2303
                }
              ],
              "start": 2222,
              "end": 2304
            },
            "start": 2216,
            "end": 2305
          }
        ],
        "start": 2212,
        "end": 2308
      },
      "alternate": null,
      "start": 2180,
      "end": 2308
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 2332,
                "end": 2338
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 2339,
                    "end": 2345
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "POSITIVE_INFINITY",
                    "start": 2346,
                    "end": 2363
                  },
                  "optional": false,
                  "computed": false,
                  "start": 2339,
                  "end": 2363
                }
              ],
              "start": 2328,
              "end": 2364
            },
            "start": 2327,
            "end": 2365
          },
          "prefix": true,
          "start": 2326,
          "end": 2365
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 2370,
          "end": 2375
        },
        "start": 2326,
        "end": 2375
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2391,
                "end": 2403
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#15: !(new Number(Number.POSITIVE_INFINITY)) === false. Actual: ",
                    "raw": "'#15: !(new Number(Number.POSITIVE_INFINITY)) === false. Actual: '",
                    "start": 2404,
                    "end": 2470
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 2480,
                            "end": 2486
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Number",
                                "start": 2487,
                                "end": 2493
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "POSITIVE_INFINITY",
                                "start": 2494,
                                "end": 2511
                              },
                              "optional": false,
                              "computed": false,
                              "start": 2487,
                              "end": 2511
                            }
                          ],
                          "start": 2476,
                          "end": 2512
                        },
                        "start": 2475,
                        "end": 2513
                      },
                      "prefix": true,
                      "start": 2474,
                      "end": 2513
                    },
                    "start": 2473,
                    "end": 2514
                  },
                  "start": 2404,
                  "end": 2514
                }
              ],
              "start": 2387,
              "end": 2515
            },
            "start": 2381,
            "end": 2516
          }
        ],
        "start": 2377,
        "end": 2519
      },
      "alternate": null,
      "start": 2322,
      "end": 2519
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 2543,
                "end": 2549
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Number",
                    "start": 2550,
                    "end": 2556
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "NEGATIVE_INFINITY",
                    "start": 2557,
                    "end": 2574
                  },
                  "optional": false,
                  "computed": false,
                  "start": 2550,
                  "end": 2574
                }
              ],
              "start": 2539,
              "end": 2575
            },
            "start": 2538,
            "end": 2576
          },
          "prefix": true,
          "start": 2537,
          "end": 2576
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 2581,
          "end": 2586
        },
        "start": 2537,
        "end": 2586
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2602,
                "end": 2614
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#16: !(new Number(Number.NEGATIVE_INFINITY)) === false. Actual: ",
                    "raw": "'#16: !(new Number(Number.NEGATIVE_INFINITY)) === false. Actual: '",
                    "start": 2615,
                    "end": 2681
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 2691,
                            "end": 2697
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "Number",
                                "start": 2698,
                                "end": 2704
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "NEGATIVE_INFINITY",
                                "start": 2705,
                                "end": 2722
                              },
                              "optional": false,
                              "computed": false,
                              "start": 2698,
                              "end": 2722
                            }
                          ],
                          "start": 2687,
                          "end": 2723
                        },
                        "start": 2686,
                        "end": 2724
                      },
                      "prefix": true,
                      "start": 2685,
                      "end": 2724
                    },
                    "start": 2684,
                    "end": 2725
                  },
                  "start": 2615,
                  "end": 2725
                }
              ],
              "start": 2598,
              "end": 2726
            },
            "start": 2592,
            "end": 2727
          }
        ],
        "start": 2588,
        "end": 2730
      },
      "alternate": null,
      "start": 2533,
      "end": 2730
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Function",
                "start": 2754,
                "end": 2762
              },
              "arguments": [],
              "start": 2750,
              "end": 2764
            },
            "start": 2749,
            "end": 2765
          },
          "prefix": true,
          "start": 2748,
          "end": 2765
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 2770,
          "end": 2775
        },
        "start": 2748,
        "end": 2775
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2791,
                "end": 2803
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#17: !(new Function()) === false. Actual: ",
                    "raw": "'#17: !(new Function()) === false. Actual: '",
                    "start": 2804,
                    "end": 2848
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Function",
                            "start": 2858,
                            "end": 2866
                          },
                          "arguments": [],
                          "start": 2854,
                          "end": 2868
                        },
                        "start": 2853,
                        "end": 2869
                      },
                      "prefix": true,
                      "start": 2852,
                      "end": 2869
                    },
                    "start": 2851,
                    "end": 2870
                  },
                  "start": 2804,
                  "end": 2870
                }
              ],
              "start": 2787,
              "end": 2871
            },
            "start": 2781,
            "end": 2872
          }
        ],
        "start": 2777,
        "end": 2875
      },
      "alternate": null,
      "start": 2744,
      "end": 2875
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Date",
                "start": 2899,
                "end": 2903
              },
              "arguments": [],
              "start": 2895,
              "end": 2905
            },
            "start": 2894,
            "end": 2906
          },
          "prefix": true,
          "start": 2893,
          "end": 2906
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 2911,
          "end": 2916
        },
        "start": 2893,
        "end": 2916
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2932,
                "end": 2944
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#18: !(new Date()) === false. Actual: ",
                    "raw": "'#18: !(new Date()) === false. Actual: '",
                    "start": 2945,
                    "end": 2985
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Date",
                            "start": 2995,
                            "end": 2999
                          },
                          "arguments": [],
                          "start": 2991,
                          "end": 3001
                        },
                        "start": 2990,
                        "end": 3002
                      },
                      "prefix": true,
                      "start": 2989,
                      "end": 3002
                    },
                    "start": 2988,
                    "end": 3003
                  },
                  "start": 2945,
                  "end": 3003
                }
              ],
              "start": 2928,
              "end": 3004
            },
            "start": 2922,
            "end": 3005
          }
        ],
        "start": 2918,
        "end": 3008
      },
      "alternate": null,
      "start": 2889,
      "end": 3008
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "!",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Date",
                "start": 3032,
                "end": 3036
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 3037,
                  "end": 3038
                }
              ],
              "start": 3028,
              "end": 3039
            },
            "start": 3027,
            "end": 3040
          },
          "prefix": true,
          "start": 3026,
          "end": 3040
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 3045,
          "end": 3050
        },
        "start": 3026,
        "end": 3050
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 3066,
                "end": 3078
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#19: !(new Date(0)) === false. Actual: ",
                    "raw": "'#19: !(new Date(0)) === false. Actual: '",
                    "start": 3079,
                    "end": 3120
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Date",
                            "start": 3130,
                            "end": 3134
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 0,
                              "raw": "0",
                              "start": 3135,
                              "end": 3136
                            }
                          ],
                          "start": 3126,
                          "end": 3137
                        },
                        "start": 3125,
                        "end": 3138
                      },
                      "prefix": true,
                      "start": 3124,
                      "end": 3138
                    },
                    "start": 3123,
                    "end": 3139
                  },
                  "start": 3079,
                  "end": 3139
                }
              ],
              "start": 3062,
              "end": 3140
            },
            "start": 3056,
            "end": 3141
          }
        ],
        "start": 3052,
        "end": 3144
      },
      "alternate": null,
      "start": 3022,
      "end": 3144
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 3145
}