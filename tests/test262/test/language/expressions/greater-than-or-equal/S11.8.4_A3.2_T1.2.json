{
  "type": "Program",
  "start": 0,
  "end": 1298,
  "body": [
    {
      "type": "IfStatement",
      "start": 425,
      "end": 634,
      "test": {
        "type": "BinaryExpression",
        "start": 429,
        "end": 512,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 429,
          "end": 457,
          "expression": {
            "type": "BinaryExpression",
            "start": 430,
            "end": 456,
            "left": {
              "type": "ObjectExpression",
              "start": 430,
              "end": 432,
              "properties": []
            },
            "operator": ">=",
            "right": {
              "type": "FunctionExpression",
              "start": 436,
              "end": 456,
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 446,
                "end": 456,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 447,
                    "end": 455,
                    "argument": {
                      "type": "Literal",
                      "start": 454,
                      "end": 455,
                      "value": 1,
                      "raw": "1"
                    }
                  }
                ]
              },
              "expression": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "ParenthesizedExpression",
          "start": 462,
          "end": 512,
          "expression": {
            "type": "BinaryExpression",
            "start": 463,
            "end": 511,
            "left": {
              "type": "CallExpression",
              "start": 463,
              "end": 476,
              "callee": {
                "type": "MemberExpression",
                "start": 463,
                "end": 474,
                "object": {
                  "type": "ObjectExpression",
                  "start": 463,
                  "end": 465,
                  "properties": []
                },
                "property": {
                  "type": "Identifier",
                  "start": 466,
                  "end": 474,
                  "name": "toString"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [],
              "optional": false
            },
            "operator": ">=",
            "right": {
              "type": "CallExpression",
              "start": 480,
              "end": 511,
              "callee": {
                "type": "MemberExpression",
                "start": 480,
                "end": 509,
                "object": {
                  "type": "FunctionExpression",
                  "start": 480,
                  "end": 500,
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 490,
                    "end": 500,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 491,
                        "end": 499,
                        "argument": {
                          "type": "Literal",
                          "start": 498,
                          "end": 499,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    ]
                  },
                  "expression": false
                },
                "property": {
                  "type": "Identifier",
                  "start": 501,
                  "end": 509,
                  "name": "toString"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [],
              "optional": false
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 514,
        "end": 634,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 518,
            "end": 632,
            "argument": {
              "type": "NewExpression",
              "start": 524,
              "end": 631,
              "callee": {
                "type": "Identifier",
                "start": 528,
                "end": 540,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 541,
                  "end": 630,
                  "value": "#1: ({} >= function(){return 1}) === ({}.toString() >= function(){return 1}.toString())",
                  "raw": "'#1: ({} >= function(){return 1}) === ({}.toString() >= function(){return 1}.toString())'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 646,
      "end": 855,
      "test": {
        "type": "BinaryExpression",
        "start": 650,
        "end": 733,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 650,
          "end": 678,
          "expression": {
            "type": "BinaryExpression",
            "start": 651,
            "end": 677,
            "left": {
              "type": "FunctionExpression",
              "start": 651,
              "end": 671,
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 661,
                "end": 671,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 662,
                    "end": 670,
                    "argument": {
                      "type": "Literal",
                      "start": 669,
                      "end": 670,
                      "value": 1,
                      "raw": "1"
                    }
                  }
                ]
              },
              "expression": false
            },
            "operator": ">=",
            "right": {
              "type": "ObjectExpression",
              "start": 675,
              "end": 677,
              "properties": []
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "ParenthesizedExpression",
          "start": 683,
          "end": 733,
          "expression": {
            "type": "BinaryExpression",
            "start": 684,
            "end": 732,
            "left": {
              "type": "CallExpression",
              "start": 684,
              "end": 715,
              "callee": {
                "type": "MemberExpression",
                "start": 684,
                "end": 713,
                "object": {
                  "type": "FunctionExpression",
                  "start": 684,
                  "end": 704,
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 694,
                    "end": 704,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 695,
                        "end": 703,
                        "argument": {
                          "type": "Literal",
                          "start": 702,
                          "end": 703,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    ]
                  },
                  "expression": false
                },
                "property": {
                  "type": "Identifier",
                  "start": 705,
                  "end": 713,
                  "name": "toString"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [],
              "optional": false
            },
            "operator": ">=",
            "right": {
              "type": "CallExpression",
              "start": 719,
              "end": 732,
              "callee": {
                "type": "MemberExpression",
                "start": 719,
                "end": 730,
                "object": {
                  "type": "ObjectExpression",
                  "start": 719,
                  "end": 721,
                  "properties": []
                },
                "property": {
                  "type": "Identifier",
                  "start": 722,
                  "end": 730,
                  "name": "toString"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [],
              "optional": false
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 735,
        "end": 855,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 739,
            "end": 853,
            "argument": {
              "type": "NewExpression",
              "start": 745,
              "end": 852,
              "callee": {
                "type": "Identifier",
                "start": 749,
                "end": 761,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 762,
                  "end": 851,
                  "value": "#2: (function(){return 1} >= {}) === (function(){return 1}.toString() >= {}.toString())",
                  "raw": "'#2: (function(){return 1} >= {}) === (function(){return 1}.toString() >= {}.toString())'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 867,
      "end": 1148,
      "test": {
        "type": "BinaryExpression",
        "start": 871,
        "end": 990,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 871,
          "end": 917,
          "expression": {
            "type": "BinaryExpression",
            "start": 872,
            "end": 916,
            "left": {
              "type": "FunctionExpression",
              "start": 872,
              "end": 892,
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 882,
                "end": 892,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 883,
                    "end": 891,
                    "argument": {
                      "type": "Literal",
                      "start": 890,
                      "end": 891,
                      "value": 1,
                      "raw": "1"
                    }
                  }
                ]
              },
              "expression": false
            },
            "operator": ">=",
            "right": {
              "type": "FunctionExpression",
              "start": 896,
              "end": 916,
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 906,
                "end": 916,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 907,
                    "end": 915,
                    "argument": {
                      "type": "Literal",
                      "start": 914,
                      "end": 915,
                      "value": 1,
                      "raw": "1"
                    }
                  }
                ]
              },
              "expression": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "ParenthesizedExpression",
          "start": 922,
          "end": 990,
          "expression": {
            "type": "BinaryExpression",
            "start": 923,
            "end": 989,
            "left": {
              "type": "CallExpression",
              "start": 923,
              "end": 954,
              "callee": {
                "type": "MemberExpression",
                "start": 923,
                "end": 952,
                "object": {
                  "type": "FunctionExpression",
                  "start": 923,
                  "end": 943,
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 933,
                    "end": 943,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 934,
                        "end": 942,
                        "argument": {
                          "type": "Literal",
                          "start": 941,
                          "end": 942,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    ]
                  },
                  "expression": false
                },
                "property": {
                  "type": "Identifier",
                  "start": 944,
                  "end": 952,
                  "name": "toString"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [],
              "optional": false
            },
            "operator": ">=",
            "right": {
              "type": "CallExpression",
              "start": 958,
              "end": 989,
              "callee": {
                "type": "MemberExpression",
                "start": 958,
                "end": 987,
                "object": {
                  "type": "FunctionExpression",
                  "start": 958,
                  "end": 978,
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 968,
                    "end": 978,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 969,
                        "end": 977,
                        "argument": {
                          "type": "Literal",
                          "start": 976,
                          "end": 977,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    ]
                  },
                  "expression": false
                },
                "property": {
                  "type": "Identifier",
                  "start": 979,
                  "end": 987,
                  "name": "toString"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [],
              "optional": false
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 992,
        "end": 1148,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 996,
            "end": 1146,
            "argument": {
              "type": "NewExpression",
              "start": 1002,
              "end": 1145,
              "callee": {
                "type": "Identifier",
                "start": 1006,
                "end": 1018,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1019,
                  "end": 1144,
                  "value": "#3: (function(){return 1} >= function(){return 1}) === (function(){return 1}.toString() >= function(){return 1}.toString())",
                  "raw": "'#3: (function(){return 1} >= function(){return 1}) === (function(){return 1}.toString() >= function(){return 1}.toString())'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1160,
      "end": 1297,
      "test": {
        "type": "BinaryExpression",
        "start": 1164,
        "end": 1211,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1164,
          "end": 1174,
          "expression": {
            "type": "BinaryExpression",
            "start": 1165,
            "end": 1173,
            "left": {
              "type": "ObjectExpression",
              "start": 1165,
              "end": 1167,
              "properties": []
            },
            "operator": ">=",
            "right": {
              "type": "ObjectExpression",
              "start": 1171,
              "end": 1173,
              "properties": []
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "ParenthesizedExpression",
          "start": 1179,
          "end": 1211,
          "expression": {
            "type": "BinaryExpression",
            "start": 1180,
            "end": 1210,
            "left": {
              "type": "CallExpression",
              "start": 1180,
              "end": 1193,
              "callee": {
                "type": "MemberExpression",
                "start": 1180,
                "end": 1191,
                "object": {
                  "type": "ObjectExpression",
                  "start": 1180,
                  "end": 1182,
                  "properties": []
                },
                "property": {
                  "type": "Identifier",
                  "start": 1183,
                  "end": 1191,
                  "name": "toString"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [],
              "optional": false
            },
            "operator": ">=",
            "right": {
              "type": "CallExpression",
              "start": 1197,
              "end": 1210,
              "callee": {
                "type": "MemberExpression",
                "start": 1197,
                "end": 1208,
                "object": {
                  "type": "ObjectExpression",
                  "start": 1197,
                  "end": 1199,
                  "properties": []
                },
                "property": {
                  "type": "Identifier",
                  "start": 1200,
                  "end": 1208,
                  "name": "toString"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [],
              "optional": false
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1213,
        "end": 1297,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1217,
            "end": 1295,
            "argument": {
              "type": "NewExpression",
              "start": 1223,
              "end": 1294,
              "callee": {
                "type": "Identifier",
                "start": 1227,
                "end": 1239,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1240,
                  "end": 1293,
                  "value": "#4: ({} >= {}) === ({}.toString() >= {}.toString())",
                  "raw": "'#4: ({} >= {}) === ({}.toString() >= {}.toString())'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}