{
  "type": "Program",
  "start": 0,
  "end": 2692,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1001,
      "end": 1051,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1005,
          "end": 1050,
          "id": {
            "type": "Identifier",
            "start": 1005,
            "end": 1039,
            "name": "CALLER_OWN_PROPERTY_DOES_NOT_EXIST"
          },
          "init": {
            "type": "CallExpression",
            "start": 1042,
            "end": 1050,
            "callee": {
              "type": "Identifier",
              "start": 1042,
              "end": 1048,
              "name": "Symbol"
            },
            "arguments": [],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "start": 1052,
      "end": 1273,
      "id": {
        "type": "Identifier",
        "start": 1061,
        "end": 1066,
        "name": "inner"
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 1069,
        "end": 1273,
        "body": [
          {
            "type": "ReturnStatement",
            "start": 1173,
            "end": 1271,
            "argument": {
              "type": "ConditionalExpression",
              "start": 1180,
              "end": 1270,
              "test": {
                "type": "CallExpression",
                "start": 1180,
                "end": 1210,
                "callee": {
                  "type": "MemberExpression",
                  "start": 1180,
                  "end": 1200,
                  "object": {
                    "type": "Identifier",
                    "start": 1180,
                    "end": 1185,
                    "name": "inner"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1186,
                    "end": 1200,
                    "name": "hasOwnProperty"
                  },
                  "optional": false,
                  "computed": false
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 1201,
                    "end": 1209,
                    "value": "caller",
                    "raw": "\"caller\""
                  }
                ],
                "optional": false
              },
              "consequent": {
                "type": "MemberExpression",
                "start": 1217,
                "end": 1229,
                "object": {
                  "type": "Identifier",
                  "start": 1217,
                  "end": 1222,
                  "name": "inner"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1223,
                  "end": 1229,
                  "name": "caller"
                },
                "optional": false,
                "computed": false
              },
              "alternate": {
                "type": "Identifier",
                "start": 1236,
                "end": 1270,
                "name": "CALLER_OWN_PROPERTY_DOES_NOT_EXIST"
              }
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "start": 1276,
      "end": 1294,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1280,
          "end": 1293,
          "id": {
            "type": "Identifier",
            "start": 1280,
            "end": 1289,
            "name": "callCount"
          },
          "init": {
            "type": "Literal",
            "start": 1292,
            "end": 1293,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1295,
      "end": 1301,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1299,
          "end": 1300,
          "id": {
            "type": "Identifier",
            "start": 1299,
            "end": 1300,
            "name": "f"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1302,
      "end": 2568,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1302,
        "end": 2567,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1302,
          "end": 1303,
          "name": "f"
        },
        "right": {
          "type": "FunctionExpression",
          "start": 1306,
          "end": 2567,
          "id": {
            "type": "Identifier",
            "start": 1322,
            "end": 1323,
            "name": "g"
          },
          "generator": true,
          "async": true,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 1326,
            "end": 2567,
            "body": [
              {
                "type": "ExpressionStatement",
                "start": 1330,
                "end": 1343,
                "expression": {
                  "type": "Literal",
                  "start": 1330,
                  "end": 1342,
                  "value": "use strict",
                  "raw": "\"use strict\""
                },
                "directive": "use strict"
              },
              {
                "type": "VariableDeclaration",
                "start": 1631,
                "end": 1697,
                "kind": "let",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "start": 1635,
                    "end": 1696,
                    "id": {
                      "type": "Identifier",
                      "start": 1635,
                      "end": 1645,
                      "name": "descriptor"
                    },
                    "init": {
                      "type": "CallExpression",
                      "start": 1648,
                      "end": 1696,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1648,
                        "end": 1679,
                        "object": {
                          "type": "Identifier",
                          "start": 1648,
                          "end": 1654,
                          "name": "Object"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1655,
                          "end": 1679,
                          "name": "getOwnPropertyDescriptor"
                        },
                        "optional": false,
                        "computed": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1680,
                          "end": 1685,
                          "name": "inner"
                        },
                        {
                          "type": "Literal",
                          "start": 1687,
                          "end": 1695,
                          "value": "caller",
                          "raw": "\"caller\""
                        }
                      ],
                      "optional": false
                    }
                  }
                ]
              },
              {
                "type": "IfStatement",
                "start": 1700,
                "end": 1812,
                "test": {
                  "type": "LogicalExpression",
                  "start": 1704,
                  "end": 1749,
                  "left": {
                    "type": "LogicalExpression",
                    "start": 1704,
                    "end": 1741,
                    "left": {
                      "type": "Identifier",
                      "start": 1704,
                      "end": 1714,
                      "name": "descriptor"
                    },
                    "operator": "&&",
                    "right": {
                      "type": "MemberExpression",
                      "start": 1718,
                      "end": 1741,
                      "object": {
                        "type": "Identifier",
                        "start": 1718,
                        "end": 1728,
                        "name": "descriptor"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1729,
                        "end": 1741,
                        "name": "configurable"
                      },
                      "optional": false,
                      "computed": false
                    }
                  },
                  "operator": "&&",
                  "right": {
                    "type": "Literal",
                    "start": 1745,
                    "end": 1749,
                    "value": true,
                    "raw": "true"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "start": 1751,
                  "end": 1812,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 1757,
                      "end": 1808,
                      "expression": {
                        "type": "CallExpression",
                        "start": 1757,
                        "end": 1807,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 1757,
                          "end": 1778,
                          "object": {
                            "type": "Identifier",
                            "start": 1757,
                            "end": 1763,
                            "name": "Object"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 1764,
                            "end": 1778,
                            "name": "defineProperty"
                          },
                          "optional": false,
                          "computed": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1779,
                            "end": 1784,
                            "name": "inner"
                          },
                          {
                            "type": "Literal",
                            "start": 1786,
                            "end": 1794,
                            "value": "caller",
                            "raw": "\"caller\""
                          },
                          {
                            "type": "ObjectExpression",
                            "start": 1796,
                            "end": 1806,
                            "properties": [
                              {
                                "type": "Property",
                                "start": 1797,
                                "end": 1805,
                                "kind": "init",
                                "key": {
                                  "type": "Identifier",
                                  "start": 1797,
                                  "end": 1802,
                                  "name": "value"
                                },
                                "value": {
                                  "type": "Literal",
                                  "start": 1804,
                                  "end": 1805,
                                  "value": 1,
                                  "raw": "1"
                                },
                                "method": false,
                                "shorthand": false,
                                "computed": false
                              }
                            ]
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "VariableDeclaration",
                "start": 1815,
                "end": 1836,
                "kind": "var",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "start": 1819,
                    "end": 1835,
                    "id": {
                      "type": "Identifier",
                      "start": 1819,
                      "end": 1825,
                      "name": "result"
                    },
                    "init": {
                      "type": "CallExpression",
                      "start": 1828,
                      "end": 1835,
                      "callee": {
                        "type": "Identifier",
                        "start": 1828,
                        "end": 1833,
                        "name": "inner"
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                ]
              },
              {
                "type": "IfStatement",
                "start": 1839,
                "end": 2072,
                "test": {
                  "type": "LogicalExpression",
                  "start": 1843,
                  "end": 1888,
                  "left": {
                    "type": "LogicalExpression",
                    "start": 1843,
                    "end": 1880,
                    "left": {
                      "type": "Identifier",
                      "start": 1843,
                      "end": 1853,
                      "name": "descriptor"
                    },
                    "operator": "&&",
                    "right": {
                      "type": "MemberExpression",
                      "start": 1857,
                      "end": 1880,
                      "object": {
                        "type": "Identifier",
                        "start": 1857,
                        "end": 1867,
                        "name": "descriptor"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1868,
                        "end": 1880,
                        "name": "configurable"
                      },
                      "optional": false,
                      "computed": false
                    }
                  },
                  "operator": "&&",
                  "right": {
                    "type": "Literal",
                    "start": 1884,
                    "end": 1888,
                    "value": true,
                    "raw": "true"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "start": 1890,
                  "end": 2072,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 1896,
                      "end": 2068,
                      "expression": {
                        "type": "CallExpression",
                        "start": 1896,
                        "end": 2067,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 1896,
                          "end": 1912,
                          "object": {
                            "type": "Identifier",
                            "start": 1896,
                            "end": 1902,
                            "name": "assert"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 1903,
                            "end": 1912,
                            "name": "sameValue"
                          },
                          "optional": false,
                          "computed": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1913,
                            "end": 1919,
                            "name": "result"
                          },
                          {
                            "type": "Literal",
                            "start": 1921,
                            "end": 1922,
                            "value": 1,
                            "raw": "1"
                          },
                          {
                            "type": "Literal",
                            "start": 1924,
                            "end": 2066,
                            "value": "If this test defined an own \"caller\" property on the inner function, then it should be accessible and should return the value it was set to.",
                            "raw": "'If this test defined an own \"caller\" property on the inner function, then it should be accessible and should return the value it was set to.'"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "start": 2458,
                "end": 2550,
                "test": {
                  "type": "BinaryExpression",
                  "start": 2462,
                  "end": 2507,
                  "left": {
                    "type": "Identifier",
                    "start": 2462,
                    "end": 2468,
                    "name": "result"
                  },
                  "operator": "!==",
                  "right": {
                    "type": "Identifier",
                    "start": 2473,
                    "end": 2507,
                    "name": "CALLER_OWN_PROPERTY_DOES_NOT_EXIST"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "start": 2509,
                  "end": 2550,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 2515,
                      "end": 2546,
                      "expression": {
                        "type": "CallExpression",
                        "start": 2515,
                        "end": 2545,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 2515,
                          "end": 2534,
                          "object": {
                            "type": "Identifier",
                            "start": 2515,
                            "end": 2521,
                            "name": "assert"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 2522,
                            "end": 2534,
                            "name": "notSameValue"
                          },
                          "optional": false,
                          "computed": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 2535,
                            "end": 2541,
                            "name": "result"
                          },
                          {
                            "type": "Identifier",
                            "start": 2543,
                            "end": 2544,
                            "name": "f"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "ExpressionStatement",
                "start": 2553,
                "end": 2565,
                "expression": {
                  "type": "UpdateExpression",
                  "start": 2553,
                  "end": 2564,
                  "operator": "++",
                  "prefix": false,
                  "argument": {
                    "type": "Identifier",
                    "start": 2553,
                    "end": 2562,
                    "name": "callCount"
                  }
                }
              }
            ]
          },
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2570,
      "end": 2691,
      "expression": {
        "type": "CallExpression",
        "start": 2570,
        "end": 2690,
        "callee": {
          "type": "MemberExpression",
          "start": 2570,
          "end": 2676,
          "object": {
            "type": "CallExpression",
            "start": 2570,
            "end": 2671,
            "callee": {
              "type": "MemberExpression",
              "start": 2570,
              "end": 2588,
              "object": {
                "type": "CallExpression",
                "start": 2570,
                "end": 2580,
                "callee": {
                  "type": "MemberExpression",
                  "start": 2570,
                  "end": 2578,
                  "object": {
                    "type": "CallExpression",
                    "start": 2570,
                    "end": 2573,
                    "callee": {
                      "type": "Identifier",
                      "start": 2570,
                      "end": 2571,
                      "name": "f"
                    },
                    "arguments": [],
                    "optional": false
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 2574,
                    "end": 2578,
                    "name": "next"
                  },
                  "optional": false,
                  "computed": false
                },
                "arguments": [],
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 2584,
                "end": 2588,
                "name": "then"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "start": 2589,
                "end": 2663,
                "expression": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 2595,
                  "end": 2663,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 2601,
                      "end": 2659,
                      "expression": {
                        "type": "CallExpression",
                        "start": 2601,
                        "end": 2658,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 2601,
                          "end": 2617,
                          "object": {
                            "type": "Identifier",
                            "start": 2601,
                            "end": 2607,
                            "name": "assert"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 2608,
                            "end": 2617,
                            "name": "sameValue"
                          },
                          "optional": false,
                          "computed": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 2618,
                            "end": 2627,
                            "name": "callCount"
                          },
                          {
                            "type": "Literal",
                            "start": 2629,
                            "end": 2630,
                            "value": 1,
                            "raw": "1"
                          },
                          {
                            "type": "Literal",
                            "start": 2632,
                            "end": 2657,
                            "value": "function body evaluated",
                            "raw": "'function body evaluated'"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                "id": null,
                "generator": false
              },
              {
                "type": "Identifier",
                "start": 2665,
                "end": 2670,
                "name": "$DONE"
              }
            ],
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 2672,
            "end": 2676,
            "name": "then"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 2677,
            "end": 2682,
            "name": "$DONE"
          },
          {
            "type": "Identifier",
            "start": 2684,
            "end": 2689,
            "name": "$DONE"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}