{
  "type": "Program",
  "start": 0,
  "end": 1096,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 686,
      "end": 704,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 690,
          "end": 703,
          "id": {
            "type": "Identifier",
            "start": 690,
            "end": 699,
            "name": "callCount"
          },
          "init": {
            "type": "Literal",
            "start": 702,
            "end": 703,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 705,
      "end": 845,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 709,
          "end": 844,
          "id": {
            "type": "Identifier",
            "start": 709,
            "end": 712,
            "name": "ref"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 715,
            "end": 844,
            "id": {
              "type": "Identifier",
              "start": 732,
              "end": 749,
              "name": "BindingIdentifier"
            },
            "expression": false,
            "generator": true,
            "async": true,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 752,
              "end": 844,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 756,
                  "end": 768,
                  "expression": {
                    "type": "UpdateExpression",
                    "start": 756,
                    "end": 767,
                    "operator": "++",
                    "prefix": false,
                    "argument": {
                      "type": "Identifier",
                      "start": 756,
                      "end": 765,
                      "name": "callCount"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 771,
                  "end": 814,
                  "expression": {
                    "type": "CallExpression",
                    "start": 771,
                    "end": 813,
                    "callee": {
                      "type": "ParenthesizedExpression",
                      "start": 771,
                      "end": 811,
                      "expression": {
                        "type": "ArrowFunctionExpression",
                        "start": 772,
                        "end": 810,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 778,
                          "end": 810,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 784,
                              "end": 806,
                              "expression": {
                                "type": "AssignmentExpression",
                                "start": 784,
                                "end": 805,
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "start": 784,
                                  "end": 801,
                                  "name": "BindingIdentifier"
                                },
                                "right": {
                                  "type": "Literal",
                                  "start": 804,
                                  "end": 805,
                                  "value": 1,
                                  "raw": "1"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    "arguments": [],
                    "optional": false
                  }
                },
                {
                  "type": "ReturnStatement",
                  "start": 817,
                  "end": 842,
                  "argument": {
                    "type": "Identifier",
                    "start": 824,
                    "end": 841,
                    "name": "BindingIdentifier"
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 847,
      "end": 1094,
      "expression": {
        "type": "CallExpression",
        "start": 847,
        "end": 1093,
        "callee": {
          "type": "Identifier",
          "start": 847,
          "end": 856,
          "name": "asyncTest"
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "start": 857,
            "end": 1092,
            "id": null,
            "expression": false,
            "generator": false,
            "async": true,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 869,
              "end": 1092,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 873,
                  "end": 892,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 877,
                      "end": 891,
                      "id": {
                        "type": "Identifier",
                        "start": 877,
                        "end": 887,
                        "name": "catchCount"
                      },
                      "init": {
                        "type": "Literal",
                        "start": 890,
                        "end": 891,
                        "value": 0,
                        "raw": "0"
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "TryStatement",
                  "start": 895,
                  "end": 1021,
                  "block": {
                    "type": "BlockStatement",
                    "start": 899,
                    "end": 943,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 905,
                        "end": 939,
                        "expression": {
                          "type": "MemberExpression",
                          "start": 905,
                          "end": 939,
                          "object": {
                            "type": "ParenthesizedExpression",
                            "start": 905,
                            "end": 933,
                            "expression": {
                              "type": "AwaitExpression",
                              "start": 906,
                              "end": 932,
                              "argument": {
                                "type": "CallExpression",
                                "start": 912,
                                "end": 932,
                                "callee": {
                                  "type": "MemberExpression",
                                  "start": 912,
                                  "end": 930,
                                  "object": {
                                    "type": "ParenthesizedExpression",
                                    "start": 912,
                                    "end": 925,
                                    "expression": {
                                      "type": "AwaitExpression",
                                      "start": 913,
                                      "end": 924,
                                      "argument": {
                                        "type": "CallExpression",
                                        "start": 919,
                                        "end": 924,
                                        "callee": {
                                          "type": "Identifier",
                                          "start": 919,
                                          "end": 922,
                                          "name": "ref"
                                        },
                                        "arguments": [],
                                        "optional": false
                                      }
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 926,
                                    "end": 930,
                                    "name": "next"
                                  },
                                  "computed": false,
                                  "optional": false
                                },
                                "arguments": [],
                                "optional": false
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 934,
                            "end": 939,
                            "name": "value"
                          },
                          "computed": false,
                          "optional": false
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 944,
                    "end": 1021,
                    "param": {
                      "type": "Identifier",
                      "start": 951,
                      "end": 956,
                      "name": "error"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 958,
                      "end": 1021,
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "start": 964,
                          "end": 977,
                          "expression": {
                            "type": "UpdateExpression",
                            "start": 964,
                            "end": 976,
                            "operator": "++",
                            "prefix": false,
                            "argument": {
                              "type": "Identifier",
                              "start": 964,
                              "end": 974,
                              "name": "catchCount"
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "start": 982,
                          "end": 1017,
                          "expression": {
                            "type": "CallExpression",
                            "start": 982,
                            "end": 1016,
                            "callee": {
                              "type": "Identifier",
                              "start": 982,
                              "end": 988,
                              "name": "assert"
                            },
                            "arguments": [
                              {
                                "type": "BinaryExpression",
                                "start": 989,
                                "end": 1015,
                                "left": {
                                  "type": "Identifier",
                                  "start": 989,
                                  "end": 994,
                                  "name": "error"
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "start": 1006,
                                  "end": 1015,
                                  "name": "TypeError"
                                }
                              }
                            ],
                            "optional": false
                          }
                        }
                      ]
                    }
                  },
                  "finalizer": null
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1024,
                  "end": 1056,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1024,
                    "end": 1055,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1024,
                      "end": 1040,
                      "object": {
                        "type": "Identifier",
                        "start": 1024,
                        "end": 1030,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1031,
                        "end": 1040,
                        "name": "sameValue"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1041,
                        "end": 1051,
                        "name": "catchCount"
                      },
                      {
                        "type": "Literal",
                        "start": 1053,
                        "end": 1054,
                        "value": 1,
                        "raw": "1"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1059,
                  "end": 1090,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1059,
                    "end": 1089,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1059,
                      "end": 1075,
                      "object": {
                        "type": "Identifier",
                        "start": 1059,
                        "end": 1065,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1066,
                        "end": 1075,
                        "name": "sameValue"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1076,
                        "end": 1085,
                        "name": "callCount"
                      },
                      {
                        "type": "Literal",
                        "start": 1087,
                        "end": 1088,
                        "value": 1,
                        "raw": "1"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}