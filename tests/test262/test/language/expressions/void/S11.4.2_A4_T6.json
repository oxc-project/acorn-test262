{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 299,
            "end": 300
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 303,
            "end": 304
          },
          "start": 299,
          "end": 304
        }
      ],
      "start": 295,
      "end": 305
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "void",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "x",
                "start": 316,
                "end": 317
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 320,
                "end": 321
              },
              "start": 316,
              "end": 321
            },
            "start": 315,
            "end": 322
          },
          "prefix": true,
          "start": 310,
          "end": 322
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 327,
          "end": 336
        },
        "start": 310,
        "end": 336
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 352,
                "end": 364
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = 0; void (x = 1) === undefined. Actual: ",
                    "raw": "'#1: var x = 0; void (x = 1) === undefined. Actual: '",
                    "start": 365,
                    "end": 418
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "void",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "x",
                            "start": 428,
                            "end": 429
                          },
                          "right": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 432,
                            "end": 433
                          },
                          "start": 428,
                          "end": 433
                        },
                        "start": 427,
                        "end": 434
                      },
                      "prefix": true,
                      "start": 422,
                      "end": 434
                    },
                    "start": 421,
                    "end": 435
                  },
                  "start": 365,
                  "end": 435
                }
              ],
              "start": 348,
              "end": 436
            },
            "start": 342,
            "end": 437
          }
        ],
        "start": 338,
        "end": 439
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "x",
                "start": 453,
                "end": 454
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 459,
                "end": 460
              },
              "start": 453,
              "end": 460
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 478,
                      "end": 490
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": "#1: var x = 0; void (x = 1); x === 1. Actual: ",
                          "raw": "'#1: var x = 0; void (x = 1); x === 1. Actual: '",
                          "start": 491,
                          "end": 539
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "expression": {
                            "type": "Identifier",
                            "name": "x",
                            "start": 543,
                            "end": 544
                          },
                          "start": 542,
                          "end": 545
                        },
                        "start": 491,
                        "end": 545
                      }
                    ],
                    "start": 474,
                    "end": 546
                  },
                  "start": 468,
                  "end": 547
                }
              ],
              "start": 462,
              "end": 551
            },
            "alternate": null,
            "start": 449,
            "end": 551
          }
        ],
        "start": 445,
        "end": 554
      },
      "start": 306,
      "end": 554
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 555
}