{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 292,
            "end": 293
          },
          "init": null,
          "start": 292,
          "end": 293
        }
      ],
      "start": 288,
      "end": 294
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 300,
            "end": 305
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "void",
              "argument": {
                "type": "Identifier",
                "name": "x",
                "start": 311,
                "end": 312
              },
              "prefix": true,
              "start": 306,
              "end": 312
            }
          ],
          "optional": false,
          "start": 300,
          "end": 313
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 318,
          "end": 322
        },
        "start": 300,
        "end": 322
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 338,
                "end": 350
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x; void x === undefined. Actual: ",
                    "raw": "'#1: var x; void x === undefined. Actual: '",
                    "start": 351,
                    "end": 394
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "void",
                      "argument": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 403,
                        "end": 404
                      },
                      "prefix": true,
                      "start": 398,
                      "end": 404
                    },
                    "start": 397,
                    "end": 405
                  },
                  "start": 351,
                  "end": 405
                }
              ],
              "start": 334,
              "end": 406
            },
            "start": 328,
            "end": 407
          }
        ],
        "start": 324,
        "end": 409
      },
      "alternate": null,
      "start": 296,
      "end": 409
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 425,
            "end": 426
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 429,
            "end": 433
          },
          "start": 425,
          "end": 433
        }
      ],
      "start": 421,
      "end": 434
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "void",
          "argument": {
            "type": "Identifier",
            "name": "x",
            "start": 444,
            "end": 445
          },
          "prefix": true,
          "start": 439,
          "end": 445
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 450,
          "end": 459
        },
        "start": 439,
        "end": 459
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 475,
                "end": 487
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = null; void x === undefined. Actual: ",
                    "raw": "'#2: var x = null; void x === undefined. Actual: '",
                    "start": 488,
                    "end": 538
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "void",
                      "argument": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 547,
                        "end": 548
                      },
                      "prefix": true,
                      "start": 542,
                      "end": 548
                    },
                    "start": 541,
                    "end": 549
                  },
                  "start": 488,
                  "end": 549
                }
              ],
              "start": 471,
              "end": 550
            },
            "start": 465,
            "end": 551
          }
        ],
        "start": 461,
        "end": 553
      },
      "alternate": null,
      "start": 435,
      "end": 553
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 554
}