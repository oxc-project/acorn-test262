{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 276,
            "end": 281
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "ObjectExpression",
                "properties": [],
                "start": 283,
                "end": 285
              },
              "prefix": true,
              "start": 282,
              "end": 285
            }
          ],
          "optional": false,
          "start": 276,
          "end": 286
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 291,
          "end": 295
        },
        "start": 276,
        "end": 295
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 311,
                "end": 323
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: -{} === Not-a-Number. Actual: ",
                    "raw": "'#1: -{} === Not-a-Number. Actual: '",
                    "start": 324,
                    "end": 360
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "ObjectExpression",
                        "properties": [],
                        "start": 365,
                        "end": 367
                      },
                      "prefix": true,
                      "start": 364,
                      "end": 367
                    },
                    "start": 363,
                    "end": 368
                  },
                  "start": 324,
                  "end": 368
                }
              ],
              "start": 307,
              "end": 369
            },
            "start": 301,
            "end": 370
          }
        ],
        "start": 297,
        "end": 372
      },
      "alternate": null,
      "start": 272,
      "end": 372
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 390,
            "end": 395
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 415,
                        "end": 416
                      },
                      "start": 408,
                      "end": 416
                    }
                  ],
                  "start": 407,
                  "end": 417
                },
                "expression": false,
                "start": 397,
                "end": 417
              },
              "prefix": true,
              "start": 396,
              "end": 417
            }
          ],
          "optional": false,
          "start": 390,
          "end": 418
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 423,
          "end": 427
        },
        "start": 390,
        "end": 427
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 443,
                "end": 455
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: -function(){return 1} === Not-a-Number. Actual: ",
                    "raw": "'#2: -function(){return 1} === Not-a-Number. Actual: '",
                    "start": 456,
                    "end": 510
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "FunctionExpression",
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "1",
                                "start": 533,
                                "end": 534
                              },
                              "start": 526,
                              "end": 534
                            }
                          ],
                          "start": 525,
                          "end": 535
                        },
                        "expression": false,
                        "start": 515,
                        "end": 535
                      },
                      "prefix": true,
                      "start": 514,
                      "end": 535
                    },
                    "start": 513,
                    "end": 536
                  },
                  "start": 456,
                  "end": 536
                }
              ],
              "start": 439,
              "end": 537
            },
            "start": 433,
            "end": 538
          }
        ],
        "start": 429,
        "end": 540
      },
      "alternate": null,
      "start": 386,
      "end": 540
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 541
}