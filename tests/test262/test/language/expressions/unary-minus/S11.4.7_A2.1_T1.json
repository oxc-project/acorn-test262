{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 286,
            "end": 287
          },
          "prefix": true,
          "start": 285,
          "end": 287
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 293,
            "end": 294
          },
          "prefix": true,
          "start": 292,
          "end": 294
        },
        "start": 285,
        "end": 294
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 310,
                "end": 322
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: -1 === -1. Actual: ",
                    "raw": "'#1: -1 === -1. Actual: '",
                    "start": 323,
                    "end": 348
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 353,
                        "end": 354
                      },
                      "prefix": true,
                      "start": 352,
                      "end": 354
                    },
                    "start": 351,
                    "end": 355
                  },
                  "start": 323,
                  "end": 355
                }
              ],
              "start": 306,
              "end": 356
            },
            "start": 300,
            "end": 357
          }
        ],
        "start": 296,
        "end": 359
      },
      "alternate": null,
      "start": 281,
      "end": 359
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 378,
                "end": 379
              },
              "prefix": true,
              "start": 377,
              "end": 379
            },
            "start": 376,
            "end": 380
          },
          "prefix": true,
          "start": 375,
          "end": 380
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 385,
          "end": 386
        },
        "start": 375,
        "end": 386
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 402,
                "end": 414
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: -(-1) === -1. Actual: ",
                    "raw": "'#2: -(-1) === -1. Actual: '",
                    "start": 415,
                    "end": 443
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 450,
                            "end": 451
                          },
                          "prefix": true,
                          "start": 449,
                          "end": 451
                        },
                        "start": 448,
                        "end": 452
                      },
                      "prefix": true,
                      "start": 447,
                      "end": 452
                    },
                    "start": 446,
                    "end": 453
                  },
                  "start": 415,
                  "end": 453
                }
              ],
              "start": 398,
              "end": 454
            },
            "start": 392,
            "end": 455
          }
        ],
        "start": 388,
        "end": 457
      },
      "alternate": null,
      "start": 371,
      "end": 457
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 473,
            "end": 474
          },
          "init": {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 478,
              "end": 479
            },
            "prefix": true,
            "start": 477,
            "end": 479
          },
          "start": 473,
          "end": 479
        }
      ],
      "start": 469,
      "end": 480
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Identifier",
            "name": "x",
            "start": 486,
            "end": 487
          },
          "prefix": true,
          "start": 485,
          "end": 487
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 492,
          "end": 493
        },
        "start": 485,
        "end": 493
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 509,
                "end": 521
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: var x = -1; -x === 1. Actual: ",
                    "raw": "'#3: var x = -1; -x === 1. Actual: '",
                    "start": 522,
                    "end": 558
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 563,
                        "end": 564
                      },
                      "prefix": true,
                      "start": 562,
                      "end": 564
                    },
                    "start": 561,
                    "end": 565
                  },
                  "start": 522,
                  "end": 565
                }
              ],
              "start": 505,
              "end": 566
            },
            "start": 499,
            "end": 567
          }
        ],
        "start": 495,
        "end": 569
      },
      "alternate": null,
      "start": 481,
      "end": 569
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 585,
            "end": 586
          },
          "init": {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 590,
              "end": 591
            },
            "prefix": true,
            "start": 589,
            "end": 591
          },
          "start": 585,
          "end": 591
        }
      ],
      "start": 581,
      "end": 592
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Identifier",
                "name": "x",
                "start": 600,
                "end": 601
              },
              "prefix": true,
              "start": 599,
              "end": 601
            },
            "start": 598,
            "end": 602
          },
          "prefix": true,
          "start": 597,
          "end": 602
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 608,
            "end": 609
          },
          "prefix": true,
          "start": 607,
          "end": 609
        },
        "start": 597,
        "end": 609
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 625,
                "end": 637
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: var x = -1; -(-x) === -1. Actual: ",
                    "raw": "'#4: var x = -1; -(-x) === -1. Actual: '",
                    "start": 638,
                    "end": 678
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Identifier",
                            "name": "x",
                            "start": 685,
                            "end": 686
                          },
                          "prefix": true,
                          "start": 684,
                          "end": 686
                        },
                        "start": 683,
                        "end": 687
                      },
                      "prefix": true,
                      "start": 682,
                      "end": 687
                    },
                    "start": 681,
                    "end": 688
                  },
                  "start": 638,
                  "end": 688
                }
              ],
              "start": 621,
              "end": 689
            },
            "start": 615,
            "end": 690
          }
        ],
        "start": 611,
        "end": 692
      },
      "alternate": null,
      "start": 593,
      "end": 692
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "object",
            "start": 708,
            "end": 714
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Object",
              "start": 721,
              "end": 727
            },
            "arguments": [],
            "start": 717,
            "end": 729
          },
          "start": 708,
          "end": 729
        }
      ],
      "start": 704,
      "end": 730
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "object",
            "start": 731,
            "end": 737
          },
          "property": {
            "type": "Identifier",
            "name": "prop",
            "start": 738,
            "end": 742
          },
          "optional": false,
          "computed": false,
          "start": 731,
          "end": 742
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 745,
          "end": 746
        },
        "start": 731,
        "end": 746
      },
      "start": 731,
      "end": 747
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "object",
              "start": 753,
              "end": 759
            },
            "property": {
              "type": "Identifier",
              "name": "prop",
              "start": 760,
              "end": 764
            },
            "optional": false,
            "computed": false,
            "start": 753,
            "end": 764
          },
          "prefix": true,
          "start": 752,
          "end": 764
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 770,
            "end": 771
          },
          "prefix": true,
          "start": 769,
          "end": 771
        },
        "start": 752,
        "end": 771
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 787,
                "end": 799
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: var object = new Object(); object.prop = -1; -object.prop === -1. Actual: ",
                    "raw": "'#5: var object = new Object(); object.prop = -1; -object.prop === -1. Actual: '",
                    "start": 800,
                    "end": 880
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "object",
                          "start": 885,
                          "end": 891
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "prop",
                          "start": 892,
                          "end": 896
                        },
                        "optional": false,
                        "computed": false,
                        "start": 885,
                        "end": 896
                      },
                      "prefix": true,
                      "start": 884,
                      "end": 896
                    },
                    "start": 883,
                    "end": 897
                  },
                  "start": 800,
                  "end": 897
                }
              ],
              "start": 783,
              "end": 898
            },
            "start": 777,
            "end": 899
          }
        ],
        "start": 773,
        "end": 901
      },
      "alternate": null,
      "start": 748,
      "end": 901
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 902
}