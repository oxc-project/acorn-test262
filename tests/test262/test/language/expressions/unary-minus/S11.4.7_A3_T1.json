{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 280,
            "end": 285
          },
          "prefix": true,
          "start": 279,
          "end": 285
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 290,
          "end": 291
        },
        "start": 279,
        "end": 291
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 307,
                "end": 319
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: -false === 0. Actual: ",
                    "raw": "'#1: -false === 0. Actual: '",
                    "start": 320,
                    "end": 348
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "Literal",
                        "value": false,
                        "raw": "false",
                        "start": 353,
                        "end": 358
                      },
                      "prefix": true,
                      "start": 352,
                      "end": 358
                    },
                    "start": 351,
                    "end": 359
                  },
                  "start": 320,
                  "end": 359
                }
              ],
              "start": 303,
              "end": 360
            },
            "start": 297,
            "end": 361
          }
        ],
        "start": 293,
        "end": 363
      },
      "alternate": null,
      "start": 275,
      "end": 363
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 384,
              "end": 391
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 392,
                "end": 396
              }
            ],
            "start": 380,
            "end": 397
          },
          "prefix": true,
          "start": 379,
          "end": 397
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 403,
            "end": 404
          },
          "prefix": true,
          "start": 402,
          "end": 404
        },
        "start": 379,
        "end": 404
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 420,
                "end": 432
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: -new Boolean(true) === -1. Actual: ",
                    "raw": "'#2: -new Boolean(true) === -1. Actual: '",
                    "start": 433,
                    "end": 474
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 483,
                          "end": 490
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 491,
                            "end": 495
                          }
                        ],
                        "start": 479,
                        "end": 496
                      },
                      "prefix": true,
                      "start": 478,
                      "end": 496
                    },
                    "start": 477,
                    "end": 497
                  },
                  "start": 433,
                  "end": 497
                }
              ],
              "start": 416,
              "end": 498
            },
            "start": 410,
            "end": 499
          }
        ],
        "start": 406,
        "end": 501
      },
      "alternate": null,
      "start": 375,
      "end": 501
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 502
}