{
  "type": "Program",
  "start": 0,
  "end": 2113,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1855,
      "end": 1873,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1859,
          "end": 1872,
          "id": {
            "type": "Identifier",
            "start": 1859,
            "end": 1868,
            "name": "following"
          },
          "init": {
            "type": "Literal",
            "start": 1871,
            "end": 1872,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1874,
      "end": 1949,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1878,
          "end": 1948,
          "id": {
            "type": "Identifier",
            "start": 1878,
            "end": 1882,
            "name": "iter"
          },
          "init": {
            "type": "CallExpression",
            "start": 1884,
            "end": 1948,
            "callee": {
              "type": "FunctionExpression",
              "start": 1884,
              "end": 1946,
              "id": null,
              "generator": true,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1897,
                "end": 1946,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 1901,
                    "end": 1926,
                    "argument": {
                      "type": "NewExpression",
                      "start": 1907,
                      "end": 1925,
                      "callee": {
                        "type": "Identifier",
                        "start": 1911,
                        "end": 1923,
                        "name": "Test262Error"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "start": 1929,
                    "end": 1944,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1929,
                      "end": 1943,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 1929,
                        "end": 1938,
                        "name": "following"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 1942,
                        "end": 1943,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  }
                ]
              },
              "expression": false
            },
            "arguments": [],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1951,
      "end": 1976,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1955,
          "end": 1975,
          "id": {
            "type": "Identifier",
            "start": 1955,
            "end": 1956,
            "name": "f"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 1959,
            "end": 1975,
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "ArrayPattern",
                "start": 1968,
                "end": 1971,
                "elements": [
                  null
                ]
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1973,
              "end": 1975,
              "body": []
            },
            "expression": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1978,
      "end": 2033,
      "expression": {
        "type": "CallExpression",
        "start": 1978,
        "end": 2032,
        "callee": {
          "type": "MemberExpression",
          "start": 1978,
          "end": 1991,
          "object": {
            "type": "Identifier",
            "start": 1978,
            "end": 1984,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1985,
            "end": 1991,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1992,
            "end": 2004,
            "name": "Test262Error"
          },
          {
            "type": "FunctionExpression",
            "start": 2006,
            "end": 2031,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 2017,
              "end": 2031,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 2021,
                  "end": 2029,
                  "expression": {
                    "type": "CallExpression",
                    "start": 2021,
                    "end": 2028,
                    "callee": {
                      "type": "Identifier",
                      "start": 2021,
                      "end": 2022,
                      "name": "f"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 2023,
                        "end": 2027,
                        "name": "iter"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2035,
      "end": 2047,
      "expression": {
        "type": "CallExpression",
        "start": 2035,
        "end": 2046,
        "callee": {
          "type": "MemberExpression",
          "start": 2035,
          "end": 2044,
          "object": {
            "type": "Identifier",
            "start": 2035,
            "end": 2039,
            "name": "iter"
          },
          "property": {
            "type": "Identifier",
            "start": 2040,
            "end": 2044,
            "name": "next"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2048,
      "end": 2112,
      "expression": {
        "type": "CallExpression",
        "start": 2048,
        "end": 2111,
        "callee": {
          "type": "MemberExpression",
          "start": 2048,
          "end": 2064,
          "object": {
            "type": "Identifier",
            "start": 2048,
            "end": 2054,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2055,
            "end": 2064,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 2065,
            "end": 2074,
            "name": "following"
          },
          {
            "type": "Literal",
            "start": 2076,
            "end": 2077,
            "value": 0,
            "raw": "0"
          },
          {
            "type": "Literal",
            "start": 2079,
            "end": 2110,
            "value": "Iterator was properly closed.",
            "raw": "'Iterator was properly closed.'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}