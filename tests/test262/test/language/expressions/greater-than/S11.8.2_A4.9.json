{
  "type": "Program",
  "start": 0,
  "end": 1188,
  "body": [
    {
      "type": "IfStatement",
      "start": 337,
      "end": 418,
      "test": {
        "type": "BinaryExpression",
        "start": 341,
        "end": 360,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 341,
          "end": 350,
          "expression": {
            "type": "BinaryExpression",
            "start": 342,
            "end": 349,
            "left": {
              "type": "Literal",
              "start": 342,
              "end": 343,
              "value": 1,
              "raw": "1"
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 346,
              "end": 349,
              "value": 1.1,
              "raw": "1.1"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 355,
          "end": 360,
          "value": false,
          "raw": "false"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 362,
        "end": 418,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 366,
            "end": 416,
            "argument": {
              "type": "NewExpression",
              "start": 372,
              "end": 415,
              "callee": {
                "type": "Identifier",
                "start": 376,
                "end": 388,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 389,
                  "end": 414,
                  "value": "#1: (1 > 1.1) === false",
                  "raw": "'#1: (1 > 1.1) === false'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 430,
      "end": 509,
      "test": {
        "type": "BinaryExpression",
        "start": 434,
        "end": 452,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 434,
          "end": 443,
          "expression": {
            "type": "BinaryExpression",
            "start": 435,
            "end": 442,
            "left": {
              "type": "Literal",
              "start": 435,
              "end": 438,
              "value": 1.1,
              "raw": "1.1"
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 441,
              "end": 442,
              "value": 1,
              "raw": "1"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 448,
          "end": 452,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 454,
        "end": 509,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 458,
            "end": 507,
            "argument": {
              "type": "NewExpression",
              "start": 464,
              "end": 506,
              "callee": {
                "type": "Identifier",
                "start": 468,
                "end": 480,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 481,
                  "end": 505,
                  "value": "#2: (1.1 > 1) === true",
                  "raw": "'#2: (1.1 > 1) === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 521,
      "end": 604,
      "test": {
        "type": "BinaryExpression",
        "start": 525,
        "end": 545,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 525,
          "end": 536,
          "expression": {
            "type": "BinaryExpression",
            "start": 526,
            "end": 535,
            "left": {
              "type": "UnaryExpression",
              "start": 526,
              "end": 528,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 527,
                "end": 528,
                "value": 1,
                "raw": "1"
              }
            },
            "operator": ">",
            "right": {
              "type": "UnaryExpression",
              "start": 531,
              "end": 535,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 532,
                "end": 535,
                "value": 1.1,
                "raw": "1.1"
              }
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 541,
          "end": 545,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 547,
        "end": 604,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 551,
            "end": 602,
            "argument": {
              "type": "NewExpression",
              "start": 557,
              "end": 601,
              "callee": {
                "type": "Identifier",
                "start": 561,
                "end": 573,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 574,
                  "end": 600,
                  "value": "#3: (-1 > -1.1) === true",
                  "raw": "'#3: (-1 > -1.1) === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 616,
      "end": 701,
      "test": {
        "type": "BinaryExpression",
        "start": 620,
        "end": 641,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 620,
          "end": 631,
          "expression": {
            "type": "BinaryExpression",
            "start": 621,
            "end": 630,
            "left": {
              "type": "UnaryExpression",
              "start": 621,
              "end": 625,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 622,
                "end": 625,
                "value": 1.1,
                "raw": "1.1"
              }
            },
            "operator": ">",
            "right": {
              "type": "UnaryExpression",
              "start": 628,
              "end": 630,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 629,
                "end": 630,
                "value": 1,
                "raw": "1"
              }
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 636,
          "end": 641,
          "value": false,
          "raw": "false"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 643,
        "end": 701,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 647,
            "end": 699,
            "argument": {
              "type": "NewExpression",
              "start": 653,
              "end": 698,
              "callee": {
                "type": "Identifier",
                "start": 657,
                "end": 669,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 670,
                  "end": 697,
                  "value": "#4: (-1.1 > -1) === false",
                  "raw": "'#4: (-1.1 > -1) === false'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 713,
      "end": 792,
      "test": {
        "type": "BinaryExpression",
        "start": 717,
        "end": 735,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 717,
          "end": 726,
          "expression": {
            "type": "BinaryExpression",
            "start": 718,
            "end": 725,
            "left": {
              "type": "Literal",
              "start": 718,
              "end": 721,
              "value": 0.1,
              "raw": "0.1"
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 724,
              "end": 725,
              "value": 0,
              "raw": "0"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 731,
          "end": 735,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 737,
        "end": 792,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 741,
            "end": 790,
            "argument": {
              "type": "NewExpression",
              "start": 747,
              "end": 789,
              "callee": {
                "type": "Identifier",
                "start": 751,
                "end": 763,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 764,
                  "end": 788,
                  "value": "#5: (0.1 > 0) === true",
                  "raw": "'#5: (0.1 > 0) === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 804,
      "end": 885,
      "test": {
        "type": "BinaryExpression",
        "start": 808,
        "end": 827,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 808,
          "end": 818,
          "expression": {
            "type": "BinaryExpression",
            "start": 809,
            "end": 817,
            "left": {
              "type": "Literal",
              "start": 809,
              "end": 810,
              "value": 0,
              "raw": "0"
            },
            "operator": ">",
            "right": {
              "type": "UnaryExpression",
              "start": 813,
              "end": 817,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 814,
                "end": 817,
                "value": 0.1,
                "raw": "0.1"
              }
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 823,
          "end": 827,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 829,
        "end": 885,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 833,
            "end": 883,
            "argument": {
              "type": "NewExpression",
              "start": 839,
              "end": 882,
              "callee": {
                "type": "Identifier",
                "start": 843,
                "end": 855,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 856,
                  "end": 881,
                  "value": "#6: (0 > -0.1) === true",
                  "raw": "'#6: (0 > -0.1) === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 897,
      "end": 1036,
      "test": {
        "type": "BinaryExpression",
        "start": 901,
        "end": 949,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 901,
          "end": 940,
          "expression": {
            "type": "BinaryExpression",
            "start": 902,
            "end": 939,
            "left": {
              "type": "MemberExpression",
              "start": 902,
              "end": 918,
              "object": {
                "type": "Identifier",
                "start": 902,
                "end": 908,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 909,
                "end": 918,
                "name": "MAX_VALUE"
              },
              "computed": false,
              "optional": false
            },
            "operator": ">",
            "right": {
              "type": "BinaryExpression",
              "start": 921,
              "end": 939,
              "left": {
                "type": "MemberExpression",
                "start": 921,
                "end": 937,
                "object": {
                  "type": "Identifier",
                  "start": 921,
                  "end": 927,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 928,
                  "end": 937,
                  "name": "MAX_VALUE"
                },
                "computed": false,
                "optional": false
              },
              "operator": "/",
              "right": {
                "type": "Literal",
                "start": 938,
                "end": 939,
                "value": 2,
                "raw": "2"
              }
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 945,
          "end": 949,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 951,
        "end": 1036,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 955,
            "end": 1034,
            "argument": {
              "type": "NewExpression",
              "start": 961,
              "end": 1033,
              "callee": {
                "type": "Identifier",
                "start": 965,
                "end": 977,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 978,
                  "end": 1032,
                  "value": "#7: (Number.MAX_VALUE > Number.MAX_VALUE/2) === true",
                  "raw": "'#7: (Number.MAX_VALUE > Number.MAX_VALUE/2) === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1048,
      "end": 1187,
      "test": {
        "type": "BinaryExpression",
        "start": 1052,
        "end": 1100,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1052,
          "end": 1091,
          "expression": {
            "type": "BinaryExpression",
            "start": 1053,
            "end": 1090,
            "left": {
              "type": "BinaryExpression",
              "start": 1053,
              "end": 1071,
              "left": {
                "type": "MemberExpression",
                "start": 1053,
                "end": 1069,
                "object": {
                  "type": "Identifier",
                  "start": 1053,
                  "end": 1059,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1060,
                  "end": 1069,
                  "name": "MIN_VALUE"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "Literal",
                "start": 1070,
                "end": 1071,
                "value": 2,
                "raw": "2"
              }
            },
            "operator": ">",
            "right": {
              "type": "MemberExpression",
              "start": 1074,
              "end": 1090,
              "object": {
                "type": "Identifier",
                "start": 1074,
                "end": 1080,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 1081,
                "end": 1090,
                "name": "MIN_VALUE"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1096,
          "end": 1100,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1102,
        "end": 1187,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1106,
            "end": 1185,
            "argument": {
              "type": "NewExpression",
              "start": 1112,
              "end": 1184,
              "callee": {
                "type": "Identifier",
                "start": 1116,
                "end": 1128,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1129,
                  "end": 1183,
                  "value": "#8: (Number.MIN_VALUE*2 > Number.MIN_VALUE) === true",
                  "raw": "'#8: (Number.MIN_VALUE*2 > Number.MIN_VALUE) === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}