{
  "type": "Program",
  "start": 0,
  "end": 613,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 305,
      "end": 326,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 309,
          "end": 325,
          "id": {
            "type": "Identifier",
            "start": 309,
            "end": 317,
            "name": "accessed"
          },
          "init": {
            "type": "Literal",
            "start": 320,
            "end": 325,
            "value": false,
            "raw": "false"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 327,
      "end": 406,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 331,
          "end": 405,
          "id": {
            "type": "Identifier",
            "start": 331,
            "end": 335,
            "name": "obj1"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 338,
            "end": 405,
            "properties": [
              {
                "type": "Property",
                "start": 342,
                "end": 403,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 342,
                  "end": 349,
                  "name": "valueOf"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 351,
                  "end": 403,
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 363,
                    "end": 403,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 369,
                        "end": 385,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 369,
                          "end": 384,
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "start": 369,
                            "end": 377,
                            "name": "accessed"
                          },
                          "right": {
                            "type": "Literal",
                            "start": 380,
                            "end": 384,
                            "value": true,
                            "raw": "true"
                          }
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 390,
                        "end": 399,
                        "argument": {
                          "type": "Literal",
                          "start": 397,
                          "end": 398,
                          "value": 3,
                          "raw": "3"
                        }
                      }
                    ]
                  },
                  "expression": false
                },
                "method": false,
                "shorthand": false,
                "computed": false
              }
            ]
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 407,
      "end": 466,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 411,
          "end": 465,
          "id": {
            "type": "Identifier",
            "start": 411,
            "end": 415,
            "name": "obj2"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 418,
            "end": 465,
            "properties": [
              {
                "type": "Property",
                "start": 422,
                "end": 463,
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "start": 422,
                  "end": 430,
                  "name": "toString"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 432,
                  "end": 463,
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 444,
                    "end": 463,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 450,
                        "end": 459,
                        "argument": {
                          "type": "Literal",
                          "start": 457,
                          "end": 458,
                          "value": 4,
                          "raw": "4"
                        }
                      }
                    ]
                  },
                  "expression": false
                },
                "method": false,
                "shorthand": false,
                "computed": false
              }
            ]
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 468,
      "end": 545,
      "expression": {
        "type": "CallExpression",
        "start": 468,
        "end": 544,
        "callee": {
          "type": "MemberExpression",
          "start": 468,
          "end": 484,
          "object": {
            "type": "Identifier",
            "start": 468,
            "end": 474,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 475,
            "end": 484,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 485,
            "end": 496,
            "left": {
              "type": "Identifier",
              "start": 485,
              "end": 489,
              "name": "obj1"
            },
            "operator": ">",
            "right": {
              "type": "Identifier",
              "start": 492,
              "end": 496,
              "name": "obj2"
            }
          },
          {
            "type": "Literal",
            "start": 498,
            "end": 503,
            "value": false,
            "raw": "false"
          },
          {
            "type": "Literal",
            "start": 505,
            "end": 543,
            "value": "The result of (obj1 > obj2) is false",
            "raw": "'The result of (obj1 > obj2) is false'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 546,
      "end": 612,
      "expression": {
        "type": "CallExpression",
        "start": 546,
        "end": 611,
        "callee": {
          "type": "MemberExpression",
          "start": 546,
          "end": 562,
          "object": {
            "type": "Identifier",
            "start": 546,
            "end": 552,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 553,
            "end": 562,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 563,
            "end": 571,
            "name": "accessed"
          },
          {
            "type": "Literal",
            "start": 573,
            "end": 577,
            "value": true,
            "raw": "true"
          },
          {
            "type": "Literal",
            "start": 579,
            "end": 610,
            "value": "The value of accessed is true",
            "raw": "'The value of accessed is true'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}