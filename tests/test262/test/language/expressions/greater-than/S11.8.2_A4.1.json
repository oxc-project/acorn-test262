{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 296,
                "end": 302
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 303,
                "end": 306
              },
              "optional": false,
              "computed": false,
              "start": 296,
              "end": 306
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 309,
              "end": 310
            },
            "start": 296,
            "end": 310
          },
          "start": 295,
          "end": 311
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 316,
          "end": 321
        },
        "start": 295,
        "end": 321
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 337,
                "end": 349
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: (NaN > 0) === false",
                  "raw": "'#1: (NaN > 0) === false'",
                  "start": 350,
                  "end": 375
                }
              ],
              "start": 333,
              "end": 376
            },
            "start": 327,
            "end": 377
          }
        ],
        "start": 323,
        "end": 379
      },
      "alternate": null,
      "start": 291,
      "end": 379
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 396,
                "end": 402
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 403,
                "end": 406
              },
              "optional": false,
              "computed": false,
              "start": 396,
              "end": 406
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "value": 1.1,
              "raw": "1.1",
              "start": 409,
              "end": 412
            },
            "start": 396,
            "end": 412
          },
          "start": 395,
          "end": 413
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 418,
          "end": 423
        },
        "start": 395,
        "end": 423
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 439,
                "end": 451
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: (NaN > 1.1) === false",
                  "raw": "'#2: (NaN > 1.1) === false'",
                  "start": 452,
                  "end": 479
                }
              ],
              "start": 435,
              "end": 480
            },
            "start": 429,
            "end": 481
          }
        ],
        "start": 425,
        "end": 483
      },
      "alternate": null,
      "start": 391,
      "end": 483
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 500,
                "end": 506
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 507,
                "end": 510
              },
              "optional": false,
              "computed": false,
              "start": 500,
              "end": 510
            },
            "operator": ">",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1.1,
                "raw": "1.1",
                "start": 514,
                "end": 517
              },
              "prefix": true,
              "start": 513,
              "end": 517
            },
            "start": 500,
            "end": 517
          },
          "start": 499,
          "end": 518
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 523,
          "end": 528
        },
        "start": 499,
        "end": 528
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 544,
                "end": 556
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: (NaN > -1.1) === false",
                  "raw": "'#3: (NaN > -1.1) === false'",
                  "start": 557,
                  "end": 585
                }
              ],
              "start": 540,
              "end": 586
            },
            "start": 534,
            "end": 587
          }
        ],
        "start": 530,
        "end": 589
      },
      "alternate": null,
      "start": 495,
      "end": 589
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 606,
                "end": 612
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 613,
                "end": 616
              },
              "optional": false,
              "computed": false,
              "start": 606,
              "end": 616
            },
            "operator": ">",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 619,
                "end": 625
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 626,
                "end": 629
              },
              "optional": false,
              "computed": false,
              "start": 619,
              "end": 629
            },
            "start": 606,
            "end": 629
          },
          "start": 605,
          "end": 630
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 635,
          "end": 640
        },
        "start": 605,
        "end": 640
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 656,
                "end": 668
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4: (NaN > NaN) === false",
                  "raw": "'#4: (NaN > NaN) === false'",
                  "start": 669,
                  "end": 696
                }
              ],
              "start": 652,
              "end": 697
            },
            "start": 646,
            "end": 698
          }
        ],
        "start": 642,
        "end": 700
      },
      "alternate": null,
      "start": 601,
      "end": 700
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 717,
                "end": 723
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 724,
                "end": 727
              },
              "optional": false,
              "computed": false,
              "start": 717,
              "end": 727
            },
            "operator": ">",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 730,
                "end": 736
              },
              "property": {
                "type": "Identifier",
                "name": "POSITIVE_INFINITY",
                "start": 737,
                "end": 754
              },
              "optional": false,
              "computed": false,
              "start": 730,
              "end": 754
            },
            "start": 717,
            "end": 754
          },
          "start": 716,
          "end": 755
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 760,
          "end": 765
        },
        "start": 716,
        "end": 765
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 781,
                "end": 793
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#5: (NaN > +Infinity) === false",
                  "raw": "'#5: (NaN > +Infinity) === false'",
                  "start": 794,
                  "end": 827
                }
              ],
              "start": 777,
              "end": 828
            },
            "start": 771,
            "end": 829
          }
        ],
        "start": 767,
        "end": 831
      },
      "alternate": null,
      "start": 712,
      "end": 831
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 848,
                "end": 854
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 855,
                "end": 858
              },
              "optional": false,
              "computed": false,
              "start": 848,
              "end": 858
            },
            "operator": ">",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 861,
                "end": 867
              },
              "property": {
                "type": "Identifier",
                "name": "NEGATIVE_INFINITY",
                "start": 868,
                "end": 885
              },
              "optional": false,
              "computed": false,
              "start": 861,
              "end": 885
            },
            "start": 848,
            "end": 885
          },
          "start": 847,
          "end": 886
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 891,
          "end": 896
        },
        "start": 847,
        "end": 896
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 912,
                "end": 924
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#6: (NaN > -Infinity) === false",
                  "raw": "'#6: (NaN > -Infinity) === false'",
                  "start": 925,
                  "end": 958
                }
              ],
              "start": 908,
              "end": 959
            },
            "start": 902,
            "end": 960
          }
        ],
        "start": 898,
        "end": 962
      },
      "alternate": null,
      "start": 843,
      "end": 962
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 979,
                "end": 985
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 986,
                "end": 989
              },
              "optional": false,
              "computed": false,
              "start": 979,
              "end": 989
            },
            "operator": ">",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 992,
                "end": 998
              },
              "property": {
                "type": "Identifier",
                "name": "MAX_VALUE",
                "start": 999,
                "end": 1008
              },
              "optional": false,
              "computed": false,
              "start": 992,
              "end": 1008
            },
            "start": 979,
            "end": 1008
          },
          "start": 978,
          "end": 1009
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 1014,
          "end": 1019
        },
        "start": 978,
        "end": 1019
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1035,
                "end": 1047
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#7: (NaN > Number.MAX_VALUE) === false",
                  "raw": "'#7: (NaN > Number.MAX_VALUE) === false'",
                  "start": 1048,
                  "end": 1088
                }
              ],
              "start": 1031,
              "end": 1089
            },
            "start": 1025,
            "end": 1090
          }
        ],
        "start": 1021,
        "end": 1092
      },
      "alternate": null,
      "start": 974,
      "end": 1092
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1109,
                "end": 1115
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 1116,
                "end": 1119
              },
              "optional": false,
              "computed": false,
              "start": 1109,
              "end": 1119
            },
            "operator": ">",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1122,
                "end": 1128
              },
              "property": {
                "type": "Identifier",
                "name": "MIN_VALUE",
                "start": 1129,
                "end": 1138
              },
              "optional": false,
              "computed": false,
              "start": 1122,
              "end": 1138
            },
            "start": 1109,
            "end": 1138
          },
          "start": 1108,
          "end": 1139
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 1144,
          "end": 1149
        },
        "start": 1108,
        "end": 1149
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1165,
                "end": 1177
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#8: (NaN > Number.MIN_VALUE) === false",
                  "raw": "'#8: (NaN > Number.MIN_VALUE) === false'",
                  "start": 1178,
                  "end": 1218
                }
              ],
              "start": 1161,
              "end": 1219
            },
            "start": 1155,
            "end": 1220
          }
        ],
        "start": 1151,
        "end": 1222
      },
      "alternate": null,
      "start": 1104,
      "end": 1222
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1223
}