{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 378,
              "end": 382
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 385,
              "end": 388
            },
            "start": 378,
            "end": 388
          },
          "start": 377,
          "end": 389
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 394,
          "end": 395
        },
        "start": 377,
        "end": 395
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 411,
                "end": 423
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: (true & \"1\") === 1. Actual: ",
                    "raw": "'#1: (true & \"1\") === 1. Actual: '",
                    "start": 424,
                    "end": 458
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true",
                          "start": 463,
                          "end": 467
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "value": "1",
                          "raw": "\"1\"",
                          "start": 470,
                          "end": 473
                        },
                        "start": 463,
                        "end": 473
                      },
                      "start": 462,
                      "end": 474
                    },
                    "start": 461,
                    "end": 475
                  },
                  "start": 424,
                  "end": 475
                }
              ],
              "start": 407,
              "end": 476
            },
            "start": 401,
            "end": 477
          }
        ],
        "start": 397,
        "end": 479
      },
      "alternate": null,
      "start": 373,
      "end": 479
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 496,
              "end": 499
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 502,
              "end": 506
            },
            "start": 496,
            "end": 506
          },
          "start": 495,
          "end": 507
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 512,
          "end": 513
        },
        "start": 495,
        "end": 513
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 529,
                "end": 541
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: (\"1\" & true) === 1. Actual: ",
                    "raw": "'#2: (\"1\" & true) === 1. Actual: '",
                    "start": 542,
                    "end": 576
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": "1",
                          "raw": "\"1\"",
                          "start": 581,
                          "end": 584
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true",
                          "start": 587,
                          "end": 591
                        },
                        "start": 581,
                        "end": 591
                      },
                      "start": 580,
                      "end": 592
                    },
                    "start": 579,
                    "end": 593
                  },
                  "start": 542,
                  "end": 593
                }
              ],
              "start": 525,
              "end": 594
            },
            "start": 519,
            "end": 595
          }
        ],
        "start": 515,
        "end": 597
      },
      "alternate": null,
      "start": 491,
      "end": 597
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 618,
                "end": 625
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 626,
                  "end": 630
                }
              ],
              "start": 614,
              "end": 631
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 634,
              "end": 637
            },
            "start": 614,
            "end": 637
          },
          "start": 613,
          "end": 638
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 643,
          "end": 644
        },
        "start": 613,
        "end": 644
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 660,
                "end": 672
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: (new Boolean(true) & \"1\") === 1. Actual: ",
                    "raw": "'#3: (new Boolean(true) & \"1\") === 1. Actual: '",
                    "start": 673,
                    "end": 720
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 729,
                            "end": 736
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 737,
                              "end": 741
                            }
                          ],
                          "start": 725,
                          "end": 742
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "value": "1",
                          "raw": "\"1\"",
                          "start": 745,
                          "end": 748
                        },
                        "start": 725,
                        "end": 748
                      },
                      "start": 724,
                      "end": 749
                    },
                    "start": 723,
                    "end": 750
                  },
                  "start": 673,
                  "end": 750
                }
              ],
              "start": 656,
              "end": 751
            },
            "start": 650,
            "end": 752
          }
        ],
        "start": 646,
        "end": 754
      },
      "alternate": null,
      "start": 609,
      "end": 754
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 771,
              "end": 774
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 781,
                "end": 788
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 789,
                  "end": 793
                }
              ],
              "start": 777,
              "end": 794
            },
            "start": 771,
            "end": 794
          },
          "start": 770,
          "end": 795
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 800,
          "end": 801
        },
        "start": 770,
        "end": 801
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 817,
                "end": 829
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: (\"1\" & new Boolean(true)) === 1. Actual: ",
                    "raw": "'#4: (\"1\" & new Boolean(true)) === 1. Actual: '",
                    "start": 830,
                    "end": 877
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": "1",
                          "raw": "\"1\"",
                          "start": 882,
                          "end": 885
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 892,
                            "end": 899
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 900,
                              "end": 904
                            }
                          ],
                          "start": 888,
                          "end": 905
                        },
                        "start": 882,
                        "end": 905
                      },
                      "start": 881,
                      "end": 906
                    },
                    "start": 880,
                    "end": 907
                  },
                  "start": 830,
                  "end": 907
                }
              ],
              "start": 813,
              "end": 908
            },
            "start": 807,
            "end": 909
          }
        ],
        "start": 803,
        "end": 911
      },
      "alternate": null,
      "start": 766,
      "end": 911
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 928,
              "end": 932
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 939,
                "end": 945
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "1",
                  "raw": "\"1\"",
                  "start": 946,
                  "end": 949
                }
              ],
              "start": 935,
              "end": 950
            },
            "start": 928,
            "end": 950
          },
          "start": 927,
          "end": 951
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 956,
          "end": 957
        },
        "start": 927,
        "end": 957
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 973,
                "end": 985
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: (true & new String(\"1\")) === 1. Actual: ",
                    "raw": "'#5: (true & new String(\"1\")) === 1. Actual: '",
                    "start": 986,
                    "end": 1032
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true",
                          "start": 1037,
                          "end": 1041
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 1048,
                            "end": 1054
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "\"1\"",
                              "start": 1055,
                              "end": 1058
                            }
                          ],
                          "start": 1044,
                          "end": 1059
                        },
                        "start": 1037,
                        "end": 1059
                      },
                      "start": 1036,
                      "end": 1060
                    },
                    "start": 1035,
                    "end": 1061
                  },
                  "start": 986,
                  "end": 1061
                }
              ],
              "start": 969,
              "end": 1062
            },
            "start": 963,
            "end": 1063
          }
        ],
        "start": 959,
        "end": 1065
      },
      "alternate": null,
      "start": 923,
      "end": 1065
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1086,
                "end": 1092
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "1",
                  "raw": "\"1\"",
                  "start": 1093,
                  "end": 1096
                }
              ],
              "start": 1082,
              "end": 1097
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1100,
              "end": 1104
            },
            "start": 1082,
            "end": 1104
          },
          "start": 1081,
          "end": 1105
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1110,
          "end": 1111
        },
        "start": 1081,
        "end": 1111
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1127,
                "end": 1139
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: (new String(\"1\") & true) === 1. Actual: ",
                    "raw": "'#6: (new String(\"1\") & true) === 1. Actual: '",
                    "start": 1140,
                    "end": 1186
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 1195,
                            "end": 1201
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "\"1\"",
                              "start": 1202,
                              "end": 1205
                            }
                          ],
                          "start": 1191,
                          "end": 1206
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true",
                          "start": 1209,
                          "end": 1213
                        },
                        "start": 1191,
                        "end": 1213
                      },
                      "start": 1190,
                      "end": 1214
                    },
                    "start": 1189,
                    "end": 1215
                  },
                  "start": 1140,
                  "end": 1215
                }
              ],
              "start": 1123,
              "end": 1216
            },
            "start": 1117,
            "end": 1217
          }
        ],
        "start": 1113,
        "end": 1219
      },
      "alternate": null,
      "start": 1077,
      "end": 1219
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 1240,
                "end": 1247
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1248,
                  "end": 1252
                }
              ],
              "start": 1236,
              "end": 1253
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1260,
                "end": 1266
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "1",
                  "raw": "\"1\"",
                  "start": 1267,
                  "end": 1270
                }
              ],
              "start": 1256,
              "end": 1271
            },
            "start": 1236,
            "end": 1271
          },
          "start": 1235,
          "end": 1272
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1277,
          "end": 1278
        },
        "start": 1235,
        "end": 1278
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1294,
                "end": 1306
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: (new Boolean(true) & new String(\"1\")) === 1. Actual: ",
                    "raw": "'#7: (new Boolean(true) & new String(\"1\")) === 1. Actual: '",
                    "start": 1307,
                    "end": 1366
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 1375,
                            "end": 1382
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 1383,
                              "end": 1387
                            }
                          ],
                          "start": 1371,
                          "end": 1388
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 1395,
                            "end": 1401
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "\"1\"",
                              "start": 1402,
                              "end": 1405
                            }
                          ],
                          "start": 1391,
                          "end": 1406
                        },
                        "start": 1371,
                        "end": 1406
                      },
                      "start": 1370,
                      "end": 1407
                    },
                    "start": 1369,
                    "end": 1408
                  },
                  "start": 1307,
                  "end": 1408
                }
              ],
              "start": 1290,
              "end": 1409
            },
            "start": 1284,
            "end": 1410
          }
        ],
        "start": 1280,
        "end": 1412
      },
      "alternate": null,
      "start": 1231,
      "end": 1412
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1433,
                "end": 1439
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "1",
                  "raw": "\"1\"",
                  "start": 1440,
                  "end": 1443
                }
              ],
              "start": 1429,
              "end": 1444
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Boolean",
                "start": 1451,
                "end": 1458
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1459,
                  "end": 1463
                }
              ],
              "start": 1447,
              "end": 1464
            },
            "start": 1429,
            "end": 1464
          },
          "start": 1428,
          "end": 1465
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1470,
          "end": 1471
        },
        "start": 1428,
        "end": 1471
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1487,
                "end": 1499
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: (new String(\"1\") & new Boolean(true)) === 1. Actual: ",
                    "raw": "'#8: (new String(\"1\") & new Boolean(true)) === 1. Actual: '",
                    "start": 1500,
                    "end": 1559
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "String",
                            "start": 1568,
                            "end": 1574
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "1",
                              "raw": "\"1\"",
                              "start": 1575,
                              "end": 1578
                            }
                          ],
                          "start": 1564,
                          "end": 1579
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 1586,
                            "end": 1593
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true,
                              "raw": "true",
                              "start": 1594,
                              "end": 1598
                            }
                          ],
                          "start": 1582,
                          "end": 1599
                        },
                        "start": 1564,
                        "end": 1599
                      },
                      "start": 1563,
                      "end": 1600
                    },
                    "start": 1562,
                    "end": 1601
                  },
                  "start": 1500,
                  "end": 1601
                }
              ],
              "start": 1483,
              "end": 1602
            },
            "start": 1477,
            "end": 1603
          }
        ],
        "start": 1473,
        "end": 1605
      },
      "alternate": null,
      "start": 1424,
      "end": 1605
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1606
}