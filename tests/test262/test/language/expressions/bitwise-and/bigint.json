{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 712,
            "end": 718
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 719,
            "end": 728
          },
          "optional": false,
          "computed": false,
          "start": 712,
          "end": 728
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b00n",
              "bigint": "0",
              "start": 729,
              "end": 734
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b00n",
              "bigint": "0",
              "start": 737,
              "end": 742
            },
            "start": 729,
            "end": 742
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b00n",
            "bigint": "0",
            "start": 744,
            "end": 749
          },
          {
            "type": "Literal",
            "value": "0b00n & 0b00n === 0b00n",
            "raw": "\"0b00n & 0b00n === 0b00n\"",
            "start": 751,
            "end": 776
          }
        ],
        "optional": false,
        "start": 712,
        "end": 777
      },
      "start": 712,
      "end": 778
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 779,
            "end": 785
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 786,
            "end": 795
          },
          "optional": false,
          "computed": false,
          "start": 779,
          "end": 795
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b00n",
              "bigint": "0",
              "start": 796,
              "end": 801
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b01n",
              "bigint": "1",
              "start": 804,
              "end": 809
            },
            "start": 796,
            "end": 809
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b00n",
            "bigint": "0",
            "start": 811,
            "end": 816
          },
          {
            "type": "Literal",
            "value": "0b00n & 0b01n === 0b00n",
            "raw": "\"0b00n & 0b01n === 0b00n\"",
            "start": 818,
            "end": 843
          }
        ],
        "optional": false,
        "start": 779,
        "end": 844
      },
      "start": 779,
      "end": 845
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 846,
            "end": 852
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 853,
            "end": 862
          },
          "optional": false,
          "computed": false,
          "start": 846,
          "end": 862
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b01n",
              "bigint": "1",
              "start": 863,
              "end": 868
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b00n",
              "bigint": "0",
              "start": 871,
              "end": 876
            },
            "start": 863,
            "end": 876
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b00n",
            "bigint": "0",
            "start": 878,
            "end": 883
          },
          {
            "type": "Literal",
            "value": "0b01n & 0b00n === 0b00n",
            "raw": "\"0b01n & 0b00n === 0b00n\"",
            "start": 885,
            "end": 910
          }
        ],
        "optional": false,
        "start": 846,
        "end": 911
      },
      "start": 846,
      "end": 912
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 913,
            "end": 919
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 920,
            "end": 929
          },
          "optional": false,
          "computed": false,
          "start": 913,
          "end": 929
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b00n",
              "bigint": "0",
              "start": 930,
              "end": 935
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b10n",
              "bigint": "2",
              "start": 938,
              "end": 943
            },
            "start": 930,
            "end": 943
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b00n",
            "bigint": "0",
            "start": 945,
            "end": 950
          },
          {
            "type": "Literal",
            "value": "0b00n & 0b10n === 0b00n",
            "raw": "\"0b00n & 0b10n === 0b00n\"",
            "start": 952,
            "end": 977
          }
        ],
        "optional": false,
        "start": 913,
        "end": 978
      },
      "start": 913,
      "end": 979
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 980,
            "end": 986
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 987,
            "end": 996
          },
          "optional": false,
          "computed": false,
          "start": 980,
          "end": 996
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b10n",
              "bigint": "2",
              "start": 997,
              "end": 1002
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b00n",
              "bigint": "0",
              "start": 1005,
              "end": 1010
            },
            "start": 997,
            "end": 1010
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b00n",
            "bigint": "0",
            "start": 1012,
            "end": 1017
          },
          {
            "type": "Literal",
            "value": "0b10n & 0b00n === 0b00n",
            "raw": "\"0b10n & 0b00n === 0b00n\"",
            "start": 1019,
            "end": 1044
          }
        ],
        "optional": false,
        "start": 980,
        "end": 1045
      },
      "start": 980,
      "end": 1046
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1047,
            "end": 1053
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1054,
            "end": 1063
          },
          "optional": false,
          "computed": false,
          "start": 1047,
          "end": 1063
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b00n",
              "bigint": "0",
              "start": 1064,
              "end": 1069
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b11n",
              "bigint": "3",
              "start": 1072,
              "end": 1077
            },
            "start": 1064,
            "end": 1077
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b00n",
            "bigint": "0",
            "start": 1079,
            "end": 1084
          },
          {
            "type": "Literal",
            "value": "0b00n & 0b11n === 0b00n",
            "raw": "\"0b00n & 0b11n === 0b00n\"",
            "start": 1086,
            "end": 1111
          }
        ],
        "optional": false,
        "start": 1047,
        "end": 1112
      },
      "start": 1047,
      "end": 1113
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1114,
            "end": 1120
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1121,
            "end": 1130
          },
          "optional": false,
          "computed": false,
          "start": 1114,
          "end": 1130
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b11n",
              "bigint": "3",
              "start": 1131,
              "end": 1136
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b00n",
              "bigint": "0",
              "start": 1139,
              "end": 1144
            },
            "start": 1131,
            "end": 1144
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b00n",
            "bigint": "0",
            "start": 1146,
            "end": 1151
          },
          {
            "type": "Literal",
            "value": "0b11n & 0b00n === 0b00n",
            "raw": "\"0b11n & 0b00n === 0b00n\"",
            "start": 1153,
            "end": 1178
          }
        ],
        "optional": false,
        "start": 1114,
        "end": 1179
      },
      "start": 1114,
      "end": 1180
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1181,
            "end": 1187
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1188,
            "end": 1197
          },
          "optional": false,
          "computed": false,
          "start": 1181,
          "end": 1197
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b01n",
              "bigint": "1",
              "start": 1198,
              "end": 1203
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b01n",
              "bigint": "1",
              "start": 1206,
              "end": 1211
            },
            "start": 1198,
            "end": 1211
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b01n",
            "bigint": "1",
            "start": 1213,
            "end": 1218
          },
          {
            "type": "Literal",
            "value": "0b01n & 0b01n === 0b01n",
            "raw": "\"0b01n & 0b01n === 0b01n\"",
            "start": 1220,
            "end": 1245
          }
        ],
        "optional": false,
        "start": 1181,
        "end": 1246
      },
      "start": 1181,
      "end": 1247
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1248,
            "end": 1254
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1255,
            "end": 1264
          },
          "optional": false,
          "computed": false,
          "start": 1248,
          "end": 1264
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b01n",
              "bigint": "1",
              "start": 1265,
              "end": 1270
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b10n",
              "bigint": "2",
              "start": 1273,
              "end": 1278
            },
            "start": 1265,
            "end": 1278
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b00n",
            "bigint": "0",
            "start": 1280,
            "end": 1285
          },
          {
            "type": "Literal",
            "value": "0b01n & 0b10n === 0b00n",
            "raw": "\"0b01n & 0b10n === 0b00n\"",
            "start": 1287,
            "end": 1312
          }
        ],
        "optional": false,
        "start": 1248,
        "end": 1313
      },
      "start": 1248,
      "end": 1314
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1315,
            "end": 1321
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1322,
            "end": 1331
          },
          "optional": false,
          "computed": false,
          "start": 1315,
          "end": 1331
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b10n",
              "bigint": "2",
              "start": 1332,
              "end": 1337
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b01n",
              "bigint": "1",
              "start": 1340,
              "end": 1345
            },
            "start": 1332,
            "end": 1345
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b00n",
            "bigint": "0",
            "start": 1347,
            "end": 1352
          },
          {
            "type": "Literal",
            "value": "0b10n & 0b01n === 0b00n",
            "raw": "\"0b10n & 0b01n === 0b00n\"",
            "start": 1354,
            "end": 1379
          }
        ],
        "optional": false,
        "start": 1315,
        "end": 1380
      },
      "start": 1315,
      "end": 1381
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1382,
            "end": 1388
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1389,
            "end": 1398
          },
          "optional": false,
          "computed": false,
          "start": 1382,
          "end": 1398
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b01n",
              "bigint": "1",
              "start": 1399,
              "end": 1404
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b11n",
              "bigint": "3",
              "start": 1407,
              "end": 1412
            },
            "start": 1399,
            "end": 1412
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b01n",
            "bigint": "1",
            "start": 1414,
            "end": 1419
          },
          {
            "type": "Literal",
            "value": "0b01n & 0b11n === 0b01n",
            "raw": "\"0b01n & 0b11n === 0b01n\"",
            "start": 1421,
            "end": 1446
          }
        ],
        "optional": false,
        "start": 1382,
        "end": 1447
      },
      "start": 1382,
      "end": 1448
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1449,
            "end": 1455
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1456,
            "end": 1465
          },
          "optional": false,
          "computed": false,
          "start": 1449,
          "end": 1465
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b11n",
              "bigint": "3",
              "start": 1466,
              "end": 1471
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b01n",
              "bigint": "1",
              "start": 1474,
              "end": 1479
            },
            "start": 1466,
            "end": 1479
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b01n",
            "bigint": "1",
            "start": 1481,
            "end": 1486
          },
          {
            "type": "Literal",
            "value": "0b11n & 0b01n === 0b01n",
            "raw": "\"0b11n & 0b01n === 0b01n\"",
            "start": 1488,
            "end": 1513
          }
        ],
        "optional": false,
        "start": 1449,
        "end": 1514
      },
      "start": 1449,
      "end": 1515
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1516,
            "end": 1522
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1523,
            "end": 1532
          },
          "optional": false,
          "computed": false,
          "start": 1516,
          "end": 1532
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b10n",
              "bigint": "2",
              "start": 1533,
              "end": 1538
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b10n",
              "bigint": "2",
              "start": 1541,
              "end": 1546
            },
            "start": 1533,
            "end": 1546
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b10n",
            "bigint": "2",
            "start": 1548,
            "end": 1553
          },
          {
            "type": "Literal",
            "value": "0b10n & 0b10n === 0b10n",
            "raw": "\"0b10n & 0b10n === 0b10n\"",
            "start": 1555,
            "end": 1580
          }
        ],
        "optional": false,
        "start": 1516,
        "end": 1581
      },
      "start": 1516,
      "end": 1582
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1583,
            "end": 1589
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1590,
            "end": 1599
          },
          "optional": false,
          "computed": false,
          "start": 1583,
          "end": 1599
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b10n",
              "bigint": "2",
              "start": 1600,
              "end": 1605
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b11n",
              "bigint": "3",
              "start": 1608,
              "end": 1613
            },
            "start": 1600,
            "end": 1613
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b10n",
            "bigint": "2",
            "start": 1615,
            "end": 1620
          },
          {
            "type": "Literal",
            "value": "0b10n & 0b11n === 0b10n",
            "raw": "\"0b10n & 0b11n === 0b10n\"",
            "start": 1622,
            "end": 1647
          }
        ],
        "optional": false,
        "start": 1583,
        "end": 1648
      },
      "start": 1583,
      "end": 1649
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1650,
            "end": 1656
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1657,
            "end": 1666
          },
          "optional": false,
          "computed": false,
          "start": 1650,
          "end": 1666
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0b11n",
              "bigint": "3",
              "start": 1667,
              "end": 1672
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0b10n",
              "bigint": "2",
              "start": 1675,
              "end": 1680
            },
            "start": 1667,
            "end": 1680
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0b10n",
            "bigint": "2",
            "start": 1682,
            "end": 1687
          },
          {
            "type": "Literal",
            "value": "0b11n & 0b10n === 0b10n",
            "raw": "\"0b11n & 0b10n === 0b10n\"",
            "start": 1689,
            "end": 1714
          }
        ],
        "optional": false,
        "start": 1650,
        "end": 1715
      },
      "start": 1650,
      "end": 1716
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1717,
            "end": 1723
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1724,
            "end": 1733
          },
          "optional": false,
          "computed": false,
          "start": 1717,
          "end": 1733
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "4294967295",
              "start": 1734,
              "end": 1745
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0n",
              "bigint": "0",
              "start": 1748,
              "end": 1750
            },
            "start": 1734,
            "end": 1750
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 1752,
            "end": 1754
          },
          {
            "type": "Literal",
            "value": "0xffffffffn & 0n === 0n",
            "raw": "\"0xffffffffn & 0n === 0n\"",
            "start": 1756,
            "end": 1781
          }
        ],
        "optional": false,
        "start": 1717,
        "end": 1782
      },
      "start": 1717,
      "end": 1783
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1784,
            "end": 1790
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1791,
            "end": 1800
          },
          "optional": false,
          "computed": false,
          "start": 1784,
          "end": 1800
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0n",
              "bigint": "0",
              "start": 1801,
              "end": 1803
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "4294967295",
              "start": 1806,
              "end": 1817
            },
            "start": 1801,
            "end": 1817
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 1819,
            "end": 1821
          },
          {
            "type": "Literal",
            "value": "0n & 0xffffffffn === 0n",
            "raw": "\"0n & 0xffffffffn === 0n\"",
            "start": 1823,
            "end": 1848
          }
        ],
        "optional": false,
        "start": 1784,
        "end": 1849
      },
      "start": 1784,
      "end": 1850
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1851,
            "end": 1857
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1858,
            "end": 1867
          },
          "optional": false,
          "computed": false,
          "start": 1851,
          "end": 1867
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "4294967295",
              "start": 1868,
              "end": 1879
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "4294967295",
              "start": 1882,
              "end": 1893
            },
            "start": 1868,
            "end": 1893
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xffffffffn",
            "bigint": "4294967295",
            "start": 1895,
            "end": 1906
          },
          {
            "type": "Literal",
            "value": "0xffffffffn & 0xffffffffn === 0xffffffffn",
            "raw": "\"0xffffffffn & 0xffffffffn === 0xffffffffn\"",
            "start": 1908,
            "end": 1951
          }
        ],
        "optional": false,
        "start": 1851,
        "end": 1952
      },
      "start": 1851,
      "end": 1953
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1954,
            "end": 1960
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1961,
            "end": 1970
          },
          "optional": false,
          "computed": false,
          "start": 1954,
          "end": 1970
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "18446744073709551615",
              "start": 1971,
              "end": 1990
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0n",
              "bigint": "0",
              "start": 1993,
              "end": 1995
            },
            "start": 1971,
            "end": 1995
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 1997,
            "end": 1999
          },
          {
            "type": "Literal",
            "value": "0xffffffffffffffffn & 0n === 0n",
            "raw": "\"0xffffffffffffffffn & 0n === 0n\"",
            "start": 2001,
            "end": 2034
          }
        ],
        "optional": false,
        "start": 1954,
        "end": 2035
      },
      "start": 1954,
      "end": 2036
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2037,
            "end": 2043
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2044,
            "end": 2053
          },
          "optional": false,
          "computed": false,
          "start": 2037,
          "end": 2053
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0n",
              "bigint": "0",
              "start": 2054,
              "end": 2056
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "18446744073709551615",
              "start": 2059,
              "end": 2078
            },
            "start": 2054,
            "end": 2078
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 2080,
            "end": 2082
          },
          {
            "type": "Literal",
            "value": "0n & 0xffffffffffffffffn === 0n",
            "raw": "\"0n & 0xffffffffffffffffn === 0n\"",
            "start": 2084,
            "end": 2117
          }
        ],
        "optional": false,
        "start": 2037,
        "end": 2118
      },
      "start": 2037,
      "end": 2119
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2120,
            "end": 2126
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2127,
            "end": 2136
          },
          "optional": false,
          "computed": false,
          "start": 2120,
          "end": 2136
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "18446744073709551615",
              "start": 2137,
              "end": 2156
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "4294967295",
              "start": 2159,
              "end": 2170
            },
            "start": 2137,
            "end": 2170
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xffffffffn",
            "bigint": "4294967295",
            "start": 2172,
            "end": 2183
          },
          {
            "type": "Literal",
            "value": "0xffffffffffffffffn & 0xffffffffn === 0xffffffffn",
            "raw": "\"0xffffffffffffffffn & 0xffffffffn === 0xffffffffn\"",
            "start": 2185,
            "end": 2236
          }
        ],
        "optional": false,
        "start": 2120,
        "end": 2237
      },
      "start": 2120,
      "end": 2238
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2239,
            "end": 2245
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2246,
            "end": 2255
          },
          "optional": false,
          "computed": false,
          "start": 2239,
          "end": 2255
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "4294967295",
              "start": 2256,
              "end": 2267
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "18446744073709551615",
              "start": 2270,
              "end": 2289
            },
            "start": 2256,
            "end": 2289
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xffffffffn",
            "bigint": "4294967295",
            "start": 2291,
            "end": 2302
          },
          {
            "type": "Literal",
            "value": "0xffffffffn & 0xffffffffffffffffn === 0xffffffffn",
            "raw": "\"0xffffffffn & 0xffffffffffffffffn === 0xffffffffn\"",
            "start": 2304,
            "end": 2355
          }
        ],
        "optional": false,
        "start": 2239,
        "end": 2356
      },
      "start": 2239,
      "end": 2357
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2358,
            "end": 2364
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2365,
            "end": 2374
          },
          "optional": false,
          "computed": false,
          "start": 2358,
          "end": 2374
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "18446744073709551615",
              "start": 2378,
              "end": 2397
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "18446744073709551615",
              "start": 2400,
              "end": 2419
            },
            "start": 2378,
            "end": 2419
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xffffffffffffffffn",
            "bigint": "18446744073709551615",
            "start": 2421,
            "end": 2440
          },
          {
            "type": "Literal",
            "value": "0xffffffffffffffffn & 0xffffffffffffffffn === 0xffffffffffffffffn",
            "raw": "\"0xffffffffffffffffn & 0xffffffffffffffffn === 0xffffffffffffffffn\"",
            "start": 2444,
            "end": 2511
          }
        ],
        "optional": false,
        "start": 2358,
        "end": 2512
      },
      "start": 2358,
      "end": 2513
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2514,
            "end": 2520
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2521,
            "end": 2530
          },
          "optional": false,
          "computed": false,
          "start": 2514,
          "end": 2530
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
              "bigint": "254125715536285641815112686497309415296",
              "start": 2534,
              "end": 2569
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x4aabef2324cedff5387f1f65n",
              "bigint": "23109746335811388574424571749",
              "start": 2572,
              "end": 2599
            },
            "start": 2534,
            "end": 2599
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x42092803008e813400181700n",
            "bigint": "20437079930624964712377882368",
            "start": 2601,
            "end": 2628
          },
          {
            "type": "Literal",
            "value": "0xbf2ed51ff75d380fd3be813ec6185780n & 0x4aabef2324cedff5387f1f65n === 0x42092803008e813400181700n",
            "raw": "\"0xbf2ed51ff75d380fd3be813ec6185780n & 0x4aabef2324cedff5387f1f65n === 0x42092803008e813400181700n\"",
            "start": 2632,
            "end": 2731
          }
        ],
        "optional": false,
        "start": 2514,
        "end": 2732
      },
      "start": 2514,
      "end": 2733
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2734,
            "end": 2740
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2741,
            "end": 2750
          },
          "optional": false,
          "computed": false,
          "start": 2734,
          "end": 2750
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x4aabef2324cedff5387f1f65n",
              "bigint": "23109746335811388574424571749",
              "start": 2754,
              "end": 2781
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
              "bigint": "254125715536285641815112686497309415296",
              "start": 2784,
              "end": 2819
            },
            "start": 2754,
            "end": 2819
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x42092803008e813400181700n",
            "bigint": "20437079930624964712377882368",
            "start": 2821,
            "end": 2848
          },
          {
            "type": "Literal",
            "value": "0x4aabef2324cedff5387f1f65n & 0xbf2ed51ff75d380fd3be813ec6185780n === 0x42092803008e813400181700n",
            "raw": "\"0x4aabef2324cedff5387f1f65n & 0xbf2ed51ff75d380fd3be813ec6185780n === 0x42092803008e813400181700n\"",
            "start": 2852,
            "end": 2951
          }
        ],
        "optional": false,
        "start": 2734,
        "end": 2952
      },
      "start": 2734,
      "end": 2953
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2954,
            "end": 2960
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2961,
            "end": 2970
          },
          "optional": false,
          "computed": false,
          "start": 2954,
          "end": 2970
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0n",
              "bigint": "0",
              "start": 2971,
              "end": 2973
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "1n",
                "bigint": "1",
                "start": 2977,
                "end": 2979
              },
              "prefix": true,
              "start": 2976,
              "end": 2979
            },
            "start": 2971,
            "end": 2979
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 2981,
            "end": 2983
          },
          {
            "type": "Literal",
            "value": "0n & -1n === 0n",
            "raw": "\"0n & -1n === 0n\"",
            "start": 2985,
            "end": 3002
          }
        ],
        "optional": false,
        "start": 2954,
        "end": 3003
      },
      "start": 2954,
      "end": 3004
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3005,
            "end": 3011
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3012,
            "end": 3021
          },
          "optional": false,
          "computed": false,
          "start": 3005,
          "end": 3021
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "1n",
                "bigint": "1",
                "start": 3023,
                "end": 3025
              },
              "prefix": true,
              "start": 3022,
              "end": 3025
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0n",
              "bigint": "0",
              "start": 3028,
              "end": 3030
            },
            "start": 3022,
            "end": 3030
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 3032,
            "end": 3034
          },
          {
            "type": "Literal",
            "value": "-1n & 0n === 0n",
            "raw": "\"-1n & 0n === 0n\"",
            "start": 3036,
            "end": 3053
          }
        ],
        "optional": false,
        "start": 3005,
        "end": 3054
      },
      "start": 3005,
      "end": 3055
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3056,
            "end": 3062
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3063,
            "end": 3072
          },
          "optional": false,
          "computed": false,
          "start": 3056,
          "end": 3072
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0n",
              "bigint": "0",
              "start": 3073,
              "end": 3075
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "2n",
                "bigint": "2",
                "start": 3079,
                "end": 3081
              },
              "prefix": true,
              "start": 3078,
              "end": 3081
            },
            "start": 3073,
            "end": 3081
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 3083,
            "end": 3085
          },
          {
            "type": "Literal",
            "value": "0n & -2n === 0n",
            "raw": "\"0n & -2n === 0n\"",
            "start": 3087,
            "end": 3104
          }
        ],
        "optional": false,
        "start": 3056,
        "end": 3105
      },
      "start": 3056,
      "end": 3106
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3107,
            "end": 3113
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3114,
            "end": 3123
          },
          "optional": false,
          "computed": false,
          "start": 3107,
          "end": 3123
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "2n",
                "bigint": "2",
                "start": 3125,
                "end": 3127
              },
              "prefix": true,
              "start": 3124,
              "end": 3127
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0n",
              "bigint": "0",
              "start": 3130,
              "end": 3132
            },
            "start": 3124,
            "end": 3132
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 3134,
            "end": 3136
          },
          {
            "type": "Literal",
            "value": "-2n & 0n === 0n",
            "raw": "\"-2n & 0n === 0n\"",
            "start": 3138,
            "end": 3155
          }
        ],
        "optional": false,
        "start": 3107,
        "end": 3156
      },
      "start": 3107,
      "end": 3157
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3158,
            "end": 3164
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3165,
            "end": 3174
          },
          "optional": false,
          "computed": false,
          "start": 3158,
          "end": 3174
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 3175,
              "end": 3177
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "2n",
                "bigint": "2",
                "start": 3181,
                "end": 3183
              },
              "prefix": true,
              "start": 3180,
              "end": 3183
            },
            "start": 3175,
            "end": 3183
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 3185,
            "end": 3187
          },
          {
            "type": "Literal",
            "value": "1n & -2n === 0n",
            "raw": "\"1n & -2n === 0n\"",
            "start": 3189,
            "end": 3206
          }
        ],
        "optional": false,
        "start": 3158,
        "end": 3207
      },
      "start": 3158,
      "end": 3208
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3209,
            "end": 3215
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3216,
            "end": 3225
          },
          "optional": false,
          "computed": false,
          "start": 3209,
          "end": 3225
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "2n",
                "bigint": "2",
                "start": 3227,
                "end": 3229
              },
              "prefix": true,
              "start": 3226,
              "end": 3229
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "1n",
              "bigint": "1",
              "start": 3232,
              "end": 3234
            },
            "start": 3226,
            "end": 3234
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 3236,
            "end": 3238
          },
          {
            "type": "Literal",
            "value": "-2n & 1n === 0n",
            "raw": "\"-2n & 1n === 0n\"",
            "start": 3240,
            "end": 3257
          }
        ],
        "optional": false,
        "start": 3209,
        "end": 3258
      },
      "start": 3209,
      "end": 3259
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3260,
            "end": 3266
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3267,
            "end": 3276
          },
          "optional": false,
          "computed": false,
          "start": 3260,
          "end": 3276
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 3277,
              "end": 3279
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "2n",
                "bigint": "2",
                "start": 3283,
                "end": 3285
              },
              "prefix": true,
              "start": 3282,
              "end": 3285
            },
            "start": 3277,
            "end": 3285
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 3287,
            "end": 3289
          },
          {
            "type": "Literal",
            "value": "2n & -2n === 2n",
            "raw": "\"2n & -2n === 2n\"",
            "start": 3291,
            "end": 3308
          }
        ],
        "optional": false,
        "start": 3260,
        "end": 3309
      },
      "start": 3260,
      "end": 3310
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3311,
            "end": 3317
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3318,
            "end": 3327
          },
          "optional": false,
          "computed": false,
          "start": 3311,
          "end": 3327
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "2n",
                "bigint": "2",
                "start": 3329,
                "end": 3331
              },
              "prefix": true,
              "start": 3328,
              "end": 3331
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 3334,
              "end": 3336
            },
            "start": 3328,
            "end": 3336
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "2n",
            "bigint": "2",
            "start": 3338,
            "end": 3340
          },
          {
            "type": "Literal",
            "value": "-2n & 2n === 2n",
            "raw": "\"-2n & 2n === 2n\"",
            "start": 3342,
            "end": 3359
          }
        ],
        "optional": false,
        "start": 3311,
        "end": 3360
      },
      "start": 3311,
      "end": 3361
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3362,
            "end": 3368
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3369,
            "end": 3378
          },
          "optional": false,
          "computed": false,
          "start": 3362,
          "end": 3378
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 3379,
              "end": 3381
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "3n",
                "bigint": "3",
                "start": 3385,
                "end": 3387
              },
              "prefix": true,
              "start": 3384,
              "end": 3387
            },
            "start": 3379,
            "end": 3387
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 3389,
            "end": 3391
          },
          {
            "type": "Literal",
            "value": "2n & -3n === 0n",
            "raw": "\"2n & -3n === 0n\"",
            "start": 3393,
            "end": 3410
          }
        ],
        "optional": false,
        "start": 3362,
        "end": 3411
      },
      "start": 3362,
      "end": 3412
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3413,
            "end": 3419
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3420,
            "end": 3429
          },
          "optional": false,
          "computed": false,
          "start": 3413,
          "end": 3429
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "3n",
                "bigint": "3",
                "start": 3431,
                "end": 3433
              },
              "prefix": true,
              "start": 3430,
              "end": 3433
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 3436,
              "end": 3438
            },
            "start": 3430,
            "end": 3438
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 3440,
            "end": 3442
          },
          {
            "type": "Literal",
            "value": "-3n & 2n === 0n",
            "raw": "\"-3n & 2n === 0n\"",
            "start": 3444,
            "end": 3461
          }
        ],
        "optional": false,
        "start": 3413,
        "end": 3462
      },
      "start": 3413,
      "end": 3463
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3464,
            "end": 3470
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3471,
            "end": 3480
          },
          "optional": false,
          "computed": false,
          "start": 3464,
          "end": 3480
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "1n",
                "bigint": "1",
                "start": 3482,
                "end": 3484
              },
              "prefix": true,
              "start": 3481,
              "end": 3484
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "2n",
                "bigint": "2",
                "start": 3488,
                "end": 3490
              },
              "prefix": true,
              "start": 3487,
              "end": 3490
            },
            "start": 3481,
            "end": 3490
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 3493,
              "end": 3495
            },
            "prefix": true,
            "start": 3492,
            "end": 3495
          },
          {
            "type": "Literal",
            "value": "-1n & -2n === -2n",
            "raw": "\"-1n & -2n === -2n\"",
            "start": 3497,
            "end": 3516
          }
        ],
        "optional": false,
        "start": 3464,
        "end": 3517
      },
      "start": 3464,
      "end": 3518
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3519,
            "end": 3525
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3526,
            "end": 3535
          },
          "optional": false,
          "computed": false,
          "start": 3519,
          "end": 3535
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "2n",
                "bigint": "2",
                "start": 3537,
                "end": 3539
              },
              "prefix": true,
              "start": 3536,
              "end": 3539
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "1n",
                "bigint": "1",
                "start": 3543,
                "end": 3545
              },
              "prefix": true,
              "start": 3542,
              "end": 3545
            },
            "start": 3536,
            "end": 3545
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 3548,
              "end": 3550
            },
            "prefix": true,
            "start": 3547,
            "end": 3550
          },
          {
            "type": "Literal",
            "value": "-2n & -1n === -2n",
            "raw": "\"-2n & -1n === -2n\"",
            "start": 3552,
            "end": 3571
          }
        ],
        "optional": false,
        "start": 3519,
        "end": 3572
      },
      "start": 3519,
      "end": 3573
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3574,
            "end": 3580
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3581,
            "end": 3590
          },
          "optional": false,
          "computed": false,
          "start": 3574,
          "end": 3590
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "2n",
                "bigint": "2",
                "start": 3592,
                "end": 3594
              },
              "prefix": true,
              "start": 3591,
              "end": 3594
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "2n",
                "bigint": "2",
                "start": 3598,
                "end": 3600
              },
              "prefix": true,
              "start": 3597,
              "end": 3600
            },
            "start": 3591,
            "end": 3600
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "2n",
              "bigint": "2",
              "start": 3603,
              "end": 3605
            },
            "prefix": true,
            "start": 3602,
            "end": 3605
          },
          {
            "type": "Literal",
            "value": "-2n & -2n === -2n",
            "raw": "\"-2n & -2n === -2n\"",
            "start": 3607,
            "end": 3626
          }
        ],
        "optional": false,
        "start": 3574,
        "end": 3627
      },
      "start": 3574,
      "end": 3628
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3629,
            "end": 3635
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3636,
            "end": 3645
          },
          "optional": false,
          "computed": false,
          "start": 3629,
          "end": 3645
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "2n",
                "bigint": "2",
                "start": 3647,
                "end": 3649
              },
              "prefix": true,
              "start": 3646,
              "end": 3649
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "3n",
                "bigint": "3",
                "start": 3653,
                "end": 3655
              },
              "prefix": true,
              "start": 3652,
              "end": 3655
            },
            "start": 3646,
            "end": 3655
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "4n",
              "bigint": "4",
              "start": 3658,
              "end": 3660
            },
            "prefix": true,
            "start": 3657,
            "end": 3660
          },
          {
            "type": "Literal",
            "value": "-2n & -3n === -4n",
            "raw": "\"-2n & -3n === -4n\"",
            "start": 3662,
            "end": 3681
          }
        ],
        "optional": false,
        "start": 3629,
        "end": 3682
      },
      "start": 3629,
      "end": 3683
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3684,
            "end": 3690
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3691,
            "end": 3700
          },
          "optional": false,
          "computed": false,
          "start": 3684,
          "end": 3700
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "3n",
                "bigint": "3",
                "start": 3702,
                "end": 3704
              },
              "prefix": true,
              "start": 3701,
              "end": 3704
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "2n",
                "bigint": "2",
                "start": 3708,
                "end": 3710
              },
              "prefix": true,
              "start": 3707,
              "end": 3710
            },
            "start": 3701,
            "end": 3710
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "4n",
              "bigint": "4",
              "start": 3713,
              "end": 3715
            },
            "prefix": true,
            "start": 3712,
            "end": 3715
          },
          {
            "type": "Literal",
            "value": "-3n & -2n === -4n",
            "raw": "\"-3n & -2n === -4n\"",
            "start": 3717,
            "end": 3736
          }
        ],
        "optional": false,
        "start": 3684,
        "end": 3737
      },
      "start": 3684,
      "end": 3738
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3739,
            "end": 3745
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3746,
            "end": 3755
          },
          "optional": false,
          "computed": false,
          "start": 3739,
          "end": 3755
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "4294967295",
              "start": 3756,
              "end": 3767
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "1n",
                "bigint": "1",
                "start": 3771,
                "end": 3773
              },
              "prefix": true,
              "start": 3770,
              "end": 3773
            },
            "start": 3756,
            "end": 3773
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xffffffffn",
            "bigint": "4294967295",
            "start": 3775,
            "end": 3786
          },
          {
            "type": "Literal",
            "value": "0xffffffffn & -1n === 0xffffffffn",
            "raw": "\"0xffffffffn & -1n === 0xffffffffn\"",
            "start": 3788,
            "end": 3823
          }
        ],
        "optional": false,
        "start": 3739,
        "end": 3824
      },
      "start": 3739,
      "end": 3825
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3826,
            "end": 3832
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3833,
            "end": 3842
          },
          "optional": false,
          "computed": false,
          "start": 3826,
          "end": 3842
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "1n",
                "bigint": "1",
                "start": 3844,
                "end": 3846
              },
              "prefix": true,
              "start": 3843,
              "end": 3846
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "4294967295",
              "start": 3849,
              "end": 3860
            },
            "start": 3843,
            "end": 3860
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xffffffffn",
            "bigint": "4294967295",
            "start": 3862,
            "end": 3873
          },
          {
            "type": "Literal",
            "value": "-1n & 0xffffffffn === 0xffffffffn",
            "raw": "\"-1n & 0xffffffffn === 0xffffffffn\"",
            "start": 3875,
            "end": 3910
          }
        ],
        "optional": false,
        "start": 3826,
        "end": 3911
      },
      "start": 3826,
      "end": 3912
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 3913,
            "end": 3919
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 3920,
            "end": 3929
          },
          "optional": false,
          "computed": false,
          "start": 3913,
          "end": 3929
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "18446744073709551615",
              "start": 3930,
              "end": 3949
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "1n",
                "bigint": "1",
                "start": 3953,
                "end": 3955
              },
              "prefix": true,
              "start": 3952,
              "end": 3955
            },
            "start": 3930,
            "end": 3955
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xffffffffffffffffn",
            "bigint": "18446744073709551615",
            "start": 3957,
            "end": 3976
          },
          {
            "type": "Literal",
            "value": "0xffffffffffffffffn & -1n === 0xffffffffffffffffn",
            "raw": "\"0xffffffffffffffffn & -1n === 0xffffffffffffffffn\"",
            "start": 3978,
            "end": 4029
          }
        ],
        "optional": false,
        "start": 3913,
        "end": 4030
      },
      "start": 3913,
      "end": 4031
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 4032,
            "end": 4038
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 4039,
            "end": 4048
          },
          "optional": false,
          "computed": false,
          "start": 4032,
          "end": 4048
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "1n",
                "bigint": "1",
                "start": 4050,
                "end": 4052
              },
              "prefix": true,
              "start": 4049,
              "end": 4052
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "18446744073709551615",
              "start": 4055,
              "end": 4074
            },
            "start": 4049,
            "end": 4074
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xffffffffffffffffn",
            "bigint": "18446744073709551615",
            "start": 4076,
            "end": 4095
          },
          {
            "type": "Literal",
            "value": "-1n & 0xffffffffffffffffn === 0xffffffffffffffffn",
            "raw": "\"-1n & 0xffffffffffffffffn === 0xffffffffffffffffn\"",
            "start": 4097,
            "end": 4148
          }
        ],
        "optional": false,
        "start": 4032,
        "end": 4149
      },
      "start": 4032,
      "end": 4150
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 4151,
            "end": 4157
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 4158,
            "end": 4167
          },
          "optional": false,
          "computed": false,
          "start": 4151,
          "end": 4167
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
              "bigint": "254125715536285641815112686497309415296",
              "start": 4171,
              "end": 4206
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x4aabef2324cedff5387f1f65n",
                "bigint": "23109746335811388574424571749",
                "start": 4210,
                "end": 4237
              },
              "prefix": true,
              "start": 4209,
              "end": 4237
            },
            "start": 4171,
            "end": 4237
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xbf2ed51fb554100cd330000ac6004080n",
            "bigint": "254125715515848561884487721784931532928",
            "start": 4239,
            "end": 4274
          },
          {
            "type": "Literal",
            "value": "0xbf2ed51ff75d380fd3be813ec6185780n & -0x4aabef2324cedff5387f1f65n === 0xbf2ed51fb554100cd330000ac6004080n",
            "raw": "\"0xbf2ed51ff75d380fd3be813ec6185780n & -0x4aabef2324cedff5387f1f65n === 0xbf2ed51fb554100cd330000ac6004080n\"",
            "start": 4278,
            "end": 4386
          }
        ],
        "optional": false,
        "start": 4151,
        "end": 4387
      },
      "start": 4151,
      "end": 4388
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 4389,
            "end": 4395
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 4396,
            "end": 4405
          },
          "optional": false,
          "computed": false,
          "start": 4389,
          "end": 4405
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x4aabef2324cedff5387f1f65n",
                "bigint": "23109746335811388574424571749",
                "start": 4410,
                "end": 4437
              },
              "prefix": true,
              "start": 4409,
              "end": 4437
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
              "bigint": "254125715536285641815112686497309415296",
              "start": 4440,
              "end": 4475
            },
            "start": 4409,
            "end": 4475
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0xbf2ed51fb554100cd330000ac6004080n",
            "bigint": "254125715515848561884487721784931532928",
            "start": 4477,
            "end": 4512
          },
          {
            "type": "Literal",
            "value": "-0x4aabef2324cedff5387f1f65n & 0xbf2ed51ff75d380fd3be813ec6185780n === 0xbf2ed51fb554100cd330000ac6004080n",
            "raw": "\"-0x4aabef2324cedff5387f1f65n & 0xbf2ed51ff75d380fd3be813ec6185780n === 0xbf2ed51fb554100cd330000ac6004080n\"",
            "start": 4516,
            "end": 4624
          }
        ],
        "optional": false,
        "start": 4389,
        "end": 4625
      },
      "start": 4389,
      "end": 4626
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 4627,
            "end": 4633
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 4634,
            "end": 4643
          },
          "optional": false,
          "computed": false,
          "start": 4627,
          "end": 4643
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
                "bigint": "254125715536285641815112686497309415296",
                "start": 4648,
                "end": 4683
              },
              "prefix": true,
              "start": 4647,
              "end": 4683
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x4aabef2324cedff5387f1f65n",
              "bigint": "23109746335811388574424571749",
              "start": 4686,
              "end": 4713
            },
            "start": 4647,
            "end": 4713
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x8a2c72024405ec138670800n",
            "bigint": "2672666405186423862046689280",
            "start": 4715,
            "end": 4741
          },
          {
            "type": "Literal",
            "value": "-0xbf2ed51ff75d380fd3be813ec6185780n & 0x4aabef2324cedff5387f1f65n === 0x8a2c72024405ec138670800n",
            "raw": "\"-0xbf2ed51ff75d380fd3be813ec6185780n & 0x4aabef2324cedff5387f1f65n === 0x8a2c72024405ec138670800n\"",
            "start": 4745,
            "end": 4844
          }
        ],
        "optional": false,
        "start": 4627,
        "end": 4845
      },
      "start": 4627,
      "end": 4846
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 4847,
            "end": 4853
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 4854,
            "end": 4863
          },
          "optional": false,
          "computed": false,
          "start": 4847,
          "end": 4863
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x4aabef2324cedff5387f1f65n",
              "bigint": "23109746335811388574424571749",
              "start": 4867,
              "end": 4894
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
                "bigint": "254125715536285641815112686497309415296",
                "start": 4898,
                "end": 4933
              },
              "prefix": true,
              "start": 4897,
              "end": 4933
            },
            "start": 4867,
            "end": 4933
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x8a2c72024405ec138670800n",
            "bigint": "2672666405186423862046689280",
            "start": 4935,
            "end": 4961
          },
          {
            "type": "Literal",
            "value": "0x4aabef2324cedff5387f1f65n & -0xbf2ed51ff75d380fd3be813ec6185780n === 0x8a2c72024405ec138670800n",
            "raw": "\"0x4aabef2324cedff5387f1f65n & -0xbf2ed51ff75d380fd3be813ec6185780n === 0x8a2c72024405ec138670800n\"",
            "start": 4965,
            "end": 5064
          }
        ],
        "optional": false,
        "start": 4847,
        "end": 5065
      },
      "start": 4847,
      "end": 5066
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5067,
            "end": 5073
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5074,
            "end": 5083
          },
          "optional": false,
          "computed": false,
          "start": 5067,
          "end": 5083
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
                "bigint": "254125715536285641815112686497309415296",
                "start": 5088,
                "end": 5123
              },
              "prefix": true,
              "start": 5087,
              "end": 5123
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x4aabef2324cedff5387f1f65n",
                "bigint": "23109746335811388574424571749",
                "start": 5127,
                "end": 5154
              },
              "prefix": true,
              "start": 5126,
              "end": 5154
            },
            "start": 5087,
            "end": 5154
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xbf2ed51fffffff2ff7fedffffe7f5f80n",
              "bigint": "254125715538958308220299110359356104576",
              "start": 5157,
              "end": 5192
            },
            "prefix": true,
            "start": 5156,
            "end": 5192
          },
          {
            "type": "Literal",
            "value": "-0xbf2ed51ff75d380fd3be813ec6185780n & -0x4aabef2324cedff5387f1f65n === -0xbf2ed51fffffff2ff7fedffffe7f5f80n",
            "raw": "\"-0xbf2ed51ff75d380fd3be813ec6185780n & -0x4aabef2324cedff5387f1f65n === -0xbf2ed51fffffff2ff7fedffffe7f5f80n\"",
            "start": 5196,
            "end": 5306
          }
        ],
        "optional": false,
        "start": 5067,
        "end": 5307
      },
      "start": 5067,
      "end": 5308
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5309,
            "end": 5315
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5316,
            "end": 5325
          },
          "optional": false,
          "computed": false,
          "start": 5309,
          "end": 5325
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0x4aabef2324cedff5387f1f65n",
                "bigint": "23109746335811388574424571749",
                "start": 5330,
                "end": 5357
              },
              "prefix": true,
              "start": 5329,
              "end": 5357
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
                "bigint": "254125715536285641815112686497309415296",
                "start": 5361,
                "end": 5396
              },
              "prefix": true,
              "start": 5360,
              "end": 5396
            },
            "start": 5329,
            "end": 5396
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": null,
              "raw": "0xbf2ed51fffffff2ff7fedffffe7f5f80n",
              "bigint": "254125715538958308220299110359356104576",
              "start": 5399,
              "end": 5434
            },
            "prefix": true,
            "start": 5398,
            "end": 5434
          },
          {
            "type": "Literal",
            "value": "-0x4aabef2324cedff5387f1f65n & -0xbf2ed51ff75d380fd3be813ec6185780n === -0xbf2ed51fffffff2ff7fedffffe7f5f80n",
            "raw": "\"-0x4aabef2324cedff5387f1f65n & -0xbf2ed51ff75d380fd3be813ec6185780n === -0xbf2ed51fffffff2ff7fedffffe7f5f80n\"",
            "start": 5438,
            "end": 5548
          }
        ],
        "optional": false,
        "start": 5309,
        "end": 5549
      },
      "start": 5309,
      "end": 5550
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5551,
            "end": 5557
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5558,
            "end": 5567
          },
          "optional": false,
          "computed": false,
          "start": 5551,
          "end": 5567
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xffffffffn",
                "bigint": "4294967295",
                "start": 5569,
                "end": 5580
              },
              "prefix": true,
              "start": 5568,
              "end": 5580
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0n",
              "bigint": "0",
              "start": 5583,
              "end": 5585
            },
            "start": 5568,
            "end": 5585
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 5587,
            "end": 5589
          },
          {
            "type": "Literal",
            "value": "-0xffffffffn & 0n === 0n",
            "raw": "\"-0xffffffffn & 0n === 0n\"",
            "start": 5591,
            "end": 5617
          }
        ],
        "optional": false,
        "start": 5551,
        "end": 5618
      },
      "start": 5551,
      "end": 5619
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5620,
            "end": 5626
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5627,
            "end": 5636
          },
          "optional": false,
          "computed": false,
          "start": 5620,
          "end": 5636
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0n",
              "bigint": "0",
              "start": 5637,
              "end": 5639
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xffffffffn",
                "bigint": "4294967295",
                "start": 5643,
                "end": 5654
              },
              "prefix": true,
              "start": 5642,
              "end": 5654
            },
            "start": 5637,
            "end": 5654
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 5656,
            "end": 5658
          },
          {
            "type": "Literal",
            "value": "0n & -0xffffffffn === 0n",
            "raw": "\"0n & -0xffffffffn === 0n\"",
            "start": 5660,
            "end": 5686
          }
        ],
        "optional": false,
        "start": 5620,
        "end": 5687
      },
      "start": 5620,
      "end": 5688
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5689,
            "end": 5695
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5696,
            "end": 5705
          },
          "optional": false,
          "computed": false,
          "start": 5689,
          "end": 5705
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xffffffffffffffffn",
                "bigint": "18446744073709551615",
                "start": 5710,
                "end": 5729
              },
              "prefix": true,
              "start": 5709,
              "end": 5729
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x10000000000000000n",
              "bigint": "18446744073709551616",
              "start": 5732,
              "end": 5752
            },
            "start": 5709,
            "end": 5752
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x10000000000000000n",
            "bigint": "18446744073709551616",
            "start": 5754,
            "end": 5774
          },
          {
            "type": "Literal",
            "value": "-0xffffffffffffffffn & 0x10000000000000000n === 0x10000000000000000n",
            "raw": "\"-0xffffffffffffffffn & 0x10000000000000000n === 0x10000000000000000n\"",
            "start": 5778,
            "end": 5848
          }
        ],
        "optional": false,
        "start": 5689,
        "end": 5849
      },
      "start": 5689,
      "end": 5850
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 5851,
            "end": 5857
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 5858,
            "end": 5867
          },
          "optional": false,
          "computed": false,
          "start": 5851,
          "end": 5867
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x10000000000000000n",
              "bigint": "18446744073709551616",
              "start": 5871,
              "end": 5891
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xffffffffffffffffn",
                "bigint": "18446744073709551615",
                "start": 5895,
                "end": 5914
              },
              "prefix": true,
              "start": 5894,
              "end": 5914
            },
            "start": 5871,
            "end": 5914
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0x10000000000000000n",
            "bigint": "18446744073709551616",
            "start": 5916,
            "end": 5936
          },
          {
            "type": "Literal",
            "value": "0x10000000000000000n & -0xffffffffffffffffn === 0x10000000000000000n",
            "raw": "\"0x10000000000000000n & -0xffffffffffffffffn === 0x10000000000000000n\"",
            "start": 5940,
            "end": 6010
          }
        ],
        "optional": false,
        "start": 5851,
        "end": 6011
      },
      "start": 5851,
      "end": 6012
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 6013,
            "end": 6019
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 6020,
            "end": 6029
          },
          "optional": false,
          "computed": false,
          "start": 6013,
          "end": 6029
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xffffffffffffffffffffffffn",
                "bigint": "79228162514264337593543950335",
                "start": 6034,
                "end": 6061
              },
              "prefix": true,
              "start": 6033,
              "end": 6061
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": null,
              "raw": "0x10000000000000000n",
              "bigint": "18446744073709551616",
              "start": 6064,
              "end": 6084
            },
            "start": 6033,
            "end": 6084
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 6086,
            "end": 6088
          },
          {
            "type": "Literal",
            "value": "-0xffffffffffffffffffffffffn & 0x10000000000000000n === 0n",
            "raw": "\"-0xffffffffffffffffffffffffn & 0x10000000000000000n === 0n\"",
            "start": 6092,
            "end": 6152
          }
        ],
        "optional": false,
        "start": 6013,
        "end": 6153
      },
      "start": 6013,
      "end": 6154
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 6155,
            "end": 6161
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 6162,
            "end": 6171
          },
          "optional": false,
          "computed": false,
          "start": 6155,
          "end": 6171
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": null,
              "raw": "0x10000000000000000n",
              "bigint": "18446744073709551616",
              "start": 6175,
              "end": 6195
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": null,
                "raw": "0xffffffffffffffffffffffffn",
                "bigint": "79228162514264337593543950335",
                "start": 6199,
                "end": 6226
              },
              "prefix": true,
              "start": 6198,
              "end": 6226
            },
            "start": 6175,
            "end": 6226
          },
          {
            "type": "Literal",
            "value": null,
            "raw": "0n",
            "bigint": "0",
            "start": 6228,
            "end": 6230
          },
          {
            "type": "Literal",
            "value": "0x10000000000000000n & -0xffffffffffffffffffffffffn === 0n",
            "raw": "\"0x10000000000000000n & -0xffffffffffffffffffffffffn === 0n\"",
            "start": 6234,
            "end": 6294
          }
        ],
        "optional": false,
        "start": 6155,
        "end": 6295
      },
      "start": 6155,
      "end": 6296
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 6297
}