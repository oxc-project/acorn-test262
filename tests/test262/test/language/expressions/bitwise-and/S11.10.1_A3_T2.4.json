{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 367,
              "end": 368
            },
            "operator": "&",
            "right": {
              "type": "Identifier",
              "name": "undefined",
              "start": 371,
              "end": 380
            },
            "start": 367,
            "end": 380
          },
          "start": 366,
          "end": 381
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 386,
          "end": 387
        },
        "start": 366,
        "end": 387
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 403,
                "end": 415
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: (1 & undefined) === 0. Actual: ",
                    "raw": "'#1: (1 & undefined) === 0. Actual: '",
                    "start": 416,
                    "end": 453
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": 1,
                          "raw": "1",
                          "start": 458,
                          "end": 459
                        },
                        "operator": "&",
                        "right": {
                          "type": "Identifier",
                          "name": "undefined",
                          "start": 462,
                          "end": 471
                        },
                        "start": 458,
                        "end": 471
                      },
                      "start": 457,
                      "end": 472
                    },
                    "start": 456,
                    "end": 473
                  },
                  "start": 416,
                  "end": 473
                }
              ],
              "start": 399,
              "end": 474
            },
            "start": 393,
            "end": 475
          }
        ],
        "start": 389,
        "end": 477
      },
      "alternate": null,
      "start": 362,
      "end": 477
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Identifier",
              "name": "undefined",
              "start": 494,
              "end": 503
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 506,
              "end": 507
            },
            "start": 494,
            "end": 507
          },
          "start": 493,
          "end": 508
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 513,
          "end": 514
        },
        "start": 493,
        "end": 514
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 530,
                "end": 542
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: (undefined & 1) === 0. Actual: ",
                    "raw": "'#2: (undefined & 1) === 0. Actual: '",
                    "start": 543,
                    "end": 580
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Identifier",
                          "name": "undefined",
                          "start": 585,
                          "end": 594
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "value": 1,
                          "raw": "1",
                          "start": 597,
                          "end": 598
                        },
                        "start": 585,
                        "end": 598
                      },
                      "start": 584,
                      "end": 599
                    },
                    "start": 583,
                    "end": 600
                  },
                  "start": 543,
                  "end": 600
                }
              ],
              "start": 526,
              "end": 601
            },
            "start": 520,
            "end": 602
          }
        ],
        "start": 516,
        "end": 604
      },
      "alternate": null,
      "start": 489,
      "end": 604
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 625,
                "end": 631
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 632,
                  "end": 633
                }
              ],
              "start": 621,
              "end": 634
            },
            "operator": "&",
            "right": {
              "type": "Identifier",
              "name": "undefined",
              "start": 637,
              "end": 646
            },
            "start": 621,
            "end": 646
          },
          "start": 620,
          "end": 647
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 652,
          "end": 653
        },
        "start": 620,
        "end": 653
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 669,
                "end": 681
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: (new Number(1) & undefined) === 0. Actual: ",
                    "raw": "'#3: (new Number(1) & undefined) === 0. Actual: '",
                    "start": 682,
                    "end": 731
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 740,
                            "end": 746
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1,
                              "raw": "1",
                              "start": 747,
                              "end": 748
                            }
                          ],
                          "start": 736,
                          "end": 749
                        },
                        "operator": "&",
                        "right": {
                          "type": "Identifier",
                          "name": "undefined",
                          "start": 752,
                          "end": 761
                        },
                        "start": 736,
                        "end": 761
                      },
                      "start": 735,
                      "end": 762
                    },
                    "start": 734,
                    "end": 763
                  },
                  "start": 682,
                  "end": 763
                }
              ],
              "start": 665,
              "end": 764
            },
            "start": 659,
            "end": 765
          }
        ],
        "start": 655,
        "end": 767
      },
      "alternate": null,
      "start": 616,
      "end": 767
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Identifier",
              "name": "undefined",
              "start": 784,
              "end": 793
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Number",
                "start": 800,
                "end": 806
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 807,
                  "end": 808
                }
              ],
              "start": 796,
              "end": 809
            },
            "start": 784,
            "end": 809
          },
          "start": 783,
          "end": 810
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 815,
          "end": 816
        },
        "start": 783,
        "end": 816
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 832,
                "end": 844
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: (undefined & new Number(1)) === 0. Actual: ",
                    "raw": "'#4: (undefined & new Number(1)) === 0. Actual: '",
                    "start": 845,
                    "end": 894
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Identifier",
                          "name": "undefined",
                          "start": 899,
                          "end": 908
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Number",
                            "start": 915,
                            "end": 921
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1,
                              "raw": "1",
                              "start": 922,
                              "end": 923
                            }
                          ],
                          "start": 911,
                          "end": 924
                        },
                        "start": 899,
                        "end": 924
                      },
                      "start": 898,
                      "end": 925
                    },
                    "start": 897,
                    "end": 926
                  },
                  "start": 845,
                  "end": 926
                }
              ],
              "start": 828,
              "end": 927
            },
            "start": 822,
            "end": 928
          }
        ],
        "start": 818,
        "end": 930
      },
      "alternate": null,
      "start": 779,
      "end": 930
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 931
}