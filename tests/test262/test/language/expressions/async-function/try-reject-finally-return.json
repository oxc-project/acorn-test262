{
  "type": "Program",
  "start": 0,
  "end": 631,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 347,
      "end": 513,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 351,
          "end": 512,
          "id": {
            "type": "Identifier",
            "start": 351,
            "end": 352,
            "name": "f"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 355,
            "end": 512,
            "id": null,
            "generator": false,
            "async": true,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 372,
              "end": 512,
              "body": [
                {
                  "type": "TryStatement",
                  "start": 376,
                  "end": 510,
                  "block": {
                    "type": "BlockStatement",
                    "start": 380,
                    "end": 473,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 386,
                        "end": 469,
                        "expression": {
                          "type": "AwaitExpression",
                          "start": 386,
                          "end": 468,
                          "argument": {
                            "type": "NewExpression",
                            "start": 392,
                            "end": 468,
                            "callee": {
                              "type": "Identifier",
                              "start": 396,
                              "end": 403,
                              "name": "Promise"
                            },
                            "arguments": [
                              {
                                "type": "FunctionExpression",
                                "start": 404,
                                "end": 467,
                                "id": null,
                                "generator": false,
                                "async": false,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "start": 413,
                                    "end": 420,
                                    "name": "resolve"
                                  },
                                  {
                                    "type": "Identifier",
                                    "start": 422,
                                    "end": 428,
                                    "name": "reject"
                                  }
                                ],
                                "body": {
                                  "type": "BlockStatement",
                                  "start": 430,
                                  "end": 467,
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "start": 438,
                                      "end": 461,
                                      "expression": {
                                        "type": "CallExpression",
                                        "start": 438,
                                        "end": 460,
                                        "callee": {
                                          "type": "Identifier",
                                          "start": 438,
                                          "end": 444,
                                          "name": "reject"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "start": 445,
                                            "end": 459,
                                            "value": "early-reject",
                                            "raw": "\"early-reject\""
                                          }
                                        ],
                                        "optional": false
                                      }
                                    }
                                  ]
                                },
                                "expression": false
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "handler": null,
                  "finalizer": {
                    "type": "BlockStatement",
                    "start": 482,
                    "end": 510,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 488,
                        "end": 506,
                        "argument": {
                          "type": "Literal",
                          "start": 495,
                          "end": 505,
                          "value": "override",
                          "raw": "\"override\""
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "expression": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 515,
      "end": 630,
      "expression": {
        "type": "CallExpression",
        "start": 515,
        "end": 629,
        "callee": {
          "type": "MemberExpression",
          "start": 515,
          "end": 615,
          "object": {
            "type": "CallExpression",
            "start": 515,
            "end": 610,
            "callee": {
              "type": "MemberExpression",
              "start": 515,
              "end": 523,
              "object": {
                "type": "CallExpression",
                "start": 515,
                "end": 518,
                "callee": {
                  "type": "Identifier",
                  "start": 515,
                  "end": 516,
                  "name": "f"
                },
                "arguments": [],
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 519,
                "end": 523,
                "name": "then"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 524,
                "end": 609,
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 533,
                    "end": 538,
                    "name": "value"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 540,
                  "end": 609,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 544,
                      "end": 607,
                      "expression": {
                        "type": "CallExpression",
                        "start": 544,
                        "end": 606,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 544,
                          "end": 560,
                          "object": {
                            "type": "Identifier",
                            "start": 544,
                            "end": 550,
                            "name": "assert"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 551,
                            "end": 560,
                            "name": "sameValue"
                          },
                          "optional": false,
                          "computed": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 561,
                            "end": 566,
                            "name": "value"
                          },
                          {
                            "type": "Literal",
                            "start": 568,
                            "end": 578,
                            "value": "override",
                            "raw": "\"override\""
                          },
                          {
                            "type": "Literal",
                            "start": 580,
                            "end": 605,
                            "value": "Return in finally block",
                            "raw": "\"Return in finally block\""
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                "expression": false
              }
            ],
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 611,
            "end": 615,
            "name": "then"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 616,
            "end": 621,
            "name": "$DONE"
          },
          {
            "type": "Identifier",
            "start": 623,
            "end": 628,
            "name": "$DONE"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}