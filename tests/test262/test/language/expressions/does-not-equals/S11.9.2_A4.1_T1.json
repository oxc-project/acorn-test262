{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 241,
                "end": 247
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 248,
                "end": 251
              },
              "optional": false,
              "computed": false,
              "start": 241,
              "end": 251
            },
            "operator": "!=",
            "right": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 255,
              "end": 259
            },
            "start": 241,
            "end": 259
          },
          "start": 240,
          "end": 260
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 265,
          "end": 269
        },
        "start": 240,
        "end": 269
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 285,
                "end": 297
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: (NaN != true) === true",
                  "raw": "'#1: (NaN != true) === true'",
                  "start": 298,
                  "end": 326
                }
              ],
              "start": 281,
              "end": 327
            },
            "start": 275,
            "end": 328
          }
        ],
        "start": 271,
        "end": 330
      },
      "alternate": null,
      "start": 236,
      "end": 330
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 347,
                "end": 353
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 354,
                "end": 357
              },
              "optional": false,
              "computed": false,
              "start": 347,
              "end": 357
            },
            "operator": "!=",
            "right": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 361,
              "end": 362
            },
            "start": 347,
            "end": 362
          },
          "start": 346,
          "end": 363
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 368,
          "end": 372
        },
        "start": 346,
        "end": 372
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 388,
                "end": 400
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: (NaN != 1) === true",
                  "raw": "'#2: (NaN != 1) === true'",
                  "start": 401,
                  "end": 426
                }
              ],
              "start": 384,
              "end": 427
            },
            "start": 378,
            "end": 428
          }
        ],
        "start": 374,
        "end": 430
      },
      "alternate": null,
      "start": 342,
      "end": 430
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 447,
                "end": 453
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 454,
                "end": 457
              },
              "optional": false,
              "computed": false,
              "start": 447,
              "end": 457
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 461,
                "end": 467
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 468,
                "end": 471
              },
              "optional": false,
              "computed": false,
              "start": 461,
              "end": 471
            },
            "start": 447,
            "end": 471
          },
          "start": 446,
          "end": 472
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 477,
          "end": 481
        },
        "start": 446,
        "end": 481
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 497,
                "end": 509
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: (NaN != NaN) === true",
                  "raw": "'#3: (NaN != NaN) === true'",
                  "start": 510,
                  "end": 537
                }
              ],
              "start": 493,
              "end": 538
            },
            "start": 487,
            "end": 539
          }
        ],
        "start": 483,
        "end": 541
      },
      "alternate": null,
      "start": 442,
      "end": 541
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 558,
                "end": 564
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 565,
                "end": 568
              },
              "optional": false,
              "computed": false,
              "start": 558,
              "end": 568
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 572,
                "end": 578
              },
              "property": {
                "type": "Identifier",
                "name": "POSITIVE_INFINITY",
                "start": 579,
                "end": 596
              },
              "optional": false,
              "computed": false,
              "start": 572,
              "end": 596
            },
            "start": 558,
            "end": 596
          },
          "start": 557,
          "end": 597
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 602,
          "end": 606
        },
        "start": 557,
        "end": 606
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 622,
                "end": 634
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4: (NaN != +Infinity) === true",
                  "raw": "'#4: (NaN != +Infinity) === true'",
                  "start": 635,
                  "end": 668
                }
              ],
              "start": 618,
              "end": 669
            },
            "start": 612,
            "end": 670
          }
        ],
        "start": 608,
        "end": 672
      },
      "alternate": null,
      "start": 553,
      "end": 672
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 689,
                "end": 695
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 696,
                "end": 699
              },
              "optional": false,
              "computed": false,
              "start": 689,
              "end": 699
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 703,
                "end": 709
              },
              "property": {
                "type": "Identifier",
                "name": "NEGATIVE_INFINITY",
                "start": 710,
                "end": 727
              },
              "optional": false,
              "computed": false,
              "start": 703,
              "end": 727
            },
            "start": 689,
            "end": 727
          },
          "start": 688,
          "end": 728
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 733,
          "end": 737
        },
        "start": 688,
        "end": 737
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 753,
                "end": 765
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#5: (NaN != -Infinity) === true",
                  "raw": "'#5: (NaN != -Infinity) === true'",
                  "start": 766,
                  "end": 799
                }
              ],
              "start": 749,
              "end": 800
            },
            "start": 743,
            "end": 801
          }
        ],
        "start": 739,
        "end": 803
      },
      "alternate": null,
      "start": 684,
      "end": 803
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 820,
                "end": 826
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 827,
                "end": 830
              },
              "optional": false,
              "computed": false,
              "start": 820,
              "end": 830
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 834,
                "end": 840
              },
              "property": {
                "type": "Identifier",
                "name": "MAX_VALUE",
                "start": 841,
                "end": 850
              },
              "optional": false,
              "computed": false,
              "start": 834,
              "end": 850
            },
            "start": 820,
            "end": 850
          },
          "start": 819,
          "end": 851
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 856,
          "end": 860
        },
        "start": 819,
        "end": 860
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 876,
                "end": 888
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#6: (NaN != Number.MAX_VALUE) === true",
                  "raw": "'#6: (NaN != Number.MAX_VALUE) === true'",
                  "start": 889,
                  "end": 929
                }
              ],
              "start": 872,
              "end": 930
            },
            "start": 866,
            "end": 931
          }
        ],
        "start": 862,
        "end": 933
      },
      "alternate": null,
      "start": 815,
      "end": 933
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 950,
                "end": 956
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 957,
                "end": 960
              },
              "optional": false,
              "computed": false,
              "start": 950,
              "end": 960
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 964,
                "end": 970
              },
              "property": {
                "type": "Identifier",
                "name": "MIN_VALUE",
                "start": 971,
                "end": 980
              },
              "optional": false,
              "computed": false,
              "start": 964,
              "end": 980
            },
            "start": 950,
            "end": 980
          },
          "start": 949,
          "end": 981
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 986,
          "end": 990
        },
        "start": 949,
        "end": 990
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1006,
                "end": 1018
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#7: (NaN != Number.MIN_VALUE) === true",
                  "raw": "'#7: (NaN != Number.MIN_VALUE) === true'",
                  "start": 1019,
                  "end": 1059
                }
              ],
              "start": 1002,
              "end": 1060
            },
            "start": 996,
            "end": 1061
          }
        ],
        "start": 992,
        "end": 1063
      },
      "alternate": null,
      "start": 945,
      "end": 1063
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1080,
                "end": 1086
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 1087,
                "end": 1090
              },
              "optional": false,
              "computed": false,
              "start": 1080,
              "end": 1090
            },
            "operator": "!=",
            "right": {
              "type": "Literal",
              "value": "string",
              "raw": "\"string\"",
              "start": 1094,
              "end": 1102
            },
            "start": 1080,
            "end": 1102
          },
          "start": 1079,
          "end": 1103
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1108,
          "end": 1112
        },
        "start": 1079,
        "end": 1112
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1128,
                "end": 1140
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#8: (NaN != \"string\") === true",
                  "raw": "'#8: (NaN != \"string\") === true'",
                  "start": 1141,
                  "end": 1173
                }
              ],
              "start": 1124,
              "end": 1174
            },
            "start": 1118,
            "end": 1175
          }
        ],
        "start": 1114,
        "end": 1177
      },
      "alternate": null,
      "start": 1075,
      "end": 1177
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1194,
                "end": 1200
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 1201,
                "end": 1204
              },
              "optional": false,
              "computed": false,
              "start": 1194,
              "end": 1204
            },
            "operator": "!=",
            "right": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 1212,
                "end": 1218
              },
              "arguments": [],
              "start": 1208,
              "end": 1220
            },
            "start": 1194,
            "end": 1220
          },
          "start": 1193,
          "end": 1221
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1226,
          "end": 1230
        },
        "start": 1193,
        "end": 1230
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1246,
                "end": 1258
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#9: (NaN != new Object()) === true",
                  "raw": "'#9: (NaN != new Object()) === true'",
                  "start": 1259,
                  "end": 1295
                }
              ],
              "start": 1242,
              "end": 1296
            },
            "start": 1236,
            "end": 1297
          }
        ],
        "start": 1232,
        "end": 1299
      },
      "alternate": null,
      "start": 1189,
      "end": 1299
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1300
}