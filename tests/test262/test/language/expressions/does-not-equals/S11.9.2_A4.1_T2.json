{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 241,
              "end": 245
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 249,
                "end": 255
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 256,
                "end": 259
              },
              "optional": false,
              "computed": false,
              "start": 249,
              "end": 259
            },
            "start": 241,
            "end": 259
          },
          "start": 240,
          "end": 260
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 265,
          "end": 269
        },
        "start": 240,
        "end": 269
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 285,
                "end": 297
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: (true != NaN) === true",
                  "raw": "'#1: (true != NaN) === true'",
                  "start": 298,
                  "end": 326
                }
              ],
              "start": 281,
              "end": 327
            },
            "start": 275,
            "end": 328
          }
        ],
        "start": 271,
        "end": 330
      },
      "alternate": null,
      "start": 236,
      "end": 330
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 348,
                "end": 349
              },
              "prefix": true,
              "start": 347,
              "end": 349
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 353,
                "end": 359
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 360,
                "end": 363
              },
              "optional": false,
              "computed": false,
              "start": 353,
              "end": 363
            },
            "start": 347,
            "end": 363
          },
          "start": 346,
          "end": 364
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 369,
          "end": 373
        },
        "start": 346,
        "end": 373
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 389,
                "end": 401
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: (-1 != NaN) === true",
                  "raw": "'#2: (-1 != NaN) === true'",
                  "start": 402,
                  "end": 428
                }
              ],
              "start": 385,
              "end": 429
            },
            "start": 379,
            "end": 430
          }
        ],
        "start": 375,
        "end": 432
      },
      "alternate": null,
      "start": 342,
      "end": 432
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 449,
                "end": 455
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 456,
                "end": 459
              },
              "optional": false,
              "computed": false,
              "start": 449,
              "end": 459
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 463,
                "end": 469
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 470,
                "end": 473
              },
              "optional": false,
              "computed": false,
              "start": 463,
              "end": 473
            },
            "start": 449,
            "end": 473
          },
          "start": 448,
          "end": 474
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 479,
          "end": 483
        },
        "start": 448,
        "end": 483
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 499,
                "end": 511
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: (NaN != NaN) === true",
                  "raw": "'#3: (NaN != NaN) === true'",
                  "start": 512,
                  "end": 539
                }
              ],
              "start": 495,
              "end": 540
            },
            "start": 489,
            "end": 541
          }
        ],
        "start": 485,
        "end": 543
      },
      "alternate": null,
      "start": 444,
      "end": 543
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 560,
                "end": 566
              },
              "property": {
                "type": "Identifier",
                "name": "POSITIVE_INFINITY",
                "start": 567,
                "end": 584
              },
              "optional": false,
              "computed": false,
              "start": 560,
              "end": 584
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 588,
                "end": 594
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 595,
                "end": 598
              },
              "optional": false,
              "computed": false,
              "start": 588,
              "end": 598
            },
            "start": 560,
            "end": 598
          },
          "start": 559,
          "end": 599
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 604,
          "end": 608
        },
        "start": 559,
        "end": 608
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 624,
                "end": 636
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4: (+Infinity != NaN) === true",
                  "raw": "'#4: (+Infinity != NaN) === true'",
                  "start": 637,
                  "end": 670
                }
              ],
              "start": 620,
              "end": 671
            },
            "start": 614,
            "end": 672
          }
        ],
        "start": 610,
        "end": 674
      },
      "alternate": null,
      "start": 555,
      "end": 674
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 691,
                "end": 697
              },
              "property": {
                "type": "Identifier",
                "name": "NEGATIVE_INFINITY",
                "start": 698,
                "end": 715
              },
              "optional": false,
              "computed": false,
              "start": 691,
              "end": 715
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 719,
                "end": 725
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 726,
                "end": 729
              },
              "optional": false,
              "computed": false,
              "start": 719,
              "end": 729
            },
            "start": 691,
            "end": 729
          },
          "start": 690,
          "end": 730
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 735,
          "end": 739
        },
        "start": 690,
        "end": 739
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 755,
                "end": 767
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#5: (-Infinity != NaN) === true",
                  "raw": "'#5: (-Infinity != NaN) === true'",
                  "start": 768,
                  "end": 801
                }
              ],
              "start": 751,
              "end": 802
            },
            "start": 745,
            "end": 803
          }
        ],
        "start": 741,
        "end": 805
      },
      "alternate": null,
      "start": 686,
      "end": 805
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 822,
                "end": 828
              },
              "property": {
                "type": "Identifier",
                "name": "MAX_VALUE",
                "start": 829,
                "end": 838
              },
              "optional": false,
              "computed": false,
              "start": 822,
              "end": 838
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 842,
                "end": 848
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 849,
                "end": 852
              },
              "optional": false,
              "computed": false,
              "start": 842,
              "end": 852
            },
            "start": 822,
            "end": 852
          },
          "start": 821,
          "end": 853
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 858,
          "end": 862
        },
        "start": 821,
        "end": 862
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 878,
                "end": 890
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#6: (Number.MAX_VALUE != NaN) === true",
                  "raw": "'#6: (Number.MAX_VALUE != NaN) === true'",
                  "start": 891,
                  "end": 931
                }
              ],
              "start": 874,
              "end": 932
            },
            "start": 868,
            "end": 933
          }
        ],
        "start": 864,
        "end": 935
      },
      "alternate": null,
      "start": 817,
      "end": 935
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 952,
                "end": 958
              },
              "property": {
                "type": "Identifier",
                "name": "MIN_VALUE",
                "start": 959,
                "end": 968
              },
              "optional": false,
              "computed": false,
              "start": 952,
              "end": 968
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 972,
                "end": 978
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 979,
                "end": 982
              },
              "optional": false,
              "computed": false,
              "start": 972,
              "end": 982
            },
            "start": 952,
            "end": 982
          },
          "start": 951,
          "end": 983
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 988,
          "end": 992
        },
        "start": 951,
        "end": 992
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1008,
                "end": 1020
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#7: (Number.MIN_VALUE != NaN) === true",
                  "raw": "'#7: (Number.MIN_VALUE != NaN) === true'",
                  "start": 1021,
                  "end": 1061
                }
              ],
              "start": 1004,
              "end": 1062
            },
            "start": 998,
            "end": 1063
          }
        ],
        "start": 994,
        "end": 1065
      },
      "alternate": null,
      "start": 947,
      "end": 1065
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "string",
              "raw": "\"string\"",
              "start": 1082,
              "end": 1090
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1094,
                "end": 1100
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 1101,
                "end": 1104
              },
              "optional": false,
              "computed": false,
              "start": 1094,
              "end": 1104
            },
            "start": 1082,
            "end": 1104
          },
          "start": 1081,
          "end": 1105
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1110,
          "end": 1114
        },
        "start": 1081,
        "end": 1114
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1130,
                "end": 1142
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#8: (\"string\" != NaN) === true",
                  "raw": "'#8: (\"string\" != NaN) === true'",
                  "start": 1143,
                  "end": 1175
                }
              ],
              "start": 1126,
              "end": 1176
            },
            "start": 1120,
            "end": 1177
          }
        ],
        "start": 1116,
        "end": 1179
      },
      "alternate": null,
      "start": 1077,
      "end": 1179
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Object",
                "start": 1200,
                "end": 1206
              },
              "arguments": [],
              "start": 1196,
              "end": 1208
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Number",
                "start": 1212,
                "end": 1218
              },
              "property": {
                "type": "Identifier",
                "name": "NaN",
                "start": 1219,
                "end": 1222
              },
              "optional": false,
              "computed": false,
              "start": 1212,
              "end": 1222
            },
            "start": 1196,
            "end": 1222
          },
          "start": 1195,
          "end": 1223
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1228,
          "end": 1232
        },
        "start": 1195,
        "end": 1232
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1248,
                "end": 1260
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#9: (new Object() != NaN) === true",
                  "raw": "'#9: (new Object() != NaN) === true'",
                  "start": 1261,
                  "end": 1297
                }
              ],
              "start": 1244,
              "end": 1298
            },
            "start": 1238,
            "end": 1299
          }
        ],
        "start": 1234,
        "end": 1301
      },
      "alternate": null,
      "start": 1191,
      "end": 1301
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1302
}