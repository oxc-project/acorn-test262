{
  "type": "Program",
  "start": 0,
  "end": 2073,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1820,
      "end": 1838,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1824,
          "end": 1837,
          "id": {
            "type": "Identifier",
            "start": 1824,
            "end": 1833,
            "name": "following"
          },
          "init": {
            "type": "Literal",
            "start": 1836,
            "end": 1837,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1839,
      "end": 1914,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1843,
          "end": 1913,
          "id": {
            "type": "Identifier",
            "start": 1843,
            "end": 1847,
            "name": "iter"
          },
          "init": {
            "type": "CallExpression",
            "start": 1849,
            "end": 1913,
            "callee": {
              "type": "FunctionExpression",
              "start": 1849,
              "end": 1911,
              "id": null,
              "generator": true,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1862,
                "end": 1911,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 1866,
                    "end": 1891,
                    "argument": {
                      "type": "NewExpression",
                      "start": 1872,
                      "end": 1890,
                      "callee": {
                        "type": "Identifier",
                        "start": 1876,
                        "end": 1888,
                        "name": "Test262Error"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "start": 1894,
                    "end": 1909,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1894,
                      "end": 1908,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 1894,
                        "end": 1903,
                        "name": "following"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 1907,
                        "end": 1908,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  }
                ]
              },
              "expression": false
            },
            "arguments": [],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1916,
      "end": 1936,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1920,
          "end": 1935,
          "id": {
            "type": "Identifier",
            "start": 1920,
            "end": 1921,
            "name": "f"
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "start": 1924,
            "end": 1935,
            "expression": false,
            "async": false,
            "params": [
              {
                "type": "ArrayPattern",
                "start": 1925,
                "end": 1928,
                "elements": [
                  null
                ]
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1933,
              "end": 1935,
              "body": []
            },
            "id": null,
            "generator": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1938,
      "end": 1993,
      "expression": {
        "type": "CallExpression",
        "start": 1938,
        "end": 1992,
        "callee": {
          "type": "MemberExpression",
          "start": 1938,
          "end": 1951,
          "object": {
            "type": "Identifier",
            "start": 1938,
            "end": 1944,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1945,
            "end": 1951,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1952,
            "end": 1964,
            "name": "Test262Error"
          },
          {
            "type": "FunctionExpression",
            "start": 1966,
            "end": 1991,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1977,
              "end": 1991,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1981,
                  "end": 1989,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1981,
                    "end": 1988,
                    "callee": {
                      "type": "Identifier",
                      "start": 1981,
                      "end": 1982,
                      "name": "f"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1983,
                        "end": 1987,
                        "name": "iter"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1995,
      "end": 2007,
      "expression": {
        "type": "CallExpression",
        "start": 1995,
        "end": 2006,
        "callee": {
          "type": "MemberExpression",
          "start": 1995,
          "end": 2004,
          "object": {
            "type": "Identifier",
            "start": 1995,
            "end": 1999,
            "name": "iter"
          },
          "property": {
            "type": "Identifier",
            "start": 2000,
            "end": 2004,
            "name": "next"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2008,
      "end": 2072,
      "expression": {
        "type": "CallExpression",
        "start": 2008,
        "end": 2071,
        "callee": {
          "type": "MemberExpression",
          "start": 2008,
          "end": 2024,
          "object": {
            "type": "Identifier",
            "start": 2008,
            "end": 2014,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2015,
            "end": 2024,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 2025,
            "end": 2034,
            "name": "following"
          },
          {
            "type": "Literal",
            "start": 2036,
            "end": 2037,
            "value": 0,
            "raw": "0"
          },
          {
            "type": "Literal",
            "start": 2039,
            "end": 2070,
            "value": "Iterator was properly closed.",
            "raw": "'Iterator was properly closed.'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}