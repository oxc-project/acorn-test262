{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "count",
            "start": 862,
            "end": 867
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 870,
            "end": 871
          },
          "start": 862,
          "end": 871
        }
      ],
      "start": 858,
      "end": 872
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "scope",
            "start": 877,
            "end": 882
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "get",
                "key": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 893,
                  "end": 894
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "UnaryExpression",
                          "operator": "delete",
                          "argument": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "ThisExpression",
                              "start": 910,
                              "end": 914
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "x",
                              "start": 915,
                              "end": 916
                            },
                            "optional": false,
                            "computed": false,
                            "start": 910,
                            "end": 916
                          },
                          "prefix": true,
                          "start": 903,
                          "end": 916
                        },
                        "start": 903,
                        "end": 917
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 2,
                          "raw": "2",
                          "start": 929,
                          "end": 930
                        },
                        "start": 922,
                        "end": 931
                      }
                    ],
                    "start": 897,
                    "end": 935
                  },
                  "expression": false,
                  "start": 894,
                  "end": 935
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 889,
                "end": 935
              }
            ],
            "start": 885,
            "end": 937
          },
          "start": 877,
          "end": 937
        }
      ],
      "start": 873,
      "end": 938
    },
    {
      "type": "WithStatement",
      "object": {
        "type": "Identifier",
        "name": "scope",
        "start": 946,
        "end": 951
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "Literal",
                          "value": "use strict",
                          "raw": "\"use strict\"",
                          "start": 975,
                          "end": 987
                        },
                        "directive": "use strict",
                        "start": 975,
                        "end": 988
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "assert",
                              "start": 993,
                              "end": 999
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "throws",
                              "start": 1000,
                              "end": 1006
                            },
                            "optional": false,
                            "computed": false,
                            "start": 993,
                            "end": 1006
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "ReferenceError",
                              "start": 1007,
                              "end": 1021
                            },
                            {
                              "type": "ArrowFunctionExpression",
                              "expression": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "UpdateExpression",
                                      "operator": "++",
                                      "prefix": false,
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "count",
                                        "start": 1037,
                                        "end": 1042
                                      },
                                      "start": 1037,
                                      "end": 1044
                                    },
                                    "start": 1037,
                                    "end": 1045
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "UpdateExpression",
                                      "operator": "++",
                                      "prefix": false,
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "x",
                                        "start": 1052,
                                        "end": 1053
                                      },
                                      "start": 1052,
                                      "end": 1055
                                    },
                                    "start": 1052,
                                    "end": 1056
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "UpdateExpression",
                                      "operator": "++",
                                      "prefix": false,
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "count",
                                        "start": 1063,
                                        "end": 1068
                                      },
                                      "start": 1063,
                                      "end": 1070
                                    },
                                    "start": 1063,
                                    "end": 1071
                                  }
                                ],
                                "start": 1029,
                                "end": 1077
                              },
                              "id": null,
                              "generator": false,
                              "start": 1023,
                              "end": 1077
                            }
                          ],
                          "optional": false,
                          "start": 993,
                          "end": 1078
                        },
                        "start": 993,
                        "end": 1079
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "UpdateExpression",
                          "operator": "++",
                          "prefix": false,
                          "argument": {
                            "type": "Identifier",
                            "name": "count",
                            "start": 1084,
                            "end": 1089
                          },
                          "start": 1084,
                          "end": 1091
                        },
                        "start": 1084,
                        "end": 1092
                      }
                    ],
                    "start": 969,
                    "end": 1096
                  },
                  "expression": false,
                  "start": 958,
                  "end": 1096
                },
                "start": 957,
                "end": 1097
              },
              "arguments": [],
              "optional": false,
              "start": 957,
              "end": 1099
            },
            "start": 957,
            "end": 1100
          }
        ],
        "start": 953,
        "end": 1102
      },
      "start": 940,
      "end": 1102
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1104,
            "end": 1110
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1111,
            "end": 1120
          },
          "optional": false,
          "computed": false,
          "start": 1104,
          "end": 1120
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "count",
            "start": 1121,
            "end": 1126
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1128,
            "end": 1129
          }
        ],
        "optional": false,
        "start": 1104,
        "end": 1130
      },
      "start": 1104,
      "end": 1131
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 1132,
          "end": 1138
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "!",
            "argument": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": "x",
                  "raw": "'x'",
                  "start": 1141,
                  "end": 1144
                },
                "operator": "in",
                "right": {
                  "type": "Identifier",
                  "name": "scope",
                  "start": 1148,
                  "end": 1153
                },
                "start": 1141,
                "end": 1153
              },
              "start": 1140,
              "end": 1154
            },
            "prefix": true,
            "start": 1139,
            "end": 1154
          }
        ],
        "optional": false,
        "start": 1132,
        "end": 1155
      },
      "start": 1132,
      "end": 1156
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1157
}