{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 269,
            "end": 270
          },
          "init": null,
          "start": 269,
          "end": 270
        }
      ],
      "start": 265,
      "end": 271
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "x",
          "start": 273,
          "end": 274
        },
        "start": 273,
        "end": 276
      },
      "start": 273,
      "end": 277
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 283,
            "end": 288
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 289,
              "end": 290
            }
          ],
          "optional": false,
          "start": 283,
          "end": 291
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 296,
          "end": 300
        },
        "start": 283,
        "end": 300
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 316,
                "end": 328
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x; x++; x === Not-a-Number. Actual: ",
                    "raw": "'#1: var x; x++; x === Not-a-Number. Actual: '",
                    "start": 329,
                    "end": 375
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 379,
                      "end": 380
                    },
                    "start": 378,
                    "end": 381
                  },
                  "start": 329,
                  "end": 381
                }
              ],
              "start": 312,
              "end": 382
            },
            "start": 306,
            "end": 383
          }
        ],
        "start": 302,
        "end": 385
      },
      "alternate": null,
      "start": 279,
      "end": 385
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 401,
            "end": 402
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 405,
            "end": 409
          },
          "start": 401,
          "end": 409
        }
      ],
      "start": 397,
      "end": 410
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "x",
          "start": 412,
          "end": 413
        },
        "start": 412,
        "end": 415
      },
      "start": 412,
      "end": 416
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 422,
          "end": 423
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 428,
          "end": 429
        },
        "start": 422,
        "end": 429
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 445,
                "end": 457
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var x = null; x++; x === 1. Actual: ",
                    "raw": "'#2: var x = null; x++; x === 1. Actual: '",
                    "start": 458,
                    "end": 500
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 504,
                      "end": 505
                    },
                    "start": 503,
                    "end": 506
                  },
                  "start": 458,
                  "end": 506
                }
              ],
              "start": 441,
              "end": 507
            },
            "start": 435,
            "end": 508
          }
        ],
        "start": 431,
        "end": 510
      },
      "alternate": null,
      "start": 418,
      "end": 510
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 511
}