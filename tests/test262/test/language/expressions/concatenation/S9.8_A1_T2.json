{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Identifier",
            "name": "undefined",
            "start": 358,
            "end": 367
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 370,
            "end": 372
          },
          "start": 358,
          "end": 372
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "undefined",
          "raw": "\"undefined\"",
          "start": 377,
          "end": 388
        },
        "start": 358,
        "end": 388
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 404,
                "end": 416
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: undefined + \"\" === \"undefined\". Actual: ",
                    "raw": "'#1: undefined + \"\" === \"undefined\". Actual: '",
                    "start": 417,
                    "end": 463
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 467,
                        "end": 476
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 479,
                        "end": 481
                      },
                      "start": 467,
                      "end": 481
                    },
                    "start": 466,
                    "end": 482
                  },
                  "start": 417,
                  "end": 482
                }
              ],
              "start": 400,
              "end": 483
            },
            "start": 394,
            "end": 484
          }
        ],
        "start": 390,
        "end": 486
      },
      "alternate": null,
      "start": 354,
      "end": 486
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "UnaryExpression",
            "operator": "void",
            "argument": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 508,
              "end": 509
            },
            "prefix": true,
            "start": 503,
            "end": 509
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 512,
            "end": 514
          },
          "start": 503,
          "end": 514
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "undefined",
          "raw": "\"undefined\"",
          "start": 519,
          "end": 530
        },
        "start": 503,
        "end": 530
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 546,
                "end": 558
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: void 0 + \"\" === \"undefined\". Actual: ",
                    "raw": "'#2: void 0 + \"\" === \"undefined\". Actual: '",
                    "start": 559,
                    "end": 602
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "void",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 611,
                          "end": 612
                        },
                        "prefix": true,
                        "start": 606,
                        "end": 612
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 615,
                        "end": 617
                      },
                      "start": 606,
                      "end": 617
                    },
                    "start": 605,
                    "end": 618
                  },
                  "start": 559,
                  "end": 618
                }
              ],
              "start": 542,
              "end": 619
            },
            "start": 536,
            "end": 620
          }
        ],
        "start": 532,
        "end": 622
      },
      "alternate": null,
      "start": 499,
      "end": 622
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "eval",
              "start": 639,
              "end": 643
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "var x",
                "raw": "\"var x\"",
                "start": 644,
                "end": 651
              }
            ],
            "optional": false,
            "start": 639,
            "end": 652
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 655,
            "end": 657
          },
          "start": 639,
          "end": 657
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "undefined",
          "raw": "\"undefined\"",
          "start": 662,
          "end": 673
        },
        "start": 639,
        "end": 673
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 689,
                "end": 701
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: eval(\"var x\") + \"\" === \"undefined\". Actual: ",
                    "raw": "'#3: eval(\"var x\") + \"\" === \"undefined\". Actual: '",
                    "start": 702,
                    "end": 752
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "eval",
                          "start": 756,
                          "end": 760
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "var x",
                            "raw": "\"var x\"",
                            "start": 761,
                            "end": 768
                          }
                        ],
                        "optional": false,
                        "start": 756,
                        "end": 769
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 772,
                        "end": 774
                      },
                      "start": 756,
                      "end": 774
                    },
                    "start": 755,
                    "end": 775
                  },
                  "start": 702,
                  "end": 775
                }
              ],
              "start": 685,
              "end": 776
            },
            "start": 679,
            "end": 777
          }
        ],
        "start": 675,
        "end": 779
      },
      "alternate": null,
      "start": 635,
      "end": 779
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 780
}