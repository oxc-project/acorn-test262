{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 350,
              "end": 356
            },
            "arguments": [],
            "start": 346,
            "end": 358
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 361,
            "end": 363
          },
          "start": 346,
          "end": 363
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "0",
          "raw": "\"0\"",
          "start": 368,
          "end": 371
        },
        "start": 346,
        "end": 371
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 387,
                "end": 399
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: new Number() + \"\" === \"0\". Actual: ",
                    "raw": "'#1: new Number() + \"\" === \"0\". Actual: '",
                    "start": 400,
                    "end": 441
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 449,
                          "end": 455
                        },
                        "arguments": [],
                        "start": 445,
                        "end": 457
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 460,
                        "end": 462
                      },
                      "start": 445,
                      "end": 462
                    },
                    "start": 444,
                    "end": 463
                  },
                  "start": 400,
                  "end": 463
                }
              ],
              "start": 383,
              "end": 464
            },
            "start": 377,
            "end": 465
          }
        ],
        "start": 373,
        "end": 467
      },
      "alternate": null,
      "start": 342,
      "end": 467
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 488,
              "end": 494
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 495,
                "end": 496
              }
            ],
            "start": 484,
            "end": 497
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 500,
            "end": 502
          },
          "start": 484,
          "end": 502
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "0",
          "raw": "\"0\"",
          "start": 507,
          "end": 510
        },
        "start": 484,
        "end": 510
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 526,
                "end": 538
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: new Number(0) + \"\" === \"0\". Actual: ",
                    "raw": "'#2: new Number(0) + \"\" === \"0\". Actual: '",
                    "start": 539,
                    "end": 581
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 589,
                          "end": 595
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0",
                            "start": 596,
                            "end": 597
                          }
                        ],
                        "start": 585,
                        "end": 598
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 601,
                        "end": 603
                      },
                      "start": 585,
                      "end": 603
                    },
                    "start": 584,
                    "end": 604
                  },
                  "start": 539,
                  "end": 604
                }
              ],
              "start": 522,
              "end": 605
            },
            "start": 516,
            "end": 606
          }
        ],
        "start": 512,
        "end": 608
      },
      "alternate": null,
      "start": 480,
      "end": 608
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 629,
              "end": 635
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Number",
                  "start": 636,
                  "end": 642
                },
                "property": {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 643,
                  "end": 646
                },
                "optional": false,
                "computed": false,
                "start": 636,
                "end": 646
              }
            ],
            "start": 625,
            "end": 647
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 650,
            "end": 652
          },
          "start": 625,
          "end": 652
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "NaN",
          "raw": "\"NaN\"",
          "start": 657,
          "end": 662
        },
        "start": 625,
        "end": 662
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 678,
                "end": 690
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: new Number(Number.NaN) + \"\" === \"NaN\". Actual: ",
                    "raw": "'#3: new Number(Number.NaN) + \"\" === \"NaN\". Actual: '",
                    "start": 691,
                    "end": 744
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 752,
                          "end": 758
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "Number",
                              "start": 759,
                              "end": 765
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "NaN",
                              "start": 766,
                              "end": 769
                            },
                            "optional": false,
                            "computed": false,
                            "start": 759,
                            "end": 769
                          }
                        ],
                        "start": 748,
                        "end": 770
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 773,
                        "end": 775
                      },
                      "start": 748,
                      "end": 775
                    },
                    "start": 747,
                    "end": 776
                  },
                  "start": 691,
                  "end": 776
                }
              ],
              "start": 674,
              "end": 777
            },
            "start": 668,
            "end": 778
          }
        ],
        "start": 664,
        "end": 780
      },
      "alternate": null,
      "start": 621,
      "end": 780
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 801,
              "end": 807
            },
            "arguments": [
              {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 808,
                "end": 812
              }
            ],
            "start": 797,
            "end": 813
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 816,
            "end": 818
          },
          "start": 797,
          "end": 818
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "0",
          "raw": "\"0\"",
          "start": 823,
          "end": 826
        },
        "start": 797,
        "end": 826
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 842,
                "end": 854
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: new Number(null) + \"\" === \"0\". Actual: ",
                    "raw": "'#4: new Number(null) + \"\" === \"0\". Actual: '",
                    "start": 855,
                    "end": 900
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 908,
                          "end": 914
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": null,
                            "raw": "null",
                            "start": 915,
                            "end": 919
                          }
                        ],
                        "start": 904,
                        "end": 920
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 923,
                        "end": 925
                      },
                      "start": 904,
                      "end": 925
                    },
                    "start": 903,
                    "end": 926
                  },
                  "start": 855,
                  "end": 926
                }
              ],
              "start": 838,
              "end": 927
            },
            "start": 832,
            "end": 928
          }
        ],
        "start": 828,
        "end": 931
      },
      "alternate": null,
      "start": 793,
      "end": 931
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 952,
              "end": 958
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "operator": "void",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 964,
                  "end": 965
                },
                "prefix": true,
                "start": 959,
                "end": 965
              }
            ],
            "start": 948,
            "end": 966
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 969,
            "end": 971
          },
          "start": 948,
          "end": 971
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "NaN",
          "raw": "\"NaN\"",
          "start": 976,
          "end": 981
        },
        "start": 948,
        "end": 981
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 997,
                "end": 1009
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: new Number(void 0) + \"\" === \"NaN. Actual: ",
                    "raw": "'#5: new Number(void 0) + \"\" === \"NaN. Actual: '",
                    "start": 1010,
                    "end": 1058
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1066,
                          "end": 1072
                        },
                        "arguments": [
                          {
                            "type": "UnaryExpression",
                            "operator": "void",
                            "argument": {
                              "type": "Literal",
                              "value": 0,
                              "raw": "0",
                              "start": 1078,
                              "end": 1079
                            },
                            "prefix": true,
                            "start": 1073,
                            "end": 1079
                          }
                        ],
                        "start": 1062,
                        "end": 1080
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 1083,
                        "end": 1085
                      },
                      "start": 1062,
                      "end": 1085
                    },
                    "start": 1061,
                    "end": 1086
                  },
                  "start": 1010,
                  "end": 1086
                }
              ],
              "start": 993,
              "end": 1087
            },
            "start": 987,
            "end": 1088
          }
        ],
        "start": 983,
        "end": 1090
      },
      "alternate": null,
      "start": 944,
      "end": 1090
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 1111,
              "end": 1117
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 1118,
                "end": 1122
              }
            ],
            "start": 1107,
            "end": 1123
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 1126,
            "end": 1128
          },
          "start": 1107,
          "end": 1128
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 1133,
          "end": 1136
        },
        "start": 1107,
        "end": 1136
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1152,
                "end": 1164
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: new Number(true) + \"\" === \"1\". Actual: ",
                    "raw": "'#6: new Number(true) + \"\" === \"1\". Actual: '",
                    "start": 1165,
                    "end": 1210
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1218,
                          "end": 1224
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 1225,
                            "end": 1229
                          }
                        ],
                        "start": 1214,
                        "end": 1230
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 1233,
                        "end": 1235
                      },
                      "start": 1214,
                      "end": 1235
                    },
                    "start": 1213,
                    "end": 1236
                  },
                  "start": 1165,
                  "end": 1236
                }
              ],
              "start": 1148,
              "end": 1237
            },
            "start": 1142,
            "end": 1238
          }
        ],
        "start": 1138,
        "end": 1240
      },
      "alternate": null,
      "start": 1103,
      "end": 1240
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 1261,
              "end": 1267
            },
            "arguments": [
              {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1268,
                "end": 1273
              }
            ],
            "start": 1257,
            "end": 1274
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 1277,
            "end": 1279
          },
          "start": 1257,
          "end": 1279
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "0",
          "raw": "\"0\"",
          "start": 1284,
          "end": 1287
        },
        "start": 1257,
        "end": 1287
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1303,
                "end": 1315
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: new Number(false) + \"\" === \"0\". Actual: ",
                    "raw": "'#7: new Number(false) + \"\" === \"0\". Actual: '",
                    "start": 1316,
                    "end": 1362
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Number",
                          "start": 1370,
                          "end": 1376
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": false,
                            "raw": "false",
                            "start": 1377,
                            "end": 1382
                          }
                        ],
                        "start": 1366,
                        "end": 1383
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 1386,
                        "end": 1388
                      },
                      "start": 1366,
                      "end": 1388
                    },
                    "start": 1365,
                    "end": 1389
                  },
                  "start": 1316,
                  "end": 1389
                }
              ],
              "start": 1299,
              "end": 1390
            },
            "start": 1293,
            "end": 1391
          }
        ],
        "start": 1289,
        "end": 1393
      },
      "alternate": null,
      "start": 1253,
      "end": 1393
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 1414,
              "end": 1421
            },
            "arguments": [
              {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 1422,
                "end": 1426
              }
            ],
            "start": 1410,
            "end": 1427
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 1430,
            "end": 1432
          },
          "start": 1410,
          "end": 1432
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "true",
          "raw": "\"true\"",
          "start": 1437,
          "end": 1443
        },
        "start": 1410,
        "end": 1443
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1459,
                "end": 1471
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: new Boolean(true) + \"\" === \"true\". Actual: ",
                    "raw": "'#8: new Boolean(true) + \"\" === \"true\". Actual: '",
                    "start": 1472,
                    "end": 1521
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Boolean",
                          "start": 1529,
                          "end": 1536
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 1537,
                            "end": 1541
                          }
                        ],
                        "start": 1525,
                        "end": 1542
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 1545,
                        "end": 1547
                      },
                      "start": 1525,
                      "end": 1547
                    },
                    "start": 1524,
                    "end": 1548
                  },
                  "start": 1472,
                  "end": 1548
                }
              ],
              "start": 1455,
              "end": 1549
            },
            "start": 1449,
            "end": 1550
          }
        ],
        "start": 1445,
        "end": 1552
      },
      "alternate": null,
      "start": 1406,
      "end": 1552
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Boolean",
              "start": 1573,
              "end": 1580
            },
            "arguments": [
              {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1581,
                "end": 1586
              }
            ],
            "start": 1569,
            "end": 1587
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 1590,
            "end": 1592
          },
          "start": 1569,
          "end": 1592
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "false",
          "raw": "\"false\"",
          "start": 1597,
          "end": 1604
        },
        "start": 1569,
        "end": 1604
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1620,
                "end": 1632
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: Number(new Boolean(false)) === \"false\". Actual: ",
                    "raw": "'#9: Number(new Boolean(false)) === \"false\". Actual: '",
                    "start": 1633,
                    "end": 1687
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Number",
                        "start": 1691,
                        "end": 1697
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Boolean",
                            "start": 1702,
                            "end": 1709
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "start": 1710,
                              "end": 1715
                            }
                          ],
                          "start": 1698,
                          "end": 1716
                        }
                      ],
                      "optional": false,
                      "start": 1691,
                      "end": 1717
                    },
                    "start": 1690,
                    "end": 1718
                  },
                  "start": 1633,
                  "end": 1718
                }
              ],
              "start": 1616,
              "end": 1719
            },
            "start": 1610,
            "end": 1720
          }
        ],
        "start": 1606,
        "end": 1722
      },
      "alternate": null,
      "start": 1565,
      "end": 1722
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Array",
              "start": 1744,
              "end": 1749
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1750,
                "end": 1751
              },
              {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 1752,
                "end": 1753
              },
              {
                "type": "Literal",
                "value": 8,
                "raw": "8",
                "start": 1754,
                "end": 1755
              },
              {
                "type": "Literal",
                "value": 16,
                "raw": "16",
                "start": 1756,
                "end": 1758
              },
              {
                "type": "Literal",
                "value": 32,
                "raw": "32",
                "start": 1759,
                "end": 1761
              }
            ],
            "start": 1740,
            "end": 1762
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 1765,
            "end": 1767
          },
          "start": 1740,
          "end": 1767
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "2,4,8,16,32",
          "raw": "\"2,4,8,16,32\"",
          "start": 1772,
          "end": 1785
        },
        "start": 1740,
        "end": 1785
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1801,
                "end": 1813
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: new Array(2,4,8,16,32) + \"\" === \"2,4,8,16,32\". Actual: ",
                    "raw": "'#10: new Array(2,4,8,16,32) + \"\" === \"2,4,8,16,32\". Actual: '",
                    "start": 1814,
                    "end": 1876
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Array",
                          "start": 1884,
                          "end": 1889
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 2,
                            "raw": "2",
                            "start": 1890,
                            "end": 1891
                          },
                          {
                            "type": "Literal",
                            "value": 4,
                            "raw": "4",
                            "start": 1892,
                            "end": 1893
                          },
                          {
                            "type": "Literal",
                            "value": 8,
                            "raw": "8",
                            "start": 1894,
                            "end": 1895
                          },
                          {
                            "type": "Literal",
                            "value": 16,
                            "raw": "16",
                            "start": 1896,
                            "end": 1898
                          },
                          {
                            "type": "Literal",
                            "value": 32,
                            "raw": "32",
                            "start": 1899,
                            "end": 1901
                          }
                        ],
                        "start": 1880,
                        "end": 1902
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 1905,
                        "end": 1907
                      },
                      "start": 1880,
                      "end": 1907
                    },
                    "start": 1879,
                    "end": 1908
                  },
                  "start": 1814,
                  "end": 1908
                }
              ],
              "start": 1797,
              "end": 1909
            },
            "start": 1791,
            "end": 1910
          }
        ],
        "start": 1787,
        "end": 1912
      },
      "alternate": null,
      "start": 1736,
      "end": 1912
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myobj1",
            "start": 1930,
            "end": 1936
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toNumber",
                  "start": 1957,
                  "end": 1965
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 12345,
                          "raw": "12345",
                          "start": 1986,
                          "end": 1991
                        },
                        "start": 1979,
                        "end": 1992
                      }
                    ],
                    "start": 1978,
                    "end": 1993
                  },
                  "expression": false,
                  "start": 1968,
                  "end": 1993
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 1957,
                "end": 1993
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 2012,
                  "end": 2020
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 67890,
                          "raw": "67890",
                          "start": 2041,
                          "end": 2046
                        },
                        "start": 2034,
                        "end": 2047
                      }
                    ],
                    "start": 2033,
                    "end": 2048
                  },
                  "expression": false,
                  "start": 2023,
                  "end": 2048
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2012,
                "end": 2048
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "valueOf",
                  "start": 2066,
                  "end": 2073
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "[object MyObj]",
                          "raw": "\"[object MyObj]\"",
                          "start": 2095,
                          "end": 2111
                        },
                        "start": 2088,
                        "end": 2112
                      }
                    ],
                    "start": 2087,
                    "end": 2113
                  },
                  "expression": false,
                  "start": 2077,
                  "end": 2113
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2066,
                "end": 2113
              }
            ],
            "start": 1939,
            "end": 2128
          },
          "start": 1930,
          "end": 2128
        }
      ],
      "start": 1926,
      "end": 2129
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Identifier",
            "name": "myobj1",
            "start": 2135,
            "end": 2141
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 2144,
            "end": 2146
          },
          "start": 2135,
          "end": 2146
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "[object MyObj]",
          "raw": "\"[object MyObj]\"",
          "start": 2151,
          "end": 2167
        },
        "start": 2135,
        "end": 2167
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2182,
                "end": 2194
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#11: myobj1 + \"\" calls ToPrimitive with hint Number. Exptected: \"[object MyObj]\". Actual: ",
                    "raw": "'#11: myobj1 + \"\" calls ToPrimitive with hint Number. Exptected: \"[object MyObj]\". Actual: '",
                    "start": 2195,
                    "end": 2287
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "myobj1",
                        "start": 2291,
                        "end": 2297
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 2300,
                        "end": 2302
                      },
                      "start": 2291,
                      "end": 2302
                    },
                    "start": 2290,
                    "end": 2303
                  },
                  "start": 2195,
                  "end": 2303
                }
              ],
              "start": 2178,
              "end": 2304
            },
            "start": 2172,
            "end": 2305
          }
        ],
        "start": 2168,
        "end": 2307
      },
      "alternate": null,
      "start": 2131,
      "end": 2307
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myobj2",
            "start": 2325,
            "end": 2331
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toNumber",
                  "start": 2352,
                  "end": 2360
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 12345,
                          "raw": "12345",
                          "start": 2381,
                          "end": 2386
                        },
                        "start": 2374,
                        "end": 2387
                      }
                    ],
                    "start": 2373,
                    "end": 2388
                  },
                  "expression": false,
                  "start": 2363,
                  "end": 2388
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2352,
                "end": 2388
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 2406,
                  "end": 2414
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 67890,
                          "raw": "67890",
                          "start": 2435,
                          "end": 2440
                        },
                        "start": 2428,
                        "end": 2440
                      }
                    ],
                    "start": 2427,
                    "end": 2441
                  },
                  "expression": false,
                  "start": 2417,
                  "end": 2441
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2406,
                "end": 2441
              },
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "valueOf",
                  "start": 2460,
                  "end": 2467
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "ObjectExpression",
                          "properties": [],
                          "start": 2489,
                          "end": 2491
                        },
                        "start": 2482,
                        "end": 2491
                      }
                    ],
                    "start": 2481,
                    "end": 2492
                  },
                  "expression": false,
                  "start": 2471,
                  "end": 2492
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2460,
                "end": 2492
              }
            ],
            "start": 2334,
            "end": 2507
          },
          "start": 2325,
          "end": 2507
        }
      ],
      "start": 2321,
      "end": 2508
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Identifier",
            "name": "myobj2",
            "start": 2514,
            "end": 2520
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 2523,
            "end": 2525
          },
          "start": 2514,
          "end": 2525
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "67890",
          "raw": "\"67890\"",
          "start": 2530,
          "end": 2537
        },
        "start": 2514,
        "end": 2537
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2552,
                "end": 2564
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#12: myobj2 + \"\" calls ToPrimitive with hint Number. Exptected: \"67890\". Actual: ",
                    "raw": "'#12: myobj2 + \"\" calls ToPrimitive with hint Number. Exptected: \"67890\". Actual: '",
                    "start": 2565,
                    "end": 2648
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "myobj2",
                        "start": 2652,
                        "end": 2658
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 2661,
                        "end": 2663
                      },
                      "start": 2652,
                      "end": 2663
                    },
                    "start": 2651,
                    "end": 2664
                  },
                  "start": 2565,
                  "end": 2664
                }
              ],
              "start": 2548,
              "end": 2665
            },
            "start": 2542,
            "end": 2666
          }
        ],
        "start": 2538,
        "end": 2668
      },
      "alternate": null,
      "start": 2510,
      "end": 2668
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myobj3",
            "start": 2686,
            "end": 2692
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "toNumber",
                  "start": 2713,
                  "end": 2721
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 12345,
                          "raw": "12345",
                          "start": 2742,
                          "end": 2747
                        },
                        "start": 2735,
                        "end": 2748
                      }
                    ],
                    "start": 2734,
                    "end": 2749
                  },
                  "expression": false,
                  "start": 2724,
                  "end": 2749
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 2713,
                "end": 2749
              }
            ],
            "start": 2695,
            "end": 2764
          },
          "start": 2686,
          "end": 2764
        }
      ],
      "start": 2682,
      "end": 2765
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "BinaryExpression",
          "left": {
            "type": "Identifier",
            "name": "myobj3",
            "start": 2771,
            "end": 2777
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 2780,
            "end": 2782
          },
          "start": 2771,
          "end": 2782
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "[object Object]",
          "raw": "\"[object Object]\"",
          "start": 2787,
          "end": 2804
        },
        "start": 2771,
        "end": 2804
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2819,
                "end": 2831
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#13: myobj3 + \"\" calls ToPrimitive with hint Number.  Exptected: \"[object Object]\". Actual: ",
                    "raw": "'#13: myobj3 + \"\" calls ToPrimitive with hint Number.  Exptected: \"[object Object]\". Actual: '",
                    "start": 2832,
                    "end": 2926
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "myobj3",
                        "start": 2930,
                        "end": 2936
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": "",
                        "raw": "\"\"",
                        "start": 2939,
                        "end": 2941
                      },
                      "start": 2930,
                      "end": 2941
                    },
                    "start": 2929,
                    "end": 2942
                  },
                  "start": 2832,
                  "end": 2942
                }
              ],
              "start": 2815,
              "end": 2943
            },
            "start": 2809,
            "end": 2944
          }
        ],
        "start": 2805,
        "end": 2946
      },
      "alternate": null,
      "start": 2767,
      "end": 2946
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2947
}