{
  "type": "Program",
  "start": 0,
  "end": 430,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 280,
      "end": 286,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 284,
          "end": 285,
          "id": {
            "type": "Identifier",
            "start": 284,
            "end": 285,
            "name": "x"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 287,
      "end": 297,
      "expression": {
        "type": "AssignmentExpression",
        "start": 287,
        "end": 296,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 287,
          "end": 288,
          "name": "x"
        },
        "right": {
          "type": "AssignmentExpression",
          "start": 291,
          "end": 296,
          "operator": "=",
          "left": {
            "type": "Identifier",
            "start": 291,
            "end": 292,
            "name": "x"
          },
          "right": {
            "type": "Literal",
            "start": 295,
            "end": 296,
            "value": 1,
            "raw": "1"
          }
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 298,
      "end": 429,
      "test": {
        "type": "BinaryExpression",
        "start": 302,
        "end": 309,
        "left": {
          "type": "Identifier",
          "start": 302,
          "end": 303,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 308,
          "end": 309,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 311,
        "end": 429,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 315,
            "end": 427,
            "argument": {
              "type": "NewExpression",
              "start": 321,
              "end": 426,
              "callee": {
                "type": "Identifier",
                "start": 325,
                "end": 337,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 338,
                  "end": 425,
                  "left": {
                    "type": "Literal",
                    "start": 338,
                    "end": 419,
                    "value": "#1: The expression x = x = 1 is the same x = (x = 1), not (x = x) = 1. Actual: ",
                    "raw": "'#1: The expression x = x = 1 is the same x = (x = 1), not (x = x) = 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 422,
                    "end": 425,
                    "expression": {
                      "type": "Identifier",
                      "start": 423,
                      "end": 424,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}