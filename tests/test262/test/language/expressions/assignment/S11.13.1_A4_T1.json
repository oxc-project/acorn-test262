{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 284,
            "end": 285
          },
          "init": null,
          "start": 284,
          "end": 285
        }
      ],
      "start": 280,
      "end": 286
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 287,
          "end": 288
        },
        "right": {
          "type": "AssignmentExpression",
          "operator": "=",
          "left": {
            "type": "Identifier",
            "name": "x",
            "start": 291,
            "end": 292
          },
          "right": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 295,
            "end": 296
          },
          "start": 291,
          "end": 296
        },
        "start": 287,
        "end": 296
      },
      "start": 287,
      "end": 297
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 302,
          "end": 303
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 308,
          "end": 309
        },
        "start": 302,
        "end": 309
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 325,
                "end": 337
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: The expression x = x = 1 is the same x = (x = 1), not (x = x) = 1. Actual: ",
                    "raw": "'#1: The expression x = x = 1 is the same x = (x = 1), not (x = x) = 1. Actual: '",
                    "start": 338,
                    "end": 419
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 423,
                      "end": 424
                    },
                    "start": 422,
                    "end": 425
                  },
                  "start": 338,
                  "end": 425
                }
              ],
              "start": 321,
              "end": 426
            },
            "start": 315,
            "end": 427
          }
        ],
        "start": 311,
        "end": 429
      },
      "alternate": null,
      "start": 298,
      "end": 429
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 430
}