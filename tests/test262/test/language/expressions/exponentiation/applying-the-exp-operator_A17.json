{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "base",
            "start": 270,
            "end": 274
          },
          "init": {
            "type": "UnaryExpression",
            "operator": "+",
            "argument": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 278,
              "end": 279
            },
            "prefix": true,
            "start": 277,
            "end": 279
          },
          "start": 270,
          "end": 279
        }
      ],
      "start": 266,
      "end": 280
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "exponents",
            "start": 285,
            "end": 294
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [],
            "start": 297,
            "end": 299
          },
          "start": 285,
          "end": 299
        }
      ],
      "start": 281,
      "end": 300
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "exponents",
            "start": 301,
            "end": 310
          },
          "property": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 311,
            "end": 312
          },
          "optional": false,
          "computed": true,
          "start": 301,
          "end": 313
        },
        "right": {
          "type": "Identifier",
          "name": "Infinity",
          "start": 316,
          "end": 324
        },
        "start": 301,
        "end": 324
      },
      "start": 301,
      "end": 325
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "exponents",
            "start": 326,
            "end": 335
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 336,
            "end": 337
          },
          "optional": false,
          "computed": true,
          "start": 326,
          "end": 338
        },
        "right": {
          "type": "Literal",
          "value": 1.7976931348623157e+308,
          "raw": "1.7976931348623157E308",
          "start": 341,
          "end": 363
        },
        "start": 326,
        "end": 363
      },
      "start": 326,
      "end": 364
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "exponents",
            "start": 389,
            "end": 398
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 399,
            "end": 400
          },
          "optional": false,
          "computed": true,
          "start": 389,
          "end": 401
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 404,
          "end": 405
        },
        "start": 389,
        "end": 405
      },
      "start": 389,
      "end": 406
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "exponents",
            "start": 407,
            "end": 416
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 417,
            "end": 418
          },
          "optional": false,
          "computed": true,
          "start": 407,
          "end": 419
        },
        "right": {
          "type": "Literal",
          "value": 1e-15,
          "raw": "0.000000000000001",
          "start": 422,
          "end": 439
        },
        "start": 407,
        "end": 439
      },
      "start": 407,
      "end": 440
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "i",
              "start": 451,
              "end": 452
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 455,
              "end": 456
            },
            "start": 451,
            "end": 456
          }
        ],
        "start": 447,
        "end": 456
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "i",
          "start": 458,
          "end": 459
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "exponents",
            "start": 462,
            "end": 471
          },
          "property": {
            "type": "Identifier",
            "name": "length",
            "start": 472,
            "end": 478
          },
          "optional": false,
          "computed": false,
          "start": 462,
          "end": 478
        },
        "start": 458,
        "end": 478
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "i",
          "start": 480,
          "end": 481
        },
        "start": 480,
        "end": 483
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Identifier",
                    "name": "base",
                    "start": 494,
                    "end": 498
                  },
                  "operator": "**",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "exponents",
                      "start": 502,
                      "end": 511
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "i",
                      "start": 512,
                      "end": 513
                    },
                    "optional": false,
                    "computed": true,
                    "start": 502,
                    "end": 514
                  },
                  "start": 494,
                  "end": 514
                },
                "start": 493,
                "end": 515
              },
              "operator": "!==",
              "right": {
                "type": "UnaryExpression",
                "operator": "+",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 521,
                  "end": 522
                },
                "prefix": true,
                "start": 520,
                "end": 522
              },
              "start": 493,
              "end": 522
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 540,
                      "end": 552
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "BinaryExpression",
                              "left": {
                                "type": "Literal",
                                "value": "(",
                                "raw": "\"(\"",
                                "start": 553,
                                "end": 556
                              },
                              "operator": "+",
                              "right": {
                                "type": "Identifier",
                                "name": "base",
                                "start": 559,
                                "end": 563
                              },
                              "start": 553,
                              "end": 563
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "value": " **  ",
                              "raw": "\" **  \"",
                              "start": 566,
                              "end": 573
                            },
                            "start": 553,
                            "end": 573
                          },
                          "operator": "+",
                          "right": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "exponents",
                              "start": 576,
                              "end": 585
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i",
                              "start": 586,
                              "end": 587
                            },
                            "optional": false,
                            "computed": true,
                            "start": 576,
                            "end": 588
                          },
                          "start": 553,
                          "end": 588
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": ") !== +0",
                          "raw": "\") !== +0\"",
                          "start": 591,
                          "end": 601
                        },
                        "start": 553,
                        "end": 601
                      }
                    ],
                    "start": 536,
                    "end": 602
                  },
                  "start": 530,
                  "end": 603
                }
              ],
              "start": 524,
              "end": 607
            },
            "alternate": null,
            "start": 489,
            "end": 607
          }
        ],
        "start": 485,
        "end": 609
      },
      "start": 442,
      "end": 609
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 610
}