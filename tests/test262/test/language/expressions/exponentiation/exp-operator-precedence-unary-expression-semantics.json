{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 569,
            "end": 575
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 576,
            "end": 585
          },
          "optional": false,
          "computed": false,
          "start": 569,
          "end": 585
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 3,
                  "raw": "3",
                  "start": 588,
                  "end": 589
                },
                "operator": "**",
                "right": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 593,
                  "end": 594
                },
                "start": 588,
                "end": 594
              },
              "start": 587,
              "end": 595
            },
            "prefix": true,
            "start": 586,
            "end": 595
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": 9,
              "raw": "9",
              "start": 598,
              "end": 599
            },
            "prefix": true,
            "start": 597,
            "end": 599
          },
          {
            "type": "Literal",
            "value": "-(3 ** 2) === -9",
            "raw": "\"-(3 ** 2) === -9\"",
            "start": 601,
            "end": 619
          }
        ],
        "optional": false,
        "start": 569,
        "end": 620
      },
      "start": 569,
      "end": 621
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 622,
            "end": 628
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 629,
            "end": 638
          },
          "optional": false,
          "computed": false,
          "start": 622,
          "end": 638
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "+",
            "argument": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 3,
                  "raw": "3",
                  "start": 641,
                  "end": 642
                },
                "operator": "**",
                "right": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 646,
                  "end": 647
                },
                "start": 641,
                "end": 647
              },
              "start": 640,
              "end": 648
            },
            "prefix": true,
            "start": 639,
            "end": 648
          },
          {
            "type": "Literal",
            "value": 9,
            "raw": "9",
            "start": 650,
            "end": 651
          },
          {
            "type": "Literal",
            "value": "+(3 ** 2) === 9",
            "raw": "\"+(3 ** 2) === 9\"",
            "start": 653,
            "end": 670
          }
        ],
        "optional": false,
        "start": 622,
        "end": 671
      },
      "start": 622,
      "end": 672
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 673,
            "end": 679
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 680,
            "end": 689
          },
          "optional": false,
          "computed": false,
          "start": 673,
          "end": 689
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "~",
            "argument": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 3,
                  "raw": "3",
                  "start": 692,
                  "end": 693
                },
                "operator": "**",
                "right": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 697,
                  "end": 698
                },
                "start": 692,
                "end": 698
              },
              "start": 691,
              "end": 699
            },
            "prefix": true,
            "start": 690,
            "end": 699
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": 10,
              "raw": "10",
              "start": 702,
              "end": 704
            },
            "prefix": true,
            "start": 701,
            "end": 704
          },
          {
            "type": "Literal",
            "value": "~(3 ** 2) === -10",
            "raw": "\"~(3 ** 2) === -10\"",
            "start": 706,
            "end": 725
          }
        ],
        "optional": false,
        "start": 673,
        "end": 726
      },
      "start": 673,
      "end": 727
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 728,
            "end": 734
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 735,
            "end": 744
          },
          "optional": false,
          "computed": false,
          "start": 728,
          "end": 744
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "!",
            "argument": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Literal",
                  "value": 3,
                  "raw": "3",
                  "start": 747,
                  "end": 748
                },
                "operator": "**",
                "right": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 752,
                  "end": 753
                },
                "start": 747,
                "end": 753
              },
              "start": 746,
              "end": 754
            },
            "prefix": true,
            "start": 745,
            "end": 754
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 756,
            "end": 761
          },
          {
            "type": "Literal",
            "value": "!(3 ** 2) === false",
            "raw": "\"!(3 ** 2) === false\"",
            "start": 763,
            "end": 784
          }
        ],
        "optional": false,
        "start": 728,
        "end": 785
      },
      "start": 728,
      "end": 786
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 789,
            "end": 795
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 796,
            "end": 805
          },
          "optional": false,
          "computed": false,
          "start": 789,
          "end": 805
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 806,
              "end": 807
            },
            "operator": "**",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 812,
                "end": 813
              },
              "prefix": true,
              "start": 811,
              "end": 813
            },
            "start": 806,
            "end": 813
          },
          {
            "type": "Literal",
            "value": 0.25,
            "raw": "0.25",
            "start": 815,
            "end": 819
          }
        ],
        "optional": false,
        "start": 789,
        "end": 820
      },
      "start": 789,
      "end": 821
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "o",
            "start": 827,
            "end": 828
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "p",
                  "start": 833,
                  "end": 834
                },
                "value": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 836,
                  "end": 837
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 833,
                "end": 837
              }
            ],
            "start": 831,
            "end": 839
          },
          "start": 827,
          "end": 839
        }
      ],
      "start": 823,
      "end": 840
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 842,
            "end": 848
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 849,
            "end": 858
          },
          "optional": false,
          "computed": false,
          "start": 842,
          "end": 858
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 859,
              "end": 860
            },
            "operator": "**",
            "right": {
              "type": "UnaryExpression",
              "operator": "delete",
              "argument": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "o",
                  "start": 871,
                  "end": 872
                },
                "property": {
                  "type": "Identifier",
                  "name": "p",
                  "start": 873,
                  "end": 874
                },
                "optional": false,
                "computed": false,
                "start": 871,
                "end": 874
              },
              "prefix": true,
              "start": 864,
              "end": 874
            },
            "start": 859,
            "end": 874
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 876,
            "end": 877
          },
          {
            "type": "Literal",
            "value": "delete o.p -> true -> ToNumber(true) -> 1",
            "raw": "\"delete o.p -> true -> ToNumber(true) -> 1\"",
            "start": 879,
            "end": 922
          }
        ],
        "optional": false,
        "start": 842,
        "end": 923
      },
      "start": 842,
      "end": 924
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 925,
            "end": 931
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 932,
            "end": 941
          },
          "optional": false,
          "computed": false,
          "start": 925,
          "end": 941
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 942,
              "end": 943
            },
            "operator": "**",
            "right": {
              "type": "UnaryExpression",
              "operator": "void",
              "argument": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 952,
                "end": 953
              },
              "prefix": true,
              "start": 947,
              "end": 953
            },
            "start": 942,
            "end": 953
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 955,
            "end": 958
          },
          {
            "type": "Literal",
            "value": "void 1 -> undefined -> ToNumber(undefined) -> NaN",
            "raw": "\"void 1 -> undefined -> ToNumber(undefined) -> NaN\"",
            "start": 960,
            "end": 1011
          }
        ],
        "optional": false,
        "start": 925,
        "end": 1012
      },
      "start": 925,
      "end": 1013
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1014,
            "end": 1020
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1021,
            "end": 1030
          },
          "optional": false,
          "computed": false,
          "start": 1014,
          "end": 1030
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1031,
              "end": 1032
            },
            "operator": "**",
            "right": {
              "type": "UnaryExpression",
              "operator": "typeof",
              "argument": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1043,
                "end": 1044
              },
              "prefix": true,
              "start": 1036,
              "end": 1044
            },
            "start": 1031,
            "end": 1044
          },
          {
            "type": "Identifier",
            "name": "NaN",
            "start": 1046,
            "end": 1049
          },
          {
            "type": "Literal",
            "value": "typeof 1 -> 'number' -> ToNumber('number') -> NaN",
            "raw": "\"typeof 1 -> 'number' -> ToNumber('number') -> NaN\"",
            "start": 1051,
            "end": 1102
          }
        ],
        "optional": false,
        "start": 1014,
        "end": 1103
      },
      "start": 1014,
      "end": 1104
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "s",
            "start": 1110,
            "end": 1111
          },
          "init": {
            "type": "Literal",
            "value": "2",
            "raw": "\"2\"",
            "start": 1114,
            "end": 1117
          },
          "start": 1110,
          "end": 1117
        }
      ],
      "start": 1106,
      "end": 1118
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "n",
            "start": 1123,
            "end": 1124
          },
          "init": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1127,
            "end": 1128
          },
          "start": 1123,
          "end": 1128
        }
      ],
      "start": 1119,
      "end": 1129
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1131,
            "end": 1137
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1138,
            "end": 1147
          },
          "optional": false,
          "computed": false,
          "start": 1131,
          "end": 1147
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1148,
              "end": 1149
            },
            "operator": "**",
            "right": {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "Identifier",
                "name": "s",
                "start": 1154,
                "end": 1155
              },
              "prefix": true,
              "start": 1153,
              "end": 1155
            },
            "start": 1148,
            "end": 1155
          },
          {
            "type": "Literal",
            "value": 4,
            "raw": "4",
            "start": 1157,
            "end": 1158
          },
          {
            "type": "Literal",
            "value": "+s -> +'2' -> 2 -> ToNumber(2) -> 2",
            "raw": "\"+s -> +'2' -> 2 -> ToNumber(2) -> 2\"",
            "start": 1160,
            "end": 1197
          }
        ],
        "optional": false,
        "start": 1131,
        "end": 1198
      },
      "start": 1131,
      "end": 1199
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1200,
            "end": 1206
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1207,
            "end": 1216
          },
          "optional": false,
          "computed": false,
          "start": 1200,
          "end": 1216
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1217,
              "end": 1218
            },
            "operator": "**",
            "right": {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "Identifier",
                "name": "n",
                "start": 1223,
                "end": 1224
              },
              "prefix": true,
              "start": 1222,
              "end": 1224
            },
            "start": 1217,
            "end": 1224
          },
          {
            "type": "Literal",
            "value": 4,
            "raw": "4",
            "start": 1226,
            "end": 1227
          },
          {
            "type": "Literal",
            "value": "+s -> +2 -> 2 -> ToNumber(2) -> 2",
            "raw": "\"+s -> +2 -> 2 -> ToNumber(2) -> 2\"",
            "start": 1229,
            "end": 1264
          }
        ],
        "optional": false,
        "start": 1200,
        "end": 1265
      },
      "start": 1200,
      "end": 1266
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1268,
            "end": 1274
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1275,
            "end": 1284
          },
          "optional": false,
          "computed": false,
          "start": 1268,
          "end": 1284
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1285,
              "end": 1286
            },
            "operator": "**",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Identifier",
                "name": "s",
                "start": 1291,
                "end": 1292
              },
              "prefix": true,
              "start": 1290,
              "end": 1292
            },
            "start": 1285,
            "end": 1292
          },
          {
            "type": "Literal",
            "value": 0.25,
            "raw": "0.25",
            "start": 1294,
            "end": 1298
          },
          {
            "type": "Literal",
            "value": "-s -> -'2' -> -2 -> ToNumber(-2) -> -2",
            "raw": "\"-s -> -'2' -> -2 -> ToNumber(-2) -> -2\"",
            "start": 1300,
            "end": 1340
          }
        ],
        "optional": false,
        "start": 1268,
        "end": 1341
      },
      "start": 1268,
      "end": 1342
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1343,
            "end": 1349
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1350,
            "end": 1359
          },
          "optional": false,
          "computed": false,
          "start": 1343,
          "end": 1359
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1360,
              "end": 1361
            },
            "operator": "**",
            "right": {
              "type": "UnaryExpression",
              "operator": "-",
              "argument": {
                "type": "Identifier",
                "name": "n",
                "start": 1366,
                "end": 1367
              },
              "prefix": true,
              "start": 1365,
              "end": 1367
            },
            "start": 1360,
            "end": 1367
          },
          {
            "type": "Literal",
            "value": 0.25,
            "raw": "0.25",
            "start": 1369,
            "end": 1373
          },
          {
            "type": "Literal",
            "value": "-s -> -2 -> -2 -> ToNumber(-2) -> -2",
            "raw": "\"-s -> -2 -> -2 -> ToNumber(-2) -> -2\"",
            "start": 1375,
            "end": 1413
          }
        ],
        "optional": false,
        "start": 1343,
        "end": 1414
      },
      "start": 1343,
      "end": 1415
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1417,
            "end": 1423
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1424,
            "end": 1433
          },
          "optional": false,
          "computed": false,
          "start": 1417,
          "end": 1433
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1434,
              "end": 1435
            },
            "operator": "**",
            "right": {
              "type": "UnaryExpression",
              "operator": "~",
              "argument": {
                "type": "Identifier",
                "name": "s",
                "start": 1440,
                "end": 1441
              },
              "prefix": true,
              "start": 1439,
              "end": 1441
            },
            "start": 1434,
            "end": 1441
          },
          {
            "type": "Literal",
            "value": 0.125,
            "raw": "0.125",
            "start": 1443,
            "end": 1448
          },
          {
            "type": "Literal",
            "value": "~s -> ~'2' -> -3 -> ToNumber(-3) -> -3",
            "raw": "\"~s -> ~'2' -> -3 -> ToNumber(-3) -> -3\"",
            "start": 1450,
            "end": 1490
          }
        ],
        "optional": false,
        "start": 1417,
        "end": 1491
      },
      "start": 1417,
      "end": 1492
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1493,
            "end": 1499
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1500,
            "end": 1509
          },
          "optional": false,
          "computed": false,
          "start": 1493,
          "end": 1509
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1510,
              "end": 1511
            },
            "operator": "**",
            "right": {
              "type": "UnaryExpression",
              "operator": "~",
              "argument": {
                "type": "Identifier",
                "name": "n",
                "start": 1516,
                "end": 1517
              },
              "prefix": true,
              "start": 1515,
              "end": 1517
            },
            "start": 1510,
            "end": 1517
          },
          {
            "type": "Literal",
            "value": 0.125,
            "raw": "0.125",
            "start": 1519,
            "end": 1524
          },
          {
            "type": "Literal",
            "value": "~s -> ~2 -> -3 -> ToNumber(-3) -> -3",
            "raw": "\"~s -> ~2 -> -3 -> ToNumber(-3) -> -3\"",
            "start": 1526,
            "end": 1564
          }
        ],
        "optional": false,
        "start": 1493,
        "end": 1565
      },
      "start": 1493,
      "end": 1566
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1568,
            "end": 1574
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1575,
            "end": 1584
          },
          "optional": false,
          "computed": false,
          "start": 1568,
          "end": 1584
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1585,
              "end": 1586
            },
            "operator": "**",
            "right": {
              "type": "UnaryExpression",
              "operator": "!",
              "argument": {
                "type": "Identifier",
                "name": "s",
                "start": 1591,
                "end": 1592
              },
              "prefix": true,
              "start": 1590,
              "end": 1592
            },
            "start": 1585,
            "end": 1592
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1594,
            "end": 1595
          },
          {
            "type": "Literal",
            "value": "!s -> !'2' -> false -> ToNumber(false) -> 0",
            "raw": "\"!s -> !'2' -> false -> ToNumber(false) -> 0\"",
            "start": 1597,
            "end": 1642
          }
        ],
        "optional": false,
        "start": 1568,
        "end": 1643
      },
      "start": 1568,
      "end": 1644
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1645,
            "end": 1651
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1652,
            "end": 1661
          },
          "optional": false,
          "computed": false,
          "start": 1645,
          "end": 1661
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1662,
              "end": 1663
            },
            "operator": "**",
            "right": {
              "type": "UnaryExpression",
              "operator": "!",
              "argument": {
                "type": "Identifier",
                "name": "n",
                "start": 1668,
                "end": 1669
              },
              "prefix": true,
              "start": 1667,
              "end": 1669
            },
            "start": 1662,
            "end": 1669
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1671,
            "end": 1672
          },
          {
            "type": "Literal",
            "value": "!s -> !2 -> false -> ToNumber(false) -> 0",
            "raw": "\"!s -> !2 -> false -> ToNumber(false) -> 0\"",
            "start": 1674,
            "end": 1717
          }
        ],
        "optional": false,
        "start": 1645,
        "end": 1718
      },
      "start": 1645,
      "end": 1719
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "capture",
            "start": 1726,
            "end": 1733
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [],
            "start": 1736,
            "end": 1738
          },
          "start": 1726,
          "end": 1738
        }
      ],
      "start": 1722,
      "end": 1739
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "leftValue",
            "start": 1744,
            "end": 1753
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "valueOf",
                  "start": 1758,
                  "end": 1765
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "capture",
                              "start": 1770,
                              "end": 1777
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "push",
                              "start": 1778,
                              "end": 1782
                            },
                            "optional": false,
                            "computed": false,
                            "start": 1770,
                            "end": 1782
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "leftValue",
                              "raw": "\"leftValue\"",
                              "start": 1783,
                              "end": 1794
                            }
                          ],
                          "optional": false,
                          "start": 1770,
                          "end": 1795
                        },
                        "start": 1770,
                        "end": 1796
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 3,
                          "raw": "3",
                          "start": 1804,
                          "end": 1805
                        },
                        "start": 1797,
                        "end": 1806
                      }
                    ],
                    "start": 1768,
                    "end": 1808
                  },
                  "expression": false,
                  "start": 1765,
                  "end": 1808
                },
                "method": true,
                "shorthand": false,
                "computed": false,
                "start": 1758,
                "end": 1808
              }
            ],
            "start": 1756,
            "end": 1809
          },
          "start": 1744,
          "end": 1809
        }
      ],
      "start": 1740,
      "end": 1810
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "rightValue",
            "start": 1815,
            "end": 1825
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "valueOf",
                  "start": 1830,
                  "end": 1837
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "capture",
                              "start": 1842,
                              "end": 1849
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "push",
                              "start": 1850,
                              "end": 1854
                            },
                            "optional": false,
                            "computed": false,
                            "start": 1842,
                            "end": 1854
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "rightValue",
                              "raw": "\"rightValue\"",
                              "start": 1855,
                              "end": 1867
                            }
                          ],
                          "optional": false,
                          "start": 1842,
                          "end": 1868
                        },
                        "start": 1842,
                        "end": 1869
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 2,
                          "raw": "2",
                          "start": 1877,
                          "end": 1878
                        },
                        "start": 1870,
                        "end": 1879
                      }
                    ],
                    "start": 1840,
                    "end": 1881
                  },
                  "expression": false,
                  "start": 1837,
                  "end": 1881
                },
                "method": true,
                "shorthand": false,
                "computed": false,
                "start": 1830,
                "end": 1881
              }
            ],
            "start": 1828,
            "end": 1882
          },
          "start": 1815,
          "end": 1882
        }
      ],
      "start": 1811,
      "end": 1883
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "BinaryExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "SequenceExpression",
            "expressions": [
              {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "capture",
                    "start": 1886,
                    "end": 1893
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "push",
                    "start": 1894,
                    "end": 1898
                  },
                  "optional": false,
                  "computed": false,
                  "start": 1886,
                  "end": 1898
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "left",
                    "raw": "\"left\"",
                    "start": 1899,
                    "end": 1905
                  }
                ],
                "optional": false,
                "start": 1886,
                "end": 1906
              },
              {
                "type": "Identifier",
                "name": "leftValue",
                "start": 1908,
                "end": 1917
              }
            ],
            "start": 1886,
            "end": 1917
          },
          "start": 1885,
          "end": 1918
        },
        "operator": "**",
        "right": {
          "type": "UnaryExpression",
          "operator": "+",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "SequenceExpression",
              "expressions": [
                {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "capture",
                      "start": 1924,
                      "end": 1931
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "push",
                      "start": 1932,
                      "end": 1936
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1924,
                    "end": 1936
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "right",
                      "raw": "\"right\"",
                      "start": 1937,
                      "end": 1944
                    }
                  ],
                  "optional": false,
                  "start": 1924,
                  "end": 1945
                },
                {
                  "type": "Identifier",
                  "name": "rightValue",
                  "start": 1947,
                  "end": 1957
                }
              ],
              "start": 1924,
              "end": 1957
            },
            "start": 1923,
            "end": 1958
          },
          "prefix": true,
          "start": 1922,
          "end": 1958
        },
        "start": 1885,
        "end": 1958
      },
      "start": 1885,
      "end": 1959
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2134,
            "end": 2140
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2141,
            "end": 2150
          },
          "optional": false,
          "computed": false,
          "start": 2134,
          "end": 2150
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "capture",
              "start": 2151,
              "end": 2158
            },
            "property": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 2159,
              "end": 2160
            },
            "optional": false,
            "computed": true,
            "start": 2151,
            "end": 2161
          },
          {
            "type": "Literal",
            "value": "left",
            "raw": "\"left\"",
            "start": 2163,
            "end": 2169
          },
          {
            "type": "Literal",
            "value": "Expected the 1st element captured to be 'left'",
            "raw": "\"Expected the 1st element captured to be 'left'\"",
            "start": 2171,
            "end": 2219
          }
        ],
        "optional": false,
        "start": 2134,
        "end": 2220
      },
      "start": 2134,
      "end": 2221
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2222,
            "end": 2228
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2229,
            "end": 2238
          },
          "optional": false,
          "computed": false,
          "start": 2222,
          "end": 2238
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "capture",
              "start": 2239,
              "end": 2246
            },
            "property": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 2247,
              "end": 2248
            },
            "optional": false,
            "computed": true,
            "start": 2239,
            "end": 2249
          },
          {
            "type": "Literal",
            "value": "right",
            "raw": "\"right\"",
            "start": 2251,
            "end": 2258
          },
          {
            "type": "Literal",
            "value": "Expected the 2nd element captured to be 'right'",
            "raw": "\"Expected the 2nd element captured to be 'right'\"",
            "start": 2260,
            "end": 2309
          }
        ],
        "optional": false,
        "start": 2222,
        "end": 2310
      },
      "start": 2222,
      "end": 2311
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2312,
            "end": 2318
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2319,
            "end": 2328
          },
          "optional": false,
          "computed": false,
          "start": 2312,
          "end": 2328
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "capture",
              "start": 2329,
              "end": 2336
            },
            "property": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 2337,
              "end": 2338
            },
            "optional": false,
            "computed": true,
            "start": 2329,
            "end": 2339
          },
          {
            "type": "Literal",
            "value": "rightValue",
            "raw": "\"rightValue\"",
            "start": 2341,
            "end": 2353
          },
          {
            "type": "Literal",
            "value": "Expected the 3rd element captured to be 'rightValue'",
            "raw": "\"Expected the 3rd element captured to be 'rightValue'\"",
            "start": 2355,
            "end": 2409
          }
        ],
        "optional": false,
        "start": 2312,
        "end": 2410
      },
      "start": 2312,
      "end": 2411
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 2412,
            "end": 2418
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 2419,
            "end": 2428
          },
          "optional": false,
          "computed": false,
          "start": 2412,
          "end": 2428
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "capture",
              "start": 2429,
              "end": 2436
            },
            "property": {
              "type": "Literal",
              "value": 3,
              "raw": "3",
              "start": 2437,
              "end": 2438
            },
            "optional": false,
            "computed": true,
            "start": 2429,
            "end": 2439
          },
          {
            "type": "Literal",
            "value": "leftValue",
            "raw": "\"leftValue\"",
            "start": 2441,
            "end": 2452
          },
          {
            "type": "Literal",
            "value": "Expected the 4th element captured to be 'leftValue'",
            "raw": "\"Expected the 4th element captured to be 'leftValue'\"",
            "start": 2454,
            "end": 2507
          }
        ],
        "optional": false,
        "start": 2412,
        "end": 2508
      },
      "start": 2412,
      "end": 2509
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2510
}