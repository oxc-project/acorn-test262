{
  "type": "Program",
  "start": 0,
  "end": 1047,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 775,
      "end": 795,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 779,
          "end": 794,
          "id": {
            "type": "Identifier",
            "start": 779,
            "end": 790,
            "name": "beforeCount"
          },
          "init": {
            "type": "Literal",
            "start": 793,
            "end": 794,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 796,
      "end": 815,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 800,
          "end": 814,
          "id": {
            "type": "Identifier",
            "start": 800,
            "end": 810,
            "name": "afterCount"
          },
          "init": {
            "type": "Literal",
            "start": 813,
            "end": 814,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "start": 816,
      "end": 869,
      "id": {
        "type": "Identifier",
        "start": 825,
        "end": 835,
        "name": "throwError"
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 838,
        "end": 869,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 842,
            "end": 867,
            "argument": {
              "type": "NewExpression",
              "start": 848,
              "end": 866,
              "callee": {
                "type": "Identifier",
                "start": 852,
                "end": 864,
                "name": "Test262Error"
              },
              "arguments": []
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "start": 871,
      "end": 978,
      "expression": {
        "type": "CallExpression",
        "start": 871,
        "end": 977,
        "callee": {
          "type": "MemberExpression",
          "start": 871,
          "end": 884,
          "object": {
            "type": "Identifier",
            "start": 871,
            "end": 877,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 878,
            "end": 884,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 885,
            "end": 897,
            "name": "Test262Error"
          },
          {
            "type": "FunctionExpression",
            "start": 899,
            "end": 976,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 910,
              "end": 976,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 914,
                  "end": 974,
                  "expression": {
                    "type": "SequenceExpression",
                    "start": 914,
                    "end": 973,
                    "expressions": [
                      {
                        "type": "AssignmentExpression",
                        "start": 914,
                        "end": 930,
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "start": 914,
                          "end": 925,
                          "name": "beforeCount"
                        },
                        "right": {
                          "type": "Literal",
                          "start": 929,
                          "end": 930,
                          "value": 1,
                          "raw": "1"
                        }
                      },
                      {
                        "type": "ImportExpression",
                        "start": 932,
                        "end": 956,
                        "source": {
                          "type": "Literal",
                          "start": 939,
                          "end": 941,
                          "value": "",
                          "raw": "''"
                        },
                        "options": {
                          "type": "CallExpression",
                          "start": 943,
                          "end": 955,
                          "callee": {
                            "type": "Identifier",
                            "start": 943,
                            "end": 953,
                            "name": "throwError"
                          },
                          "arguments": [],
                          "optional": false
                        },
                        "phase": null
                      },
                      {
                        "type": "AssignmentExpression",
                        "start": 958,
                        "end": 973,
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "start": 958,
                          "end": 968,
                          "name": "afterCount"
                        },
                        "right": {
                          "type": "Literal",
                          "start": 972,
                          "end": 973,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "expression": false
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 980,
      "end": 1013,
      "expression": {
        "type": "CallExpression",
        "start": 980,
        "end": 1012,
        "callee": {
          "type": "MemberExpression",
          "start": 980,
          "end": 996,
          "object": {
            "type": "Identifier",
            "start": 980,
            "end": 986,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 987,
            "end": 996,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 997,
            "end": 1008,
            "name": "beforeCount"
          },
          {
            "type": "Literal",
            "start": 1010,
            "end": 1011,
            "value": 1,
            "raw": "1"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1014,
      "end": 1046,
      "expression": {
        "type": "CallExpression",
        "start": 1014,
        "end": 1045,
        "callee": {
          "type": "MemberExpression",
          "start": 1014,
          "end": 1030,
          "object": {
            "type": "Identifier",
            "start": 1014,
            "end": 1020,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1021,
            "end": 1030,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1031,
            "end": 1041,
            "name": "afterCount"
          },
          {
            "type": "Literal",
            "start": 1043,
            "end": 1044,
            "value": 0,
            "raw": "0"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}