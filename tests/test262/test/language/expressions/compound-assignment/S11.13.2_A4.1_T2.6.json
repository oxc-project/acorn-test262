{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 381,
            "end": 382
          },
          "init": null,
          "start": 381,
          "end": 382
        }
      ],
      "start": 377,
      "end": 383
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 395,
          "end": 396
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 399,
          "end": 402
        },
        "start": 395,
        "end": 402
      },
      "start": 395,
      "end": 403
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 404,
          "end": 405
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 409,
          "end": 418
        },
        "start": 404,
        "end": 418
      },
      "start": 404,
      "end": 419
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 424,
            "end": 429
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 430,
              "end": 431
            }
          ],
          "optional": false,
          "start": 424,
          "end": 432
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 437,
          "end": 441
        },
        "start": 424,
        "end": 441
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 457,
                "end": 469
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = \"1\"; x *= undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#1: x = \"1\"; x *= undefined; x === Not-a-Number. Actual: '",
                    "start": 470,
                    "end": 529
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 533,
                      "end": 534
                    },
                    "start": 532,
                    "end": 535
                  },
                  "start": 470,
                  "end": 535
                }
              ],
              "start": 453,
              "end": 536
            },
            "start": 447,
            "end": 537
          }
        ],
        "start": 443,
        "end": 539
      },
      "alternate": null,
      "start": 420,
      "end": 539
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 551,
          "end": 552
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 555,
          "end": 564
        },
        "start": 551,
        "end": 564
      },
      "start": 551,
      "end": 565
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 566,
          "end": 567
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 571,
          "end": 574
        },
        "start": 566,
        "end": 574
      },
      "start": 566,
      "end": 575
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 580,
            "end": 585
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 586,
              "end": 587
            }
          ],
          "optional": false,
          "start": 580,
          "end": 588
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 593,
          "end": 597
        },
        "start": 580,
        "end": 597
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 613,
                "end": 625
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = undefined; x *= \"1\"; x === Not-a-Number. Actual: ",
                    "raw": "'#2: x = undefined; x *= \"1\"; x === Not-a-Number. Actual: '",
                    "start": 626,
                    "end": 685
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 689,
                      "end": 690
                    },
                    "start": 688,
                    "end": 691
                  },
                  "start": 626,
                  "end": 691
                }
              ],
              "start": 609,
              "end": 692
            },
            "start": 603,
            "end": 693
          }
        ],
        "start": 599,
        "end": 695
      },
      "alternate": null,
      "start": 576,
      "end": 695
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 707,
          "end": 708
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 715,
            "end": 721
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 722,
              "end": 725
            }
          ],
          "start": 711,
          "end": 726
        },
        "start": 707,
        "end": 726
      },
      "start": 707,
      "end": 727
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 728,
          "end": 729
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 733,
          "end": 742
        },
        "start": 728,
        "end": 742
      },
      "start": 728,
      "end": 743
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 748,
            "end": 753
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 754,
              "end": 755
            }
          ],
          "optional": false,
          "start": 748,
          "end": 756
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 761,
          "end": 765
        },
        "start": 748,
        "end": 765
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 781,
                "end": 793
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new String(\"1\"); x *= undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#3: x = new String(\"1\"); x *= undefined; x === Not-a-Number. Actual: '",
                    "start": 794,
                    "end": 865
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 869,
                      "end": 870
                    },
                    "start": 868,
                    "end": 871
                  },
                  "start": 794,
                  "end": 871
                }
              ],
              "start": 777,
              "end": 872
            },
            "start": 771,
            "end": 873
          }
        ],
        "start": 767,
        "end": 875
      },
      "alternate": null,
      "start": 744,
      "end": 875
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 887,
          "end": 888
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 891,
          "end": 900
        },
        "start": 887,
        "end": 900
      },
      "start": 887,
      "end": 901
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 902,
          "end": 903
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 911,
            "end": 917
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 918,
              "end": 921
            }
          ],
          "start": 907,
          "end": 922
        },
        "start": 902,
        "end": 922
      },
      "start": 902,
      "end": 923
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 928,
            "end": 933
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 934,
              "end": 935
            }
          ],
          "optional": false,
          "start": 928,
          "end": 936
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 941,
          "end": 945
        },
        "start": 928,
        "end": 945
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 961,
                "end": 973
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = undefined; x *= new String(\"1\"); x === Not-a-Number. Actual: ",
                    "raw": "'#4: x = undefined; x *= new String(\"1\"); x === Not-a-Number. Actual: '",
                    "start": 974,
                    "end": 1045
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1049,
                      "end": 1050
                    },
                    "start": 1048,
                    "end": 1051
                  },
                  "start": 974,
                  "end": 1051
                }
              ],
              "start": 957,
              "end": 1052
            },
            "start": 951,
            "end": 1053
          }
        ],
        "start": 947,
        "end": 1055
      },
      "alternate": null,
      "start": 924,
      "end": 1055
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1056
}