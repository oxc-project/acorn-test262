{
  "type": "Program",
  "start": 0,
  "end": 1056,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 377,
      "end": 383,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 381,
          "end": 382,
          "id": {
            "type": "Identifier",
            "start": 381,
            "end": 382,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 395,
      "end": 403,
      "expression": {
        "type": "AssignmentExpression",
        "start": 395,
        "end": 402,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 395,
          "end": 396,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 399,
          "end": 402,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 404,
      "end": 419,
      "expression": {
        "type": "AssignmentExpression",
        "start": 404,
        "end": 418,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 404,
          "end": 405,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 409,
          "end": 418,
          "name": "undefined"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 420,
      "end": 539,
      "test": {
        "type": "BinaryExpression",
        "start": 424,
        "end": 441,
        "left": {
          "type": "CallExpression",
          "start": 424,
          "end": 432,
          "callee": {
            "type": "Identifier",
            "start": 424,
            "end": 429,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 430,
              "end": 431,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 437,
          "end": 441,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 443,
        "end": 539,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 447,
            "end": 537,
            "argument": {
              "type": "NewExpression",
              "start": 453,
              "end": 536,
              "callee": {
                "type": "Identifier",
                "start": 457,
                "end": 469,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 470,
                  "end": 535,
                  "left": {
                    "type": "Literal",
                    "start": 470,
                    "end": 529,
                    "value": "#1: x = \"1\"; x *= undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#1: x = \"1\"; x *= undefined; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 532,
                    "end": 535,
                    "expression": {
                      "type": "Identifier",
                      "start": 533,
                      "end": 534,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 551,
      "end": 565,
      "expression": {
        "type": "AssignmentExpression",
        "start": 551,
        "end": 564,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 551,
          "end": 552,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 555,
          "end": 564,
          "name": "undefined"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 566,
      "end": 575,
      "expression": {
        "type": "AssignmentExpression",
        "start": 566,
        "end": 574,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 566,
          "end": 567,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 571,
          "end": 574,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 576,
      "end": 695,
      "test": {
        "type": "BinaryExpression",
        "start": 580,
        "end": 597,
        "left": {
          "type": "CallExpression",
          "start": 580,
          "end": 588,
          "callee": {
            "type": "Identifier",
            "start": 580,
            "end": 585,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 586,
              "end": 587,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 593,
          "end": 597,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 599,
        "end": 695,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 603,
            "end": 693,
            "argument": {
              "type": "NewExpression",
              "start": 609,
              "end": 692,
              "callee": {
                "type": "Identifier",
                "start": 613,
                "end": 625,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 626,
                  "end": 691,
                  "left": {
                    "type": "Literal",
                    "start": 626,
                    "end": 685,
                    "value": "#2: x = undefined; x *= \"1\"; x === Not-a-Number. Actual: ",
                    "raw": "'#2: x = undefined; x *= \"1\"; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 688,
                    "end": 691,
                    "expression": {
                      "type": "Identifier",
                      "start": 689,
                      "end": 690,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 707,
      "end": 727,
      "expression": {
        "type": "AssignmentExpression",
        "start": 707,
        "end": 726,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 707,
          "end": 708,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 711,
          "end": 726,
          "callee": {
            "type": "Identifier",
            "start": 715,
            "end": 721,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 722,
              "end": 725,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 728,
      "end": 743,
      "expression": {
        "type": "AssignmentExpression",
        "start": 728,
        "end": 742,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 728,
          "end": 729,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 733,
          "end": 742,
          "name": "undefined"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 744,
      "end": 875,
      "test": {
        "type": "BinaryExpression",
        "start": 748,
        "end": 765,
        "left": {
          "type": "CallExpression",
          "start": 748,
          "end": 756,
          "callee": {
            "type": "Identifier",
            "start": 748,
            "end": 753,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 754,
              "end": 755,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 761,
          "end": 765,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 767,
        "end": 875,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 771,
            "end": 873,
            "argument": {
              "type": "NewExpression",
              "start": 777,
              "end": 872,
              "callee": {
                "type": "Identifier",
                "start": 781,
                "end": 793,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 794,
                  "end": 871,
                  "left": {
                    "type": "Literal",
                    "start": 794,
                    "end": 865,
                    "value": "#3: x = new String(\"1\"); x *= undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#3: x = new String(\"1\"); x *= undefined; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 868,
                    "end": 871,
                    "expression": {
                      "type": "Identifier",
                      "start": 869,
                      "end": 870,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 887,
      "end": 901,
      "expression": {
        "type": "AssignmentExpression",
        "start": 887,
        "end": 900,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 887,
          "end": 888,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 891,
          "end": 900,
          "name": "undefined"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 902,
      "end": 923,
      "expression": {
        "type": "AssignmentExpression",
        "start": 902,
        "end": 922,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 902,
          "end": 903,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 907,
          "end": 922,
          "callee": {
            "type": "Identifier",
            "start": 911,
            "end": 917,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 918,
              "end": 921,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 924,
      "end": 1055,
      "test": {
        "type": "BinaryExpression",
        "start": 928,
        "end": 945,
        "left": {
          "type": "CallExpression",
          "start": 928,
          "end": 936,
          "callee": {
            "type": "Identifier",
            "start": 928,
            "end": 933,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 934,
              "end": 935,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 941,
          "end": 945,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 947,
        "end": 1055,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 951,
            "end": 1053,
            "argument": {
              "type": "NewExpression",
              "start": 957,
              "end": 1052,
              "callee": {
                "type": "Identifier",
                "start": 961,
                "end": 973,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 974,
                  "end": 1051,
                  "left": {
                    "type": "Literal",
                    "start": 974,
                    "end": 1045,
                    "value": "#4: x = undefined; x *= new String(\"1\"); x === Not-a-Number. Actual: ",
                    "raw": "'#4: x = undefined; x *= new String(\"1\"); x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1048,
                    "end": 1051,
                    "expression": {
                      "type": "Identifier",
                      "start": 1049,
                      "end": 1050,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}