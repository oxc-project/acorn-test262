{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 381,
            "end": 382
          },
          "init": null,
          "start": 381,
          "end": 382
        }
      ],
      "start": 377,
      "end": 383
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 395,
          "end": 396
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 399,
          "end": 403
        },
        "start": 395,
        "end": 403
      },
      "start": 395,
      "end": 404
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 405,
          "end": 406
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 412,
          "end": 413
        },
        "start": 405,
        "end": 413
      },
      "start": 405,
      "end": 414
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 419,
          "end": 420
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 425,
          "end": 426
        },
        "start": 419,
        "end": 426
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 442,
                "end": 454
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = true; x >>>= 1; x === 0. Actual: ",
                    "raw": "'#1: x = true; x >>>= 1; x === 0. Actual: '",
                    "start": 455,
                    "end": 498
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 502,
                      "end": 503
                    },
                    "start": 501,
                    "end": 504
                  },
                  "start": 455,
                  "end": 504
                }
              ],
              "start": 438,
              "end": 505
            },
            "start": 432,
            "end": 506
          }
        ],
        "start": 428,
        "end": 508
      },
      "alternate": null,
      "start": 415,
      "end": 508
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 520,
          "end": 521
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 524,
          "end": 525
        },
        "start": 520,
        "end": 525
      },
      "start": 520,
      "end": 526
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 527,
          "end": 528
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 534,
          "end": 538
        },
        "start": 527,
        "end": 538
      },
      "start": 527,
      "end": 539
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 544,
          "end": 545
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 550,
          "end": 551
        },
        "start": 544,
        "end": 551
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 567,
                "end": 579
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = 1; x >>>= true; x === 0. Actual: ",
                    "raw": "'#2: x = 1; x >>>= true; x === 0. Actual: '",
                    "start": 580,
                    "end": 623
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 627,
                      "end": 628
                    },
                    "start": 626,
                    "end": 629
                  },
                  "start": 580,
                  "end": 629
                }
              ],
              "start": 563,
              "end": 630
            },
            "start": 557,
            "end": 631
          }
        ],
        "start": 553,
        "end": 633
      },
      "alternate": null,
      "start": 540,
      "end": 633
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 645,
          "end": 646
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 653,
            "end": 660
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 661,
              "end": 665
            }
          ],
          "start": 649,
          "end": 666
        },
        "start": 645,
        "end": 666
      },
      "start": 645,
      "end": 667
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 668,
          "end": 669
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 675,
          "end": 676
        },
        "start": 668,
        "end": 676
      },
      "start": 668,
      "end": 677
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 682,
          "end": 683
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 688,
          "end": 689
        },
        "start": 682,
        "end": 689
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 705,
                "end": 717
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Boolean(true); x >>>= 1; x === 0. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x >>>= 1; x === 0. Actual: '",
                    "start": 718,
                    "end": 774
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 778,
                      "end": 779
                    },
                    "start": 777,
                    "end": 780
                  },
                  "start": 718,
                  "end": 780
                }
              ],
              "start": 701,
              "end": 781
            },
            "start": 695,
            "end": 782
          }
        ],
        "start": 691,
        "end": 784
      },
      "alternate": null,
      "start": 678,
      "end": 784
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 796,
          "end": 797
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 800,
          "end": 801
        },
        "start": 796,
        "end": 801
      },
      "start": 796,
      "end": 802
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 803,
          "end": 804
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 814,
            "end": 821
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 822,
              "end": 826
            }
          ],
          "start": 810,
          "end": 827
        },
        "start": 803,
        "end": 827
      },
      "start": 803,
      "end": 828
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 833,
          "end": 834
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 839,
          "end": 840
        },
        "start": 833,
        "end": 840
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 856,
                "end": 868
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = 1; x >>>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = 1; x >>>= new Boolean(true); x === 0. Actual: '",
                    "start": 869,
                    "end": 925
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 929,
                      "end": 930
                    },
                    "start": 928,
                    "end": 931
                  },
                  "start": 869,
                  "end": 931
                }
              ],
              "start": 852,
              "end": 932
            },
            "start": 846,
            "end": 933
          }
        ],
        "start": 842,
        "end": 935
      },
      "alternate": null,
      "start": 829,
      "end": 935
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 947,
          "end": 948
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 951,
          "end": 955
        },
        "start": 947,
        "end": 955
      },
      "start": 947,
      "end": 956
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 957,
          "end": 958
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 968,
            "end": 974
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 975,
              "end": 976
            }
          ],
          "start": 964,
          "end": 977
        },
        "start": 957,
        "end": 977
      },
      "start": 957,
      "end": 978
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 983,
          "end": 984
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 989,
          "end": 990
        },
        "start": 983,
        "end": 990
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1006,
                "end": 1018
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = true; x >>>= new Number(1); x === 0. Actual: ",
                    "raw": "'#5: x = true; x >>>= new Number(1); x === 0. Actual: '",
                    "start": 1019,
                    "end": 1074
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1078,
                      "end": 1079
                    },
                    "start": 1077,
                    "end": 1080
                  },
                  "start": 1019,
                  "end": 1080
                }
              ],
              "start": 1002,
              "end": 1081
            },
            "start": 996,
            "end": 1082
          }
        ],
        "start": 992,
        "end": 1084
      },
      "alternate": null,
      "start": 979,
      "end": 1084
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1096,
          "end": 1097
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1104,
            "end": 1110
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1111,
              "end": 1112
            }
          ],
          "start": 1100,
          "end": 1113
        },
        "start": 1096,
        "end": 1113
      },
      "start": 1096,
      "end": 1114
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1115,
          "end": 1116
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1122,
          "end": 1126
        },
        "start": 1115,
        "end": 1126
      },
      "start": 1115,
      "end": 1127
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1132,
          "end": 1133
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1138,
          "end": 1139
        },
        "start": 1132,
        "end": 1139
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1155,
                "end": 1167
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new Number(1); x >>>= true; x === 0. Actual: ",
                    "raw": "'#6: x = new Number(1); x >>>= true; x === 0. Actual: '",
                    "start": 1168,
                    "end": 1223
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1227,
                      "end": 1228
                    },
                    "start": 1226,
                    "end": 1229
                  },
                  "start": 1168,
                  "end": 1229
                }
              ],
              "start": 1151,
              "end": 1230
            },
            "start": 1145,
            "end": 1231
          }
        ],
        "start": 1141,
        "end": 1233
      },
      "alternate": null,
      "start": 1128,
      "end": 1233
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1245,
          "end": 1246
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1253,
            "end": 1260
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1261,
              "end": 1265
            }
          ],
          "start": 1249,
          "end": 1266
        },
        "start": 1245,
        "end": 1266
      },
      "start": 1245,
      "end": 1267
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1268,
          "end": 1269
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1279,
            "end": 1285
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1286,
              "end": 1287
            }
          ],
          "start": 1275,
          "end": 1288
        },
        "start": 1268,
        "end": 1288
      },
      "start": 1268,
      "end": 1289
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1294,
          "end": 1295
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1300,
          "end": 1301
        },
        "start": 1294,
        "end": 1301
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1317,
                "end": 1329
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new Boolean(true); x >>>= new Number(1); x === 0. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x >>>= new Number(1); x === 0. Actual: '",
                    "start": 1330,
                    "end": 1398
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1402,
                      "end": 1403
                    },
                    "start": 1401,
                    "end": 1404
                  },
                  "start": 1330,
                  "end": 1404
                }
              ],
              "start": 1313,
              "end": 1405
            },
            "start": 1307,
            "end": 1406
          }
        ],
        "start": 1303,
        "end": 1408
      },
      "alternate": null,
      "start": 1290,
      "end": 1408
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1420,
          "end": 1421
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1428,
            "end": 1434
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1435,
              "end": 1436
            }
          ],
          "start": 1424,
          "end": 1437
        },
        "start": 1420,
        "end": 1437
      },
      "start": 1420,
      "end": 1438
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1439,
          "end": 1440
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1450,
            "end": 1457
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1458,
              "end": 1462
            }
          ],
          "start": 1446,
          "end": 1463
        },
        "start": 1439,
        "end": 1463
      },
      "start": 1439,
      "end": 1464
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1469,
          "end": 1470
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1475,
          "end": 1476
        },
        "start": 1469,
        "end": 1476
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1492,
                "end": 1504
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new Number(1); x >>>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#8: x = new Number(1); x >>>= new Boolean(true); x === 0. Actual: '",
                    "start": 1505,
                    "end": 1573
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1577,
                      "end": 1578
                    },
                    "start": 1576,
                    "end": 1579
                  },
                  "start": 1505,
                  "end": 1579
                }
              ],
              "start": 1488,
              "end": 1580
            },
            "start": 1482,
            "end": 1581
          }
        ],
        "start": 1478,
        "end": 1583
      },
      "alternate": null,
      "start": 1465,
      "end": 1583
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1584
}