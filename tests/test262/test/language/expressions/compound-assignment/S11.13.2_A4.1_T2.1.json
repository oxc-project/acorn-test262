{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 392,
            "end": 393
          },
          "init": null,
          "start": 392,
          "end": 393
        }
      ],
      "start": 388,
      "end": 394
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 406,
          "end": 407
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 410,
          "end": 414
        },
        "start": 406,
        "end": 414
      },
      "start": 406,
      "end": 415
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 416,
          "end": 417
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 421,
          "end": 422
        },
        "start": 416,
        "end": 422
      },
      "start": 416,
      "end": 423
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 428,
          "end": 429
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 434,
          "end": 435
        },
        "start": 428,
        "end": 435
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 451,
                "end": 463
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = true; x *= 1; x === 1. Actual: ",
                    "raw": "'#1: x = true; x *= 1; x === 1. Actual: '",
                    "start": 464,
                    "end": 505
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 509,
                      "end": 510
                    },
                    "start": 508,
                    "end": 511
                  },
                  "start": 464,
                  "end": 511
                }
              ],
              "start": 447,
              "end": 512
            },
            "start": 441,
            "end": 513
          }
        ],
        "start": 437,
        "end": 515
      },
      "alternate": null,
      "start": 424,
      "end": 515
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 527,
          "end": 528
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 531,
          "end": 532
        },
        "start": 527,
        "end": 532
      },
      "start": 527,
      "end": 533
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 534,
          "end": 535
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 539,
          "end": 543
        },
        "start": 534,
        "end": 543
      },
      "start": 534,
      "end": 544
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 549,
          "end": 550
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 555,
          "end": 556
        },
        "start": 549,
        "end": 556
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 572,
                "end": 584
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = 1; x *= true; x === 1. Actual: ",
                    "raw": "'#2: x = 1; x *= true; x === 1. Actual: '",
                    "start": 585,
                    "end": 626
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 630,
                      "end": 631
                    },
                    "start": 629,
                    "end": 632
                  },
                  "start": 585,
                  "end": 632
                }
              ],
              "start": 568,
              "end": 633
            },
            "start": 562,
            "end": 634
          }
        ],
        "start": 558,
        "end": 636
      },
      "alternate": null,
      "start": 545,
      "end": 636
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 648,
          "end": 649
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 656,
            "end": 663
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 664,
              "end": 668
            }
          ],
          "start": 652,
          "end": 669
        },
        "start": 648,
        "end": 669
      },
      "start": 648,
      "end": 670
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 671,
          "end": 672
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 676,
          "end": 677
        },
        "start": 671,
        "end": 677
      },
      "start": 671,
      "end": 678
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 683,
          "end": 684
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 689,
          "end": 690
        },
        "start": 683,
        "end": 690
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 706,
                "end": 718
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Boolean(true); x *= 1; x === 1. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x *= 1; x === 1. Actual: '",
                    "start": 719,
                    "end": 773
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 777,
                      "end": 778
                    },
                    "start": 776,
                    "end": 779
                  },
                  "start": 719,
                  "end": 779
                }
              ],
              "start": 702,
              "end": 780
            },
            "start": 696,
            "end": 781
          }
        ],
        "start": 692,
        "end": 783
      },
      "alternate": null,
      "start": 679,
      "end": 783
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 795,
          "end": 796
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 799,
          "end": 800
        },
        "start": 795,
        "end": 800
      },
      "start": 795,
      "end": 801
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 802,
          "end": 803
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 811,
            "end": 818
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 819,
              "end": 823
            }
          ],
          "start": 807,
          "end": 824
        },
        "start": 802,
        "end": 824
      },
      "start": 802,
      "end": 825
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 830,
          "end": 831
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 836,
          "end": 837
        },
        "start": 830,
        "end": 837
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 853,
                "end": 865
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = 1; x *= new Boolean(true); x === 1. Actual: ",
                    "raw": "'#4: x = 1; x *= new Boolean(true); x === 1. Actual: '",
                    "start": 866,
                    "end": 920
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 924,
                      "end": 925
                    },
                    "start": 923,
                    "end": 926
                  },
                  "start": 866,
                  "end": 926
                }
              ],
              "start": 849,
              "end": 927
            },
            "start": 843,
            "end": 928
          }
        ],
        "start": 839,
        "end": 930
      },
      "alternate": null,
      "start": 826,
      "end": 930
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 942,
          "end": 943
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 946,
          "end": 950
        },
        "start": 942,
        "end": 950
      },
      "start": 942,
      "end": 951
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 952,
          "end": 953
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 961,
            "end": 967
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 968,
              "end": 969
            }
          ],
          "start": 957,
          "end": 970
        },
        "start": 952,
        "end": 970
      },
      "start": 952,
      "end": 971
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 976,
          "end": 977
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 982,
          "end": 983
        },
        "start": 976,
        "end": 983
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 999,
                "end": 1011
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = true; x *= new Number(1); x === 1. Actual: ",
                    "raw": "'#5: x = true; x *= new Number(1); x === 1. Actual: '",
                    "start": 1012,
                    "end": 1065
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1069,
                      "end": 1070
                    },
                    "start": 1068,
                    "end": 1071
                  },
                  "start": 1012,
                  "end": 1071
                }
              ],
              "start": 995,
              "end": 1072
            },
            "start": 989,
            "end": 1073
          }
        ],
        "start": 985,
        "end": 1075
      },
      "alternate": null,
      "start": 972,
      "end": 1075
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1087,
          "end": 1088
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1095,
            "end": 1101
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1102,
              "end": 1103
            }
          ],
          "start": 1091,
          "end": 1104
        },
        "start": 1087,
        "end": 1104
      },
      "start": 1087,
      "end": 1105
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1106,
          "end": 1107
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1111,
          "end": 1115
        },
        "start": 1106,
        "end": 1115
      },
      "start": 1106,
      "end": 1116
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1121,
          "end": 1122
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1127,
          "end": 1128
        },
        "start": 1121,
        "end": 1128
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1144,
                "end": 1156
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new Number(1); x *= true; x === 1. Actual: ",
                    "raw": "'#6: x = new Number(1); x *= true; x === 1. Actual: '",
                    "start": 1157,
                    "end": 1210
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1214,
                      "end": 1215
                    },
                    "start": 1213,
                    "end": 1216
                  },
                  "start": 1157,
                  "end": 1216
                }
              ],
              "start": 1140,
              "end": 1217
            },
            "start": 1134,
            "end": 1218
          }
        ],
        "start": 1130,
        "end": 1220
      },
      "alternate": null,
      "start": 1117,
      "end": 1220
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1232,
          "end": 1233
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1240,
            "end": 1247
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1248,
              "end": 1252
            }
          ],
          "start": 1236,
          "end": 1253
        },
        "start": 1232,
        "end": 1253
      },
      "start": 1232,
      "end": 1254
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1255,
          "end": 1256
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1264,
            "end": 1270
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1271,
              "end": 1272
            }
          ],
          "start": 1260,
          "end": 1273
        },
        "start": 1255,
        "end": 1273
      },
      "start": 1255,
      "end": 1274
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1279,
          "end": 1280
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1285,
          "end": 1286
        },
        "start": 1279,
        "end": 1286
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1302,
                "end": 1314
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new Boolean(true); x *= new Number(1); x === 1. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x *= new Number(1); x === 1. Actual: '",
                    "start": 1315,
                    "end": 1381
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1385,
                      "end": 1386
                    },
                    "start": 1384,
                    "end": 1387
                  },
                  "start": 1315,
                  "end": 1387
                }
              ],
              "start": 1298,
              "end": 1388
            },
            "start": 1292,
            "end": 1389
          }
        ],
        "start": 1288,
        "end": 1391
      },
      "alternate": null,
      "start": 1275,
      "end": 1391
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1403,
          "end": 1404
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1411,
            "end": 1417
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1418,
              "end": 1419
            }
          ],
          "start": 1407,
          "end": 1420
        },
        "start": 1403,
        "end": 1420
      },
      "start": 1403,
      "end": 1421
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1422,
          "end": 1423
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1431,
            "end": 1438
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1439,
              "end": 1443
            }
          ],
          "start": 1427,
          "end": 1444
        },
        "start": 1422,
        "end": 1444
      },
      "start": 1422,
      "end": 1445
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1450,
          "end": 1451
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1456,
          "end": 1457
        },
        "start": 1450,
        "end": 1457
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1473,
                "end": 1485
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new Number(1); x *= new Boolean(true); x === 1. Actual: ",
                    "raw": "'#8: x = new Number(1); x *= new Boolean(true); x === 1. Actual: '",
                    "start": 1486,
                    "end": 1552
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1556,
                      "end": 1557
                    },
                    "start": 1555,
                    "end": 1558
                  },
                  "start": 1486,
                  "end": 1558
                }
              ],
              "start": 1469,
              "end": 1559
            },
            "start": 1463,
            "end": 1560
          }
        ],
        "start": 1459,
        "end": 1562
      },
      "alternate": null,
      "start": 1446,
      "end": 1562
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1563
}