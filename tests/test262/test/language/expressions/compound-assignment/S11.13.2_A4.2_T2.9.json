{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 352,
            "end": 353
          },
          "init": null,
          "start": 352,
          "end": 353
        }
      ],
      "start": 348,
      "end": 354
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 366,
          "end": 367
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 370,
          "end": 374
        },
        "start": 366,
        "end": 374
      },
      "start": 366,
      "end": 375
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 376,
          "end": 377
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 381,
          "end": 385
        },
        "start": 376,
        "end": 385
      },
      "start": 376,
      "end": 386
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 391,
          "end": 392
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 397,
            "end": 403
          },
          "property": {
            "type": "Identifier",
            "name": "POSITIVE_INFINITY",
            "start": 404,
            "end": 421
          },
          "optional": false,
          "computed": false,
          "start": 397,
          "end": 421
        },
        "start": 391,
        "end": 421
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 437,
                "end": 449
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = true; x /= null; x === +Infinity. Actual: ",
                    "raw": "'#1: x = true; x /= null; x === +Infinity. Actual: '",
                    "start": 450,
                    "end": 502
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 506,
                      "end": 507
                    },
                    "start": 505,
                    "end": 508
                  },
                  "start": 450,
                  "end": 508
                }
              ],
              "start": 433,
              "end": 509
            },
            "start": 427,
            "end": 510
          }
        ],
        "start": 423,
        "end": 512
      },
      "alternate": null,
      "start": 387,
      "end": 512
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 524,
          "end": 525
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 528,
          "end": 532
        },
        "start": 524,
        "end": 532
      },
      "start": 524,
      "end": 533
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 534,
          "end": 535
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 539,
          "end": 543
        },
        "start": 534,
        "end": 543
      },
      "start": 534,
      "end": 544
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 549,
          "end": 550
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 555,
          "end": 556
        },
        "start": 549,
        "end": 556
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 572,
                "end": 584
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = null; x /= true; x === 0. Actual: ",
                    "raw": "'#2: x = null; x /= true; x === 0. Actual: '",
                    "start": 585,
                    "end": 629
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 633,
                      "end": 634
                    },
                    "start": 632,
                    "end": 635
                  },
                  "start": 585,
                  "end": 635
                }
              ],
              "start": 568,
              "end": 636
            },
            "start": 562,
            "end": 637
          }
        ],
        "start": 558,
        "end": 639
      },
      "alternate": null,
      "start": 545,
      "end": 639
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 651,
          "end": 652
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 659,
            "end": 666
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 667,
              "end": 671
            }
          ],
          "start": 655,
          "end": 672
        },
        "start": 651,
        "end": 672
      },
      "start": 651,
      "end": 673
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 674,
          "end": 675
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 679,
          "end": 683
        },
        "start": 674,
        "end": 683
      },
      "start": 674,
      "end": 684
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 689,
          "end": 690
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Number",
            "start": 695,
            "end": 701
          },
          "property": {
            "type": "Identifier",
            "name": "POSITIVE_INFINITY",
            "start": 702,
            "end": 719
          },
          "optional": false,
          "computed": false,
          "start": 695,
          "end": 719
        },
        "start": 689,
        "end": 719
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 735,
                "end": 747
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Boolean(true); x /= null; x === +Infinity. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x /= null; x === +Infinity. Actual: '",
                    "start": 748,
                    "end": 813
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 817,
                      "end": 818
                    },
                    "start": 816,
                    "end": 819
                  },
                  "start": 748,
                  "end": 819
                }
              ],
              "start": 731,
              "end": 820
            },
            "start": 725,
            "end": 821
          }
        ],
        "start": 721,
        "end": 823
      },
      "alternate": null,
      "start": 685,
      "end": 823
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 835,
          "end": 836
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 839,
          "end": 843
        },
        "start": 835,
        "end": 843
      },
      "start": 835,
      "end": 844
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 845,
          "end": 846
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 854,
            "end": 861
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 862,
              "end": 866
            }
          ],
          "start": 850,
          "end": 867
        },
        "start": 845,
        "end": 867
      },
      "start": 845,
      "end": 868
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 873,
          "end": 874
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 879,
          "end": 880
        },
        "start": 873,
        "end": 880
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 896,
                "end": 908
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = null; x /= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = null; x /= new Boolean(true); x === 0. Actual: '",
                    "start": 909,
                    "end": 966
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 970,
                      "end": 971
                    },
                    "start": 969,
                    "end": 972
                  },
                  "start": 909,
                  "end": 972
                }
              ],
              "start": 892,
              "end": 973
            },
            "start": 886,
            "end": 974
          }
        ],
        "start": 882,
        "end": 976
      },
      "alternate": null,
      "start": 869,
      "end": 976
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 977
}