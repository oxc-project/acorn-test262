{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 377,
            "end": 378
          },
          "init": null,
          "start": 377,
          "end": 378
        }
      ],
      "start": 373,
      "end": 379
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 391,
          "end": 392
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 395,
          "end": 398
        },
        "start": 391,
        "end": 398
      },
      "start": 391,
      "end": 399
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 400,
          "end": 401
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 405,
          "end": 406
        },
        "start": 400,
        "end": 406
      },
      "start": 400,
      "end": 407
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 412,
          "end": 413
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 418,
          "end": 419
        },
        "start": 412,
        "end": 419
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 435,
                "end": 447
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = \"1\"; x ^= 1; x === 0. Actual: ",
                    "raw": "'#1: x = \"1\"; x ^= 1; x === 0. Actual: '",
                    "start": 448,
                    "end": 488
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 492,
                      "end": 493
                    },
                    "start": 491,
                    "end": 494
                  },
                  "start": 448,
                  "end": 494
                }
              ],
              "start": 431,
              "end": 495
            },
            "start": 425,
            "end": 496
          }
        ],
        "start": 421,
        "end": 498
      },
      "alternate": null,
      "start": 408,
      "end": 498
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 510,
          "end": 511
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 514,
          "end": 515
        },
        "start": 510,
        "end": 515
      },
      "start": 510,
      "end": 516
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 517,
          "end": 518
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 522,
          "end": 525
        },
        "start": 517,
        "end": 525
      },
      "start": 517,
      "end": 526
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 531,
          "end": 532
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 537,
          "end": 538
        },
        "start": 531,
        "end": 538
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 554,
                "end": 566
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = 1; x ^= \"1\"; x === 0. Actual: ",
                    "raw": "'#2: x = 1; x ^= \"1\"; x === 0. Actual: '",
                    "start": 567,
                    "end": 607
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 611,
                      "end": 612
                    },
                    "start": 610,
                    "end": 613
                  },
                  "start": 567,
                  "end": 613
                }
              ],
              "start": 550,
              "end": 614
            },
            "start": 544,
            "end": 615
          }
        ],
        "start": 540,
        "end": 617
      },
      "alternate": null,
      "start": 527,
      "end": 617
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 629,
          "end": 630
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 637,
            "end": 643
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 644,
              "end": 647
            }
          ],
          "start": 633,
          "end": 648
        },
        "start": 629,
        "end": 648
      },
      "start": 629,
      "end": 649
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 650,
          "end": 651
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 655,
          "end": 656
        },
        "start": 650,
        "end": 656
      },
      "start": 650,
      "end": 657
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 662,
          "end": 663
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 668,
          "end": 669
        },
        "start": 662,
        "end": 669
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 685,
                "end": 697
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new String(\"1\"); x ^= 1; x === 0. Actual: ",
                    "raw": "'#3: x = new String(\"1\"); x ^= 1; x === 0. Actual: '",
                    "start": 698,
                    "end": 750
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 754,
                      "end": 755
                    },
                    "start": 753,
                    "end": 756
                  },
                  "start": 698,
                  "end": 756
                }
              ],
              "start": 681,
              "end": 757
            },
            "start": 675,
            "end": 758
          }
        ],
        "start": 671,
        "end": 760
      },
      "alternate": null,
      "start": 658,
      "end": 760
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 772,
          "end": 773
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 776,
          "end": 777
        },
        "start": 772,
        "end": 777
      },
      "start": 772,
      "end": 778
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 779,
          "end": 780
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 788,
            "end": 794
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 795,
              "end": 798
            }
          ],
          "start": 784,
          "end": 799
        },
        "start": 779,
        "end": 799
      },
      "start": 779,
      "end": 800
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 805,
          "end": 806
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 811,
          "end": 812
        },
        "start": 805,
        "end": 812
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 828,
                "end": 840
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = 1; x ^= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#4: x = 1; x ^= new String(\"1\"); x === 0. Actual: '",
                    "start": 841,
                    "end": 893
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 897,
                      "end": 898
                    },
                    "start": 896,
                    "end": 899
                  },
                  "start": 841,
                  "end": 899
                }
              ],
              "start": 824,
              "end": 900
            },
            "start": 818,
            "end": 901
          }
        ],
        "start": 814,
        "end": 903
      },
      "alternate": null,
      "start": 801,
      "end": 903
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 915,
          "end": 916
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 919,
          "end": 922
        },
        "start": 915,
        "end": 922
      },
      "start": 915,
      "end": 923
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 924,
          "end": 925
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 933,
            "end": 939
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 940,
              "end": 941
            }
          ],
          "start": 929,
          "end": 942
        },
        "start": 924,
        "end": 942
      },
      "start": 924,
      "end": 943
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 948,
          "end": 949
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 954,
          "end": 955
        },
        "start": 948,
        "end": 955
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 971,
                "end": 983
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = \"1\"; x ^= new Number(1); x === 0. Actual: ",
                    "raw": "'#5: x = \"1\"; x ^= new Number(1); x === 0. Actual: '",
                    "start": 984,
                    "end": 1036
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1040,
                      "end": 1041
                    },
                    "start": 1039,
                    "end": 1042
                  },
                  "start": 984,
                  "end": 1042
                }
              ],
              "start": 967,
              "end": 1043
            },
            "start": 961,
            "end": 1044
          }
        ],
        "start": 957,
        "end": 1046
      },
      "alternate": null,
      "start": 944,
      "end": 1046
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1058,
          "end": 1059
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1066,
            "end": 1072
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1073,
              "end": 1074
            }
          ],
          "start": 1062,
          "end": 1075
        },
        "start": 1058,
        "end": 1075
      },
      "start": 1058,
      "end": 1076
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1077,
          "end": 1078
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 1082,
          "end": 1085
        },
        "start": 1077,
        "end": 1085
      },
      "start": 1077,
      "end": 1086
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1091,
          "end": 1092
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1097,
          "end": 1098
        },
        "start": 1091,
        "end": 1098
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1114,
                "end": 1126
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new Number(1); x ^= \"1\"; x === 0. Actual: ",
                    "raw": "'#6: x = new Number(1); x ^= \"1\"; x === 0. Actual: '",
                    "start": 1127,
                    "end": 1179
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1183,
                      "end": 1184
                    },
                    "start": 1182,
                    "end": 1185
                  },
                  "start": 1127,
                  "end": 1185
                }
              ],
              "start": 1110,
              "end": 1186
            },
            "start": 1104,
            "end": 1187
          }
        ],
        "start": 1100,
        "end": 1189
      },
      "alternate": null,
      "start": 1087,
      "end": 1189
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1201,
          "end": 1202
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1209,
            "end": 1215
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1216,
              "end": 1219
            }
          ],
          "start": 1205,
          "end": 1220
        },
        "start": 1201,
        "end": 1220
      },
      "start": 1201,
      "end": 1221
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1222,
          "end": 1223
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1231,
            "end": 1237
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1238,
              "end": 1239
            }
          ],
          "start": 1227,
          "end": 1240
        },
        "start": 1222,
        "end": 1240
      },
      "start": 1222,
      "end": 1241
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1246,
          "end": 1247
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1252,
          "end": 1253
        },
        "start": 1246,
        "end": 1253
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1269,
                "end": 1281
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new String(\"1\"); x ^= new Number(1); x === 0. Actual: ",
                    "raw": "'#7: x = new String(\"1\"); x ^= new Number(1); x === 0. Actual: '",
                    "start": 1282,
                    "end": 1346
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1350,
                      "end": 1351
                    },
                    "start": 1349,
                    "end": 1352
                  },
                  "start": 1282,
                  "end": 1352
                }
              ],
              "start": 1265,
              "end": 1353
            },
            "start": 1259,
            "end": 1354
          }
        ],
        "start": 1255,
        "end": 1356
      },
      "alternate": null,
      "start": 1242,
      "end": 1356
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1368,
          "end": 1369
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1376,
            "end": 1382
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1383,
              "end": 1384
            }
          ],
          "start": 1372,
          "end": 1385
        },
        "start": 1368,
        "end": 1385
      },
      "start": 1368,
      "end": 1386
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1387,
          "end": 1388
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1396,
            "end": 1402
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1403,
              "end": 1406
            }
          ],
          "start": 1392,
          "end": 1407
        },
        "start": 1387,
        "end": 1407
      },
      "start": 1387,
      "end": 1408
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1413,
          "end": 1414
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1419,
          "end": 1420
        },
        "start": 1413,
        "end": 1420
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1436,
                "end": 1448
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new Number(1); x ^= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#8: x = new Number(1); x ^= new String(\"1\"); x === 0. Actual: '",
                    "start": 1449,
                    "end": 1513
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1517,
                      "end": 1518
                    },
                    "start": 1516,
                    "end": 1519
                  },
                  "start": 1449,
                  "end": 1519
                }
              ],
              "start": 1432,
              "end": 1520
            },
            "start": 1426,
            "end": 1521
          }
        ],
        "start": 1422,
        "end": 1523
      },
      "alternate": null,
      "start": 1409,
      "end": 1523
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1535,
          "end": 1536
        },
        "right": {
          "type": "Literal",
          "value": "x",
          "raw": "\"x\"",
          "start": 1539,
          "end": 1542
        },
        "start": 1535,
        "end": 1542
      },
      "start": 1535,
      "end": 1543
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1544,
          "end": 1545
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1549,
          "end": 1550
        },
        "start": 1544,
        "end": 1550
      },
      "start": 1544,
      "end": 1551
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1556,
          "end": 1557
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1562,
          "end": 1563
        },
        "start": 1556,
        "end": 1563
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1579,
                "end": 1591
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: x = \"x\"; x ^= 1; x === 1. Actual: ",
                    "raw": "'#9: x = \"x\"; x ^= 1; x === 1. Actual: '",
                    "start": 1592,
                    "end": 1632
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1636,
                      "end": 1637
                    },
                    "start": 1635,
                    "end": 1638
                  },
                  "start": 1592,
                  "end": 1638
                }
              ],
              "start": 1575,
              "end": 1639
            },
            "start": 1569,
            "end": 1640
          }
        ],
        "start": 1565,
        "end": 1642
      },
      "alternate": null,
      "start": 1552,
      "end": 1642
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1655,
          "end": 1656
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1659,
          "end": 1660
        },
        "start": 1655,
        "end": 1660
      },
      "start": 1655,
      "end": 1661
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1662,
          "end": 1663
        },
        "right": {
          "type": "Literal",
          "value": "x",
          "raw": "\"x\"",
          "start": 1667,
          "end": 1670
        },
        "start": 1662,
        "end": 1670
      },
      "start": 1662,
      "end": 1671
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1676,
          "end": 1677
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1682,
          "end": 1683
        },
        "start": 1676,
        "end": 1683
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1699,
                "end": 1711
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: x = 1; x ^= \"x\"; x === 1. Actual: ",
                    "raw": "'#10: x = 1; x ^= \"x\"; x === 1. Actual: '",
                    "start": 1712,
                    "end": 1753
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1757,
                      "end": 1758
                    },
                    "start": 1756,
                    "end": 1759
                  },
                  "start": 1712,
                  "end": 1759
                }
              ],
              "start": 1695,
              "end": 1760
            },
            "start": 1689,
            "end": 1761
          }
        ],
        "start": 1685,
        "end": 1763
      },
      "alternate": null,
      "start": 1672,
      "end": 1763
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1764
}