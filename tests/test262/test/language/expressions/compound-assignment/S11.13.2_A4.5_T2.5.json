{
  "type": "Program",
  "start": 0,
  "end": 1580,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 373,
      "end": 379,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 377,
          "end": 378,
          "id": {
            "type": "Identifier",
            "start": 377,
            "end": 378,
            "name": "x"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 391,
      "end": 400,
      "expression": {
        "type": "AssignmentExpression",
        "start": 391,
        "end": 399,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 391,
          "end": 392,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 395,
          "end": 399,
          "value": true,
          "raw": "true"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 401,
      "end": 410,
      "expression": {
        "type": "AssignmentExpression",
        "start": 401,
        "end": 409,
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "start": 401,
          "end": 402,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 406,
          "end": 409,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 411,
      "end": 504,
      "test": {
        "type": "BinaryExpression",
        "start": 415,
        "end": 422,
        "left": {
          "type": "Identifier",
          "start": 415,
          "end": 416,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 421,
          "end": 422,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 424,
        "end": 504,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 428,
            "end": 502,
            "argument": {
              "type": "NewExpression",
              "start": 434,
              "end": 501,
              "callee": {
                "type": "Identifier",
                "start": 438,
                "end": 450,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 451,
                  "end": 500,
                  "left": {
                    "type": "Literal",
                    "start": 451,
                    "end": 494,
                    "value": "#1: x = true; x -= \"1\"; x === 0. Actual: ",
                    "raw": "'#1: x = true; x -= \"1\"; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 497,
                    "end": 500,
                    "expression": {
                      "type": "Identifier",
                      "start": 498,
                      "end": 499,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 516,
      "end": 524,
      "expression": {
        "type": "AssignmentExpression",
        "start": 516,
        "end": 523,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 516,
          "end": 517,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 520,
          "end": 523,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 525,
      "end": 535,
      "expression": {
        "type": "AssignmentExpression",
        "start": 525,
        "end": 534,
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "start": 525,
          "end": 526,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 530,
          "end": 534,
          "value": true,
          "raw": "true"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 536,
      "end": 629,
      "test": {
        "type": "BinaryExpression",
        "start": 540,
        "end": 547,
        "left": {
          "type": "Identifier",
          "start": 540,
          "end": 541,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 546,
          "end": 547,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 549,
        "end": 629,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 553,
            "end": 627,
            "argument": {
              "type": "NewExpression",
              "start": 559,
              "end": 626,
              "callee": {
                "type": "Identifier",
                "start": 563,
                "end": 575,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 576,
                  "end": 625,
                  "left": {
                    "type": "Literal",
                    "start": 576,
                    "end": 619,
                    "value": "#2: x = \"1\"; x -= true; x === 0. Actual: ",
                    "raw": "'#2: x = \"1\"; x -= true; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 622,
                    "end": 625,
                    "expression": {
                      "type": "Identifier",
                      "start": 623,
                      "end": 624,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 641,
      "end": 663,
      "expression": {
        "type": "AssignmentExpression",
        "start": 641,
        "end": 662,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 641,
          "end": 642,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 645,
          "end": 662,
          "callee": {
            "type": "Identifier",
            "start": 649,
            "end": 656,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 657,
              "end": 661,
              "value": true,
              "raw": "true"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 664,
      "end": 673,
      "expression": {
        "type": "AssignmentExpression",
        "start": 664,
        "end": 672,
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "start": 664,
          "end": 665,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 669,
          "end": 672,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 674,
      "end": 780,
      "test": {
        "type": "BinaryExpression",
        "start": 678,
        "end": 685,
        "left": {
          "type": "Identifier",
          "start": 678,
          "end": 679,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 684,
          "end": 685,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 687,
        "end": 780,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 691,
            "end": 778,
            "argument": {
              "type": "NewExpression",
              "start": 697,
              "end": 777,
              "callee": {
                "type": "Identifier",
                "start": 701,
                "end": 713,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 714,
                  "end": 776,
                  "left": {
                    "type": "Literal",
                    "start": 714,
                    "end": 770,
                    "value": "#3: x = new Boolean(true); x -= \"1\"; x === 0. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x -= \"1\"; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 773,
                    "end": 776,
                    "expression": {
                      "type": "Identifier",
                      "start": 774,
                      "end": 775,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 792,
      "end": 800,
      "expression": {
        "type": "AssignmentExpression",
        "start": 792,
        "end": 799,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 792,
          "end": 793,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 796,
          "end": 799,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 801,
      "end": 824,
      "expression": {
        "type": "AssignmentExpression",
        "start": 801,
        "end": 823,
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "start": 801,
          "end": 802,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 806,
          "end": 823,
          "callee": {
            "type": "Identifier",
            "start": 810,
            "end": 817,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 818,
              "end": 822,
              "value": true,
              "raw": "true"
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 825,
      "end": 931,
      "test": {
        "type": "BinaryExpression",
        "start": 829,
        "end": 836,
        "left": {
          "type": "Identifier",
          "start": 829,
          "end": 830,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 835,
          "end": 836,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 838,
        "end": 931,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 842,
            "end": 929,
            "argument": {
              "type": "NewExpression",
              "start": 848,
              "end": 928,
              "callee": {
                "type": "Identifier",
                "start": 852,
                "end": 864,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 865,
                  "end": 927,
                  "left": {
                    "type": "Literal",
                    "start": 865,
                    "end": 921,
                    "value": "#4: x = \"1\"; x -= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = \"1\"; x -= new Boolean(true); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 924,
                    "end": 927,
                    "expression": {
                      "type": "Identifier",
                      "start": 925,
                      "end": 926,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 943,
      "end": 952,
      "expression": {
        "type": "AssignmentExpression",
        "start": 943,
        "end": 951,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 943,
          "end": 944,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 947,
          "end": 951,
          "value": true,
          "raw": "true"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 953,
      "end": 974,
      "expression": {
        "type": "AssignmentExpression",
        "start": 953,
        "end": 973,
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "start": 953,
          "end": 954,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 958,
          "end": 973,
          "callee": {
            "type": "Identifier",
            "start": 962,
            "end": 968,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 969,
              "end": 972,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 975,
      "end": 1080,
      "test": {
        "type": "BinaryExpression",
        "start": 979,
        "end": 986,
        "left": {
          "type": "Identifier",
          "start": 979,
          "end": 980,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 985,
          "end": 986,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 988,
        "end": 1080,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 992,
            "end": 1078,
            "argument": {
              "type": "NewExpression",
              "start": 998,
              "end": 1077,
              "callee": {
                "type": "Identifier",
                "start": 1002,
                "end": 1014,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1015,
                  "end": 1076,
                  "left": {
                    "type": "Literal",
                    "start": 1015,
                    "end": 1070,
                    "value": "#5: x = true; x -= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#5: x = true; x -= new String(\"1\"); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1073,
                    "end": 1076,
                    "expression": {
                      "type": "Identifier",
                      "start": 1074,
                      "end": 1075,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1092,
      "end": 1112,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1092,
        "end": 1111,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1092,
          "end": 1093,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1096,
          "end": 1111,
          "callee": {
            "type": "Identifier",
            "start": 1100,
            "end": 1106,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1107,
              "end": 1110,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1113,
      "end": 1123,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1113,
        "end": 1122,
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "start": 1113,
          "end": 1114,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1118,
          "end": 1122,
          "value": true,
          "raw": "true"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1124,
      "end": 1229,
      "test": {
        "type": "BinaryExpression",
        "start": 1128,
        "end": 1135,
        "left": {
          "type": "Identifier",
          "start": 1128,
          "end": 1129,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1134,
          "end": 1135,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1137,
        "end": 1229,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1141,
            "end": 1227,
            "argument": {
              "type": "NewExpression",
              "start": 1147,
              "end": 1226,
              "callee": {
                "type": "Identifier",
                "start": 1151,
                "end": 1163,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1164,
                  "end": 1225,
                  "left": {
                    "type": "Literal",
                    "start": 1164,
                    "end": 1219,
                    "value": "#6: x = new String(\"1\"); x -= true; x === 0. Actual: ",
                    "raw": "'#6: x = new String(\"1\"); x -= true; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1222,
                    "end": 1225,
                    "expression": {
                      "type": "Identifier",
                      "start": 1223,
                      "end": 1224,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1241,
      "end": 1263,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1241,
        "end": 1262,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1241,
          "end": 1242,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1245,
          "end": 1262,
          "callee": {
            "type": "Identifier",
            "start": 1249,
            "end": 1256,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1257,
              "end": 1261,
              "value": true,
              "raw": "true"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1264,
      "end": 1285,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1264,
        "end": 1284,
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "start": 1264,
          "end": 1265,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1269,
          "end": 1284,
          "callee": {
            "type": "Identifier",
            "start": 1273,
            "end": 1279,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1280,
              "end": 1283,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1286,
      "end": 1404,
      "test": {
        "type": "BinaryExpression",
        "start": 1290,
        "end": 1297,
        "left": {
          "type": "Identifier",
          "start": 1290,
          "end": 1291,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1296,
          "end": 1297,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1299,
        "end": 1404,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1303,
            "end": 1402,
            "argument": {
              "type": "NewExpression",
              "start": 1309,
              "end": 1401,
              "callee": {
                "type": "Identifier",
                "start": 1313,
                "end": 1325,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1326,
                  "end": 1400,
                  "left": {
                    "type": "Literal",
                    "start": 1326,
                    "end": 1394,
                    "value": "#7: x = new Boolean(true); x -= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x -= new String(\"1\"); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1397,
                    "end": 1400,
                    "expression": {
                      "type": "Identifier",
                      "start": 1398,
                      "end": 1399,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1416,
      "end": 1436,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1416,
        "end": 1435,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1416,
          "end": 1417,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1420,
          "end": 1435,
          "callee": {
            "type": "Identifier",
            "start": 1424,
            "end": 1430,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1431,
              "end": 1434,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1437,
      "end": 1460,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1437,
        "end": 1459,
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "start": 1437,
          "end": 1438,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1442,
          "end": 1459,
          "callee": {
            "type": "Identifier",
            "start": 1446,
            "end": 1453,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1454,
              "end": 1458,
              "value": true,
              "raw": "true"
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1461,
      "end": 1579,
      "test": {
        "type": "BinaryExpression",
        "start": 1465,
        "end": 1472,
        "left": {
          "type": "Identifier",
          "start": 1465,
          "end": 1466,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1471,
          "end": 1472,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1474,
        "end": 1579,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1478,
            "end": 1577,
            "argument": {
              "type": "NewExpression",
              "start": 1484,
              "end": 1576,
              "callee": {
                "type": "Identifier",
                "start": 1488,
                "end": 1500,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1501,
                  "end": 1575,
                  "left": {
                    "type": "Literal",
                    "start": 1501,
                    "end": 1569,
                    "value": "#8: x = new String(\"1\"); x -= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#8: x = new String(\"1\"); x -= new Boolean(true); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1572,
                    "end": 1575,
                    "expression": {
                      "type": "Identifier",
                      "start": 1573,
                      "end": 1574,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}