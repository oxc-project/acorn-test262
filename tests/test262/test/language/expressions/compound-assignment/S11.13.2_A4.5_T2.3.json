{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 351,
            "end": 352
          },
          "init": null,
          "start": 351,
          "end": 352
        }
      ],
      "start": 347,
      "end": 353
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 365,
          "end": 366
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 369,
          "end": 370
        },
        "start": 365,
        "end": 370
      },
      "start": 365,
      "end": 371
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 372,
          "end": 373
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 377,
          "end": 381
        },
        "start": 372,
        "end": 381
      },
      "start": 372,
      "end": 382
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 387,
          "end": 388
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 393,
          "end": 394
        },
        "start": 387,
        "end": 394
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 410,
                "end": 422
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = 1; x -= null; x === 1. Actual: ",
                    "raw": "'#1: x = 1; x -= null; x === 1. Actual: '",
                    "start": 423,
                    "end": 464
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 468,
                      "end": 469
                    },
                    "start": 467,
                    "end": 470
                  },
                  "start": 423,
                  "end": 470
                }
              ],
              "start": 406,
              "end": 471
            },
            "start": 400,
            "end": 472
          }
        ],
        "start": 396,
        "end": 474
      },
      "alternate": null,
      "start": 383,
      "end": 474
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 486,
          "end": 487
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 490,
          "end": 494
        },
        "start": 486,
        "end": 494
      },
      "start": 486,
      "end": 495
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 496,
          "end": 497
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 501,
          "end": 502
        },
        "start": 496,
        "end": 502
      },
      "start": 496,
      "end": 503
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 508,
          "end": 509
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 515,
            "end": 516
          },
          "prefix": true,
          "start": 514,
          "end": 516
        },
        "start": 508,
        "end": 516
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 532,
                "end": 544
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = null; x -= 1; x === -1. Actual: ",
                    "raw": "'#2: x = null; x -= 1; x === -1. Actual: '",
                    "start": 545,
                    "end": 587
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 591,
                      "end": 592
                    },
                    "start": 590,
                    "end": 593
                  },
                  "start": 545,
                  "end": 593
                }
              ],
              "start": 528,
              "end": 594
            },
            "start": 522,
            "end": 595
          }
        ],
        "start": 518,
        "end": 597
      },
      "alternate": null,
      "start": 504,
      "end": 597
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 609,
          "end": 610
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 617,
            "end": 623
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 624,
              "end": 625
            }
          ],
          "start": 613,
          "end": 626
        },
        "start": 609,
        "end": 626
      },
      "start": 609,
      "end": 627
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 628,
          "end": 629
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 633,
          "end": 637
        },
        "start": 628,
        "end": 637
      },
      "start": 628,
      "end": 638
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 643,
          "end": 644
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 649,
          "end": 650
        },
        "start": 643,
        "end": 650
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 666,
                "end": 678
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Number(1); x -= null; x === 1. Actual: ",
                    "raw": "'#3: x = new Number(1); x -= null; x === 1. Actual: '",
                    "start": 679,
                    "end": 732
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 736,
                      "end": 737
                    },
                    "start": 735,
                    "end": 738
                  },
                  "start": 679,
                  "end": 738
                }
              ],
              "start": 662,
              "end": 739
            },
            "start": 656,
            "end": 740
          }
        ],
        "start": 652,
        "end": 742
      },
      "alternate": null,
      "start": 639,
      "end": 742
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 754,
          "end": 755
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 758,
          "end": 762
        },
        "start": 754,
        "end": 762
      },
      "start": 754,
      "end": 763
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 764,
          "end": 765
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 773,
            "end": 779
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 780,
              "end": 781
            }
          ],
          "start": 769,
          "end": 782
        },
        "start": 764,
        "end": 782
      },
      "start": 764,
      "end": 783
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 788,
          "end": 789
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 795,
            "end": 796
          },
          "prefix": true,
          "start": 794,
          "end": 796
        },
        "start": 788,
        "end": 796
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 812,
                "end": 824
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = null; x -= new Number(1); x === -1. Actual: ",
                    "raw": "'#4: x = null; x -= new Number(1); x === -1. Actual: '",
                    "start": 825,
                    "end": 879
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 883,
                      "end": 884
                    },
                    "start": 882,
                    "end": 885
                  },
                  "start": 825,
                  "end": 885
                }
              ],
              "start": 808,
              "end": 886
            },
            "start": 802,
            "end": 887
          }
        ],
        "start": 798,
        "end": 889
      },
      "alternate": null,
      "start": 784,
      "end": 889
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 890
}