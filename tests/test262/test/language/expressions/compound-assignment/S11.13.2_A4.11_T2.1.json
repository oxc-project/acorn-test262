{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 378,
            "end": 379
          },
          "init": null,
          "start": 378,
          "end": 379
        }
      ],
      "start": 374,
      "end": 380
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 392,
          "end": 393
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 396,
          "end": 400
        },
        "start": 392,
        "end": 400
      },
      "start": 392,
      "end": 401
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 402,
          "end": 403
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 407,
          "end": 408
        },
        "start": 402,
        "end": 408
      },
      "start": 402,
      "end": 409
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 414,
          "end": 415
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 420,
          "end": 421
        },
        "start": 414,
        "end": 421
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 437,
                "end": 449
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = true; x |= 1; x === 1. Actual: ",
                    "raw": "'#1: x = true; x |= 1; x === 1. Actual: '",
                    "start": 450,
                    "end": 491
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 495,
                      "end": 496
                    },
                    "start": 494,
                    "end": 497
                  },
                  "start": 450,
                  "end": 497
                }
              ],
              "start": 433,
              "end": 498
            },
            "start": 427,
            "end": 499
          }
        ],
        "start": 423,
        "end": 501
      },
      "alternate": null,
      "start": 410,
      "end": 501
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 513,
          "end": 514
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 517,
          "end": 518
        },
        "start": 513,
        "end": 518
      },
      "start": 513,
      "end": 519
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 520,
          "end": 521
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 525,
          "end": 529
        },
        "start": 520,
        "end": 529
      },
      "start": 520,
      "end": 530
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 535,
          "end": 536
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 541,
          "end": 542
        },
        "start": 535,
        "end": 542
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 558,
                "end": 570
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = 1; x |= true; x === 1. Actual: ",
                    "raw": "'#2: x = 1; x |= true; x === 1. Actual: '",
                    "start": 571,
                    "end": 612
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 616,
                      "end": 617
                    },
                    "start": 615,
                    "end": 618
                  },
                  "start": 571,
                  "end": 618
                }
              ],
              "start": 554,
              "end": 619
            },
            "start": 548,
            "end": 620
          }
        ],
        "start": 544,
        "end": 622
      },
      "alternate": null,
      "start": 531,
      "end": 622
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 634,
          "end": 635
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 642,
            "end": 649
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 650,
              "end": 654
            }
          ],
          "start": 638,
          "end": 655
        },
        "start": 634,
        "end": 655
      },
      "start": 634,
      "end": 656
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 657,
          "end": 658
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 662,
          "end": 663
        },
        "start": 657,
        "end": 663
      },
      "start": 657,
      "end": 664
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 669,
          "end": 670
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 675,
          "end": 676
        },
        "start": 669,
        "end": 676
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 692,
                "end": 704
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Boolean(true); x |= 1; x === 1. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x |= 1; x === 1. Actual: '",
                    "start": 705,
                    "end": 759
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 763,
                      "end": 764
                    },
                    "start": 762,
                    "end": 765
                  },
                  "start": 705,
                  "end": 765
                }
              ],
              "start": 688,
              "end": 766
            },
            "start": 682,
            "end": 767
          }
        ],
        "start": 678,
        "end": 769
      },
      "alternate": null,
      "start": 665,
      "end": 769
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 781,
          "end": 782
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 785,
          "end": 786
        },
        "start": 781,
        "end": 786
      },
      "start": 781,
      "end": 787
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 788,
          "end": 789
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 797,
            "end": 804
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 805,
              "end": 809
            }
          ],
          "start": 793,
          "end": 810
        },
        "start": 788,
        "end": 810
      },
      "start": 788,
      "end": 811
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 816,
          "end": 817
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 822,
          "end": 823
        },
        "start": 816,
        "end": 823
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 839,
                "end": 851
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = 1; x |= new Boolean(true); x === 1. Actual: ",
                    "raw": "'#4: x = 1; x |= new Boolean(true); x === 1. Actual: '",
                    "start": 852,
                    "end": 906
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 910,
                      "end": 911
                    },
                    "start": 909,
                    "end": 912
                  },
                  "start": 852,
                  "end": 912
                }
              ],
              "start": 835,
              "end": 913
            },
            "start": 829,
            "end": 914
          }
        ],
        "start": 825,
        "end": 916
      },
      "alternate": null,
      "start": 812,
      "end": 916
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 928,
          "end": 929
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 932,
          "end": 936
        },
        "start": 928,
        "end": 936
      },
      "start": 928,
      "end": 937
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 938,
          "end": 939
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 947,
            "end": 953
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 954,
              "end": 955
            }
          ],
          "start": 943,
          "end": 956
        },
        "start": 938,
        "end": 956
      },
      "start": 938,
      "end": 957
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 962,
          "end": 963
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 968,
          "end": 969
        },
        "start": 962,
        "end": 969
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 985,
                "end": 997
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = true; x |= new Number(1); x === 1. Actual: ",
                    "raw": "'#5: x = true; x |= new Number(1); x === 1. Actual: '",
                    "start": 998,
                    "end": 1051
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1055,
                      "end": 1056
                    },
                    "start": 1054,
                    "end": 1057
                  },
                  "start": 998,
                  "end": 1057
                }
              ],
              "start": 981,
              "end": 1058
            },
            "start": 975,
            "end": 1059
          }
        ],
        "start": 971,
        "end": 1061
      },
      "alternate": null,
      "start": 958,
      "end": 1061
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1073,
          "end": 1074
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1081,
            "end": 1087
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1088,
              "end": 1089
            }
          ],
          "start": 1077,
          "end": 1090
        },
        "start": 1073,
        "end": 1090
      },
      "start": 1073,
      "end": 1091
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1092,
          "end": 1093
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1097,
          "end": 1101
        },
        "start": 1092,
        "end": 1101
      },
      "start": 1092,
      "end": 1102
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1107,
          "end": 1108
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1113,
          "end": 1114
        },
        "start": 1107,
        "end": 1114
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1130,
                "end": 1142
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new Number(1); x |= true; x === 1. Actual: ",
                    "raw": "'#6: x = new Number(1); x |= true; x === 1. Actual: '",
                    "start": 1143,
                    "end": 1196
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1200,
                      "end": 1201
                    },
                    "start": 1199,
                    "end": 1202
                  },
                  "start": 1143,
                  "end": 1202
                }
              ],
              "start": 1126,
              "end": 1203
            },
            "start": 1120,
            "end": 1204
          }
        ],
        "start": 1116,
        "end": 1206
      },
      "alternate": null,
      "start": 1103,
      "end": 1206
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1218,
          "end": 1219
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1226,
            "end": 1233
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1234,
              "end": 1238
            }
          ],
          "start": 1222,
          "end": 1239
        },
        "start": 1218,
        "end": 1239
      },
      "start": 1218,
      "end": 1240
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1241,
          "end": 1242
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1250,
            "end": 1256
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1257,
              "end": 1258
            }
          ],
          "start": 1246,
          "end": 1259
        },
        "start": 1241,
        "end": 1259
      },
      "start": 1241,
      "end": 1260
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1265,
          "end": 1266
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1271,
          "end": 1272
        },
        "start": 1265,
        "end": 1272
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1288,
                "end": 1300
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new Boolean(true); x |= new Number(1); x === 1. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x |= new Number(1); x === 1. Actual: '",
                    "start": 1301,
                    "end": 1367
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1371,
                      "end": 1372
                    },
                    "start": 1370,
                    "end": 1373
                  },
                  "start": 1301,
                  "end": 1373
                }
              ],
              "start": 1284,
              "end": 1374
            },
            "start": 1278,
            "end": 1375
          }
        ],
        "start": 1274,
        "end": 1377
      },
      "alternate": null,
      "start": 1261,
      "end": 1377
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1389,
          "end": 1390
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1397,
            "end": 1403
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1404,
              "end": 1405
            }
          ],
          "start": 1393,
          "end": 1406
        },
        "start": 1389,
        "end": 1406
      },
      "start": 1389,
      "end": 1407
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1408,
          "end": 1409
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1417,
            "end": 1424
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1425,
              "end": 1429
            }
          ],
          "start": 1413,
          "end": 1430
        },
        "start": 1408,
        "end": 1430
      },
      "start": 1408,
      "end": 1431
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1436,
          "end": 1437
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1442,
          "end": 1443
        },
        "start": 1436,
        "end": 1443
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1459,
                "end": 1471
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new Number(1); x |= new Boolean(true); x === 1. Actual: ",
                    "raw": "'#8: x = new Number(1); x |= new Boolean(true); x === 1. Actual: '",
                    "start": 1472,
                    "end": 1538
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1542,
                      "end": 1543
                    },
                    "start": 1541,
                    "end": 1544
                  },
                  "start": 1472,
                  "end": 1544
                }
              ],
              "start": 1455,
              "end": 1545
            },
            "start": 1449,
            "end": 1546
          }
        ],
        "start": 1445,
        "end": 1548
      },
      "alternate": null,
      "start": 1432,
      "end": 1548
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1549
}