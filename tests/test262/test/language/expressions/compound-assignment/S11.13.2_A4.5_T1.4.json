{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 293,
            "end": 294
          },
          "init": null,
          "start": 293,
          "end": 294
        }
      ],
      "start": 289,
      "end": 295
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 307,
          "end": 308
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 311,
          "end": 315
        },
        "start": 307,
        "end": 315
      },
      "start": 307,
      "end": 316
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 317,
          "end": 318
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 322,
          "end": 331
        },
        "start": 317,
        "end": 331
      },
      "start": 317,
      "end": 332
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 337,
            "end": 342
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 343,
              "end": 344
            }
          ],
          "optional": false,
          "start": 337,
          "end": 345
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 350,
          "end": 354
        },
        "start": 337,
        "end": 354
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 370,
                "end": 382
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = null; x -= undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#1: x = null; x -= undefined; x === Not-a-Number. Actual: '",
                    "start": 383,
                    "end": 443
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 447,
                      "end": 448
                    },
                    "start": 446,
                    "end": 449
                  },
                  "start": 383,
                  "end": 449
                }
              ],
              "start": 366,
              "end": 450
            },
            "start": 360,
            "end": 451
          }
        ],
        "start": 356,
        "end": 453
      },
      "alternate": null,
      "start": 333,
      "end": 453
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 465,
          "end": 466
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 469,
          "end": 478
        },
        "start": 465,
        "end": 478
      },
      "start": 465,
      "end": 479
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 480,
          "end": 481
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 485,
          "end": 489
        },
        "start": 480,
        "end": 489
      },
      "start": 480,
      "end": 490
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 495,
            "end": 500
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 501,
              "end": 502
            }
          ],
          "optional": false,
          "start": 495,
          "end": 503
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 508,
          "end": 512
        },
        "start": 495,
        "end": 512
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 528,
                "end": 540
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = undefined; x -= null; x === Not-a-Number. Actual: ",
                    "raw": "'#2: x = undefined; x -= null; x === Not-a-Number. Actual: '",
                    "start": 541,
                    "end": 601
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 605,
                      "end": 606
                    },
                    "start": 604,
                    "end": 607
                  },
                  "start": 541,
                  "end": 607
                }
              ],
              "start": 524,
              "end": 608
            },
            "start": 518,
            "end": 609
          }
        ],
        "start": 514,
        "end": 611
      },
      "alternate": null,
      "start": 491,
      "end": 611
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 623,
          "end": 624
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 627,
          "end": 636
        },
        "start": 623,
        "end": 636
      },
      "start": 623,
      "end": 637
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 638,
          "end": 639
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 643,
          "end": 652
        },
        "start": 638,
        "end": 652
      },
      "start": 638,
      "end": 653
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 658,
            "end": 663
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 664,
              "end": 665
            }
          ],
          "optional": false,
          "start": 658,
          "end": 666
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 671,
          "end": 675
        },
        "start": 658,
        "end": 675
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 691,
                "end": 703
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = undefined; x -= undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#3: x = undefined; x -= undefined; x === Not-a-Number. Actual: '",
                    "start": 704,
                    "end": 769
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 773,
                      "end": 774
                    },
                    "start": 772,
                    "end": 775
                  },
                  "start": 704,
                  "end": 775
                }
              ],
              "start": 687,
              "end": 776
            },
            "start": 681,
            "end": 777
          }
        ],
        "start": 677,
        "end": 779
      },
      "alternate": null,
      "start": 654,
      "end": 779
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 791,
          "end": 792
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 795,
          "end": 799
        },
        "start": 791,
        "end": 799
      },
      "start": 791,
      "end": 800
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "-=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 801,
          "end": 802
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 806,
          "end": 810
        },
        "start": 801,
        "end": 810
      },
      "start": 801,
      "end": 811
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 816,
          "end": 817
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 822,
          "end": 823
        },
        "start": 816,
        "end": 823
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 839,
                "end": 851
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = null; x -= null; x === 0. Actual: ",
                    "raw": "'#4: x = null; x -= null; x === 0. Actual: '",
                    "start": 852,
                    "end": 896
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 900,
                      "end": 901
                    },
                    "start": 899,
                    "end": 902
                  },
                  "start": 852,
                  "end": 902
                }
              ],
              "start": 835,
              "end": 903
            },
            "start": 829,
            "end": 904
          }
        ],
        "start": 825,
        "end": 906
      },
      "alternate": null,
      "start": 812,
      "end": 906
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 907
}