{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 376,
            "end": 377
          },
          "init": null,
          "start": 376,
          "end": 377
        }
      ],
      "start": 372,
      "end": 378
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 390,
          "end": 391
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 394,
          "end": 397
        },
        "start": 390,
        "end": 397
      },
      "start": 390,
      "end": 398
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 399,
          "end": 400
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 404,
          "end": 405
        },
        "start": 399,
        "end": 405
      },
      "start": 399,
      "end": 406
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 411,
          "end": 412
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 417,
          "end": 418
        },
        "start": 411,
        "end": 418
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 434,
                "end": 446
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = \"1\"; x &= 1; x === 1. Actual: ",
                    "raw": "'#1: x = \"1\"; x &= 1; x === 1. Actual: '",
                    "start": 447,
                    "end": 487
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 491,
                      "end": 492
                    },
                    "start": 490,
                    "end": 493
                  },
                  "start": 447,
                  "end": 493
                }
              ],
              "start": 430,
              "end": 494
            },
            "start": 424,
            "end": 495
          }
        ],
        "start": 420,
        "end": 497
      },
      "alternate": null,
      "start": 407,
      "end": 497
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 509,
          "end": 510
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 513,
          "end": 514
        },
        "start": 509,
        "end": 514
      },
      "start": 509,
      "end": 515
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 516,
          "end": 517
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 521,
          "end": 524
        },
        "start": 516,
        "end": 524
      },
      "start": 516,
      "end": 525
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 530,
          "end": 531
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 536,
          "end": 537
        },
        "start": 530,
        "end": 537
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 553,
                "end": 565
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = 1; x &= \"1\"; x === 1. Actual: ",
                    "raw": "'#2: x = 1; x &= \"1\"; x === 1. Actual: '",
                    "start": 566,
                    "end": 606
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 610,
                      "end": 611
                    },
                    "start": 609,
                    "end": 612
                  },
                  "start": 566,
                  "end": 612
                }
              ],
              "start": 549,
              "end": 613
            },
            "start": 543,
            "end": 614
          }
        ],
        "start": 539,
        "end": 616
      },
      "alternate": null,
      "start": 526,
      "end": 616
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 628,
          "end": 629
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 636,
            "end": 642
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 643,
              "end": 646
            }
          ],
          "start": 632,
          "end": 647
        },
        "start": 628,
        "end": 647
      },
      "start": 628,
      "end": 648
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 649,
          "end": 650
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 654,
          "end": 655
        },
        "start": 649,
        "end": 655
      },
      "start": 649,
      "end": 656
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 661,
          "end": 662
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 667,
          "end": 668
        },
        "start": 661,
        "end": 668
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 684,
                "end": 696
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new String(\"1\"); x &= 1; x === 1. Actual: ",
                    "raw": "'#3: x = new String(\"1\"); x &= 1; x === 1. Actual: '",
                    "start": 697,
                    "end": 749
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 753,
                      "end": 754
                    },
                    "start": 752,
                    "end": 755
                  },
                  "start": 697,
                  "end": 755
                }
              ],
              "start": 680,
              "end": 756
            },
            "start": 674,
            "end": 757
          }
        ],
        "start": 670,
        "end": 759
      },
      "alternate": null,
      "start": 657,
      "end": 759
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 771,
          "end": 772
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 775,
          "end": 776
        },
        "start": 771,
        "end": 776
      },
      "start": 771,
      "end": 777
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 778,
          "end": 779
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 787,
            "end": 793
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 794,
              "end": 797
            }
          ],
          "start": 783,
          "end": 798
        },
        "start": 778,
        "end": 798
      },
      "start": 778,
      "end": 799
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 804,
          "end": 805
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 810,
          "end": 811
        },
        "start": 804,
        "end": 811
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 827,
                "end": 839
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = 1; x &= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#4: x = 1; x &= new String(\"1\"); x === 1. Actual: '",
                    "start": 840,
                    "end": 892
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 896,
                      "end": 897
                    },
                    "start": 895,
                    "end": 898
                  },
                  "start": 840,
                  "end": 898
                }
              ],
              "start": 823,
              "end": 899
            },
            "start": 817,
            "end": 900
          }
        ],
        "start": 813,
        "end": 902
      },
      "alternate": null,
      "start": 800,
      "end": 902
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 914,
          "end": 915
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 918,
          "end": 921
        },
        "start": 914,
        "end": 921
      },
      "start": 914,
      "end": 922
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 923,
          "end": 924
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 932,
            "end": 938
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 939,
              "end": 940
            }
          ],
          "start": 928,
          "end": 941
        },
        "start": 923,
        "end": 941
      },
      "start": 923,
      "end": 942
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 947,
          "end": 948
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 953,
          "end": 954
        },
        "start": 947,
        "end": 954
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 970,
                "end": 982
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = \"1\"; x &= new Number(1); x === 1. Actual: ",
                    "raw": "'#5: x = \"1\"; x &= new Number(1); x === 1. Actual: '",
                    "start": 983,
                    "end": 1035
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1039,
                      "end": 1040
                    },
                    "start": 1038,
                    "end": 1041
                  },
                  "start": 983,
                  "end": 1041
                }
              ],
              "start": 966,
              "end": 1042
            },
            "start": 960,
            "end": 1043
          }
        ],
        "start": 956,
        "end": 1045
      },
      "alternate": null,
      "start": 943,
      "end": 1045
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1057,
          "end": 1058
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1065,
            "end": 1071
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1072,
              "end": 1073
            }
          ],
          "start": 1061,
          "end": 1074
        },
        "start": 1057,
        "end": 1074
      },
      "start": 1057,
      "end": 1075
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1076,
          "end": 1077
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 1081,
          "end": 1084
        },
        "start": 1076,
        "end": 1084
      },
      "start": 1076,
      "end": 1085
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1090,
          "end": 1091
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1096,
          "end": 1097
        },
        "start": 1090,
        "end": 1097
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1113,
                "end": 1125
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new Number(1); x &= \"1\"; x === 1. Actual: ",
                    "raw": "'#6: x = new Number(1); x &= \"1\"; x === 1. Actual: '",
                    "start": 1126,
                    "end": 1178
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1182,
                      "end": 1183
                    },
                    "start": 1181,
                    "end": 1184
                  },
                  "start": 1126,
                  "end": 1184
                }
              ],
              "start": 1109,
              "end": 1185
            },
            "start": 1103,
            "end": 1186
          }
        ],
        "start": 1099,
        "end": 1188
      },
      "alternate": null,
      "start": 1086,
      "end": 1188
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1200,
          "end": 1201
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1208,
            "end": 1214
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1215,
              "end": 1218
            }
          ],
          "start": 1204,
          "end": 1219
        },
        "start": 1200,
        "end": 1219
      },
      "start": 1200,
      "end": 1220
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1221,
          "end": 1222
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1230,
            "end": 1236
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1237,
              "end": 1238
            }
          ],
          "start": 1226,
          "end": 1239
        },
        "start": 1221,
        "end": 1239
      },
      "start": 1221,
      "end": 1240
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1245,
          "end": 1246
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1251,
          "end": 1252
        },
        "start": 1245,
        "end": 1252
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1268,
                "end": 1280
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new String(\"1\"); x &= new Number(1); x === 1. Actual: ",
                    "raw": "'#7: x = new String(\"1\"); x &= new Number(1); x === 1. Actual: '",
                    "start": 1281,
                    "end": 1345
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1349,
                      "end": 1350
                    },
                    "start": 1348,
                    "end": 1351
                  },
                  "start": 1281,
                  "end": 1351
                }
              ],
              "start": 1264,
              "end": 1352
            },
            "start": 1258,
            "end": 1353
          }
        ],
        "start": 1254,
        "end": 1355
      },
      "alternate": null,
      "start": 1241,
      "end": 1355
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1367,
          "end": 1368
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1375,
            "end": 1381
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1382,
              "end": 1383
            }
          ],
          "start": 1371,
          "end": 1384
        },
        "start": 1367,
        "end": 1384
      },
      "start": 1367,
      "end": 1385
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1386,
          "end": 1387
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1395,
            "end": 1401
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1402,
              "end": 1405
            }
          ],
          "start": 1391,
          "end": 1406
        },
        "start": 1386,
        "end": 1406
      },
      "start": 1386,
      "end": 1407
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1412,
          "end": 1413
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1418,
          "end": 1419
        },
        "start": 1412,
        "end": 1419
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1435,
                "end": 1447
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new Number(1); x &= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#8: x = new Number(1); x &= new String(\"1\"); x === 1. Actual: '",
                    "start": 1448,
                    "end": 1512
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1516,
                      "end": 1517
                    },
                    "start": 1515,
                    "end": 1518
                  },
                  "start": 1448,
                  "end": 1518
                }
              ],
              "start": 1431,
              "end": 1519
            },
            "start": 1425,
            "end": 1520
          }
        ],
        "start": 1421,
        "end": 1522
      },
      "alternate": null,
      "start": 1408,
      "end": 1522
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1534,
          "end": 1535
        },
        "right": {
          "type": "Literal",
          "value": "x",
          "raw": "\"x\"",
          "start": 1538,
          "end": 1541
        },
        "start": 1534,
        "end": 1541
      },
      "start": 1534,
      "end": 1542
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1543,
          "end": 1544
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1548,
          "end": 1549
        },
        "start": 1543,
        "end": 1549
      },
      "start": 1543,
      "end": 1550
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1555,
          "end": 1556
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1561,
          "end": 1562
        },
        "start": 1555,
        "end": 1562
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1578,
                "end": 1590
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: x = \"x\"; x &= 1; x === 0. Actual: ",
                    "raw": "'#9: x = \"x\"; x &= 1; x === 0. Actual: '",
                    "start": 1591,
                    "end": 1631
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1635,
                      "end": 1636
                    },
                    "start": 1634,
                    "end": 1637
                  },
                  "start": 1591,
                  "end": 1637
                }
              ],
              "start": 1574,
              "end": 1638
            },
            "start": 1568,
            "end": 1639
          }
        ],
        "start": 1564,
        "end": 1641
      },
      "alternate": null,
      "start": 1551,
      "end": 1641
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1654,
          "end": 1655
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1658,
          "end": 1659
        },
        "start": 1654,
        "end": 1659
      },
      "start": 1654,
      "end": 1660
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1661,
          "end": 1662
        },
        "right": {
          "type": "Literal",
          "value": "x",
          "raw": "\"x\"",
          "start": 1666,
          "end": 1669
        },
        "start": 1661,
        "end": 1669
      },
      "start": 1661,
      "end": 1670
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1675,
          "end": 1676
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1681,
          "end": 1682
        },
        "start": 1675,
        "end": 1682
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1698,
                "end": 1710
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: x = 1; x &= \"x\"; x === 0. Actual: ",
                    "raw": "'#10: x = 1; x &= \"x\"; x === 0. Actual: '",
                    "start": 1711,
                    "end": 1752
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1756,
                      "end": 1757
                    },
                    "start": 1755,
                    "end": 1758
                  },
                  "start": 1711,
                  "end": 1758
                }
              ],
              "start": 1694,
              "end": 1759
            },
            "start": 1688,
            "end": 1760
          }
        ],
        "start": 1684,
        "end": 1762
      },
      "alternate": null,
      "start": 1671,
      "end": 1762
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1763
}