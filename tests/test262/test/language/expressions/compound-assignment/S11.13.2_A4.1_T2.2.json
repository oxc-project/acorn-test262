{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 391,
            "end": 392
          },
          "init": null,
          "start": 391,
          "end": 392
        }
      ],
      "start": 387,
      "end": 393
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 405,
          "end": 406
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 409,
          "end": 412
        },
        "start": 405,
        "end": 412
      },
      "start": 405,
      "end": 413
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 414,
          "end": 415
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 419,
          "end": 420
        },
        "start": 414,
        "end": 420
      },
      "start": 414,
      "end": 421
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 426,
          "end": 427
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 432,
          "end": 433
        },
        "start": 426,
        "end": 433
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 449,
                "end": 461
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = \"1\"; x *= 1; x === 1. Actual: ",
                    "raw": "'#1: x = \"1\"; x *= 1; x === 1. Actual: '",
                    "start": 462,
                    "end": 502
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 506,
                      "end": 507
                    },
                    "start": 505,
                    "end": 508
                  },
                  "start": 462,
                  "end": 508
                }
              ],
              "start": 445,
              "end": 509
            },
            "start": 439,
            "end": 510
          }
        ],
        "start": 435,
        "end": 512
      },
      "alternate": null,
      "start": 422,
      "end": 512
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 524,
          "end": 525
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 528,
          "end": 529
        },
        "start": 524,
        "end": 529
      },
      "start": 524,
      "end": 530
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 531,
          "end": 532
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 536,
          "end": 539
        },
        "start": 531,
        "end": 539
      },
      "start": 531,
      "end": 540
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 545,
          "end": 546
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 551,
          "end": 552
        },
        "start": 545,
        "end": 552
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 568,
                "end": 580
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = 1; x *= \"1\"; x === 1. Actual: ",
                    "raw": "'#2: x = 1; x *= \"1\"; x === 1. Actual: '",
                    "start": 581,
                    "end": 621
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 625,
                      "end": 626
                    },
                    "start": 624,
                    "end": 627
                  },
                  "start": 581,
                  "end": 627
                }
              ],
              "start": 564,
              "end": 628
            },
            "start": 558,
            "end": 629
          }
        ],
        "start": 554,
        "end": 631
      },
      "alternate": null,
      "start": 541,
      "end": 631
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 643,
          "end": 644
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 651,
            "end": 657
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 658,
              "end": 661
            }
          ],
          "start": 647,
          "end": 662
        },
        "start": 643,
        "end": 662
      },
      "start": 643,
      "end": 663
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 664,
          "end": 665
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 669,
          "end": 670
        },
        "start": 664,
        "end": 670
      },
      "start": 664,
      "end": 671
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 676,
          "end": 677
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 682,
          "end": 683
        },
        "start": 676,
        "end": 683
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 699,
                "end": 711
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new String(\"1\"); x *= 1; x === 1. Actual: ",
                    "raw": "'#3: x = new String(\"1\"); x *= 1; x === 1. Actual: '",
                    "start": 712,
                    "end": 764
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 768,
                      "end": 769
                    },
                    "start": 767,
                    "end": 770
                  },
                  "start": 712,
                  "end": 770
                }
              ],
              "start": 695,
              "end": 771
            },
            "start": 689,
            "end": 772
          }
        ],
        "start": 685,
        "end": 774
      },
      "alternate": null,
      "start": 672,
      "end": 774
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 786,
          "end": 787
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 790,
          "end": 791
        },
        "start": 786,
        "end": 791
      },
      "start": 786,
      "end": 792
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 793,
          "end": 794
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 802,
            "end": 808
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 809,
              "end": 812
            }
          ],
          "start": 798,
          "end": 813
        },
        "start": 793,
        "end": 813
      },
      "start": 793,
      "end": 814
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 819,
          "end": 820
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 825,
          "end": 826
        },
        "start": 819,
        "end": 826
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 842,
                "end": 854
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = 1; x *= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#4: x = 1; x *= new String(\"1\"); x === 1. Actual: '",
                    "start": 855,
                    "end": 907
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 911,
                      "end": 912
                    },
                    "start": 910,
                    "end": 913
                  },
                  "start": 855,
                  "end": 913
                }
              ],
              "start": 838,
              "end": 914
            },
            "start": 832,
            "end": 915
          }
        ],
        "start": 828,
        "end": 917
      },
      "alternate": null,
      "start": 815,
      "end": 917
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 929,
          "end": 930
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 933,
          "end": 936
        },
        "start": 929,
        "end": 936
      },
      "start": 929,
      "end": 937
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 938,
          "end": 939
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 947,
            "end": 953
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 954,
              "end": 955
            }
          ],
          "start": 943,
          "end": 956
        },
        "start": 938,
        "end": 956
      },
      "start": 938,
      "end": 957
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 962,
          "end": 963
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 968,
          "end": 969
        },
        "start": 962,
        "end": 969
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 985,
                "end": 997
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = \"1\"; x *= new Number(1); x === 1. Actual: ",
                    "raw": "'#5: x = \"1\"; x *= new Number(1); x === 1. Actual: '",
                    "start": 998,
                    "end": 1050
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1054,
                      "end": 1055
                    },
                    "start": 1053,
                    "end": 1056
                  },
                  "start": 998,
                  "end": 1056
                }
              ],
              "start": 981,
              "end": 1057
            },
            "start": 975,
            "end": 1058
          }
        ],
        "start": 971,
        "end": 1060
      },
      "alternate": null,
      "start": 958,
      "end": 1060
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1072,
          "end": 1073
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1080,
            "end": 1086
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1087,
              "end": 1088
            }
          ],
          "start": 1076,
          "end": 1089
        },
        "start": 1072,
        "end": 1089
      },
      "start": 1072,
      "end": 1090
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1091,
          "end": 1092
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 1096,
          "end": 1099
        },
        "start": 1091,
        "end": 1099
      },
      "start": 1091,
      "end": 1100
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1105,
          "end": 1106
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1111,
          "end": 1112
        },
        "start": 1105,
        "end": 1112
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1128,
                "end": 1140
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new Number(1); x *= \"1\"; x === 1. Actual: ",
                    "raw": "'#6: x = new Number(1); x *= \"1\"; x === 1. Actual: '",
                    "start": 1141,
                    "end": 1193
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1197,
                      "end": 1198
                    },
                    "start": 1196,
                    "end": 1199
                  },
                  "start": 1141,
                  "end": 1199
                }
              ],
              "start": 1124,
              "end": 1200
            },
            "start": 1118,
            "end": 1201
          }
        ],
        "start": 1114,
        "end": 1203
      },
      "alternate": null,
      "start": 1101,
      "end": 1203
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1215,
          "end": 1216
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1223,
            "end": 1229
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1230,
              "end": 1233
            }
          ],
          "start": 1219,
          "end": 1234
        },
        "start": 1215,
        "end": 1234
      },
      "start": 1215,
      "end": 1235
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1236,
          "end": 1237
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1245,
            "end": 1251
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1252,
              "end": 1253
            }
          ],
          "start": 1241,
          "end": 1254
        },
        "start": 1236,
        "end": 1254
      },
      "start": 1236,
      "end": 1255
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1260,
          "end": 1261
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1266,
          "end": 1267
        },
        "start": 1260,
        "end": 1267
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1283,
                "end": 1295
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new String(\"1\"); x *= new Number(1); x === 1. Actual: ",
                    "raw": "'#7: x = new String(\"1\"); x *= new Number(1); x === 1. Actual: '",
                    "start": 1296,
                    "end": 1360
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1364,
                      "end": 1365
                    },
                    "start": 1363,
                    "end": 1366
                  },
                  "start": 1296,
                  "end": 1366
                }
              ],
              "start": 1279,
              "end": 1367
            },
            "start": 1273,
            "end": 1368
          }
        ],
        "start": 1269,
        "end": 1370
      },
      "alternate": null,
      "start": 1256,
      "end": 1370
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1382,
          "end": 1383
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1390,
            "end": 1396
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1397,
              "end": 1398
            }
          ],
          "start": 1386,
          "end": 1399
        },
        "start": 1382,
        "end": 1399
      },
      "start": 1382,
      "end": 1400
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1401,
          "end": 1402
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1410,
            "end": 1416
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1417,
              "end": 1420
            }
          ],
          "start": 1406,
          "end": 1421
        },
        "start": 1401,
        "end": 1421
      },
      "start": 1401,
      "end": 1422
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1427,
          "end": 1428
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1433,
          "end": 1434
        },
        "start": 1427,
        "end": 1434
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1450,
                "end": 1462
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new Number(1); x *= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#8: x = new Number(1); x *= new String(\"1\"); x === 1. Actual: '",
                    "start": 1463,
                    "end": 1527
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1531,
                      "end": 1532
                    },
                    "start": 1530,
                    "end": 1533
                  },
                  "start": 1463,
                  "end": 1533
                }
              ],
              "start": 1446,
              "end": 1534
            },
            "start": 1440,
            "end": 1535
          }
        ],
        "start": 1436,
        "end": 1537
      },
      "alternate": null,
      "start": 1423,
      "end": 1537
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1549,
          "end": 1550
        },
        "right": {
          "type": "Literal",
          "value": "x",
          "raw": "\"x\"",
          "start": 1553,
          "end": 1556
        },
        "start": 1549,
        "end": 1556
      },
      "start": 1549,
      "end": 1557
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1558,
          "end": 1559
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1563,
          "end": 1564
        },
        "start": 1558,
        "end": 1564
      },
      "start": 1558,
      "end": 1565
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1570,
            "end": 1575
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 1576,
              "end": 1577
            }
          ],
          "optional": false,
          "start": 1570,
          "end": 1578
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1583,
          "end": 1587
        },
        "start": 1570,
        "end": 1587
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1603,
                "end": 1615
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: x = \"x\"; x *= 1; x === Not-a-Number. Actual: ",
                    "raw": "'#9: x = \"x\"; x *= 1; x === Not-a-Number. Actual: '",
                    "start": 1616,
                    "end": 1667
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1671,
                      "end": 1672
                    },
                    "start": 1670,
                    "end": 1673
                  },
                  "start": 1616,
                  "end": 1673
                }
              ],
              "start": 1599,
              "end": 1674
            },
            "start": 1593,
            "end": 1675
          }
        ],
        "start": 1589,
        "end": 1677
      },
      "alternate": null,
      "start": 1566,
      "end": 1677
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1690,
          "end": 1691
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1694,
          "end": 1695
        },
        "start": 1690,
        "end": 1695
      },
      "start": 1690,
      "end": 1696
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1697,
          "end": 1698
        },
        "right": {
          "type": "Literal",
          "value": "x",
          "raw": "\"x\"",
          "start": 1702,
          "end": 1705
        },
        "start": 1697,
        "end": 1705
      },
      "start": 1697,
      "end": 1706
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1711,
            "end": 1716
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 1717,
              "end": 1718
            }
          ],
          "optional": false,
          "start": 1711,
          "end": 1719
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1724,
          "end": 1728
        },
        "start": 1711,
        "end": 1728
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1744,
                "end": 1756
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: x = 1; x *= \"x\"; x === Not-a-Number. Actual: ",
                    "raw": "'#10: x = 1; x *= \"x\"; x === Not-a-Number. Actual: '",
                    "start": 1757,
                    "end": 1809
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1813,
                      "end": 1814
                    },
                    "start": 1812,
                    "end": 1815
                  },
                  "start": 1757,
                  "end": 1815
                }
              ],
              "start": 1740,
              "end": 1816
            },
            "start": 1734,
            "end": 1817
          }
        ],
        "start": 1730,
        "end": 1819
      },
      "alternate": null,
      "start": 1707,
      "end": 1819
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1820
}