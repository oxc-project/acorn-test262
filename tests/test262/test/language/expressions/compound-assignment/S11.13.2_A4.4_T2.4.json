{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 357,
            "end": 358
          },
          "init": null,
          "start": 357,
          "end": 358
        }
      ],
      "start": 353,
      "end": 359
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 371,
          "end": 372
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 375,
          "end": 379
        },
        "start": 371,
        "end": 379
      },
      "start": 371,
      "end": 380
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 381,
          "end": 382
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 386,
          "end": 395
        },
        "start": 381,
        "end": 395
      },
      "start": 381,
      "end": 396
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 401,
            "end": 406
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 407,
              "end": 408
            }
          ],
          "optional": false,
          "start": 401,
          "end": 409
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 414,
          "end": 418
        },
        "start": 401,
        "end": 418
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 434,
                "end": 446
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = true; x += undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#1: x = true; x += undefined; x === Not-a-Number. Actual: '",
                    "start": 447,
                    "end": 507
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 511,
                      "end": 512
                    },
                    "start": 510,
                    "end": 513
                  },
                  "start": 447,
                  "end": 513
                }
              ],
              "start": 430,
              "end": 514
            },
            "start": 424,
            "end": 515
          }
        ],
        "start": 420,
        "end": 517
      },
      "alternate": null,
      "start": 397,
      "end": 517
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 529,
          "end": 530
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 533,
          "end": 542
        },
        "start": 529,
        "end": 542
      },
      "start": 529,
      "end": 543
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 544,
          "end": 545
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 549,
          "end": 553
        },
        "start": 544,
        "end": 553
      },
      "start": 544,
      "end": 554
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 559,
            "end": 564
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 565,
              "end": 566
            }
          ],
          "optional": false,
          "start": 559,
          "end": 567
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 572,
          "end": 576
        },
        "start": 559,
        "end": 576
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 592,
                "end": 604
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = undefined; x += true; x === Not-a-Number. Actual: ",
                    "raw": "'#2: x = undefined; x += true; x === Not-a-Number. Actual: '",
                    "start": 605,
                    "end": 665
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 669,
                      "end": 670
                    },
                    "start": 668,
                    "end": 671
                  },
                  "start": 605,
                  "end": 671
                }
              ],
              "start": 588,
              "end": 672
            },
            "start": 582,
            "end": 673
          }
        ],
        "start": 578,
        "end": 675
      },
      "alternate": null,
      "start": 555,
      "end": 675
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 687,
          "end": 688
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 695,
            "end": 702
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 703,
              "end": 707
            }
          ],
          "start": 691,
          "end": 708
        },
        "start": 687,
        "end": 708
      },
      "start": 687,
      "end": 709
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 710,
          "end": 711
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 715,
          "end": 724
        },
        "start": 710,
        "end": 724
      },
      "start": 710,
      "end": 725
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 730,
            "end": 735
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 736,
              "end": 737
            }
          ],
          "optional": false,
          "start": 730,
          "end": 738
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 743,
          "end": 747
        },
        "start": 730,
        "end": 747
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 763,
                "end": 775
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Boolean(true); x += undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x += undefined; x === Not-a-Number. Actual: '",
                    "start": 776,
                    "end": 849
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 853,
                      "end": 854
                    },
                    "start": 852,
                    "end": 855
                  },
                  "start": 776,
                  "end": 855
                }
              ],
              "start": 759,
              "end": 856
            },
            "start": 753,
            "end": 857
          }
        ],
        "start": 749,
        "end": 859
      },
      "alternate": null,
      "start": 726,
      "end": 859
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 871,
          "end": 872
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 875,
          "end": 884
        },
        "start": 871,
        "end": 884
      },
      "start": 871,
      "end": 885
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 886,
          "end": 887
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 895,
            "end": 902
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 903,
              "end": 907
            }
          ],
          "start": 891,
          "end": 908
        },
        "start": 886,
        "end": 908
      },
      "start": 886,
      "end": 909
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 914,
            "end": 919
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 920,
              "end": 921
            }
          ],
          "optional": false,
          "start": 914,
          "end": 922
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 927,
          "end": 931
        },
        "start": 914,
        "end": 931
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 947,
                "end": 959
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = undefined; x += new Boolean(true); x === Not-a-Number. Actual: ",
                    "raw": "'#4: x = undefined; x += new Boolean(true); x === Not-a-Number. Actual: '",
                    "start": 960,
                    "end": 1033
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1037,
                      "end": 1038
                    },
                    "start": 1036,
                    "end": 1039
                  },
                  "start": 960,
                  "end": 1039
                }
              ],
              "start": 943,
              "end": 1040
            },
            "start": 937,
            "end": 1041
          }
        ],
        "start": 933,
        "end": 1043
      },
      "alternate": null,
      "start": 910,
      "end": 1043
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1044
}