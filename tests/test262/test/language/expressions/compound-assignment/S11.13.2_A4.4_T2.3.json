{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 356,
            "end": 357
          },
          "init": null,
          "start": 356,
          "end": 357
        }
      ],
      "start": 352,
      "end": 358
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 370,
          "end": 371
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 374,
          "end": 375
        },
        "start": 370,
        "end": 375
      },
      "start": 370,
      "end": 376
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 377,
          "end": 378
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 382,
          "end": 391
        },
        "start": 377,
        "end": 391
      },
      "start": 377,
      "end": 392
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 397,
            "end": 402
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 403,
              "end": 404
            }
          ],
          "optional": false,
          "start": 397,
          "end": 405
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 410,
          "end": 414
        },
        "start": 397,
        "end": 414
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 430,
                "end": 442
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = 1; x += undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#1: x = 1; x += undefined; x === Not-a-Number. Actual: '",
                    "start": 443,
                    "end": 500
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 504,
                      "end": 505
                    },
                    "start": 503,
                    "end": 506
                  },
                  "start": 443,
                  "end": 506
                }
              ],
              "start": 426,
              "end": 507
            },
            "start": 420,
            "end": 508
          }
        ],
        "start": 416,
        "end": 510
      },
      "alternate": null,
      "start": 393,
      "end": 510
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 522,
          "end": 523
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 526,
          "end": 535
        },
        "start": 522,
        "end": 535
      },
      "start": 522,
      "end": 536
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 537,
          "end": 538
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 542,
          "end": 543
        },
        "start": 537,
        "end": 543
      },
      "start": 537,
      "end": 544
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 549,
            "end": 554
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 555,
              "end": 556
            }
          ],
          "optional": false,
          "start": 549,
          "end": 557
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 562,
          "end": 566
        },
        "start": 549,
        "end": 566
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 582,
                "end": 594
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = undefined; x += 1; x === Not-a-Number. Actual: ",
                    "raw": "'#2: x = undefined; x += 1; x === Not-a-Number. Actual: '",
                    "start": 595,
                    "end": 652
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 656,
                      "end": 657
                    },
                    "start": 655,
                    "end": 658
                  },
                  "start": 595,
                  "end": 658
                }
              ],
              "start": 578,
              "end": 659
            },
            "start": 572,
            "end": 660
          }
        ],
        "start": 568,
        "end": 662
      },
      "alternate": null,
      "start": 545,
      "end": 662
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 674,
          "end": 675
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 682,
            "end": 688
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 689,
              "end": 690
            }
          ],
          "start": 678,
          "end": 691
        },
        "start": 674,
        "end": 691
      },
      "start": 674,
      "end": 692
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 693,
          "end": 694
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 698,
          "end": 707
        },
        "start": 693,
        "end": 707
      },
      "start": 693,
      "end": 708
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 713,
            "end": 718
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 719,
              "end": 720
            }
          ],
          "optional": false,
          "start": 713,
          "end": 721
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 726,
          "end": 730
        },
        "start": 713,
        "end": 730
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 746,
                "end": 758
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Number(1); x += undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#3: x = new Number(1); x += undefined; x === Not-a-Number. Actual: '",
                    "start": 759,
                    "end": 828
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 832,
                      "end": 833
                    },
                    "start": 831,
                    "end": 834
                  },
                  "start": 759,
                  "end": 834
                }
              ],
              "start": 742,
              "end": 835
            },
            "start": 736,
            "end": 836
          }
        ],
        "start": 732,
        "end": 838
      },
      "alternate": null,
      "start": 709,
      "end": 838
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 850,
          "end": 851
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 854,
          "end": 863
        },
        "start": 850,
        "end": 863
      },
      "start": 850,
      "end": 864
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 865,
          "end": 866
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 874,
            "end": 880
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 881,
              "end": 882
            }
          ],
          "start": 870,
          "end": 883
        },
        "start": 865,
        "end": 883
      },
      "start": 865,
      "end": 884
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 889,
            "end": 894
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 895,
              "end": 896
            }
          ],
          "optional": false,
          "start": 889,
          "end": 897
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 902,
          "end": 906
        },
        "start": 889,
        "end": 906
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 922,
                "end": 934
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = undefined; x += new Number(1); x === Not-a-Number. Actual: ",
                    "raw": "'#4: x = undefined; x += new Number(1); x === Not-a-Number. Actual: '",
                    "start": 935,
                    "end": 1004
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1008,
                      "end": 1009
                    },
                    "start": 1007,
                    "end": 1010
                  },
                  "start": 935,
                  "end": 1010
                }
              ],
              "start": 918,
              "end": 1011
            },
            "start": 912,
            "end": 1012
          }
        ],
        "start": 908,
        "end": 1014
      },
      "alternate": null,
      "start": 885,
      "end": 1014
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1015
}