{
  "type": "Program",
  "start": 0,
  "end": 907,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 289,
      "end": 295,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 293,
          "end": 294,
          "id": {
            "type": "Identifier",
            "start": 293,
            "end": 294,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 307,
      "end": 316,
      "expression": {
        "type": "AssignmentExpression",
        "start": 307,
        "end": 315,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 307,
          "end": 308,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 311,
          "end": 315,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 317,
      "end": 332,
      "expression": {
        "type": "AssignmentExpression",
        "start": 317,
        "end": 331,
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "start": 317,
          "end": 318,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 322,
          "end": 331,
          "name": "undefined"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 333,
      "end": 453,
      "test": {
        "type": "BinaryExpression",
        "start": 337,
        "end": 354,
        "left": {
          "type": "CallExpression",
          "start": 337,
          "end": 345,
          "callee": {
            "type": "Identifier",
            "start": 337,
            "end": 342,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 343,
              "end": 344,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 350,
          "end": 354,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 356,
        "end": 453,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 360,
            "end": 451,
            "argument": {
              "type": "NewExpression",
              "start": 366,
              "end": 450,
              "callee": {
                "type": "Identifier",
                "start": 370,
                "end": 382,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 383,
                  "end": 449,
                  "left": {
                    "type": "Literal",
                    "start": 383,
                    "end": 443,
                    "value": "#1: x = null; x += undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#1: x = null; x += undefined; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 446,
                    "end": 449,
                    "expression": {
                      "type": "Identifier",
                      "start": 447,
                      "end": 448,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 465,
      "end": 479,
      "expression": {
        "type": "AssignmentExpression",
        "start": 465,
        "end": 478,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 465,
          "end": 466,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 469,
          "end": 478,
          "name": "undefined"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 480,
      "end": 490,
      "expression": {
        "type": "AssignmentExpression",
        "start": 480,
        "end": 489,
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "start": 480,
          "end": 481,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 485,
          "end": 489,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 491,
      "end": 611,
      "test": {
        "type": "BinaryExpression",
        "start": 495,
        "end": 512,
        "left": {
          "type": "CallExpression",
          "start": 495,
          "end": 503,
          "callee": {
            "type": "Identifier",
            "start": 495,
            "end": 500,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 501,
              "end": 502,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 508,
          "end": 512,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 514,
        "end": 611,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 518,
            "end": 609,
            "argument": {
              "type": "NewExpression",
              "start": 524,
              "end": 608,
              "callee": {
                "type": "Identifier",
                "start": 528,
                "end": 540,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 541,
                  "end": 607,
                  "left": {
                    "type": "Literal",
                    "start": 541,
                    "end": 601,
                    "value": "#2: x = undefined; x += null; x === Not-a-Number. Actual: ",
                    "raw": "'#2: x = undefined; x += null; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 604,
                    "end": 607,
                    "expression": {
                      "type": "Identifier",
                      "start": 605,
                      "end": 606,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 623,
      "end": 637,
      "expression": {
        "type": "AssignmentExpression",
        "start": 623,
        "end": 636,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 623,
          "end": 624,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 627,
          "end": 636,
          "name": "undefined"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 638,
      "end": 653,
      "expression": {
        "type": "AssignmentExpression",
        "start": 638,
        "end": 652,
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "start": 638,
          "end": 639,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 643,
          "end": 652,
          "name": "undefined"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 654,
      "end": 779,
      "test": {
        "type": "BinaryExpression",
        "start": 658,
        "end": 675,
        "left": {
          "type": "CallExpression",
          "start": 658,
          "end": 666,
          "callee": {
            "type": "Identifier",
            "start": 658,
            "end": 663,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 664,
              "end": 665,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 671,
          "end": 675,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 677,
        "end": 779,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 681,
            "end": 777,
            "argument": {
              "type": "NewExpression",
              "start": 687,
              "end": 776,
              "callee": {
                "type": "Identifier",
                "start": 691,
                "end": 703,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 704,
                  "end": 775,
                  "left": {
                    "type": "Literal",
                    "start": 704,
                    "end": 769,
                    "value": "#3: x = undefined; x += undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#3: x = undefined; x += undefined; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 772,
                    "end": 775,
                    "expression": {
                      "type": "Identifier",
                      "start": 773,
                      "end": 774,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 791,
      "end": 800,
      "expression": {
        "type": "AssignmentExpression",
        "start": 791,
        "end": 799,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 791,
          "end": 792,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 795,
          "end": 799,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 801,
      "end": 811,
      "expression": {
        "type": "AssignmentExpression",
        "start": 801,
        "end": 810,
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "start": 801,
          "end": 802,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 806,
          "end": 810,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 812,
      "end": 906,
      "test": {
        "type": "BinaryExpression",
        "start": 816,
        "end": 823,
        "left": {
          "type": "Identifier",
          "start": 816,
          "end": 817,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 822,
          "end": 823,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 825,
        "end": 906,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 829,
            "end": 904,
            "argument": {
              "type": "NewExpression",
              "start": 835,
              "end": 903,
              "callee": {
                "type": "Identifier",
                "start": 839,
                "end": 851,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 852,
                  "end": 902,
                  "left": {
                    "type": "Literal",
                    "start": 852,
                    "end": 896,
                    "value": "#4: x = null; x += null; x === 0. Actual: ",
                    "raw": "'#4: x = null; x += null; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 899,
                    "end": 902,
                    "expression": {
                      "type": "Identifier",
                      "start": 900,
                      "end": 901,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}