{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "testCompoundAssignment",
        "start": 588,
        "end": 610
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 621,
                  "end": 622
                },
                "init": {
                  "type": "Literal",
                  "value": 8,
                  "raw": "8",
                  "start": 625,
                  "end": 626
                },
                "start": 621,
                "end": 626
              }
            ],
            "start": 617,
            "end": 627
          },
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "innerX",
                  "start": 634,
                  "end": 640
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": ">>>=",
                              "left": {
                                "type": "Identifier",
                                "name": "x",
                                "start": 661,
                                "end": 662
                              },
                              "right": {
                                "type": "ParenthesizedExpression",
                                "expression": {
                                  "type": "SequenceExpression",
                                  "expressions": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "eval",
                                        "start": 669,
                                        "end": 673
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "var x = 2;",
                                          "raw": "\"var x = 2;\"",
                                          "start": 674,
                                          "end": 686
                                        }
                                      ],
                                      "optional": false,
                                      "start": 669,
                                      "end": 687
                                    },
                                    {
                                      "type": "Literal",
                                      "value": 1,
                                      "raw": "1",
                                      "start": 689,
                                      "end": 690
                                    }
                                  ],
                                  "start": 669,
                                  "end": 690
                                },
                                "start": 668,
                                "end": 691
                              },
                              "start": 661,
                              "end": 691
                            },
                            "start": 661,
                            "end": 692
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "x",
                              "start": 704,
                              "end": 705
                            },
                            "start": 697,
                            "end": 706
                          }
                        ],
                        "start": 655,
                        "end": 710
                      },
                      "expression": false,
                      "start": 644,
                      "end": 710
                    },
                    "start": 643,
                    "end": 711
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 643,
                  "end": 713
                },
                "start": 634,
                "end": 713
              }
            ],
            "start": 630,
            "end": 714
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "innerX",
                "start": 722,
                "end": 728
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 733,
                "end": 734
              },
              "start": 722,
              "end": 734
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 752,
                      "end": 764
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": "#1: innerX === 2. Actual: ",
                          "raw": "'#1: innerX === 2. Actual: '",
                          "start": 765,
                          "end": 793
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "expression": {
                            "type": "Identifier",
                            "name": "innerX",
                            "start": 797,
                            "end": 803
                          },
                          "start": 796,
                          "end": 804
                        },
                        "start": 765,
                        "end": 804
                      }
                    ],
                    "start": 748,
                    "end": 805
                  },
                  "start": 742,
                  "end": 806
                }
              ],
              "start": 736,
              "end": 810
            },
            "alternate": null,
            "start": 718,
            "end": 810
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "x",
                "start": 817,
                "end": 818
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "value": 4,
                "raw": "4",
                "start": 823,
                "end": 824
              },
              "start": 817,
              "end": 824
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 842,
                      "end": 854
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": "#2: x === 4. Actual: ",
                          "raw": "'#2: x === 4. Actual: '",
                          "start": 855,
                          "end": 878
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "expression": {
                            "type": "Identifier",
                            "name": "x",
                            "start": 882,
                            "end": 883
                          },
                          "start": 881,
                          "end": 884
                        },
                        "start": 855,
                        "end": 884
                      }
                    ],
                    "start": 838,
                    "end": 885
                  },
                  "start": 832,
                  "end": 886
                }
              ],
              "start": 826,
              "end": 890
            },
            "alternate": null,
            "start": 813,
            "end": 890
          }
        ],
        "start": 613,
        "end": 892
      },
      "expression": false,
      "start": 579,
      "end": 892
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "testCompoundAssignment",
          "start": 893,
          "end": 915
        },
        "arguments": [],
        "optional": false,
        "start": 893,
        "end": 917
      },
      "start": 893,
      "end": 918
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 919
}