{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 380,
            "end": 381
          },
          "init": null,
          "start": 380,
          "end": 381
        }
      ],
      "start": 376,
      "end": 382
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 394,
          "end": 395
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 398,
          "end": 401
        },
        "start": 394,
        "end": 401
      },
      "start": 394,
      "end": 402
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 403,
          "end": 404
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 410,
          "end": 411
        },
        "start": 403,
        "end": 411
      },
      "start": 403,
      "end": 412
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 417,
          "end": 418
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 423,
          "end": 424
        },
        "start": 417,
        "end": 424
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 440,
                "end": 452
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = \"1\"; x >>>= 1; x === 0. Actual: ",
                    "raw": "'#1: x = \"1\"; x >>>= 1; x === 0. Actual: '",
                    "start": 453,
                    "end": 495
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 499,
                      "end": 500
                    },
                    "start": 498,
                    "end": 501
                  },
                  "start": 453,
                  "end": 501
                }
              ],
              "start": 436,
              "end": 502
            },
            "start": 430,
            "end": 503
          }
        ],
        "start": 426,
        "end": 505
      },
      "alternate": null,
      "start": 413,
      "end": 505
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 517,
          "end": 518
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 521,
          "end": 522
        },
        "start": 517,
        "end": 522
      },
      "start": 517,
      "end": 523
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 524,
          "end": 525
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 531,
          "end": 534
        },
        "start": 524,
        "end": 534
      },
      "start": 524,
      "end": 535
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 540,
          "end": 541
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 546,
          "end": 547
        },
        "start": 540,
        "end": 547
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 563,
                "end": 575
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = 1; x >>>= \"1\"; x === 0. Actual: ",
                    "raw": "'#2: x = 1; x >>>= \"1\"; x === 0. Actual: '",
                    "start": 576,
                    "end": 618
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 622,
                      "end": 623
                    },
                    "start": 621,
                    "end": 624
                  },
                  "start": 576,
                  "end": 624
                }
              ],
              "start": 559,
              "end": 625
            },
            "start": 553,
            "end": 626
          }
        ],
        "start": 549,
        "end": 628
      },
      "alternate": null,
      "start": 536,
      "end": 628
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 640,
          "end": 641
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 648,
            "end": 654
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 655,
              "end": 658
            }
          ],
          "start": 644,
          "end": 659
        },
        "start": 640,
        "end": 659
      },
      "start": 640,
      "end": 660
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 661,
          "end": 662
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 668,
          "end": 669
        },
        "start": 661,
        "end": 669
      },
      "start": 661,
      "end": 670
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 675,
          "end": 676
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 681,
          "end": 682
        },
        "start": 675,
        "end": 682
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 698,
                "end": 710
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new String(\"1\"); x >>>= 1; x === 0. Actual: ",
                    "raw": "'#3: x = new String(\"1\"); x >>>= 1; x === 0. Actual: '",
                    "start": 711,
                    "end": 765
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 769,
                      "end": 770
                    },
                    "start": 768,
                    "end": 771
                  },
                  "start": 711,
                  "end": 771
                }
              ],
              "start": 694,
              "end": 772
            },
            "start": 688,
            "end": 773
          }
        ],
        "start": 684,
        "end": 775
      },
      "alternate": null,
      "start": 671,
      "end": 775
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 787,
          "end": 788
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 791,
          "end": 792
        },
        "start": 787,
        "end": 792
      },
      "start": 787,
      "end": 793
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 794,
          "end": 795
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 805,
            "end": 811
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 812,
              "end": 815
            }
          ],
          "start": 801,
          "end": 816
        },
        "start": 794,
        "end": 816
      },
      "start": 794,
      "end": 817
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 822,
          "end": 823
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 828,
          "end": 829
        },
        "start": 822,
        "end": 829
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 845,
                "end": 857
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = 1; x >>>= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#4: x = 1; x >>>= new String(\"1\"); x === 0. Actual: '",
                    "start": 858,
                    "end": 912
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 916,
                      "end": 917
                    },
                    "start": 915,
                    "end": 918
                  },
                  "start": 858,
                  "end": 918
                }
              ],
              "start": 841,
              "end": 919
            },
            "start": 835,
            "end": 920
          }
        ],
        "start": 831,
        "end": 922
      },
      "alternate": null,
      "start": 818,
      "end": 922
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 934,
          "end": 935
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 938,
          "end": 941
        },
        "start": 934,
        "end": 941
      },
      "start": 934,
      "end": 942
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 943,
          "end": 944
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 954,
            "end": 960
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 961,
              "end": 962
            }
          ],
          "start": 950,
          "end": 963
        },
        "start": 943,
        "end": 963
      },
      "start": 943,
      "end": 964
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 969,
          "end": 970
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 975,
          "end": 976
        },
        "start": 969,
        "end": 976
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 992,
                "end": 1004
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = \"1\"; x >>>= new Number(1); x === 0. Actual: ",
                    "raw": "'#5: x = \"1\"; x >>>= new Number(1); x === 0. Actual: '",
                    "start": 1005,
                    "end": 1059
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1063,
                      "end": 1064
                    },
                    "start": 1062,
                    "end": 1065
                  },
                  "start": 1005,
                  "end": 1065
                }
              ],
              "start": 988,
              "end": 1066
            },
            "start": 982,
            "end": 1067
          }
        ],
        "start": 978,
        "end": 1069
      },
      "alternate": null,
      "start": 965,
      "end": 1069
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1081,
          "end": 1082
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1089,
            "end": 1095
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1096,
              "end": 1097
            }
          ],
          "start": 1085,
          "end": 1098
        },
        "start": 1081,
        "end": 1098
      },
      "start": 1081,
      "end": 1099
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1100,
          "end": 1101
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 1107,
          "end": 1110
        },
        "start": 1100,
        "end": 1110
      },
      "start": 1100,
      "end": 1111
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1116,
          "end": 1117
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1122,
          "end": 1123
        },
        "start": 1116,
        "end": 1123
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1139,
                "end": 1151
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new Number(1); x >>>= \"1\"; x === 0. Actual: ",
                    "raw": "'#6: x = new Number(1); x >>>= \"1\"; x === 0. Actual: '",
                    "start": 1152,
                    "end": 1206
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1210,
                      "end": 1211
                    },
                    "start": 1209,
                    "end": 1212
                  },
                  "start": 1152,
                  "end": 1212
                }
              ],
              "start": 1135,
              "end": 1213
            },
            "start": 1129,
            "end": 1214
          }
        ],
        "start": 1125,
        "end": 1216
      },
      "alternate": null,
      "start": 1112,
      "end": 1216
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1228,
          "end": 1229
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1236,
            "end": 1242
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1243,
              "end": 1246
            }
          ],
          "start": 1232,
          "end": 1247
        },
        "start": 1228,
        "end": 1247
      },
      "start": 1228,
      "end": 1248
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1249,
          "end": 1250
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1260,
            "end": 1266
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1267,
              "end": 1268
            }
          ],
          "start": 1256,
          "end": 1269
        },
        "start": 1249,
        "end": 1269
      },
      "start": 1249,
      "end": 1270
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1275,
          "end": 1276
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1281,
          "end": 1282
        },
        "start": 1275,
        "end": 1282
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1298,
                "end": 1310
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new String(\"1\"); x >>>= new Number(1); x === 0. Actual: ",
                    "raw": "'#7: x = new String(\"1\"); x >>>= new Number(1); x === 0. Actual: '",
                    "start": 1311,
                    "end": 1377
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1381,
                      "end": 1382
                    },
                    "start": 1380,
                    "end": 1383
                  },
                  "start": 1311,
                  "end": 1383
                }
              ],
              "start": 1294,
              "end": 1384
            },
            "start": 1288,
            "end": 1385
          }
        ],
        "start": 1284,
        "end": 1387
      },
      "alternate": null,
      "start": 1271,
      "end": 1387
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1399,
          "end": 1400
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1407,
            "end": 1413
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1414,
              "end": 1415
            }
          ],
          "start": 1403,
          "end": 1416
        },
        "start": 1399,
        "end": 1416
      },
      "start": 1399,
      "end": 1417
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1418,
          "end": 1419
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1429,
            "end": 1435
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1436,
              "end": 1439
            }
          ],
          "start": 1425,
          "end": 1440
        },
        "start": 1418,
        "end": 1440
      },
      "start": 1418,
      "end": 1441
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1446,
          "end": 1447
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1452,
          "end": 1453
        },
        "start": 1446,
        "end": 1453
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1469,
                "end": 1481
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new Number(1); x >>>= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#8: x = new Number(1); x >>>= new String(\"1\"); x === 0. Actual: '",
                    "start": 1482,
                    "end": 1548
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1552,
                      "end": 1553
                    },
                    "start": 1551,
                    "end": 1554
                  },
                  "start": 1482,
                  "end": 1554
                }
              ],
              "start": 1465,
              "end": 1555
            },
            "start": 1459,
            "end": 1556
          }
        ],
        "start": 1455,
        "end": 1558
      },
      "alternate": null,
      "start": 1442,
      "end": 1558
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1570,
          "end": 1571
        },
        "right": {
          "type": "Literal",
          "value": "x",
          "raw": "\"x\"",
          "start": 1574,
          "end": 1577
        },
        "start": 1570,
        "end": 1577
      },
      "start": 1570,
      "end": 1578
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1579,
          "end": 1580
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1586,
          "end": 1587
        },
        "start": 1579,
        "end": 1587
      },
      "start": 1579,
      "end": 1588
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1593,
          "end": 1594
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1599,
          "end": 1600
        },
        "start": 1593,
        "end": 1600
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1616,
                "end": 1628
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: x = \"x\"; x >>>= 1; x === 0. Actual: ",
                    "raw": "'#9: x = \"x\"; x >>>= 1; x === 0. Actual: '",
                    "start": 1629,
                    "end": 1671
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1675,
                      "end": 1676
                    },
                    "start": 1674,
                    "end": 1677
                  },
                  "start": 1629,
                  "end": 1677
                }
              ],
              "start": 1612,
              "end": 1678
            },
            "start": 1606,
            "end": 1679
          }
        ],
        "start": 1602,
        "end": 1681
      },
      "alternate": null,
      "start": 1589,
      "end": 1681
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1694,
          "end": 1695
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1698,
          "end": 1699
        },
        "start": 1694,
        "end": 1699
      },
      "start": 1694,
      "end": 1700
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1701,
          "end": 1702
        },
        "right": {
          "type": "Literal",
          "value": "x",
          "raw": "\"x\"",
          "start": 1708,
          "end": 1711
        },
        "start": 1701,
        "end": 1711
      },
      "start": 1701,
      "end": 1712
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1717,
          "end": 1718
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1723,
          "end": 1724
        },
        "start": 1717,
        "end": 1724
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1740,
                "end": 1752
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: x = 1; x >>>= \"x\"; x === 1. Actual: ",
                    "raw": "'#10: x = 1; x >>>= \"x\"; x === 1. Actual: '",
                    "start": 1753,
                    "end": 1796
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1800,
                      "end": 1801
                    },
                    "start": 1799,
                    "end": 1802
                  },
                  "start": 1753,
                  "end": 1802
                }
              ],
              "start": 1736,
              "end": 1803
            },
            "start": 1730,
            "end": 1804
          }
        ],
        "start": 1726,
        "end": 1806
      },
      "alternate": null,
      "start": 1713,
      "end": 1806
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1807
}