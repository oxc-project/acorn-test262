{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 377,
            "end": 378
          },
          "init": null,
          "start": 377,
          "end": 378
        }
      ],
      "start": 373,
      "end": 379
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 391,
          "end": 392
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 395,
          "end": 399
        },
        "start": 391,
        "end": 399
      },
      "start": 391,
      "end": 400
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 401,
          "end": 402
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 406,
          "end": 409
        },
        "start": 401,
        "end": 409
      },
      "start": 401,
      "end": 410
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 415,
          "end": 416
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 421,
          "end": 422
        },
        "start": 415,
        "end": 422
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 438,
                "end": 450
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = true; x /= \"1\"; x === 1. Actual: ",
                    "raw": "'#1: x = true; x /= \"1\"; x === 1. Actual: '",
                    "start": 451,
                    "end": 494
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 498,
                      "end": 499
                    },
                    "start": 497,
                    "end": 500
                  },
                  "start": 451,
                  "end": 500
                }
              ],
              "start": 434,
              "end": 501
            },
            "start": 428,
            "end": 502
          }
        ],
        "start": 424,
        "end": 504
      },
      "alternate": null,
      "start": 411,
      "end": 504
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 516,
          "end": 517
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 520,
          "end": 523
        },
        "start": 516,
        "end": 523
      },
      "start": 516,
      "end": 524
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 525,
          "end": 526
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 530,
          "end": 534
        },
        "start": 525,
        "end": 534
      },
      "start": 525,
      "end": 535
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 540,
          "end": 541
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 546,
          "end": 547
        },
        "start": 540,
        "end": 547
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 563,
                "end": 575
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = \"1\"; x /= true; x === 1. Actual: ",
                    "raw": "'#2: x = \"1\"; x /= true; x === 1. Actual: '",
                    "start": 576,
                    "end": 619
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 623,
                      "end": 624
                    },
                    "start": 622,
                    "end": 625
                  },
                  "start": 576,
                  "end": 625
                }
              ],
              "start": 559,
              "end": 626
            },
            "start": 553,
            "end": 627
          }
        ],
        "start": 549,
        "end": 629
      },
      "alternate": null,
      "start": 536,
      "end": 629
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 641,
          "end": 642
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 649,
            "end": 656
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 657,
              "end": 661
            }
          ],
          "start": 645,
          "end": 662
        },
        "start": 641,
        "end": 662
      },
      "start": 641,
      "end": 663
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 664,
          "end": 665
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 669,
          "end": 672
        },
        "start": 664,
        "end": 672
      },
      "start": 664,
      "end": 673
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 678,
          "end": 679
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 684,
          "end": 685
        },
        "start": 678,
        "end": 685
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 701,
                "end": 713
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Boolean(true); x /= \"1\"; x === 1. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x /= \"1\"; x === 1. Actual: '",
                    "start": 714,
                    "end": 770
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 774,
                      "end": 775
                    },
                    "start": 773,
                    "end": 776
                  },
                  "start": 714,
                  "end": 776
                }
              ],
              "start": 697,
              "end": 777
            },
            "start": 691,
            "end": 778
          }
        ],
        "start": 687,
        "end": 780
      },
      "alternate": null,
      "start": 674,
      "end": 780
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 792,
          "end": 793
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 796,
          "end": 799
        },
        "start": 792,
        "end": 799
      },
      "start": 792,
      "end": 800
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 801,
          "end": 802
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 810,
            "end": 817
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 818,
              "end": 822
            }
          ],
          "start": 806,
          "end": 823
        },
        "start": 801,
        "end": 823
      },
      "start": 801,
      "end": 824
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 829,
          "end": 830
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 835,
          "end": 836
        },
        "start": 829,
        "end": 836
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 852,
                "end": 864
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = \"1\"; x /= new Boolean(true); x === 1. Actual: ",
                    "raw": "'#4: x = \"1\"; x /= new Boolean(true); x === 1. Actual: '",
                    "start": 865,
                    "end": 921
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 925,
                      "end": 926
                    },
                    "start": 924,
                    "end": 927
                  },
                  "start": 865,
                  "end": 927
                }
              ],
              "start": 848,
              "end": 928
            },
            "start": 842,
            "end": 929
          }
        ],
        "start": 838,
        "end": 931
      },
      "alternate": null,
      "start": 825,
      "end": 931
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 943,
          "end": 944
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 947,
          "end": 951
        },
        "start": 943,
        "end": 951
      },
      "start": 943,
      "end": 952
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 953,
          "end": 954
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 962,
            "end": 968
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 969,
              "end": 972
            }
          ],
          "start": 958,
          "end": 973
        },
        "start": 953,
        "end": 973
      },
      "start": 953,
      "end": 974
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 979,
          "end": 980
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 985,
          "end": 986
        },
        "start": 979,
        "end": 986
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1002,
                "end": 1014
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = true; x /= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#5: x = true; x /= new String(\"1\"); x === 1. Actual: '",
                    "start": 1015,
                    "end": 1070
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1074,
                      "end": 1075
                    },
                    "start": 1073,
                    "end": 1076
                  },
                  "start": 1015,
                  "end": 1076
                }
              ],
              "start": 998,
              "end": 1077
            },
            "start": 992,
            "end": 1078
          }
        ],
        "start": 988,
        "end": 1080
      },
      "alternate": null,
      "start": 975,
      "end": 1080
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1092,
          "end": 1093
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1100,
            "end": 1106
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1107,
              "end": 1110
            }
          ],
          "start": 1096,
          "end": 1111
        },
        "start": 1092,
        "end": 1111
      },
      "start": 1092,
      "end": 1112
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1113,
          "end": 1114
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1118,
          "end": 1122
        },
        "start": 1113,
        "end": 1122
      },
      "start": 1113,
      "end": 1123
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1128,
          "end": 1129
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1134,
          "end": 1135
        },
        "start": 1128,
        "end": 1135
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1151,
                "end": 1163
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new String(\"1\"); x /= true; x === 1. Actual: ",
                    "raw": "'#6: x = new String(\"1\"); x /= true; x === 1. Actual: '",
                    "start": 1164,
                    "end": 1219
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1223,
                      "end": 1224
                    },
                    "start": 1222,
                    "end": 1225
                  },
                  "start": 1164,
                  "end": 1225
                }
              ],
              "start": 1147,
              "end": 1226
            },
            "start": 1141,
            "end": 1227
          }
        ],
        "start": 1137,
        "end": 1229
      },
      "alternate": null,
      "start": 1124,
      "end": 1229
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1241,
          "end": 1242
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1249,
            "end": 1256
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1257,
              "end": 1261
            }
          ],
          "start": 1245,
          "end": 1262
        },
        "start": 1241,
        "end": 1262
      },
      "start": 1241,
      "end": 1263
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1264,
          "end": 1265
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1273,
            "end": 1279
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1280,
              "end": 1283
            }
          ],
          "start": 1269,
          "end": 1284
        },
        "start": 1264,
        "end": 1284
      },
      "start": 1264,
      "end": 1285
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1290,
          "end": 1291
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1296,
          "end": 1297
        },
        "start": 1290,
        "end": 1297
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1313,
                "end": 1325
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new Boolean(true); x /= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x /= new String(\"1\"); x === 1. Actual: '",
                    "start": 1326,
                    "end": 1394
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1398,
                      "end": 1399
                    },
                    "start": 1397,
                    "end": 1400
                  },
                  "start": 1326,
                  "end": 1400
                }
              ],
              "start": 1309,
              "end": 1401
            },
            "start": 1303,
            "end": 1402
          }
        ],
        "start": 1299,
        "end": 1404
      },
      "alternate": null,
      "start": 1286,
      "end": 1404
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1416,
          "end": 1417
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1424,
            "end": 1430
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1431,
              "end": 1434
            }
          ],
          "start": 1420,
          "end": 1435
        },
        "start": 1416,
        "end": 1435
      },
      "start": 1416,
      "end": 1436
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1437,
          "end": 1438
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1446,
            "end": 1453
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1454,
              "end": 1458
            }
          ],
          "start": 1442,
          "end": 1459
        },
        "start": 1437,
        "end": 1459
      },
      "start": 1437,
      "end": 1460
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1465,
          "end": 1466
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1471,
          "end": 1472
        },
        "start": 1465,
        "end": 1472
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1488,
                "end": 1500
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new String(\"1\"); x /= new Boolean(true); x === 1. Actual: ",
                    "raw": "'#8: x = new String(\"1\"); x /= new Boolean(true); x === 1. Actual: '",
                    "start": 1501,
                    "end": 1569
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1573,
                      "end": 1574
                    },
                    "start": 1572,
                    "end": 1575
                  },
                  "start": 1501,
                  "end": 1575
                }
              ],
              "start": 1484,
              "end": 1576
            },
            "start": 1478,
            "end": 1577
          }
        ],
        "start": 1474,
        "end": 1579
      },
      "alternate": null,
      "start": 1461,
      "end": 1579
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1580
}