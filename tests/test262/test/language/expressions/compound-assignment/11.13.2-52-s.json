{
  "type": "Program",
  "start": 0,
  "end": 549,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 425,
      "end": 438,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 429,
          "end": 437,
          "id": {
            "type": "Identifier",
            "start": 429,
            "end": 432,
            "name": "obj"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 435,
            "end": 437,
            "properties": []
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 447,
      "end": 477,
      "expression": {
        "type": "CallExpression",
        "start": 447,
        "end": 476,
        "callee": {
          "type": "MemberExpression",
          "start": 447,
          "end": 471,
          "object": {
            "type": "Identifier",
            "start": 447,
            "end": 453,
            "name": "Object"
          },
          "property": {
            "type": "Identifier",
            "start": 454,
            "end": 471,
            "name": "preventExtensions"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 472,
            "end": 475,
            "name": "obj"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 478,
      "end": 548,
      "expression": {
        "type": "CallExpression",
        "start": 478,
        "end": 547,
        "callee": {
          "type": "MemberExpression",
          "start": 478,
          "end": 491,
          "object": {
            "type": "Identifier",
            "start": 478,
            "end": 484,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 485,
            "end": 491,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 492,
            "end": 501,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 503,
            "end": 546,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 514,
              "end": 546,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 528,
                  "end": 544,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 528,
                    "end": 543,
                    "operator": ">>>=",
                    "left": {
                      "type": "MemberExpression",
                      "start": 528,
                      "end": 535,
                      "object": {
                        "type": "Identifier",
                        "start": 528,
                        "end": 531,
                        "name": "obj"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 532,
                        "end": 535,
                        "name": "len"
                      },
                      "optional": false,
                      "computed": false
                    },
                    "right": {
                      "type": "Literal",
                      "start": 541,
                      "end": 543,
                      "value": 10,
                      "raw": "10"
                    }
                  }
                }
              ]
            },
            "expression": false
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}