{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 378,
            "end": 379
          },
          "init": null,
          "start": 378,
          "end": 379
        }
      ],
      "start": 374,
      "end": 380
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 392,
          "end": 393
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 396,
          "end": 399
        },
        "start": 392,
        "end": 399
      },
      "start": 392,
      "end": 400
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 401,
          "end": 402
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 407,
          "end": 408
        },
        "start": 401,
        "end": 408
      },
      "start": 401,
      "end": 409
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 414,
          "end": 415
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 420,
          "end": 421
        },
        "start": 414,
        "end": 421
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 437,
                "end": 449
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = \"1\"; x >>= 1; x === 0. Actual: ",
                    "raw": "'#1: x = \"1\"; x >>= 1; x === 0. Actual: '",
                    "start": 450,
                    "end": 491
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 495,
                      "end": 496
                    },
                    "start": 494,
                    "end": 497
                  },
                  "start": 450,
                  "end": 497
                }
              ],
              "start": 433,
              "end": 498
            },
            "start": 427,
            "end": 499
          }
        ],
        "start": 423,
        "end": 501
      },
      "alternate": null,
      "start": 410,
      "end": 501
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 513,
          "end": 514
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 517,
          "end": 518
        },
        "start": 513,
        "end": 518
      },
      "start": 513,
      "end": 519
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 520,
          "end": 521
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 526,
          "end": 529
        },
        "start": 520,
        "end": 529
      },
      "start": 520,
      "end": 530
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 535,
          "end": 536
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 541,
          "end": 542
        },
        "start": 535,
        "end": 542
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 558,
                "end": 570
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = 1; x >>= \"1\"; x === 0. Actual: ",
                    "raw": "'#2: x = 1; x >>= \"1\"; x === 0. Actual: '",
                    "start": 571,
                    "end": 612
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 616,
                      "end": 617
                    },
                    "start": 615,
                    "end": 618
                  },
                  "start": 571,
                  "end": 618
                }
              ],
              "start": 554,
              "end": 619
            },
            "start": 548,
            "end": 620
          }
        ],
        "start": 544,
        "end": 622
      },
      "alternate": null,
      "start": 531,
      "end": 622
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 634,
          "end": 635
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 642,
            "end": 648
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 649,
              "end": 652
            }
          ],
          "start": 638,
          "end": 653
        },
        "start": 634,
        "end": 653
      },
      "start": 634,
      "end": 654
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 655,
          "end": 656
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 661,
          "end": 662
        },
        "start": 655,
        "end": 662
      },
      "start": 655,
      "end": 663
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 668,
          "end": 669
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 674,
          "end": 675
        },
        "start": 668,
        "end": 675
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 691,
                "end": 703
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new String(\"1\"); x >>= 1; x === 0. Actual: ",
                    "raw": "'#3: x = new String(\"1\"); x >>= 1; x === 0. Actual: '",
                    "start": 704,
                    "end": 757
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 761,
                      "end": 762
                    },
                    "start": 760,
                    "end": 763
                  },
                  "start": 704,
                  "end": 763
                }
              ],
              "start": 687,
              "end": 764
            },
            "start": 681,
            "end": 765
          }
        ],
        "start": 677,
        "end": 767
      },
      "alternate": null,
      "start": 664,
      "end": 767
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 779,
          "end": 780
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 783,
          "end": 784
        },
        "start": 779,
        "end": 784
      },
      "start": 779,
      "end": 785
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 786,
          "end": 787
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 796,
            "end": 802
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 803,
              "end": 806
            }
          ],
          "start": 792,
          "end": 807
        },
        "start": 786,
        "end": 807
      },
      "start": 786,
      "end": 808
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 813,
          "end": 814
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 819,
          "end": 820
        },
        "start": 813,
        "end": 820
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 836,
                "end": 848
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = 1; x >>= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#4: x = 1; x >>= new String(\"1\"); x === 0. Actual: '",
                    "start": 849,
                    "end": 902
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 906,
                      "end": 907
                    },
                    "start": 905,
                    "end": 908
                  },
                  "start": 849,
                  "end": 908
                }
              ],
              "start": 832,
              "end": 909
            },
            "start": 826,
            "end": 910
          }
        ],
        "start": 822,
        "end": 912
      },
      "alternate": null,
      "start": 809,
      "end": 912
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 924,
          "end": 925
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 928,
          "end": 931
        },
        "start": 924,
        "end": 931
      },
      "start": 924,
      "end": 932
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 933,
          "end": 934
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 943,
            "end": 949
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 950,
              "end": 951
            }
          ],
          "start": 939,
          "end": 952
        },
        "start": 933,
        "end": 952
      },
      "start": 933,
      "end": 953
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 958,
          "end": 959
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 964,
          "end": 965
        },
        "start": 958,
        "end": 965
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 981,
                "end": 993
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = \"1\"; x >>= new Number(1); x === 0. Actual: ",
                    "raw": "'#5: x = \"1\"; x >>= new Number(1); x === 0. Actual: '",
                    "start": 994,
                    "end": 1047
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1051,
                      "end": 1052
                    },
                    "start": 1050,
                    "end": 1053
                  },
                  "start": 994,
                  "end": 1053
                }
              ],
              "start": 977,
              "end": 1054
            },
            "start": 971,
            "end": 1055
          }
        ],
        "start": 967,
        "end": 1057
      },
      "alternate": null,
      "start": 954,
      "end": 1057
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1069,
          "end": 1070
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1077,
            "end": 1083
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1084,
              "end": 1085
            }
          ],
          "start": 1073,
          "end": 1086
        },
        "start": 1069,
        "end": 1086
      },
      "start": 1069,
      "end": 1087
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1088,
          "end": 1089
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 1094,
          "end": 1097
        },
        "start": 1088,
        "end": 1097
      },
      "start": 1088,
      "end": 1098
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1103,
          "end": 1104
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1109,
          "end": 1110
        },
        "start": 1103,
        "end": 1110
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1126,
                "end": 1138
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new Number(1); x >>= \"1\"; x === 0. Actual: ",
                    "raw": "'#6: x = new Number(1); x >>= \"1\"; x === 0. Actual: '",
                    "start": 1139,
                    "end": 1192
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1196,
                      "end": 1197
                    },
                    "start": 1195,
                    "end": 1198
                  },
                  "start": 1139,
                  "end": 1198
                }
              ],
              "start": 1122,
              "end": 1199
            },
            "start": 1116,
            "end": 1200
          }
        ],
        "start": 1112,
        "end": 1202
      },
      "alternate": null,
      "start": 1099,
      "end": 1202
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1214,
          "end": 1215
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1222,
            "end": 1228
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1229,
              "end": 1232
            }
          ],
          "start": 1218,
          "end": 1233
        },
        "start": 1214,
        "end": 1233
      },
      "start": 1214,
      "end": 1234
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1235,
          "end": 1236
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1245,
            "end": 1251
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1252,
              "end": 1253
            }
          ],
          "start": 1241,
          "end": 1254
        },
        "start": 1235,
        "end": 1254
      },
      "start": 1235,
      "end": 1255
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1260,
          "end": 1261
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1266,
          "end": 1267
        },
        "start": 1260,
        "end": 1267
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1283,
                "end": 1295
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new String(\"1\"); x >>= new Number(1); x === 0. Actual: ",
                    "raw": "'#7: x = new String(\"1\"); x >>= new Number(1); x === 0. Actual: '",
                    "start": 1296,
                    "end": 1361
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1365,
                      "end": 1366
                    },
                    "start": 1364,
                    "end": 1367
                  },
                  "start": 1296,
                  "end": 1367
                }
              ],
              "start": 1279,
              "end": 1368
            },
            "start": 1273,
            "end": 1369
          }
        ],
        "start": 1269,
        "end": 1371
      },
      "alternate": null,
      "start": 1256,
      "end": 1371
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1383,
          "end": 1384
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1391,
            "end": 1397
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1398,
              "end": 1399
            }
          ],
          "start": 1387,
          "end": 1400
        },
        "start": 1383,
        "end": 1400
      },
      "start": 1383,
      "end": 1401
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1402,
          "end": 1403
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1412,
            "end": 1418
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1419,
              "end": 1422
            }
          ],
          "start": 1408,
          "end": 1423
        },
        "start": 1402,
        "end": 1423
      },
      "start": 1402,
      "end": 1424
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1429,
          "end": 1430
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1435,
          "end": 1436
        },
        "start": 1429,
        "end": 1436
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1452,
                "end": 1464
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new Number(1); x >>= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#8: x = new Number(1); x >>= new String(\"1\"); x === 0. Actual: '",
                    "start": 1465,
                    "end": 1530
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1534,
                      "end": 1535
                    },
                    "start": 1533,
                    "end": 1536
                  },
                  "start": 1465,
                  "end": 1536
                }
              ],
              "start": 1448,
              "end": 1537
            },
            "start": 1442,
            "end": 1538
          }
        ],
        "start": 1438,
        "end": 1540
      },
      "alternate": null,
      "start": 1425,
      "end": 1540
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1552,
          "end": 1553
        },
        "right": {
          "type": "Literal",
          "value": "x",
          "raw": "\"x\"",
          "start": 1556,
          "end": 1559
        },
        "start": 1552,
        "end": 1559
      },
      "start": 1552,
      "end": 1560
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1561,
          "end": 1562
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1567,
          "end": 1568
        },
        "start": 1561,
        "end": 1568
      },
      "start": 1561,
      "end": 1569
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1574,
          "end": 1575
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1580,
          "end": 1581
        },
        "start": 1574,
        "end": 1581
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1597,
                "end": 1609
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: x = \"x\"; x >>= 1; x === 0. Actual: ",
                    "raw": "'#9: x = \"x\"; x >>= 1; x === 0. Actual: '",
                    "start": 1610,
                    "end": 1651
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1655,
                      "end": 1656
                    },
                    "start": 1654,
                    "end": 1657
                  },
                  "start": 1610,
                  "end": 1657
                }
              ],
              "start": 1593,
              "end": 1658
            },
            "start": 1587,
            "end": 1659
          }
        ],
        "start": 1583,
        "end": 1661
      },
      "alternate": null,
      "start": 1570,
      "end": 1661
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1674,
          "end": 1675
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1678,
          "end": 1679
        },
        "start": 1674,
        "end": 1679
      },
      "start": 1674,
      "end": 1680
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1681,
          "end": 1682
        },
        "right": {
          "type": "Literal",
          "value": "x",
          "raw": "\"x\"",
          "start": 1687,
          "end": 1690
        },
        "start": 1681,
        "end": 1690
      },
      "start": 1681,
      "end": 1691
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1696,
          "end": 1697
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1702,
          "end": 1703
        },
        "start": 1696,
        "end": 1703
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1719,
                "end": 1731
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: x = 1; x >>= \"x\"; x === 1. Actual: ",
                    "raw": "'#10: x = 1; x >>= \"x\"; x === 1. Actual: '",
                    "start": 1732,
                    "end": 1774
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1778,
                      "end": 1779
                    },
                    "start": 1777,
                    "end": 1780
                  },
                  "start": 1732,
                  "end": 1780
                }
              ],
              "start": 1715,
              "end": 1781
            },
            "start": 1709,
            "end": 1782
          }
        ],
        "start": 1705,
        "end": 1784
      },
      "alternate": null,
      "start": 1692,
      "end": 1784
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1785
}