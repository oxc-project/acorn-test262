{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 371,
            "end": 372
          },
          "init": null,
          "start": 371,
          "end": 372
        }
      ],
      "start": 367,
      "end": 373
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 385,
          "end": 386
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 389,
          "end": 390
        },
        "start": 385,
        "end": 390
      },
      "start": 385,
      "end": 391
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 392,
          "end": 393
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 397,
          "end": 406
        },
        "start": 392,
        "end": 406
      },
      "start": 392,
      "end": 407
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 412,
            "end": 417
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 418,
              "end": 419
            }
          ],
          "optional": false,
          "start": 412,
          "end": 420
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 425,
          "end": 429
        },
        "start": 412,
        "end": 429
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 445,
                "end": 457
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = 1; x *= undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#1: x = 1; x *= undefined; x === Not-a-Number. Actual: '",
                    "start": 458,
                    "end": 515
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 519,
                      "end": 520
                    },
                    "start": 518,
                    "end": 521
                  },
                  "start": 458,
                  "end": 521
                }
              ],
              "start": 441,
              "end": 522
            },
            "start": 435,
            "end": 523
          }
        ],
        "start": 431,
        "end": 525
      },
      "alternate": null,
      "start": 408,
      "end": 525
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 537,
          "end": 538
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 541,
          "end": 550
        },
        "start": 537,
        "end": 550
      },
      "start": 537,
      "end": 551
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 552,
          "end": 553
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 557,
          "end": 558
        },
        "start": 552,
        "end": 558
      },
      "start": 552,
      "end": 559
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 564,
            "end": 569
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 570,
              "end": 571
            }
          ],
          "optional": false,
          "start": 564,
          "end": 572
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 577,
          "end": 581
        },
        "start": 564,
        "end": 581
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 597,
                "end": 609
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = undefined; x *= 1; x === Not-a-Number. Actual: ",
                    "raw": "'#2: x = undefined; x *= 1; x === Not-a-Number. Actual: '",
                    "start": 610,
                    "end": 667
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 671,
                      "end": 672
                    },
                    "start": 670,
                    "end": 673
                  },
                  "start": 610,
                  "end": 673
                }
              ],
              "start": 593,
              "end": 674
            },
            "start": 587,
            "end": 675
          }
        ],
        "start": 583,
        "end": 677
      },
      "alternate": null,
      "start": 560,
      "end": 677
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 689,
          "end": 690
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 697,
            "end": 703
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 704,
              "end": 705
            }
          ],
          "start": 693,
          "end": 706
        },
        "start": 689,
        "end": 706
      },
      "start": 689,
      "end": 707
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 708,
          "end": 709
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 713,
          "end": 722
        },
        "start": 708,
        "end": 722
      },
      "start": 708,
      "end": 723
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 728,
            "end": 733
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 734,
              "end": 735
            }
          ],
          "optional": false,
          "start": 728,
          "end": 736
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 741,
          "end": 745
        },
        "start": 728,
        "end": 745
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 761,
                "end": 773
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Number(1); x *= undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#3: x = new Number(1); x *= undefined; x === Not-a-Number. Actual: '",
                    "start": 774,
                    "end": 843
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 847,
                      "end": 848
                    },
                    "start": 846,
                    "end": 849
                  },
                  "start": 774,
                  "end": 849
                }
              ],
              "start": 757,
              "end": 850
            },
            "start": 751,
            "end": 851
          }
        ],
        "start": 747,
        "end": 853
      },
      "alternate": null,
      "start": 724,
      "end": 853
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 865,
          "end": 866
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 869,
          "end": 878
        },
        "start": 865,
        "end": 878
      },
      "start": 865,
      "end": 879
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 880,
          "end": 881
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 889,
            "end": 895
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 896,
              "end": 897
            }
          ],
          "start": 885,
          "end": 898
        },
        "start": 880,
        "end": 898
      },
      "start": 880,
      "end": 899
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 904,
            "end": 909
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 910,
              "end": 911
            }
          ],
          "optional": false,
          "start": 904,
          "end": 912
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 917,
          "end": 921
        },
        "start": 904,
        "end": 921
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 937,
                "end": 949
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = undefined; x *= new Number(1); x === Not-a-Number. Actual: ",
                    "raw": "'#4: x = undefined; x *= new Number(1); x === Not-a-Number. Actual: '",
                    "start": 950,
                    "end": 1019
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1023,
                      "end": 1024
                    },
                    "start": 1022,
                    "end": 1025
                  },
                  "start": 950,
                  "end": 1025
                }
              ],
              "start": 933,
              "end": 1026
            },
            "start": 927,
            "end": 1027
          }
        ],
        "start": 923,
        "end": 1029
      },
      "alternate": null,
      "start": 900,
      "end": 1029
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1030
}