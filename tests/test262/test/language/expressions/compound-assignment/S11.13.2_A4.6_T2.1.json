{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 379,
            "end": 380
          },
          "init": null,
          "start": 379,
          "end": 380
        }
      ],
      "start": 375,
      "end": 381
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 393,
          "end": 394
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 397,
          "end": 401
        },
        "start": 393,
        "end": 401
      },
      "start": 393,
      "end": 402
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 403,
          "end": 404
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 409,
          "end": 410
        },
        "start": 403,
        "end": 410
      },
      "start": 403,
      "end": 411
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 416,
          "end": 417
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 422,
          "end": 423
        },
        "start": 416,
        "end": 423
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 439,
                "end": 451
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = true; x <<= 1; x === 2. Actual: ",
                    "raw": "'#1: x = true; x <<= 1; x === 2. Actual: '",
                    "start": 452,
                    "end": 494
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 498,
                      "end": 499
                    },
                    "start": 497,
                    "end": 500
                  },
                  "start": 452,
                  "end": 500
                }
              ],
              "start": 435,
              "end": 501
            },
            "start": 429,
            "end": 502
          }
        ],
        "start": 425,
        "end": 504
      },
      "alternate": null,
      "start": 412,
      "end": 504
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 516,
          "end": 517
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 520,
          "end": 521
        },
        "start": 516,
        "end": 521
      },
      "start": 516,
      "end": 522
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 523,
          "end": 524
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 529,
          "end": 533
        },
        "start": 523,
        "end": 533
      },
      "start": 523,
      "end": 534
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 539,
          "end": 540
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 545,
          "end": 546
        },
        "start": 539,
        "end": 546
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 562,
                "end": 574
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = 1; x <<= true; x === 2. Actual: ",
                    "raw": "'#2: x = 1; x <<= true; x === 2. Actual: '",
                    "start": 575,
                    "end": 617
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 621,
                      "end": 622
                    },
                    "start": 620,
                    "end": 623
                  },
                  "start": 575,
                  "end": 623
                }
              ],
              "start": 558,
              "end": 624
            },
            "start": 552,
            "end": 625
          }
        ],
        "start": 548,
        "end": 627
      },
      "alternate": null,
      "start": 535,
      "end": 627
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 639,
          "end": 640
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 647,
            "end": 654
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 655,
              "end": 659
            }
          ],
          "start": 643,
          "end": 660
        },
        "start": 639,
        "end": 660
      },
      "start": 639,
      "end": 661
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 662,
          "end": 663
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 668,
          "end": 669
        },
        "start": 662,
        "end": 669
      },
      "start": 662,
      "end": 670
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 675,
          "end": 676
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 681,
          "end": 682
        },
        "start": 675,
        "end": 682
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 698,
                "end": 710
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Boolean(true); x <<= 1; x === 2. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x <<= 1; x === 2. Actual: '",
                    "start": 711,
                    "end": 766
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 770,
                      "end": 771
                    },
                    "start": 769,
                    "end": 772
                  },
                  "start": 711,
                  "end": 772
                }
              ],
              "start": 694,
              "end": 773
            },
            "start": 688,
            "end": 774
          }
        ],
        "start": 684,
        "end": 776
      },
      "alternate": null,
      "start": 671,
      "end": 776
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 788,
          "end": 789
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 792,
          "end": 793
        },
        "start": 788,
        "end": 793
      },
      "start": 788,
      "end": 794
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 795,
          "end": 796
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 805,
            "end": 812
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 813,
              "end": 817
            }
          ],
          "start": 801,
          "end": 818
        },
        "start": 795,
        "end": 818
      },
      "start": 795,
      "end": 819
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 824,
          "end": 825
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 830,
          "end": 831
        },
        "start": 824,
        "end": 831
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 847,
                "end": 859
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = 1; x <<= new Boolean(true); x === 2. Actual: ",
                    "raw": "'#4: x = 1; x <<= new Boolean(true); x === 2. Actual: '",
                    "start": 860,
                    "end": 915
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 919,
                      "end": 920
                    },
                    "start": 918,
                    "end": 921
                  },
                  "start": 860,
                  "end": 921
                }
              ],
              "start": 843,
              "end": 922
            },
            "start": 837,
            "end": 923
          }
        ],
        "start": 833,
        "end": 925
      },
      "alternate": null,
      "start": 820,
      "end": 925
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 937,
          "end": 938
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 941,
          "end": 945
        },
        "start": 937,
        "end": 945
      },
      "start": 937,
      "end": 946
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 947,
          "end": 948
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 957,
            "end": 963
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 964,
              "end": 965
            }
          ],
          "start": 953,
          "end": 966
        },
        "start": 947,
        "end": 966
      },
      "start": 947,
      "end": 967
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 972,
          "end": 973
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 978,
          "end": 979
        },
        "start": 972,
        "end": 979
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 995,
                "end": 1007
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = true; x <<= new Number(1); x === 2. Actual: ",
                    "raw": "'#5: x = true; x <<= new Number(1); x === 2. Actual: '",
                    "start": 1008,
                    "end": 1062
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1066,
                      "end": 1067
                    },
                    "start": 1065,
                    "end": 1068
                  },
                  "start": 1008,
                  "end": 1068
                }
              ],
              "start": 991,
              "end": 1069
            },
            "start": 985,
            "end": 1070
          }
        ],
        "start": 981,
        "end": 1072
      },
      "alternate": null,
      "start": 968,
      "end": 1072
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1084,
          "end": 1085
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1092,
            "end": 1098
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1099,
              "end": 1100
            }
          ],
          "start": 1088,
          "end": 1101
        },
        "start": 1084,
        "end": 1101
      },
      "start": 1084,
      "end": 1102
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1103,
          "end": 1104
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1109,
          "end": 1113
        },
        "start": 1103,
        "end": 1113
      },
      "start": 1103,
      "end": 1114
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1119,
          "end": 1120
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1125,
          "end": 1126
        },
        "start": 1119,
        "end": 1126
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1142,
                "end": 1154
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new Number(1); x <<= true; x === 2. Actual: ",
                    "raw": "'#6: x = new Number(1); x <<= true; x === 2. Actual: '",
                    "start": 1155,
                    "end": 1209
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1213,
                      "end": 1214
                    },
                    "start": 1212,
                    "end": 1215
                  },
                  "start": 1155,
                  "end": 1215
                }
              ],
              "start": 1138,
              "end": 1216
            },
            "start": 1132,
            "end": 1217
          }
        ],
        "start": 1128,
        "end": 1219
      },
      "alternate": null,
      "start": 1115,
      "end": 1219
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1231,
          "end": 1232
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1239,
            "end": 1246
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1247,
              "end": 1251
            }
          ],
          "start": 1235,
          "end": 1252
        },
        "start": 1231,
        "end": 1252
      },
      "start": 1231,
      "end": 1253
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1254,
          "end": 1255
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1264,
            "end": 1270
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1271,
              "end": 1272
            }
          ],
          "start": 1260,
          "end": 1273
        },
        "start": 1254,
        "end": 1273
      },
      "start": 1254,
      "end": 1274
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1279,
          "end": 1280
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1285,
          "end": 1286
        },
        "start": 1279,
        "end": 1286
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1302,
                "end": 1314
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new Boolean(true); x <<= new Number(1); x === 2. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x <<= new Number(1); x === 2. Actual: '",
                    "start": 1315,
                    "end": 1382
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1386,
                      "end": 1387
                    },
                    "start": 1385,
                    "end": 1388
                  },
                  "start": 1315,
                  "end": 1388
                }
              ],
              "start": 1298,
              "end": 1389
            },
            "start": 1292,
            "end": 1390
          }
        ],
        "start": 1288,
        "end": 1392
      },
      "alternate": null,
      "start": 1275,
      "end": 1392
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1404,
          "end": 1405
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1412,
            "end": 1418
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1419,
              "end": 1420
            }
          ],
          "start": 1408,
          "end": 1421
        },
        "start": 1404,
        "end": 1421
      },
      "start": 1404,
      "end": 1422
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1423,
          "end": 1424
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1433,
            "end": 1440
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1441,
              "end": 1445
            }
          ],
          "start": 1429,
          "end": 1446
        },
        "start": 1423,
        "end": 1446
      },
      "start": 1423,
      "end": 1447
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1452,
          "end": 1453
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1458,
          "end": 1459
        },
        "start": 1452,
        "end": 1459
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1475,
                "end": 1487
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new Number(1); x <<= new Boolean(true); x === 2. Actual: ",
                    "raw": "'#8: x = new Number(1); x <<= new Boolean(true); x === 2. Actual: '",
                    "start": 1488,
                    "end": 1555
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1559,
                      "end": 1560
                    },
                    "start": 1558,
                    "end": 1561
                  },
                  "start": 1488,
                  "end": 1561
                }
              ],
              "start": 1471,
              "end": 1562
            },
            "start": 1465,
            "end": 1563
          }
        ],
        "start": 1461,
        "end": 1565
      },
      "alternate": null,
      "start": 1448,
      "end": 1565
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1566
}