{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 324,
            "end": 325
          },
          "init": null,
          "start": 324,
          "end": 325
        }
      ],
      "start": 320,
      "end": 326
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 338,
          "end": 339
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 342,
          "end": 345
        },
        "start": 338,
        "end": 345
      },
      "start": 338,
      "end": 346
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 347,
          "end": 348
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 352,
          "end": 355
        },
        "start": 347,
        "end": 355
      },
      "start": 347,
      "end": 356
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 361,
          "end": 362
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 367,
          "end": 368
        },
        "start": 361,
        "end": 368
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 384,
                "end": 396
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = \"1\"; x *= \"1\"; x === 1. Actual: ",
                    "raw": "'#1: x = \"1\"; x *= \"1\"; x === 1. Actual: '",
                    "start": 397,
                    "end": 439
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 443,
                      "end": 444
                    },
                    "start": 442,
                    "end": 445
                  },
                  "start": 397,
                  "end": 445
                }
              ],
              "start": 380,
              "end": 446
            },
            "start": 374,
            "end": 447
          }
        ],
        "start": 370,
        "end": 449
      },
      "alternate": null,
      "start": 357,
      "end": 449
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 461,
          "end": 462
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 469,
            "end": 475
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 476,
              "end": 479
            }
          ],
          "start": 465,
          "end": 480
        },
        "start": 461,
        "end": 480
      },
      "start": 461,
      "end": 481
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 482,
          "end": 483
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 487,
          "end": 490
        },
        "start": 482,
        "end": 490
      },
      "start": 482,
      "end": 491
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 496,
          "end": 497
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 502,
          "end": 503
        },
        "start": 496,
        "end": 503
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 519,
                "end": 531
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = new String(\"1\"); x *= \"1\"; x === 1. Actual: ",
                    "raw": "'#2: x = new String(\"1\"); x *= \"1\"; x === 1. Actual: '",
                    "start": 532,
                    "end": 586
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 590,
                      "end": 591
                    },
                    "start": 589,
                    "end": 592
                  },
                  "start": 532,
                  "end": 592
                }
              ],
              "start": 515,
              "end": 593
            },
            "start": 509,
            "end": 594
          }
        ],
        "start": 505,
        "end": 596
      },
      "alternate": null,
      "start": 492,
      "end": 596
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 608,
          "end": 609
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 612,
          "end": 615
        },
        "start": 608,
        "end": 615
      },
      "start": 608,
      "end": 616
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 617,
          "end": 618
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 626,
            "end": 632
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 633,
              "end": 636
            }
          ],
          "start": 622,
          "end": 637
        },
        "start": 617,
        "end": 637
      },
      "start": 617,
      "end": 638
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 643,
          "end": 644
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 649,
          "end": 650
        },
        "start": 643,
        "end": 650
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 666,
                "end": 678
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = \"1\"; x *= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#3: x = \"1\"; x *= new String(\"1\"); x === 1. Actual: '",
                    "start": 679,
                    "end": 733
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 737,
                      "end": 738
                    },
                    "start": 736,
                    "end": 739
                  },
                  "start": 679,
                  "end": 739
                }
              ],
              "start": 662,
              "end": 740
            },
            "start": 656,
            "end": 741
          }
        ],
        "start": 652,
        "end": 743
      },
      "alternate": null,
      "start": 639,
      "end": 743
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 755,
          "end": 756
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 763,
            "end": 769
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 770,
              "end": 773
            }
          ],
          "start": 759,
          "end": 774
        },
        "start": 755,
        "end": 774
      },
      "start": 755,
      "end": 775
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 776,
          "end": 777
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 785,
            "end": 791
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 792,
              "end": 795
            }
          ],
          "start": 781,
          "end": 796
        },
        "start": 776,
        "end": 796
      },
      "start": 776,
      "end": 797
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 802,
          "end": 803
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 808,
          "end": 809
        },
        "start": 802,
        "end": 809
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 825,
                "end": 837
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = new String(\"1\"); x *= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#4: x = new String(\"1\"); x *= new String(\"1\"); x === 1. Actual: '",
                    "start": 838,
                    "end": 904
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 908,
                      "end": 909
                    },
                    "start": 907,
                    "end": 910
                  },
                  "start": 838,
                  "end": 910
                }
              ],
              "start": 821,
              "end": 911
            },
            "start": 815,
            "end": 912
          }
        ],
        "start": 811,
        "end": 914
      },
      "alternate": null,
      "start": 798,
      "end": 914
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 926,
          "end": 927
        },
        "right": {
          "type": "Literal",
          "value": "x",
          "raw": "\"x\"",
          "start": 930,
          "end": 933
        },
        "start": 926,
        "end": 933
      },
      "start": 926,
      "end": 934
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 935,
          "end": 936
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 940,
          "end": 943
        },
        "start": 935,
        "end": 943
      },
      "start": 935,
      "end": 944
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 949,
            "end": 954
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 955,
              "end": 956
            }
          ],
          "optional": false,
          "start": 949,
          "end": 957
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 962,
          "end": 966
        },
        "start": 949,
        "end": 966
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 982,
                "end": 994
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = \"x\"; x *= \"1\"; x === Not-a-Number. Actual: ",
                    "raw": "'#5: x = \"x\"; x *= \"1\"; x === Not-a-Number. Actual: '",
                    "start": 995,
                    "end": 1048
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1052,
                      "end": 1053
                    },
                    "start": 1051,
                    "end": 1054
                  },
                  "start": 995,
                  "end": 1054
                }
              ],
              "start": 978,
              "end": 1055
            },
            "start": 972,
            "end": 1056
          }
        ],
        "start": 968,
        "end": 1058
      },
      "alternate": null,
      "start": 945,
      "end": 1058
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1070,
          "end": 1071
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 1074,
          "end": 1077
        },
        "start": 1070,
        "end": 1077
      },
      "start": 1070,
      "end": 1078
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1079,
          "end": 1080
        },
        "right": {
          "type": "Literal",
          "value": "x",
          "raw": "\"x\"",
          "start": 1084,
          "end": 1087
        },
        "start": 1079,
        "end": 1087
      },
      "start": 1079,
      "end": 1088
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 1093,
            "end": 1098
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 1099,
              "end": 1100
            }
          ],
          "optional": false,
          "start": 1093,
          "end": 1101
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1106,
          "end": 1110
        },
        "start": 1093,
        "end": 1110
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1126,
                "end": 1138
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = \"1\"; x *= \"x\"; x === Not-a-Number. Actual: ",
                    "raw": "'#6: x = \"1\"; x *= \"x\"; x === Not-a-Number. Actual: '",
                    "start": 1139,
                    "end": 1192
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1196,
                      "end": 1197
                    },
                    "start": 1195,
                    "end": 1198
                  },
                  "start": 1139,
                  "end": 1198
                }
              ],
              "start": 1122,
              "end": 1199
            },
            "start": 1116,
            "end": 1200
          }
        ],
        "start": 1112,
        "end": 1202
      },
      "alternate": null,
      "start": 1089,
      "end": 1202
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1203
}