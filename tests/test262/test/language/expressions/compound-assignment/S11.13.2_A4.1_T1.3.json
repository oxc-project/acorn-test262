{
  "type": "Program",
  "start": 0,
  "end": 1203,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 320,
      "end": 326,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 324,
          "end": 325,
          "id": {
            "type": "Identifier",
            "start": 324,
            "end": 325,
            "name": "x"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 338,
      "end": 346,
      "expression": {
        "type": "AssignmentExpression",
        "start": 338,
        "end": 345,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 338,
          "end": 339,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 342,
          "end": 345,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 347,
      "end": 356,
      "expression": {
        "type": "AssignmentExpression",
        "start": 347,
        "end": 355,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 347,
          "end": 348,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 352,
          "end": 355,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 357,
      "end": 449,
      "test": {
        "type": "BinaryExpression",
        "start": 361,
        "end": 368,
        "left": {
          "type": "Identifier",
          "start": 361,
          "end": 362,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 367,
          "end": 368,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 370,
        "end": 449,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 374,
            "end": 447,
            "argument": {
              "type": "NewExpression",
              "start": 380,
              "end": 446,
              "callee": {
                "type": "Identifier",
                "start": 384,
                "end": 396,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 397,
                  "end": 445,
                  "left": {
                    "type": "Literal",
                    "start": 397,
                    "end": 439,
                    "value": "#1: x = \"1\"; x *= \"1\"; x === 1. Actual: ",
                    "raw": "'#1: x = \"1\"; x *= \"1\"; x === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 442,
                    "end": 445,
                    "expression": {
                      "type": "Identifier",
                      "start": 443,
                      "end": 444,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 461,
      "end": 481,
      "expression": {
        "type": "AssignmentExpression",
        "start": 461,
        "end": 480,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 461,
          "end": 462,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 465,
          "end": 480,
          "callee": {
            "type": "Identifier",
            "start": 469,
            "end": 475,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 476,
              "end": 479,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 482,
      "end": 491,
      "expression": {
        "type": "AssignmentExpression",
        "start": 482,
        "end": 490,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 482,
          "end": 483,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 487,
          "end": 490,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 492,
      "end": 596,
      "test": {
        "type": "BinaryExpression",
        "start": 496,
        "end": 503,
        "left": {
          "type": "Identifier",
          "start": 496,
          "end": 497,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 502,
          "end": 503,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 505,
        "end": 596,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 509,
            "end": 594,
            "argument": {
              "type": "NewExpression",
              "start": 515,
              "end": 593,
              "callee": {
                "type": "Identifier",
                "start": 519,
                "end": 531,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 532,
                  "end": 592,
                  "left": {
                    "type": "Literal",
                    "start": 532,
                    "end": 586,
                    "value": "#2: x = new String(\"1\"); x *= \"1\"; x === 1. Actual: ",
                    "raw": "'#2: x = new String(\"1\"); x *= \"1\"; x === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 589,
                    "end": 592,
                    "expression": {
                      "type": "Identifier",
                      "start": 590,
                      "end": 591,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 608,
      "end": 616,
      "expression": {
        "type": "AssignmentExpression",
        "start": 608,
        "end": 615,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 608,
          "end": 609,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 612,
          "end": 615,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 617,
      "end": 638,
      "expression": {
        "type": "AssignmentExpression",
        "start": 617,
        "end": 637,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 617,
          "end": 618,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 622,
          "end": 637,
          "callee": {
            "type": "Identifier",
            "start": 626,
            "end": 632,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 633,
              "end": 636,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 639,
      "end": 743,
      "test": {
        "type": "BinaryExpression",
        "start": 643,
        "end": 650,
        "left": {
          "type": "Identifier",
          "start": 643,
          "end": 644,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 649,
          "end": 650,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 652,
        "end": 743,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 656,
            "end": 741,
            "argument": {
              "type": "NewExpression",
              "start": 662,
              "end": 740,
              "callee": {
                "type": "Identifier",
                "start": 666,
                "end": 678,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 679,
                  "end": 739,
                  "left": {
                    "type": "Literal",
                    "start": 679,
                    "end": 733,
                    "value": "#3: x = \"1\"; x *= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#3: x = \"1\"; x *= new String(\"1\"); x === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 736,
                    "end": 739,
                    "expression": {
                      "type": "Identifier",
                      "start": 737,
                      "end": 738,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 755,
      "end": 775,
      "expression": {
        "type": "AssignmentExpression",
        "start": 755,
        "end": 774,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 755,
          "end": 756,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 759,
          "end": 774,
          "callee": {
            "type": "Identifier",
            "start": 763,
            "end": 769,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 770,
              "end": 773,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 776,
      "end": 797,
      "expression": {
        "type": "AssignmentExpression",
        "start": 776,
        "end": 796,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 776,
          "end": 777,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 781,
          "end": 796,
          "callee": {
            "type": "Identifier",
            "start": 785,
            "end": 791,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 792,
              "end": 795,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 798,
      "end": 914,
      "test": {
        "type": "BinaryExpression",
        "start": 802,
        "end": 809,
        "left": {
          "type": "Identifier",
          "start": 802,
          "end": 803,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 808,
          "end": 809,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 811,
        "end": 914,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 815,
            "end": 912,
            "argument": {
              "type": "NewExpression",
              "start": 821,
              "end": 911,
              "callee": {
                "type": "Identifier",
                "start": 825,
                "end": 837,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 838,
                  "end": 910,
                  "left": {
                    "type": "Literal",
                    "start": 838,
                    "end": 904,
                    "value": "#4: x = new String(\"1\"); x *= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#4: x = new String(\"1\"); x *= new String(\"1\"); x === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 907,
                    "end": 910,
                    "expression": {
                      "type": "Identifier",
                      "start": 908,
                      "end": 909,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 926,
      "end": 934,
      "expression": {
        "type": "AssignmentExpression",
        "start": 926,
        "end": 933,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 926,
          "end": 927,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 930,
          "end": 933,
          "value": "x",
          "raw": "\"x\""
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 935,
      "end": 944,
      "expression": {
        "type": "AssignmentExpression",
        "start": 935,
        "end": 943,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 935,
          "end": 936,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 940,
          "end": 943,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 945,
      "end": 1058,
      "test": {
        "type": "BinaryExpression",
        "start": 949,
        "end": 966,
        "left": {
          "type": "CallExpression",
          "start": 949,
          "end": 957,
          "callee": {
            "type": "Identifier",
            "start": 949,
            "end": 954,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 955,
              "end": 956,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 962,
          "end": 966,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 968,
        "end": 1058,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 972,
            "end": 1056,
            "argument": {
              "type": "NewExpression",
              "start": 978,
              "end": 1055,
              "callee": {
                "type": "Identifier",
                "start": 982,
                "end": 994,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 995,
                  "end": 1054,
                  "left": {
                    "type": "Literal",
                    "start": 995,
                    "end": 1048,
                    "value": "#5: x = \"x\"; x *= \"1\"; x === Not-a-Number. Actual: ",
                    "raw": "'#5: x = \"x\"; x *= \"1\"; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1051,
                    "end": 1054,
                    "expression": {
                      "type": "Identifier",
                      "start": 1052,
                      "end": 1053,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1070,
      "end": 1078,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1070,
        "end": 1077,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1070,
          "end": 1071,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1074,
          "end": 1077,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1079,
      "end": 1088,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1079,
        "end": 1087,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 1079,
          "end": 1080,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1084,
          "end": 1087,
          "value": "x",
          "raw": "\"x\""
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1089,
      "end": 1202,
      "test": {
        "type": "BinaryExpression",
        "start": 1093,
        "end": 1110,
        "left": {
          "type": "CallExpression",
          "start": 1093,
          "end": 1101,
          "callee": {
            "type": "Identifier",
            "start": 1093,
            "end": 1098,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 1099,
              "end": 1100,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1106,
          "end": 1110,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1112,
        "end": 1202,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1116,
            "end": 1200,
            "argument": {
              "type": "NewExpression",
              "start": 1122,
              "end": 1199,
              "callee": {
                "type": "Identifier",
                "start": 1126,
                "end": 1138,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1139,
                  "end": 1198,
                  "left": {
                    "type": "Literal",
                    "start": 1139,
                    "end": 1192,
                    "value": "#6: x = \"1\"; x *= \"x\"; x === Not-a-Number. Actual: ",
                    "raw": "'#6: x = \"1\"; x *= \"x\"; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1195,
                    "end": 1198,
                    "expression": {
                      "type": "Identifier",
                      "start": 1196,
                      "end": 1197,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}