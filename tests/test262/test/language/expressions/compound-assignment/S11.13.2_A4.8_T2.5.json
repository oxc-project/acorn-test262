{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 381,
            "end": 382
          },
          "init": null,
          "start": 381,
          "end": 382
        }
      ],
      "start": 377,
      "end": 383
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 395,
          "end": 396
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 399,
          "end": 403
        },
        "start": 395,
        "end": 403
      },
      "start": 395,
      "end": 404
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 405,
          "end": 406
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 412,
          "end": 415
        },
        "start": 405,
        "end": 415
      },
      "start": 405,
      "end": 416
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 421,
          "end": 422
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 427,
          "end": 428
        },
        "start": 421,
        "end": 428
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 444,
                "end": 456
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = true; x >>>= \"1\"; x === 0. Actual: ",
                    "raw": "'#1: x = true; x >>>= \"1\"; x === 0. Actual: '",
                    "start": 457,
                    "end": 502
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 506,
                      "end": 507
                    },
                    "start": 505,
                    "end": 508
                  },
                  "start": 457,
                  "end": 508
                }
              ],
              "start": 440,
              "end": 509
            },
            "start": 434,
            "end": 510
          }
        ],
        "start": 430,
        "end": 512
      },
      "alternate": null,
      "start": 417,
      "end": 512
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 524,
          "end": 525
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 528,
          "end": 531
        },
        "start": 524,
        "end": 531
      },
      "start": 524,
      "end": 532
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 533,
          "end": 534
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 540,
          "end": 544
        },
        "start": 533,
        "end": 544
      },
      "start": 533,
      "end": 545
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 550,
          "end": 551
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 556,
          "end": 557
        },
        "start": 550,
        "end": 557
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 573,
                "end": 585
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = \"1\"; x >>>= true; x === 0. Actual: ",
                    "raw": "'#2: x = \"1\"; x >>>= true; x === 0. Actual: '",
                    "start": 586,
                    "end": 631
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 635,
                      "end": 636
                    },
                    "start": 634,
                    "end": 637
                  },
                  "start": 586,
                  "end": 637
                }
              ],
              "start": 569,
              "end": 638
            },
            "start": 563,
            "end": 639
          }
        ],
        "start": 559,
        "end": 641
      },
      "alternate": null,
      "start": 546,
      "end": 641
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 653,
          "end": 654
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 661,
            "end": 668
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 669,
              "end": 673
            }
          ],
          "start": 657,
          "end": 674
        },
        "start": 653,
        "end": 674
      },
      "start": 653,
      "end": 675
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 676,
          "end": 677
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 683,
          "end": 686
        },
        "start": 676,
        "end": 686
      },
      "start": 676,
      "end": 687
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 692,
          "end": 693
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 698,
          "end": 699
        },
        "start": 692,
        "end": 699
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 715,
                "end": 727
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Boolean(true); x >>>= \"1\"; x === 0. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x >>>= \"1\"; x === 0. Actual: '",
                    "start": 728,
                    "end": 786
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 790,
                      "end": 791
                    },
                    "start": 789,
                    "end": 792
                  },
                  "start": 728,
                  "end": 792
                }
              ],
              "start": 711,
              "end": 793
            },
            "start": 705,
            "end": 794
          }
        ],
        "start": 701,
        "end": 796
      },
      "alternate": null,
      "start": 688,
      "end": 796
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 808,
          "end": 809
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 812,
          "end": 815
        },
        "start": 808,
        "end": 815
      },
      "start": 808,
      "end": 816
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 817,
          "end": 818
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 828,
            "end": 835
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 836,
              "end": 840
            }
          ],
          "start": 824,
          "end": 841
        },
        "start": 817,
        "end": 841
      },
      "start": 817,
      "end": 842
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 847,
          "end": 848
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 853,
          "end": 854
        },
        "start": 847,
        "end": 854
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 870,
                "end": 882
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = \"1\"; x >>>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = \"1\"; x >>>= new Boolean(true); x === 0. Actual: '",
                    "start": 883,
                    "end": 941
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 945,
                      "end": 946
                    },
                    "start": 944,
                    "end": 947
                  },
                  "start": 883,
                  "end": 947
                }
              ],
              "start": 866,
              "end": 948
            },
            "start": 860,
            "end": 949
          }
        ],
        "start": 856,
        "end": 951
      },
      "alternate": null,
      "start": 843,
      "end": 951
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 963,
          "end": 964
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 967,
          "end": 971
        },
        "start": 963,
        "end": 971
      },
      "start": 963,
      "end": 972
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 973,
          "end": 974
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 984,
            "end": 990
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 991,
              "end": 994
            }
          ],
          "start": 980,
          "end": 995
        },
        "start": 973,
        "end": 995
      },
      "start": 973,
      "end": 996
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1001,
          "end": 1002
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1007,
          "end": 1008
        },
        "start": 1001,
        "end": 1008
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1024,
                "end": 1036
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = true; x >>>= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#5: x = true; x >>>= new String(\"1\"); x === 0. Actual: '",
                    "start": 1037,
                    "end": 1094
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1098,
                      "end": 1099
                    },
                    "start": 1097,
                    "end": 1100
                  },
                  "start": 1037,
                  "end": 1100
                }
              ],
              "start": 1020,
              "end": 1101
            },
            "start": 1014,
            "end": 1102
          }
        ],
        "start": 1010,
        "end": 1104
      },
      "alternate": null,
      "start": 997,
      "end": 1104
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1116,
          "end": 1117
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1124,
            "end": 1130
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1131,
              "end": 1134
            }
          ],
          "start": 1120,
          "end": 1135
        },
        "start": 1116,
        "end": 1135
      },
      "start": 1116,
      "end": 1136
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1137,
          "end": 1138
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1144,
          "end": 1148
        },
        "start": 1137,
        "end": 1148
      },
      "start": 1137,
      "end": 1149
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1154,
          "end": 1155
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1160,
          "end": 1161
        },
        "start": 1154,
        "end": 1161
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1177,
                "end": 1189
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new String(\"1\"); x >>>= true; x === 0. Actual: ",
                    "raw": "'#6: x = new String(\"1\"); x >>>= true; x === 0. Actual: '",
                    "start": 1190,
                    "end": 1247
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1251,
                      "end": 1252
                    },
                    "start": 1250,
                    "end": 1253
                  },
                  "start": 1190,
                  "end": 1253
                }
              ],
              "start": 1173,
              "end": 1254
            },
            "start": 1167,
            "end": 1255
          }
        ],
        "start": 1163,
        "end": 1257
      },
      "alternate": null,
      "start": 1150,
      "end": 1257
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1269,
          "end": 1270
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1277,
            "end": 1284
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1285,
              "end": 1289
            }
          ],
          "start": 1273,
          "end": 1290
        },
        "start": 1269,
        "end": 1290
      },
      "start": 1269,
      "end": 1291
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1292,
          "end": 1293
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1303,
            "end": 1309
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1310,
              "end": 1313
            }
          ],
          "start": 1299,
          "end": 1314
        },
        "start": 1292,
        "end": 1314
      },
      "start": 1292,
      "end": 1315
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1320,
          "end": 1321
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1326,
          "end": 1327
        },
        "start": 1320,
        "end": 1327
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1343,
                "end": 1355
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new Boolean(true); x >>>= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x >>>= new String(\"1\"); x === 0. Actual: '",
                    "start": 1356,
                    "end": 1426
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1430,
                      "end": 1431
                    },
                    "start": 1429,
                    "end": 1432
                  },
                  "start": 1356,
                  "end": 1432
                }
              ],
              "start": 1339,
              "end": 1433
            },
            "start": 1333,
            "end": 1434
          }
        ],
        "start": 1329,
        "end": 1436
      },
      "alternate": null,
      "start": 1316,
      "end": 1436
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1448,
          "end": 1449
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1456,
            "end": 1462
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1463,
              "end": 1466
            }
          ],
          "start": 1452,
          "end": 1467
        },
        "start": 1448,
        "end": 1467
      },
      "start": 1448,
      "end": 1468
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1469,
          "end": 1470
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1480,
            "end": 1487
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1488,
              "end": 1492
            }
          ],
          "start": 1476,
          "end": 1493
        },
        "start": 1469,
        "end": 1493
      },
      "start": 1469,
      "end": 1494
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1499,
          "end": 1500
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1505,
          "end": 1506
        },
        "start": 1499,
        "end": 1506
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1522,
                "end": 1534
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new String(\"1\"); x >>>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#8: x = new String(\"1\"); x >>>= new Boolean(true); x === 0. Actual: '",
                    "start": 1535,
                    "end": 1605
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1609,
                      "end": 1610
                    },
                    "start": 1608,
                    "end": 1611
                  },
                  "start": 1535,
                  "end": 1611
                }
              ],
              "start": 1518,
              "end": 1612
            },
            "start": 1512,
            "end": 1613
          }
        ],
        "start": 1508,
        "end": 1615
      },
      "alternate": null,
      "start": 1495,
      "end": 1615
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1616
}