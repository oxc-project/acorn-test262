{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 377,
            "end": 378
          },
          "init": null,
          "start": 377,
          "end": 378
        }
      ],
      "start": 373,
      "end": 379
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 391,
          "end": 392
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 395,
          "end": 399
        },
        "start": 391,
        "end": 399
      },
      "start": 391,
      "end": 400
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 401,
          "end": 402
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 406,
          "end": 407
        },
        "start": 401,
        "end": 407
      },
      "start": 401,
      "end": 408
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 413,
          "end": 414
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 419,
          "end": 420
        },
        "start": 413,
        "end": 420
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 436,
                "end": 448
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = true; x &= 1; x === 1. Actual: ",
                    "raw": "'#1: x = true; x &= 1; x === 1. Actual: '",
                    "start": 449,
                    "end": 490
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 494,
                      "end": 495
                    },
                    "start": 493,
                    "end": 496
                  },
                  "start": 449,
                  "end": 496
                }
              ],
              "start": 432,
              "end": 497
            },
            "start": 426,
            "end": 498
          }
        ],
        "start": 422,
        "end": 500
      },
      "alternate": null,
      "start": 409,
      "end": 500
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 512,
          "end": 513
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 516,
          "end": 517
        },
        "start": 512,
        "end": 517
      },
      "start": 512,
      "end": 518
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 519,
          "end": 520
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 524,
          "end": 528
        },
        "start": 519,
        "end": 528
      },
      "start": 519,
      "end": 529
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 534,
          "end": 535
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 540,
          "end": 541
        },
        "start": 534,
        "end": 541
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 557,
                "end": 569
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = 1; x &= true; x === 1. Actual: ",
                    "raw": "'#2: x = 1; x &= true; x === 1. Actual: '",
                    "start": 570,
                    "end": 611
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 615,
                      "end": 616
                    },
                    "start": 614,
                    "end": 617
                  },
                  "start": 570,
                  "end": 617
                }
              ],
              "start": 553,
              "end": 618
            },
            "start": 547,
            "end": 619
          }
        ],
        "start": 543,
        "end": 621
      },
      "alternate": null,
      "start": 530,
      "end": 621
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 633,
          "end": 634
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 641,
            "end": 648
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 649,
              "end": 653
            }
          ],
          "start": 637,
          "end": 654
        },
        "start": 633,
        "end": 654
      },
      "start": 633,
      "end": 655
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 656,
          "end": 657
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 661,
          "end": 662
        },
        "start": 656,
        "end": 662
      },
      "start": 656,
      "end": 663
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 668,
          "end": 669
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 674,
          "end": 675
        },
        "start": 668,
        "end": 675
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 691,
                "end": 703
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Boolean(true); x &= 1; x === 1. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x &= 1; x === 1. Actual: '",
                    "start": 704,
                    "end": 758
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 762,
                      "end": 763
                    },
                    "start": 761,
                    "end": 764
                  },
                  "start": 704,
                  "end": 764
                }
              ],
              "start": 687,
              "end": 765
            },
            "start": 681,
            "end": 766
          }
        ],
        "start": 677,
        "end": 768
      },
      "alternate": null,
      "start": 664,
      "end": 768
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 780,
          "end": 781
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 784,
          "end": 785
        },
        "start": 780,
        "end": 785
      },
      "start": 780,
      "end": 786
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 787,
          "end": 788
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 796,
            "end": 803
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 804,
              "end": 808
            }
          ],
          "start": 792,
          "end": 809
        },
        "start": 787,
        "end": 809
      },
      "start": 787,
      "end": 810
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 815,
          "end": 816
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 821,
          "end": 822
        },
        "start": 815,
        "end": 822
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 838,
                "end": 850
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = 1; x &= new Boolean(true); x === 1. Actual: ",
                    "raw": "'#4: x = 1; x &= new Boolean(true); x === 1. Actual: '",
                    "start": 851,
                    "end": 905
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 909,
                      "end": 910
                    },
                    "start": 908,
                    "end": 911
                  },
                  "start": 851,
                  "end": 911
                }
              ],
              "start": 834,
              "end": 912
            },
            "start": 828,
            "end": 913
          }
        ],
        "start": 824,
        "end": 915
      },
      "alternate": null,
      "start": 811,
      "end": 915
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 927,
          "end": 928
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 931,
          "end": 935
        },
        "start": 927,
        "end": 935
      },
      "start": 927,
      "end": 936
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 937,
          "end": 938
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 946,
            "end": 952
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 953,
              "end": 954
            }
          ],
          "start": 942,
          "end": 955
        },
        "start": 937,
        "end": 955
      },
      "start": 937,
      "end": 956
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 961,
          "end": 962
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 967,
          "end": 968
        },
        "start": 961,
        "end": 968
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 984,
                "end": 996
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = true; x &= new Number(1); x === 1. Actual: ",
                    "raw": "'#5: x = true; x &= new Number(1); x === 1. Actual: '",
                    "start": 997,
                    "end": 1050
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1054,
                      "end": 1055
                    },
                    "start": 1053,
                    "end": 1056
                  },
                  "start": 997,
                  "end": 1056
                }
              ],
              "start": 980,
              "end": 1057
            },
            "start": 974,
            "end": 1058
          }
        ],
        "start": 970,
        "end": 1060
      },
      "alternate": null,
      "start": 957,
      "end": 1060
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1072,
          "end": 1073
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1080,
            "end": 1086
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1087,
              "end": 1088
            }
          ],
          "start": 1076,
          "end": 1089
        },
        "start": 1072,
        "end": 1089
      },
      "start": 1072,
      "end": 1090
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1091,
          "end": 1092
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1096,
          "end": 1100
        },
        "start": 1091,
        "end": 1100
      },
      "start": 1091,
      "end": 1101
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1106,
          "end": 1107
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1112,
          "end": 1113
        },
        "start": 1106,
        "end": 1113
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1129,
                "end": 1141
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new Number(1); x &= true; x === 1. Actual: ",
                    "raw": "'#6: x = new Number(1); x &= true; x === 1. Actual: '",
                    "start": 1142,
                    "end": 1195
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1199,
                      "end": 1200
                    },
                    "start": 1198,
                    "end": 1201
                  },
                  "start": 1142,
                  "end": 1201
                }
              ],
              "start": 1125,
              "end": 1202
            },
            "start": 1119,
            "end": 1203
          }
        ],
        "start": 1115,
        "end": 1205
      },
      "alternate": null,
      "start": 1102,
      "end": 1205
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1217,
          "end": 1218
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1225,
            "end": 1232
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1233,
              "end": 1237
            }
          ],
          "start": 1221,
          "end": 1238
        },
        "start": 1217,
        "end": 1238
      },
      "start": 1217,
      "end": 1239
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1240,
          "end": 1241
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1249,
            "end": 1255
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1256,
              "end": 1257
            }
          ],
          "start": 1245,
          "end": 1258
        },
        "start": 1240,
        "end": 1258
      },
      "start": 1240,
      "end": 1259
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1264,
          "end": 1265
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1270,
          "end": 1271
        },
        "start": 1264,
        "end": 1271
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1287,
                "end": 1299
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new Boolean(true); x &= new Number(1); x === 1. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x &= new Number(1); x === 1. Actual: '",
                    "start": 1300,
                    "end": 1366
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1370,
                      "end": 1371
                    },
                    "start": 1369,
                    "end": 1372
                  },
                  "start": 1300,
                  "end": 1372
                }
              ],
              "start": 1283,
              "end": 1373
            },
            "start": 1277,
            "end": 1374
          }
        ],
        "start": 1273,
        "end": 1376
      },
      "alternate": null,
      "start": 1260,
      "end": 1376
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1388,
          "end": 1389
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 1396,
            "end": 1402
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1403,
              "end": 1404
            }
          ],
          "start": 1392,
          "end": 1405
        },
        "start": 1388,
        "end": 1405
      },
      "start": 1388,
      "end": 1406
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1407,
          "end": 1408
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1416,
            "end": 1423
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1424,
              "end": 1428
            }
          ],
          "start": 1412,
          "end": 1429
        },
        "start": 1407,
        "end": 1429
      },
      "start": 1407,
      "end": 1430
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1435,
          "end": 1436
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1441,
          "end": 1442
        },
        "start": 1435,
        "end": 1442
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1458,
                "end": 1470
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new Number(1); x &= new Boolean(true); x === 1. Actual: ",
                    "raw": "'#8: x = new Number(1); x &= new Boolean(true); x === 1. Actual: '",
                    "start": 1471,
                    "end": 1537
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1541,
                      "end": 1542
                    },
                    "start": 1540,
                    "end": 1543
                  },
                  "start": 1471,
                  "end": 1543
                }
              ],
              "start": 1454,
              "end": 1544
            },
            "start": 1448,
            "end": 1545
          }
        ],
        "start": 1444,
        "end": 1547
      },
      "alternate": null,
      "start": 1431,
      "end": 1547
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1548
}