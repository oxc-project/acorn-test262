{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 351,
            "end": 352
          },
          "init": null,
          "start": 351,
          "end": 352
        }
      ],
      "start": 347,
      "end": 353
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 365,
          "end": 366
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 369,
          "end": 370
        },
        "start": 365,
        "end": 370
      },
      "start": 365,
      "end": 371
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 372,
          "end": 373
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 377,
          "end": 381
        },
        "start": 372,
        "end": 381
      },
      "start": 372,
      "end": 382
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 387,
          "end": 388
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 393,
          "end": 394
        },
        "start": 387,
        "end": 394
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 410,
                "end": 422
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = 1; x &= null; x === 0. Actual: ",
                    "raw": "'#1: x = 1; x &= null; x === 0. Actual: '",
                    "start": 423,
                    "end": 464
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 468,
                      "end": 469
                    },
                    "start": 467,
                    "end": 470
                  },
                  "start": 423,
                  "end": 470
                }
              ],
              "start": 406,
              "end": 471
            },
            "start": 400,
            "end": 472
          }
        ],
        "start": 396,
        "end": 474
      },
      "alternate": null,
      "start": 383,
      "end": 474
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 486,
          "end": 487
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 490,
          "end": 494
        },
        "start": 486,
        "end": 494
      },
      "start": 486,
      "end": 495
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 496,
          "end": 497
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 501,
          "end": 502
        },
        "start": 496,
        "end": 502
      },
      "start": 496,
      "end": 503
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 508,
          "end": 509
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 514,
          "end": 515
        },
        "start": 508,
        "end": 515
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 531,
                "end": 543
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = null; x &= 1; x === 0. Actual: ",
                    "raw": "'#2: x = null; x &= 1; x === 0. Actual: '",
                    "start": 544,
                    "end": 585
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 589,
                      "end": 590
                    },
                    "start": 588,
                    "end": 591
                  },
                  "start": 544,
                  "end": 591
                }
              ],
              "start": 527,
              "end": 592
            },
            "start": 521,
            "end": 593
          }
        ],
        "start": 517,
        "end": 595
      },
      "alternate": null,
      "start": 504,
      "end": 595
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 607,
          "end": 608
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 615,
            "end": 621
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 622,
              "end": 623
            }
          ],
          "start": 611,
          "end": 624
        },
        "start": 607,
        "end": 624
      },
      "start": 607,
      "end": 625
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 626,
          "end": 627
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 631,
          "end": 635
        },
        "start": 626,
        "end": 635
      },
      "start": 626,
      "end": 636
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 641,
          "end": 642
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 647,
          "end": 648
        },
        "start": 641,
        "end": 648
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 664,
                "end": 676
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Number(1); x &= null; x === 0. Actual: ",
                    "raw": "'#3: x = new Number(1); x &= null; x === 0. Actual: '",
                    "start": 677,
                    "end": 730
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 734,
                      "end": 735
                    },
                    "start": 733,
                    "end": 736
                  },
                  "start": 677,
                  "end": 736
                }
              ],
              "start": 660,
              "end": 737
            },
            "start": 654,
            "end": 738
          }
        ],
        "start": 650,
        "end": 740
      },
      "alternate": null,
      "start": 637,
      "end": 740
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 752,
          "end": 753
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 756,
          "end": 760
        },
        "start": 752,
        "end": 760
      },
      "start": 752,
      "end": 761
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 762,
          "end": 763
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 771,
            "end": 777
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 778,
              "end": 779
            }
          ],
          "start": 767,
          "end": 780
        },
        "start": 762,
        "end": 780
      },
      "start": 762,
      "end": 781
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 786,
          "end": 787
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 792,
          "end": 793
        },
        "start": 786,
        "end": 793
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 809,
                "end": 821
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = null; x &= new Number(1); x === 0. Actual: ",
                    "raw": "'#4: x = null; x &= new Number(1); x === 0. Actual: '",
                    "start": 822,
                    "end": 875
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 879,
                      "end": 880
                    },
                    "start": 878,
                    "end": 881
                  },
                  "start": 822,
                  "end": 881
                }
              ],
              "start": 805,
              "end": 882
            },
            "start": 799,
            "end": 883
          }
        ],
        "start": 795,
        "end": 885
      },
      "alternate": null,
      "start": 782,
      "end": 885
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 886
}