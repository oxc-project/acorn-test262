{
  "type": "Program",
  "start": 0,
  "end": 957,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 348,
      "end": 354,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 352,
          "end": 353,
          "id": {
            "type": "Identifier",
            "start": 352,
            "end": 353,
            "name": "x"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 366,
      "end": 375,
      "expression": {
        "type": "AssignmentExpression",
        "start": 366,
        "end": 374,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 366,
          "end": 367,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 370,
          "end": 374,
          "value": true,
          "raw": "true"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 376,
      "end": 386,
      "expression": {
        "type": "AssignmentExpression",
        "start": 376,
        "end": 385,
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "start": 376,
          "end": 377,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 381,
          "end": 385,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 387,
      "end": 502,
      "test": {
        "type": "BinaryExpression",
        "start": 391,
        "end": 408,
        "left": {
          "type": "CallExpression",
          "start": 391,
          "end": 399,
          "callee": {
            "type": "Identifier",
            "start": 391,
            "end": 396,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 397,
              "end": 398,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 404,
          "end": 408,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 410,
        "end": 502,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 414,
            "end": 500,
            "argument": {
              "type": "NewExpression",
              "start": 420,
              "end": 499,
              "callee": {
                "type": "Identifier",
                "start": 424,
                "end": 436,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 437,
                  "end": 498,
                  "left": {
                    "type": "Literal",
                    "start": 437,
                    "end": 492,
                    "value": "#1: x = true; x %= null; x === Not-a-Number. Actual: ",
                    "raw": "'#1: x = true; x %= null; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 495,
                    "end": 498,
                    "expression": {
                      "type": "Identifier",
                      "start": 496,
                      "end": 497,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 514,
      "end": 523,
      "expression": {
        "type": "AssignmentExpression",
        "start": 514,
        "end": 522,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 514,
          "end": 515,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 518,
          "end": 522,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 524,
      "end": 534,
      "expression": {
        "type": "AssignmentExpression",
        "start": 524,
        "end": 533,
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "start": 524,
          "end": 525,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 529,
          "end": 533,
          "value": true,
          "raw": "true"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 535,
      "end": 629,
      "test": {
        "type": "BinaryExpression",
        "start": 539,
        "end": 546,
        "left": {
          "type": "Identifier",
          "start": 539,
          "end": 540,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 545,
          "end": 546,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 548,
        "end": 629,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 552,
            "end": 627,
            "argument": {
              "type": "NewExpression",
              "start": 558,
              "end": 626,
              "callee": {
                "type": "Identifier",
                "start": 562,
                "end": 574,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 575,
                  "end": 625,
                  "left": {
                    "type": "Literal",
                    "start": 575,
                    "end": 619,
                    "value": "#2: x = null; x %= true; x === 0. Actual: ",
                    "raw": "'#2: x = null; x %= true; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 622,
                    "end": 625,
                    "expression": {
                      "type": "Identifier",
                      "start": 623,
                      "end": 624,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 641,
      "end": 663,
      "expression": {
        "type": "AssignmentExpression",
        "start": 641,
        "end": 662,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 641,
          "end": 642,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 645,
          "end": 662,
          "callee": {
            "type": "Identifier",
            "start": 649,
            "end": 656,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 657,
              "end": 661,
              "value": true,
              "raw": "true"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 664,
      "end": 674,
      "expression": {
        "type": "AssignmentExpression",
        "start": 664,
        "end": 673,
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "start": 664,
          "end": 665,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 669,
          "end": 673,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 675,
      "end": 803,
      "test": {
        "type": "BinaryExpression",
        "start": 679,
        "end": 696,
        "left": {
          "type": "CallExpression",
          "start": 679,
          "end": 687,
          "callee": {
            "type": "Identifier",
            "start": 679,
            "end": 684,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 685,
              "end": 686,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 692,
          "end": 696,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 698,
        "end": 803,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 702,
            "end": 801,
            "argument": {
              "type": "NewExpression",
              "start": 708,
              "end": 800,
              "callee": {
                "type": "Identifier",
                "start": 712,
                "end": 724,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 725,
                  "end": 799,
                  "left": {
                    "type": "Literal",
                    "start": 725,
                    "end": 793,
                    "value": "#3: x = new Boolean(true); x %= null; x === Not-a-Number. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x %= null; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 796,
                    "end": 799,
                    "expression": {
                      "type": "Identifier",
                      "start": 797,
                      "end": 798,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 815,
      "end": 824,
      "expression": {
        "type": "AssignmentExpression",
        "start": 815,
        "end": 823,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 815,
          "end": 816,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 819,
          "end": 823,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 825,
      "end": 848,
      "expression": {
        "type": "AssignmentExpression",
        "start": 825,
        "end": 847,
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "start": 825,
          "end": 826,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 830,
          "end": 847,
          "callee": {
            "type": "Identifier",
            "start": 834,
            "end": 841,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 842,
              "end": 846,
              "value": true,
              "raw": "true"
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 849,
      "end": 956,
      "test": {
        "type": "BinaryExpression",
        "start": 853,
        "end": 860,
        "left": {
          "type": "Identifier",
          "start": 853,
          "end": 854,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 859,
          "end": 860,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 862,
        "end": 956,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 866,
            "end": 954,
            "argument": {
              "type": "NewExpression",
              "start": 872,
              "end": 953,
              "callee": {
                "type": "Identifier",
                "start": 876,
                "end": 888,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 889,
                  "end": 952,
                  "left": {
                    "type": "Literal",
                    "start": 889,
                    "end": 946,
                    "value": "#4: x = null; x %= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = null; x %= new Boolean(true); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 949,
                    "end": 952,
                    "expression": {
                      "type": "Identifier",
                      "start": 950,
                      "end": 951,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}