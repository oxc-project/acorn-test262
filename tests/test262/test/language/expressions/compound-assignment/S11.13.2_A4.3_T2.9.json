{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 352,
            "end": 353
          },
          "init": null,
          "start": 352,
          "end": 353
        }
      ],
      "start": 348,
      "end": 354
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 366,
          "end": 367
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 370,
          "end": 374
        },
        "start": 366,
        "end": 374
      },
      "start": 366,
      "end": 375
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 376,
          "end": 377
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 381,
          "end": 385
        },
        "start": 376,
        "end": 385
      },
      "start": 376,
      "end": 386
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 391,
            "end": 396
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 397,
              "end": 398
            }
          ],
          "optional": false,
          "start": 391,
          "end": 399
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 404,
          "end": 408
        },
        "start": 391,
        "end": 408
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 424,
                "end": 436
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = true; x %= null; x === Not-a-Number. Actual: ",
                    "raw": "'#1: x = true; x %= null; x === Not-a-Number. Actual: '",
                    "start": 437,
                    "end": 492
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 496,
                      "end": 497
                    },
                    "start": 495,
                    "end": 498
                  },
                  "start": 437,
                  "end": 498
                }
              ],
              "start": 420,
              "end": 499
            },
            "start": 414,
            "end": 500
          }
        ],
        "start": 410,
        "end": 502
      },
      "alternate": null,
      "start": 387,
      "end": 502
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 514,
          "end": 515
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 518,
          "end": 522
        },
        "start": 514,
        "end": 522
      },
      "start": 514,
      "end": 523
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 524,
          "end": 525
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 529,
          "end": 533
        },
        "start": 524,
        "end": 533
      },
      "start": 524,
      "end": 534
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 539,
          "end": 540
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 545,
          "end": 546
        },
        "start": 539,
        "end": 546
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 562,
                "end": 574
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = null; x %= true; x === 0. Actual: ",
                    "raw": "'#2: x = null; x %= true; x === 0. Actual: '",
                    "start": 575,
                    "end": 619
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 623,
                      "end": 624
                    },
                    "start": 622,
                    "end": 625
                  },
                  "start": 575,
                  "end": 625
                }
              ],
              "start": 558,
              "end": 626
            },
            "start": 552,
            "end": 627
          }
        ],
        "start": 548,
        "end": 629
      },
      "alternate": null,
      "start": 535,
      "end": 629
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 641,
          "end": 642
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 649,
            "end": 656
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 657,
              "end": 661
            }
          ],
          "start": 645,
          "end": 662
        },
        "start": 641,
        "end": 662
      },
      "start": 641,
      "end": 663
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 664,
          "end": 665
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 669,
          "end": 673
        },
        "start": 664,
        "end": 673
      },
      "start": 664,
      "end": 674
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 679,
            "end": 684
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 685,
              "end": 686
            }
          ],
          "optional": false,
          "start": 679,
          "end": 687
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 692,
          "end": 696
        },
        "start": 679,
        "end": 696
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 712,
                "end": 724
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Boolean(true); x %= null; x === Not-a-Number. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x %= null; x === Not-a-Number. Actual: '",
                    "start": 725,
                    "end": 793
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 797,
                      "end": 798
                    },
                    "start": 796,
                    "end": 799
                  },
                  "start": 725,
                  "end": 799
                }
              ],
              "start": 708,
              "end": 800
            },
            "start": 702,
            "end": 801
          }
        ],
        "start": 698,
        "end": 803
      },
      "alternate": null,
      "start": 675,
      "end": 803
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 815,
          "end": 816
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 819,
          "end": 823
        },
        "start": 815,
        "end": 823
      },
      "start": 815,
      "end": 824
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 825,
          "end": 826
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 834,
            "end": 841
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 842,
              "end": 846
            }
          ],
          "start": 830,
          "end": 847
        },
        "start": 825,
        "end": 847
      },
      "start": 825,
      "end": 848
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 853,
          "end": 854
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 859,
          "end": 860
        },
        "start": 853,
        "end": 860
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 876,
                "end": 888
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = null; x %= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = null; x %= new Boolean(true); x === 0. Actual: '",
                    "start": 889,
                    "end": 946
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 950,
                      "end": 951
                    },
                    "start": 949,
                    "end": 952
                  },
                  "start": 889,
                  "end": 952
                }
              ],
              "start": 872,
              "end": 953
            },
            "start": 866,
            "end": 954
          }
        ],
        "start": 862,
        "end": 956
      },
      "alternate": null,
      "start": 849,
      "end": 956
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 957
}