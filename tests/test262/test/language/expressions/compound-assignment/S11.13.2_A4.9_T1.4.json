{
  "type": "Program",
  "start": 0,
  "end": 844,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 289,
      "end": 295,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 293,
          "end": 294,
          "id": {
            "type": "Identifier",
            "start": 293,
            "end": 294,
            "name": "x"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 307,
      "end": 316,
      "expression": {
        "type": "AssignmentExpression",
        "start": 307,
        "end": 315,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 307,
          "end": 308,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 311,
          "end": 315,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 317,
      "end": 332,
      "expression": {
        "type": "AssignmentExpression",
        "start": 317,
        "end": 331,
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "start": 317,
          "end": 318,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 322,
          "end": 331,
          "name": "undefined"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 333,
      "end": 432,
      "test": {
        "type": "BinaryExpression",
        "start": 337,
        "end": 344,
        "left": {
          "type": "Identifier",
          "start": 337,
          "end": 338,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 343,
          "end": 344,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 346,
        "end": 432,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 350,
            "end": 430,
            "argument": {
              "type": "NewExpression",
              "start": 356,
              "end": 429,
              "callee": {
                "type": "Identifier",
                "start": 360,
                "end": 372,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 373,
                  "end": 428,
                  "left": {
                    "type": "Literal",
                    "start": 373,
                    "end": 422,
                    "value": "#1: x = null; x &= undefined; x === 0. Actual: ",
                    "raw": "'#1: x = null; x &= undefined; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 425,
                    "end": 428,
                    "expression": {
                      "type": "Identifier",
                      "start": 426,
                      "end": 427,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 444,
      "end": 458,
      "expression": {
        "type": "AssignmentExpression",
        "start": 444,
        "end": 457,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 444,
          "end": 445,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 448,
          "end": 457,
          "name": "undefined"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 459,
      "end": 469,
      "expression": {
        "type": "AssignmentExpression",
        "start": 459,
        "end": 468,
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "start": 459,
          "end": 460,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 464,
          "end": 468,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 470,
      "end": 569,
      "test": {
        "type": "BinaryExpression",
        "start": 474,
        "end": 481,
        "left": {
          "type": "Identifier",
          "start": 474,
          "end": 475,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 480,
          "end": 481,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 483,
        "end": 569,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 487,
            "end": 567,
            "argument": {
              "type": "NewExpression",
              "start": 493,
              "end": 566,
              "callee": {
                "type": "Identifier",
                "start": 497,
                "end": 509,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 510,
                  "end": 565,
                  "left": {
                    "type": "Literal",
                    "start": 510,
                    "end": 559,
                    "value": "#2: x = undefined; x &= null; x === 0. Actual: ",
                    "raw": "'#2: x = undefined; x &= null; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 562,
                    "end": 565,
                    "expression": {
                      "type": "Identifier",
                      "start": 563,
                      "end": 564,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 581,
      "end": 595,
      "expression": {
        "type": "AssignmentExpression",
        "start": 581,
        "end": 594,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 581,
          "end": 582,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 585,
          "end": 594,
          "name": "undefined"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 596,
      "end": 611,
      "expression": {
        "type": "AssignmentExpression",
        "start": 596,
        "end": 610,
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "start": 596,
          "end": 597,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 601,
          "end": 610,
          "name": "undefined"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 612,
      "end": 716,
      "test": {
        "type": "BinaryExpression",
        "start": 616,
        "end": 623,
        "left": {
          "type": "Identifier",
          "start": 616,
          "end": 617,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 622,
          "end": 623,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 625,
        "end": 716,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 629,
            "end": 714,
            "argument": {
              "type": "NewExpression",
              "start": 635,
              "end": 713,
              "callee": {
                "type": "Identifier",
                "start": 639,
                "end": 651,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 652,
                  "end": 712,
                  "left": {
                    "type": "Literal",
                    "start": 652,
                    "end": 706,
                    "value": "#3: x = undefined; x &= undefined; x === 0. Actual: ",
                    "raw": "'#3: x = undefined; x &= undefined; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 709,
                    "end": 712,
                    "expression": {
                      "type": "Identifier",
                      "start": 710,
                      "end": 711,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 728,
      "end": 737,
      "expression": {
        "type": "AssignmentExpression",
        "start": 728,
        "end": 736,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 728,
          "end": 729,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 732,
          "end": 736,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 738,
      "end": 748,
      "expression": {
        "type": "AssignmentExpression",
        "start": 738,
        "end": 747,
        "operator": "&=",
        "left": {
          "type": "Identifier",
          "start": 738,
          "end": 739,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 743,
          "end": 747,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 749,
      "end": 843,
      "test": {
        "type": "BinaryExpression",
        "start": 753,
        "end": 760,
        "left": {
          "type": "Identifier",
          "start": 753,
          "end": 754,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 759,
          "end": 760,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 762,
        "end": 843,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 766,
            "end": 841,
            "argument": {
              "type": "NewExpression",
              "start": 772,
              "end": 840,
              "callee": {
                "type": "Identifier",
                "start": 776,
                "end": 788,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 789,
                  "end": 839,
                  "left": {
                    "type": "Literal",
                    "start": 789,
                    "end": 833,
                    "value": "#4: x = null; x &= null; x === 0. Actual: ",
                    "raw": "'#4: x = null; x &= null; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 836,
                    "end": 839,
                    "expression": {
                      "type": "Identifier",
                      "start": 837,
                      "end": 838,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}