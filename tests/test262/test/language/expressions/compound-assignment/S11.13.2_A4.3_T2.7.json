{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 351,
            "end": 352
          },
          "init": null,
          "start": 351,
          "end": 352
        }
      ],
      "start": 347,
      "end": 353
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 365,
          "end": 366
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 369,
          "end": 372
        },
        "start": 365,
        "end": 372
      },
      "start": 365,
      "end": 373
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 374,
          "end": 375
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 379,
          "end": 383
        },
        "start": 374,
        "end": 383
      },
      "start": 374,
      "end": 384
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 389,
            "end": 394
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 395,
              "end": 396
            }
          ],
          "optional": false,
          "start": 389,
          "end": 397
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 402,
          "end": 406
        },
        "start": 389,
        "end": 406
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 422,
                "end": 434
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = \"1\"; x %= null; x === Not-a-Number. Actual: ",
                    "raw": "'#1: x = \"1\"; x %= null; x === Not-a-Number. Actual: '",
                    "start": 435,
                    "end": 489
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 493,
                      "end": 494
                    },
                    "start": 492,
                    "end": 495
                  },
                  "start": 435,
                  "end": 495
                }
              ],
              "start": 418,
              "end": 496
            },
            "start": 412,
            "end": 497
          }
        ],
        "start": 408,
        "end": 499
      },
      "alternate": null,
      "start": 385,
      "end": 499
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 511,
          "end": 512
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 515,
          "end": 519
        },
        "start": 511,
        "end": 519
      },
      "start": 511,
      "end": 520
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 521,
          "end": 522
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 526,
          "end": 529
        },
        "start": 521,
        "end": 529
      },
      "start": 521,
      "end": 530
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 535,
          "end": 536
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 541,
          "end": 542
        },
        "start": 535,
        "end": 542
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 558,
                "end": 570
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = null; x %= \"1\"; x === 0. Actual: ",
                    "raw": "'#2: x = null; x %= \"1\"; x === 0. Actual: '",
                    "start": 571,
                    "end": 614
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 618,
                      "end": 619
                    },
                    "start": 617,
                    "end": 620
                  },
                  "start": 571,
                  "end": 620
                }
              ],
              "start": 554,
              "end": 621
            },
            "start": 548,
            "end": 622
          }
        ],
        "start": 544,
        "end": 624
      },
      "alternate": null,
      "start": 531,
      "end": 624
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 636,
          "end": 637
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 644,
            "end": 650
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 651,
              "end": 654
            }
          ],
          "start": 640,
          "end": 655
        },
        "start": 636,
        "end": 655
      },
      "start": 636,
      "end": 656
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 657,
          "end": 658
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 662,
          "end": 666
        },
        "start": 657,
        "end": 666
      },
      "start": 657,
      "end": 667
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "isNaN",
            "start": 672,
            "end": 677
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 678,
              "end": 679
            }
          ],
          "optional": false,
          "start": 672,
          "end": 680
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 685,
          "end": 689
        },
        "start": 672,
        "end": 689
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 705,
                "end": 717
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new String(\"1\"); x %= null; x === Not-a-Number. Actual: ",
                    "raw": "'#3: x = new String(\"1\"); x %= null; x === Not-a-Number. Actual: '",
                    "start": 718,
                    "end": 784
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 788,
                      "end": 789
                    },
                    "start": 787,
                    "end": 790
                  },
                  "start": 718,
                  "end": 790
                }
              ],
              "start": 701,
              "end": 791
            },
            "start": 695,
            "end": 792
          }
        ],
        "start": 691,
        "end": 794
      },
      "alternate": null,
      "start": 668,
      "end": 794
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 806,
          "end": 807
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 810,
          "end": 814
        },
        "start": 806,
        "end": 814
      },
      "start": 806,
      "end": 815
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 816,
          "end": 817
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 825,
            "end": 831
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 832,
              "end": 835
            }
          ],
          "start": 821,
          "end": 836
        },
        "start": 816,
        "end": 836
      },
      "start": 816,
      "end": 837
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 842,
          "end": 843
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 848,
          "end": 849
        },
        "start": 842,
        "end": 849
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 865,
                "end": 877
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = null; x %= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#4: x = null; x %= new String(\"1\"); x === 0. Actual: '",
                    "start": 878,
                    "end": 933
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 937,
                      "end": 938
                    },
                    "start": 936,
                    "end": 939
                  },
                  "start": 878,
                  "end": 939
                }
              ],
              "start": 861,
              "end": 940
            },
            "start": 855,
            "end": 941
          }
        ],
        "start": 851,
        "end": 943
      },
      "alternate": null,
      "start": 838,
      "end": 943
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 944
}