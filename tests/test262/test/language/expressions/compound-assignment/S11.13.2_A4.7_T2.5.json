{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 379,
            "end": 380
          },
          "init": null,
          "start": 379,
          "end": 380
        }
      ],
      "start": 375,
      "end": 381
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 393,
          "end": 394
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 397,
          "end": 401
        },
        "start": 393,
        "end": 401
      },
      "start": 393,
      "end": 402
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 403,
          "end": 404
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 409,
          "end": 412
        },
        "start": 403,
        "end": 412
      },
      "start": 403,
      "end": 413
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 418,
          "end": 419
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 424,
          "end": 425
        },
        "start": 418,
        "end": 425
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 441,
                "end": 453
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = true; x >>= \"1\"; x === 0. Actual: ",
                    "raw": "'#1: x = true; x >>= \"1\"; x === 0. Actual: '",
                    "start": 454,
                    "end": 498
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 502,
                      "end": 503
                    },
                    "start": 501,
                    "end": 504
                  },
                  "start": 454,
                  "end": 504
                }
              ],
              "start": 437,
              "end": 505
            },
            "start": 431,
            "end": 506
          }
        ],
        "start": 427,
        "end": 508
      },
      "alternate": null,
      "start": 414,
      "end": 508
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 520,
          "end": 521
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 524,
          "end": 527
        },
        "start": 520,
        "end": 527
      },
      "start": 520,
      "end": 528
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 529,
          "end": 530
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 535,
          "end": 539
        },
        "start": 529,
        "end": 539
      },
      "start": 529,
      "end": 540
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 545,
          "end": 546
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 551,
          "end": 552
        },
        "start": 545,
        "end": 552
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 568,
                "end": 580
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = \"1\"; x >>= true; x === 0. Actual: ",
                    "raw": "'#2: x = \"1\"; x >>= true; x === 0. Actual: '",
                    "start": 581,
                    "end": 625
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 629,
                      "end": 630
                    },
                    "start": 628,
                    "end": 631
                  },
                  "start": 581,
                  "end": 631
                }
              ],
              "start": 564,
              "end": 632
            },
            "start": 558,
            "end": 633
          }
        ],
        "start": 554,
        "end": 635
      },
      "alternate": null,
      "start": 541,
      "end": 635
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 647,
          "end": 648
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 655,
            "end": 662
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 663,
              "end": 667
            }
          ],
          "start": 651,
          "end": 668
        },
        "start": 647,
        "end": 668
      },
      "start": 647,
      "end": 669
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 670,
          "end": 671
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 676,
          "end": 679
        },
        "start": 670,
        "end": 679
      },
      "start": 670,
      "end": 680
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 685,
          "end": 686
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 691,
          "end": 692
        },
        "start": 685,
        "end": 692
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 708,
                "end": 720
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Boolean(true); x >>= \"1\"; x === 0. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x >>= \"1\"; x === 0. Actual: '",
                    "start": 721,
                    "end": 778
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 782,
                      "end": 783
                    },
                    "start": 781,
                    "end": 784
                  },
                  "start": 721,
                  "end": 784
                }
              ],
              "start": 704,
              "end": 785
            },
            "start": 698,
            "end": 786
          }
        ],
        "start": 694,
        "end": 788
      },
      "alternate": null,
      "start": 681,
      "end": 788
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 800,
          "end": 801
        },
        "right": {
          "type": "Literal",
          "value": "1",
          "raw": "\"1\"",
          "start": 804,
          "end": 807
        },
        "start": 800,
        "end": 807
      },
      "start": 800,
      "end": 808
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 809,
          "end": 810
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 819,
            "end": 826
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 827,
              "end": 831
            }
          ],
          "start": 815,
          "end": 832
        },
        "start": 809,
        "end": 832
      },
      "start": 809,
      "end": 833
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 838,
          "end": 839
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 844,
          "end": 845
        },
        "start": 838,
        "end": 845
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 861,
                "end": 873
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = \"1\"; x >>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = \"1\"; x >>= new Boolean(true); x === 0. Actual: '",
                    "start": 874,
                    "end": 931
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 935,
                      "end": 936
                    },
                    "start": 934,
                    "end": 937
                  },
                  "start": 874,
                  "end": 937
                }
              ],
              "start": 857,
              "end": 938
            },
            "start": 851,
            "end": 939
          }
        ],
        "start": 847,
        "end": 941
      },
      "alternate": null,
      "start": 834,
      "end": 941
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 953,
          "end": 954
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 957,
          "end": 961
        },
        "start": 953,
        "end": 961
      },
      "start": 953,
      "end": 962
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 963,
          "end": 964
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 973,
            "end": 979
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 980,
              "end": 983
            }
          ],
          "start": 969,
          "end": 984
        },
        "start": 963,
        "end": 984
      },
      "start": 963,
      "end": 985
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 990,
          "end": 991
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 996,
          "end": 997
        },
        "start": 990,
        "end": 997
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1013,
                "end": 1025
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#5: x = true; x >>= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#5: x = true; x >>= new String(\"1\"); x === 0. Actual: '",
                    "start": 1026,
                    "end": 1082
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1086,
                      "end": 1087
                    },
                    "start": 1085,
                    "end": 1088
                  },
                  "start": 1026,
                  "end": 1088
                }
              ],
              "start": 1009,
              "end": 1089
            },
            "start": 1003,
            "end": 1090
          }
        ],
        "start": 999,
        "end": 1092
      },
      "alternate": null,
      "start": 986,
      "end": 1092
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1104,
          "end": 1105
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1112,
            "end": 1118
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1119,
              "end": 1122
            }
          ],
          "start": 1108,
          "end": 1123
        },
        "start": 1104,
        "end": 1123
      },
      "start": 1104,
      "end": 1124
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1125,
          "end": 1126
        },
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 1131,
          "end": 1135
        },
        "start": 1125,
        "end": 1135
      },
      "start": 1125,
      "end": 1136
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1141,
          "end": 1142
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1147,
          "end": 1148
        },
        "start": 1141,
        "end": 1148
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1164,
                "end": 1176
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: x = new String(\"1\"); x >>= true; x === 0. Actual: ",
                    "raw": "'#6: x = new String(\"1\"); x >>= true; x === 0. Actual: '",
                    "start": 1177,
                    "end": 1233
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1237,
                      "end": 1238
                    },
                    "start": 1236,
                    "end": 1239
                  },
                  "start": 1177,
                  "end": 1239
                }
              ],
              "start": 1160,
              "end": 1240
            },
            "start": 1154,
            "end": 1241
          }
        ],
        "start": 1150,
        "end": 1243
      },
      "alternate": null,
      "start": 1137,
      "end": 1243
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1255,
          "end": 1256
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1263,
            "end": 1270
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1271,
              "end": 1275
            }
          ],
          "start": 1259,
          "end": 1276
        },
        "start": 1255,
        "end": 1276
      },
      "start": 1255,
      "end": 1277
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1278,
          "end": 1279
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1288,
            "end": 1294
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1295,
              "end": 1298
            }
          ],
          "start": 1284,
          "end": 1299
        },
        "start": 1278,
        "end": 1299
      },
      "start": 1278,
      "end": 1300
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1305,
          "end": 1306
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1311,
          "end": 1312
        },
        "start": 1305,
        "end": 1312
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1328,
                "end": 1340
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: x = new Boolean(true); x >>= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x >>= new String(\"1\"); x === 0. Actual: '",
                    "start": 1341,
                    "end": 1410
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1414,
                      "end": 1415
                    },
                    "start": 1413,
                    "end": 1416
                  },
                  "start": 1341,
                  "end": 1416
                }
              ],
              "start": 1324,
              "end": 1417
            },
            "start": 1318,
            "end": 1418
          }
        ],
        "start": 1314,
        "end": 1420
      },
      "alternate": null,
      "start": 1301,
      "end": 1420
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1432,
          "end": 1433
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 1440,
            "end": 1446
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1",
              "raw": "\"1\"",
              "start": 1447,
              "end": 1450
            }
          ],
          "start": 1436,
          "end": 1451
        },
        "start": 1432,
        "end": 1451
      },
      "start": 1432,
      "end": 1452
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1453,
          "end": 1454
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 1463,
            "end": 1470
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1471,
              "end": 1475
            }
          ],
          "start": 1459,
          "end": 1476
        },
        "start": 1453,
        "end": 1476
      },
      "start": 1453,
      "end": 1477
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1482,
          "end": 1483
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1488,
          "end": 1489
        },
        "start": 1482,
        "end": 1489
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1505,
                "end": 1517
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: x = new String(\"1\"); x >>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#8: x = new String(\"1\"); x >>= new Boolean(true); x === 0. Actual: '",
                    "start": 1518,
                    "end": 1587
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1591,
                      "end": 1592
                    },
                    "start": 1590,
                    "end": 1593
                  },
                  "start": 1518,
                  "end": 1593
                }
              ],
              "start": 1501,
              "end": 1594
            },
            "start": 1495,
            "end": 1595
          }
        ],
        "start": 1491,
        "end": 1597
      },
      "alternate": null,
      "start": 1478,
      "end": 1597
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1598
}