{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "MyFunction",
        "start": 341,
        "end": 351
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [],
        "start": 354,
        "end": 356
      },
      "expression": false,
      "start": 332,
      "end": 356
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "MyFunction",
            "start": 357,
            "end": 367
          },
          "property": {
            "type": "Identifier",
            "name": "prop",
            "start": 368,
            "end": 372
          },
          "optional": false,
          "computed": false,
          "start": 357,
          "end": 372
        },
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 375,
          "end": 376
        },
        "start": 357,
        "end": 376
      },
      "start": 357,
      "end": 377
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "UnaryExpression",
        "operator": "delete",
        "argument": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "MyFunction",
            "start": 385,
            "end": 395
          },
          "property": {
            "type": "Identifier",
            "name": "prop",
            "start": 396,
            "end": 400
          },
          "optional": false,
          "computed": false,
          "start": 385,
          "end": 400
        },
        "prefix": true,
        "start": 378,
        "end": 400
      },
      "start": 378,
      "end": 401
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "MyFunction",
            "start": 406,
            "end": 416
          },
          "property": {
            "type": "Identifier",
            "name": "prop",
            "start": 417,
            "end": 421
          },
          "optional": false,
          "computed": false,
          "start": 406,
          "end": 421
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 426,
          "end": 435
        },
        "start": 406,
        "end": 435
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 451,
                "end": 463
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: function MyFunction(){}; MyFunction.prop = 1; delete MyFunction.prop; MyFunction.prop === undefined. Actual: ",
                    "raw": "'#1: function MyFunction(){}; MyFunction.prop = 1; delete MyFunction.prop; MyFunction.prop === undefined. Actual: '",
                    "start": 469,
                    "end": 584
                  },
                  "operator": "+",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "MyFunction",
                      "start": 591,
                      "end": 601
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "prop",
                      "start": 602,
                      "end": 606
                    },
                    "optional": false,
                    "computed": false,
                    "start": 591,
                    "end": 606
                  },
                  "start": 469,
                  "end": 606
                }
              ],
              "start": 447,
              "end": 610
            },
            "start": 441,
            "end": 611
          }
        ],
        "start": 437,
        "end": 613
      },
      "alternate": null,
      "start": 402,
      "end": 613
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 614
}