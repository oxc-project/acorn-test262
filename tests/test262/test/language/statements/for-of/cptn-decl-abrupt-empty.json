{
  "type": "Program",
  "start": 0,
  "end": 1435,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1074,
      "end": 1144,
      "expression": {
        "type": "CallExpression",
        "start": 1074,
        "end": 1143,
        "callee": {
          "type": "MemberExpression",
          "start": 1074,
          "end": 1090,
          "object": {
            "type": "Identifier",
            "start": 1074,
            "end": 1080,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1081,
            "end": 1090,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1091,
            "end": 1131,
            "callee": {
              "type": "Identifier",
              "start": 1091,
              "end": 1095,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1096,
                "end": 1130,
                "value": "1; for (var a of [0]) { break; }",
                "raw": "'1; for (var a of [0]) { break; }'"
              }
            ],
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 1133,
            "end": 1142,
            "name": "undefined"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1145,
      "end": 1210,
      "expression": {
        "type": "CallExpression",
        "start": 1145,
        "end": 1209,
        "callee": {
          "type": "MemberExpression",
          "start": 1145,
          "end": 1161,
          "object": {
            "type": "Identifier",
            "start": 1145,
            "end": 1151,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1152,
            "end": 1161,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1162,
            "end": 1205,
            "callee": {
              "type": "Identifier",
              "start": 1162,
              "end": 1166,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1167,
                "end": 1204,
                "value": "2; for (var b of [0]) { 3; break; }",
                "raw": "'2; for (var b of [0]) { 3; break; }'"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1207,
            "end": 1208,
            "value": 3,
            "raw": "3"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1212,
      "end": 1325,
      "expression": {
        "type": "CallExpression",
        "start": 1212,
        "end": 1324,
        "callee": {
          "type": "MemberExpression",
          "start": 1212,
          "end": 1228,
          "object": {
            "type": "Identifier",
            "start": 1212,
            "end": 1218,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1219,
            "end": 1228,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1232,
            "end": 1309,
            "callee": {
              "type": "Identifier",
              "start": 1232,
              "end": 1236,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1237,
                "end": 1308,
                "value": "4; outer: do { for (var a of [0]) { continue outer; } } while (false)",
                "raw": "'4; outer: do { for (var a of [0]) { continue outer; } } while (false)'"
              }
            ],
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 1313,
            "end": 1322,
            "name": "undefined"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1326,
      "end": 1434,
      "expression": {
        "type": "CallExpression",
        "start": 1326,
        "end": 1433,
        "callee": {
          "type": "MemberExpression",
          "start": 1326,
          "end": 1342,
          "object": {
            "type": "Identifier",
            "start": 1326,
            "end": 1332,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1333,
            "end": 1342,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1346,
            "end": 1426,
            "callee": {
              "type": "Identifier",
              "start": 1346,
              "end": 1350,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1351,
                "end": 1425,
                "value": "5; outer: do { for (var b of [0]) { 6; continue outer; } } while (false)",
                "raw": "'5; outer: do { for (var b of [0]) { 6; continue outer; } } while (false)'"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1430,
            "end": 1431,
            "value": 6,
            "raw": "6"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}