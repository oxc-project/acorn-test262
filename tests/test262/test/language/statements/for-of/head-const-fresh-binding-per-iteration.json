{
  "type": "Program",
  "start": 0,
  "end": 589,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 247,
      "end": 257,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 251,
          "end": 256,
          "id": {
            "type": "Identifier",
            "start": 251,
            "end": 252,
            "name": "s"
          },
          "init": {
            "type": "Literal",
            "start": 255,
            "end": 256,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 258,
      "end": 300,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 262,
          "end": 299,
          "id": {
            "type": "Identifier",
            "start": 262,
            "end": 263,
            "name": "f"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 266,
            "end": 299,
            "elements": [
              {
                "type": "Identifier",
                "start": 267,
                "end": 276,
                "name": "undefined"
              },
              {
                "type": "Identifier",
                "start": 278,
                "end": 287,
                "name": "undefined"
              },
              {
                "type": "Identifier",
                "start": 289,
                "end": 298,
                "name": "undefined"
              }
            ]
          }
        }
      ]
    },
    {
      "type": "ForOfStatement",
      "start": 302,
      "end": 378,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 307,
        "end": 314,
        "kind": "const",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 313,
            "end": 314,
            "id": {
              "type": "Identifier",
              "start": 313,
              "end": 314,
              "name": "x"
            },
            "init": null
          }
        ]
      },
      "right": {
        "type": "ArrayExpression",
        "start": 318,
        "end": 327,
        "elements": [
          {
            "type": "Literal",
            "start": 319,
            "end": 320,
            "value": 1,
            "raw": "1"
          },
          {
            "type": "Literal",
            "start": 322,
            "end": 323,
            "value": 2,
            "raw": "2"
          },
          {
            "type": "Literal",
            "start": 325,
            "end": 326,
            "value": 3,
            "raw": "3"
          }
        ]
      },
      "body": {
        "type": "BlockStatement",
        "start": 329,
        "end": 378,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 333,
            "end": 340,
            "expression": {
              "type": "AssignmentExpression",
              "start": 333,
              "end": 339,
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "start": 333,
                "end": 334,
                "name": "s"
              },
              "right": {
                "type": "Identifier",
                "start": 338,
                "end": 339,
                "name": "x"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 343,
            "end": 376,
            "expression": {
              "type": "AssignmentExpression",
              "start": 343,
              "end": 376,
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "start": 343,
                "end": 349,
                "object": {
                  "type": "Identifier",
                  "start": 343,
                  "end": 344,
                  "name": "f"
                },
                "property": {
                  "type": "BinaryExpression",
                  "start": 345,
                  "end": 348,
                  "left": {
                    "type": "Identifier",
                    "start": 345,
                    "end": 346,
                    "name": "x"
                  },
                  "operator": "-",
                  "right": {
                    "type": "Literal",
                    "start": 347,
                    "end": 348,
                    "value": 1,
                    "raw": "1"
                  }
                },
                "optional": false,
                "computed": true
              },
              "right": {
                "type": "FunctionExpression",
                "start": 352,
                "end": 376,
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 363,
                  "end": 376,
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 365,
                      "end": 374,
                      "argument": {
                        "type": "Identifier",
                        "start": 372,
                        "end": 373,
                        "name": "x"
                      }
                    }
                  ]
                },
                "expression": false
              }
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 379,
      "end": 429,
      "expression": {
        "type": "CallExpression",
        "start": 379,
        "end": 428,
        "callee": {
          "type": "MemberExpression",
          "start": 379,
          "end": 395,
          "object": {
            "type": "Identifier",
            "start": 379,
            "end": 385,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 386,
            "end": 395,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 396,
            "end": 397,
            "name": "s"
          },
          {
            "type": "Literal",
            "start": 399,
            "end": 400,
            "value": 6,
            "raw": "6"
          },
          {
            "type": "Literal",
            "start": 402,
            "end": 427,
            "value": "The value of `s` is `6`",
            "raw": "\"The value of `s` is `6`\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 430,
      "end": 482,
      "expression": {
        "type": "CallExpression",
        "start": 430,
        "end": 481,
        "callee": {
          "type": "MemberExpression",
          "start": 430,
          "end": 446,
          "object": {
            "type": "Identifier",
            "start": 430,
            "end": 436,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 437,
            "end": 446,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 447,
            "end": 453,
            "callee": {
              "type": "MemberExpression",
              "start": 447,
              "end": 451,
              "object": {
                "type": "Identifier",
                "start": 447,
                "end": 448,
                "name": "f"
              },
              "property": {
                "type": "Literal",
                "start": 449,
                "end": 450,
                "value": 0,
                "raw": "0"
              },
              "optional": false,
              "computed": true
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 455,
            "end": 456,
            "value": 1,
            "raw": "1"
          },
          {
            "type": "Literal",
            "start": 458,
            "end": 480,
            "value": "`f[0]()` returns `1`",
            "raw": "\"`f[0]()` returns `1`\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 483,
      "end": 535,
      "expression": {
        "type": "CallExpression",
        "start": 483,
        "end": 534,
        "callee": {
          "type": "MemberExpression",
          "start": 483,
          "end": 499,
          "object": {
            "type": "Identifier",
            "start": 483,
            "end": 489,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 490,
            "end": 499,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 500,
            "end": 506,
            "callee": {
              "type": "MemberExpression",
              "start": 500,
              "end": 504,
              "object": {
                "type": "Identifier",
                "start": 500,
                "end": 501,
                "name": "f"
              },
              "property": {
                "type": "Literal",
                "start": 502,
                "end": 503,
                "value": 1,
                "raw": "1"
              },
              "optional": false,
              "computed": true
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 508,
            "end": 509,
            "value": 2,
            "raw": "2"
          },
          {
            "type": "Literal",
            "start": 511,
            "end": 533,
            "value": "`f[1]()` returns `2`",
            "raw": "\"`f[1]()` returns `2`\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 536,
      "end": 588,
      "expression": {
        "type": "CallExpression",
        "start": 536,
        "end": 587,
        "callee": {
          "type": "MemberExpression",
          "start": 536,
          "end": 552,
          "object": {
            "type": "Identifier",
            "start": 536,
            "end": 542,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 543,
            "end": 552,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 553,
            "end": 559,
            "callee": {
              "type": "MemberExpression",
              "start": 553,
              "end": 557,
              "object": {
                "type": "Identifier",
                "start": 553,
                "end": 554,
                "name": "f"
              },
              "property": {
                "type": "Literal",
                "start": 555,
                "end": 556,
                "value": 2,
                "raw": "2"
              },
              "optional": false,
              "computed": true
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 561,
            "end": 562,
            "value": 3,
            "raw": "3"
          },
          {
            "type": "Literal",
            "start": 564,
            "end": 586,
            "value": "`f[2]()` returns `3`",
            "raw": "\"`f[2]()` returns `3`\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}