{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "values",
        "start": 321,
        "end": 327
      },
      "generator": true,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "YieldExpression",
              "delegate": false,
              "argument": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 340,
                "end": 341
              },
              "start": 334,
              "end": 341
            },
            "start": 334,
            "end": 342
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "YieldExpression",
              "delegate": false,
              "argument": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 351,
                "end": 352
              },
              "start": 345,
              "end": 352
            },
            "start": 345,
            "end": 353
          }
        ],
        "start": 330,
        "end": 355
      },
      "expression": false,
      "start": 311,
      "end": 355
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterator",
            "start": 360,
            "end": 368
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "values",
              "start": 371,
              "end": 377
            },
            "arguments": [],
            "optional": false,
            "start": 371,
            "end": 379
          },
          "start": 360,
          "end": 379
        }
      ],
      "start": 356,
      "end": 380
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "loop",
            "start": 385,
            "end": 389
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 392,
            "end": 396
          },
          "start": 385,
          "end": 396
        }
      ],
      "start": 381,
      "end": 397
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "i",
            "start": 402,
            "end": 403
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 406,
            "end": 407
          },
          "start": 402,
          "end": 407
        }
      ],
      "start": 398,
      "end": 408
    },
    {
      "type": "LabeledStatement",
      "label": {
        "type": "Identifier",
        "name": "outer",
        "start": 410,
        "end": 415
      },
      "body": {
        "type": "WhileStatement",
        "test": {
          "type": "Identifier",
          "name": "loop",
          "start": 424,
          "end": 428
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "loop",
                  "start": 434,
                  "end": 438
                },
                "right": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 441,
                  "end": 446
                },
                "start": 434,
                "end": 446
              },
              "start": 434,
              "end": 447
            },
            {
              "type": "ForOfStatement",
              "await": false,
              "left": {
                "type": "VariableDeclaration",
                "kind": "var",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 459,
                      "end": 460
                    },
                    "init": null,
                    "start": 459,
                    "end": 460
                  }
                ],
                "start": 455,
                "end": 460
              },
              "right": {
                "type": "Identifier",
                "name": "iterator",
                "start": 464,
                "end": 472
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "TryStatement",
                    "block": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "UpdateExpression",
                            "operator": "++",
                            "prefix": false,
                            "argument": {
                              "type": "Identifier",
                              "name": "i",
                              "start": 492,
                              "end": 493
                            },
                            "start": 492,
                            "end": 495
                          },
                          "start": 492,
                          "end": 496
                        },
                        {
                          "type": "ContinueStatement",
                          "label": {
                            "type": "Identifier",
                            "name": "outer",
                            "start": 512,
                            "end": 517
                          },
                          "start": 503,
                          "end": 518
                        },
                        {
                          "type": "ThrowStatement",
                          "argument": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Test262Error",
                              "start": 535,
                              "end": 547
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "This code is unreachable (following `continue` statement).",
                                "raw": "'This code is unreachable (following `continue` statement).'",
                                "start": 548,
                                "end": 608
                              }
                            ],
                            "start": 531,
                            "end": 609
                          },
                          "start": 525,
                          "end": 610
                        }
                      ],
                      "start": 484,
                      "end": 616
                    },
                    "handler": {
                      "type": "CatchClause",
                      "param": {
                        "type": "Identifier",
                        "name": "err",
                        "start": 624,
                        "end": 627
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [],
                        "start": 629,
                        "end": 631
                      },
                      "start": 617,
                      "end": 631
                    },
                    "finalizer": null,
                    "start": 480,
                    "end": 631
                  },
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 647,
                        "end": 659
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "This code is unreachable (following `try` statment).",
                          "raw": "'This code is unreachable (following `try` statment).'",
                          "start": 660,
                          "end": 714
                        }
                      ],
                      "start": 643,
                      "end": 715
                    },
                    "start": 637,
                    "end": 716
                  }
                ],
                "start": 474,
                "end": 720
              },
              "start": 450,
              "end": 720
            },
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 734,
                  "end": 746
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "This code is unreachable (following `for..of` statement).",
                    "raw": "'This code is unreachable (following `for..of` statement).'",
                    "start": 747,
                    "end": 806
                  }
                ],
                "start": 730,
                "end": 807
              },
              "start": 724,
              "end": 808
            }
          ],
          "start": 430,
          "end": 810
        },
        "start": 417,
        "end": 810
      },
      "start": 410,
      "end": 810
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 812,
            "end": 818
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 819,
            "end": 828
          },
          "optional": false,
          "computed": false,
          "start": 812,
          "end": 828
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "i",
            "start": 829,
            "end": 830
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 832,
            "end": 833
          }
        ],
        "optional": false,
        "start": 812,
        "end": 834
      },
      "start": 812,
      "end": 835
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 836
}