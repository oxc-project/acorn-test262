{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "values",
        "start": 346,
        "end": 352
      },
      "generator": true,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "YieldExpression",
              "delegate": false,
              "argument": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 365,
                "end": 366
              },
              "start": 359,
              "end": 366
            },
            "start": 359,
            "end": 367
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "YieldExpression",
              "delegate": false,
              "argument": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 376,
                "end": 377
              },
              "start": 370,
              "end": 377
            },
            "start": 370,
            "end": 378
          }
        ],
        "start": 355,
        "end": 380
      },
      "expression": false,
      "start": 336,
      "end": 380
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterator",
            "start": 385,
            "end": 393
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "values",
              "start": 396,
              "end": 402
            },
            "arguments": [],
            "optional": false,
            "start": 396,
            "end": 404
          },
          "start": 385,
          "end": 404
        }
      ],
      "start": 381,
      "end": 405
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "loop",
            "start": 410,
            "end": 414
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 417,
            "end": 421
          },
          "start": 410,
          "end": 421
        }
      ],
      "start": 406,
      "end": 422
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "i",
            "start": 427,
            "end": 428
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 431,
            "end": 432
          },
          "start": 427,
          "end": 432
        }
      ],
      "start": 423,
      "end": 433
    },
    {
      "type": "LabeledStatement",
      "label": {
        "type": "Identifier",
        "name": "outer",
        "start": 435,
        "end": 440
      },
      "body": {
        "type": "WhileStatement",
        "test": {
          "type": "Identifier",
          "name": "loop",
          "start": 449,
          "end": 453
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "loop",
                  "start": 459,
                  "end": 463
                },
                "right": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 466,
                  "end": 471
                },
                "start": 459,
                "end": 471
              },
              "start": 459,
              "end": 472
            },
            {
              "type": "ForOfStatement",
              "await": false,
              "left": {
                "type": "VariableDeclaration",
                "kind": "var",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 485,
                      "end": 486
                    },
                    "init": null,
                    "start": 485,
                    "end": 486
                  }
                ],
                "start": 481,
                "end": 486
              },
              "right": {
                "type": "Identifier",
                "name": "iterator",
                "start": 490,
                "end": 498
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "TryStatement",
                    "block": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ThrowStatement",
                          "argument": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Error",
                              "start": 528,
                              "end": 533
                            },
                            "arguments": [],
                            "start": 524,
                            "end": 535
                          },
                          "start": 518,
                          "end": 536
                        }
                      ],
                      "start": 510,
                      "end": 542
                    },
                    "handler": {
                      "type": "CatchClause",
                      "param": {
                        "type": "Identifier",
                        "name": "err",
                        "start": 550,
                        "end": 553
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UpdateExpression",
                              "operator": "++",
                              "prefix": false,
                              "argument": {
                                "type": "Identifier",
                                "name": "i",
                                "start": 563,
                                "end": 564
                              },
                              "start": 563,
                              "end": 566
                            },
                            "start": 563,
                            "end": 567
                          },
                          {
                            "type": "ContinueStatement",
                            "label": {
                              "type": "Identifier",
                              "name": "outer",
                              "start": 583,
                              "end": 588
                            },
                            "start": 574,
                            "end": 589
                          },
                          {
                            "type": "ThrowStatement",
                            "argument": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Test262Error",
                                "start": 606,
                                "end": 618
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "This code is unreachable (following `continue` statement).",
                                  "raw": "'This code is unreachable (following `continue` statement).'",
                                  "start": 619,
                                  "end": 679
                                }
                              ],
                              "start": 602,
                              "end": 680
                            },
                            "start": 596,
                            "end": 681
                          }
                        ],
                        "start": 555,
                        "end": 687
                      },
                      "start": 543,
                      "end": 687
                    },
                    "finalizer": null,
                    "start": 506,
                    "end": 687
                  },
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 703,
                        "end": 715
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "This code is unreachable (following `try` statement).",
                          "raw": "'This code is unreachable (following `try` statement).'",
                          "start": 716,
                          "end": 771
                        }
                      ],
                      "start": 699,
                      "end": 772
                    },
                    "start": 693,
                    "end": 773
                  }
                ],
                "start": 500,
                "end": 777
              },
              "start": 476,
              "end": 777
            },
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 791,
                  "end": 803
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "This code is unreachable (following `for..of` statement).",
                    "raw": "'This code is unreachable (following `for..of` statement).'",
                    "start": 804,
                    "end": 863
                  }
                ],
                "start": 787,
                "end": 864
              },
              "start": 781,
              "end": 865
            }
          ],
          "start": 455,
          "end": 867
        },
        "start": 442,
        "end": 867
      },
      "start": 435,
      "end": 867
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 869,
            "end": 875
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 876,
            "end": 885
          },
          "optional": false,
          "computed": false,
          "start": 869,
          "end": 885
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "i",
            "start": 886,
            "end": 887
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 889,
            "end": 890
          }
        ],
        "optional": false,
        "start": 869,
        "end": 891
      },
      "start": 869,
      "end": 892
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 893
}