{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 982,
            "end": 983
          },
          "init": {
            "type": "Literal",
            "value": "outside",
            "raw": "'outside'",
            "start": 986,
            "end": 995
          },
          "start": 982,
          "end": 995
        }
      ],
      "start": 978,
      "end": 996
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "probeDecl",
            "start": 1001,
            "end": 1010
          },
          "init": null,
          "start": 1001,
          "end": 1010
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "probeBody",
            "start": 1012,
            "end": 1021
          },
          "init": null,
          "start": 1012,
          "end": 1021
        }
      ],
      "start": 997,
      "end": 1022
    },
    {
      "type": "ForOfStatement",
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "kind": "let",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "Identifier",
                  "name": "x",
                  "start": 1039,
                  "end": 1040
                },
                {
                  "type": "AssignmentPattern",
                  "left": {
                    "type": "Identifier",
                    "name": "_",
                    "start": 1042,
                    "end": 1043
                  },
                  "right": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "probeDecl",
                      "start": 1046,
                      "end": 1055
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "x",
                              "start": 1078,
                              "end": 1079
                            },
                            "start": 1071,
                            "end": 1080
                          }
                        ],
                        "start": 1069,
                        "end": 1082
                      },
                      "expression": false,
                      "start": 1058,
                      "end": 1082
                    },
                    "start": 1046,
                    "end": 1082
                  },
                  "start": 1042,
                  "end": 1082
                }
              ],
              "start": 1038,
              "end": 1083
            },
            "init": null,
            "start": 1038,
            "end": 1083
          }
        ],
        "start": 1034,
        "end": 1083
      },
      "right": {
        "type": "ArrayExpression",
        "elements": [
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "inside",
                "raw": "'inside'",
                "start": 1097,
                "end": 1105
              }
            ],
            "start": 1096,
            "end": 1106
          }
        ],
        "start": 1095,
        "end": 1107
      },
      "body": {
        "type": "ExpressionStatement",
        "expression": {
          "type": "AssignmentExpression",
          "operator": "=",
          "left": {
            "type": "Identifier",
            "name": "probeBody",
            "start": 1114,
            "end": 1123
          },
          "right": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "x",
                    "start": 1146,
                    "end": 1147
                  },
                  "start": 1139,
                  "end": 1148
                }
              ],
              "start": 1137,
              "end": 1150
            },
            "expression": false,
            "start": 1126,
            "end": 1150
          },
          "start": 1114,
          "end": 1150
        },
        "start": 1114,
        "end": 1151
      },
      "start": 1024,
      "end": 1151
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1153,
            "end": 1159
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1160,
            "end": 1169
          },
          "optional": false,
          "computed": false,
          "start": 1153,
          "end": 1169
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "probeDecl",
              "start": 1170,
              "end": 1179
            },
            "arguments": [],
            "optional": false,
            "start": 1170,
            "end": 1181
          },
          {
            "type": "Literal",
            "value": "inside",
            "raw": "'inside'",
            "start": 1183,
            "end": 1191
          },
          {
            "type": "Literal",
            "value": "reference from ForDeclaration",
            "raw": "'reference from ForDeclaration'",
            "start": 1193,
            "end": 1224
          }
        ],
        "optional": false,
        "start": 1153,
        "end": 1225
      },
      "start": 1153,
      "end": 1226
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1227,
            "end": 1233
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1234,
            "end": 1243
          },
          "optional": false,
          "computed": false,
          "start": 1227,
          "end": 1243
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "probeBody",
              "start": 1244,
              "end": 1253
            },
            "arguments": [],
            "optional": false,
            "start": 1244,
            "end": 1255
          },
          {
            "type": "Literal",
            "value": "inside",
            "raw": "'inside'",
            "start": 1257,
            "end": 1265
          },
          {
            "type": "Literal",
            "value": "reference from statement body",
            "raw": "'reference from statement body'",
            "start": 1267,
            "end": 1298
          }
        ],
        "optional": false,
        "start": 1227,
        "end": 1299
      },
      "start": 1227,
      "end": 1300
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1301,
            "end": 1307
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1308,
            "end": 1317
          },
          "optional": false,
          "computed": false,
          "start": 1301,
          "end": 1317
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 1318,
            "end": 1319
          },
          {
            "type": "Literal",
            "value": "outside",
            "raw": "'outside'",
            "start": 1321,
            "end": 1330
          }
        ],
        "optional": false,
        "start": 1301,
        "end": 1331
      },
      "start": 1301,
      "end": 1332
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1333
}