{
  "type": "Program",
  "start": 0,
  "end": 1352,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1203,
      "end": 1217,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1207,
          "end": 1216,
          "id": {
            "type": "Identifier",
            "start": 1207,
            "end": 1212,
            "name": "yield"
          },
          "init": {
            "type": "Literal",
            "start": 1215,
            "end": 1216,
            "value": 4,
            "raw": "4"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1218,
      "end": 1224,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1222,
          "end": 1223,
          "id": {
            "type": "Identifier",
            "start": 1222,
            "end": 1223,
            "name": "x"
          },
          "init": null
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1226,
      "end": 1242,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1230,
          "end": 1241,
          "id": {
            "type": "Identifier",
            "start": 1230,
            "end": 1237,
            "name": "counter"
          },
          "init": {
            "type": "Literal",
            "start": 1240,
            "end": 1241,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "ForOfStatement",
      "start": 1244,
      "end": 1320,
      "await": false,
      "left": {
        "type": "ObjectPattern",
        "start": 1249,
        "end": 1265,
        "properties": [
          {
            "type": "Property",
            "start": 1251,
            "end": 1263,
            "kind": "init",
            "key": {
              "type": "Identifier",
              "start": 1251,
              "end": 1252,
              "name": "x"
            },
            "value": {
              "type": "AssignmentPattern",
              "start": 1254,
              "end": 1263,
              "left": {
                "type": "Identifier",
                "start": 1254,
                "end": 1255,
                "name": "x"
              },
              "right": {
                "type": "Identifier",
                "start": 1258,
                "end": 1263,
                "name": "yield"
              }
            },
            "method": false,
            "shorthand": false,
            "computed": false
          }
        ]
      },
      "right": {
        "type": "ArrayExpression",
        "start": 1269,
        "end": 1273,
        "elements": [
          {
            "type": "ObjectExpression",
            "start": 1270,
            "end": 1272,
            "properties": []
          }
        ]
      },
      "body": {
        "type": "BlockStatement",
        "start": 1275,
        "end": 1320,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1279,
            "end": 1302,
            "expression": {
              "type": "CallExpression",
              "start": 1279,
              "end": 1301,
              "callee": {
                "type": "MemberExpression",
                "start": 1279,
                "end": 1295,
                "object": {
                  "type": "Identifier",
                  "start": 1279,
                  "end": 1285,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1286,
                  "end": 1295,
                  "name": "sameValue"
                },
                "optional": false,
                "computed": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1296,
                  "end": 1297,
                  "name": "x"
                },
                {
                  "type": "Literal",
                  "start": 1299,
                  "end": 1300,
                  "value": 4,
                  "raw": "4"
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 1305,
            "end": 1318,
            "expression": {
              "type": "AssignmentExpression",
              "start": 1305,
              "end": 1317,
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "start": 1305,
                "end": 1312,
                "name": "counter"
              },
              "right": {
                "type": "Literal",
                "start": 1316,
                "end": 1317,
                "value": 1,
                "raw": "1"
              }
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1322,
      "end": 1351,
      "expression": {
        "type": "CallExpression",
        "start": 1322,
        "end": 1350,
        "callee": {
          "type": "MemberExpression",
          "start": 1322,
          "end": 1338,
          "object": {
            "type": "Identifier",
            "start": 1322,
            "end": 1328,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1329,
            "end": 1338,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1339,
            "end": 1346,
            "name": "counter"
          },
          {
            "type": "Literal",
            "start": 1348,
            "end": 1349,
            "value": 1,
            "raw": "1"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}