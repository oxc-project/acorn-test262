{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iter",
            "start": 1306,
            "end": 1310
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "FunctionExpression",
                "id": null,
                "generator": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "YieldExpression",
                        "delegate": false,
                        "argument": null,
                        "start": 1331,
                        "end": 1336
                      },
                      "start": 1331,
                      "end": 1337
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "YieldExpression",
                        "delegate": false,
                        "argument": null,
                        "start": 1340,
                        "end": 1345
                      },
                      "start": 1340,
                      "end": 1346
                    }
                  ],
                  "start": 1327,
                  "end": 1348
                },
                "expression": false,
                "start": 1314,
                "end": 1348
              },
              "start": 1313,
              "end": 1349
            },
            "arguments": [],
            "optional": false,
            "start": 1313,
            "end": 1351
          },
          "start": 1306,
          "end": 1351
        }
      ],
      "start": 1300,
      "end": 1352
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "fn",
        "start": 1364,
        "end": 1366
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForOfStatement",
            "await": false,
            "left": {
              "type": "VariableDeclaration",
              "kind": "let",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "ArrayPattern",
                    "elements": [
                      null
                    ],
                    "start": 1382,
                    "end": 1385
                  },
                  "init": null,
                  "start": 1382,
                  "end": 1385
                }
              ],
              "start": 1378,
              "end": 1385
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Identifier",
                  "name": "iter",
                  "start": 1390,
                  "end": 1394
                }
              ],
              "start": 1389,
              "end": 1395
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": null,
                  "start": 1403,
                  "end": 1410
                }
              ],
              "start": 1397,
              "end": 1414
            },
            "start": 1373,
            "end": 1414
          }
        ],
        "start": 1369,
        "end": 1416
      },
      "expression": false,
      "start": 1355,
      "end": 1416
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "fn",
          "start": 1418,
          "end": 1420
        },
        "arguments": [],
        "optional": false,
        "start": 1418,
        "end": 1422
      },
      "start": 1418,
      "end": 1423
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1425,
            "end": 1431
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1432,
            "end": 1441
          },
          "optional": false,
          "computed": false,
          "start": 1425,
          "end": 1441
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "iter",
                  "start": 1442,
                  "end": 1446
                },
                "property": {
                  "type": "Identifier",
                  "name": "next",
                  "start": 1447,
                  "end": 1451
                },
                "optional": false,
                "computed": false,
                "start": 1442,
                "end": 1451
              },
              "arguments": [],
              "optional": false,
              "start": 1442,
              "end": 1453
            },
            "property": {
              "type": "Identifier",
              "name": "done",
              "start": 1454,
              "end": 1458
            },
            "optional": false,
            "computed": false,
            "start": 1442,
            "end": 1458
          },
          {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 1460,
            "end": 1464
          },
          {
            "type": "Literal",
            "value": "iteration occurred as expected",
            "raw": "'iteration occurred as expected'",
            "start": 1466,
            "end": 1498
          }
        ],
        "optional": false,
        "start": 1425,
        "end": 1499
      },
      "start": 1425,
      "end": 1500
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1502
}