{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "first",
            "start": 1271,
            "end": 1276
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1279,
            "end": 1280
          },
          "start": 1271,
          "end": 1280
        }
      ],
      "start": 1267,
      "end": 1281
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "second",
            "start": 1286,
            "end": 1292
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1295,
            "end": 1296
          },
          "start": 1286,
          "end": 1296
        }
      ],
      "start": 1282,
      "end": 1297
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iter",
            "start": 1302,
            "end": 1306
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "FunctionExpression",
              "id": null,
              "generator": true,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "first",
                        "start": 1325,
                        "end": 1330
                      },
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1334,
                        "end": 1335
                      },
                      "start": 1325,
                      "end": 1335
                    },
                    "start": 1325,
                    "end": 1336
                  },
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 1349,
                        "end": 1361
                      },
                      "arguments": [],
                      "start": 1345,
                      "end": 1363
                    },
                    "start": 1339,
                    "end": 1364
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "second",
                        "start": 1367,
                        "end": 1373
                      },
                      "right": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1377,
                        "end": 1378
                      },
                      "start": 1367,
                      "end": 1378
                    },
                    "start": 1367,
                    "end": 1379
                  }
                ],
                "start": 1321,
                "end": 1381
              },
              "expression": false,
              "start": 1309,
              "end": 1381
            },
            "arguments": [],
            "optional": false,
            "start": 1309,
            "end": 1383
          },
          "start": 1302,
          "end": 1383
        }
      ],
      "start": 1298,
      "end": 1384
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f",
        "start": 1403,
        "end": 1404
      },
      "generator": true,
      "async": true,
      "params": [
        {
          "type": "ArrayPattern",
          "elements": [
            {
              "type": "RestElement",
              "argument": {
                "type": "Identifier",
                "name": "x",
                "start": 1409,
                "end": 1410
              },
              "start": 1406,
              "end": 1410
            }
          ],
          "start": 1405,
          "end": 1411
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [],
        "start": 1413,
        "end": 1419
      },
      "expression": false,
      "start": 1387,
      "end": 1419
    },
    {
      "type": "EmptyStatement",
      "start": 1419,
      "end": 1420
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1422,
            "end": 1428
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 1429,
            "end": 1435
          },
          "optional": false,
          "computed": false,
          "start": 1422,
          "end": 1435
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 1436,
            "end": 1448
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 1465,
                      "end": 1466
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "iter",
                        "start": 1467,
                        "end": 1471
                      }
                    ],
                    "optional": false,
                    "start": 1465,
                    "end": 1472
                  },
                  "start": 1465,
                  "end": 1473
                }
              ],
              "start": 1461,
              "end": 1475
            },
            "expression": false,
            "start": 1450,
            "end": 1475
          }
        ],
        "optional": false,
        "start": 1422,
        "end": 1476
      },
      "start": 1422,
      "end": 1477
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "iter",
            "start": 1479,
            "end": 1483
          },
          "property": {
            "type": "Identifier",
            "name": "next",
            "start": 1484,
            "end": 1488
          },
          "optional": false,
          "computed": false,
          "start": 1479,
          "end": 1488
        },
        "arguments": [],
        "optional": false,
        "start": 1479,
        "end": 1490
      },
      "start": 1479,
      "end": 1491
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1492,
            "end": 1498
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1499,
            "end": 1508
          },
          "optional": false,
          "computed": false,
          "start": 1492,
          "end": 1508
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "first",
            "start": 1509,
            "end": 1514
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1516,
            "end": 1517
          }
        ],
        "optional": false,
        "start": 1492,
        "end": 1518
      },
      "start": 1492,
      "end": 1519
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1520,
            "end": 1526
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1527,
            "end": 1536
          },
          "optional": false,
          "computed": false,
          "start": 1520,
          "end": 1536
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "second",
            "start": 1537,
            "end": 1543
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1545,
            "end": 1546
          },
          {
            "type": "Literal",
            "value": "Iterator is closed following abrupt completion.",
            "raw": "'Iterator is closed following abrupt completion.'",
            "start": 1548,
            "end": 1597
          }
        ],
        "optional": false,
        "start": 1520,
        "end": 1598
      },
      "start": 1520,
      "end": 1599
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1600
}