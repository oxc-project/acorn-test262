{
  "type": "Program",
  "start": 0,
  "end": 1405,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1183,
      "end": 1193,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1187,
          "end": 1192,
          "id": {
            "type": "Identifier",
            "start": 1187,
            "end": 1188,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 1191,
            "end": 1192,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1196,
      "end": 1214,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1200,
          "end": 1213,
          "id": {
            "type": "Identifier",
            "start": 1200,
            "end": 1209,
            "name": "callCount"
          },
          "init": {
            "type": "Literal",
            "start": 1212,
            "end": 1213,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "start": 1215,
      "end": 1275,
      "id": {
        "type": "Identifier",
        "start": 1231,
        "end": 1232,
        "name": "f"
      },
      "expression": false,
      "generator": true,
      "async": true,
      "params": [
        {
          "type": "AssignmentPattern",
          "start": 1233,
          "end": 1238,
          "left": {
            "type": "Identifier",
            "start": 1233,
            "end": 1234,
            "name": "x"
          },
          "right": {
            "type": "Identifier",
            "start": 1237,
            "end": 1238,
            "name": "x"
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 1240,
        "end": 1275,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1247,
            "end": 1273,
            "expression": {
              "type": "AssignmentExpression",
              "start": 1247,
              "end": 1272,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 1247,
                "end": 1256,
                "name": "callCount"
              },
              "right": {
                "type": "BinaryExpression",
                "start": 1259,
                "end": 1272,
                "left": {
                  "type": "Identifier",
                  "start": 1259,
                  "end": 1268,
                  "name": "callCount"
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "start": 1271,
                  "end": 1272,
                  "value": 1,
                  "raw": "1"
                }
              }
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1277,
      "end": 1330,
      "expression": {
        "type": "CallExpression",
        "start": 1277,
        "end": 1329,
        "callee": {
          "type": "MemberExpression",
          "start": 1277,
          "end": 1290,
          "object": {
            "type": "Identifier",
            "start": 1277,
            "end": 1283,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1284,
            "end": 1290,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1291,
            "end": 1305,
            "name": "ReferenceError"
          },
          {
            "type": "FunctionExpression",
            "start": 1307,
            "end": 1328,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1318,
              "end": 1328,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1322,
                  "end": 1326,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1322,
                    "end": 1325,
                    "callee": {
                      "type": "Identifier",
                      "start": 1322,
                      "end": 1323,
                      "name": "f"
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1332,
      "end": 1404,
      "expression": {
        "type": "CallExpression",
        "start": 1332,
        "end": 1403,
        "callee": {
          "type": "MemberExpression",
          "start": 1332,
          "end": 1348,
          "object": {
            "type": "Identifier",
            "start": 1332,
            "end": 1338,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1339,
            "end": 1348,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1349,
            "end": 1358,
            "name": "callCount"
          },
          {
            "type": "Literal",
            "start": 1360,
            "end": 1361,
            "value": 0,
            "raw": "0"
          },
          {
            "type": "Literal",
            "start": 1363,
            "end": 1402,
            "value": "generator function body not evaluated",
            "raw": "'generator function body not evaluated'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}