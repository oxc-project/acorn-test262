{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 1,
                          "raw": "1",
                          "start": 474,
                          "end": 475
                        },
                        "start": 468,
                        "end": 475
                      }
                    ],
                    "start": 467,
                    "end": 476
                  },
                  "expression": false,
                  "start": 457,
                  "end": 476
                },
                "start": 456,
                "end": 477
              },
              "arguments": [],
              "optional": false,
              "start": 456,
              "end": 479
            },
            "consequent": {
              "type": "ExpressionStatement",
              "expression": {
                "type": "Identifier",
                "name": "abracadabra",
                "start": 481,
                "end": 492
              },
              "start": 481,
              "end": 492
            },
            "alternate": null,
            "start": 452,
            "end": 492
          }
        ],
        "start": 449,
        "end": 494
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 502,
          "end": 503
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 512,
                  "end": 513
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 518,
                  "end": 519
                },
                "start": 512,
                "end": 519
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 535,
                        "end": 547
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "#1: Exception === 1. Actual:  Exception ===",
                            "raw": "'#1: Exception === 1. Actual:  Exception ==='",
                            "start": 548,
                            "end": 593
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "e",
                            "start": 595,
                            "end": 596
                          },
                          "start": 548,
                          "end": 596
                        }
                      ],
                      "start": 531,
                      "end": 597
                    },
                    "start": 525,
                    "end": 598
                  }
                ],
                "start": 521,
                "end": 601
              },
              "alternate": null,
              "start": 508,
              "end": 601
            }
          ],
          "start": 505,
          "end": 603
        },
        "start": 495,
        "end": 603
      },
      "finalizer": null,
      "start": 445,
      "end": 603
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 1,
                          "raw": "1",
                          "start": 805,
                          "end": 806
                        },
                        "start": 799,
                        "end": 806
                      }
                    ],
                    "start": 798,
                    "end": 807
                  },
                  "expression": false,
                  "start": 788,
                  "end": 807
                },
                "start": 787,
                "end": 808
              },
              "arguments": [],
              "optional": false,
              "start": 787,
              "end": 810
            },
            "consequent": {
              "type": "ExpressionStatement",
              "expression": {
                "type": "Identifier",
                "name": "abracadabra",
                "start": 812,
                "end": 823
              },
              "start": 812,
              "end": 824
            },
            "alternate": {
              "type": "ExpressionStatement",
              "expression": {
                "type": "Identifier",
                "name": "blablachat",
                "start": 830,
                "end": 840
              },
              "start": 830,
              "end": 841
            },
            "start": 783,
            "end": 841
          }
        ],
        "start": 780,
        "end": 843
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 851,
          "end": 852
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 861,
                  "end": 862
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 867,
                  "end": 868
                },
                "start": 861,
                "end": 868
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 884,
                        "end": 896
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "#2: Exception === 1. Actual:  Exception ===",
                            "raw": "'#2: Exception === 1. Actual:  Exception ==='",
                            "start": 897,
                            "end": 942
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "e",
                            "start": 944,
                            "end": 945
                          },
                          "start": 897,
                          "end": 945
                        }
                      ],
                      "start": 880,
                      "end": 946
                    },
                    "start": 874,
                    "end": 947
                  }
                ],
                "start": 870,
                "end": 950
              },
              "alternate": null,
              "start": 857,
              "end": 950
            }
          ],
          "start": 854,
          "end": 952
        },
        "start": 844,
        "end": 952
      },
      "finalizer": null,
      "start": 776,
      "end": 952
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1035
}