{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 481,
              "end": 485
            },
            "consequent": {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "ParenthesizedExpression",
                  "expression": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ThrowStatement",
                          "argument": {
                            "type": "Literal",
                            "value": "instatement",
                            "raw": "\"instatement\"",
                            "start": 505,
                            "end": 518
                          },
                          "start": 499,
                          "end": 518
                        }
                      ],
                      "start": 498,
                      "end": 519
                    },
                    "expression": false,
                    "start": 488,
                    "end": 519
                  },
                  "start": 487,
                  "end": 520
                },
                "arguments": [],
                "optional": false,
                "start": 487,
                "end": 522
              },
              "start": 487,
              "end": 523
            },
            "alternate": null,
            "start": 477,
            "end": 523
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 535,
                "end": 547
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1 failed",
                  "raw": "\"#1 failed\"",
                  "start": 548,
                  "end": 559
                }
              ],
              "start": 531,
              "end": 560
            },
            "start": 525,
            "end": 560
          }
        ],
        "start": 474,
        "end": 562
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 570,
          "end": 571
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 580,
                  "end": 581
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "instatement",
                  "raw": "\"instatement\"",
                  "start": 586,
                  "end": 599
                },
                "start": 580,
                "end": 599
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 615,
                        "end": 627
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "#1: Exception === \"instatement\". Actual:  Exception ===",
                            "raw": "'#1: Exception === \"instatement\". Actual:  Exception ==='",
                            "start": 628,
                            "end": 685
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "e",
                            "start": 687,
                            "end": 688
                          },
                          "start": 628,
                          "end": 688
                        }
                      ],
                      "start": 611,
                      "end": 689
                    },
                    "start": 605,
                    "end": 690
                  }
                ],
                "start": 601,
                "end": 693
              },
              "alternate": null,
              "start": 576,
              "end": 693
            }
          ],
          "start": 573,
          "end": 695
        },
        "start": 563,
        "end": 695
      },
      "finalizer": null,
      "start": 470,
      "end": 695
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "Literal",
              "value": false,
              "raw": "false",
              "start": 879,
              "end": 884
            },
            "consequent": {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "ParenthesizedExpression",
                  "expression": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ThrowStatement",
                          "argument": {
                            "type": "Literal",
                            "value": "truebranch",
                            "raw": "\"truebranch\"",
                            "start": 904,
                            "end": 916
                          },
                          "start": 898,
                          "end": 916
                        }
                      ],
                      "start": 897,
                      "end": 917
                    },
                    "expression": false,
                    "start": 887,
                    "end": 917
                  },
                  "start": 886,
                  "end": 918
                },
                "arguments": [],
                "optional": false,
                "start": 886,
                "end": 920
              },
              "start": 886,
              "end": 921
            },
            "alternate": null,
            "start": 875,
            "end": 921
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "missbranch",
                          "raw": "\"missbranch\"",
                          "start": 940,
                          "end": 952
                        },
                        "start": 934,
                        "end": 952
                      }
                    ],
                    "start": 933,
                    "end": 953
                  },
                  "expression": false,
                  "start": 923,
                  "end": 953
                },
                "start": 922,
                "end": 954
              },
              "arguments": [],
              "optional": false,
              "start": 922,
              "end": 956
            },
            "start": 922,
            "end": 957
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 969,
                "end": 981
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2 failed",
                  "raw": "\"#2 failed\"",
                  "start": 982,
                  "end": 993
                }
              ],
              "start": 965,
              "end": 994
            },
            "start": 959,
            "end": 994
          }
        ],
        "start": 872,
        "end": 996
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1004,
          "end": 1005
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 1014,
                  "end": 1015
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "missbranch",
                  "raw": "\"missbranch\"",
                  "start": 1020,
                  "end": 1032
                },
                "start": 1014,
                "end": 1032
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 1048,
                        "end": 1060
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "#2: Exception === \"missbranch\". Actual:  Exception ===",
                            "raw": "'#2: Exception === \"missbranch\". Actual:  Exception ==='",
                            "start": 1061,
                            "end": 1117
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "e",
                            "start": 1119,
                            "end": 1120
                          },
                          "start": 1061,
                          "end": 1120
                        }
                      ],
                      "start": 1044,
                      "end": 1121
                    },
                    "start": 1038,
                    "end": 1122
                  }
                ],
                "start": 1034,
                "end": 1125
              },
              "alternate": null,
              "start": 1010,
              "end": 1125
            }
          ],
          "start": 1007,
          "end": 1127
        },
        "start": 997,
        "end": 1127
      },
      "finalizer": null,
      "start": 868,
      "end": 1127
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1210
}