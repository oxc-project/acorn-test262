{
  "type": "Program",
  "body": [
    {
      "type": "LabeledStatement",
      "label": {
        "type": "Identifier",
        "name": "FOR1",
        "start": 390,
        "end": 394
      },
      "body": {
        "type": "ForStatement",
        "init": {
          "type": "VariableDeclaration",
          "kind": "var",
          "declarations": [
            {
              "type": "VariableDeclarator",
              "id": {
                "type": "Identifier",
                "name": "i",
                "start": 405,
                "end": 406
              },
              "init": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 407,
                "end": 408
              },
              "start": 405,
              "end": 408
            }
          ],
          "start": 401,
          "end": 408
        },
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "Identifier",
            "name": "i",
            "start": 409,
            "end": 410
          },
          "operator": "<",
          "right": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 411,
            "end": 412
          },
          "start": 409,
          "end": 412
        },
        "update": {
          "type": "UpdateExpression",
          "operator": "++",
          "prefix": false,
          "argument": {
            "type": "Identifier",
            "name": "i",
            "start": 413,
            "end": 414
          },
          "start": 413,
          "end": 416
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "LabeledStatement",
              "label": {
                "type": "Identifier",
                "name": "FOR1NESTED",
                "start": 421,
                "end": 431
              },
              "body": {
                "type": "ForStatement",
                "init": {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "j",
                        "start": 442,
                        "end": 443
                      },
                      "init": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 444,
                        "end": 445
                      },
                      "start": 442,
                      "end": 445
                    }
                  ],
                  "start": 438,
                  "end": 445
                },
                "test": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Identifier",
                    "name": "j",
                    "start": 446,
                    "end": 447
                  },
                  "operator": "<",
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 448,
                    "end": 449
                  },
                  "start": 446,
                  "end": 449
                },
                "update": {
                  "type": "UpdateExpression",
                  "operator": "++",
                  "prefix": false,
                  "argument": {
                    "type": "Identifier",
                    "name": "j",
                    "start": 450,
                    "end": 451
                  },
                  "start": 450,
                  "end": 453
                },
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ContinueStatement",
                      "label": null,
                      "start": 461,
                      "end": 469
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "Identifier",
                        "name": "FOR1",
                        "start": 470,
                        "end": 474
                      },
                      "start": 470,
                      "end": 475
                    }
                  ],
                  "start": 455,
                  "end": 479
                },
                "start": 434,
                "end": 479
              },
              "start": 421,
              "end": 479
            },
            {
              "type": "WhileStatement",
              "test": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 486,
                "end": 487
              },
              "body": {
                "type": "EmptyStatement",
                "start": 488,
                "end": 489
              },
              "start": 480,
              "end": 489
            }
          ],
          "start": 417,
          "end": 491
        },
        "start": 397,
        "end": 491
      },
      "start": 390,
      "end": 491
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 493,
            "end": 499
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 500,
            "end": 509
          },
          "optional": false,
          "computed": false,
          "start": 493,
          "end": 509
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "j",
            "start": 510,
            "end": 511
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 513,
            "end": 514
          },
          {
            "type": "Literal",
            "value": "#1: Since LineTerminator(U-000A) between continue and Identifier not allowed continue evaluates without label",
            "raw": "'#1: Since LineTerminator(U-000A) between continue and Identifier not allowed continue evaluates without label'",
            "start": 516,
            "end": 627
          }
        ],
        "optional": false,
        "start": 493,
        "end": 628
      },
      "start": 493,
      "end": 629
    },
    {
      "type": "LabeledStatement",
      "label": {
        "type": "Identifier",
        "name": "FOR2",
        "start": 631,
        "end": 635
      },
      "body": {
        "type": "ForStatement",
        "init": {
          "type": "VariableDeclaration",
          "kind": "var",
          "declarations": [
            {
              "type": "VariableDeclarator",
              "id": {
                "type": "Identifier",
                "name": "i",
                "start": 646,
                "end": 647
              },
              "init": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 648,
                "end": 649
              },
              "start": 646,
              "end": 649
            }
          ],
          "start": 642,
          "end": 649
        },
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "Identifier",
            "name": "i",
            "start": 650,
            "end": 651
          },
          "operator": "<",
          "right": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 652,
            "end": 653
          },
          "start": 650,
          "end": 653
        },
        "update": {
          "type": "UpdateExpression",
          "operator": "++",
          "prefix": false,
          "argument": {
            "type": "Identifier",
            "name": "i",
            "start": 654,
            "end": 655
          },
          "start": 654,
          "end": 657
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "LabeledStatement",
              "label": {
                "type": "Identifier",
                "name": "FOR2NESTED",
                "start": 662,
                "end": 672
              },
              "body": {
                "type": "ForStatement",
                "init": {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "j",
                        "start": 683,
                        "end": 684
                      },
                      "init": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 685,
                        "end": 686
                      },
                      "start": 683,
                      "end": 686
                    }
                  ],
                  "start": 679,
                  "end": 686
                },
                "test": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Identifier",
                    "name": "j",
                    "start": 687,
                    "end": 688
                  },
                  "operator": "<",
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 689,
                    "end": 690
                  },
                  "start": 687,
                  "end": 690
                },
                "update": {
                  "type": "UpdateExpression",
                  "operator": "++",
                  "prefix": false,
                  "argument": {
                    "type": "Identifier",
                    "name": "j",
                    "start": 691,
                    "end": 692
                  },
                  "start": 691,
                  "end": 694
                },
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ContinueStatement",
                      "label": null,
                      "start": 702,
                      "end": 710
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "Identifier",
                        "name": "FOR2",
                        "start": 711,
                        "end": 715
                      },
                      "start": 711,
                      "end": 716
                    }
                  ],
                  "start": 696,
                  "end": 720
                },
                "start": 675,
                "end": 720
              },
              "start": 662,
              "end": 720
            },
            {
              "type": "WhileStatement",
              "test": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 727,
                "end": 728
              },
              "body": {
                "type": "EmptyStatement",
                "start": 729,
                "end": 730
              },
              "start": 721,
              "end": 730
            }
          ],
          "start": 658,
          "end": 732
        },
        "start": 638,
        "end": 732
      },
      "start": 631,
      "end": 732
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 734,
            "end": 740
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 741,
            "end": 750
          },
          "optional": false,
          "computed": false,
          "start": 734,
          "end": 750
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "j",
            "start": 751,
            "end": 752
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 754,
            "end": 755
          },
          {
            "type": "Literal",
            "value": "#2: Since LineTerminator(U-000D) between continue and Identifier not allowed continue evaluates without label",
            "raw": "'#2: Since LineTerminator(U-000D) between continue and Identifier not allowed continue evaluates without label'",
            "start": 757,
            "end": 868
          }
        ],
        "optional": false,
        "start": 734,
        "end": 869
      },
      "start": 734,
      "end": 870
    },
    {
      "type": "LabeledStatement",
      "label": {
        "type": "Identifier",
        "name": "FOR3",
        "start": 872,
        "end": 876
      },
      "body": {
        "type": "ForStatement",
        "init": {
          "type": "VariableDeclaration",
          "kind": "var",
          "declarations": [
            {
              "type": "VariableDeclarator",
              "id": {
                "type": "Identifier",
                "name": "i",
                "start": 887,
                "end": 888
              },
              "init": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 889,
                "end": 890
              },
              "start": 887,
              "end": 890
            }
          ],
          "start": 883,
          "end": 890
        },
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "Identifier",
            "name": "i",
            "start": 891,
            "end": 892
          },
          "operator": "<",
          "right": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 893,
            "end": 894
          },
          "start": 891,
          "end": 894
        },
        "update": {
          "type": "UpdateExpression",
          "operator": "++",
          "prefix": false,
          "argument": {
            "type": "Identifier",
            "name": "i",
            "start": 895,
            "end": 896
          },
          "start": 895,
          "end": 898
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "LabeledStatement",
              "label": {
                "type": "Identifier",
                "name": "FOR3NESTED",
                "start": 903,
                "end": 913
              },
              "body": {
                "type": "ForStatement",
                "init": {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "j",
                        "start": 924,
                        "end": 925
                      },
                      "init": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 926,
                        "end": 927
                      },
                      "start": 924,
                      "end": 927
                    }
                  ],
                  "start": 920,
                  "end": 927
                },
                "test": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Identifier",
                    "name": "j",
                    "start": 928,
                    "end": 929
                  },
                  "operator": "<",
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 930,
                    "end": 931
                  },
                  "start": 928,
                  "end": 931
                },
                "update": {
                  "type": "UpdateExpression",
                  "operator": "++",
                  "prefix": false,
                  "argument": {
                    "type": "Identifier",
                    "name": "j",
                    "start": 932,
                    "end": 933
                  },
                  "start": 932,
                  "end": 935
                },
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ContinueStatement",
                      "label": null,
                      "start": 943,
                      "end": 951
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "Identifier",
                        "name": "FOR3",
                        "start": 952,
                        "end": 956
                      },
                      "start": 952,
                      "end": 957
                    }
                  ],
                  "start": 937,
                  "end": 961
                },
                "start": 916,
                "end": 961
              },
              "start": 903,
              "end": 961
            },
            {
              "type": "WhileStatement",
              "test": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 968,
                "end": 969
              },
              "body": {
                "type": "EmptyStatement",
                "start": 970,
                "end": 971
              },
              "start": 962,
              "end": 971
            }
          ],
          "start": 899,
          "end": 973
        },
        "start": 879,
        "end": 973
      },
      "start": 872,
      "end": 973
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 974,
            "end": 980
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 981,
            "end": 990
          },
          "optional": false,
          "computed": false,
          "start": 974,
          "end": 990
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "j",
            "start": 991,
            "end": 992
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 994,
            "end": 995
          },
          {
            "type": "Literal",
            "value": "#3: Since LineTerminator(U-2028) between continue and Identifier not allowed continue evaluates without label",
            "raw": "'#3: Since LineTerminator(U-2028) between continue and Identifier not allowed continue evaluates without label'",
            "start": 997,
            "end": 1108
          }
        ],
        "optional": false,
        "start": 974,
        "end": 1109
      },
      "start": 974,
      "end": 1110
    },
    {
      "type": "LabeledStatement",
      "label": {
        "type": "Identifier",
        "name": "FOR4",
        "start": 1112,
        "end": 1116
      },
      "body": {
        "type": "ForStatement",
        "init": {
          "type": "VariableDeclaration",
          "kind": "var",
          "declarations": [
            {
              "type": "VariableDeclarator",
              "id": {
                "type": "Identifier",
                "name": "i",
                "start": 1127,
                "end": 1128
              },
              "init": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1129,
                "end": 1130
              },
              "start": 1127,
              "end": 1130
            }
          ],
          "start": 1123,
          "end": 1130
        },
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "Identifier",
            "name": "i",
            "start": 1131,
            "end": 1132
          },
          "operator": "<",
          "right": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1133,
            "end": 1134
          },
          "start": 1131,
          "end": 1134
        },
        "update": {
          "type": "UpdateExpression",
          "operator": "++",
          "prefix": false,
          "argument": {
            "type": "Identifier",
            "name": "i",
            "start": 1135,
            "end": 1136
          },
          "start": 1135,
          "end": 1138
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "LabeledStatement",
              "label": {
                "type": "Identifier",
                "name": "FOR4NESTED",
                "start": 1143,
                "end": 1153
              },
              "body": {
                "type": "ForStatement",
                "init": {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "j",
                        "start": 1164,
                        "end": 1165
                      },
                      "init": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1166,
                        "end": 1167
                      },
                      "start": 1164,
                      "end": 1167
                    }
                  ],
                  "start": 1160,
                  "end": 1167
                },
                "test": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Identifier",
                    "name": "j",
                    "start": 1168,
                    "end": 1169
                  },
                  "operator": "<",
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 1170,
                    "end": 1171
                  },
                  "start": 1168,
                  "end": 1171
                },
                "update": {
                  "type": "UpdateExpression",
                  "operator": "++",
                  "prefix": false,
                  "argument": {
                    "type": "Identifier",
                    "name": "j",
                    "start": 1172,
                    "end": 1173
                  },
                  "start": 1172,
                  "end": 1175
                },
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ContinueStatement",
                      "label": null,
                      "start": 1183,
                      "end": 1191
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "Identifier",
                        "name": "FOR4",
                        "start": 1192,
                        "end": 1196
                      },
                      "start": 1192,
                      "end": 1197
                    }
                  ],
                  "start": 1177,
                  "end": 1201
                },
                "start": 1156,
                "end": 1201
              },
              "start": 1143,
              "end": 1201
            },
            {
              "type": "WhileStatement",
              "test": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 1208,
                "end": 1209
              },
              "body": {
                "type": "EmptyStatement",
                "start": 1210,
                "end": 1211
              },
              "start": 1202,
              "end": 1211
            }
          ],
          "start": 1139,
          "end": 1213
        },
        "start": 1119,
        "end": 1213
      },
      "start": 1112,
      "end": 1213
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1215,
            "end": 1221
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1222,
            "end": 1231
          },
          "optional": false,
          "computed": false,
          "start": 1215,
          "end": 1231
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "j",
            "start": 1232,
            "end": 1233
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1235,
            "end": 1236
          },
          {
            "type": "Literal",
            "value": "#4: Since LineTerminator(U-2029) between continue and Identifier not allowed continue evaluates without label",
            "raw": "'#4: Since LineTerminator(U-2029) between continue and Identifier not allowed continue evaluates without label'",
            "start": 1238,
            "end": 1349
          }
        ],
        "optional": false,
        "start": 1215,
        "end": 1350
      },
      "start": 1215,
      "end": 1351
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1352
}