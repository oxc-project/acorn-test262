{
  "type": "Program",
  "body": [
    {
      "type": "ClassDeclaration",
      "decorators": [],
      "id": {
        "type": "Identifier",
        "name": "C",
        "start": 911,
        "end": 912
      },
      "superClass": null,
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "decorators": [],
            "key": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 922,
                "end": 927
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 930,
                "end": 931
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 934,
                "end": 935
              },
              "start": 922,
              "end": 935
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 952,
                      "end": 953
                    },
                    "start": 945,
                    "end": 954
                  }
                ],
                "start": 939,
                "end": 958
              },
              "expression": false,
              "start": 936,
              "end": 958
            },
            "kind": "get",
            "computed": true,
            "static": false,
            "start": 917,
            "end": 958
          },
          {
            "type": "MethodDefinition",
            "decorators": [],
            "key": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 967,
                "end": 972
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 975,
                "end": 976
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 979,
                "end": 980
              },
              "start": 967,
              "end": 980
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "v",
                  "start": 982,
                  "end": 983
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 998,
                      "end": 999
                    },
                    "start": 991,
                    "end": 1000
                  }
                ],
                "start": 985,
                "end": 1004
              },
              "expression": false,
              "start": 981,
              "end": 1004
            },
            "kind": "set",
            "computed": true,
            "static": false,
            "start": 962,
            "end": 1004
          },
          {
            "type": "MethodDefinition",
            "decorators": [],
            "key": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1020,
                "end": 1025
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1028,
                "end": 1029
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1032,
                "end": 1033
              },
              "start": 1020,
              "end": 1033
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1050,
                      "end": 1051
                    },
                    "start": 1043,
                    "end": 1052
                  }
                ],
                "start": 1037,
                "end": 1056
              },
              "expression": false,
              "start": 1034,
              "end": 1056
            },
            "kind": "get",
            "computed": true,
            "static": true,
            "start": 1008,
            "end": 1056
          },
          {
            "type": "MethodDefinition",
            "decorators": [],
            "key": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1072,
                "end": 1077
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1080,
                "end": 1081
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1084,
                "end": 1085
              },
              "start": 1072,
              "end": 1085
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "v",
                  "start": 1087,
                  "end": 1088
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1103,
                      "end": 1104
                    },
                    "start": 1096,
                    "end": 1105
                  }
                ],
                "start": 1090,
                "end": 1109
              },
              "expression": false,
              "start": 1086,
              "end": 1109
            },
            "kind": "set",
            "computed": true,
            "static": true,
            "start": 1060,
            "end": 1109
          }
        ],
        "start": 913,
        "end": 1111
      },
      "start": 905,
      "end": 1111
    },
    {
      "type": "EmptyStatement",
      "start": 1111,
      "end": 1112
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c",
            "start": 1118,
            "end": 1119
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "C",
              "start": 1126,
              "end": 1127
            },
            "arguments": [],
            "start": 1122,
            "end": 1129
          },
          "start": 1118,
          "end": 1129
        }
      ],
      "start": 1114,
      "end": 1130
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1132,
            "end": 1138
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1139,
            "end": 1148
          },
          "optional": false,
          "computed": false,
          "start": 1132,
          "end": 1148
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "c",
              "start": 1152,
              "end": 1153
            },
            "property": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1154,
                "end": 1159
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1162,
                "end": 1163
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1166,
                "end": 1167
              },
              "start": 1154,
              "end": 1167
            },
            "optional": false,
            "computed": true,
            "start": 1152,
            "end": 1168
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1172,
            "end": 1173
          }
        ],
        "optional": false,
        "start": 1132,
        "end": 1175
      },
      "start": 1132,
      "end": 1176
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1177,
            "end": 1183
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1184,
            "end": 1193
          },
          "optional": false,
          "computed": false,
          "start": 1177,
          "end": 1193
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1197,
                "end": 1198
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1199,
                  "end": 1204
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1207,
                  "end": 1208
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1211,
                  "end": 1212
                },
                "start": 1199,
                "end": 1212
              },
              "optional": false,
              "computed": true,
              "start": 1197,
              "end": 1213
            },
            "right": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1216,
              "end": 1217
            },
            "start": 1197,
            "end": 1217
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1221,
            "end": 1222
          }
        ],
        "optional": false,
        "start": 1177,
        "end": 1224
      },
      "start": 1177,
      "end": 1225
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1227,
            "end": 1233
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1234,
            "end": 1243
          },
          "optional": false,
          "computed": false,
          "start": 1227,
          "end": 1243
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "C",
              "start": 1247,
              "end": 1248
            },
            "property": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1249,
                "end": 1254
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1257,
                "end": 1258
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1261,
                "end": 1262
              },
              "start": 1249,
              "end": 1262
            },
            "optional": false,
            "computed": true,
            "start": 1247,
            "end": 1263
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1267,
            "end": 1268
          }
        ],
        "optional": false,
        "start": 1227,
        "end": 1270
      },
      "start": 1227,
      "end": 1271
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1272,
            "end": 1278
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1279,
            "end": 1288
          },
          "optional": false,
          "computed": false,
          "start": 1272,
          "end": 1288
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1292,
                "end": 1293
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1294,
                  "end": 1299
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1302,
                  "end": 1303
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1306,
                  "end": 1307
                },
                "start": 1294,
                "end": 1307
              },
              "optional": false,
              "computed": true,
              "start": 1292,
              "end": 1308
            },
            "right": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1311,
              "end": 1312
            },
            "start": 1292,
            "end": 1312
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1316,
            "end": 1317
          }
        ],
        "optional": false,
        "start": 1272,
        "end": 1319
      },
      "start": 1272,
      "end": 1320
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1321,
            "end": 1327
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1328,
            "end": 1337
          },
          "optional": false,
          "computed": false,
          "start": 1321,
          "end": 1337
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "c",
              "start": 1341,
              "end": 1342
            },
            "property": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1343,
                "end": 1349
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "Literal",
                    "value": false,
                    "raw": "false",
                    "start": 1350,
                    "end": 1355
                  },
                  "consequent": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1358,
                    "end": 1359
                  },
                  "alternate": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 1362,
                    "end": 1363
                  },
                  "start": 1350,
                  "end": 1363
                }
              ],
              "optional": false,
              "start": 1343,
              "end": 1364
            },
            "optional": false,
            "computed": true,
            "start": 1341,
            "end": 1365
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1369,
            "end": 1370
          }
        ],
        "optional": false,
        "start": 1321,
        "end": 1372
      },
      "start": 1321,
      "end": 1373
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1374,
            "end": 1380
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1381,
            "end": 1390
          },
          "optional": false,
          "computed": false,
          "start": 1374,
          "end": 1390
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1394,
                "end": 1395
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1396,
                  "end": 1402
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 1403,
                      "end": 1408
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1411,
                      "end": 1412
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1415,
                      "end": 1416
                    },
                    "start": 1403,
                    "end": 1416
                  }
                ],
                "optional": false,
                "start": 1396,
                "end": 1417
              },
              "optional": false,
              "computed": true,
              "start": 1394,
              "end": 1418
            },
            "right": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1421,
              "end": 1422
            },
            "start": 1394,
            "end": 1422
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1426,
            "end": 1427
          }
        ],
        "optional": false,
        "start": 1374,
        "end": 1429
      },
      "start": 1374,
      "end": 1430
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1432,
            "end": 1438
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1439,
            "end": 1448
          },
          "optional": false,
          "computed": false,
          "start": 1432,
          "end": 1448
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "C",
              "start": 1452,
              "end": 1453
            },
            "property": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1454,
                "end": 1460
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "Literal",
                    "value": false,
                    "raw": "false",
                    "start": 1461,
                    "end": 1466
                  },
                  "consequent": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1469,
                    "end": 1470
                  },
                  "alternate": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 1473,
                    "end": 1474
                  },
                  "start": 1461,
                  "end": 1474
                }
              ],
              "optional": false,
              "start": 1454,
              "end": 1475
            },
            "optional": false,
            "computed": true,
            "start": 1452,
            "end": 1476
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1480,
            "end": 1481
          }
        ],
        "optional": false,
        "start": 1432,
        "end": 1483
      },
      "start": 1432,
      "end": 1484
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1485,
            "end": 1491
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1492,
            "end": 1501
          },
          "optional": false,
          "computed": false,
          "start": 1485,
          "end": 1501
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1505,
                "end": 1506
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1507,
                  "end": 1513
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 1514,
                      "end": 1519
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1522,
                      "end": 1523
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1526,
                      "end": 1527
                    },
                    "start": 1514,
                    "end": 1527
                  }
                ],
                "optional": false,
                "start": 1507,
                "end": 1528
              },
              "optional": false,
              "computed": true,
              "start": 1505,
              "end": 1529
            },
            "right": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 1532,
              "end": 1533
            },
            "start": 1505,
            "end": 1533
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1537,
            "end": 1538
          }
        ],
        "optional": false,
        "start": 1485,
        "end": 1540
      },
      "start": 1485,
      "end": 1541
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1542
}