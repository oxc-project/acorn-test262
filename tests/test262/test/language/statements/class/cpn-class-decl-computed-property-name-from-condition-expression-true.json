{
  "type": "Program",
  "body": [
    {
      "type": "ClassDeclaration",
      "decorators": [],
      "id": {
        "type": "Identifier",
        "name": "C",
        "start": 900,
        "end": 901
      },
      "superClass": null,
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "decorators": [],
            "key": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 907,
                "end": 911
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 914,
                "end": 915
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 918,
                "end": 919
              },
              "start": 907,
              "end": 919
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 936,
                      "end": 937
                    },
                    "start": 929,
                    "end": 938
                  }
                ],
                "start": 923,
                "end": 942
              },
              "expression": false,
              "start": 920,
              "end": 942
            },
            "kind": "method",
            "computed": true,
            "static": false,
            "start": 906,
            "end": 942
          },
          {
            "type": "MethodDefinition",
            "decorators": [],
            "key": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 953,
                "end": 957
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 960,
                "end": 961
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 964,
                "end": 965
              },
              "start": 953,
              "end": 965
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 982,
                      "end": 983
                    },
                    "start": 975,
                    "end": 984
                  }
                ],
                "start": 969,
                "end": 988
              },
              "expression": false,
              "start": 966,
              "end": 988
            },
            "kind": "method",
            "computed": true,
            "static": true,
            "start": 945,
            "end": 988
          }
        ],
        "start": 902,
        "end": 990
      },
      "start": 894,
      "end": 990
    },
    {
      "type": "EmptyStatement",
      "start": 990,
      "end": 991
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c",
            "start": 997,
            "end": 998
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "C",
              "start": 1005,
              "end": 1006
            },
            "arguments": [],
            "start": 1001,
            "end": 1008
          },
          "start": 997,
          "end": 1008
        }
      ],
      "start": 993,
      "end": 1009
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1011,
            "end": 1017
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1018,
            "end": 1027
          },
          "optional": false,
          "computed": false,
          "start": 1011,
          "end": 1027
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1031,
                "end": 1032
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1033,
                  "end": 1037
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1040,
                  "end": 1041
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1044,
                  "end": 1045
                },
                "start": 1033,
                "end": 1045
              },
              "optional": false,
              "computed": true,
              "start": 1031,
              "end": 1046
            },
            "arguments": [],
            "optional": false,
            "start": 1031,
            "end": 1048
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1052,
            "end": 1053
          }
        ],
        "optional": false,
        "start": 1011,
        "end": 1055
      },
      "start": 1011,
      "end": 1056
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1057,
            "end": 1063
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1064,
            "end": 1073
          },
          "optional": false,
          "computed": false,
          "start": 1057,
          "end": 1073
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1077,
                "end": 1078
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1079,
                  "end": 1083
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1086,
                  "end": 1087
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1090,
                  "end": 1091
                },
                "start": 1079,
                "end": 1091
              },
              "optional": false,
              "computed": true,
              "start": 1077,
              "end": 1092
            },
            "arguments": [],
            "optional": false,
            "start": 1077,
            "end": 1094
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1098,
            "end": 1099
          }
        ],
        "optional": false,
        "start": 1057,
        "end": 1101
      },
      "start": 1057,
      "end": 1102
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1103,
            "end": 1109
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1110,
            "end": 1119
          },
          "optional": false,
          "computed": false,
          "start": 1103,
          "end": 1119
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1123,
                "end": 1124
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1125,
                  "end": 1131
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 1132,
                      "end": 1136
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1139,
                      "end": 1140
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1143,
                      "end": 1144
                    },
                    "start": 1132,
                    "end": 1144
                  }
                ],
                "optional": false,
                "start": 1125,
                "end": 1145
              },
              "optional": false,
              "computed": true,
              "start": 1123,
              "end": 1146
            },
            "arguments": [],
            "optional": false,
            "start": 1123,
            "end": 1148
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1152,
            "end": 1153
          }
        ],
        "optional": false,
        "start": 1103,
        "end": 1155
      },
      "start": 1103,
      "end": 1156
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1157,
            "end": 1163
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1164,
            "end": 1173
          },
          "optional": false,
          "computed": false,
          "start": 1157,
          "end": 1173
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1177,
                "end": 1178
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1179,
                  "end": 1185
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 1186,
                      "end": 1190
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1193,
                      "end": 1194
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1197,
                      "end": 1198
                    },
                    "start": 1186,
                    "end": 1198
                  }
                ],
                "optional": false,
                "start": 1179,
                "end": 1199
              },
              "optional": false,
              "computed": true,
              "start": 1177,
              "end": 1200
            },
            "arguments": [],
            "optional": false,
            "start": 1177,
            "end": 1202
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1206,
            "end": 1207
          }
        ],
        "optional": false,
        "start": 1157,
        "end": 1209
      },
      "start": 1157,
      "end": 1210
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1211
}