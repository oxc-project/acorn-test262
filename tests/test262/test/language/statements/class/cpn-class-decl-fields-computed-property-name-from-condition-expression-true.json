{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "C",
            "start": 953,
            "end": 954
          },
          "init": {
            "type": "ClassExpression",
            "decorators": [],
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "body": [
                {
                  "type": "PropertyDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 968,
                      "end": 972
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 975,
                      "end": 976
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 979,
                      "end": 980
                    },
                    "start": 968,
                    "end": 980
                  },
                  "value": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 984,
                    "end": 985
                  },
                  "computed": true,
                  "static": false,
                  "start": 967,
                  "end": 986
                },
                {
                  "type": "PropertyDefinition",
                  "decorators": [],
                  "key": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 998,
                      "end": 1002
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1005,
                      "end": 1006
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1009,
                      "end": 1010
                    },
                    "start": 998,
                    "end": 1010
                  },
                  "value": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 1014,
                    "end": 1015
                  },
                  "computed": true,
                  "static": true,
                  "start": 990,
                  "end": 1016
                }
              ],
              "start": 963,
              "end": 1018
            },
            "start": 957,
            "end": 1018
          },
          "start": 953,
          "end": 1018
        }
      ],
      "start": 949,
      "end": 1019
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c",
            "start": 1025,
            "end": 1026
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "C",
              "start": 1033,
              "end": 1034
            },
            "arguments": [],
            "start": 1029,
            "end": 1036
          },
          "start": 1025,
          "end": 1036
        }
      ],
      "start": 1021,
      "end": 1037
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1039,
            "end": 1045
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1046,
            "end": 1055
          },
          "optional": false,
          "computed": false,
          "start": 1039,
          "end": 1055
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "c",
              "start": 1059,
              "end": 1060
            },
            "property": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 1061,
                "end": 1065
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1068,
                "end": 1069
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1072,
                "end": 1073
              },
              "start": 1061,
              "end": 1073
            },
            "optional": false,
            "computed": true,
            "start": 1059,
            "end": 1074
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1078,
            "end": 1079
          }
        ],
        "optional": false,
        "start": 1039,
        "end": 1081
      },
      "start": 1039,
      "end": 1082
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1083,
            "end": 1089
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1090,
            "end": 1099
          },
          "optional": false,
          "computed": false,
          "start": 1083,
          "end": 1099
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "C",
              "start": 1103,
              "end": 1104
            },
            "property": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": true,
                "raw": "true",
                "start": 1105,
                "end": 1109
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1112,
                "end": 1113
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 1116,
                "end": 1117
              },
              "start": 1105,
              "end": 1117
            },
            "optional": false,
            "computed": true,
            "start": 1103,
            "end": 1118
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1122,
            "end": 1123
          }
        ],
        "optional": false,
        "start": 1083,
        "end": 1125
      },
      "start": 1083,
      "end": 1126
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1127,
            "end": 1133
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1134,
            "end": 1143
          },
          "optional": false,
          "computed": false,
          "start": 1127,
          "end": 1143
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "c",
              "start": 1147,
              "end": 1148
            },
            "property": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1149,
                "end": 1155
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 1156,
                    "end": 1160
                  },
                  "consequent": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1163,
                    "end": 1164
                  },
                  "alternate": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 1167,
                    "end": 1168
                  },
                  "start": 1156,
                  "end": 1168
                }
              ],
              "optional": false,
              "start": 1149,
              "end": 1169
            },
            "optional": false,
            "computed": true,
            "start": 1147,
            "end": 1170
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1174,
            "end": 1175
          }
        ],
        "optional": false,
        "start": 1127,
        "end": 1177
      },
      "start": 1127,
      "end": 1178
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1179,
            "end": 1185
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1186,
            "end": 1195
          },
          "optional": false,
          "computed": false,
          "start": 1179,
          "end": 1195
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "C",
              "start": 1199,
              "end": 1200
            },
            "property": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "String",
                "start": 1201,
                "end": 1207
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "Literal",
                    "value": true,
                    "raw": "true",
                    "start": 1208,
                    "end": 1212
                  },
                  "consequent": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1215,
                    "end": 1216
                  },
                  "alternate": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 1219,
                    "end": 1220
                  },
                  "start": 1208,
                  "end": 1220
                }
              ],
              "optional": false,
              "start": 1201,
              "end": 1221
            },
            "optional": false,
            "computed": true,
            "start": 1199,
            "end": 1222
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1226,
            "end": 1227
          }
        ],
        "optional": false,
        "start": 1179,
        "end": 1229
      },
      "start": 1179,
      "end": 1230
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1231
}