{
  "type": "Program",
  "start": 0,
  "end": 1271,
  "body": [
    {
      "type": "ClassDeclaration",
      "start": 1017,
      "end": 1135,
      "decorators": [],
      "id": {
        "type": "Identifier",
        "start": 1023,
        "end": 1024,
        "name": "C"
      },
      "superClass": null,
      "body": {
        "type": "ClassBody",
        "start": 1025,
        "end": 1135,
        "body": [
          {
            "type": "MethodDefinition",
            "start": 1029,
            "end": 1080,
            "decorators": [],
            "key": {
              "type": "PrivateIdentifier",
              "start": 1040,
              "end": 1042,
              "name": "f"
            },
            "value": {
              "type": "FunctionExpression",
              "start": 1042,
              "end": 1080,
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1045,
                "end": 1080,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 1051,
                    "end": 1076,
                    "argument": {
                      "type": "NewExpression",
                      "start": 1057,
                      "end": 1075,
                      "callee": {
                        "type": "Identifier",
                        "start": 1061,
                        "end": 1073,
                        "name": "Test262Error"
                      },
                      "arguments": []
                    }
                  }
                ]
              },
              "expression": false
            },
            "kind": "get",
            "computed": false,
            "static": true
          },
          {
            "type": "MethodDefinition",
            "start": 1084,
            "end": 1133,
            "decorators": [],
            "key": {
              "type": "Identifier",
              "start": 1091,
              "end": 1100,
              "name": "setAccess"
            },
            "value": {
              "type": "FunctionExpression",
              "start": 1100,
              "end": 1133,
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1103,
                "end": 1133,
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "start": 1109,
                    "end": 1129,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1109,
                      "end": 1128,
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "start": 1109,
                        "end": 1116,
                        "object": {
                          "type": "ThisExpression",
                          "start": 1109,
                          "end": 1113
                        },
                        "property": {
                          "type": "PrivateIdentifier",
                          "start": 1114,
                          "end": 1116,
                          "name": "f"
                        },
                        "optional": false,
                        "computed": false
                      },
                      "right": {
                        "type": "Literal",
                        "start": 1119,
                        "end": 1128,
                        "value": "Test262",
                        "raw": "'Test262'"
                      }
                    }
                  }
                ]
              },
              "expression": false
            },
            "kind": "method",
            "computed": false,
            "static": true
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1137,
      "end": 1270,
      "expression": {
        "type": "CallExpression",
        "start": 1137,
        "end": 1269,
        "callee": {
          "type": "MemberExpression",
          "start": 1137,
          "end": 1150,
          "object": {
            "type": "Identifier",
            "start": 1137,
            "end": 1143,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1144,
            "end": 1150,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1151,
            "end": 1160,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1162,
            "end": 1193,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1173,
              "end": 1193,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1177,
                  "end": 1191,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1177,
                    "end": 1190,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1177,
                      "end": 1188,
                      "object": {
                        "type": "Identifier",
                        "start": 1177,
                        "end": 1178,
                        "name": "C"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1179,
                        "end": 1188,
                        "name": "setAccess"
                      },
                      "optional": false,
                      "computed": false
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          },
          {
            "type": "Literal",
            "start": 1195,
            "end": 1268,
            "value": "set operation on private accessor without setter should throw TypeError",
            "raw": "'set operation on private accessor without setter should throw TypeError'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}