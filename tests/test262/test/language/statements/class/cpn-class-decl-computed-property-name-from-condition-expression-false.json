{
  "type": "Program",
  "body": [
    {
      "type": "ClassDeclaration",
      "decorators": [],
      "id": {
        "type": "Identifier",
        "name": "C",
        "start": 901,
        "end": 902
      },
      "superClass": null,
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "decorators": [],
            "key": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 908,
                "end": 913
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 916,
                "end": 917
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 920,
                "end": 921
              },
              "start": 908,
              "end": 921
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 938,
                      "end": 939
                    },
                    "start": 931,
                    "end": 940
                  }
                ],
                "start": 925,
                "end": 944
              },
              "expression": false,
              "start": 922,
              "end": 944
            },
            "kind": "method",
            "computed": true,
            "static": false,
            "start": 907,
            "end": 944
          },
          {
            "type": "MethodDefinition",
            "decorators": [],
            "key": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 955,
                "end": 960
              },
              "consequent": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 963,
                "end": 964
              },
              "alternate": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 967,
                "end": 968
              },
              "start": 955,
              "end": 968
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 985,
                      "end": 986
                    },
                    "start": 978,
                    "end": 987
                  }
                ],
                "start": 972,
                "end": 991
              },
              "expression": false,
              "start": 969,
              "end": 991
            },
            "kind": "method",
            "computed": true,
            "static": true,
            "start": 947,
            "end": 991
          }
        ],
        "start": 903,
        "end": 993
      },
      "start": 895,
      "end": 993
    },
    {
      "type": "EmptyStatement",
      "start": 993,
      "end": 994
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c",
            "start": 1000,
            "end": 1001
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "C",
              "start": 1008,
              "end": 1009
            },
            "arguments": [],
            "start": 1004,
            "end": 1011
          },
          "start": 1000,
          "end": 1011
        }
      ],
      "start": 996,
      "end": 1012
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1014,
            "end": 1020
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1021,
            "end": 1030
          },
          "optional": false,
          "computed": false,
          "start": 1014,
          "end": 1030
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1034,
                "end": 1035
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1036,
                  "end": 1041
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1044,
                  "end": 1045
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1048,
                  "end": 1049
                },
                "start": 1036,
                "end": 1049
              },
              "optional": false,
              "computed": true,
              "start": 1034,
              "end": 1050
            },
            "arguments": [],
            "optional": false,
            "start": 1034,
            "end": 1052
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1056,
            "end": 1057
          }
        ],
        "optional": false,
        "start": 1014,
        "end": 1059
      },
      "start": 1014,
      "end": 1060
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1061,
            "end": 1067
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1068,
            "end": 1077
          },
          "optional": false,
          "computed": false,
          "start": 1061,
          "end": 1077
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1081,
                "end": 1082
              },
              "property": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1083,
                  "end": 1088
                },
                "consequent": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1091,
                  "end": 1092
                },
                "alternate": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 1095,
                  "end": 1096
                },
                "start": 1083,
                "end": 1096
              },
              "optional": false,
              "computed": true,
              "start": 1081,
              "end": 1097
            },
            "arguments": [],
            "optional": false,
            "start": 1081,
            "end": 1099
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1103,
            "end": 1104
          }
        ],
        "optional": false,
        "start": 1061,
        "end": 1106
      },
      "start": 1061,
      "end": 1107
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1108,
            "end": 1114
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1115,
            "end": 1124
          },
          "optional": false,
          "computed": false,
          "start": 1108,
          "end": 1124
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "c",
                "start": 1128,
                "end": 1129
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1130,
                  "end": 1136
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 1137,
                      "end": 1142
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1145,
                      "end": 1146
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1149,
                      "end": 1150
                    },
                    "start": 1137,
                    "end": 1150
                  }
                ],
                "optional": false,
                "start": 1130,
                "end": 1151
              },
              "optional": false,
              "computed": true,
              "start": 1128,
              "end": 1152
            },
            "arguments": [],
            "optional": false,
            "start": 1128,
            "end": 1154
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1158,
            "end": 1159
          }
        ],
        "optional": false,
        "start": 1108,
        "end": 1161
      },
      "start": 1108,
      "end": 1162
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1163,
            "end": 1169
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1170,
            "end": 1179
          },
          "optional": false,
          "computed": false,
          "start": 1163,
          "end": 1179
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "C",
                "start": 1183,
                "end": 1184
              },
              "property": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 1185,
                  "end": 1191
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 1192,
                      "end": 1197
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1200,
                      "end": 1201
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 1204,
                      "end": 1205
                    },
                    "start": 1192,
                    "end": 1205
                  }
                ],
                "optional": false,
                "start": 1185,
                "end": 1206
              },
              "optional": false,
              "computed": true,
              "start": 1183,
              "end": 1207
            },
            "arguments": [],
            "optional": false,
            "start": 1183,
            "end": 1209
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1213,
            "end": 1214
          }
        ],
        "optional": false,
        "start": 1163,
        "end": 1216
      },
      "start": 1163,
      "end": 1217
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1218
}