{
  "type": "Program",
  "start": 0,
  "end": 760,
  "body": [
    {
      "type": "TryStatement",
      "start": 374,
      "end": 570,
      "block": {
        "type": "BlockStatement",
        "start": 378,
        "end": 512,
        "body": [
          {
            "type": "WhileStatement",
            "start": 381,
            "end": 434,
            "test": {
              "type": "BinaryExpression",
              "start": 387,
              "end": 391,
              "left": {
                "type": "Identifier",
                "start": 387,
                "end": 388,
                "name": "x"
              },
              "operator": "!=",
              "right": {
                "type": "Literal",
                "start": 390,
                "end": 391,
                "value": 1,
                "raw": "1"
              }
            },
            "body": {
              "type": "BlockStatement",
              "start": 393,
              "end": 434,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 400,
                  "end": 410,
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 404,
                      "end": 409,
                      "id": {
                        "type": "Identifier",
                        "start": 404,
                        "end": 405,
                        "name": "x"
                      },
                      "init": {
                        "type": "Literal",
                        "start": 408,
                        "end": 409,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "start": 417,
                  "end": 431,
                  "expression": {
                    "type": "Identifier",
                    "start": 417,
                    "end": 430,
                    "name": "abaracadabara"
                  }
                }
              ]
            }
          },
          {
            "type": "EmptyStatement",
            "start": 434,
            "end": 435
          },
          {
            "type": "ThrowStatement",
            "start": 437,
            "end": 509,
            "argument": {
              "type": "NewExpression",
              "start": 443,
              "end": 508,
              "callee": {
                "type": "Identifier",
                "start": 447,
                "end": 459,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 460,
                  "end": 507,
                  "value": "#1: \"abbracadabra\" lead to throwing exception",
                  "raw": "'#1: \"abbracadabra\" lead to throwing exception'"
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 513,
        "end": 570,
        "param": {
          "type": "Identifier",
          "start": 520,
          "end": 521,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 523,
          "end": 570,
          "body": [
            {
              "type": "IfStatement",
              "start": 529,
              "end": 568,
              "test": {
                "type": "BinaryExpression",
                "start": 533,
                "end": 558,
                "left": {
                  "type": "Identifier",
                  "start": 533,
                  "end": 534,
                  "name": "e"
                },
                "operator": "instanceof",
                "right": {
                  "type": "Identifier",
                  "start": 546,
                  "end": 558,
                  "name": "Test262Error"
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 560,
                "end": 568,
                "argument": {
                  "type": "Identifier",
                  "start": 566,
                  "end": 567,
                  "name": "e"
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "IfStatement",
      "start": 572,
      "end": 677,
      "test": {
        "type": "BinaryExpression",
        "start": 576,
        "end": 583,
        "left": {
          "type": "Identifier",
          "start": 576,
          "end": 577,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 582,
          "end": 583,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 585,
        "end": 677,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 588,
            "end": 675,
            "argument": {
              "type": "NewExpression",
              "start": 594,
              "end": 674,
              "callee": {
                "type": "Identifier",
                "start": 598,
                "end": 610,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 611,
                  "end": 673,
                  "value": "#1.1: while statement evaluates as is, without syntax checks",
                  "raw": "'#1.1: while statement evaluates as is, without syntax checks'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}