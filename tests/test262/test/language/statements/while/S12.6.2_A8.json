{
  "type": "Program",
  "start": 0,
  "end": 998,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 258,
      "end": 274,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 262,
          "end": 273,
          "id": {
            "type": "Identifier",
            "start": 262,
            "end": 273,
            "name": "__evaluated"
          },
          "init": null
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 275,
      "end": 305,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 279,
          "end": 294,
          "id": {
            "type": "Identifier",
            "start": 279,
            "end": 290,
            "name": "__condition"
          },
          "init": {
            "type": "Literal",
            "start": 293,
            "end": 294,
            "value": 0,
            "raw": "0"
          }
        },
        {
          "type": "VariableDeclarator",
          "start": 296,
          "end": 304,
          "id": {
            "type": "Identifier",
            "start": 296,
            "end": 302,
            "name": "__odds"
          },
          "init": {
            "type": "Literal",
            "start": 303,
            "end": 304,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 307,
      "end": 437,
      "expression": {
        "type": "AssignmentExpression",
        "start": 307,
        "end": 436,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 307,
          "end": 318,
          "name": "__evaluated"
        },
        "right": {
          "type": "CallExpression",
          "start": 321,
          "end": 436,
          "callee": {
            "type": "Identifier",
            "start": 321,
            "end": 325,
            "name": "eval"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 326,
              "end": 435,
              "value": "while(__condition < 10) { __condition++; if (((''+__condition/2).split('.')).length>1) continue; __odds++;}",
              "raw": "\"while(__condition < 10) { __condition++; if (((''+__condition/2).split('.')).length>1) continue; __odds++;}\""
            }
          ],
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 528,
      "end": 625,
      "test": {
        "type": "BinaryExpression",
        "start": 532,
        "end": 544,
        "left": {
          "type": "Identifier",
          "start": 532,
          "end": 538,
          "name": "__odds"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 543,
          "end": 544,
          "value": 5,
          "raw": "5"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 546,
        "end": 625,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 549,
            "end": 623,
            "argument": {
              "type": "NewExpression",
              "start": 555,
              "end": 622,
              "callee": {
                "type": "Identifier",
                "start": 559,
                "end": 571,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 572,
                  "end": 619,
                  "left": {
                    "type": "Literal",
                    "start": 572,
                    "end": 611,
                    "value": "#1: __odds === 5. Actual:  __odds ===",
                    "raw": "'#1: __odds === 5. Actual:  __odds ==='"
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 613,
                    "end": 619,
                    "name": "__odds"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 798,
      "end": 915,
      "test": {
        "type": "BinaryExpression",
        "start": 802,
        "end": 819,
        "left": {
          "type": "Identifier",
          "start": 802,
          "end": 813,
          "name": "__evaluated"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 818,
          "end": 819,
          "value": 4,
          "raw": "4"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 821,
        "end": 915,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 824,
            "end": 913,
            "argument": {
              "type": "NewExpression",
              "start": 830,
              "end": 912,
              "callee": {
                "type": "Identifier",
                "start": 834,
                "end": 846,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 847,
                  "end": 909,
                  "left": {
                    "type": "Literal",
                    "start": 847,
                    "end": 896,
                    "value": "#2: __evaluated === 4. Actual:  __evaluated ===",
                    "raw": "'#2: __evaluated === 4. Actual:  __evaluated ==='"
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 898,
                    "end": 909,
                    "name": "__evaluated"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}