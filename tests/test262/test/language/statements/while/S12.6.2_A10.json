{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "check",
            "start": 365,
            "end": 370
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 371,
            "end": 372
          },
          "start": 365,
          "end": 372
        }
      ],
      "start": 361,
      "end": 373
    },
    {
      "type": "WhileStatement",
      "test": {
        "type": "FunctionExpression",
        "id": {
          "type": "Identifier",
          "name": "f",
          "start": 389,
          "end": 390
        },
        "generator": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [],
          "start": 392,
          "end": 394
        },
        "expression": false,
        "start": 380,
        "end": 394
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "typeof",
                "argument": {
                  "type": "ParenthesizedExpression",
                  "expression": {
                    "type": "Identifier",
                    "name": "f",
                    "start": 413,
                    "end": 414
                  },
                  "start": 412,
                  "end": 415
                },
                "prefix": true,
                "start": 406,
                "end": 415
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "value": "function",
                "raw": "\"function\"",
                "start": 420,
                "end": 430
              },
              "start": 406,
              "end": 430
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "check",
                      "start": 438,
                      "end": 443
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 447,
                        "end": 448
                      },
                      "prefix": true,
                      "start": 446,
                      "end": 448
                    },
                    "start": 438,
                    "end": 448
                  },
                  "start": 438,
                  "end": 449
                },
                {
                  "type": "BreakStatement",
                  "label": null,
                  "start": 454,
                  "end": 460
                }
              ],
              "start": 432,
              "end": 465
            },
            "alternate": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "check",
                      "start": 477,
                      "end": 482
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 485,
                      "end": 486
                    },
                    "start": 477,
                    "end": 486
                  },
                  "start": 477,
                  "end": 487
                },
                {
                  "type": "BreakStatement",
                  "label": null,
                  "start": 492,
                  "end": 498
                }
              ],
              "start": 471,
              "end": 503
            },
            "start": 403,
            "end": 503
          }
        ],
        "start": 395,
        "end": 505
      },
      "start": 374,
      "end": 505
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "check",
          "start": 600,
          "end": 605
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 610,
          "end": 611
        },
        "start": 600,
        "end": 611
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 626,
                "end": 638
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: FunctionExpression inside while construction expression allowed but function not declare",
                  "raw": "'#1: FunctionExpression inside while construction expression allowed but function not declare'",
                  "start": 639,
                  "end": 733
                }
              ],
              "start": 622,
              "end": 734
            },
            "start": 616,
            "end": 735
          }
        ],
        "start": 613,
        "end": 737
      },
      "alternate": null,
      "start": 596,
      "end": 737
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 820
}