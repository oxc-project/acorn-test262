{
  "type": "Program",
  "body": [
    {
      "type": "LabeledStatement",
      "label": {
        "type": "Identifier",
        "name": "do_out",
        "start": 341,
        "end": 347
      },
      "body": {
        "type": "WhileStatement",
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 356,
            "end": 357
          },
          "operator": "===",
          "right": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 360,
            "end": 361
          },
          "start": 356,
          "end": 361
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "Identifier",
                "name": "__in__do__before__break",
                "start": 373,
                "end": 396
              },
              "consequent": {
                "type": "BreakStatement",
                "label": null,
                "start": 398,
                "end": 404
              },
              "alternate": null,
              "start": 369,
              "end": 404
            },
            {
              "type": "VariableDeclaration",
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "__in__do__before__break",
                    "start": 413,
                    "end": 436
                  },
                  "init": {
                    "type": "Literal",
                    "value": "black",
                    "raw": "\"black\"",
                    "start": 437,
                    "end": 444
                  },
                  "start": 413,
                  "end": 444
                }
              ],
              "start": 409,
              "end": 445
            },
            {
              "type": "LabeledStatement",
              "label": {
                "type": "Identifier",
                "name": "do_in",
                "start": 450,
                "end": 455
              },
              "body": {
                "type": "WhileStatement",
                "test": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 465,
                  "end": 466
                },
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "kind": "var",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "__in__do__IN__before__break",
                            "start": 482,
                            "end": 509
                          },
                          "init": {
                            "type": "Literal",
                            "value": "hole",
                            "raw": "\"hole\"",
                            "start": 510,
                            "end": 516
                          },
                          "start": 482,
                          "end": 516
                        }
                      ],
                      "start": 478,
                      "end": 517
                    },
                    {
                      "type": "BreakStatement",
                      "label": {
                        "type": "Identifier",
                        "name": "do_in",
                        "start": 532,
                        "end": 537
                      },
                      "start": 526,
                      "end": 538
                    },
                    {
                      "type": "VariableDeclaration",
                      "kind": "var",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "__in__do__IN__after__break",
                            "start": 552,
                            "end": 578
                          },
                          "init": {
                            "type": "Literal",
                            "value": "sun",
                            "raw": "\"sun\"",
                            "start": 579,
                            "end": 584
                          },
                          "start": 552,
                          "end": 584
                        }
                      ],
                      "start": 548,
                      "end": 585
                    }
                  ],
                  "start": 468,
                  "end": 591
                },
                "start": 458,
                "end": 591
              },
              "start": 450,
              "end": 591
            },
            {
              "type": "EmptyStatement",
              "start": 592,
              "end": 593
            },
            {
              "type": "VariableDeclaration",
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "__in__do__after__break",
                    "start": 602,
                    "end": 624
                  },
                  "init": {
                    "type": "Literal",
                    "value": "won't you come",
                    "raw": "\"won't you come\"",
                    "start": 625,
                    "end": 641
                  },
                  "start": 602,
                  "end": 641
                }
              ],
              "start": 598,
              "end": 642
            }
          ],
          "start": 363,
          "end": 644
        },
        "start": 350,
        "end": 644
      },
      "start": 341,
      "end": 644
    },
    {
      "type": "EmptyStatement",
      "start": 644,
      "end": 645
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "LogicalExpression",
            "left": {
              "type": "LogicalExpression",
              "left": {
                "type": "LogicalExpression",
                "left": {
                  "type": "Identifier",
                  "name": "__in__do__before__break",
                  "start": 742,
                  "end": 765
                },
                "operator": "&&",
                "right": {
                  "type": "Identifier",
                  "name": "__in__do__IN__before__break",
                  "start": 767,
                  "end": 794
                },
                "start": 742,
                "end": 794
              },
              "operator": "&&",
              "right": {
                "type": "UnaryExpression",
                "operator": "!",
                "argument": {
                  "type": "Identifier",
                  "name": "__in__do__IN__after__break",
                  "start": 797,
                  "end": 823
                },
                "prefix": true,
                "start": 796,
                "end": 823
              },
              "start": 742,
              "end": 823
            },
            "operator": "&&",
            "right": {
              "type": "Identifier",
              "name": "__in__do__after__break",
              "start": 825,
              "end": 847
            },
            "start": 742,
            "end": 847
          },
          "start": 741,
          "end": 848
        },
        "prefix": true,
        "start": 740,
        "end": 848
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 863,
                "end": 875
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: Break inside do-while is allowed as its described at standard",
                  "raw": "'#1: Break inside do-while is allowed as its described at standard'",
                  "start": 876,
                  "end": 943
                }
              ],
              "start": 859,
              "end": 944
            },
            "start": 853,
            "end": 945
          }
        ],
        "start": 850,
        "end": 947
      },
      "alternate": null,
      "start": 736,
      "end": 947
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1030
}