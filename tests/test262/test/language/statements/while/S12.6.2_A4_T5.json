{
  "type": "Program",
  "start": 0,
  "end": 598,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 344,
      "end": 354,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 348,
          "end": 353,
          "id": {
            "type": "Identifier",
            "start": 348,
            "end": 349,
            "name": "i"
          },
          "init": {
            "type": "Literal",
            "start": 352,
            "end": 353,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "LabeledStatement",
      "start": 355,
      "end": 572,
      "body": {
        "type": "BlockStatement",
        "start": 362,
        "end": 572,
        "body": [
          {
            "type": "WhileStatement",
            "start": 366,
            "end": 508,
            "test": {
              "type": "Literal",
              "start": 372,
              "end": 376,
              "value": true,
              "raw": "true"
            },
            "body": {
              "type": "BlockStatement",
              "start": 377,
              "end": 508,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 383,
                  "end": 387,
                  "expression": {
                    "type": "UpdateExpression",
                    "start": 383,
                    "end": 386,
                    "operator": "++",
                    "prefix": false,
                    "argument": {
                      "type": "Identifier",
                      "start": 383,
                      "end": 384,
                      "name": "i"
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "start": 392,
                  "end": 504,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 397,
                    "end": 404,
                    "left": {
                      "type": "Identifier",
                      "start": 397,
                      "end": 398,
                      "name": "i"
                    },
                    "operator": "==",
                    "right": {
                      "type": "Literal",
                      "start": 402,
                      "end": 404,
                      "value": 10,
                      "raw": "10"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 407,
                    "end": 504,
                    "body": [
                      {
                        "type": "BreakStatement",
                        "start": 415,
                        "end": 428,
                        "label": {
                          "type": "Identifier",
                          "start": 421,
                          "end": 427,
                          "name": "woohoo"
                        }
                      },
                      {
                        "type": "ThrowStatement",
                        "start": 435,
                        "end": 498,
                        "argument": {
                          "type": "NewExpression",
                          "start": 441,
                          "end": 497,
                          "callee": {
                            "type": "Identifier",
                            "start": 445,
                            "end": 457,
                            "name": "Test262Error"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 458,
                              "end": 496,
                              "value": "#1.1: \"break woohoo\" must break loop",
                              "raw": "'#1.1: \"break woohoo\" must break loop'"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": null
                }
              ]
            }
          },
          {
            "type": "ThrowStatement",
            "start": 511,
            "end": 570,
            "argument": {
              "type": "NewExpression",
              "start": 517,
              "end": 569,
              "callee": {
                "type": "Identifier",
                "start": 521,
                "end": 533,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 534,
                  "end": 568,
                  "value": "This code should be unreacheable",
                  "raw": "'This code should be unreacheable'"
                }
              ]
            }
          }
        ]
      },
      "label": {
        "type": "Identifier",
        "start": 355,
        "end": 361,
        "name": "woohoo"
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 573,
      "end": 597,
      "expression": {
        "type": "CallExpression",
        "start": 573,
        "end": 596,
        "callee": {
          "type": "MemberExpression",
          "start": 573,
          "end": 589,
          "object": {
            "type": "Identifier",
            "start": 573,
            "end": 579,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 580,
            "end": 589,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 590,
            "end": 591,
            "name": "i"
          },
          {
            "type": "Literal",
            "start": 593,
            "end": 595,
            "value": 10,
            "raw": "10"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}