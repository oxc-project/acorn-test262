{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x1",
            "start": 272,
            "end": 274
          },
          "init": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 275,
            "end": 276
          },
          "start": 272,
          "end": 276
        }
      ],
      "start": 268,
      "end": 277
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myfunc1",
        "start": 287,
        "end": 294
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "x1",
                "start": 299,
                "end": 301
              },
              "start": 299,
              "end": 303
            },
            "start": 299,
            "end": 304
          },
          {
            "type": "ReturnStatement",
            "argument": null,
            "start": 306,
            "end": 313
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "*=",
              "left": {
                "type": "Identifier",
                "name": "x1",
                "start": 315,
                "end": 317
              },
              "right": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 319,
                "end": 320
              },
              "start": 315,
              "end": 320
            },
            "start": 315,
            "end": 321
          }
        ],
        "start": 296,
        "end": 323
      },
      "expression": false,
      "start": 278,
      "end": 323
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "myfunc1",
          "start": 324,
          "end": 331
        },
        "arguments": [],
        "optional": false,
        "start": 324,
        "end": 333
      },
      "start": 324,
      "end": 334
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x1",
          "start": 339,
          "end": 341
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 344,
          "end": 345
        },
        "start": 339,
        "end": 345
      },
      "consequent": {
        "type": "ThrowStatement",
        "argument": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 357,
            "end": 369
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": "#1: x1 === 2. Actual:  x1 ===",
                "raw": "'#1: x1 === 2. Actual:  x1 ==='",
                "start": 370,
                "end": 401
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "x1",
                "start": 403,
                "end": 405
              },
              "start": 370,
              "end": 405
            }
          ],
          "start": 353,
          "end": 408
        },
        "start": 347,
        "end": 409
      },
      "alternate": null,
      "start": 335,
      "end": 409
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x2",
            "start": 425,
            "end": 427
          },
          "init": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 428,
            "end": 429
          },
          "start": 425,
          "end": 429
        }
      ],
      "start": 421,
      "end": 430
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myfunc2",
        "start": 440,
        "end": 447
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "x2",
                "start": 453,
                "end": 455
              },
              "start": 453,
              "end": 457
            },
            "start": 453,
            "end": 458
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "x2",
              "start": 468,
              "end": 470
            },
            "start": 461,
            "end": 471
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "*=",
              "left": {
                "type": "Identifier",
                "name": "x2",
                "start": 474,
                "end": 476
              },
              "right": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 478,
                "end": 479
              },
              "start": 474,
              "end": 479
            },
            "start": 474,
            "end": 480
          }
        ],
        "start": 449,
        "end": 482
      },
      "expression": false,
      "start": 431,
      "end": 482
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "myfunc2",
          "start": 483,
          "end": 490
        },
        "arguments": [],
        "optional": false,
        "start": 483,
        "end": 492
      },
      "start": 483,
      "end": 493
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x2",
          "start": 498,
          "end": 500
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 503,
          "end": 504
        },
        "start": 498,
        "end": 504
      },
      "consequent": {
        "type": "ThrowStatement",
        "argument": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 516,
            "end": 528
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": "#2: x2 === 2. Actual:  x2 ===",
                "raw": "'#2: x2 === 2. Actual:  x2 ==='",
                "start": 529,
                "end": 560
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "name": "x2",
                "start": 562,
                "end": 564
              },
              "start": 529,
              "end": 564
            }
          ],
          "start": 512,
          "end": 567
        },
        "start": 506,
        "end": 568
      },
      "alternate": null,
      "start": 494,
      "end": 568
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x3",
            "start": 584,
            "end": 586
          },
          "init": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 587,
            "end": 588
          },
          "start": 584,
          "end": 588
        }
      ],
      "start": 580,
      "end": 589
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myfunc3",
        "start": 599,
        "end": 606
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "x3",
                "start": 612,
                "end": 614
              },
              "start": 612,
              "end": 616
            },
            "start": 612,
            "end": 617
          },
          {
            "type": "ReturnStatement",
            "argument": null,
            "start": 620,
            "end": 627
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "x3",
              "start": 637,
              "end": 639
            },
            "start": 630,
            "end": 640
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "*=",
              "left": {
                "type": "Identifier",
                "name": "x3",
                "start": 643,
                "end": 645
              },
              "right": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 647,
                "end": 648
              },
              "start": 643,
              "end": 648
            },
            "start": 643,
            "end": 649
          }
        ],
        "start": 608,
        "end": 651
      },
      "expression": false,
      "start": 590,
      "end": 651
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "myfunc3",
            "start": 656,
            "end": 663
          },
          "arguments": [],
          "optional": false,
          "start": 656,
          "end": 665
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 668,
          "end": 677
        },
        "start": 656,
        "end": 677
      },
      "consequent": {
        "type": "ThrowStatement",
        "argument": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 689,
            "end": 701
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "left": {
                "type": "Literal",
                "value": "#3: myfunc3() === undefined. Actual:  myfunc3() ===",
                "raw": "'#3: myfunc3() === undefined. Actual:  myfunc3() ==='",
                "start": 702,
                "end": 755
              },
              "operator": "+",
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "myfunc3",
                  "start": 757,
                  "end": 764
                },
                "arguments": [],
                "optional": false,
                "start": 757,
                "end": 766
              },
              "start": 702,
              "end": 766
            }
          ],
          "start": 685,
          "end": 769
        },
        "start": 679,
        "end": 770
      },
      "alternate": null,
      "start": 652,
      "end": 770
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 771
}