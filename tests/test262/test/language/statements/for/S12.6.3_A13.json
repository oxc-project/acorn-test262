{
  "type": "Program",
  "start": 0,
  "end": 709,
  "body": [
    {
      "type": "TryStatement",
      "start": 419,
      "end": 582,
      "block": {
        "type": "BlockStatement",
        "start": 423,
        "end": 442,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 426,
            "end": 440,
            "expression": {
              "type": "AssignmentExpression",
              "start": 426,
              "end": 439,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 426,
                "end": 431,
                "name": "index"
              },
              "right": {
                "type": "Identifier",
                "start": 434,
                "end": 439,
                "name": "index"
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 443,
        "end": 582,
        "param": {
          "type": "Identifier",
          "start": 450,
          "end": 451,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 453,
          "end": 582,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 456,
              "end": 580,
              "argument": {
                "type": "NewExpression",
                "start": 462,
                "end": 579,
                "callee": {
                  "type": "Identifier",
                  "start": 466,
                  "end": 478,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 479,
                    "end": 578,
                    "value": "#1: VariableDeclaration in \"var VariableDeclarationListNoIn\" of for IterationStatement is allowed",
                    "raw": "'#1: VariableDeclaration in \"var VariableDeclarationListNoIn\" of for IterationStatement is allowed'"
                  }
                ]
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ForStatement",
      "start": 667,
      "end": 708,
      "init": {
        "type": "VariableDeclaration",
        "start": 671,
        "end": 682,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 675,
            "end": 682,
            "id": {
              "type": "Identifier",
              "start": 675,
              "end": 680,
              "name": "index"
            },
            "init": {
              "type": "Literal",
              "start": 681,
              "end": 682,
              "value": 0,
              "raw": "0"
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 684,
        "end": 691,
        "left": {
          "type": "Identifier",
          "start": 684,
          "end": 689,
          "name": "index"
        },
        "operator": "<",
        "right": {
          "type": "Literal",
          "start": 690,
          "end": 691,
          "value": 6,
          "raw": "6"
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 693,
        "end": 700,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 693,
          "end": 698,
          "name": "index"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 702,
        "end": 708,
        "body": [
          {
            "type": "EmptyStatement",
            "start": 705,
            "end": 706
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}