{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "probeBefore",
            "start": 1025,
            "end": 1036
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "x",
                    "start": 1059,
                    "end": 1060
                  },
                  "start": 1052,
                  "end": 1061
                }
              ],
              "start": 1050,
              "end": 1063
            },
            "expression": false,
            "start": 1039,
            "end": 1063
          },
          "start": 1025,
          "end": 1063
        }
      ],
      "start": 1021,
      "end": 1064
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "probeTest",
            "start": 1069,
            "end": 1078
          },
          "init": null,
          "start": 1069,
          "end": 1078
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "probeIncr",
            "start": 1080,
            "end": 1089
          },
          "init": null,
          "start": 1080,
          "end": 1089
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "probeBody",
            "start": 1091,
            "end": 1100
          },
          "init": null,
          "start": 1091,
          "end": 1100
        }
      ],
      "start": 1065,
      "end": 1101
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "run",
            "start": 1106,
            "end": 1109
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 1112,
            "end": 1116
          },
          "start": 1106,
          "end": 1116
        }
      ],
      "start": 1102,
      "end": 1117
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "_",
              "start": 1133,
              "end": 1134
            },
            "init": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "eval",
                "start": 1137,
                "end": 1141
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "var x = 1;",
                  "raw": "'var x = 1;'",
                  "start": 1142,
                  "end": 1154
                }
              ],
              "optional": false,
              "start": 1137,
              "end": 1155
            },
            "start": 1133,
            "end": 1155
          }
        ],
        "start": 1129,
        "end": 1155
      },
      "test": {
        "type": "LogicalExpression",
        "left": {
          "type": "Identifier",
          "name": "run",
          "start": 1161,
          "end": 1164
        },
        "operator": "&&",
        "right": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "Identifier",
              "name": "probeTest",
              "start": 1169,
              "end": 1178
            },
            "right": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1201,
                      "end": 1202
                    },
                    "start": 1194,
                    "end": 1203
                  }
                ],
                "start": 1192,
                "end": 1205
              },
              "expression": false,
              "start": 1181,
              "end": 1205
            },
            "start": 1169,
            "end": 1205
          },
          "start": 1168,
          "end": 1206
        },
        "start": 1161,
        "end": 1206
      },
      "update": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "probeIncr",
          "start": 1212,
          "end": 1221
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 1244,
                  "end": 1245
                },
                "start": 1237,
                "end": 1246
              }
            ],
            "start": 1235,
            "end": 1248
          },
          "expression": false,
          "start": 1224,
          "end": 1248
        },
        "start": 1212,
        "end": 1248
      },
      "body": {
        "type": "ExpressionStatement",
        "expression": {
          "type": "SequenceExpression",
          "expressions": [
            {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "probeBody",
                "start": 1255,
                "end": 1264
              },
              "right": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1287,
                        "end": 1288
                      },
                      "start": 1280,
                      "end": 1289
                    }
                  ],
                  "start": 1278,
                  "end": 1291
                },
                "expression": false,
                "start": 1267,
                "end": 1291
              },
              "start": 1255,
              "end": 1291
            },
            {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "run",
                "start": 1293,
                "end": 1296
              },
              "right": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1299,
                "end": 1304
              },
              "start": 1293,
              "end": 1304
            }
          ],
          "start": 1255,
          "end": 1304
        },
        "start": 1255,
        "end": 1305
      },
      "start": 1119,
      "end": 1305
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 1311,
            "end": 1312
          },
          "init": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1315,
            "end": 1316
          },
          "start": 1311,
          "end": 1316
        }
      ],
      "start": 1307,
      "end": 1317
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1319,
            "end": 1325
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1326,
            "end": 1335
          },
          "optional": false,
          "computed": false,
          "start": 1319,
          "end": 1335
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "probeBefore",
              "start": 1336,
              "end": 1347
            },
            "arguments": [],
            "optional": false,
            "start": 1336,
            "end": 1349
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1351,
            "end": 1352
          },
          {
            "type": "Literal",
            "value": "reference preceding statement",
            "raw": "'reference preceding statement'",
            "start": 1354,
            "end": 1385
          }
        ],
        "optional": false,
        "start": 1319,
        "end": 1386
      },
      "start": 1319,
      "end": 1387
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1388,
            "end": 1394
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1395,
            "end": 1404
          },
          "optional": false,
          "computed": false,
          "start": 1388,
          "end": 1404
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "probeTest",
              "start": 1405,
              "end": 1414
            },
            "arguments": [],
            "optional": false,
            "start": 1405,
            "end": 1416
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1418,
            "end": 1419
          },
          {
            "type": "Literal",
            "value": "reference from \"test\" position",
            "raw": "'reference from \"test\" position'",
            "start": 1421,
            "end": 1453
          }
        ],
        "optional": false,
        "start": 1388,
        "end": 1454
      },
      "start": 1388,
      "end": 1455
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1456,
            "end": 1462
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1463,
            "end": 1472
          },
          "optional": false,
          "computed": false,
          "start": 1456,
          "end": 1472
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "probeBody",
              "start": 1473,
              "end": 1482
            },
            "arguments": [],
            "optional": false,
            "start": 1473,
            "end": 1484
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1486,
            "end": 1487
          },
          {
            "type": "Literal",
            "value": "reference from statement body",
            "raw": "'reference from statement body'",
            "start": 1489,
            "end": 1520
          }
        ],
        "optional": false,
        "start": 1456,
        "end": 1521
      },
      "start": 1456,
      "end": 1522
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1523,
            "end": 1529
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1530,
            "end": 1539
          },
          "optional": false,
          "computed": false,
          "start": 1523,
          "end": 1539
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "probeIncr",
              "start": 1540,
              "end": 1549
            },
            "arguments": [],
            "optional": false,
            "start": 1540,
            "end": 1551
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1553,
            "end": 1554
          },
          {
            "type": "Literal",
            "value": "reference from \"increment\" position",
            "raw": "'reference from \"increment\" position'",
            "start": 1556,
            "end": 1593
          }
        ],
        "optional": false,
        "start": 1523,
        "end": 1594
      },
      "start": 1523,
      "end": 1595
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1596,
            "end": 1602
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1603,
            "end": 1612
          },
          "optional": false,
          "computed": false,
          "start": 1596,
          "end": 1612
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 1613,
            "end": 1614
          },
          {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 1616,
            "end": 1617
          },
          {
            "type": "Literal",
            "value": "reference following statement",
            "raw": "'reference following statement'",
            "start": 1619,
            "end": 1650
          }
        ],
        "optional": false,
        "start": 1596,
        "end": 1651
      },
      "start": 1596,
      "end": 1652
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1653
}