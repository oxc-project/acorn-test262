{
  "type": "Program",
  "start": 0,
  "end": 1279,
  "body": [
    {
      "type": "TryStatement",
      "start": 455,
      "end": 910,
      "block": {
        "type": "BlockStatement",
        "start": 459,
        "end": 723,
        "body": [
          {
            "type": "ForStatement",
            "start": 462,
            "end": 622,
            "init": {
              "type": "CallExpression",
              "start": 466,
              "end": 505,
              "callee": {
                "type": "ParenthesizedExpression",
                "start": 466,
                "end": 503,
                "expression": {
                  "type": "FunctionExpression",
                  "start": 467,
                  "end": 502,
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 477,
                    "end": 502,
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "start": 478,
                        "end": 501,
                        "argument": {
                          "type": "Literal",
                          "start": 484,
                          "end": 500,
                          "value": "NoInExpression",
                          "raw": "\"NoInExpression\""
                        }
                      }
                    ]
                  },
                  "expression": false
                }
              },
              "arguments": [],
              "optional": false
            },
            "test": {
              "type": "CallExpression",
              "start": 507,
              "end": 547,
              "callee": {
                "type": "ParenthesizedExpression",
                "start": 507,
                "end": 545,
                "expression": {
                  "type": "FunctionExpression",
                  "start": 508,
                  "end": 544,
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 518,
                    "end": 544,
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "start": 519,
                        "end": 543,
                        "argument": {
                          "type": "Literal",
                          "start": 525,
                          "end": 542,
                          "value": "FirstExpression",
                          "raw": "\"FirstExpression\""
                        }
                      }
                    ]
                  },
                  "expression": false
                }
              },
              "arguments": [],
              "optional": false
            },
            "update": {
              "type": "CallExpression",
              "start": 549,
              "end": 590,
              "callee": {
                "type": "ParenthesizedExpression",
                "start": 549,
                "end": 588,
                "expression": {
                  "type": "FunctionExpression",
                  "start": 550,
                  "end": 587,
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 560,
                    "end": 587,
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "start": 561,
                        "end": 586,
                        "argument": {
                          "type": "Literal",
                          "start": 567,
                          "end": 585,
                          "value": "SecondExpression",
                          "raw": "\"SecondExpression\""
                        }
                      }
                    ]
                  },
                  "expression": false
                }
              },
              "arguments": [],
              "optional": false
            },
            "body": {
              "type": "BlockStatement",
              "start": 592,
              "end": 622,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 596,
                  "end": 619,
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 600,
                      "end": 618,
                      "id": {
                        "type": "Identifier",
                        "start": 600,
                        "end": 606,
                        "name": "in_for"
                      },
                      "init": {
                        "type": "Literal",
                        "start": 609,
                        "end": 618,
                        "value": "reached",
                        "raw": "\"reached\""
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "type": "ThrowStatement",
            "start": 624,
            "end": 721,
            "argument": {
              "type": "NewExpression",
              "start": 630,
              "end": 720,
              "callee": {
                "type": "Identifier",
                "start": 634,
                "end": 646,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 647,
                  "end": 719,
                  "value": "#1: (function(){throw \"NoInExpression\";})() lead to throwing exception",
                  "raw": "'#1: (function(){throw \"NoInExpression\";})() lead to throwing exception'"
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 724,
        "end": 910,
        "param": {
          "type": "Identifier",
          "start": 731,
          "end": 732,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 734,
          "end": 910,
          "body": [
            {
              "type": "IfStatement",
              "start": 737,
              "end": 908,
              "test": {
                "type": "BinaryExpression",
                "start": 741,
                "end": 763,
                "left": {
                  "type": "Identifier",
                  "start": 741,
                  "end": 742,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 747,
                  "end": 763,
                  "value": "NoInExpression",
                  "raw": "\"NoInExpression\""
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 765,
                "end": 908,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 769,
                    "end": 905,
                    "argument": {
                      "type": "NewExpression",
                      "start": 775,
                      "end": 904,
                      "callee": {
                        "type": "Identifier",
                        "start": 779,
                        "end": 791,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 792,
                          "end": 903,
                          "value": "#1: When for (ExpressionNoIn ; Expression ; Expression) Statement is evaluated ExpressionNoIn evaluates first",
                          "raw": "'#1: When for (ExpressionNoIn ; Expression ; Expression) Statement is evaluated ExpressionNoIn evaluates first'"
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "IfStatement",
      "start": 1083,
      "end": 1196,
      "test": {
        "type": "BinaryExpression",
        "start": 1087,
        "end": 1107,
        "left": {
          "type": "Identifier",
          "start": 1087,
          "end": 1093,
          "name": "in_for"
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 1098,
          "end": 1107,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1109,
        "end": 1196,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1112,
            "end": 1194,
            "argument": {
              "type": "NewExpression",
              "start": 1118,
              "end": 1193,
              "callee": {
                "type": "Identifier",
                "start": 1122,
                "end": 1134,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1135,
                  "end": 1190,
                  "left": {
                    "type": "Literal",
                    "start": 1135,
                    "end": 1182,
                    "value": "#2: in_for === undefined. Actual:  in_for ===",
                    "raw": "'#2: in_for === undefined. Actual:  in_for ==='"
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 1184,
                    "end": 1190,
                    "name": "in_for"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}