{
  "type": "Program",
  "start": 0,
  "end": 2206,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 341,
      "end": 843,
      "id": {
        "type": "Identifier",
        "start": 350,
        "end": 360,
        "name": "SwitchTest"
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 361,
          "end": 366,
          "name": "value"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 367,
        "end": 843,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 371,
            "end": 386,
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 375,
                "end": 385,
                "id": {
                  "type": "Identifier",
                  "start": 375,
                  "end": 381,
                  "name": "result"
                },
                "init": {
                  "type": "Literal",
                  "start": 384,
                  "end": 385,
                  "value": 0,
                  "raw": "0"
                }
              }
            ]
          },
          {
            "type": "SwitchStatement",
            "start": 392,
            "end": 821,
            "discriminant": {
              "type": "Identifier",
              "start": 399,
              "end": 404,
              "name": "value"
            },
            "cases": [
              {
                "type": "SwitchCase",
                "start": 412,
                "end": 438,
                "test": {
                  "type": "Literal",
                  "start": 417,
                  "end": 418,
                  "value": 0,
                  "raw": "0"
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 426,
                    "end": 438,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 426,
                      "end": 437,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 426,
                        "end": 432,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 436,
                        "end": 437,
                        "value": 2,
                        "raw": "2"
                      }
                    }
                  }
                ]
              },
              {
                "type": "SwitchCase",
                "start": 443,
                "end": 482,
                "test": {
                  "type": "Literal",
                  "start": 448,
                  "end": 449,
                  "value": 1,
                  "raw": "1"
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 457,
                    "end": 469,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 457,
                      "end": 468,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 457,
                        "end": 463,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 467,
                        "end": 468,
                        "value": 4,
                        "raw": "4"
                      }
                    }
                  },
                  {
                    "type": "BreakStatement",
                    "start": 476,
                    "end": 482,
                    "label": null
                  }
                ]
              },
              {
                "type": "SwitchCase",
                "start": 487,
                "end": 513,
                "test": {
                  "type": "Literal",
                  "start": 492,
                  "end": 493,
                  "value": 2,
                  "raw": "2"
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 501,
                    "end": 513,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 501,
                      "end": 512,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 501,
                        "end": 507,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 511,
                        "end": 512,
                        "value": 8,
                        "raw": "8"
                      }
                    }
                  }
                ]
              },
              {
                "type": "SwitchCase",
                "start": 518,
                "end": 556,
                "test": {
                  "type": "CallExpression",
                  "start": 523,
                  "end": 535,
                  "callee": {
                    "type": "Identifier",
                    "start": 523,
                    "end": 528,
                    "name": "isNaN"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 529,
                      "end": 534,
                      "name": "value"
                    }
                  ],
                  "optional": false
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 543,
                    "end": 556,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 543,
                      "end": 555,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 543,
                        "end": 549,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 553,
                        "end": 555,
                        "value": 16,
                        "raw": "16"
                      }
                    }
                  }
                ]
              },
              {
                "type": "SwitchCase",
                "start": 561,
                "end": 602,
                "test": null,
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 576,
                    "end": 589,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 576,
                      "end": 588,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 576,
                        "end": 582,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 586,
                        "end": 588,
                        "value": 32,
                        "raw": "32"
                      }
                    }
                  },
                  {
                    "type": "BreakStatement",
                    "start": 596,
                    "end": 602,
                    "label": null
                  }
                ]
              },
              {
                "type": "SwitchCase",
                "start": 607,
                "end": 637,
                "test": {
                  "type": "Literal",
                  "start": 612,
                  "end": 616,
                  "value": null,
                  "raw": "null"
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 624,
                    "end": 637,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 624,
                      "end": 636,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 624,
                        "end": 630,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 634,
                        "end": 636,
                        "value": 64,
                        "raw": "64"
                      }
                    }
                  }
                ]
              },
              {
                "type": "SwitchCase",
                "start": 642,
                "end": 687,
                "test": {
                  "type": "Identifier",
                  "start": 647,
                  "end": 652,
                  "name": "isNaN"
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 660,
                    "end": 674,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 660,
                      "end": 673,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 660,
                        "end": 666,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 670,
                        "end": 673,
                        "value": 128,
                        "raw": "128"
                      }
                    }
                  },
                  {
                    "type": "BreakStatement",
                    "start": 681,
                    "end": 687,
                    "label": null
                  }
                ]
              },
              {
                "type": "SwitchCase",
                "start": 692,
                "end": 727,
                "test": {
                  "type": "Identifier",
                  "start": 697,
                  "end": 705,
                  "name": "Infinity"
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 713,
                    "end": 727,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 713,
                      "end": 726,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 713,
                        "end": 719,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 723,
                        "end": 726,
                        "value": 256,
                        "raw": "256"
                      }
                    }
                  }
                ]
              },
              {
                "type": "SwitchCase",
                "start": 732,
                "end": 775,
                "test": {
                  "type": "BinaryExpression",
                  "start": 737,
                  "end": 740,
                  "left": {
                    "type": "Literal",
                    "start": 737,
                    "end": 738,
                    "value": 2,
                    "raw": "2"
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 739,
                    "end": 740,
                    "value": 3,
                    "raw": "3"
                  }
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 748,
                    "end": 762,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 748,
                      "end": 761,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 748,
                        "end": 754,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 758,
                        "end": 761,
                        "value": 512,
                        "raw": "512"
                      }
                    }
                  },
                  {
                    "type": "BreakStatement",
                    "start": 769,
                    "end": 775,
                    "label": null
                  }
                ]
              },
              {
                "type": "SwitchCase",
                "start": 780,
                "end": 817,
                "test": {
                  "type": "Identifier",
                  "start": 785,
                  "end": 794,
                  "name": "undefined"
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 802,
                    "end": 817,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 802,
                      "end": 816,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 802,
                        "end": 808,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 812,
                        "end": 816,
                        "value": 1024,
                        "raw": "1024"
                      }
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "ReturnStatement",
            "start": 827,
            "end": 841,
            "argument": {
              "type": "Identifier",
              "start": 834,
              "end": 840,
              "name": "result"
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "start": 845,
      "end": 867,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 849,
          "end": 866,
          "id": {
            "type": "Identifier",
            "start": 849,
            "end": 850,
            "name": "n"
          },
          "init": {
            "type": "CallExpression",
            "start": 853,
            "end": 866,
            "callee": {
              "type": "Identifier",
              "start": 853,
              "end": 859,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 860,
                "end": 865,
                "value": false,
                "raw": "false"
              }
            ],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "start": 869,
      "end": 1020,
      "test": {
        "type": "UnaryExpression",
        "start": 872,
        "end": 894,
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 873,
          "end": 894,
          "expression": {
            "type": "BinaryExpression",
            "start": 874,
            "end": 893,
            "left": {
              "type": "CallExpression",
              "start": 874,
              "end": 887,
              "callee": {
                "type": "Identifier",
                "start": 874,
                "end": 884,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 885,
                  "end": 886,
                  "name": "n"
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 892,
              "end": 893,
              "value": 6,
              "raw": "6"
            }
          }
        },
        "prefix": true
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 895,
        "end": 1020,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 899,
            "end": 1018,
            "argument": {
              "type": "NewExpression",
              "start": 905,
              "end": 1017,
              "callee": {
                "type": "Identifier",
                "start": 909,
                "end": 921,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 922,
                  "end": 1014,
                  "left": {
                    "type": "Literal",
                    "start": 922,
                    "end": 999,
                    "value": "#1: SwitchTest(Number(false)) === 6. Actual:  SwitchTest(Number(false)) ===",
                    "raw": "\"#1: SwitchTest(Number(false)) === 6. Actual:  SwitchTest(Number(false)) ===\""
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1001,
                    "end": 1014,
                    "callee": {
                      "type": "Identifier",
                      "start": 1001,
                      "end": 1011,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1012,
                        "end": 1013,
                        "name": "n"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1022,
      "end": 1179,
      "test": {
        "type": "UnaryExpression",
        "start": 1025,
        "end": 1055,
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1026,
          "end": 1055,
          "expression": {
            "type": "BinaryExpression",
            "start": 1027,
            "end": 1054,
            "left": {
              "type": "CallExpression",
              "start": 1027,
              "end": 1047,
              "callee": {
                "type": "Identifier",
                "start": 1027,
                "end": 1037,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1038,
                  "end": 1046,
                  "name": "parseInt"
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1052,
              "end": 1054,
              "value": 32,
              "raw": "32"
            }
          }
        },
        "prefix": true
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1056,
        "end": 1179,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1060,
            "end": 1177,
            "argument": {
              "type": "NewExpression",
              "start": 1066,
              "end": 1176,
              "callee": {
                "type": "Identifier",
                "start": 1070,
                "end": 1082,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1083,
                  "end": 1173,
                  "left": {
                    "type": "Literal",
                    "start": 1083,
                    "end": 1151,
                    "value": "#2: SwitchTest(parseInt) === 32. Actual:  SwitchTest(parseInt) ===",
                    "raw": "\"#2: SwitchTest(parseInt) === 32. Actual:  SwitchTest(parseInt) ===\""
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1153,
                    "end": 1173,
                    "callee": {
                      "type": "Identifier",
                      "start": 1153,
                      "end": 1163,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1164,
                        "end": 1172,
                        "name": "parseInt"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1181,
      "end": 1328,
      "test": {
        "type": "UnaryExpression",
        "start": 1184,
        "end": 1212,
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1185,
          "end": 1212,
          "expression": {
            "type": "BinaryExpression",
            "start": 1186,
            "end": 1211,
            "left": {
              "type": "CallExpression",
              "start": 1186,
              "end": 1203,
              "callee": {
                "type": "Identifier",
                "start": 1186,
                "end": 1196,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1197,
                  "end": 1202,
                  "name": "isNaN"
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1208,
              "end": 1211,
              "value": 128,
              "raw": "128"
            }
          }
        },
        "prefix": true
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1213,
        "end": 1328,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1217,
            "end": 1326,
            "argument": {
              "type": "NewExpression",
              "start": 1223,
              "end": 1325,
              "callee": {
                "type": "Identifier",
                "start": 1227,
                "end": 1239,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1240,
                  "end": 1322,
                  "left": {
                    "type": "Literal",
                    "start": 1240,
                    "end": 1303,
                    "value": "#3: SwitchTest(isNaN) === 128. Actual:  SwitchTest(isNaN) ===",
                    "raw": "\"#3: SwitchTest(isNaN) === 128. Actual:  SwitchTest(isNaN) ===\""
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1305,
                    "end": 1322,
                    "callee": {
                      "type": "Identifier",
                      "start": 1305,
                      "end": 1315,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1316,
                        "end": 1321,
                        "name": "isNaN"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1330,
      "end": 1471,
      "test": {
        "type": "UnaryExpression",
        "start": 1333,
        "end": 1359,
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1334,
          "end": 1359,
          "expression": {
            "type": "BinaryExpression",
            "start": 1335,
            "end": 1358,
            "left": {
              "type": "CallExpression",
              "start": 1335,
              "end": 1351,
              "callee": {
                "type": "Identifier",
                "start": 1335,
                "end": 1345,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1346,
                  "end": 1350,
                  "value": true,
                  "raw": "true"
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1356,
              "end": 1358,
              "value": 32,
              "raw": "32"
            }
          }
        },
        "prefix": true
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1360,
        "end": 1471,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1364,
            "end": 1469,
            "argument": {
              "type": "NewExpression",
              "start": 1370,
              "end": 1468,
              "callee": {
                "type": "Identifier",
                "start": 1374,
                "end": 1386,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1387,
                  "end": 1465,
                  "left": {
                    "type": "Literal",
                    "start": 1387,
                    "end": 1447,
                    "value": "#6: SwitchTest(true) === 32. Actual:  SwitchTest(true) ===",
                    "raw": "\"#6: SwitchTest(true) === 32. Actual:  SwitchTest(true) ===\""
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1449,
                    "end": 1465,
                    "callee": {
                      "type": "Identifier",
                      "start": 1449,
                      "end": 1459,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1460,
                        "end": 1464,
                        "value": true,
                        "raw": "true"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1473,
      "end": 1618,
      "test": {
        "type": "UnaryExpression",
        "start": 1476,
        "end": 1503,
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1477,
          "end": 1503,
          "expression": {
            "type": "BinaryExpression",
            "start": 1478,
            "end": 1502,
            "left": {
              "type": "CallExpression",
              "start": 1478,
              "end": 1495,
              "callee": {
                "type": "Identifier",
                "start": 1478,
                "end": 1488,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1489,
                  "end": 1494,
                  "value": false,
                  "raw": "false"
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1500,
              "end": 1502,
              "value": 48,
              "raw": "48"
            }
          }
        },
        "prefix": true
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1504,
        "end": 1618,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1508,
            "end": 1616,
            "argument": {
              "type": "NewExpression",
              "start": 1514,
              "end": 1615,
              "callee": {
                "type": "Identifier",
                "start": 1518,
                "end": 1530,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1531,
                  "end": 1612,
                  "left": {
                    "type": "Literal",
                    "start": 1531,
                    "end": 1593,
                    "value": "#7: SwitchTest(false) === 48. Actual:  SwitchTest(false) ===",
                    "raw": "\"#7: SwitchTest(false) === 48. Actual:  SwitchTest(false) ===\""
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1595,
                    "end": 1612,
                    "callee": {
                      "type": "Identifier",
                      "start": 1595,
                      "end": 1605,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1606,
                        "end": 1611,
                        "value": false,
                        "raw": "false"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1620,
      "end": 1763,
      "test": {
        "type": "UnaryExpression",
        "start": 1623,
        "end": 1650,
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1624,
          "end": 1650,
          "expression": {
            "type": "BinaryExpression",
            "start": 1625,
            "end": 1649,
            "left": {
              "type": "CallExpression",
              "start": 1625,
              "end": 1641,
              "callee": {
                "type": "Identifier",
                "start": 1625,
                "end": 1635,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1636,
                  "end": 1640,
                  "value": null,
                  "raw": "null"
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1646,
              "end": 1649,
              "value": 192,
              "raw": "192"
            }
          }
        },
        "prefix": true
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1651,
        "end": 1763,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1655,
            "end": 1761,
            "argument": {
              "type": "NewExpression",
              "start": 1661,
              "end": 1760,
              "callee": {
                "type": "Identifier",
                "start": 1665,
                "end": 1677,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1678,
                  "end": 1757,
                  "left": {
                    "type": "Literal",
                    "start": 1678,
                    "end": 1739,
                    "value": "#8: SwitchTest(null) === 192. Actual:  SwitchTest(null) ===",
                    "raw": "\"#8: SwitchTest(null) === 192. Actual:  SwitchTest(null) ===\""
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1741,
                    "end": 1757,
                    "callee": {
                      "type": "Identifier",
                      "start": 1741,
                      "end": 1751,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1752,
                        "end": 1756,
                        "value": null,
                        "raw": "null"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1765,
      "end": 1918,
      "test": {
        "type": "UnaryExpression",
        "start": 1768,
        "end": 1798,
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1769,
          "end": 1798,
          "expression": {
            "type": "BinaryExpression",
            "start": 1770,
            "end": 1797,
            "left": {
              "type": "CallExpression",
              "start": 1770,
              "end": 1788,
              "callee": {
                "type": "Identifier",
                "start": 1770,
                "end": 1780,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "UnaryExpression",
                  "start": 1781,
                  "end": 1787,
                  "operator": "void",
                  "argument": {
                    "type": "Literal",
                    "start": 1786,
                    "end": 1787,
                    "value": 0,
                    "raw": "0"
                  },
                  "prefix": true
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1793,
              "end": 1797,
              "value": 1024,
              "raw": "1024"
            }
          }
        },
        "prefix": true
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1799,
        "end": 1918,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1803,
            "end": 1916,
            "argument": {
              "type": "NewExpression",
              "start": 1809,
              "end": 1915,
              "callee": {
                "type": "Identifier",
                "start": 1813,
                "end": 1825,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1826,
                  "end": 1912,
                  "left": {
                    "type": "Literal",
                    "start": 1826,
                    "end": 1892,
                    "value": "#9: SwitchTest(void 0) === 1024. Actual:  SwitchTest(void 0) ===",
                    "raw": "\"#9: SwitchTest(void 0) === 1024. Actual:  SwitchTest(void 0) ===\""
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1894,
                    "end": 1912,
                    "callee": {
                      "type": "Identifier",
                      "start": 1894,
                      "end": 1904,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "start": 1905,
                        "end": 1911,
                        "operator": "void",
                        "argument": {
                          "type": "Literal",
                          "start": 1910,
                          "end": 1911,
                          "value": 0,
                          "raw": "0"
                        },
                        "prefix": true
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1920,
      "end": 2058,
      "test": {
        "type": "UnaryExpression",
        "start": 1923,
        "end": 1948,
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1924,
          "end": 1948,
          "expression": {
            "type": "BinaryExpression",
            "start": 1925,
            "end": 1947,
            "left": {
              "type": "CallExpression",
              "start": 1925,
              "end": 1940,
              "callee": {
                "type": "Identifier",
                "start": 1925,
                "end": 1935,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1936,
                  "end": 1939,
                  "name": "NaN"
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1945,
              "end": 1947,
              "value": 32,
              "raw": "32"
            }
          }
        },
        "prefix": true
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1949,
        "end": 2058,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1953,
            "end": 2056,
            "argument": {
              "type": "NewExpression",
              "start": 1959,
              "end": 2055,
              "callee": {
                "type": "Identifier",
                "start": 1963,
                "end": 1975,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1976,
                  "end": 2052,
                  "left": {
                    "type": "Literal",
                    "start": 1976,
                    "end": 2035,
                    "value": "#10: SwitchTest(NaN) === 32. Actual:  SwitchTest(NaN) ===",
                    "raw": "\"#10: SwitchTest(NaN) === 32. Actual:  SwitchTest(NaN) ===\""
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 2037,
                    "end": 2052,
                    "callee": {
                      "type": "Identifier",
                      "start": 2037,
                      "end": 2047,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 2048,
                        "end": 2051,
                        "name": "NaN"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2060,
      "end": 2205,
      "test": {
        "type": "UnaryExpression",
        "start": 2063,
        "end": 2094,
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 2064,
          "end": 2094,
          "expression": {
            "type": "BinaryExpression",
            "start": 2065,
            "end": 2093,
            "left": {
              "type": "CallExpression",
              "start": 2065,
              "end": 2085,
              "callee": {
                "type": "Identifier",
                "start": 2065,
                "end": 2075,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 2076,
                  "end": 2084,
                  "name": "Infinity"
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 2090,
              "end": 2093,
              "value": 768,
              "raw": "768"
            }
          }
        },
        "prefix": true
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2095,
        "end": 2205,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2099,
            "end": 2203,
            "argument": {
              "type": "NewExpression",
              "start": 2105,
              "end": 2202,
              "callee": {
                "type": "Identifier",
                "start": 2109,
                "end": 2121,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2122,
                  "end": 2199,
                  "left": {
                    "type": "Literal",
                    "start": 2122,
                    "end": 2182,
                    "value": "#10: SwitchTest(NaN) === 768. Actual:  SwitchTest(NaN) ===",
                    "raw": "\"#10: SwitchTest(NaN) === 768. Actual:  SwitchTest(NaN) ===\""
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 2184,
                    "end": 2199,
                    "callee": {
                      "type": "Identifier",
                      "start": 2184,
                      "end": 2194,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 2195,
                        "end": 2198,
                        "name": "NaN"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}