{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "SwitchTest",
        "start": 350,
        "end": 360
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "value",
          "start": 361,
          "end": 366
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "result",
                  "start": 375,
                  "end": 381
                },
                "init": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 384,
                  "end": 385
                },
                "start": 375,
                "end": 385
              }
            ],
            "start": 371,
            "end": 386
          },
          {
            "type": "SwitchStatement",
            "discriminant": {
              "type": "Identifier",
              "name": "value",
              "start": 399,
              "end": 404
            },
            "cases": [
              {
                "type": "SwitchCase",
                "test": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 417,
                  "end": 418
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "result",
                        "start": 426,
                        "end": 432
                      },
                      "right": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 436,
                        "end": 437
                      },
                      "start": 426,
                      "end": 437
                    },
                    "start": 426,
                    "end": 438
                  }
                ],
                "start": 412,
                "end": 438
              },
              {
                "type": "SwitchCase",
                "test": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 448,
                  "end": 449
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "result",
                        "start": 457,
                        "end": 463
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4,
                        "raw": "4",
                        "start": 467,
                        "end": 468
                      },
                      "start": 457,
                      "end": 468
                    },
                    "start": 457,
                    "end": 469
                  },
                  {
                    "type": "BreakStatement",
                    "label": null,
                    "start": 476,
                    "end": 482
                  }
                ],
                "start": 443,
                "end": 482
              },
              {
                "type": "SwitchCase",
                "test": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 492,
                  "end": 493
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "result",
                        "start": 501,
                        "end": 507
                      },
                      "right": {
                        "type": "Literal",
                        "value": 8,
                        "raw": "8",
                        "start": 511,
                        "end": 512
                      },
                      "start": 501,
                      "end": 512
                    },
                    "start": 501,
                    "end": 513
                  }
                ],
                "start": 487,
                "end": 513
              },
              {
                "type": "SwitchCase",
                "test": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "isNaN",
                    "start": 523,
                    "end": 528
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "value",
                      "start": 529,
                      "end": 534
                    }
                  ],
                  "optional": false,
                  "start": 523,
                  "end": 535
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "result",
                        "start": 543,
                        "end": 549
                      },
                      "right": {
                        "type": "Literal",
                        "value": 16,
                        "raw": "16",
                        "start": 553,
                        "end": 555
                      },
                      "start": 543,
                      "end": 555
                    },
                    "start": 543,
                    "end": 556
                  }
                ],
                "start": 518,
                "end": 556
              },
              {
                "type": "SwitchCase",
                "test": null,
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "result",
                        "start": 576,
                        "end": 582
                      },
                      "right": {
                        "type": "Literal",
                        "value": 32,
                        "raw": "32",
                        "start": 586,
                        "end": 588
                      },
                      "start": 576,
                      "end": 588
                    },
                    "start": 576,
                    "end": 589
                  },
                  {
                    "type": "BreakStatement",
                    "label": null,
                    "start": 596,
                    "end": 602
                  }
                ],
                "start": 561,
                "end": 602
              },
              {
                "type": "SwitchCase",
                "test": {
                  "type": "Literal",
                  "value": null,
                  "raw": "null",
                  "start": 612,
                  "end": 616
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "result",
                        "start": 624,
                        "end": 630
                      },
                      "right": {
                        "type": "Literal",
                        "value": 64,
                        "raw": "64",
                        "start": 634,
                        "end": 636
                      },
                      "start": 624,
                      "end": 636
                    },
                    "start": 624,
                    "end": 637
                  }
                ],
                "start": 607,
                "end": 637
              },
              {
                "type": "SwitchCase",
                "test": {
                  "type": "Identifier",
                  "name": "isNaN",
                  "start": 647,
                  "end": 652
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "result",
                        "start": 660,
                        "end": 666
                      },
                      "right": {
                        "type": "Literal",
                        "value": 128,
                        "raw": "128",
                        "start": 670,
                        "end": 673
                      },
                      "start": 660,
                      "end": 673
                    },
                    "start": 660,
                    "end": 674
                  },
                  {
                    "type": "BreakStatement",
                    "label": null,
                    "start": 681,
                    "end": 687
                  }
                ],
                "start": 642,
                "end": 687
              },
              {
                "type": "SwitchCase",
                "test": {
                  "type": "Identifier",
                  "name": "Infinity",
                  "start": 697,
                  "end": 705
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "result",
                        "start": 713,
                        "end": 719
                      },
                      "right": {
                        "type": "Literal",
                        "value": 256,
                        "raw": "256",
                        "start": 723,
                        "end": 726
                      },
                      "start": 713,
                      "end": 726
                    },
                    "start": 713,
                    "end": 727
                  }
                ],
                "start": 692,
                "end": 727
              },
              {
                "type": "SwitchCase",
                "test": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 737,
                    "end": 738
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "value": 3,
                    "raw": "3",
                    "start": 739,
                    "end": 740
                  },
                  "start": 737,
                  "end": 740
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "result",
                        "start": 748,
                        "end": 754
                      },
                      "right": {
                        "type": "Literal",
                        "value": 512,
                        "raw": "512",
                        "start": 758,
                        "end": 761
                      },
                      "start": 748,
                      "end": 761
                    },
                    "start": 748,
                    "end": 762
                  },
                  {
                    "type": "BreakStatement",
                    "label": null,
                    "start": 769,
                    "end": 775
                  }
                ],
                "start": 732,
                "end": 775
              },
              {
                "type": "SwitchCase",
                "test": {
                  "type": "Identifier",
                  "name": "undefined",
                  "start": 785,
                  "end": 794
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "result",
                        "start": 802,
                        "end": 808
                      },
                      "right": {
                        "type": "Literal",
                        "value": 1024,
                        "raw": "1024",
                        "start": 812,
                        "end": 816
                      },
                      "start": 802,
                      "end": 816
                    },
                    "start": 802,
                    "end": 817
                  }
                ],
                "start": 780,
                "end": 817
              }
            ],
            "start": 392,
            "end": 821
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "result",
              "start": 834,
              "end": 840
            },
            "start": 827,
            "end": 841
          }
        ],
        "start": 367,
        "end": 843
      },
      "expression": false,
      "start": 341,
      "end": 843
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "n",
            "start": 849,
            "end": 850
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "Number",
              "start": 853,
              "end": 859
            },
            "arguments": [
              {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 860,
                "end": 865
              }
            ],
            "optional": false,
            "start": 853,
            "end": 866
          },
          "start": 849,
          "end": 866
        }
      ],
      "start": 845,
      "end": 867
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "SwitchTest",
                "start": 874,
                "end": 884
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "n",
                  "start": 885,
                  "end": 886
                }
              ],
              "optional": false,
              "start": 874,
              "end": 887
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "value": 6,
              "raw": "6",
              "start": 892,
              "end": 893
            },
            "start": 874,
            "end": 893
          },
          "start": 873,
          "end": 894
        },
        "prefix": true,
        "start": 872,
        "end": 894
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 909,
                "end": 921
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: SwitchTest(Number(false)) === 6. Actual:  SwitchTest(Number(false)) ===",
                    "raw": "\"#1: SwitchTest(Number(false)) === 6. Actual:  SwitchTest(Number(false)) ===\"",
                    "start": 922,
                    "end": 999
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "SwitchTest",
                      "start": 1001,
                      "end": 1011
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "n",
                        "start": 1012,
                        "end": 1013
                      }
                    ],
                    "optional": false,
                    "start": 1001,
                    "end": 1014
                  },
                  "start": 922,
                  "end": 1014
                }
              ],
              "start": 905,
              "end": 1017
            },
            "start": 899,
            "end": 1018
          }
        ],
        "start": 895,
        "end": 1020
      },
      "alternate": null,
      "start": 869,
      "end": 1020
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "SwitchTest",
                "start": 1027,
                "end": 1037
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "parseInt",
                  "start": 1038,
                  "end": 1046
                }
              ],
              "optional": false,
              "start": 1027,
              "end": 1047
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "value": 32,
              "raw": "32",
              "start": 1052,
              "end": 1054
            },
            "start": 1027,
            "end": 1054
          },
          "start": 1026,
          "end": 1055
        },
        "prefix": true,
        "start": 1025,
        "end": 1055
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1070,
                "end": 1082
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: SwitchTest(parseInt) === 32. Actual:  SwitchTest(parseInt) ===",
                    "raw": "\"#2: SwitchTest(parseInt) === 32. Actual:  SwitchTest(parseInt) ===\"",
                    "start": 1083,
                    "end": 1151
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "SwitchTest",
                      "start": 1153,
                      "end": 1163
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "parseInt",
                        "start": 1164,
                        "end": 1172
                      }
                    ],
                    "optional": false,
                    "start": 1153,
                    "end": 1173
                  },
                  "start": 1083,
                  "end": 1173
                }
              ],
              "start": 1066,
              "end": 1176
            },
            "start": 1060,
            "end": 1177
          }
        ],
        "start": 1056,
        "end": 1179
      },
      "alternate": null,
      "start": 1022,
      "end": 1179
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "SwitchTest",
                "start": 1186,
                "end": 1196
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "isNaN",
                  "start": 1197,
                  "end": 1202
                }
              ],
              "optional": false,
              "start": 1186,
              "end": 1203
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "value": 128,
              "raw": "128",
              "start": 1208,
              "end": 1211
            },
            "start": 1186,
            "end": 1211
          },
          "start": 1185,
          "end": 1212
        },
        "prefix": true,
        "start": 1184,
        "end": 1212
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1227,
                "end": 1239
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: SwitchTest(isNaN) === 128. Actual:  SwitchTest(isNaN) ===",
                    "raw": "\"#3: SwitchTest(isNaN) === 128. Actual:  SwitchTest(isNaN) ===\"",
                    "start": 1240,
                    "end": 1303
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "SwitchTest",
                      "start": 1305,
                      "end": 1315
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "isNaN",
                        "start": 1316,
                        "end": 1321
                      }
                    ],
                    "optional": false,
                    "start": 1305,
                    "end": 1322
                  },
                  "start": 1240,
                  "end": 1322
                }
              ],
              "start": 1223,
              "end": 1325
            },
            "start": 1217,
            "end": 1326
          }
        ],
        "start": 1213,
        "end": 1328
      },
      "alternate": null,
      "start": 1181,
      "end": 1328
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "SwitchTest",
                "start": 1335,
                "end": 1345
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 1346,
                  "end": 1350
                }
              ],
              "optional": false,
              "start": 1335,
              "end": 1351
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "value": 32,
              "raw": "32",
              "start": 1356,
              "end": 1358
            },
            "start": 1335,
            "end": 1358
          },
          "start": 1334,
          "end": 1359
        },
        "prefix": true,
        "start": 1333,
        "end": 1359
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1374,
                "end": 1386
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#6: SwitchTest(true) === 32. Actual:  SwitchTest(true) ===",
                    "raw": "\"#6: SwitchTest(true) === 32. Actual:  SwitchTest(true) ===\"",
                    "start": 1387,
                    "end": 1447
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "SwitchTest",
                      "start": 1449,
                      "end": 1459
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "start": 1460,
                        "end": 1464
                      }
                    ],
                    "optional": false,
                    "start": 1449,
                    "end": 1465
                  },
                  "start": 1387,
                  "end": 1465
                }
              ],
              "start": 1370,
              "end": 1468
            },
            "start": 1364,
            "end": 1469
          }
        ],
        "start": 1360,
        "end": 1471
      },
      "alternate": null,
      "start": 1330,
      "end": 1471
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "SwitchTest",
                "start": 1478,
                "end": 1488
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1489,
                  "end": 1494
                }
              ],
              "optional": false,
              "start": 1478,
              "end": 1495
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "value": 48,
              "raw": "48",
              "start": 1500,
              "end": 1502
            },
            "start": 1478,
            "end": 1502
          },
          "start": 1477,
          "end": 1503
        },
        "prefix": true,
        "start": 1476,
        "end": 1503
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1518,
                "end": 1530
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#7: SwitchTest(false) === 48. Actual:  SwitchTest(false) ===",
                    "raw": "\"#7: SwitchTest(false) === 48. Actual:  SwitchTest(false) ===\"",
                    "start": 1531,
                    "end": 1593
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "SwitchTest",
                      "start": 1595,
                      "end": 1605
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": false,
                        "raw": "false",
                        "start": 1606,
                        "end": 1611
                      }
                    ],
                    "optional": false,
                    "start": 1595,
                    "end": 1612
                  },
                  "start": 1531,
                  "end": 1612
                }
              ],
              "start": 1514,
              "end": 1615
            },
            "start": 1508,
            "end": 1616
          }
        ],
        "start": 1504,
        "end": 1618
      },
      "alternate": null,
      "start": 1473,
      "end": 1618
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "SwitchTest",
                "start": 1625,
                "end": 1635
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": null,
                  "raw": "null",
                  "start": 1636,
                  "end": 1640
                }
              ],
              "optional": false,
              "start": 1625,
              "end": 1641
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "value": 192,
              "raw": "192",
              "start": 1646,
              "end": 1649
            },
            "start": 1625,
            "end": 1649
          },
          "start": 1624,
          "end": 1650
        },
        "prefix": true,
        "start": 1623,
        "end": 1650
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1665,
                "end": 1677
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#8: SwitchTest(null) === 192. Actual:  SwitchTest(null) ===",
                    "raw": "\"#8: SwitchTest(null) === 192. Actual:  SwitchTest(null) ===\"",
                    "start": 1678,
                    "end": 1739
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "SwitchTest",
                      "start": 1741,
                      "end": 1751
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": null,
                        "raw": "null",
                        "start": 1752,
                        "end": 1756
                      }
                    ],
                    "optional": false,
                    "start": 1741,
                    "end": 1757
                  },
                  "start": 1678,
                  "end": 1757
                }
              ],
              "start": 1661,
              "end": 1760
            },
            "start": 1655,
            "end": 1761
          }
        ],
        "start": 1651,
        "end": 1763
      },
      "alternate": null,
      "start": 1620,
      "end": 1763
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "SwitchTest",
                "start": 1770,
                "end": 1780
              },
              "arguments": [
                {
                  "type": "UnaryExpression",
                  "operator": "void",
                  "argument": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0",
                    "start": 1786,
                    "end": 1787
                  },
                  "prefix": true,
                  "start": 1781,
                  "end": 1787
                }
              ],
              "optional": false,
              "start": 1770,
              "end": 1788
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "value": 1024,
              "raw": "1024",
              "start": 1793,
              "end": 1797
            },
            "start": 1770,
            "end": 1797
          },
          "start": 1769,
          "end": 1798
        },
        "prefix": true,
        "start": 1768,
        "end": 1798
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1813,
                "end": 1825
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#9: SwitchTest(void 0) === 1024. Actual:  SwitchTest(void 0) ===",
                    "raw": "\"#9: SwitchTest(void 0) === 1024. Actual:  SwitchTest(void 0) ===\"",
                    "start": 1826,
                    "end": 1892
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "SwitchTest",
                      "start": 1894,
                      "end": 1904
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "void",
                        "argument": {
                          "type": "Literal",
                          "value": 0,
                          "raw": "0",
                          "start": 1910,
                          "end": 1911
                        },
                        "prefix": true,
                        "start": 1905,
                        "end": 1911
                      }
                    ],
                    "optional": false,
                    "start": 1894,
                    "end": 1912
                  },
                  "start": 1826,
                  "end": 1912
                }
              ],
              "start": 1809,
              "end": 1915
            },
            "start": 1803,
            "end": 1916
          }
        ],
        "start": 1799,
        "end": 1918
      },
      "alternate": null,
      "start": 1765,
      "end": 1918
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "SwitchTest",
                "start": 1925,
                "end": 1935
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 1936,
                  "end": 1939
                }
              ],
              "optional": false,
              "start": 1925,
              "end": 1940
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "value": 32,
              "raw": "32",
              "start": 1945,
              "end": 1947
            },
            "start": 1925,
            "end": 1947
          },
          "start": 1924,
          "end": 1948
        },
        "prefix": true,
        "start": 1923,
        "end": 1948
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1963,
                "end": 1975
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: SwitchTest(NaN) === 32. Actual:  SwitchTest(NaN) ===",
                    "raw": "\"#10: SwitchTest(NaN) === 32. Actual:  SwitchTest(NaN) ===\"",
                    "start": 1976,
                    "end": 2035
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "SwitchTest",
                      "start": 2037,
                      "end": 2047
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 2048,
                        "end": 2051
                      }
                    ],
                    "optional": false,
                    "start": 2037,
                    "end": 2052
                  },
                  "start": 1976,
                  "end": 2052
                }
              ],
              "start": 1959,
              "end": 2055
            },
            "start": 1953,
            "end": 2056
          }
        ],
        "start": 1949,
        "end": 2058
      },
      "alternate": null,
      "start": 1920,
      "end": 2058
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "SwitchTest",
                "start": 2065,
                "end": 2075
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "Infinity",
                  "start": 2076,
                  "end": 2084
                }
              ],
              "optional": false,
              "start": 2065,
              "end": 2085
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "value": 768,
              "raw": "768",
              "start": 2090,
              "end": 2093
            },
            "start": 2065,
            "end": 2093
          },
          "start": 2064,
          "end": 2094
        },
        "prefix": true,
        "start": 2063,
        "end": 2094
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2109,
                "end": 2121
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#10: SwitchTest(NaN) === 768. Actual:  SwitchTest(NaN) ===",
                    "raw": "\"#10: SwitchTest(NaN) === 768. Actual:  SwitchTest(NaN) ===\"",
                    "start": 2122,
                    "end": 2182
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "SwitchTest",
                      "start": 2184,
                      "end": 2194
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "NaN",
                        "start": 2195,
                        "end": 2198
                      }
                    ],
                    "optional": false,
                    "start": 2184,
                    "end": 2199
                  },
                  "start": 2122,
                  "end": 2199
                }
              ],
              "start": 2105,
              "end": 2202
            },
            "start": 2099,
            "end": 2203
          }
        ],
        "start": 2095,
        "end": 2205
      },
      "alternate": null,
      "start": 2060,
      "end": 2205
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2206
}