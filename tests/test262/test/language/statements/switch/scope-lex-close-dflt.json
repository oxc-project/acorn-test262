{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 799,
            "end": 800
          },
          "init": {
            "type": "Literal",
            "value": "outside",
            "raw": "'outside'",
            "start": 803,
            "end": 812
          },
          "start": 799,
          "end": 812
        }
      ],
      "start": 795,
      "end": 813
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "probeDefault",
            "start": 818,
            "end": 830
          },
          "init": null,
          "start": 818,
          "end": 830
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "probeDefaultBeforeCase",
            "start": 832,
            "end": 854
          },
          "init": null,
          "start": 832,
          "end": 854
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "probeCase",
            "start": 856,
            "end": 865
          },
          "init": null,
          "start": 856,
          "end": 865
        }
      ],
      "start": 814,
      "end": 866
    },
    {
      "type": "SwitchStatement",
      "discriminant": {
        "type": "Literal",
        "value": null,
        "raw": "null",
        "start": 876,
        "end": 880
      },
      "cases": [
        {
          "type": "SwitchCase",
          "test": null,
          "consequent": [
            {
              "type": "VariableDeclaration",
              "kind": "let",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "x",
                    "start": 903,
                    "end": 904
                  },
                  "init": {
                    "type": "Literal",
                    "value": "inside",
                    "raw": "'inside'",
                    "start": 907,
                    "end": 915
                  },
                  "start": 903,
                  "end": 915
                }
              ],
              "start": 899,
              "end": 916
            },
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "probeDefault",
                  "start": 921,
                  "end": 933
                },
                "right": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Identifier",
                          "name": "x",
                          "start": 956,
                          "end": 957
                        },
                        "start": 949,
                        "end": 958
                      }
                    ],
                    "start": 947,
                    "end": 960
                  },
                  "expression": false,
                  "start": 936,
                  "end": 960
                },
                "start": 921,
                "end": 960
              },
              "start": 921,
              "end": 961
            }
          ],
          "start": 886,
          "end": 961
        }
      ],
      "start": 868,
      "end": 963
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 965,
            "end": 971
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 972,
            "end": 981
          },
          "optional": false,
          "computed": false,
          "start": 965,
          "end": 981
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "probeDefault",
              "start": 982,
              "end": 994
            },
            "arguments": [],
            "optional": false,
            "start": 982,
            "end": 996
          },
          {
            "type": "Literal",
            "value": "inside",
            "raw": "'inside'",
            "start": 998,
            "end": 1006
          },
          {
            "type": "Literal",
            "value": "from lone `default` clause`",
            "raw": "'from lone `default` clause`'",
            "start": 1008,
            "end": 1037
          }
        ],
        "optional": false,
        "start": 965,
        "end": 1038
      },
      "start": 965,
      "end": 1039
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1040,
            "end": 1046
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1047,
            "end": 1056
          },
          "optional": false,
          "computed": false,
          "start": 1040,
          "end": 1056
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 1057,
            "end": 1058
          },
          {
            "type": "Literal",
            "value": "outside",
            "raw": "'outside'",
            "start": 1060,
            "end": 1069
          }
        ],
        "optional": false,
        "start": 1040,
        "end": 1070
      },
      "start": 1040,
      "end": 1071
    },
    {
      "type": "SwitchStatement",
      "discriminant": {
        "type": "Literal",
        "value": null,
        "raw": "null",
        "start": 1081,
        "end": 1085
      },
      "cases": [
        {
          "type": "SwitchCase",
          "test": null,
          "consequent": [
            {
              "type": "VariableDeclaration",
              "kind": "let",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "x",
                    "start": 1108,
                    "end": 1109
                  },
                  "init": {
                    "type": "Literal",
                    "value": "inside",
                    "raw": "'inside'",
                    "start": 1112,
                    "end": 1120
                  },
                  "start": 1108,
                  "end": 1120
                }
              ],
              "start": 1104,
              "end": 1121
            },
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "probeDefaultBeforeCase",
                  "start": 1126,
                  "end": 1148
                },
                "right": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Identifier",
                          "name": "x",
                          "start": 1171,
                          "end": 1172
                        },
                        "start": 1164,
                        "end": 1173
                      }
                    ],
                    "start": 1162,
                    "end": 1175
                  },
                  "expression": false,
                  "start": 1151,
                  "end": 1175
                },
                "start": 1126,
                "end": 1175
              },
              "start": 1126,
              "end": 1176
            }
          ],
          "start": 1091,
          "end": 1176
        },
        {
          "type": "SwitchCase",
          "test": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1184,
            "end": 1185
          },
          "consequent": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "probeCase",
                  "start": 1191,
                  "end": 1200
                },
                "right": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Identifier",
                          "name": "x",
                          "start": 1223,
                          "end": 1224
                        },
                        "start": 1216,
                        "end": 1225
                      }
                    ],
                    "start": 1214,
                    "end": 1227
                  },
                  "expression": false,
                  "start": 1203,
                  "end": 1227
                },
                "start": 1191,
                "end": 1227
              },
              "start": 1191,
              "end": 1228
            }
          ],
          "start": 1179,
          "end": 1228
        }
      ],
      "start": 1073,
      "end": 1230
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1232,
            "end": 1238
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1239,
            "end": 1248
          },
          "optional": false,
          "computed": false,
          "start": 1232,
          "end": 1248
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "probeDefaultBeforeCase",
              "start": 1252,
              "end": 1274
            },
            "arguments": [],
            "optional": false,
            "start": 1252,
            "end": 1276
          },
          {
            "type": "Literal",
            "value": "inside",
            "raw": "'inside'",
            "start": 1280,
            "end": 1288
          },
          {
            "type": "Literal",
            "value": "from `default` clause preceding `case` clause",
            "raw": "'from `default` clause preceding `case` clause'",
            "start": 1292,
            "end": 1339
          }
        ],
        "optional": false,
        "start": 1232,
        "end": 1341
      },
      "start": 1232,
      "end": 1342
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1343,
            "end": 1349
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1350,
            "end": 1359
          },
          "optional": false,
          "computed": false,
          "start": 1343,
          "end": 1359
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "probeCase",
              "start": 1363,
              "end": 1372
            },
            "arguments": [],
            "optional": false,
            "start": 1363,
            "end": 1374
          },
          {
            "type": "Literal",
            "value": "inside",
            "raw": "'inside'",
            "start": 1376,
            "end": 1384
          },
          {
            "type": "Literal",
            "value": "from `case` clause following `default` clause",
            "raw": "'from `case` clause following `default` clause'",
            "start": 1386,
            "end": 1433
          }
        ],
        "optional": false,
        "start": 1343,
        "end": 1435
      },
      "start": 1343,
      "end": 1436
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1437
}