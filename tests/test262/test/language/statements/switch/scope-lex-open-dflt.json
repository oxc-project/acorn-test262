{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 804,
            "end": 805
          },
          "init": {
            "type": "Literal",
            "value": "outside",
            "raw": "'outside'",
            "start": 808,
            "end": 817
          },
          "start": 804,
          "end": 817
        }
      ],
      "start": 800,
      "end": 818
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "probeExpr",
            "start": 823,
            "end": 832
          },
          "init": null,
          "start": 823,
          "end": 832
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "probeStmt",
            "start": 834,
            "end": 843
          },
          "init": null,
          "start": 834,
          "end": 843
        }
      ],
      "start": 819,
      "end": 844
    },
    {
      "type": "SwitchStatement",
      "discriminant": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "probeExpr",
          "start": 854,
          "end": 863
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 886,
                  "end": 887
                },
                "start": 879,
                "end": 888
              }
            ],
            "start": 877,
            "end": 890
          },
          "expression": false,
          "start": 866,
          "end": 890
        },
        "start": 854,
        "end": 890
      },
      "cases": [
        {
          "type": "SwitchCase",
          "test": null,
          "consequent": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "probeStmt",
                  "start": 909,
                  "end": 918
                },
                "right": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Identifier",
                          "name": "x",
                          "start": 941,
                          "end": 942
                        },
                        "start": 934,
                        "end": 943
                      }
                    ],
                    "start": 932,
                    "end": 945
                  },
                  "expression": false,
                  "start": 921,
                  "end": 945
                },
                "start": 909,
                "end": 945
              },
              "start": 909,
              "end": 946
            },
            {
              "type": "VariableDeclaration",
              "kind": "let",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "x",
                    "start": 955,
                    "end": 956
                  },
                  "init": {
                    "type": "Literal",
                    "value": "inside",
                    "raw": "'inside'",
                    "start": 959,
                    "end": 967
                  },
                  "start": 955,
                  "end": 967
                }
              ],
              "start": 951,
              "end": 968
            }
          ],
          "start": 896,
          "end": 968
        }
      ],
      "start": 846,
      "end": 970
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 972,
            "end": 978
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 979,
            "end": 988
          },
          "optional": false,
          "computed": false,
          "start": 972,
          "end": 988
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "probeExpr",
              "start": 989,
              "end": 998
            },
            "arguments": [],
            "optional": false,
            "start": 989,
            "end": 1000
          },
          {
            "type": "Literal",
            "value": "outside",
            "raw": "'outside'",
            "start": 1002,
            "end": 1011
          }
        ],
        "optional": false,
        "start": 972,
        "end": 1012
      },
      "start": 972,
      "end": 1013
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1014,
            "end": 1020
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1021,
            "end": 1030
          },
          "optional": false,
          "computed": false,
          "start": 1014,
          "end": 1030
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "probeStmt",
              "start": 1031,
              "end": 1040
            },
            "arguments": [],
            "optional": false,
            "start": 1031,
            "end": 1042
          },
          {
            "type": "Literal",
            "value": "inside",
            "raw": "'inside'",
            "start": 1044,
            "end": 1052
          }
        ],
        "optional": false,
        "start": 1014,
        "end": 1053
      },
      "start": 1014,
      "end": 1054
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1055
}