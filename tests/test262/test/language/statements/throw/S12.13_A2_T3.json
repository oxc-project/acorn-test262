{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 328,
              "end": 332
            },
            "start": 322,
            "end": 333
          }
        ],
        "start": 318,
        "end": 335
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 342,
          "end": 343
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 352,
                  "end": 353
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 356,
                  "end": 360
                },
                "start": 352,
                "end": 360
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 372,
                    "end": 384
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#1: Exception ===true. Actual:  Exception ===",
                        "raw": "'#1: Exception ===true. Actual:  Exception ==='",
                        "start": 385,
                        "end": 432
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 434,
                        "end": 435
                      },
                      "start": 385,
                      "end": 435
                    }
                  ],
                  "start": 368,
                  "end": 438
                },
                "start": 362,
                "end": 439
              },
              "alternate": null,
              "start": 348,
              "end": 439
            }
          ],
          "start": 344,
          "end": 441
        },
        "start": 336,
        "end": 441
      },
      "finalizer": null,
      "start": 315,
      "end": 441
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Literal",
              "value": false,
              "raw": "false",
              "start": 467,
              "end": 472
            },
            "start": 461,
            "end": 473
          }
        ],
        "start": 457,
        "end": 475
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 482,
          "end": 483
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 492,
                  "end": 493
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 496,
                  "end": 501
                },
                "start": 492,
                "end": 501
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 513,
                    "end": 525
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#2: Exception ===false. Actual:  Exception ===",
                        "raw": "'#2: Exception ===false. Actual:  Exception ==='",
                        "start": 526,
                        "end": 574
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 576,
                        "end": 577
                      },
                      "start": 526,
                      "end": 577
                    }
                  ],
                  "start": 509,
                  "end": 580
                },
                "start": 503,
                "end": 581
              },
              "alternate": null,
              "start": 488,
              "end": 581
            }
          ],
          "start": 484,
          "end": 583
        },
        "start": 476,
        "end": 583
      },
      "finalizer": null,
      "start": 454,
      "end": 583
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "b",
            "start": 600,
            "end": 601
          },
          "init": {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 602,
            "end": 607
          },
          "start": 600,
          "end": 607
        }
      ],
      "start": 596,
      "end": 608
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Identifier",
              "name": "b",
              "start": 622,
              "end": 623
            },
            "start": 616,
            "end": 624
          }
        ],
        "start": 612,
        "end": 626
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 633,
          "end": 634
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 643,
                  "end": 644
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 647,
                  "end": 652
                },
                "start": 643,
                "end": 652
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 664,
                    "end": 676
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#3: Exception ===false. Actual:  Exception ===",
                        "raw": "'#3: Exception ===false. Actual:  Exception ==='",
                        "start": 677,
                        "end": 725
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 727,
                        "end": 728
                      },
                      "start": 677,
                      "end": 728
                    }
                  ],
                  "start": 660,
                  "end": 731
                },
                "start": 654,
                "end": 732
              },
              "alternate": null,
              "start": 639,
              "end": 732
            }
          ],
          "start": 635,
          "end": 734
        },
        "start": 627,
        "end": 734
      },
      "finalizer": null,
      "start": 609,
      "end": 734
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "b",
            "start": 751,
            "end": 752
          },
          "init": {
            "type": "Literal",
            "value": true,
            "raw": "true",
            "start": 753,
            "end": 757
          },
          "start": 751,
          "end": 757
        }
      ],
      "start": 747,
      "end": 758
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Identifier",
              "name": "b",
              "start": 772,
              "end": 773
            },
            "start": 766,
            "end": 774
          }
        ],
        "start": 762,
        "end": 776
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 783,
          "end": 784
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 793,
                  "end": 794
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 797,
                  "end": 801
                },
                "start": 793,
                "end": 801
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 813,
                    "end": 825
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#4: Exception ===true. Actual:  Exception ===",
                        "raw": "'#4: Exception ===true. Actual:  Exception ==='",
                        "start": 826,
                        "end": 873
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 875,
                        "end": 876
                      },
                      "start": 826,
                      "end": 876
                    }
                  ],
                  "start": 809,
                  "end": 879
                },
                "start": 803,
                "end": 880
              },
              "alternate": null,
              "start": 789,
              "end": 880
            }
          ],
          "start": 785,
          "end": 882
        },
        "start": 777,
        "end": 882
      },
      "finalizer": null,
      "start": 759,
      "end": 882
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 883
}