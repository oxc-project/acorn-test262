{
  "type": "Program",
  "start": 0,
  "end": 1305,
  "body": [
    {
      "type": "TryStatement",
      "start": 314,
      "end": 433,
      "block": {
        "type": "BlockStatement",
        "start": 317,
        "end": 332,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 321,
            "end": 330,
            "argument": {
              "type": "Literal",
              "start": 327,
              "end": 329,
              "value": 13,
              "raw": "13"
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 333,
        "end": 433,
        "param": {
          "type": "Identifier",
          "start": 339,
          "end": 340,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 341,
          "end": 433,
          "body": [
            {
              "type": "IfStatement",
              "start": 345,
              "end": 431,
              "test": {
                "type": "BinaryExpression",
                "start": 349,
                "end": 355,
                "left": {
                  "type": "Identifier",
                  "start": 349,
                  "end": 350,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 353,
                  "end": 355,
                  "value": 13,
                  "raw": "13"
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 357,
                "end": 431,
                "argument": {
                  "type": "NewExpression",
                  "start": 363,
                  "end": 430,
                  "callee": {
                    "type": "Identifier",
                    "start": 367,
                    "end": 379,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 380,
                      "end": 428,
                      "left": {
                        "type": "Literal",
                        "start": 380,
                        "end": 425,
                        "value": "#1: Exception ===13. Actual:  Exception ===",
                        "raw": "'#1: Exception ===13. Actual:  Exception ==='"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 427,
                        "end": 428,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "VariableDeclaration",
      "start": 446,
      "end": 455,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 450,
          "end": 454,
          "id": {
            "type": "Identifier",
            "start": 450,
            "end": 451,
            "name": "b"
          },
          "init": {
            "type": "Literal",
            "start": 452,
            "end": 454,
            "value": 13,
            "raw": "13"
          }
        }
      ]
    },
    {
      "type": "TryStatement",
      "start": 456,
      "end": 574,
      "block": {
        "type": "BlockStatement",
        "start": 459,
        "end": 473,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 463,
            "end": 471,
            "argument": {
              "type": "Identifier",
              "start": 469,
              "end": 470,
              "name": "b"
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 474,
        "end": 574,
        "param": {
          "type": "Identifier",
          "start": 480,
          "end": 481,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 482,
          "end": 574,
          "body": [
            {
              "type": "IfStatement",
              "start": 486,
              "end": 572,
              "test": {
                "type": "BinaryExpression",
                "start": 490,
                "end": 496,
                "left": {
                  "type": "Identifier",
                  "start": 490,
                  "end": 491,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 494,
                  "end": 496,
                  "value": 13,
                  "raw": "13"
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 498,
                "end": 572,
                "argument": {
                  "type": "NewExpression",
                  "start": 504,
                  "end": 571,
                  "callee": {
                    "type": "Identifier",
                    "start": 508,
                    "end": 520,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 521,
                      "end": 569,
                      "left": {
                        "type": "Literal",
                        "start": 521,
                        "end": 566,
                        "value": "#2: Exception ===13. Actual:  Exception ===",
                        "raw": "'#2: Exception ===13. Actual:  Exception ==='"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 568,
                        "end": 569,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 587,
      "end": 712,
      "block": {
        "type": "BlockStatement",
        "start": 590,
        "end": 607,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 594,
            "end": 605,
            "argument": {
              "type": "Literal",
              "start": 600,
              "end": 604,
              "value": 2.13,
              "raw": "2.13"
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 608,
        "end": 712,
        "param": {
          "type": "Identifier",
          "start": 614,
          "end": 615,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 616,
          "end": 712,
          "body": [
            {
              "type": "IfStatement",
              "start": 620,
              "end": 710,
              "test": {
                "type": "BinaryExpression",
                "start": 624,
                "end": 632,
                "left": {
                  "type": "Identifier",
                  "start": 624,
                  "end": 625,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 628,
                  "end": 632,
                  "value": 2.13,
                  "raw": "2.13"
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 634,
                "end": 710,
                "argument": {
                  "type": "NewExpression",
                  "start": 640,
                  "end": 709,
                  "callee": {
                    "type": "Identifier",
                    "start": 644,
                    "end": 656,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 657,
                      "end": 707,
                      "left": {
                        "type": "Literal",
                        "start": 657,
                        "end": 704,
                        "value": "#3: Exception ===2.13. Actual:  Exception ===",
                        "raw": "'#3: Exception ===2.13. Actual:  Exception ==='"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 706,
                        "end": 707,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 725,
      "end": 796,
      "block": {
        "type": "BlockStatement",
        "start": 728,
        "end": 744,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 732,
            "end": 742,
            "argument": {
              "type": "Identifier",
              "start": 738,
              "end": 741,
              "name": "NaN"
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 745,
        "end": 796,
        "param": {
          "type": "Identifier",
          "start": 751,
          "end": 752,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 753,
          "end": 796,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 757,
              "end": 794,
              "expression": {
                "type": "CallExpression",
                "start": 757,
                "end": 793,
                "callee": {
                  "type": "MemberExpression",
                  "start": 757,
                  "end": 773,
                  "object": {
                    "type": "Identifier",
                    "start": 757,
                    "end": 763,
                    "name": "assert"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 764,
                    "end": 773,
                    "name": "sameValue"
                  },
                  "optional": false,
                  "computed": false
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 774,
                    "end": 775,
                    "name": "e"
                  },
                  {
                    "type": "Identifier",
                    "start": 777,
                    "end": 780,
                    "name": "NaN"
                  },
                  {
                    "type": "Literal",
                    "start": 782,
                    "end": 792,
                    "value": "e is NaN",
                    "raw": "\"e is NaN\""
                  }
                ],
                "optional": false
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 809,
      "end": 949,
      "block": {
        "type": "BlockStatement",
        "start": 812,
        "end": 834,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 816,
            "end": 832,
            "argument": {
              "type": "UnaryExpression",
              "start": 822,
              "end": 831,
              "operator": "+",
              "argument": {
                "type": "Identifier",
                "start": 823,
                "end": 831,
                "name": "Infinity"
              },
              "prefix": true
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 835,
        "end": 949,
        "param": {
          "type": "Identifier",
          "start": 841,
          "end": 842,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 843,
          "end": 949,
          "body": [
            {
              "type": "IfStatement",
              "start": 847,
              "end": 947,
              "test": {
                "type": "BinaryExpression",
                "start": 851,
                "end": 864,
                "left": {
                  "type": "Identifier",
                  "start": 851,
                  "end": 852,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "UnaryExpression",
                  "start": 855,
                  "end": 864,
                  "operator": "+",
                  "argument": {
                    "type": "Identifier",
                    "start": 856,
                    "end": 864,
                    "name": "Infinity"
                  },
                  "prefix": true
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 866,
                "end": 947,
                "argument": {
                  "type": "NewExpression",
                  "start": 872,
                  "end": 946,
                  "callee": {
                    "type": "Identifier",
                    "start": 876,
                    "end": 888,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 889,
                      "end": 944,
                      "left": {
                        "type": "Literal",
                        "start": 889,
                        "end": 941,
                        "value": "#5: Exception ===+Infinity. Actual:  Exception ===",
                        "raw": "'#5: Exception ===+Infinity. Actual:  Exception ==='"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 943,
                        "end": 944,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 962,
      "end": 1102,
      "block": {
        "type": "BlockStatement",
        "start": 965,
        "end": 987,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 969,
            "end": 985,
            "argument": {
              "type": "UnaryExpression",
              "start": 975,
              "end": 984,
              "operator": "-",
              "argument": {
                "type": "Identifier",
                "start": 976,
                "end": 984,
                "name": "Infinity"
              },
              "prefix": true
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 988,
        "end": 1102,
        "param": {
          "type": "Identifier",
          "start": 994,
          "end": 995,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 996,
          "end": 1102,
          "body": [
            {
              "type": "IfStatement",
              "start": 1000,
              "end": 1100,
              "test": {
                "type": "BinaryExpression",
                "start": 1004,
                "end": 1017,
                "left": {
                  "type": "Identifier",
                  "start": 1004,
                  "end": 1005,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "UnaryExpression",
                  "start": 1008,
                  "end": 1017,
                  "operator": "-",
                  "argument": {
                    "type": "Identifier",
                    "start": 1009,
                    "end": 1017,
                    "name": "Infinity"
                  },
                  "prefix": true
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 1019,
                "end": 1100,
                "argument": {
                  "type": "NewExpression",
                  "start": 1025,
                  "end": 1099,
                  "callee": {
                    "type": "Identifier",
                    "start": 1029,
                    "end": 1041,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 1042,
                      "end": 1097,
                      "left": {
                        "type": "Literal",
                        "start": 1042,
                        "end": 1094,
                        "value": "#6: Exception ===-Infinity. Actual:  Exception ===",
                        "raw": "'#6: Exception ===-Infinity. Actual:  Exception ==='"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1096,
                        "end": 1097,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 1115,
      "end": 1234,
      "block": {
        "type": "BlockStatement",
        "start": 1118,
        "end": 1133,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1122,
            "end": 1131,
            "argument": {
              "type": "UnaryExpression",
              "start": 1128,
              "end": 1130,
              "operator": "+",
              "argument": {
                "type": "Literal",
                "start": 1129,
                "end": 1130,
                "value": 0,
                "raw": "0"
              },
              "prefix": true
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1134,
        "end": 1234,
        "param": {
          "type": "Identifier",
          "start": 1140,
          "end": 1141,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1142,
          "end": 1234,
          "body": [
            {
              "type": "IfStatement",
              "start": 1146,
              "end": 1232,
              "test": {
                "type": "BinaryExpression",
                "start": 1150,
                "end": 1156,
                "left": {
                  "type": "Identifier",
                  "start": 1150,
                  "end": 1151,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "UnaryExpression",
                  "start": 1154,
                  "end": 1156,
                  "operator": "+",
                  "argument": {
                    "type": "Literal",
                    "start": 1155,
                    "end": 1156,
                    "value": 0,
                    "raw": "0"
                  },
                  "prefix": true
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 1158,
                "end": 1232,
                "argument": {
                  "type": "NewExpression",
                  "start": 1164,
                  "end": 1231,
                  "callee": {
                    "type": "Identifier",
                    "start": 1168,
                    "end": 1180,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 1181,
                      "end": 1229,
                      "left": {
                        "type": "Literal",
                        "start": 1181,
                        "end": 1226,
                        "value": "#7: Exception ===+0. Actual:  Exception ===",
                        "raw": "'#7: Exception ===+0. Actual:  Exception ==='"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1228,
                        "end": 1229,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 1247,
      "end": 1304,
      "block": {
        "type": "BlockStatement",
        "start": 1250,
        "end": 1265,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1254,
            "end": 1263,
            "argument": {
              "type": "UnaryExpression",
              "start": 1260,
              "end": 1262,
              "operator": "-",
              "argument": {
                "type": "Literal",
                "start": 1261,
                "end": 1262,
                "value": 0,
                "raw": "0"
              },
              "prefix": true
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1266,
        "end": 1304,
        "param": {
          "type": "Identifier",
          "start": 1272,
          "end": 1273,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1274,
          "end": 1304,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 1278,
              "end": 1302,
              "expression": {
                "type": "CallExpression",
                "start": 1278,
                "end": 1301,
                "callee": {
                  "type": "MemberExpression",
                  "start": 1278,
                  "end": 1294,
                  "object": {
                    "type": "Identifier",
                    "start": 1278,
                    "end": 1284,
                    "name": "assert"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1285,
                    "end": 1294,
                    "name": "sameValue"
                  },
                  "optional": false,
                  "computed": false
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 1295,
                    "end": 1296,
                    "name": "e"
                  },
                  {
                    "type": "UnaryExpression",
                    "start": 1298,
                    "end": 1300,
                    "operator": "-",
                    "argument": {
                      "type": "Literal",
                      "start": 1299,
                      "end": 1300,
                      "value": 0,
                      "raw": "0"
                    },
                    "prefix": true
                  }
                ],
                "optional": false
              }
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}