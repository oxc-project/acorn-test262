{
  "type": "Program",
  "start": 0,
  "end": 1034,
  "body": [
    {
      "type": "IfStatement",
      "start": 343,
      "end": 478,
      "test": {
        "type": "BinaryExpression",
        "start": 347,
        "end": 374,
        "left": {
          "type": "UnaryExpression",
          "start": 347,
          "end": 358,
          "operator": "typeof",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "start": 354,
            "end": 358,
            "name": "sinx"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 363,
          "end": 374,
          "value": "undefined",
          "raw": "'undefined'"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 376,
        "end": 478,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 379,
            "end": 476,
            "argument": {
              "type": "NewExpression",
              "start": 385,
              "end": 475,
              "callee": {
                "type": "Identifier",
                "start": 389,
                "end": 401,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 402,
                  "end": 474,
                  "left": {
                    "type": "Literal",
                    "start": 402,
                    "end": 462,
                    "value": "#1: typeof sinx === 'undefined'. Actual: typeof sinx ===",
                    "raw": "'#1: typeof sinx === \\'undefined\\'. Actual: typeof sinx ==='"
                  },
                  "operator": "+",
                  "right": {
                    "type": "UnaryExpression",
                    "start": 463,
                    "end": 474,
                    "operator": "typeof",
                    "prefix": true,
                    "argument": {
                      "type": "Identifier",
                      "start": 470,
                      "end": 474,
                      "name": "sinx"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 562,
      "end": 725,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 566,
          "end": 724,
          "id": {
            "type": "Identifier",
            "start": 566,
            "end": 571,
            "name": "__val"
          },
          "init": {
            "type": "CallExpression",
            "start": 574,
            "end": 724,
            "callee": {
              "type": "CallExpression",
              "start": 574,
              "end": 719,
              "callee": {
                "type": "FunctionExpression",
                "start": 574,
                "end": 674,
                "id": {
                  "type": "Identifier",
                  "start": 583,
                  "end": 593,
                  "name": "derivative"
                },
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 594,
                    "end": 595,
                    "name": "f"
                  },
                  {
                    "type": "Identifier",
                    "start": 597,
                    "end": 599,
                    "name": "dx"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 601,
                  "end": 674,
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 607,
                      "end": 672,
                      "argument": {
                        "type": "FunctionExpression",
                        "start": 614,
                        "end": 671,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [
                          {
                            "type": "Identifier",
                            "start": 623,
                            "end": 624,
                            "name": "x"
                          }
                        ],
                        "body": {
                          "type": "BlockStatement",
                          "start": 626,
                          "end": 671,
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "start": 634,
                              "end": 665,
                              "argument": {
                                "type": "BinaryExpression",
                                "start": 641,
                                "end": 664,
                                "left": {
                                  "type": "ParenthesizedExpression",
                                  "start": 641,
                                  "end": 659,
                                  "expression": {
                                    "type": "BinaryExpression",
                                    "start": 642,
                                    "end": 658,
                                    "left": {
                                      "type": "CallExpression",
                                      "start": 642,
                                      "end": 651,
                                      "callee": {
                                        "type": "Identifier",
                                        "start": 642,
                                        "end": 643,
                                        "name": "f"
                                      },
                                      "arguments": [
                                        {
                                          "type": "BinaryExpression",
                                          "start": 644,
                                          "end": 650,
                                          "left": {
                                            "type": "Identifier",
                                            "start": 644,
                                            "end": 645,
                                            "name": "x"
                                          },
                                          "operator": "+",
                                          "right": {
                                            "type": "Identifier",
                                            "start": 648,
                                            "end": 650,
                                            "name": "dx"
                                          }
                                        }
                                      ],
                                      "optional": false
                                    },
                                    "operator": "-",
                                    "right": {
                                      "type": "CallExpression",
                                      "start": 654,
                                      "end": 658,
                                      "callee": {
                                        "type": "Identifier",
                                        "start": 654,
                                        "end": 655,
                                        "name": "f"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "start": 656,
                                          "end": 657,
                                          "name": "x"
                                        }
                                      ],
                                      "optional": false
                                    }
                                  }
                                },
                                "operator": "/",
                                "right": {
                                  "type": "Identifier",
                                  "start": 662,
                                  "end": 664,
                                  "name": "dx"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "arguments": [
                {
                  "type": "FunctionExpression",
                  "start": 675,
                  "end": 712,
                  "id": {
                    "type": "Identifier",
                    "start": 684,
                    "end": 688,
                    "name": "sinx"
                  },
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "start": 689,
                      "end": 690,
                      "name": "x"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "start": 691,
                    "end": 712,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 692,
                        "end": 711,
                        "argument": {
                          "type": "CallExpression",
                          "start": 699,
                          "end": 710,
                          "callee": {
                            "type": "MemberExpression",
                            "start": 699,
                            "end": 707,
                            "object": {
                              "type": "Identifier",
                              "start": 699,
                              "end": 703,
                              "name": "Math"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 704,
                              "end": 707,
                              "name": "sin"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "start": 708,
                              "end": 709,
                              "name": "x"
                            }
                          ],
                          "optional": false
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "Literal",
                  "start": 713,
                  "end": 718,
                  "value": 0.0001,
                  "raw": ".0001"
                }
              ],
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 720,
                "end": 723,
                "value": 0.5,
                "raw": "0.5"
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 816,
      "end": 951,
      "test": {
        "type": "BinaryExpression",
        "start": 820,
        "end": 847,
        "left": {
          "type": "UnaryExpression",
          "start": 820,
          "end": 831,
          "operator": "typeof",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "start": 827,
            "end": 831,
            "name": "sinx"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 836,
          "end": 847,
          "value": "undefined",
          "raw": "'undefined'"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 849,
        "end": 951,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 852,
            "end": 949,
            "argument": {
              "type": "NewExpression",
              "start": 858,
              "end": 948,
              "callee": {
                "type": "Identifier",
                "start": 862,
                "end": 874,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 875,
                  "end": 947,
                  "left": {
                    "type": "Literal",
                    "start": 875,
                    "end": 935,
                    "value": "#2: typeof sinx === 'undefined'. Actual: typeof sinx ===",
                    "raw": "'#2: typeof sinx === \\'undefined\\'. Actual: typeof sinx ==='"
                  },
                  "operator": "+",
                  "right": {
                    "type": "UnaryExpression",
                    "start": 936,
                    "end": 947,
                    "operator": "typeof",
                    "prefix": true,
                    "argument": {
                      "type": "Identifier",
                      "start": 943,
                      "end": 947,
                      "name": "sinx"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}