{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "__result",
                  "start": 439,
                  "end": 447
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "__func",
                    "start": 450,
                    "end": 456
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 450,
                  "end": 458
                },
                "start": 439,
                "end": 458
              }
            ],
            "start": 435,
            "end": 459
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 471,
                "end": 483
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1.1: var __result = __func() lead to throwing exception",
                  "raw": "\"#1.1: var __result = __func() lead to throwing exception\"",
                  "start": 484,
                  "end": 542
                }
              ],
              "start": 467,
              "end": 543
            },
            "start": 461,
            "end": 544
          }
        ],
        "start": 429,
        "end": 546
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 553,
          "end": 554
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "ParenthesizedExpression",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 565,
                      "end": 566
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "name": "TypeError",
                      "start": 578,
                      "end": 587
                    },
                    "start": 565,
                    "end": 587
                  },
                  "start": 564,
                  "end": 588
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 593,
                  "end": 597
                },
                "start": 564,
                "end": 597
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 615,
                        "end": 627
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "#1.2: func should throw a TypeError  Actual: ",
                            "raw": "'#1.2: func should throw a TypeError  Actual: '",
                            "start": 628,
                            "end": 675
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "expression": {
                              "type": "Identifier",
                              "name": "e",
                              "start": 679,
                              "end": 680
                            },
                            "start": 678,
                            "end": 681
                          },
                          "start": 628,
                          "end": 681
                        }
                      ],
                      "start": 611,
                      "end": 682
                    },
                    "start": 605,
                    "end": 683
                  }
                ],
                "start": 599,
                "end": 689
              },
              "alternate": null,
              "start": 560,
              "end": 689
            }
          ],
          "start": 556,
          "end": 691
        },
        "start": 547,
        "end": 691
      },
      "finalizer": null,
      "start": 426,
      "end": 691
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__func",
            "start": 779,
            "end": 785
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "ONE",
                    "raw": "\"ONE\"",
                    "start": 807,
                    "end": 812
                  },
                  "start": 800,
                  "end": 813
                }
              ],
              "start": 799,
              "end": 814
            },
            "expression": false,
            "start": 788,
            "end": 814
          },
          "start": 779,
          "end": 814
        }
      ],
      "start": 775,
      "end": 815
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__result",
            "start": 910,
            "end": 918
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "__func",
              "start": 921,
              "end": 927
            },
            "arguments": [],
            "optional": false,
            "start": 921,
            "end": 929
          },
          "start": 910,
          "end": 929
        }
      ],
      "start": 906,
      "end": 930
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "__result",
          "start": 935,
          "end": 943
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "ONE",
          "raw": "\"ONE\"",
          "start": 948,
          "end": 953
        },
        "start": 935,
        "end": 953
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 968,
                "end": 980
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: __result === \"ONE\". Actual: __result ===",
                    "raw": "'#2: __result === \"ONE\". Actual: __result ==='",
                    "start": 981,
                    "end": 1027
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "name": "__result",
                    "start": 1028,
                    "end": 1036
                  },
                  "start": 981,
                  "end": 1036
                }
              ],
              "start": 964,
              "end": 1037
            },
            "start": 958,
            "end": 1038
          }
        ],
        "start": 955,
        "end": 1040
      },
      "alternate": null,
      "start": 931,
      "end": 1040
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "__func",
          "start": 1124,
          "end": 1130
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Literal",
                  "value": "TWO",
                  "raw": "\"TWO\"",
                  "start": 1152,
                  "end": 1157
                },
                "start": 1145,
                "end": 1158
              }
            ],
            "start": 1144,
            "end": 1159
          },
          "expression": false,
          "start": 1133,
          "end": 1159
        },
        "start": 1124,
        "end": 1159
      },
      "start": 1124,
      "end": 1160
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__result",
            "start": 1255,
            "end": 1263
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "__func",
              "start": 1266,
              "end": 1272
            },
            "arguments": [],
            "optional": false,
            "start": 1266,
            "end": 1274
          },
          "start": 1255,
          "end": 1274
        }
      ],
      "start": 1251,
      "end": 1275
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "__result",
          "start": 1280,
          "end": 1288
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "TWO",
          "raw": "\"TWO\"",
          "start": 1293,
          "end": 1298
        },
        "start": 1280,
        "end": 1298
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1313,
                "end": 1325
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: __result === \"TWO\". Actual: __result ===",
                    "raw": "'#3: __result === \"TWO\". Actual: __result ==='",
                    "start": 1326,
                    "end": 1372
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "name": "__result",
                    "start": 1373,
                    "end": 1381
                  },
                  "start": 1326,
                  "end": 1381
                }
              ],
              "start": 1309,
              "end": 1382
            },
            "start": 1303,
            "end": 1383
          }
        ],
        "start": 1300,
        "end": 1385
      },
      "alternate": null,
      "start": 1276,
      "end": 1385
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1468
}