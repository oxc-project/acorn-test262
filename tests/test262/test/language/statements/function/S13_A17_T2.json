{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "__result",
                  "start": 501,
                  "end": 509
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "__func",
                    "start": 512,
                    "end": 518
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 512,
                  "end": 520
                },
                "start": 501,
                "end": 520
              }
            ],
            "start": 497,
            "end": 521
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 533,
                "end": 545
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: var __result = __func() lead to throwing exception",
                  "raw": "\"#1: var __result = __func() lead to throwing exception\"",
                  "start": 546,
                  "end": 602
                }
              ],
              "start": 529,
              "end": 603
            },
            "start": 523,
            "end": 604
          }
        ],
        "start": 491,
        "end": 606
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 613,
          "end": 614
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "ParenthesizedExpression",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 625,
                      "end": 626
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "name": "TypeError",
                      "start": 638,
                      "end": 647
                    },
                    "start": 625,
                    "end": 647
                  },
                  "start": 624,
                  "end": 648
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 653,
                  "end": 657
                },
                "start": 624,
                "end": 657
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 675,
                        "end": 687
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "#1.2: func should throw a TypeError  Actual: ",
                            "raw": "'#1.2: func should throw a TypeError  Actual: '",
                            "start": 688,
                            "end": 735
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "expression": {
                              "type": "Identifier",
                              "name": "e",
                              "start": 739,
                              "end": 740
                            },
                            "start": 738,
                            "end": 741
                          },
                          "start": 688,
                          "end": 741
                        }
                      ],
                      "start": 671,
                      "end": 742
                    },
                    "start": 665,
                    "end": 743
                  }
                ],
                "start": 659,
                "end": 749
              },
              "alternate": null,
              "start": 620,
              "end": 749
            }
          ],
          "start": 616,
          "end": 751
        },
        "start": 607,
        "end": 751
      },
      "finalizer": null,
      "start": 488,
      "end": 751
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__func",
            "start": 896,
            "end": 902
          },
          "init": {
            "type": "FunctionExpression",
            "id": {
              "type": "Identifier",
              "name": "__func",
              "start": 914,
              "end": 920
            },
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "ONE",
                    "raw": "\"ONE\"",
                    "start": 930,
                    "end": 935
                  },
                  "start": 923,
                  "end": 936
                }
              ],
              "start": 922,
              "end": 937
            },
            "expression": false,
            "start": 905,
            "end": 937
          },
          "start": 896,
          "end": 937
        }
      ],
      "start": 892,
      "end": 938
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__result",
            "start": 1033,
            "end": 1041
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "__func",
              "start": 1044,
              "end": 1050
            },
            "arguments": [],
            "optional": false,
            "start": 1044,
            "end": 1052
          },
          "start": 1033,
          "end": 1052
        }
      ],
      "start": 1029,
      "end": 1053
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "__result",
          "start": 1058,
          "end": 1066
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "ONE",
          "raw": "\"ONE\"",
          "start": 1071,
          "end": 1076
        },
        "start": 1058,
        "end": 1076
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1091,
                "end": 1103
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: __result === \"ONE\". Actual: __result ===",
                    "raw": "'#2: __result === \"ONE\". Actual: __result ==='",
                    "start": 1104,
                    "end": 1150
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "name": "__result",
                    "start": 1151,
                    "end": 1159
                  },
                  "start": 1104,
                  "end": 1159
                }
              ],
              "start": 1087,
              "end": 1160
            },
            "start": 1081,
            "end": 1161
          }
        ],
        "start": 1078,
        "end": 1163
      },
      "alternate": null,
      "start": 1054,
      "end": 1163
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "__func",
          "start": 1247,
          "end": 1253
        },
        "right": {
          "type": "FunctionExpression",
          "id": {
            "type": "Identifier",
            "name": "__func",
            "start": 1265,
            "end": 1271
          },
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Literal",
                  "value": "TWO",
                  "raw": "\"TWO\"",
                  "start": 1281,
                  "end": 1286
                },
                "start": 1274,
                "end": 1287
              }
            ],
            "start": 1273,
            "end": 1288
          },
          "expression": false,
          "start": 1256,
          "end": 1288
        },
        "start": 1247,
        "end": 1288
      },
      "start": 1247,
      "end": 1289
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "__result",
            "start": 1384,
            "end": 1392
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "__func",
              "start": 1395,
              "end": 1401
            },
            "arguments": [],
            "optional": false,
            "start": 1395,
            "end": 1403
          },
          "start": 1384,
          "end": 1403
        }
      ],
      "start": 1380,
      "end": 1404
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "__result",
          "start": 1409,
          "end": 1417
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "TWO",
          "raw": "\"TWO\"",
          "start": 1422,
          "end": 1427
        },
        "start": 1409,
        "end": 1427
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1442,
                "end": 1454
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: __result === \"TWO\". Actual: __result ===",
                    "raw": "'#3: __result === \"TWO\". Actual: __result ==='",
                    "start": 1455,
                    "end": 1501
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "name": "__result",
                    "start": 1502,
                    "end": 1510
                  },
                  "start": 1455,
                  "end": 1510
                }
              ],
              "start": 1438,
              "end": 1511
            },
            "start": 1432,
            "end": 1512
          }
        ],
        "start": 1429,
        "end": 1514
      },
      "alternate": null,
      "start": 1405,
      "end": 1514
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1597
}