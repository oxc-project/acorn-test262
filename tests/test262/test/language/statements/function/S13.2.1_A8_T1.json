{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "__func",
        "start": 488,
        "end": 494
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 506,
                  "end": 507
                },
                "init": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 510,
                  "end": 511
                },
                "start": 506,
                "end": 511
              }
            ],
            "start": 502,
            "end": 512
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "Literal",
                "value": "Catch Me If You Can",
                "raw": "\"Catch Me If You Can\"",
                "start": 524,
                "end": 545
              },
              "start": 523,
              "end": 546
            },
            "start": 517,
            "end": 546
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "x",
              "start": 558,
              "end": 559
            },
            "start": 551,
            "end": 560
          }
        ],
        "start": 496,
        "end": 562
      },
      "expression": false,
      "start": 479,
      "end": 562
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 577,
                  "end": 578
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "__func",
                    "start": 579,
                    "end": 585
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 579,
                  "end": 587
                },
                "start": 577,
                "end": 587
              }
            ],
            "start": 573,
            "end": 587
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 602,
                "end": 614
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#0: var x=__func() lead to throwing exception",
                  "raw": "'#0: var x=__func() lead to throwing exception'",
                  "start": 615,
                  "end": 662
                }
              ],
              "start": 598,
              "end": 663
            },
            "start": 592,
            "end": 664
          }
        ],
        "start": 567,
        "end": 666
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 673,
          "end": 674
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 685,
                  "end": 686
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "Catch Me If You Can",
                  "raw": "\"Catch Me If You Can\"",
                  "start": 691,
                  "end": 712
                },
                "start": 685,
                "end": 712
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 731,
                        "end": 743
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "#1: Exception === \"Catch Me If You Can\". Actual: exception ===",
                            "raw": "'#1: Exception === \"Catch Me If You Can\". Actual: exception ==='",
                            "start": 744,
                            "end": 808
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "e",
                            "start": 809,
                            "end": 810
                          },
                          "start": 744,
                          "end": 810
                        }
                      ],
                      "start": 727,
                      "end": 811
                    },
                    "start": 721,
                    "end": 812
                  }
                ],
                "start": 714,
                "end": 818
              },
              "alternate": null,
              "start": 681,
              "end": 818
            }
          ],
          "start": 675,
          "end": 820
        },
        "start": 667,
        "end": 820
      },
      "finalizer": null,
      "start": 564,
      "end": 820
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 821
}