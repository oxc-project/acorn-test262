{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "i",
                    "start": 347,
                    "end": 348
                  },
                  "init": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0",
                    "start": 349,
                    "end": 350
                  },
                  "start": 347,
                  "end": 350
                }
              ],
              "start": 343,
              "end": 350
            },
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "i",
                "start": 351,
                "end": 352
              },
              "operator": "<",
              "right": {
                "type": "Literal",
                "value": 10,
                "raw": "10",
                "start": 353,
                "end": 355
              },
              "start": 351,
              "end": 355
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "i",
                "start": 356,
                "end": 357
              },
              "start": 356,
              "end": 359
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "i",
                      "start": 369,
                      "end": 370
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "value": 5,
                      "raw": "5",
                      "start": 373,
                      "end": 374
                    },
                    "start": 369,
                    "end": 374
                  },
                  "consequent": {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Identifier",
                      "name": "i",
                      "start": 382,
                      "end": 383
                    },
                    "start": 376,
                    "end": 384
                  },
                  "alternate": null,
                  "start": 366,
                  "end": 384
                }
              ],
              "start": 360,
              "end": 388
            },
            "start": 339,
            "end": 388
          }
        ],
        "start": 335,
        "end": 390
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 397,
          "end": 398
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 406,
                  "end": 407
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": 5,
                  "raw": "5",
                  "start": 410,
                  "end": 411
                },
                "start": 406,
                "end": 411
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 422,
                    "end": 434
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#1: Exception === 5. Actual:  Exception ===",
                        "raw": "'#1: Exception === 5. Actual:  Exception ==='",
                        "start": 435,
                        "end": 480
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 482,
                        "end": 483
                      },
                      "start": 435,
                      "end": 483
                    }
                  ],
                  "start": 418,
                  "end": 486
                },
                "start": 412,
                "end": 487
              },
              "alternate": null,
              "start": 403,
              "end": 487
            }
          ],
          "start": 399,
          "end": 489
        },
        "start": 391,
        "end": 489
      },
      "finalizer": null,
      "start": 332,
      "end": 489
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 490
}