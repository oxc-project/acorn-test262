{
  "type": "Program",
  "start": 0,
  "end": 975,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 286,
      "end": 294,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 290,
          "end": 293,
          "id": {
            "type": "Identifier",
            "start": 290,
            "end": 291,
            "name": "i"
          },
          "init": {
            "type": "Literal",
            "start": 292,
            "end": 293,
            "value": 1,
            "raw": "1"
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "start": 295,
      "end": 591,
      "id": {
        "type": "Identifier",
        "start": 304,
        "end": 311,
        "name": "Integer"
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 313,
          "end": 318,
          "name": "value"
        },
        {
          "type": "Identifier",
          "start": 320,
          "end": 329,
          "name": "exception"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 332,
        "end": 591,
        "body": [
          {
            "type": "TryStatement",
            "start": 336,
            "end": 582,
            "block": {
              "type": "BlockStatement",
              "start": 339,
              "end": 455,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 345,
                  "end": 378,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 345,
                    "end": 377,
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "start": 345,
                      "end": 355,
                      "object": {
                        "type": "ThisExpression",
                        "start": 345,
                        "end": 349
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 350,
                        "end": 355,
                        "name": "value"
                      },
                      "optional": false,
                      "computed": false
                    },
                    "right": {
                      "type": "CallExpression",
                      "start": 358,
                      "end": 377,
                      "callee": {
                        "type": "Identifier",
                        "start": 358,
                        "end": 368,
                        "name": "checkValue"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 370,
                          "end": 375,
                          "name": "value"
                        }
                      ],
                      "optional": false
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "start": 383,
                  "end": 451,
                  "test": {
                    "type": "Identifier",
                    "start": 386,
                    "end": 395,
                    "name": "exception"
                  },
                  "consequent": {
                    "type": "ThrowStatement",
                    "start": 397,
                    "end": 451,
                    "argument": {
                      "type": "NewExpression",
                      "start": 403,
                      "end": 450,
                      "callee": {
                        "type": "Identifier",
                        "start": 407,
                        "end": 419,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 420,
                          "end": 449,
                          "left": {
                            "type": "BinaryExpression",
                            "start": 420,
                            "end": 425,
                            "left": {
                              "type": "Literal",
                              "start": 420,
                              "end": 423,
                              "value": "#",
                              "raw": "'#'"
                            },
                            "operator": "+",
                            "right": {
                              "type": "Identifier",
                              "start": 424,
                              "end": 425,
                              "name": "i"
                            }
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "start": 426,
                            "end": 449,
                            "value": ".1: Must be exception",
                            "raw": "'.1: Must be exception'"
                          }
                        }
                      ]
                    }
                  },
                  "alternate": null
                }
              ]
            },
            "handler": {
              "type": "CatchClause",
              "start": 458,
              "end": 582,
              "param": {
                "type": "Identifier",
                "start": 464,
                "end": 465,
                "name": "e"
              },
              "body": {
                "type": "BlockStatement",
                "start": 466,
                "end": 582,
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "start": 472,
                    "end": 498,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 472,
                      "end": 497,
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "start": 472,
                        "end": 482,
                        "object": {
                          "type": "ThisExpression",
                          "start": 472,
                          "end": 476
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 477,
                          "end": 482,
                          "name": "value"
                        },
                        "optional": false,
                        "computed": false
                      },
                      "right": {
                        "type": "CallExpression",
                        "start": 485,
                        "end": 497,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 485,
                          "end": 495,
                          "object": {
                            "type": "Identifier",
                            "start": 485,
                            "end": 486,
                            "name": "e"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 487,
                            "end": 495,
                            "name": "toString"
                          },
                          "optional": false,
                          "computed": false
                        },
                        "arguments": [],
                        "optional": false
                      }
                    }
                  },
                  {
                    "type": "IfStatement",
                    "start": 503,
                    "end": 578,
                    "test": {
                      "type": "UnaryExpression",
                      "start": 506,
                      "end": 516,
                      "operator": "!",
                      "argument": {
                        "type": "Identifier",
                        "start": 507,
                        "end": 516,
                        "name": "exception"
                      },
                      "prefix": true
                    },
                    "consequent": {
                      "type": "ThrowStatement",
                      "start": 518,
                      "end": 578,
                      "argument": {
                        "type": "NewExpression",
                        "start": 524,
                        "end": 577,
                        "callee": {
                          "type": "Identifier",
                          "start": 528,
                          "end": 540,
                          "name": "Test262Error"
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "start": 541,
                            "end": 576,
                            "left": {
                              "type": "BinaryExpression",
                              "start": 541,
                              "end": 546,
                              "left": {
                                "type": "Literal",
                                "start": 541,
                                "end": 544,
                                "value": "#",
                                "raw": "'#'"
                              },
                              "operator": "+",
                              "right": {
                                "type": "Identifier",
                                "start": 545,
                                "end": 546,
                                "name": "i"
                              }
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "start": 547,
                              "end": 576,
                              "value": ".2: Don`t must be exception",
                              "raw": "'.2: Don`t must be exception'"
                            }
                          }
                        ]
                      }
                    },
                    "alternate": null
                  }
                ]
              }
            },
            "finalizer": null
          },
          {
            "type": "ExpressionStatement",
            "start": 585,
            "end": 589,
            "expression": {
              "type": "UpdateExpression",
              "start": 585,
              "end": 588,
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "start": 585,
                "end": 586,
                "name": "i"
              }
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "start": 593,
      "end": 751,
      "id": {
        "type": "Identifier",
        "start": 602,
        "end": 612,
        "name": "checkValue"
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 613,
          "end": 618,
          "name": "value"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 619,
        "end": 751,
        "body": [
          {
            "type": "IfStatement",
            "start": 623,
            "end": 749,
            "test": {
              "type": "LogicalExpression",
              "start": 626,
              "end": 664,
              "left": {
                "type": "BinaryExpression",
                "start": 626,
                "end": 650,
                "left": {
                  "type": "CallExpression",
                  "start": 626,
                  "end": 643,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 626,
                    "end": 636,
                    "object": {
                      "type": "Identifier",
                      "start": 626,
                      "end": 630,
                      "name": "Math"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 631,
                      "end": 636,
                      "name": "floor"
                    },
                    "optional": false,
                    "computed": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 637,
                      "end": 642,
                      "name": "value"
                    }
                  ],
                  "optional": false
                },
                "operator": "!=",
                "right": {
                  "type": "Identifier",
                  "start": 645,
                  "end": 650,
                  "name": "value"
                }
              },
              "operator": "||",
              "right": {
                "type": "CallExpression",
                "start": 652,
                "end": 664,
                "callee": {
                  "type": "Identifier",
                  "start": 652,
                  "end": 657,
                  "name": "isNaN"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 658,
                    "end": 663,
                    "name": "value"
                  }
                ],
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 665,
              "end": 719,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 671,
                  "end": 715,
                  "argument": {
                    "type": "ParenthesizedExpression",
                    "start": 677,
                    "end": 714,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 678,
                      "end": 713,
                      "left": {
                        "type": "BinaryExpression",
                        "start": 678,
                        "end": 705,
                        "left": {
                          "type": "Identifier",
                          "start": 678,
                          "end": 699,
                          "name": "INVALID_INTEGER_VALUE"
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 701,
                          "end": 705,
                          "value": ": ",
                          "raw": "\": \""
                        }
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 708,
                        "end": 713,
                        "name": "value"
                      }
                    }
                  }
                }
              ]
            },
            "alternate": {
              "type": "BlockStatement",
              "start": 726,
              "end": 749,
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 732,
                  "end": 745,
                  "argument": {
                    "type": "Identifier",
                    "start": 739,
                    "end": 744,
                    "name": "value"
                  }
                }
              ]
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "start": 764,
      "end": 787,
      "expression": {
        "type": "NewExpression",
        "start": 764,
        "end": 786,
        "callee": {
          "type": "Identifier",
          "start": 768,
          "end": 775,
          "name": "Integer"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 776,
            "end": 778,
            "value": 13,
            "raw": "13"
          },
          {
            "type": "Literal",
            "start": 780,
            "end": 785,
            "value": false,
            "raw": "false"
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 799,
      "end": 822,
      "expression": {
        "type": "NewExpression",
        "start": 799,
        "end": 821,
        "callee": {
          "type": "Identifier",
          "start": 803,
          "end": 810,
          "name": "Integer"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 811,
            "end": 814,
            "name": "NaN"
          },
          {
            "type": "Literal",
            "start": 816,
            "end": 820,
            "value": true,
            "raw": "true"
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 834,
      "end": 856,
      "expression": {
        "type": "NewExpression",
        "start": 834,
        "end": 855,
        "callee": {
          "type": "Identifier",
          "start": 838,
          "end": 845,
          "name": "Integer"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 846,
            "end": 847,
            "value": 0,
            "raw": "0"
          },
          {
            "type": "Literal",
            "start": 849,
            "end": 854,
            "value": false,
            "raw": "false"
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 868,
      "end": 897,
      "expression": {
        "type": "NewExpression",
        "start": 868,
        "end": 896,
        "callee": {
          "type": "Identifier",
          "start": 872,
          "end": 879,
          "name": "Integer"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 880,
            "end": 888,
            "name": "Infinity"
          },
          {
            "type": "Literal",
            "start": 890,
            "end": 895,
            "value": false,
            "raw": "false"
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 909,
      "end": 934,
      "expression": {
        "type": "NewExpression",
        "start": 909,
        "end": 933,
        "callee": {
          "type": "Identifier",
          "start": 913,
          "end": 920,
          "name": "Integer"
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 921,
            "end": 926,
            "operator": "-",
            "argument": {
              "type": "Literal",
              "start": 922,
              "end": 926,
              "value": 1.23,
              "raw": "1.23"
            },
            "prefix": true
          },
          {
            "type": "Literal",
            "start": 928,
            "end": 932,
            "value": true,
            "raw": "true"
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 946,
      "end": 974,
      "expression": {
        "type": "NewExpression",
        "start": 946,
        "end": 973,
        "callee": {
          "type": "Identifier",
          "start": 950,
          "end": 957,
          "name": "Integer"
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 958,
            "end": 966,
            "object": {
              "type": "Identifier",
              "start": 958,
              "end": 962,
              "name": "Math"
            },
            "property": {
              "type": "Identifier",
              "start": 963,
              "end": 966,
              "name": "LN2"
            },
            "optional": false,
            "computed": false
          },
          {
            "type": "Literal",
            "start": 968,
            "end": 972,
            "value": true,
            "raw": "true"
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}