{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Error",
                  "start": 313,
                  "end": 318
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "hello",
                    "raw": "\"hello\"",
                    "start": 319,
                    "end": 326
                  }
                ],
                "optional": false,
                "start": 313,
                "end": 327
              },
              "start": 312,
              "end": 328
            },
            "start": 306,
            "end": 329
          }
        ],
        "start": 302,
        "end": 331
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 338,
          "end": 339
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 348,
                      "end": 349
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 350,
                      "end": 358
                    },
                    "optional": false,
                    "computed": false,
                    "start": 348,
                    "end": 358
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 348,
                  "end": 360
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "Error: hello",
                  "raw": "\"Error: hello\"",
                  "start": 363,
                  "end": 377
                },
                "start": 348,
                "end": 377
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 389,
                    "end": 401
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#1: Exception.toString()===\"Error: hello\". Actual: Exception is ",
                        "raw": "'#1: Exception.toString()===\"Error: hello\". Actual: Exception is '",
                        "start": 402,
                        "end": 468
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 469,
                        "end": 470
                      },
                      "start": 402,
                      "end": 470
                    }
                  ],
                  "start": 385,
                  "end": 471
                },
                "start": 379,
                "end": 472
              },
              "alternate": null,
              "start": 344,
              "end": 472
            }
          ],
          "start": 340,
          "end": 474
        },
        "start": 332,
        "end": 474
      },
      "finalizer": null,
      "start": 299,
      "end": 474
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Error",
                  "start": 505,
                  "end": 510
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "hello",
                    "raw": "\"hello\"",
                    "start": 511,
                    "end": 518
                  }
                ],
                "start": 501,
                "end": 519
              },
              "start": 500,
              "end": 520
            },
            "start": 494,
            "end": 521
          }
        ],
        "start": 490,
        "end": 523
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 530,
          "end": 531
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 540,
                      "end": 541
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 542,
                      "end": 550
                    },
                    "optional": false,
                    "computed": false,
                    "start": 540,
                    "end": 550
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 540,
                  "end": 552
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "Error: hello",
                  "raw": "\"Error: hello\"",
                  "start": 555,
                  "end": 569
                },
                "start": 540,
                "end": 569
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 581,
                    "end": 593
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#2: Exception.toString()===\"Error: hello\". Actual: Exception is ",
                        "raw": "'#2: Exception.toString()===\"Error: hello\". Actual: Exception is '",
                        "start": 594,
                        "end": 660
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 661,
                        "end": 662
                      },
                      "start": 594,
                      "end": 662
                    }
                  ],
                  "start": 577,
                  "end": 663
                },
                "start": 571,
                "end": 664
              },
              "alternate": null,
              "start": 536,
              "end": 664
            }
          ],
          "start": 532,
          "end": 666
        },
        "start": 524,
        "end": 666
      },
      "finalizer": null,
      "start": 487,
      "end": 666
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c3",
            "start": 683,
            "end": 685
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 686,
            "end": 687
          },
          "start": 683,
          "end": 687
        }
      ],
      "start": 679,
      "end": 688
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "EvalError",
                "start": 702,
                "end": 711
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 712,
                  "end": 713
                }
              ],
              "optional": false,
              "start": 702,
              "end": 714
            },
            "start": 696,
            "end": 715
          }
        ],
        "start": 692,
        "end": 717
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 724,
          "end": 725
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 734,
                      "end": 735
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 736,
                      "end": 744
                    },
                    "optional": false,
                    "computed": false,
                    "start": 734,
                    "end": 744
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 734,
                  "end": 746
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "EvalError: 1",
                  "raw": "\"EvalError: 1\"",
                  "start": 749,
                  "end": 763
                },
                "start": 734,
                "end": 763
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 775,
                    "end": 787
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#3: Exception.toString()===\"EvalError: 1\". Actual: Exception is ",
                        "raw": "'#3: Exception.toString()===\"EvalError: 1\". Actual: Exception is '",
                        "start": 788,
                        "end": 854
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 855,
                        "end": 856
                      },
                      "start": 788,
                      "end": 856
                    }
                  ],
                  "start": 771,
                  "end": 857
                },
                "start": 765,
                "end": 858
              },
              "alternate": null,
              "start": 730,
              "end": 858
            }
          ],
          "start": 726,
          "end": 860
        },
        "start": 718,
        "end": 860
      },
      "finalizer": null,
      "start": 689,
      "end": 860
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "RangeError",
                "start": 886,
                "end": 896
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 897,
                  "end": 898
                }
              ],
              "optional": false,
              "start": 886,
              "end": 899
            },
            "start": 880,
            "end": 900
          }
        ],
        "start": 876,
        "end": 902
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 909,
          "end": 910
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 919,
                      "end": 920
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 921,
                      "end": 929
                    },
                    "optional": false,
                    "computed": false,
                    "start": 919,
                    "end": 929
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 919,
                  "end": 931
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "RangeError: 1",
                  "raw": "\"RangeError: 1\"",
                  "start": 934,
                  "end": 949
                },
                "start": 919,
                "end": 949
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 961,
                    "end": 973
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#4: Exception.toString()===\"RangeError: 1\". Actual: Exception is ",
                        "raw": "'#4: Exception.toString()===\"RangeError: 1\". Actual: Exception is '",
                        "start": 974,
                        "end": 1041
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 1042,
                        "end": 1043
                      },
                      "start": 974,
                      "end": 1043
                    }
                  ],
                  "start": 957,
                  "end": 1044
                },
                "start": 951,
                "end": 1045
              },
              "alternate": null,
              "start": 915,
              "end": 1045
            }
          ],
          "start": 911,
          "end": 1047
        },
        "start": 903,
        "end": 1047
      },
      "finalizer": null,
      "start": 873,
      "end": 1047
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "ReferenceError",
                "start": 1073,
                "end": 1087
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1088,
                  "end": 1089
                }
              ],
              "optional": false,
              "start": 1073,
              "end": 1090
            },
            "start": 1067,
            "end": 1091
          }
        ],
        "start": 1063,
        "end": 1093
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1100,
          "end": 1101
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 1110,
                      "end": 1111
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 1112,
                      "end": 1120
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1110,
                    "end": 1120
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 1110,
                  "end": 1122
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "ReferenceError: 1",
                  "raw": "\"ReferenceError: 1\"",
                  "start": 1125,
                  "end": 1144
                },
                "start": 1110,
                "end": 1144
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 1156,
                    "end": 1168
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#5: Exception.toString()===\"ReferenceError: 1\". Actual: Exception is ",
                        "raw": "'#5: Exception.toString()===\"ReferenceError: 1\". Actual: Exception is '",
                        "start": 1169,
                        "end": 1240
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 1241,
                        "end": 1242
                      },
                      "start": 1169,
                      "end": 1242
                    }
                  ],
                  "start": 1152,
                  "end": 1243
                },
                "start": 1146,
                "end": 1244
              },
              "alternate": null,
              "start": 1106,
              "end": 1244
            }
          ],
          "start": 1102,
          "end": 1246
        },
        "start": 1094,
        "end": 1246
      },
      "finalizer": null,
      "start": 1060,
      "end": 1246
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c6",
            "start": 1263,
            "end": 1265
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1266,
            "end": 1267
          },
          "start": 1263,
          "end": 1267
        }
      ],
      "start": 1259,
      "end": 1268
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "TypeError",
                "start": 1282,
                "end": 1291
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1292,
                  "end": 1293
                }
              ],
              "optional": false,
              "start": 1282,
              "end": 1294
            },
            "start": 1276,
            "end": 1295
          }
        ],
        "start": 1272,
        "end": 1297
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1304,
          "end": 1305
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 1314,
                      "end": 1315
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 1316,
                      "end": 1324
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1314,
                    "end": 1324
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 1314,
                  "end": 1326
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "TypeError: 1",
                  "raw": "\"TypeError: 1\"",
                  "start": 1329,
                  "end": 1343
                },
                "start": 1314,
                "end": 1343
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 1355,
                    "end": 1367
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#6: Exception.toString()===\"TypeError: 1\". Actual: Exception is ",
                        "raw": "'#6: Exception.toString()===\"TypeError: 1\". Actual: Exception is '",
                        "start": 1368,
                        "end": 1434
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 1435,
                        "end": 1436
                      },
                      "start": 1368,
                      "end": 1436
                    }
                  ],
                  "start": 1351,
                  "end": 1437
                },
                "start": 1345,
                "end": 1438
              },
              "alternate": null,
              "start": 1310,
              "end": 1438
            }
          ],
          "start": 1306,
          "end": 1440
        },
        "start": 1298,
        "end": 1440
      },
      "finalizer": null,
      "start": 1269,
      "end": 1440
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "URIError",
                "start": 1466,
                "end": 1474
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "message",
                  "raw": "\"message\"",
                  "start": 1475,
                  "end": 1484
                },
                {
                  "type": "Literal",
                  "value": "fileName",
                  "raw": "\"fileName\"",
                  "start": 1486,
                  "end": 1496
                },
                {
                  "type": "Literal",
                  "value": "1",
                  "raw": "\"1\"",
                  "start": 1498,
                  "end": 1501
                }
              ],
              "optional": false,
              "start": 1466,
              "end": 1502
            },
            "start": 1460,
            "end": 1503
          }
        ],
        "start": 1456,
        "end": 1506
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1513,
          "end": 1514
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 1523,
                      "end": 1524
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 1525,
                      "end": 1533
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1523,
                    "end": 1533
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 1523,
                  "end": 1535
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "URIError: message",
                  "raw": "\"URIError: message\"",
                  "start": 1538,
                  "end": 1557
                },
                "start": 1523,
                "end": 1557
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 1569,
                    "end": 1581
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#7: Exception.toString()===\"URIError: message\". Actual: Exception is ",
                        "raw": "'#7: Exception.toString()===\"URIError: message\". Actual: Exception is '",
                        "start": 1582,
                        "end": 1653
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 1654,
                        "end": 1655
                      },
                      "start": 1582,
                      "end": 1655
                    }
                  ],
                  "start": 1565,
                  "end": 1656
                },
                "start": 1559,
                "end": 1657
              },
              "alternate": null,
              "start": 1519,
              "end": 1657
            }
          ],
          "start": 1515,
          "end": 1659
        },
        "start": 1507,
        "end": 1659
      },
      "finalizer": null,
      "start": 1453,
      "end": 1659
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1660
}