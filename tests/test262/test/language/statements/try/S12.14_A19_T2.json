{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fin",
            "start": 300,
            "end": 303
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 304,
            "end": 305
          },
          "start": 300,
          "end": 305
        }
      ],
      "start": 296,
      "end": 306
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Error",
                  "start": 332,
                  "end": 337
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "hello",
                    "raw": "\"hello\"",
                    "start": 338,
                    "end": 345
                  }
                ],
                "optional": false,
                "start": 332,
                "end": 346
              },
              "start": 331,
              "end": 347
            },
            "start": 325,
            "end": 348
          }
        ],
        "start": 321,
        "end": 350
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 357,
          "end": 358
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 367,
                      "end": 368
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 369,
                      "end": 377
                    },
                    "optional": false,
                    "computed": false,
                    "start": 367,
                    "end": 377
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 367,
                  "end": 379
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "Error: hello",
                  "raw": "\"Error: hello\"",
                  "start": 382,
                  "end": 396
                },
                "start": 367,
                "end": 396
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 408,
                    "end": 420
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#1.1: Exception.toString()===\"Error: hello\". Actual: Exception is ",
                        "raw": "'#1.1: Exception.toString()===\"Error: hello\". Actual: Exception is '",
                        "start": 421,
                        "end": 489
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 490,
                        "end": 491
                      },
                      "start": 421,
                      "end": 491
                    }
                  ],
                  "start": 404,
                  "end": 492
                },
                "start": 398,
                "end": 493
              },
              "alternate": null,
              "start": 363,
              "end": 493
            }
          ],
          "start": 359,
          "end": 495
        },
        "start": 351,
        "end": 495
      },
      "finalizer": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "fin",
                "start": 507,
                "end": 510
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 511,
                "end": 512
              },
              "start": 507,
              "end": 512
            },
            "start": 507,
            "end": 513
          }
        ],
        "start": 503,
        "end": 515
      },
      "start": 318,
      "end": 515
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 520,
          "end": 523
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 526,
          "end": 527
        },
        "start": 520,
        "end": 527
      },
      "consequent": {
        "type": "ThrowStatement",
        "argument": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 539,
            "end": 551
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "#1.2: \"finally\" block must be evaluated",
              "raw": "'#1.2: \"finally\" block must be evaluated'",
              "start": 552,
              "end": 593
            }
          ],
          "start": 535,
          "end": 594
        },
        "start": 529,
        "end": 595
      },
      "alternate": null,
      "start": 516,
      "end": 595
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 609,
          "end": 612
        },
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 613,
          "end": 614
        },
        "start": 609,
        "end": 614
      },
      "start": 609,
      "end": 615
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Error",
                  "start": 634,
                  "end": 639
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "hello",
                    "raw": "\"hello\"",
                    "start": 640,
                    "end": 647
                  }
                ],
                "start": 630,
                "end": 648
              },
              "start": 629,
              "end": 649
            },
            "start": 623,
            "end": 650
          }
        ],
        "start": 619,
        "end": 652
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 659,
          "end": 660
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 669,
                      "end": 670
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 671,
                      "end": 679
                    },
                    "optional": false,
                    "computed": false,
                    "start": 669,
                    "end": 679
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 669,
                  "end": 681
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "Error: hello",
                  "raw": "\"Error: hello\"",
                  "start": 684,
                  "end": 698
                },
                "start": 669,
                "end": 698
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 710,
                    "end": 722
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#2.1: Exception.toString()===\"Error: hello\". Actual: Exception is ",
                        "raw": "'#2.1: Exception.toString()===\"Error: hello\". Actual: Exception is '",
                        "start": 723,
                        "end": 791
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 792,
                        "end": 793
                      },
                      "start": 723,
                      "end": 793
                    }
                  ],
                  "start": 706,
                  "end": 794
                },
                "start": 700,
                "end": 795
              },
              "alternate": null,
              "start": 665,
              "end": 795
            }
          ],
          "start": 661,
          "end": 797
        },
        "start": 653,
        "end": 797
      },
      "finalizer": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "fin",
                "start": 809,
                "end": 812
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 813,
                "end": 814
              },
              "start": 809,
              "end": 814
            },
            "start": 809,
            "end": 815
          }
        ],
        "start": 805,
        "end": 817
      },
      "start": 616,
      "end": 817
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 822,
          "end": 825
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 828,
          "end": 829
        },
        "start": 822,
        "end": 829
      },
      "consequent": {
        "type": "ThrowStatement",
        "argument": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 841,
            "end": 853
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "#2.2: \"finally\" block must be evaluated",
              "raw": "'#2.2: \"finally\" block must be evaluated'",
              "start": 854,
              "end": 895
            }
          ],
          "start": 837,
          "end": 896
        },
        "start": 831,
        "end": 897
      },
      "alternate": null,
      "start": 818,
      "end": 897
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 911,
          "end": 914
        },
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 915,
          "end": 916
        },
        "start": 911,
        "end": 916
      },
      "start": 911,
      "end": 917
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c3",
            "start": 922,
            "end": 924
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 925,
            "end": 926
          },
          "start": 922,
          "end": 926
        }
      ],
      "start": 918,
      "end": 927
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "EvalError",
                "start": 941,
                "end": 950
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 951,
                  "end": 952
                }
              ],
              "optional": false,
              "start": 941,
              "end": 953
            },
            "start": 935,
            "end": 954
          }
        ],
        "start": 931,
        "end": 956
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 963,
          "end": 964
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 973,
                      "end": 974
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 975,
                      "end": 983
                    },
                    "optional": false,
                    "computed": false,
                    "start": 973,
                    "end": 983
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 973,
                  "end": 985
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "EvalError: 1",
                  "raw": "\"EvalError: 1\"",
                  "start": 988,
                  "end": 1002
                },
                "start": 973,
                "end": 1002
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 1014,
                    "end": 1026
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#3.1: Exception.toString()===\"EvalError: 1\". Actual: Exception is ",
                        "raw": "'#3.1: Exception.toString()===\"EvalError: 1\". Actual: Exception is '",
                        "start": 1027,
                        "end": 1095
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 1096,
                        "end": 1097
                      },
                      "start": 1027,
                      "end": 1097
                    }
                  ],
                  "start": 1010,
                  "end": 1098
                },
                "start": 1004,
                "end": 1099
              },
              "alternate": null,
              "start": 969,
              "end": 1099
            }
          ],
          "start": 965,
          "end": 1101
        },
        "start": 957,
        "end": 1101
      },
      "finalizer": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "fin",
                "start": 1113,
                "end": 1116
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1117,
                "end": 1118
              },
              "start": 1113,
              "end": 1118
            },
            "start": 1113,
            "end": 1119
          }
        ],
        "start": 1109,
        "end": 1121
      },
      "start": 928,
      "end": 1121
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 1126,
          "end": 1129
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1132,
          "end": 1133
        },
        "start": 1126,
        "end": 1133
      },
      "consequent": {
        "type": "ThrowStatement",
        "argument": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 1145,
            "end": 1157
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "#3.2: \"finally\" block must be evaluated",
              "raw": "'#3.2: \"finally\" block must be evaluated'",
              "start": 1158,
              "end": 1199
            }
          ],
          "start": 1141,
          "end": 1200
        },
        "start": 1135,
        "end": 1201
      },
      "alternate": null,
      "start": 1122,
      "end": 1201
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 1215,
          "end": 1218
        },
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1219,
          "end": 1220
        },
        "start": 1215,
        "end": 1220
      },
      "start": 1215,
      "end": 1221
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "RangeError",
                "start": 1235,
                "end": 1245
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1246,
                  "end": 1247
                }
              ],
              "optional": false,
              "start": 1235,
              "end": 1248
            },
            "start": 1229,
            "end": 1249
          }
        ],
        "start": 1225,
        "end": 1251
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1258,
          "end": 1259
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 1268,
                      "end": 1269
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 1270,
                      "end": 1278
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1268,
                    "end": 1278
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 1268,
                  "end": 1280
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "RangeError: 1",
                  "raw": "\"RangeError: 1\"",
                  "start": 1283,
                  "end": 1298
                },
                "start": 1268,
                "end": 1298
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 1310,
                    "end": 1322
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#4.1: Exception.toString()===\"RangeError: 1\". Actual: Exception is ",
                        "raw": "'#4.1: Exception.toString()===\"RangeError: 1\". Actual: Exception is '",
                        "start": 1323,
                        "end": 1392
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 1393,
                        "end": 1394
                      },
                      "start": 1323,
                      "end": 1394
                    }
                  ],
                  "start": 1306,
                  "end": 1395
                },
                "start": 1300,
                "end": 1396
              },
              "alternate": null,
              "start": 1264,
              "end": 1396
            }
          ],
          "start": 1260,
          "end": 1398
        },
        "start": 1252,
        "end": 1398
      },
      "finalizer": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "fin",
                "start": 1410,
                "end": 1413
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1414,
                "end": 1415
              },
              "start": 1410,
              "end": 1415
            },
            "start": 1410,
            "end": 1416
          }
        ],
        "start": 1406,
        "end": 1418
      },
      "start": 1222,
      "end": 1418
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 1423,
          "end": 1426
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1429,
          "end": 1430
        },
        "start": 1423,
        "end": 1430
      },
      "consequent": {
        "type": "ThrowStatement",
        "argument": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 1442,
            "end": 1454
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "#4.2: \"finally\" block must be evaluated",
              "raw": "'#4.2: \"finally\" block must be evaluated'",
              "start": 1455,
              "end": 1496
            }
          ],
          "start": 1438,
          "end": 1497
        },
        "start": 1432,
        "end": 1498
      },
      "alternate": null,
      "start": 1419,
      "end": 1498
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 1512,
          "end": 1515
        },
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1516,
          "end": 1517
        },
        "start": 1512,
        "end": 1517
      },
      "start": 1512,
      "end": 1518
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "ReferenceError",
                "start": 1532,
                "end": 1546
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1547,
                  "end": 1548
                }
              ],
              "optional": false,
              "start": 1532,
              "end": 1549
            },
            "start": 1526,
            "end": 1550
          }
        ],
        "start": 1522,
        "end": 1552
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1559,
          "end": 1560
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 1569,
                      "end": 1570
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 1571,
                      "end": 1579
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1569,
                    "end": 1579
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 1569,
                  "end": 1581
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "ReferenceError: 1",
                  "raw": "\"ReferenceError: 1\"",
                  "start": 1584,
                  "end": 1603
                },
                "start": 1569,
                "end": 1603
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 1615,
                    "end": 1627
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#5.1: Exception.toString()===\"ReferenceError: 1\". Actual: Exception is ",
                        "raw": "'#5.1: Exception.toString()===\"ReferenceError: 1\". Actual: Exception is '",
                        "start": 1628,
                        "end": 1701
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 1702,
                        "end": 1703
                      },
                      "start": 1628,
                      "end": 1703
                    }
                  ],
                  "start": 1611,
                  "end": 1704
                },
                "start": 1605,
                "end": 1705
              },
              "alternate": null,
              "start": 1565,
              "end": 1705
            }
          ],
          "start": 1561,
          "end": 1707
        },
        "start": 1553,
        "end": 1707
      },
      "finalizer": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "fin",
                "start": 1719,
                "end": 1722
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1723,
                "end": 1724
              },
              "start": 1719,
              "end": 1724
            },
            "start": 1719,
            "end": 1725
          }
        ],
        "start": 1715,
        "end": 1727
      },
      "start": 1519,
      "end": 1727
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 1732,
          "end": 1735
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 1738,
          "end": 1739
        },
        "start": 1732,
        "end": 1739
      },
      "consequent": {
        "type": "ThrowStatement",
        "argument": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 1751,
            "end": 1763
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "#5.2: \"finally\" block must be evaluated",
              "raw": "'#5.2: \"finally\" block must be evaluated'",
              "start": 1764,
              "end": 1805
            }
          ],
          "start": 1747,
          "end": 1806
        },
        "start": 1741,
        "end": 1807
      },
      "alternate": null,
      "start": 1728,
      "end": 1807
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 1821,
          "end": 1824
        },
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1825,
          "end": 1826
        },
        "start": 1821,
        "end": 1826
      },
      "start": 1821,
      "end": 1827
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "TypeError",
                "start": 1841,
                "end": 1850
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1851,
                  "end": 1852
                }
              ],
              "optional": false,
              "start": 1841,
              "end": 1853
            },
            "start": 1835,
            "end": 1854
          }
        ],
        "start": 1831,
        "end": 1856
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1863,
          "end": 1864
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 1873,
                      "end": 1874
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 1875,
                      "end": 1883
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1873,
                    "end": 1883
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 1873,
                  "end": 1885
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "TypeError: 1",
                  "raw": "\"TypeError: 1\"",
                  "start": 1888,
                  "end": 1902
                },
                "start": 1873,
                "end": 1902
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 1914,
                    "end": 1926
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#6.1: Exception.toString()===\"TypeError: 1\". Actual: Exception is ",
                        "raw": "'#6.1: Exception.toString()===\"TypeError: 1\". Actual: Exception is '",
                        "start": 1927,
                        "end": 1995
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 1996,
                        "end": 1997
                      },
                      "start": 1927,
                      "end": 1997
                    }
                  ],
                  "start": 1910,
                  "end": 1998
                },
                "start": 1904,
                "end": 1999
              },
              "alternate": null,
              "start": 1869,
              "end": 1999
            }
          ],
          "start": 1865,
          "end": 2001
        },
        "start": 1857,
        "end": 2001
      },
      "finalizer": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "fin",
                "start": 2013,
                "end": 2016
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 2017,
                "end": 2018
              },
              "start": 2013,
              "end": 2018
            },
            "start": 2013,
            "end": 2019
          }
        ],
        "start": 2009,
        "end": 2021
      },
      "start": 1828,
      "end": 2021
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 2026,
          "end": 2029
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 2032,
          "end": 2033
        },
        "start": 2026,
        "end": 2033
      },
      "consequent": {
        "type": "ThrowStatement",
        "argument": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 2045,
            "end": 2057
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "#6.2: \"finally\" block must be evaluated",
              "raw": "'#6.2: \"finally\" block must be evaluated'",
              "start": 2058,
              "end": 2099
            }
          ],
          "start": 2041,
          "end": 2100
        },
        "start": 2035,
        "end": 2101
      },
      "alternate": null,
      "start": 2022,
      "end": 2101
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 2115,
          "end": 2118
        },
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 2119,
          "end": 2120
        },
        "start": 2115,
        "end": 2120
      },
      "start": 2115,
      "end": 2121
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "URIError",
                "start": 2135,
                "end": 2143
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "message",
                  "raw": "\"message\"",
                  "start": 2144,
                  "end": 2153
                },
                {
                  "type": "Literal",
                  "value": "fileName",
                  "raw": "\"fileName\"",
                  "start": 2155,
                  "end": 2165
                },
                {
                  "type": "Literal",
                  "value": "1",
                  "raw": "\"1\"",
                  "start": 2167,
                  "end": 2170
                }
              ],
              "optional": false,
              "start": 2135,
              "end": 2171
            },
            "start": 2129,
            "end": 2172
          }
        ],
        "start": 2125,
        "end": 2175
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 2182,
          "end": 2183
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 2192,
                      "end": 2193
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toString",
                      "start": 2194,
                      "end": 2202
                    },
                    "optional": false,
                    "computed": false,
                    "start": 2192,
                    "end": 2202
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 2192,
                  "end": 2204
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "URIError: message",
                  "raw": "\"URIError: message\"",
                  "start": 2207,
                  "end": 2226
                },
                "start": 2192,
                "end": 2226
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 2238,
                    "end": 2250
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#7.1: Exception.toString()===\"URIError: message\". Actual: Exception is ",
                        "raw": "'#7.1: Exception.toString()===\"URIError: message\". Actual: Exception is '",
                        "start": 2251,
                        "end": 2324
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 2325,
                        "end": 2326
                      },
                      "start": 2251,
                      "end": 2326
                    }
                  ],
                  "start": 2234,
                  "end": 2327
                },
                "start": 2228,
                "end": 2328
              },
              "alternate": null,
              "start": 2188,
              "end": 2328
            }
          ],
          "start": 2184,
          "end": 2330
        },
        "start": 2176,
        "end": 2330
      },
      "finalizer": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "fin",
                "start": 2342,
                "end": 2345
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 2346,
                "end": 2347
              },
              "start": 2342,
              "end": 2347
            },
            "start": 2342,
            "end": 2348
          }
        ],
        "start": 2338,
        "end": 2350
      },
      "start": 2122,
      "end": 2350
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "fin",
          "start": 2355,
          "end": 2358
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 2361,
          "end": 2362
        },
        "start": 2355,
        "end": 2362
      },
      "consequent": {
        "type": "ThrowStatement",
        "argument": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 2374,
            "end": 2386
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "#7.2: \"finally\" block must be evaluated",
              "raw": "'#7.2: \"finally\" block must be evaluated'",
              "start": 2387,
              "end": 2428
            }
          ],
          "start": 2370,
          "end": 2429
        },
        "start": 2364,
        "end": 2430
      },
      "alternate": null,
      "start": 2351,
      "end": 2430
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2431
}