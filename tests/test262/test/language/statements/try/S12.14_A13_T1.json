{
  "type": "Program",
  "start": 0,
  "end": 1541,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 306,
      "end": 499,
      "id": {
        "type": "Identifier",
        "start": 315,
        "end": 326,
        "name": "myFunction1"
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 328,
        "end": 499,
        "body": [
          {
            "type": "TryStatement",
            "start": 332,
            "end": 485,
            "block": {
              "type": "BlockStatement",
              "start": 335,
              "end": 354,
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 341,
                  "end": 350,
                  "argument": {
                    "type": "Literal",
                    "start": 348,
                    "end": 349,
                    "value": 1,
                    "raw": "1"
                  }
                }
              ]
            },
            "handler": {
              "type": "CatchClause",
              "start": 357,
              "end": 485,
              "param": {
                "type": "Identifier",
                "start": 363,
                "end": 366,
                "name": "err"
              },
              "body": {
                "type": "BlockStatement",
                "start": 367,
                "end": 485,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 372,
                    "end": 467,
                    "argument": {
                      "type": "NewExpression",
                      "start": 378,
                      "end": 466,
                      "callee": {
                        "type": "Identifier",
                        "start": 382,
                        "end": 394,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 395,
                          "end": 465,
                          "value": "#1.1: \"return 1\" inside function does not lead to throwing exception",
                          "raw": "'#1.1: \"return 1\" inside function does not lead to throwing exception'"
                        }
                      ]
                    }
                  },
                  {
                    "type": "ReturnStatement",
                    "start": 472,
                    "end": 481,
                    "argument": {
                      "type": "Literal",
                      "start": 479,
                      "end": 480,
                      "value": 0,
                      "raw": "0"
                    }
                  }
                ]
              }
            },
            "finalizer": null
          },
          {
            "type": "ReturnStatement",
            "start": 488,
            "end": 497,
            "argument": {
              "type": "Literal",
              "start": 495,
              "end": 496,
              "value": 2,
              "raw": "2"
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "start": 500,
      "end": 521,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 504,
          "end": 520,
          "id": {
            "type": "Identifier",
            "start": 504,
            "end": 506,
            "name": "x1"
          },
          "init": {
            "type": "CallExpression",
            "start": 507,
            "end": 520,
            "callee": {
              "type": "Identifier",
              "start": 507,
              "end": 518,
              "name": "myFunction1"
            },
            "arguments": [],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "start": 522,
      "end": 595,
      "test": {
        "type": "BinaryExpression",
        "start": 525,
        "end": 531,
        "left": {
          "type": "Identifier",
          "start": 525,
          "end": 527,
          "name": "x1"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 530,
          "end": 531,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 532,
        "end": 595,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 536,
            "end": 593,
            "argument": {
              "type": "NewExpression",
              "start": 542,
              "end": 592,
              "callee": {
                "type": "Identifier",
                "start": 546,
                "end": 558,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 559,
                  "end": 591,
                  "left": {
                    "type": "Literal",
                    "start": 559,
                    "end": 588,
                    "value": "#1.2: x1===1. Actual: x1===",
                    "raw": "'#1.2: x1===1. Actual: x1==='"
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 589,
                    "end": 591,
                    "name": "x1"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "FunctionDeclaration",
      "start": 608,
      "end": 719,
      "id": {
        "type": "Identifier",
        "start": 617,
        "end": 628,
        "name": "myFunction2"
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 630,
        "end": 719,
        "body": [
          {
            "type": "TryStatement",
            "start": 634,
            "end": 705,
            "block": {
              "type": "BlockStatement",
              "start": 637,
              "end": 673,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 643,
                  "end": 655,
                  "argument": {
                    "type": "Literal",
                    "start": 649,
                    "end": 654,
                    "value": "exc",
                    "raw": "\"exc\""
                  }
                },
                {
                  "type": "ReturnStatement",
                  "start": 660,
                  "end": 669,
                  "argument": {
                    "type": "Literal",
                    "start": 667,
                    "end": 668,
                    "value": 1,
                    "raw": "1"
                  }
                }
              ]
            },
            "handler": {
              "type": "CatchClause",
              "start": 673,
              "end": 705,
              "param": {
                "type": "Identifier",
                "start": 679,
                "end": 682,
                "name": "err"
              },
              "body": {
                "type": "BlockStatement",
                "start": 683,
                "end": 705,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 692,
                    "end": 701,
                    "argument": {
                      "type": "Literal",
                      "start": 699,
                      "end": 700,
                      "value": 2,
                      "raw": "2"
                    }
                  }
                ]
              }
            },
            "finalizer": null
          },
          {
            "type": "ReturnStatement",
            "start": 708,
            "end": 717,
            "argument": {
              "type": "Literal",
              "start": 715,
              "end": 716,
              "value": 3,
              "raw": "3"
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "start": 720,
      "end": 741,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 724,
          "end": 740,
          "id": {
            "type": "Identifier",
            "start": 724,
            "end": 726,
            "name": "x2"
          },
          "init": {
            "type": "CallExpression",
            "start": 727,
            "end": 740,
            "callee": {
              "type": "Identifier",
              "start": 727,
              "end": 738,
              "name": "myFunction2"
            },
            "arguments": [],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "start": 742,
      "end": 814,
      "test": {
        "type": "BinaryExpression",
        "start": 746,
        "end": 752,
        "left": {
          "type": "Identifier",
          "start": 746,
          "end": 748,
          "name": "x2"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 751,
          "end": 752,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 753,
        "end": 814,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 757,
            "end": 812,
            "argument": {
              "type": "NewExpression",
              "start": 763,
              "end": 811,
              "callee": {
                "type": "Identifier",
                "start": 767,
                "end": 779,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 780,
                  "end": 810,
                  "left": {
                    "type": "Literal",
                    "start": 780,
                    "end": 807,
                    "value": "#2: x2===2. Actual: x2===",
                    "raw": "'#2: x2===2. Actual: x2==='"
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 808,
                    "end": 810,
                    "name": "x2"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "FunctionDeclaration",
      "start": 827,
      "end": 929,
      "id": {
        "type": "Identifier",
        "start": 836,
        "end": 847,
        "name": "myFunction3"
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 849,
        "end": 929,
        "body": [
          {
            "type": "TryStatement",
            "start": 853,
            "end": 915,
            "block": {
              "type": "BlockStatement",
              "start": 856,
              "end": 883,
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 862,
                  "end": 879,
                  "argument": {
                    "type": "Identifier",
                    "start": 869,
                    "end": 878,
                    "name": "someValue"
                  }
                }
              ]
            },
            "handler": {
              "type": "CatchClause",
              "start": 883,
              "end": 915,
              "param": {
                "type": "Identifier",
                "start": 889,
                "end": 892,
                "name": "err"
              },
              "body": {
                "type": "BlockStatement",
                "start": 893,
                "end": 915,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 902,
                    "end": 911,
                    "argument": {
                      "type": "Literal",
                      "start": 909,
                      "end": 910,
                      "value": 1,
                      "raw": "1"
                    }
                  }
                ]
              }
            },
            "finalizer": null
          },
          {
            "type": "ReturnStatement",
            "start": 918,
            "end": 927,
            "argument": {
              "type": "Literal",
              "start": 925,
              "end": 926,
              "value": 2,
              "raw": "2"
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "start": 930,
      "end": 951,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 934,
          "end": 950,
          "id": {
            "type": "Identifier",
            "start": 934,
            "end": 936,
            "name": "x3"
          },
          "init": {
            "type": "CallExpression",
            "start": 937,
            "end": 950,
            "callee": {
              "type": "Identifier",
              "start": 937,
              "end": 948,
              "name": "myFunction3"
            },
            "arguments": [],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "start": 952,
      "end": 1024,
      "test": {
        "type": "BinaryExpression",
        "start": 956,
        "end": 962,
        "left": {
          "type": "Identifier",
          "start": 956,
          "end": 958,
          "name": "x3"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 961,
          "end": 962,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 963,
        "end": 1024,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 967,
            "end": 1022,
            "argument": {
              "type": "NewExpression",
              "start": 973,
              "end": 1021,
              "callee": {
                "type": "Identifier",
                "start": 977,
                "end": 989,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 990,
                  "end": 1020,
                  "left": {
                    "type": "Literal",
                    "start": 990,
                    "end": 1017,
                    "value": "#3: x3===1. Actual: x3===",
                    "raw": "'#3: x3===1. Actual: x3==='"
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 1018,
                    "end": 1020,
                    "name": "x3"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "FunctionDeclaration",
      "start": 1037,
      "end": 1161,
      "id": {
        "type": "Identifier",
        "start": 1046,
        "end": 1057,
        "name": "myFunction4"
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 1059,
        "end": 1161,
        "body": [
          {
            "type": "TryStatement",
            "start": 1063,
            "end": 1147,
            "block": {
              "type": "BlockStatement",
              "start": 1066,
              "end": 1102,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 1072,
                  "end": 1084,
                  "argument": {
                    "type": "Literal",
                    "start": 1078,
                    "end": 1083,
                    "value": "ex1",
                    "raw": "\"ex1\""
                  }
                },
                {
                  "type": "ReturnStatement",
                  "start": 1089,
                  "end": 1098,
                  "argument": {
                    "type": "Literal",
                    "start": 1096,
                    "end": 1097,
                    "value": 1,
                    "raw": "1"
                  }
                }
              ]
            },
            "handler": {
              "type": "CatchClause",
              "start": 1102,
              "end": 1147,
              "param": {
                "type": "Identifier",
                "start": 1108,
                "end": 1111,
                "name": "err"
              },
              "body": {
                "type": "BlockStatement",
                "start": 1112,
                "end": 1147,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 1118,
                    "end": 1129,
                    "argument": {
                      "type": "Literal",
                      "start": 1124,
                      "end": 1129,
                      "value": "ex2",
                      "raw": "\"ex2\""
                    }
                  },
                  {
                    "type": "ReturnStatement",
                    "start": 1134,
                    "end": 1143,
                    "argument": {
                      "type": "Literal",
                      "start": 1141,
                      "end": 1142,
                      "value": 0,
                      "raw": "0"
                    }
                  }
                ]
              }
            },
            "finalizer": null
          },
          {
            "type": "ReturnStatement",
            "start": 1150,
            "end": 1159,
            "argument": {
              "type": "Literal",
              "start": 1157,
              "end": 1158,
              "value": 2,
              "raw": "2"
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "TryStatement",
      "start": 1162,
      "end": 1540,
      "block": {
        "type": "BlockStatement",
        "start": 1165,
        "end": 1311,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 1169,
            "end": 1190,
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1173,
                "end": 1189,
                "id": {
                  "type": "Identifier",
                  "start": 1173,
                  "end": 1175,
                  "name": "x4"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 1176,
                  "end": 1189,
                  "callee": {
                    "type": "Identifier",
                    "start": 1176,
                    "end": 1187,
                    "name": "myFunction4"
                  },
                  "arguments": [],
                  "optional": false
                }
              }
            ]
          },
          {
            "type": "ThrowStatement",
            "start": 1193,
            "end": 1309,
            "argument": {
              "type": "NewExpression",
              "start": 1199,
              "end": 1308,
              "callee": {
                "type": "Identifier",
                "start": 1203,
                "end": 1215,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1216,
                  "end": 1307,
                  "value": "#4.1: Throwing exception inside function lead to throwing exception outside this function",
                  "raw": "'#4.1: Throwing exception inside function lead to throwing exception outside this function'"
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1312,
        "end": 1540,
        "param": {
          "type": "Identifier",
          "start": 1318,
          "end": 1319,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1320,
          "end": 1540,
          "body": [
            {
              "type": "IfStatement",
              "start": 1324,
              "end": 1432,
              "test": {
                "type": "BinaryExpression",
                "start": 1327,
                "end": 1336,
                "left": {
                  "type": "Identifier",
                  "start": 1327,
                  "end": 1328,
                  "name": "e"
                },
                "operator": "===",
                "right": {
                  "type": "Literal",
                  "start": 1331,
                  "end": 1336,
                  "value": "ex1",
                  "raw": "\"ex1\""
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 1337,
                "end": 1432,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 1343,
                    "end": 1428,
                    "argument": {
                      "type": "NewExpression",
                      "start": 1349,
                      "end": 1427,
                      "callee": {
                        "type": "Identifier",
                        "start": 1353,
                        "end": 1365,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1366,
                          "end": 1426,
                          "value": "#4.2: Exception !==\"ex1\". Actual: catch previous exception",
                          "raw": "'#4.2: Exception !==\"ex1\". Actual: catch previous exception'"
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            },
            {
              "type": "IfStatement",
              "start": 1435,
              "end": 1538,
              "test": {
                "type": "BinaryExpression",
                "start": 1438,
                "end": 1447,
                "left": {
                  "type": "Identifier",
                  "start": 1438,
                  "end": 1439,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 1442,
                  "end": 1447,
                  "value": "ex2",
                  "raw": "\"ex2\""
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 1448,
                "end": 1538,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 1454,
                    "end": 1534,
                    "argument": {
                      "type": "NewExpression",
                      "start": 1460,
                      "end": 1533,
                      "callee": {
                        "type": "Identifier",
                        "start": 1464,
                        "end": 1476,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 1477,
                          "end": 1530,
                          "left": {
                            "type": "Literal",
                            "start": 1477,
                            "end": 1527,
                            "value": "#4.3: Exception ===\"ex2\". Actual:  Exception ===",
                            "raw": "'#4.3: Exception ===\"ex2\". Actual:  Exception ==='"
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 1529,
                            "end": 1530,
                            "name": "e"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}