{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction1",
        "start": 315,
        "end": 326
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 348,
                    "end": 349
                  },
                  "start": 341,
                  "end": 350
                }
              ],
              "start": 335,
              "end": 354
            },
            "handler": {
              "type": "CatchClause",
              "param": {
                "type": "Identifier",
                "name": "err",
                "start": 363,
                "end": 366
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 382,
                        "end": 394
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#1.1: \"return 1\" inside function does not lead to throwing exception",
                          "raw": "'#1.1: \"return 1\" inside function does not lead to throwing exception'",
                          "start": 395,
                          "end": 465
                        }
                      ],
                      "start": 378,
                      "end": 466
                    },
                    "start": 372,
                    "end": 467
                  },
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 479,
                      "end": 480
                    },
                    "start": 472,
                    "end": 481
                  }
                ],
                "start": 367,
                "end": 485
              },
              "start": 357,
              "end": 485
            },
            "finalizer": null,
            "start": 332,
            "end": 485
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 495,
              "end": 496
            },
            "start": 488,
            "end": 497
          }
        ],
        "start": 328,
        "end": 499
      },
      "expression": false,
      "start": 306,
      "end": 499
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x1",
            "start": 504,
            "end": 506
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "myFunction1",
              "start": 507,
              "end": 518
            },
            "arguments": [],
            "optional": false,
            "start": 507,
            "end": 520
          },
          "start": 504,
          "end": 520
        }
      ],
      "start": 500,
      "end": 521
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x1",
          "start": 525,
          "end": 527
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 530,
          "end": 531
        },
        "start": 525,
        "end": 531
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 546,
                "end": 558
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1.2: x1===1. Actual: x1===",
                    "raw": "'#1.2: x1===1. Actual: x1==='",
                    "start": 559,
                    "end": 588
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "name": "x1",
                    "start": 589,
                    "end": 591
                  },
                  "start": 559,
                  "end": 591
                }
              ],
              "start": 542,
              "end": 592
            },
            "start": 536,
            "end": 593
          }
        ],
        "start": 532,
        "end": 595
      },
      "alternate": null,
      "start": 522,
      "end": 595
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction2",
        "start": 617,
        "end": 628
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "exc",
                    "raw": "\"exc\"",
                    "start": 649,
                    "end": 654
                  },
                  "start": 643,
                  "end": 655
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 667,
                    "end": 668
                  },
                  "start": 660,
                  "end": 669
                }
              ],
              "start": 637,
              "end": 673
            },
            "handler": {
              "type": "CatchClause",
              "param": {
                "type": "Identifier",
                "name": "err",
                "start": 679,
                "end": 682
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 699,
                      "end": 700
                    },
                    "start": 692,
                    "end": 701
                  }
                ],
                "start": 683,
                "end": 705
              },
              "start": 673,
              "end": 705
            },
            "finalizer": null,
            "start": 634,
            "end": 705
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": 3,
              "raw": "3",
              "start": 715,
              "end": 716
            },
            "start": 708,
            "end": 717
          }
        ],
        "start": 630,
        "end": 719
      },
      "expression": false,
      "start": 608,
      "end": 719
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x2",
            "start": 724,
            "end": 726
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "myFunction2",
              "start": 727,
              "end": 738
            },
            "arguments": [],
            "optional": false,
            "start": 727,
            "end": 740
          },
          "start": 724,
          "end": 740
        }
      ],
      "start": 720,
      "end": 741
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x2",
          "start": 746,
          "end": 748
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 751,
          "end": 752
        },
        "start": 746,
        "end": 752
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 767,
                "end": 779
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x2===2. Actual: x2===",
                    "raw": "'#2: x2===2. Actual: x2==='",
                    "start": 780,
                    "end": 807
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "name": "x2",
                    "start": 808,
                    "end": 810
                  },
                  "start": 780,
                  "end": 810
                }
              ],
              "start": 763,
              "end": 811
            },
            "start": 757,
            "end": 812
          }
        ],
        "start": 753,
        "end": 814
      },
      "alternate": null,
      "start": 742,
      "end": 814
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction3",
        "start": 836,
        "end": 847
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "someValue",
                    "start": 869,
                    "end": 878
                  },
                  "start": 862,
                  "end": 879
                }
              ],
              "start": 856,
              "end": 883
            },
            "handler": {
              "type": "CatchClause",
              "param": {
                "type": "Identifier",
                "name": "err",
                "start": 889,
                "end": 892
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 909,
                      "end": 910
                    },
                    "start": 902,
                    "end": 911
                  }
                ],
                "start": 893,
                "end": 915
              },
              "start": 883,
              "end": 915
            },
            "finalizer": null,
            "start": 853,
            "end": 915
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 925,
              "end": 926
            },
            "start": 918,
            "end": 927
          }
        ],
        "start": 849,
        "end": 929
      },
      "expression": false,
      "start": 827,
      "end": 929
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x3",
            "start": 934,
            "end": 936
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "myFunction3",
              "start": 937,
              "end": 948
            },
            "arguments": [],
            "optional": false,
            "start": 937,
            "end": 950
          },
          "start": 934,
          "end": 950
        }
      ],
      "start": 930,
      "end": 951
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x3",
          "start": 956,
          "end": 958
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 961,
          "end": 962
        },
        "start": 956,
        "end": 962
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 977,
                "end": 989
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x3===1. Actual: x3===",
                    "raw": "'#3: x3===1. Actual: x3==='",
                    "start": 990,
                    "end": 1017
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "name": "x3",
                    "start": 1018,
                    "end": 1020
                  },
                  "start": 990,
                  "end": 1020
                }
              ],
              "start": 973,
              "end": 1021
            },
            "start": 967,
            "end": 1022
          }
        ],
        "start": 963,
        "end": 1024
      },
      "alternate": null,
      "start": 952,
      "end": 1024
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction4",
        "start": 1046,
        "end": 1057
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "ex1",
                    "raw": "\"ex1\"",
                    "start": 1078,
                    "end": 1083
                  },
                  "start": 1072,
                  "end": 1084
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1096,
                    "end": 1097
                  },
                  "start": 1089,
                  "end": 1098
                }
              ],
              "start": 1066,
              "end": 1102
            },
            "handler": {
              "type": "CatchClause",
              "param": {
                "type": "Identifier",
                "name": "err",
                "start": 1108,
                "end": 1111
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Literal",
                      "value": "ex2",
                      "raw": "\"ex2\"",
                      "start": 1124,
                      "end": 1129
                    },
                    "start": 1118,
                    "end": 1129
                  },
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 1141,
                      "end": 1142
                    },
                    "start": 1134,
                    "end": 1143
                  }
                ],
                "start": 1112,
                "end": 1147
              },
              "start": 1102,
              "end": 1147
            },
            "finalizer": null,
            "start": 1063,
            "end": 1147
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1157,
              "end": 1158
            },
            "start": 1150,
            "end": 1159
          }
        ],
        "start": 1059,
        "end": 1161
      },
      "expression": false,
      "start": 1037,
      "end": 1161
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x4",
                  "start": 1173,
                  "end": 1175
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "myFunction4",
                    "start": 1176,
                    "end": 1187
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 1176,
                  "end": 1189
                },
                "start": 1173,
                "end": 1189
              }
            ],
            "start": 1169,
            "end": 1190
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1203,
                "end": 1215
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4.1: Throwing exception inside function lead to throwing exception outside this function",
                  "raw": "'#4.1: Throwing exception inside function lead to throwing exception outside this function'",
                  "start": 1216,
                  "end": 1307
                }
              ],
              "start": 1199,
              "end": 1308
            },
            "start": 1193,
            "end": 1309
          }
        ],
        "start": 1165,
        "end": 1311
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1318,
          "end": 1319
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 1327,
                  "end": 1328
                },
                "operator": "===",
                "right": {
                  "type": "Literal",
                  "value": "ex1",
                  "raw": "\"ex1\"",
                  "start": 1331,
                  "end": 1336
                },
                "start": 1327,
                "end": 1336
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 1353,
                        "end": 1365
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#4.2: Exception !==\"ex1\". Actual: catch previous exception",
                          "raw": "'#4.2: Exception !==\"ex1\". Actual: catch previous exception'",
                          "start": 1366,
                          "end": 1426
                        }
                      ],
                      "start": 1349,
                      "end": 1427
                    },
                    "start": 1343,
                    "end": 1428
                  }
                ],
                "start": 1337,
                "end": 1432
              },
              "alternate": null,
              "start": 1324,
              "end": 1432
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 1438,
                  "end": 1439
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "ex2",
                  "raw": "\"ex2\"",
                  "start": 1442,
                  "end": 1447
                },
                "start": 1438,
                "end": 1447
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 1464,
                        "end": 1476
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "#4.3: Exception ===\"ex2\". Actual:  Exception ===",
                            "raw": "'#4.3: Exception ===\"ex2\". Actual:  Exception ==='",
                            "start": 1477,
                            "end": 1527
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "e",
                            "start": 1529,
                            "end": 1530
                          },
                          "start": 1477,
                          "end": 1530
                        }
                      ],
                      "start": 1460,
                      "end": 1533
                    },
                    "start": 1454,
                    "end": 1534
                  }
                ],
                "start": 1448,
                "end": 1538
              },
              "alternate": null,
              "start": 1435,
              "end": 1538
            }
          ],
          "start": 1320,
          "end": 1540
        },
        "start": 1312,
        "end": 1540
      },
      "finalizer": null,
      "start": 1162,
      "end": 1540
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1541
}