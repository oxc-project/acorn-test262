{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c1",
            "start": 347,
            "end": 349
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 350,
            "end": 351
          },
          "start": 347,
          "end": 351
        }
      ],
      "start": 343,
      "end": 352
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "name": "c1",
                "start": 361,
                "end": 363
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 365,
                "end": 366
              },
              "start": 361,
              "end": 366
            },
            "start": 361,
            "end": 367
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "y",
              "start": 370,
              "end": 371
            },
            "start": 370,
            "end": 372
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 385,
                "end": 397
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1.1: \"y\" lead to throwing exception",
                  "raw": "'#1.1: \"y\" lead to throwing exception'",
                  "start": 398,
                  "end": 436
                }
              ],
              "start": 381,
              "end": 437
            },
            "start": 375,
            "end": 438
          }
        ],
        "start": 357,
        "end": 440
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 448,
          "end": 449
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "*=",
                "left": {
                  "type": "Identifier",
                  "name": "c1",
                  "start": 455,
                  "end": 457
                },
                "right": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 459,
                  "end": 460
                },
                "start": 455,
                "end": 460
              },
              "start": 455,
              "end": 461
            }
          ],
          "start": 451,
          "end": 463
        },
        "start": 441,
        "end": 463
      },
      "finalizer": null,
      "start": 353,
      "end": 463
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "c1",
          "start": 468,
          "end": 470
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 473,
          "end": 474
        },
        "start": 468,
        "end": 474
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 489,
                "end": 501
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1.2: Sequence evaluation of commands try/catch is 1. try, 2. catch",
                  "raw": "'#1.2: Sequence evaluation of commands try/catch is 1. try, 2. catch'",
                  "start": 502,
                  "end": 571
                }
              ],
              "start": 485,
              "end": 572
            },
            "start": 479,
            "end": 573
          }
        ],
        "start": 475,
        "end": 576
      },
      "alternate": null,
      "start": 464,
      "end": 576
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c2",
            "start": 593,
            "end": 595
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 596,
            "end": 597
          },
          "start": 593,
          "end": 597
        }
      ],
      "start": 589,
      "end": 598
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "name": "c2",
                "start": 606,
                "end": 608
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 610,
                "end": 611
              },
              "start": 606,
              "end": 611
            },
            "start": 606,
            "end": 612
          }
        ],
        "start": 602,
        "end": 614
      },
      "handler": null,
      "finalizer": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "*=",
              "left": {
                "type": "Identifier",
                "name": "c2",
                "start": 626,
                "end": 628
              },
              "right": {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 630,
                "end": 631
              },
              "start": 626,
              "end": 631
            },
            "start": 626,
            "end": 632
          }
        ],
        "start": 622,
        "end": 634
      },
      "start": 599,
      "end": 634
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "c2",
          "start": 639,
          "end": 641
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 644,
          "end": 645
        },
        "start": 639,
        "end": 645
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 660,
                "end": 672
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: Sequence evaluation of commands try/finally is 1. try, 2. finally",
                  "raw": "'#2: Sequence evaluation of commands try/finally is 1. try, 2. finally'",
                  "start": 673,
                  "end": 744
                }
              ],
              "start": 656,
              "end": 745
            },
            "start": 650,
            "end": 746
          }
        ],
        "start": 646,
        "end": 748
      },
      "alternate": null,
      "start": 635,
      "end": 748
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c3",
            "start": 765,
            "end": 767
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 768,
            "end": 769
          },
          "start": 765,
          "end": 769
        }
      ],
      "start": 761,
      "end": 770
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "c3",
                "start": 778,
                "end": 780
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 781,
                "end": 782
              },
              "start": 778,
              "end": 782
            },
            "start": 778,
            "end": 783
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "z",
              "start": 786,
              "end": 787
            },
            "start": 786,
            "end": 788
          }
        ],
        "start": 774,
        "end": 790
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "err",
          "start": 797,
          "end": 800
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "*=",
                "left": {
                  "type": "Identifier",
                  "name": "c3",
                  "start": 805,
                  "end": 807
                },
                "right": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 809,
                  "end": 810
                },
                "start": 805,
                "end": 810
              },
              "start": 805,
              "end": 811
            }
          ],
          "start": 801,
          "end": 813
        },
        "start": 791,
        "end": 813
      },
      "finalizer": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "name": "c3",
                "start": 825,
                "end": 827
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 829,
                "end": 830
              },
              "start": 825,
              "end": 830
            },
            "start": 825,
            "end": 831
          }
        ],
        "start": 821,
        "end": 833
      },
      "start": 771,
      "end": 833
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "c3",
          "start": 838,
          "end": 840
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 843,
          "end": 844
        },
        "start": 838,
        "end": 844
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 859,
                "end": 871
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3: Sequence evaluation of commands try/catch/finally(with exception) is 1. try, 2. catch, 3. finally",
                  "raw": "'#3: Sequence evaluation of commands try/catch/finally(with exception) is 1. try, 2. catch, 3. finally'",
                  "start": 872,
                  "end": 975
                }
              ],
              "start": 855,
              "end": 976
            },
            "start": 849,
            "end": 977
          }
        ],
        "start": 845,
        "end": 979
      },
      "alternate": null,
      "start": 834,
      "end": 979
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c4",
            "start": 997,
            "end": 999
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1000,
            "end": 1001
          },
          "start": 997,
          "end": 1001
        }
      ],
      "start": 993,
      "end": 1002
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "c4",
                "start": 1010,
                "end": 1012
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1013,
                "end": 1014
              },
              "start": 1010,
              "end": 1014
            },
            "start": 1010,
            "end": 1015
          }
        ],
        "start": 1006,
        "end": 1017
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "err",
          "start": 1024,
          "end": 1027
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "*=",
                "left": {
                  "type": "Identifier",
                  "name": "c4",
                  "start": 1032,
                  "end": 1034
                },
                "right": {
                  "type": "Literal",
                  "value": 3,
                  "raw": "3",
                  "start": 1036,
                  "end": 1037
                },
                "start": 1032,
                "end": 1037
              },
              "start": 1032,
              "end": 1038
            }
          ],
          "start": 1028,
          "end": 1040
        },
        "start": 1018,
        "end": 1040
      },
      "finalizer": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "name": "c4",
                "start": 1052,
                "end": 1054
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 1056,
                "end": 1057
              },
              "start": 1052,
              "end": 1057
            },
            "start": 1052,
            "end": 1058
          }
        ],
        "start": 1048,
        "end": 1060
      },
      "start": 1003,
      "end": 1060
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "c4",
          "start": 1065,
          "end": 1067
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 1070,
          "end": 1071
        },
        "start": 1065,
        "end": 1071
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1086,
                "end": 1098
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4: Sequence evaluation of commands try/catch/finally(without exception) is 1. try, 2. finally",
                  "raw": "'#4: Sequence evaluation of commands try/catch/finally(without exception) is 1. try, 2. finally'",
                  "start": 1099,
                  "end": 1195
                }
              ],
              "start": 1082,
              "end": 1196
            },
            "start": 1076,
            "end": 1197
          }
        ],
        "start": 1072,
        "end": 1199
      },
      "alternate": null,
      "start": 1061,
      "end": 1199
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1200
}