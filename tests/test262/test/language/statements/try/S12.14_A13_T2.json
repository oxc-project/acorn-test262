{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c1",
            "start": 312,
            "end": 314
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 315,
            "end": 316
          },
          "start": 312,
          "end": 316
        }
      ],
      "start": 308,
      "end": 317
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction1",
        "start": 327,
        "end": 338
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 360,
                    "end": 361
                  },
                  "start": 353,
                  "end": 362
                }
              ],
              "start": 347,
              "end": 366
            },
            "handler": null,
            "finalizer": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "c1",
                      "start": 379,
                      "end": 381
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 382,
                      "end": 383
                    },
                    "start": 379,
                    "end": 383
                  },
                  "start": 379,
                  "end": 384
                }
              ],
              "start": 373,
              "end": 388
            },
            "start": 344,
            "end": 388
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 398,
              "end": 399
            },
            "start": 391,
            "end": 400
          }
        ],
        "start": 340,
        "end": 402
      },
      "expression": false,
      "start": 318,
      "end": 402
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x1",
            "start": 407,
            "end": 409
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "myFunction1",
              "start": 410,
              "end": 421
            },
            "arguments": [],
            "optional": false,
            "start": 410,
            "end": 423
          },
          "start": 407,
          "end": 423
        }
      ],
      "start": 403,
      "end": 424
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x1",
          "start": 428,
          "end": 430
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 433,
          "end": 434
        },
        "start": 428,
        "end": 434
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 449,
                "end": 461
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1.1: x1===1. Actual: x1===",
                    "raw": "'#1.1: x1===1. Actual: x1==='",
                    "start": 462,
                    "end": 491
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "name": "x1",
                    "start": 492,
                    "end": 494
                  },
                  "start": 462,
                  "end": 494
                }
              ],
              "start": 445,
              "end": 495
            },
            "start": 439,
            "end": 496
          }
        ],
        "start": 435,
        "end": 498
      },
      "alternate": null,
      "start": 425,
      "end": 498
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "c1",
          "start": 503,
          "end": 505
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 508,
          "end": 509
        },
        "start": 503,
        "end": 509
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 524,
                "end": 536
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1.2: \"finally\" block must be evaluated",
                  "raw": "'#1.2: \"finally\" block must be evaluated'",
                  "start": 537,
                  "end": 578
                }
              ],
              "start": 520,
              "end": 579
            },
            "start": 514,
            "end": 580
          }
        ],
        "start": 510,
        "end": 582
      },
      "alternate": null,
      "start": 499,
      "end": 582
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c2",
            "start": 599,
            "end": 601
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 602,
            "end": 603
          },
          "start": 599,
          "end": 603
        }
      ],
      "start": 595,
      "end": 604
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction2",
        "start": 614,
        "end": 625
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "exc",
                    "raw": "\"exc\"",
                    "start": 646,
                    "end": 651
                  },
                  "start": 640,
                  "end": 652
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 664,
                    "end": 665
                  },
                  "start": 657,
                  "end": 666
                }
              ],
              "start": 634,
              "end": 670
            },
            "handler": null,
            "finalizer": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "c2",
                      "start": 683,
                      "end": 685
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 686,
                      "end": 687
                    },
                    "start": 683,
                    "end": 687
                  },
                  "start": 683,
                  "end": 688
                }
              ],
              "start": 677,
              "end": 692
            },
            "start": 631,
            "end": 692
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 702,
              "end": 703
            },
            "start": 695,
            "end": 704
          }
        ],
        "start": 627,
        "end": 706
      },
      "expression": false,
      "start": 605,
      "end": 706
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x2",
                  "start": 718,
                  "end": 720
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "myFunction2",
                    "start": 721,
                    "end": 732
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 721,
                  "end": 734
                },
                "start": 718,
                "end": 734
              }
            ],
            "start": 714,
            "end": 735
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 748,
                "end": 760
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2.1: Throwing exception inside function lead to throwing exception outside this function",
                  "raw": "'#2.1: Throwing exception inside function lead to throwing exception outside this function'",
                  "start": 761,
                  "end": 852
                }
              ],
              "start": 744,
              "end": 853
            },
            "start": 738,
            "end": 854
          }
        ],
        "start": 710,
        "end": 856
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 863,
          "end": 864
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "c2",
                  "start": 873,
                  "end": 875
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 878,
                  "end": 879
                },
                "start": 873,
                "end": 879
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 896,
                        "end": 908
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#2.2: \"finally\" block must be evaluated",
                          "raw": "'#2.2: \"finally\" block must be evaluated'",
                          "start": 909,
                          "end": 950
                        }
                      ],
                      "start": 892,
                      "end": 951
                    },
                    "start": 886,
                    "end": 952
                  }
                ],
                "start": 880,
                "end": 956
              },
              "alternate": null,
              "start": 869,
              "end": 956
            }
          ],
          "start": 865,
          "end": 958
        },
        "start": 857,
        "end": 958
      },
      "finalizer": null,
      "start": 707,
      "end": 958
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c3",
            "start": 975,
            "end": 977
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 978,
            "end": 979
          },
          "start": 975,
          "end": 979
        }
      ],
      "start": 971,
      "end": 980
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction3",
        "start": 990,
        "end": 1001
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "someValue",
                    "start": 1023,
                    "end": 1032
                  },
                  "start": 1016,
                  "end": 1033
                }
              ],
              "start": 1010,
              "end": 1037
            },
            "handler": null,
            "finalizer": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "c3",
                      "start": 1050,
                      "end": 1052
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1053,
                      "end": 1054
                    },
                    "start": 1050,
                    "end": 1054
                  },
                  "start": 1050,
                  "end": 1055
                }
              ],
              "start": 1044,
              "end": 1059
            },
            "start": 1007,
            "end": 1059
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1069,
              "end": 1070
            },
            "start": 1062,
            "end": 1071
          }
        ],
        "start": 1003,
        "end": 1073
      },
      "expression": false,
      "start": 981,
      "end": 1073
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x3",
                  "start": 1085,
                  "end": 1087
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "myFunction3",
                    "start": 1088,
                    "end": 1099
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 1088,
                  "end": 1101
                },
                "start": 1085,
                "end": 1101
              }
            ],
            "start": 1081,
            "end": 1102
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1115,
                "end": 1127
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#3.1: Throwing exception inside function lead to throwing exception outside this function",
                  "raw": "'#3.1: Throwing exception inside function lead to throwing exception outside this function'",
                  "start": 1128,
                  "end": 1219
                }
              ],
              "start": 1111,
              "end": 1220
            },
            "start": 1105,
            "end": 1221
          }
        ],
        "start": 1077,
        "end": 1223
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1230,
          "end": 1231
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "c3",
                  "start": 1240,
                  "end": 1242
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1245,
                  "end": 1246
                },
                "start": 1240,
                "end": 1246
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 1263,
                        "end": 1275
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#3.2: \"finally\" block must be evaluated",
                          "raw": "'#3.2: \"finally\" block must be evaluated'",
                          "start": 1276,
                          "end": 1317
                        }
                      ],
                      "start": 1259,
                      "end": 1318
                    },
                    "start": 1253,
                    "end": 1319
                  }
                ],
                "start": 1247,
                "end": 1323
              },
              "alternate": null,
              "start": 1236,
              "end": 1323
            }
          ],
          "start": 1232,
          "end": 1325
        },
        "start": 1224,
        "end": 1325
      },
      "finalizer": null,
      "start": 1074,
      "end": 1325
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c4",
            "start": 1342,
            "end": 1344
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1345,
            "end": 1346
          },
          "start": 1342,
          "end": 1346
        }
      ],
      "start": 1338,
      "end": 1347
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction4",
        "start": 1357,
        "end": 1368
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1390,
                    "end": 1391
                  },
                  "start": 1383,
                  "end": 1392
                }
              ],
              "start": 1377,
              "end": 1396
            },
            "handler": null,
            "finalizer": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "c4",
                      "start": 1409,
                      "end": 1411
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1412,
                      "end": 1413
                    },
                    "start": 1409,
                    "end": 1413
                  },
                  "start": 1409,
                  "end": 1414
                },
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "exc",
                    "raw": "\"exc\"",
                    "start": 1425,
                    "end": 1430
                  },
                  "start": 1419,
                  "end": 1431
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0",
                    "start": 1443,
                    "end": 1444
                  },
                  "start": 1436,
                  "end": 1445
                }
              ],
              "start": 1403,
              "end": 1449
            },
            "start": 1374,
            "end": 1449
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1459,
              "end": 1460
            },
            "start": 1452,
            "end": 1461
          }
        ],
        "start": 1370,
        "end": 1463
      },
      "expression": false,
      "start": 1348,
      "end": 1463
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x4",
                  "start": 1475,
                  "end": 1477
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "myFunction4",
                    "start": 1478,
                    "end": 1489
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 1478,
                  "end": 1491
                },
                "start": 1475,
                "end": 1491
              }
            ],
            "start": 1471,
            "end": 1492
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1505,
                "end": 1517
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#4.2: Throwing exception inside function lead to throwing exception outside this function",
                  "raw": "'#4.2: Throwing exception inside function lead to throwing exception outside this function'",
                  "start": 1518,
                  "end": 1609
                }
              ],
              "start": 1501,
              "end": 1610
            },
            "start": 1495,
            "end": 1611
          }
        ],
        "start": 1467,
        "end": 1613
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 1620,
          "end": 1621
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "c4",
                  "start": 1630,
                  "end": 1632
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1635,
                  "end": 1636
                },
                "start": 1630,
                "end": 1636
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 1653,
                        "end": 1665
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#4.3: \"finally\" block must be evaluated",
                          "raw": "'#4.3: \"finally\" block must be evaluated'",
                          "start": 1666,
                          "end": 1707
                        }
                      ],
                      "start": 1649,
                      "end": 1708
                    },
                    "start": 1643,
                    "end": 1709
                  }
                ],
                "start": 1637,
                "end": 1713
              },
              "alternate": null,
              "start": 1626,
              "end": 1713
            }
          ],
          "start": 1622,
          "end": 1715
        },
        "start": 1614,
        "end": 1715
      },
      "finalizer": null,
      "start": 1464,
      "end": 1715
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c5",
            "start": 1732,
            "end": 1734
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1735,
            "end": 1736
          },
          "start": 1732,
          "end": 1736
        }
      ],
      "start": 1728,
      "end": 1737
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction5",
        "start": 1747,
        "end": 1758
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1780,
                    "end": 1781
                  },
                  "start": 1773,
                  "end": 1782
                }
              ],
              "start": 1767,
              "end": 1786
            },
            "handler": null,
            "finalizer": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "c5",
                      "start": 1799,
                      "end": 1801
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1802,
                      "end": 1803
                    },
                    "start": 1799,
                    "end": 1803
                  },
                  "start": 1799,
                  "end": 1804
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "someValue",
                    "start": 1816,
                    "end": 1825
                  },
                  "start": 1809,
                  "end": 1826
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0",
                    "start": 1838,
                    "end": 1839
                  },
                  "start": 1831,
                  "end": 1840
                }
              ],
              "start": 1793,
              "end": 1844
            },
            "start": 1764,
            "end": 1844
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": 2,
              "raw": "2",
              "start": 1854,
              "end": 1855
            },
            "start": 1847,
            "end": 1856
          }
        ],
        "start": 1760,
        "end": 1858
      },
      "expression": false,
      "start": 1738,
      "end": 1858
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x5",
                  "start": 1870,
                  "end": 1872
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "myFunction5",
                    "start": 1873,
                    "end": 1884
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 1873,
                  "end": 1886
                },
                "start": 1870,
                "end": 1886
              }
            ],
            "start": 1866,
            "end": 1887
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1900,
                "end": 1912
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#5.2: Throwing exception inside function lead to throwing exception outside this function",
                  "raw": "'#5.2: Throwing exception inside function lead to throwing exception outside this function'",
                  "start": 1913,
                  "end": 2004
                }
              ],
              "start": 1896,
              "end": 2005
            },
            "start": 1890,
            "end": 2006
          }
        ],
        "start": 1862,
        "end": 2008
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 2015,
          "end": 2016
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "c5",
                  "start": 2025,
                  "end": 2027
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 2030,
                  "end": 2031
                },
                "start": 2025,
                "end": 2031
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 2048,
                        "end": 2060
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#5.3: \"finally\" block must be evaluated",
                          "raw": "'#5.3: \"finally\" block must be evaluated'",
                          "start": 2061,
                          "end": 2102
                        }
                      ],
                      "start": 2044,
                      "end": 2103
                    },
                    "start": 2038,
                    "end": 2104
                  }
                ],
                "start": 2032,
                "end": 2108
              },
              "alternate": null,
              "start": 2021,
              "end": 2108
            }
          ],
          "start": 2017,
          "end": 2110
        },
        "start": 2009,
        "end": 2110
      },
      "finalizer": null,
      "start": 1859,
      "end": 2110
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c6",
            "start": 2127,
            "end": 2129
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 2130,
            "end": 2131
          },
          "start": 2127,
          "end": 2131
        }
      ],
      "start": 2123,
      "end": 2132
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction6",
        "start": 2142,
        "end": 2153
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "ex1",
                    "raw": "\"ex1\"",
                    "start": 2174,
                    "end": 2179
                  },
                  "start": 2168,
                  "end": 2180
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 2192,
                    "end": 2193
                  },
                  "start": 2185,
                  "end": 2194
                }
              ],
              "start": 2162,
              "end": 2198
            },
            "handler": null,
            "finalizer": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "c6",
                      "start": 2211,
                      "end": 2213
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 2214,
                      "end": 2215
                    },
                    "start": 2211,
                    "end": 2215
                  },
                  "start": 2211,
                  "end": 2216
                },
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "ex2",
                    "raw": "\"ex2\"",
                    "start": 2227,
                    "end": 2232
                  },
                  "start": 2221,
                  "end": 2233
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 2245,
                    "end": 2246
                  },
                  "start": 2238,
                  "end": 2247
                }
              ],
              "start": 2205,
              "end": 2251
            },
            "start": 2159,
            "end": 2251
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": 3,
              "raw": "3",
              "start": 2261,
              "end": 2262
            },
            "start": 2254,
            "end": 2263
          }
        ],
        "start": 2155,
        "end": 2265
      },
      "expression": false,
      "start": 2133,
      "end": 2265
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x6",
                  "start": 2277,
                  "end": 2279
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "myFunction6",
                    "start": 2280,
                    "end": 2291
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 2280,
                  "end": 2293
                },
                "start": 2277,
                "end": 2293
              }
            ],
            "start": 2273,
            "end": 2294
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2307,
                "end": 2319
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#6.1: Throwing exception inside function lead to throwing exception outside this function",
                  "raw": "'#6.1: Throwing exception inside function lead to throwing exception outside this function'",
                  "start": 2320,
                  "end": 2411
                }
              ],
              "start": 2303,
              "end": 2412
            },
            "start": 2297,
            "end": 2413
          }
        ],
        "start": 2269,
        "end": 2415
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 2422,
          "end": 2423
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 2431,
                  "end": 2432
                },
                "operator": "===",
                "right": {
                  "type": "Literal",
                  "value": "ex1",
                  "raw": "\"ex1\"",
                  "start": 2435,
                  "end": 2440
                },
                "start": 2431,
                "end": 2440
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 2457,
                        "end": 2469
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#6.2: Exception !==\"ex1\". Actual: catch previous exception",
                          "raw": "'#6.2: Exception !==\"ex1\". Actual: catch previous exception'",
                          "start": 2470,
                          "end": 2530
                        }
                      ],
                      "start": 2453,
                      "end": 2531
                    },
                    "start": 2447,
                    "end": 2532
                  }
                ],
                "start": 2441,
                "end": 2536
              },
              "alternate": null,
              "start": 2428,
              "end": 2536
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 2542,
                  "end": 2543
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "ex2",
                  "raw": "\"ex2\"",
                  "start": 2546,
                  "end": 2551
                },
                "start": 2542,
                "end": 2551
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 2568,
                        "end": 2580
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "#6.3: Exception !==\"ex1\". Actual: ",
                            "raw": "'#6.3: Exception !==\"ex1\". Actual: '",
                            "start": 2581,
                            "end": 2617
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "e",
                            "start": 2618,
                            "end": 2619
                          },
                          "start": 2581,
                          "end": 2619
                        }
                      ],
                      "start": 2564,
                      "end": 2620
                    },
                    "start": 2558,
                    "end": 2621
                  }
                ],
                "start": 2552,
                "end": 2625
              },
              "alternate": null,
              "start": 2539,
              "end": 2625
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "c6",
                  "start": 2632,
                  "end": 2634
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 2637,
                  "end": 2638
                },
                "start": 2632,
                "end": 2638
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 2655,
                        "end": 2667
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#6.4: \"finally\" block must be evaluated",
                          "raw": "'#6.4: \"finally\" block must be evaluated'",
                          "start": 2668,
                          "end": 2709
                        }
                      ],
                      "start": 2651,
                      "end": 2710
                    },
                    "start": 2645,
                    "end": 2711
                  }
                ],
                "start": 2639,
                "end": 2715
              },
              "alternate": null,
              "start": 2628,
              "end": 2715
            }
          ],
          "start": 2424,
          "end": 2717
        },
        "start": 2416,
        "end": 2717
      },
      "finalizer": null,
      "start": 2266,
      "end": 2717
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c7",
            "start": 2734,
            "end": 2736
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 2737,
            "end": 2738
          },
          "start": 2734,
          "end": 2738
        }
      ],
      "start": 2730,
      "end": 2739
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction7",
        "start": 2749,
        "end": 2760
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 2782,
                    "end": 2783
                  },
                  "start": 2775,
                  "end": 2784
                }
              ],
              "start": 2769,
              "end": 2788
            },
            "handler": null,
            "finalizer": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "c7",
                      "start": 2801,
                      "end": 2803
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 2804,
                      "end": 2805
                    },
                    "start": 2801,
                    "end": 2805
                  },
                  "start": 2801,
                  "end": 2806
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 2818,
                    "end": 2819
                  },
                  "start": 2811,
                  "end": 2820
                }
              ],
              "start": 2795,
              "end": 2824
            },
            "start": 2766,
            "end": 2824
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": 3,
              "raw": "3",
              "start": 2834,
              "end": 2835
            },
            "start": 2827,
            "end": 2836
          }
        ],
        "start": 2762,
        "end": 2838
      },
      "expression": false,
      "start": 2740,
      "end": 2838
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x7",
            "start": 2843,
            "end": 2845
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "myFunction7",
              "start": 2846,
              "end": 2857
            },
            "arguments": [],
            "optional": false,
            "start": 2846,
            "end": 2859
          },
          "start": 2843,
          "end": 2859
        }
      ],
      "start": 2839,
      "end": 2860
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x7",
          "start": 2864,
          "end": 2866
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 2869,
          "end": 2870
        },
        "start": 2864,
        "end": 2870
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2885,
                "end": 2897
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#7.1: \"catch\" block must be evaluated",
                  "raw": "'#7.1: \"catch\" block must be evaluated'",
                  "start": 2898,
                  "end": 2937
                }
              ],
              "start": 2881,
              "end": 2938
            },
            "start": 2875,
            "end": 2939
          }
        ],
        "start": 2871,
        "end": 2941
      },
      "alternate": null,
      "start": 2861,
      "end": 2941
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "c7",
          "start": 2946,
          "end": 2948
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 2951,
          "end": 2952
        },
        "start": 2946,
        "end": 2952
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2967,
                "end": 2979
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#7.2: \"finally\" block must be evaluated",
                  "raw": "'#7.2: \"finally\" block must be evaluated'",
                  "start": 2980,
                  "end": 3021
                }
              ],
              "start": 2963,
              "end": 3022
            },
            "start": 2957,
            "end": 3023
          }
        ],
        "start": 2953,
        "end": 3025
      },
      "alternate": null,
      "start": 2942,
      "end": 3025
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c8",
            "start": 3042,
            "end": 3044
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 3045,
            "end": 3046
          },
          "start": 3042,
          "end": 3046
        }
      ],
      "start": 3038,
      "end": 3047
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "myFunction8",
        "start": 3057,
        "end": 3068
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "ex1",
                    "raw": "\"ex1\"",
                    "start": 3089,
                    "end": 3094
                  },
                  "start": 3083,
                  "end": 3095
                }
              ],
              "start": 3077,
              "end": 3099
            },
            "handler": null,
            "finalizer": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "c8",
                      "start": 3112,
                      "end": 3114
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 3115,
                      "end": 3116
                    },
                    "start": 3112,
                    "end": 3116
                  },
                  "start": 3112,
                  "end": 3117
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 3129,
                    "end": 3130
                  },
                  "start": 3122,
                  "end": 3131
                }
              ],
              "start": 3106,
              "end": 3135
            },
            "start": 3074,
            "end": 3135
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": 3,
              "raw": "3",
              "start": 3145,
              "end": 3146
            },
            "start": 3138,
            "end": 3147
          }
        ],
        "start": 3070,
        "end": 3149
      },
      "expression": false,
      "start": 3048,
      "end": 3149
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x8",
                  "start": 3161,
                  "end": 3163
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "myFunction8",
                    "start": 3164,
                    "end": 3175
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 3164,
                  "end": 3177
                },
                "start": 3161,
                "end": 3177
              }
            ],
            "start": 3157,
            "end": 3178
          }
        ],
        "start": 3153,
        "end": 3180
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "ex1",
          "start": 3187,
          "end": 3190
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "c8",
                  "start": 3195,
                  "end": 3197
                },
                "right": {
                  "type": "Literal",
                  "value": 10,
                  "raw": "10",
                  "start": 3198,
                  "end": 3200
                },
                "start": 3195,
                "end": 3200
              },
              "start": 3195,
              "end": 3201
            }
          ],
          "start": 3191,
          "end": 3203
        },
        "start": 3181,
        "end": 3203
      },
      "finalizer": null,
      "start": 3150,
      "end": 3203
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "c8",
          "start": 3208,
          "end": 3210
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 3213,
          "end": 3214
        },
        "start": 3208,
        "end": 3214
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 3229,
                "end": 3241
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#8: \"finally\" block must be evaluated",
                  "raw": "'#8: \"finally\" block must be evaluated'",
                  "start": 3242,
                  "end": 3281
                }
              ],
              "start": 3225,
              "end": 3282
            },
            "start": 3219,
            "end": 3283
          }
        ],
        "start": 3215,
        "end": 3285
      },
      "alternate": null,
      "start": 3204,
      "end": 3285
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 3286
}