{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 328,
            "end": 329
          },
          "init": null,
          "start": 328,
          "end": 329
        }
      ],
      "start": 324,
      "end": 330
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "mycars",
            "start": 335,
            "end": 341
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Array",
              "start": 348,
              "end": 353
            },
            "arguments": [],
            "start": 344,
            "end": 355
          },
          "start": 335,
          "end": 355
        }
      ],
      "start": 331,
      "end": 356
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "mycars",
            "start": 357,
            "end": 363
          },
          "property": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 364,
            "end": 365
          },
          "optional": false,
          "computed": true,
          "start": 357,
          "end": 366
        },
        "right": {
          "type": "Literal",
          "value": "Saab",
          "raw": "\"Saab\"",
          "start": 369,
          "end": 375
        },
        "start": 357,
        "end": 375
      },
      "start": 357,
      "end": 376
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "mycars",
            "start": 377,
            "end": 383
          },
          "property": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 384,
            "end": 385
          },
          "optional": false,
          "computed": true,
          "start": 377,
          "end": 386
        },
        "right": {
          "type": "Literal",
          "value": "Volvo",
          "raw": "\"Volvo\"",
          "start": 389,
          "end": 396
        },
        "start": 377,
        "end": 396
      },
      "start": 377,
      "end": 397
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "mycars",
            "start": 398,
            "end": 404
          },
          "property": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 405,
            "end": 406
          },
          "optional": false,
          "computed": true,
          "start": 398,
          "end": 407
        },
        "right": {
          "type": "Literal",
          "value": "BMW",
          "raw": "\"BMW\"",
          "start": 410,
          "end": 415
        },
        "start": 398,
        "end": 415
      },
      "start": 398,
      "end": 416
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForInStatement",
            "left": {
              "type": "Identifier",
              "name": "x",
              "start": 441,
              "end": 442
            },
            "right": {
              "type": "Identifier",
              "name": "mycars",
              "start": 446,
              "end": 452
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "mycars",
                        "start": 463,
                        "end": 469
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 470,
                        "end": 471
                      },
                      "optional": false,
                      "computed": true,
                      "start": 463,
                      "end": 472
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "value": "BMW",
                      "raw": "\"BMW\"",
                      "start": 475,
                      "end": 480
                    },
                    "start": 463,
                    "end": 480
                  },
                  "consequent": {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Literal",
                      "value": "ex",
                      "raw": "\"ex\"",
                      "start": 488,
                      "end": 492
                    },
                    "start": 482,
                    "end": 493
                  },
                  "alternate": null,
                  "start": 459,
                  "end": 493
                }
              ],
              "start": 453,
              "end": 497
            },
            "start": 436,
            "end": 497
          }
        ],
        "start": 432,
        "end": 499
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 506,
          "end": 507
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 515,
                  "end": 516
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": "ex",
                  "raw": "\"ex\"",
                  "start": 519,
                  "end": 523
                },
                "start": 515,
                "end": 523
              },
              "consequent": {
                "type": "ThrowStatement",
                "argument": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Test262Error",
                    "start": 534,
                    "end": 546
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": "#1: Exception ===\"ex\". Actual:  Exception ===",
                        "raw": "'#1: Exception ===\"ex\". Actual:  Exception ==='",
                        "start": 547,
                        "end": 594
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 596,
                        "end": 597
                      },
                      "start": 547,
                      "end": 597
                    }
                  ],
                  "start": 530,
                  "end": 600
                },
                "start": 524,
                "end": 601
              },
              "alternate": null,
              "start": 512,
              "end": 601
            }
          ],
          "start": 508,
          "end": 603
        },
        "start": 500,
        "end": 603
      },
      "finalizer": null,
      "start": 429,
      "end": 603
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 604
}