{
  "type": "Program",
  "start": 0,
  "end": 1594,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1288,
      "end": 1306,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1292,
          "end": 1305,
          "id": {
            "type": "Identifier",
            "start": 1292,
            "end": 1301,
            "name": "iterCount"
          },
          "init": {
            "type": "Literal",
            "start": 1304,
            "end": 1305,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "start": 1307,
      "end": 1446,
      "id": {
        "type": "Identifier",
        "start": 1324,
        "end": 1326,
        "name": "fn"
      },
      "generator": true,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 1329,
        "end": 1446,
        "body": [
          {
            "type": "ForOfStatement",
            "start": 1333,
            "end": 1444,
            "await": true,
            "left": {
              "type": "ArrayPattern",
              "start": 1344,
              "end": 1363,
              "elements": [
                {
                  "type": "RestElement",
                  "start": 1346,
                  "end": 1361,
                  "argument": {
                    "type": "Identifier",
                    "start": 1349,
                    "end": 1361,
                    "name": "unresolvable"
                  }
                }
              ]
            },
            "right": {
              "type": "ArrayExpression",
              "start": 1367,
              "end": 1371,
              "elements": [
                {
                  "type": "ArrayExpression",
                  "start": 1368,
                  "end": 1370,
                  "elements": []
                }
              ]
            },
            "body": {
              "type": "BlockStatement",
              "start": 1373,
              "end": 1444,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1379,
                  "end": 1420,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1379,
                    "end": 1419,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1379,
                      "end": 1395,
                      "object": {
                        "type": "Identifier",
                        "start": 1379,
                        "end": 1385,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1386,
                        "end": 1395,
                        "name": "sameValue"
                      },
                      "optional": false,
                      "computed": false
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "start": 1396,
                        "end": 1415,
                        "object": {
                          "type": "Identifier",
                          "start": 1396,
                          "end": 1408,
                          "name": "unresolvable"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1409,
                          "end": 1415,
                          "name": "length"
                        },
                        "optional": false,
                        "computed": false
                      },
                      {
                        "type": "Literal",
                        "start": 1417,
                        "end": 1418,
                        "value": 0,
                        "raw": "0"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1425,
                  "end": 1440,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1425,
                    "end": 1439,
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "start": 1425,
                      "end": 1434,
                      "name": "iterCount"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 1438,
                      "end": 1439,
                      "value": 1,
                      "raw": "1"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "start": 1448,
      "end": 1474,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1452,
          "end": 1473,
          "id": {
            "type": "Identifier",
            "start": 1452,
            "end": 1459,
            "name": "promise"
          },
          "init": {
            "type": "CallExpression",
            "start": 1462,
            "end": 1473,
            "callee": {
              "type": "MemberExpression",
              "start": 1462,
              "end": 1471,
              "object": {
                "type": "CallExpression",
                "start": 1462,
                "end": 1466,
                "callee": {
                  "type": "Identifier",
                  "start": 1462,
                  "end": 1464,
                  "name": "fn"
                },
                "arguments": [],
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 1467,
                "end": 1471,
                "name": "next"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1476,
      "end": 1593,
      "expression": {
        "type": "CallExpression",
        "start": 1476,
        "end": 1592,
        "callee": {
          "type": "MemberExpression",
          "start": 1476,
          "end": 1578,
          "object": {
            "type": "CallExpression",
            "start": 1476,
            "end": 1570,
            "callee": {
              "type": "MemberExpression",
              "start": 1476,
              "end": 1491,
              "object": {
                "type": "Identifier",
                "start": 1476,
                "end": 1483,
                "name": "promise"
              },
              "property": {
                "type": "Identifier",
                "start": 1487,
                "end": 1491,
                "name": "then"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "start": 1492,
                "end": 1562,
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "CallExpression",
                  "start": 1498,
                  "end": 1562,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1498,
                    "end": 1514,
                    "object": {
                      "type": "Identifier",
                      "start": 1498,
                      "end": 1504,
                      "name": "assert"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1505,
                      "end": 1514,
                      "name": "sameValue"
                    },
                    "optional": false,
                    "computed": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1515,
                      "end": 1524,
                      "name": "iterCount"
                    },
                    {
                      "type": "Literal",
                      "start": 1526,
                      "end": 1527,
                      "value": 1,
                      "raw": "1"
                    },
                    {
                      "type": "Literal",
                      "start": 1529,
                      "end": 1561,
                      "value": "iteration occurred as expected",
                      "raw": "'iteration occurred as expected'"
                    }
                  ],
                  "optional": false
                },
                "id": null,
                "generator": false
              },
              {
                "type": "Identifier",
                "start": 1564,
                "end": 1569,
                "name": "$DONE"
              }
            ],
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 1574,
            "end": 1578,
            "name": "then"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1579,
            "end": 1584,
            "name": "$DONE"
          },
          {
            "type": "Identifier",
            "start": 1586,
            "end": 1591,
            "name": "$DONE"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}