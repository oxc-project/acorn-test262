{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 1343,
            "end": 1344
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 1347,
            "end": 1351
          },
          "start": 1343,
          "end": 1351
        }
      ],
      "start": 1339,
      "end": 1352
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterCount",
            "start": 1358,
            "end": 1367
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1370,
            "end": 1371
          },
          "start": 1358,
          "end": 1371
        }
      ],
      "start": 1354,
      "end": 1372
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "fn",
        "start": 1388,
        "end": 1390
      },
      "generator": false,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForOfStatement",
            "await": true,
            "left": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "RestElement",
                  "argument": {
                    "type": "ArrayPattern",
                    "elements": [
                      {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1413,
                        "end": 1414
                      }
                    ],
                    "start": 1412,
                    "end": 1415
                  },
                  "start": 1409,
                  "end": 1415
                }
              ],
              "start": 1408,
              "end": 1416
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "ArrayExpression",
                  "elements": [
                    null
                  ],
                  "start": 1421,
                  "end": 1426
                }
              ],
              "start": 1420,
              "end": 1427
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "assert",
                        "start": 1435,
                        "end": 1441
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "sameValue",
                        "start": 1442,
                        "end": 1451
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1435,
                      "end": 1451
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1452,
                        "end": 1453
                      },
                      {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 1455,
                        "end": 1464
                      }
                    ],
                    "optional": false,
                    "start": 1435,
                    "end": 1465
                  },
                  "start": 1435,
                  "end": 1466
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "name": "iterCount",
                      "start": 1472,
                      "end": 1481
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1485,
                      "end": 1486
                    },
                    "start": 1472,
                    "end": 1486
                  },
                  "start": 1472,
                  "end": 1487
                }
              ],
              "start": 1429,
              "end": 1491
            },
            "start": 1397,
            "end": 1491
          }
        ],
        "start": 1393,
        "end": 1493
      },
      "expression": false,
      "start": 1373,
      "end": 1493
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "promise",
            "start": 1499,
            "end": 1506
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "fn",
              "start": 1509,
              "end": 1511
            },
            "arguments": [],
            "optional": false,
            "start": 1509,
            "end": 1513
          },
          "start": 1499,
          "end": 1513
        }
      ],
      "start": 1495,
      "end": 1514
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "promise",
                "start": 1516,
                "end": 1523
              },
              "property": {
                "type": "Identifier",
                "name": "then",
                "start": 1527,
                "end": 1531
              },
              "optional": false,
              "computed": false,
              "start": 1516,
              "end": 1531
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "assert",
                      "start": 1538,
                      "end": 1544
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "sameValue",
                      "start": 1545,
                      "end": 1554
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1538,
                    "end": 1554
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "iterCount",
                      "start": 1555,
                      "end": 1564
                    },
                    {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1566,
                      "end": 1567
                    },
                    {
                      "type": "Literal",
                      "value": "iteration occurred as expected",
                      "raw": "'iteration occurred as expected'",
                      "start": 1569,
                      "end": 1601
                    }
                  ],
                  "optional": false,
                  "start": 1538,
                  "end": 1602
                },
                "id": null,
                "generator": false,
                "start": 1532,
                "end": 1602
              },
              {
                "type": "Identifier",
                "name": "$DONE",
                "start": 1604,
                "end": 1609
              }
            ],
            "optional": false,
            "start": 1516,
            "end": 1610
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1614,
            "end": 1618
          },
          "optional": false,
          "computed": false,
          "start": 1516,
          "end": 1618
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1619,
            "end": 1624
          },
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1626,
            "end": 1631
          }
        ],
        "optional": false,
        "start": 1516,
        "end": 1632
      },
      "start": 1516,
      "end": 1633
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1634
}