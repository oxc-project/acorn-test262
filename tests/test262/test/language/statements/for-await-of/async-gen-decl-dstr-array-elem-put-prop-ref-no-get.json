{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 1239,
            "end": 1240
          },
          "init": null,
          "start": 1239,
          "end": 1240
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "setValue",
            "start": 1242,
            "end": 1250
          },
          "init": null,
          "start": 1242,
          "end": 1250
        }
      ],
      "start": 1235,
      "end": 1251
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 1252,
          "end": 1253
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "kind": "get",
              "key": {
                "type": "Identifier",
                "name": "y",
                "start": 1264,
                "end": 1265
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Test262Error",
                          "start": 1284,
                          "end": 1296
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "The property should not be accessed.",
                            "raw": "'The property should not be accessed.'",
                            "start": 1297,
                            "end": 1335
                          }
                        ],
                        "start": 1280,
                        "end": 1336
                      },
                      "start": 1274,
                      "end": 1337
                    }
                  ],
                  "start": 1268,
                  "end": 1341
                },
                "expression": false,
                "start": 1265,
                "end": 1341
              },
              "method": false,
              "shorthand": false,
              "computed": false,
              "start": 1260,
              "end": 1341
            },
            {
              "type": "Property",
              "kind": "set",
              "key": {
                "type": "Identifier",
                "name": "y",
                "start": 1349,
                "end": 1350
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "val",
                    "start": 1351,
                    "end": 1354
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "setValue",
                          "start": 1362,
                          "end": 1370
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "val",
                          "start": 1373,
                          "end": 1376
                        },
                        "start": 1362,
                        "end": 1376
                      },
                      "start": 1362,
                      "end": 1377
                    }
                  ],
                  "start": 1356,
                  "end": 1381
                },
                "expression": false,
                "start": 1350,
                "end": 1381
              },
              "method": false,
              "shorthand": false,
              "computed": false,
              "start": 1345,
              "end": 1381
            }
          ],
          "start": 1256,
          "end": 1383
        },
        "start": 1252,
        "end": 1383
      },
      "start": 1252,
      "end": 1384
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterCount",
            "start": 1390,
            "end": 1399
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1402,
            "end": 1403
          },
          "start": 1390,
          "end": 1403
        }
      ],
      "start": 1386,
      "end": 1404
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "fn",
        "start": 1422,
        "end": 1424
      },
      "generator": true,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForOfStatement",
            "await": true,
            "left": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "x",
                    "start": 1443,
                    "end": 1444
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "y",
                    "start": 1445,
                    "end": 1446
                  },
                  "optional": false,
                  "computed": false,
                  "start": 1443,
                  "end": 1446
                }
              ],
              "start": 1442,
              "end": 1447
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "ArrayExpression",
                  "elements": [
                    {
                      "type": "Literal",
                      "value": 23,
                      "raw": "23",
                      "start": 1453,
                      "end": 1455
                    }
                  ],
                  "start": 1452,
                  "end": 1456
                }
              ],
              "start": 1451,
              "end": 1457
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "assert",
                        "start": 1465,
                        "end": 1471
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "sameValue",
                        "start": 1472,
                        "end": 1481
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1465,
                      "end": 1481
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "setValue",
                        "start": 1482,
                        "end": 1490
                      },
                      {
                        "type": "Literal",
                        "value": 23,
                        "raw": "23",
                        "start": 1492,
                        "end": 1494
                      }
                    ],
                    "optional": false,
                    "start": 1465,
                    "end": 1495
                  },
                  "start": 1465,
                  "end": 1496
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "name": "iterCount",
                      "start": 1503,
                      "end": 1512
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1516,
                      "end": 1517
                    },
                    "start": 1503,
                    "end": 1517
                  },
                  "start": 1503,
                  "end": 1518
                }
              ],
              "start": 1459,
              "end": 1522
            },
            "start": 1431,
            "end": 1522
          }
        ],
        "start": 1427,
        "end": 1524
      },
      "expression": false,
      "start": 1405,
      "end": 1524
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "promise",
            "start": 1530,
            "end": 1537
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "fn",
                  "start": 1540,
                  "end": 1542
                },
                "arguments": [],
                "optional": false,
                "start": 1540,
                "end": 1544
              },
              "property": {
                "type": "Identifier",
                "name": "next",
                "start": 1545,
                "end": 1549
              },
              "optional": false,
              "computed": false,
              "start": 1540,
              "end": 1549
            },
            "arguments": [],
            "optional": false,
            "start": 1540,
            "end": 1551
          },
          "start": 1530,
          "end": 1551
        }
      ],
      "start": 1526,
      "end": 1552
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "promise",
                "start": 1554,
                "end": 1561
              },
              "property": {
                "type": "Identifier",
                "name": "then",
                "start": 1565,
                "end": 1569
              },
              "optional": false,
              "computed": false,
              "start": 1554,
              "end": 1569
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "assert",
                      "start": 1576,
                      "end": 1582
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "sameValue",
                      "start": 1583,
                      "end": 1592
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1576,
                    "end": 1592
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "iterCount",
                      "start": 1593,
                      "end": 1602
                    },
                    {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1604,
                      "end": 1605
                    },
                    {
                      "type": "Literal",
                      "value": "iteration occurred as expected",
                      "raw": "'iteration occurred as expected'",
                      "start": 1607,
                      "end": 1639
                    }
                  ],
                  "optional": false,
                  "start": 1576,
                  "end": 1640
                },
                "id": null,
                "generator": false,
                "start": 1570,
                "end": 1640
              },
              {
                "type": "Identifier",
                "name": "$DONE",
                "start": 1642,
                "end": 1647
              }
            ],
            "optional": false,
            "start": 1554,
            "end": 1648
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1652,
            "end": 1656
          },
          "optional": false,
          "computed": false,
          "start": 1554,
          "end": 1656
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1657,
            "end": 1662
          },
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1664,
            "end": 1669
          }
        ],
        "optional": false,
        "start": 1554,
        "end": 1670
      },
      "start": 1554,
      "end": 1671
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1672
}