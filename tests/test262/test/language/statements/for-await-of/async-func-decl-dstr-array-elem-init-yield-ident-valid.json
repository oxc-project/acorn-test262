{
  "type": "Program",
  "start": 0,
  "end": 1591,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1294,
      "end": 1308,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1298,
          "end": 1307,
          "id": {
            "type": "Identifier",
            "start": 1298,
            "end": 1303,
            "name": "yield"
          },
          "init": {
            "type": "Literal",
            "start": 1306,
            "end": 1307,
            "value": 4,
            "raw": "4"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1309,
      "end": 1315,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1313,
          "end": 1314,
          "id": {
            "type": "Identifier",
            "start": 1313,
            "end": 1314,
            "name": "x"
          },
          "init": null
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 1317,
      "end": 1335,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1321,
          "end": 1334,
          "id": {
            "type": "Identifier",
            "start": 1321,
            "end": 1330,
            "name": "iterCount"
          },
          "init": {
            "type": "Literal",
            "start": 1333,
            "end": 1334,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "start": 1336,
      "end": 1450,
      "id": {
        "type": "Identifier",
        "start": 1351,
        "end": 1353,
        "name": "fn"
      },
      "generator": false,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 1356,
        "end": 1450,
        "body": [
          {
            "type": "ForOfStatement",
            "start": 1360,
            "end": 1448,
            "await": true,
            "left": {
              "type": "ArrayPattern",
              "start": 1371,
              "end": 1384,
              "elements": [
                {
                  "type": "AssignmentPattern",
                  "start": 1373,
                  "end": 1382,
                  "left": {
                    "type": "Identifier",
                    "start": 1373,
                    "end": 1374,
                    "name": "x"
                  },
                  "right": {
                    "type": "Identifier",
                    "start": 1377,
                    "end": 1382,
                    "name": "yield"
                  }
                }
              ]
            },
            "right": {
              "type": "ArrayExpression",
              "start": 1388,
              "end": 1392,
              "elements": [
                {
                  "type": "ArrayExpression",
                  "start": 1389,
                  "end": 1391,
                  "elements": []
                }
              ]
            },
            "body": {
              "type": "BlockStatement",
              "start": 1394,
              "end": 1448,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1400,
                  "end": 1423,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1400,
                    "end": 1422,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1400,
                      "end": 1416,
                      "object": {
                        "type": "Identifier",
                        "start": 1400,
                        "end": 1406,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1407,
                        "end": 1416,
                        "name": "sameValue"
                      },
                      "optional": false,
                      "computed": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1417,
                        "end": 1418,
                        "name": "x"
                      },
                      {
                        "type": "Literal",
                        "start": 1420,
                        "end": 1421,
                        "value": 4,
                        "raw": "4"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1429,
                  "end": 1444,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1429,
                    "end": 1443,
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "start": 1429,
                      "end": 1438,
                      "name": "iterCount"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 1442,
                      "end": 1443,
                      "value": 1,
                      "raw": "1"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "start": 1452,
      "end": 1471,
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1456,
          "end": 1470,
          "id": {
            "type": "Identifier",
            "start": 1456,
            "end": 1463,
            "name": "promise"
          },
          "init": {
            "type": "CallExpression",
            "start": 1466,
            "end": 1470,
            "callee": {
              "type": "Identifier",
              "start": 1466,
              "end": 1468,
              "name": "fn"
            },
            "arguments": [],
            "optional": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1473,
      "end": 1590,
      "expression": {
        "type": "CallExpression",
        "start": 1473,
        "end": 1589,
        "callee": {
          "type": "MemberExpression",
          "start": 1473,
          "end": 1575,
          "object": {
            "type": "CallExpression",
            "start": 1473,
            "end": 1567,
            "callee": {
              "type": "MemberExpression",
              "start": 1473,
              "end": 1488,
              "object": {
                "type": "Identifier",
                "start": 1473,
                "end": 1480,
                "name": "promise"
              },
              "property": {
                "type": "Identifier",
                "start": 1484,
                "end": 1488,
                "name": "then"
              },
              "optional": false,
              "computed": false
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "start": 1489,
                "end": 1559,
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "CallExpression",
                  "start": 1495,
                  "end": 1559,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1495,
                    "end": 1511,
                    "object": {
                      "type": "Identifier",
                      "start": 1495,
                      "end": 1501,
                      "name": "assert"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1502,
                      "end": 1511,
                      "name": "sameValue"
                    },
                    "optional": false,
                    "computed": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1512,
                      "end": 1521,
                      "name": "iterCount"
                    },
                    {
                      "type": "Literal",
                      "start": 1523,
                      "end": 1524,
                      "value": 1,
                      "raw": "1"
                    },
                    {
                      "type": "Literal",
                      "start": 1526,
                      "end": 1558,
                      "value": "iteration occurred as expected",
                      "raw": "'iteration occurred as expected'"
                    }
                  ],
                  "optional": false
                },
                "id": null,
                "generator": false
              },
              {
                "type": "Identifier",
                "start": 1561,
                "end": 1566,
                "name": "$DONE"
              }
            ],
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 1571,
            "end": 1575,
            "name": "then"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1576,
            "end": 1581,
            "name": "$DONE"
          },
          {
            "type": "Identifier",
            "start": 1583,
            "end": 1588,
            "name": "$DONE"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}