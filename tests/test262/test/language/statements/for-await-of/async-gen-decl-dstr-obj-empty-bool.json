{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterCount",
            "start": 1223,
            "end": 1232
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1235,
            "end": 1236
          },
          "start": 1223,
          "end": 1236
        }
      ],
      "start": 1219,
      "end": 1237
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "fn",
        "start": 1255,
        "end": 1257
      },
      "generator": true,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForOfStatement",
            "await": true,
            "left": {
              "type": "ObjectPattern",
              "properties": [],
              "start": 1275,
              "end": 1277
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 1282,
                  "end": 1287
                }
              ],
              "start": 1281,
              "end": 1288
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "name": "iterCount",
                      "start": 1301,
                      "end": 1310
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1314,
                      "end": 1315
                    },
                    "start": 1301,
                    "end": 1315
                  },
                  "start": 1301,
                  "end": 1316
                }
              ],
              "start": 1290,
              "end": 1320
            },
            "start": 1264,
            "end": 1320
          }
        ],
        "start": 1260,
        "end": 1322
      },
      "expression": false,
      "start": 1238,
      "end": 1322
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "promise",
            "start": 1328,
            "end": 1335
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "fn",
                  "start": 1338,
                  "end": 1340
                },
                "arguments": [],
                "optional": false,
                "start": 1338,
                "end": 1342
              },
              "property": {
                "type": "Identifier",
                "name": "next",
                "start": 1343,
                "end": 1347
              },
              "optional": false,
              "computed": false,
              "start": 1338,
              "end": 1347
            },
            "arguments": [],
            "optional": false,
            "start": 1338,
            "end": 1349
          },
          "start": 1328,
          "end": 1349
        }
      ],
      "start": 1324,
      "end": 1350
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "promise",
                "start": 1352,
                "end": 1359
              },
              "property": {
                "type": "Identifier",
                "name": "then",
                "start": 1363,
                "end": 1367
              },
              "optional": false,
              "computed": false,
              "start": 1352,
              "end": 1367
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "assert",
                      "start": 1374,
                      "end": 1380
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "sameValue",
                      "start": 1381,
                      "end": 1390
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1374,
                    "end": 1390
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "iterCount",
                      "start": 1391,
                      "end": 1400
                    },
                    {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1402,
                      "end": 1403
                    },
                    {
                      "type": "Literal",
                      "value": "iteration occurred as expected",
                      "raw": "'iteration occurred as expected'",
                      "start": 1405,
                      "end": 1437
                    }
                  ],
                  "optional": false,
                  "start": 1374,
                  "end": 1438
                },
                "id": null,
                "generator": false,
                "start": 1368,
                "end": 1438
              },
              {
                "type": "Identifier",
                "name": "$DONE",
                "start": 1440,
                "end": 1445
              }
            ],
            "optional": false,
            "start": 1352,
            "end": 1446
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1450,
            "end": 1454
          },
          "optional": false,
          "computed": false,
          "start": 1352,
          "end": 1454
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1455,
            "end": 1460
          },
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1462,
            "end": 1467
          }
        ],
        "optional": false,
        "start": 1352,
        "end": 1468
      },
      "start": 1352,
      "end": 1469
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1470
}