{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "c",
            "start": 1178,
            "end": 1179
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 1182,
            "end": 1186
          },
          "start": 1178,
          "end": 1186
        }
      ],
      "start": 1172,
      "end": 1187
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterCount",
            "start": 1193,
            "end": 1202
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1205,
            "end": 1206
          },
          "start": 1193,
          "end": 1206
        }
      ],
      "start": 1189,
      "end": 1207
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "fn",
        "start": 1225,
        "end": 1227
      },
      "generator": true,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForOfStatement",
            "await": true,
            "left": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "Identifier",
                  "name": "c",
                  "start": 1247,
                  "end": 1248
                }
              ],
              "start": 1245,
              "end": 1250
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "ArrayExpression",
                  "elements": [
                    {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1256,
                      "end": 1257
                    }
                  ],
                  "start": 1255,
                  "end": 1258
                }
              ],
              "start": 1254,
              "end": 1259
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "name": "iterCount",
                      "start": 1272,
                      "end": 1281
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1285,
                      "end": 1286
                    },
                    "start": 1272,
                    "end": 1286
                  },
                  "start": 1272,
                  "end": 1287
                }
              ],
              "start": 1261,
              "end": 1291
            },
            "start": 1234,
            "end": 1291
          }
        ],
        "start": 1230,
        "end": 1293
      },
      "expression": false,
      "start": 1208,
      "end": 1293
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "promise",
            "start": 1299,
            "end": 1306
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "fn",
                  "start": 1309,
                  "end": 1311
                },
                "arguments": [],
                "optional": false,
                "start": 1309,
                "end": 1313
              },
              "property": {
                "type": "Identifier",
                "name": "next",
                "start": 1314,
                "end": 1318
              },
              "optional": false,
              "computed": false,
              "start": 1309,
              "end": 1318
            },
            "arguments": [],
            "optional": false,
            "start": 1309,
            "end": 1320
          },
          "start": 1299,
          "end": 1320
        }
      ],
      "start": 1295,
      "end": 1321
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "promise",
                "start": 1323,
                "end": 1330
              },
              "property": {
                "type": "Identifier",
                "name": "then",
                "start": 1331,
                "end": 1335
              },
              "optional": false,
              "computed": false,
              "start": 1323,
              "end": 1335
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "$DONE",
                    "start": 1342,
                    "end": 1347
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "Promise incorrectly fulfilled.",
                      "raw": "'Promise incorrectly fulfilled.'",
                      "start": 1348,
                      "end": 1380
                    }
                  ],
                  "optional": false,
                  "start": 1342,
                  "end": 1381
                },
                "id": null,
                "generator": false,
                "start": 1336,
                "end": 1381
              },
              {
                "type": "ArrowFunctionExpression",
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "ObjectPattern",
                    "properties": [
                      {
                        "type": "Property",
                        "kind": "init",
                        "key": {
                          "type": "Identifier",
                          "name": "constructor",
                          "start": 1386,
                          "end": 1397
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "constructor",
                          "start": 1386,
                          "end": 1397
                        },
                        "method": false,
                        "shorthand": true,
                        "computed": false,
                        "start": 1386,
                        "end": 1397
                      }
                    ],
                    "start": 1384,
                    "end": 1399
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "assert",
                            "start": 1408,
                            "end": 1414
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sameValue",
                            "start": 1415,
                            "end": 1424
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1408,
                          "end": 1424
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "iterCount",
                            "start": 1425,
                            "end": 1434
                          },
                          {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0",
                            "start": 1436,
                            "end": 1437
                          }
                        ],
                        "optional": false,
                        "start": 1408,
                        "end": 1438
                      },
                      "start": 1408,
                      "end": 1439
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "assert",
                            "start": 1442,
                            "end": 1448
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sameValue",
                            "start": 1449,
                            "end": 1458
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1442,
                          "end": 1458
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "constructor",
                            "start": 1459,
                            "end": 1470
                          },
                          {
                            "type": "Identifier",
                            "name": "TypeError",
                            "start": 1472,
                            "end": 1481
                          }
                        ],
                        "optional": false,
                        "start": 1442,
                        "end": 1482
                      },
                      "start": 1442,
                      "end": 1483
                    }
                  ],
                  "start": 1404,
                  "end": 1485
                },
                "id": null,
                "generator": false,
                "start": 1383,
                "end": 1485
              }
            ],
            "optional": false,
            "start": 1323,
            "end": 1486
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1487,
            "end": 1491
          },
          "optional": false,
          "computed": false,
          "start": 1323,
          "end": 1491
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1492,
            "end": 1497
          },
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1499,
            "end": 1504
          }
        ],
        "optional": false,
        "start": 1323,
        "end": 1505
      },
      "start": 1323,
      "end": 1506
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1507
}