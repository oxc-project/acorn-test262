{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 1352,
            "end": 1353
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 1356,
            "end": 1360
          },
          "start": 1352,
          "end": 1360
        }
      ],
      "start": 1348,
      "end": 1361
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterCount",
            "start": 1367,
            "end": 1376
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1379,
            "end": 1380
          },
          "start": 1367,
          "end": 1380
        }
      ],
      "start": 1363,
      "end": 1381
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "fn",
        "start": 1397,
        "end": 1399
      },
      "generator": false,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForOfStatement",
            "await": true,
            "left": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "RestElement",
                  "argument": {
                    "type": "ArrayPattern",
                    "elements": [
                      {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1422,
                        "end": 1423
                      }
                    ],
                    "start": 1421,
                    "end": 1424
                  },
                  "start": 1418,
                  "end": 1424
                }
              ],
              "start": 1417,
              "end": 1425
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "ArrayExpression",
                  "elements": [
                    {
                      "type": "Identifier",
                      "name": "undefined",
                      "start": 1431,
                      "end": 1440
                    }
                  ],
                  "start": 1430,
                  "end": 1441
                }
              ],
              "start": 1429,
              "end": 1442
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "assert",
                        "start": 1450,
                        "end": 1456
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "sameValue",
                        "start": 1457,
                        "end": 1466
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1450,
                      "end": 1466
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1467,
                        "end": 1468
                      },
                      {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 1470,
                        "end": 1479
                      }
                    ],
                    "optional": false,
                    "start": 1450,
                    "end": 1480
                  },
                  "start": 1450,
                  "end": 1481
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "name": "iterCount",
                      "start": 1488,
                      "end": 1497
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1501,
                      "end": 1502
                    },
                    "start": 1488,
                    "end": 1502
                  },
                  "start": 1488,
                  "end": 1503
                }
              ],
              "start": 1444,
              "end": 1507
            },
            "start": 1406,
            "end": 1507
          }
        ],
        "start": 1402,
        "end": 1509
      },
      "expression": false,
      "start": 1382,
      "end": 1509
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "promise",
            "start": 1515,
            "end": 1522
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "fn",
              "start": 1525,
              "end": 1527
            },
            "arguments": [],
            "optional": false,
            "start": 1525,
            "end": 1529
          },
          "start": 1515,
          "end": 1529
        }
      ],
      "start": 1511,
      "end": 1530
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "promise",
                "start": 1532,
                "end": 1539
              },
              "property": {
                "type": "Identifier",
                "name": "then",
                "start": 1543,
                "end": 1547
              },
              "optional": false,
              "computed": false,
              "start": 1532,
              "end": 1547
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "assert",
                      "start": 1554,
                      "end": 1560
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "sameValue",
                      "start": 1561,
                      "end": 1570
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1554,
                    "end": 1570
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "iterCount",
                      "start": 1571,
                      "end": 1580
                    },
                    {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1582,
                      "end": 1583
                    },
                    {
                      "type": "Literal",
                      "value": "iteration occurred as expected",
                      "raw": "'iteration occurred as expected'",
                      "start": 1585,
                      "end": 1617
                    }
                  ],
                  "optional": false,
                  "start": 1554,
                  "end": 1618
                },
                "id": null,
                "generator": false,
                "start": 1548,
                "end": 1618
              },
              {
                "type": "Identifier",
                "name": "$DONE",
                "start": 1620,
                "end": 1625
              }
            ],
            "optional": false,
            "start": 1532,
            "end": 1626
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1630,
            "end": 1634
          },
          "optional": false,
          "computed": false,
          "start": 1532,
          "end": 1634
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1635,
            "end": 1640
          },
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1642,
            "end": 1647
          }
        ],
        "optional": false,
        "start": 1532,
        "end": 1648
      },
      "start": 1532,
      "end": 1649
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1650
}