{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 1303,
            "end": 1304
          },
          "init": {
            "type": "Literal",
            "value": null,
            "raw": "null",
            "start": 1307,
            "end": 1311
          },
          "start": 1303,
          "end": 1311
        }
      ],
      "start": 1299,
      "end": 1312
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterCount",
            "start": 1318,
            "end": 1327
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1330,
            "end": 1331
          },
          "start": 1318,
          "end": 1331
        }
      ],
      "start": 1314,
      "end": 1332
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "fn",
        "start": 1348,
        "end": 1350
      },
      "generator": false,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForOfStatement",
            "await": true,
            "left": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "RestElement",
                  "argument": {
                    "type": "ArrayPattern",
                    "elements": [
                      {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1373,
                        "end": 1374
                      }
                    ],
                    "start": 1372,
                    "end": 1375
                  },
                  "start": 1369,
                  "end": 1375
                }
              ],
              "start": 1368,
              "end": 1376
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "ArrayExpression",
                  "elements": [],
                  "start": 1381,
                  "end": 1383
                }
              ],
              "start": 1380,
              "end": 1384
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "assert",
                        "start": 1392,
                        "end": 1398
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "sameValue",
                        "start": 1399,
                        "end": 1408
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1392,
                      "end": 1408
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "x",
                        "start": 1409,
                        "end": 1410
                      },
                      {
                        "type": "Identifier",
                        "name": "undefined",
                        "start": 1412,
                        "end": 1421
                      }
                    ],
                    "optional": false,
                    "start": 1392,
                    "end": 1422
                  },
                  "start": 1392,
                  "end": 1423
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "name": "iterCount",
                      "start": 1430,
                      "end": 1439
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1443,
                      "end": 1444
                    },
                    "start": 1430,
                    "end": 1444
                  },
                  "start": 1430,
                  "end": 1445
                }
              ],
              "start": 1386,
              "end": 1449
            },
            "start": 1357,
            "end": 1449
          }
        ],
        "start": 1353,
        "end": 1451
      },
      "expression": false,
      "start": 1333,
      "end": 1451
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "promise",
            "start": 1457,
            "end": 1464
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "fn",
              "start": 1467,
              "end": 1469
            },
            "arguments": [],
            "optional": false,
            "start": 1467,
            "end": 1471
          },
          "start": 1457,
          "end": 1471
        }
      ],
      "start": 1453,
      "end": 1472
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "promise",
                "start": 1474,
                "end": 1481
              },
              "property": {
                "type": "Identifier",
                "name": "then",
                "start": 1485,
                "end": 1489
              },
              "optional": false,
              "computed": false,
              "start": 1474,
              "end": 1489
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "assert",
                      "start": 1496,
                      "end": 1502
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "sameValue",
                      "start": 1503,
                      "end": 1512
                    },
                    "optional": false,
                    "computed": false,
                    "start": 1496,
                    "end": 1512
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "iterCount",
                      "start": 1513,
                      "end": 1522
                    },
                    {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1524,
                      "end": 1525
                    },
                    {
                      "type": "Literal",
                      "value": "iteration occurred as expected",
                      "raw": "'iteration occurred as expected'",
                      "start": 1527,
                      "end": 1559
                    }
                  ],
                  "optional": false,
                  "start": 1496,
                  "end": 1560
                },
                "id": null,
                "generator": false,
                "start": 1490,
                "end": 1560
              },
              {
                "type": "Identifier",
                "name": "$DONE",
                "start": 1562,
                "end": 1567
              }
            ],
            "optional": false,
            "start": 1474,
            "end": 1568
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1572,
            "end": 1576
          },
          "optional": false,
          "computed": false,
          "start": 1474,
          "end": 1576
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1577,
            "end": 1582
          },
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1584,
            "end": 1589
          }
        ],
        "optional": false,
        "start": 1474,
        "end": 1590
      },
      "start": 1474,
      "end": 1591
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1592
}