{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "_",
            "start": 1239,
            "end": 1240
          },
          "init": null,
          "start": 1239,
          "end": 1240
        }
      ],
      "start": 1235,
      "end": 1241
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "iterCount",
            "start": 1247,
            "end": 1256
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 1259,
            "end": 1260
          },
          "start": 1247,
          "end": 1260
        }
      ],
      "start": 1243,
      "end": 1261
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "fn",
        "start": 1279,
        "end": 1281
      },
      "generator": true,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForOfStatement",
            "await": true,
            "left": {
              "type": "ArrayPattern",
              "elements": [
                {
                  "type": "ArrayPattern",
                  "elements": [
                    {
                      "type": "Identifier",
                      "name": "x",
                      "start": 1302,
                      "end": 1303
                    }
                  ],
                  "start": 1300,
                  "end": 1305
                }
              ],
              "start": 1299,
              "end": 1306
            },
            "right": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "ArrayExpression",
                  "elements": [],
                  "start": 1311,
                  "end": 1313
                }
              ],
              "start": 1310,
              "end": 1314
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "name": "iterCount",
                      "start": 1327,
                      "end": 1336
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 1340,
                      "end": 1341
                    },
                    "start": 1327,
                    "end": 1341
                  },
                  "start": 1327,
                  "end": 1342
                }
              ],
              "start": 1316,
              "end": 1346
            },
            "start": 1288,
            "end": 1346
          }
        ],
        "start": 1284,
        "end": 1348
      },
      "expression": false,
      "start": 1262,
      "end": 1348
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "promise",
            "start": 1354,
            "end": 1361
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "fn",
                  "start": 1364,
                  "end": 1366
                },
                "arguments": [],
                "optional": false,
                "start": 1364,
                "end": 1368
              },
              "property": {
                "type": "Identifier",
                "name": "next",
                "start": 1369,
                "end": 1373
              },
              "optional": false,
              "computed": false,
              "start": 1364,
              "end": 1373
            },
            "arguments": [],
            "optional": false,
            "start": 1364,
            "end": 1375
          },
          "start": 1354,
          "end": 1375
        }
      ],
      "start": 1350,
      "end": 1376
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "promise",
                "start": 1378,
                "end": 1385
              },
              "property": {
                "type": "Identifier",
                "name": "then",
                "start": 1386,
                "end": 1390
              },
              "optional": false,
              "computed": false,
              "start": 1378,
              "end": 1390
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "expression": true,
                "async": false,
                "params": [],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "$DONE",
                    "start": 1397,
                    "end": 1402
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "Promise incorrectly fulfilled.",
                      "raw": "'Promise incorrectly fulfilled.'",
                      "start": 1403,
                      "end": 1435
                    }
                  ],
                  "optional": false,
                  "start": 1397,
                  "end": 1436
                },
                "id": null,
                "generator": false,
                "start": 1391,
                "end": 1436
              },
              {
                "type": "ArrowFunctionExpression",
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "ObjectPattern",
                    "properties": [
                      {
                        "type": "Property",
                        "kind": "init",
                        "key": {
                          "type": "Identifier",
                          "name": "constructor",
                          "start": 1441,
                          "end": 1452
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "constructor",
                          "start": 1441,
                          "end": 1452
                        },
                        "method": false,
                        "shorthand": true,
                        "computed": false,
                        "start": 1441,
                        "end": 1452
                      }
                    ],
                    "start": 1439,
                    "end": 1454
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "assert",
                            "start": 1463,
                            "end": 1469
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sameValue",
                            "start": 1470,
                            "end": 1479
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1463,
                          "end": 1479
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "iterCount",
                            "start": 1480,
                            "end": 1489
                          },
                          {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0",
                            "start": 1491,
                            "end": 1492
                          }
                        ],
                        "optional": false,
                        "start": 1463,
                        "end": 1493
                      },
                      "start": 1463,
                      "end": 1494
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "assert",
                            "start": 1497,
                            "end": 1503
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sameValue",
                            "start": 1504,
                            "end": 1513
                          },
                          "optional": false,
                          "computed": false,
                          "start": 1497,
                          "end": 1513
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "constructor",
                            "start": 1514,
                            "end": 1525
                          },
                          {
                            "type": "Identifier",
                            "name": "TypeError",
                            "start": 1527,
                            "end": 1536
                          }
                        ],
                        "optional": false,
                        "start": 1497,
                        "end": 1537
                      },
                      "start": 1497,
                      "end": 1538
                    }
                  ],
                  "start": 1459,
                  "end": 1540
                },
                "id": null,
                "generator": false,
                "start": 1438,
                "end": 1540
              }
            ],
            "optional": false,
            "start": 1378,
            "end": 1541
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 1542,
            "end": 1546
          },
          "optional": false,
          "computed": false,
          "start": 1378,
          "end": 1546
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1547,
            "end": 1552
          },
          {
            "type": "Identifier",
            "name": "$DONE",
            "start": 1554,
            "end": 1559
          }
        ],
        "optional": false,
        "start": 1378,
        "end": 1560
      },
      "start": 1378,
      "end": 1561
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1563
}