{
  "type": "Program",
  "start": 0,
  "end": 1220,
  "body": [
    {
      "type": "LabeledStatement",
      "start": 381,
      "end": 457,
      "label": {
        "type": "Identifier",
        "start": 381,
        "end": 385,
        "name": "FOR1"
      },
      "body": {
        "type": "ForStatement",
        "start": 388,
        "end": 457,
        "init": {
          "type": "VariableDeclaration",
          "start": 392,
          "end": 399,
          "kind": "var",
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 396,
              "end": 399,
              "id": {
                "type": "Identifier",
                "start": 396,
                "end": 397,
                "name": "i"
              },
              "init": {
                "type": "Literal",
                "start": 398,
                "end": 399,
                "value": 1,
                "raw": "1"
              }
            }
          ]
        },
        "test": {
          "type": "BinaryExpression",
          "start": 400,
          "end": 403,
          "left": {
            "type": "Identifier",
            "start": 400,
            "end": 401,
            "name": "i"
          },
          "operator": "<",
          "right": {
            "type": "Literal",
            "start": 402,
            "end": 403,
            "value": 2,
            "raw": "2"
          }
        },
        "update": {
          "type": "UpdateExpression",
          "start": 404,
          "end": 407,
          "operator": "++",
          "prefix": false,
          "argument": {
            "type": "Identifier",
            "start": 404,
            "end": 405,
            "name": "i"
          }
        },
        "body": {
          "type": "BlockStatement",
          "start": 408,
          "end": 457,
          "body": [
            {
              "type": "LabeledStatement",
              "start": 412,
              "end": 455,
              "label": {
                "type": "Identifier",
                "start": 412,
                "end": 418,
                "name": "LABEL1"
              },
              "body": {
                "type": "DoWhileStatement",
                "start": 421,
                "end": 455,
                "body": {
                  "type": "BlockStatement",
                  "start": 424,
                  "end": 445,
                  "body": [
                    {
                      "type": "BreakStatement",
                      "start": 430,
                      "end": 435,
                      "label": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 436,
                      "end": 441,
                      "expression": {
                        "type": "Identifier",
                        "start": 436,
                        "end": 440,
                        "name": "FOR1"
                      }
                    }
                  ]
                },
                "test": {
                  "type": "Literal",
                  "start": 452,
                  "end": 453,
                  "value": 0,
                  "raw": "0"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 459,
      "end": 589,
      "expression": {
        "type": "CallExpression",
        "start": 459,
        "end": 588,
        "callee": {
          "type": "MemberExpression",
          "start": 459,
          "end": 475,
          "object": {
            "type": "Identifier",
            "start": 459,
            "end": 465,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 466,
            "end": 475,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 476,
            "end": 477,
            "name": "i"
          },
          {
            "type": "Literal",
            "start": 479,
            "end": 480,
            "value": 2,
            "raw": "2"
          },
          {
            "type": "Literal",
            "start": 482,
            "end": 587,
            "value": "#1: Since LineTerminator(U-000A) between break and Identifier not allowed break evaluates without label",
            "raw": "'#1: Since LineTerminator(U-000A) between break and Identifier not allowed break evaluates without label'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "LabeledStatement",
      "start": 591,
      "end": 667,
      "label": {
        "type": "Identifier",
        "start": 591,
        "end": 595,
        "name": "FOR2"
      },
      "body": {
        "type": "ForStatement",
        "start": 598,
        "end": 667,
        "init": {
          "type": "VariableDeclaration",
          "start": 602,
          "end": 609,
          "kind": "var",
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 606,
              "end": 609,
              "id": {
                "type": "Identifier",
                "start": 606,
                "end": 607,
                "name": "i"
              },
              "init": {
                "type": "Literal",
                "start": 608,
                "end": 609,
                "value": 1,
                "raw": "1"
              }
            }
          ]
        },
        "test": {
          "type": "BinaryExpression",
          "start": 610,
          "end": 613,
          "left": {
            "type": "Identifier",
            "start": 610,
            "end": 611,
            "name": "i"
          },
          "operator": "<",
          "right": {
            "type": "Literal",
            "start": 612,
            "end": 613,
            "value": 2,
            "raw": "2"
          }
        },
        "update": {
          "type": "UpdateExpression",
          "start": 614,
          "end": 617,
          "operator": "++",
          "prefix": false,
          "argument": {
            "type": "Identifier",
            "start": 614,
            "end": 615,
            "name": "i"
          }
        },
        "body": {
          "type": "BlockStatement",
          "start": 618,
          "end": 667,
          "body": [
            {
              "type": "LabeledStatement",
              "start": 622,
              "end": 665,
              "label": {
                "type": "Identifier",
                "start": 622,
                "end": 628,
                "name": "LABEL2"
              },
              "body": {
                "type": "DoWhileStatement",
                "start": 631,
                "end": 665,
                "body": {
                  "type": "BlockStatement",
                  "start": 634,
                  "end": 655,
                  "body": [
                    {
                      "type": "BreakStatement",
                      "start": 640,
                      "end": 645,
                      "label": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 646,
                      "end": 651,
                      "expression": {
                        "type": "Identifier",
                        "start": 646,
                        "end": 650,
                        "name": "FOR2"
                      }
                    }
                  ]
                },
                "test": {
                  "type": "Literal",
                  "start": 662,
                  "end": 663,
                  "value": 0,
                  "raw": "0"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 669,
      "end": 799,
      "expression": {
        "type": "CallExpression",
        "start": 669,
        "end": 798,
        "callee": {
          "type": "MemberExpression",
          "start": 669,
          "end": 685,
          "object": {
            "type": "Identifier",
            "start": 669,
            "end": 675,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 676,
            "end": 685,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 686,
            "end": 687,
            "name": "i"
          },
          {
            "type": "Literal",
            "start": 689,
            "end": 690,
            "value": 2,
            "raw": "2"
          },
          {
            "type": "Literal",
            "start": 692,
            "end": 797,
            "value": "#2: Since LineTerminator(U-000D) between break and Identifier not allowed break evaluates without label",
            "raw": "'#2: Since LineTerminator(U-000D) between break and Identifier not allowed break evaluates without label'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "LabeledStatement",
      "start": 801,
      "end": 877,
      "label": {
        "type": "Identifier",
        "start": 801,
        "end": 805,
        "name": "FOR3"
      },
      "body": {
        "type": "ForStatement",
        "start": 808,
        "end": 877,
        "init": {
          "type": "VariableDeclaration",
          "start": 812,
          "end": 819,
          "kind": "var",
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 816,
              "end": 819,
              "id": {
                "type": "Identifier",
                "start": 816,
                "end": 817,
                "name": "i"
              },
              "init": {
                "type": "Literal",
                "start": 818,
                "end": 819,
                "value": 1,
                "raw": "1"
              }
            }
          ]
        },
        "test": {
          "type": "BinaryExpression",
          "start": 820,
          "end": 823,
          "left": {
            "type": "Identifier",
            "start": 820,
            "end": 821,
            "name": "i"
          },
          "operator": "<",
          "right": {
            "type": "Literal",
            "start": 822,
            "end": 823,
            "value": 2,
            "raw": "2"
          }
        },
        "update": {
          "type": "UpdateExpression",
          "start": 824,
          "end": 827,
          "operator": "++",
          "prefix": false,
          "argument": {
            "type": "Identifier",
            "start": 824,
            "end": 825,
            "name": "i"
          }
        },
        "body": {
          "type": "BlockStatement",
          "start": 828,
          "end": 877,
          "body": [
            {
              "type": "LabeledStatement",
              "start": 832,
              "end": 875,
              "label": {
                "type": "Identifier",
                "start": 832,
                "end": 838,
                "name": "LABEL3"
              },
              "body": {
                "type": "DoWhileStatement",
                "start": 841,
                "end": 875,
                "body": {
                  "type": "BlockStatement",
                  "start": 844,
                  "end": 865,
                  "body": [
                    {
                      "type": "BreakStatement",
                      "start": 850,
                      "end": 855,
                      "label": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 856,
                      "end": 861,
                      "expression": {
                        "type": "Identifier",
                        "start": 856,
                        "end": 860,
                        "name": "FOR3"
                      }
                    }
                  ]
                },
                "test": {
                  "type": "Literal",
                  "start": 872,
                  "end": 873,
                  "value": 0,
                  "raw": "0"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 879,
      "end": 1009,
      "expression": {
        "type": "CallExpression",
        "start": 879,
        "end": 1008,
        "callee": {
          "type": "MemberExpression",
          "start": 879,
          "end": 895,
          "object": {
            "type": "Identifier",
            "start": 879,
            "end": 885,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 886,
            "end": 895,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 896,
            "end": 897,
            "name": "i"
          },
          {
            "type": "Literal",
            "start": 899,
            "end": 900,
            "value": 2,
            "raw": "2"
          },
          {
            "type": "Literal",
            "start": 902,
            "end": 1007,
            "value": "#3: Since LineTerminator(U-2028) between break and Identifier not allowed break evaluates without label",
            "raw": "'#3: Since LineTerminator(U-2028) between break and Identifier not allowed break evaluates without label'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "LabeledStatement",
      "start": 1011,
      "end": 1087,
      "label": {
        "type": "Identifier",
        "start": 1011,
        "end": 1015,
        "name": "FOR4"
      },
      "body": {
        "type": "ForStatement",
        "start": 1018,
        "end": 1087,
        "init": {
          "type": "VariableDeclaration",
          "start": 1022,
          "end": 1029,
          "kind": "var",
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 1026,
              "end": 1029,
              "id": {
                "type": "Identifier",
                "start": 1026,
                "end": 1027,
                "name": "i"
              },
              "init": {
                "type": "Literal",
                "start": 1028,
                "end": 1029,
                "value": 1,
                "raw": "1"
              }
            }
          ]
        },
        "test": {
          "type": "BinaryExpression",
          "start": 1030,
          "end": 1033,
          "left": {
            "type": "Identifier",
            "start": 1030,
            "end": 1031,
            "name": "i"
          },
          "operator": "<",
          "right": {
            "type": "Literal",
            "start": 1032,
            "end": 1033,
            "value": 2,
            "raw": "2"
          }
        },
        "update": {
          "type": "UpdateExpression",
          "start": 1034,
          "end": 1037,
          "operator": "++",
          "prefix": false,
          "argument": {
            "type": "Identifier",
            "start": 1034,
            "end": 1035,
            "name": "i"
          }
        },
        "body": {
          "type": "BlockStatement",
          "start": 1038,
          "end": 1087,
          "body": [
            {
              "type": "LabeledStatement",
              "start": 1042,
              "end": 1085,
              "label": {
                "type": "Identifier",
                "start": 1042,
                "end": 1048,
                "name": "LABEL4"
              },
              "body": {
                "type": "DoWhileStatement",
                "start": 1051,
                "end": 1085,
                "body": {
                  "type": "BlockStatement",
                  "start": 1054,
                  "end": 1075,
                  "body": [
                    {
                      "type": "BreakStatement",
                      "start": 1060,
                      "end": 1065,
                      "label": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 1066,
                      "end": 1071,
                      "expression": {
                        "type": "Identifier",
                        "start": 1066,
                        "end": 1070,
                        "name": "FOR4"
                      }
                    }
                  ]
                },
                "test": {
                  "type": "Literal",
                  "start": 1082,
                  "end": 1083,
                  "value": 0,
                  "raw": "0"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1089,
      "end": 1219,
      "expression": {
        "type": "CallExpression",
        "start": 1089,
        "end": 1218,
        "callee": {
          "type": "MemberExpression",
          "start": 1089,
          "end": 1105,
          "object": {
            "type": "Identifier",
            "start": 1089,
            "end": 1095,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1096,
            "end": 1105,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1106,
            "end": 1107,
            "name": "i"
          },
          {
            "type": "Literal",
            "start": 1109,
            "end": 1110,
            "value": 2,
            "raw": "2"
          },
          {
            "type": "Literal",
            "start": 1112,
            "end": 1217,
            "value": "#4: Since LineTerminator(U-2029) between break and Identifier not allowed break evaluates without label",
            "raw": "'#4: Since LineTerminator(U-2029) between break and Identifier not allowed break evaluates without label'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}