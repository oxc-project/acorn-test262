{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "a",
            "start": 293,
            "end": 294
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [],
            "start": 297,
            "end": 299
          },
          "start": 293,
          "end": 299
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "b",
            "start": 301,
            "end": 302
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [],
            "start": 305,
            "end": 307
          },
          "start": 301,
          "end": 307
        }
      ],
      "start": 289,
      "end": 308
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "let",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "i",
              "start": 318,
              "end": 319
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 322,
              "end": 323
            },
            "start": 318,
            "end": 323
          },
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "j",
              "start": 325,
              "end": 326
            },
            "init": {
              "type": "Literal",
              "value": 10,
              "raw": "10",
              "start": 329,
              "end": 331
            },
            "start": 325,
            "end": 331
          }
        ],
        "start": 314,
        "end": 331
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "i",
          "start": 333,
          "end": 334
        },
        "operator": "<",
        "right": {
          "type": "Literal",
          "value": 5,
          "raw": "5",
          "start": 337,
          "end": 338
        },
        "start": 333,
        "end": 338
      },
      "update": {
        "type": "SequenceExpression",
        "expressions": [
          {
            "type": "UpdateExpression",
            "operator": "++",
            "prefix": true,
            "argument": {
              "type": "Identifier",
              "name": "i",
              "start": 342,
              "end": 343
            },
            "start": 340,
            "end": 343
          },
          {
            "type": "UpdateExpression",
            "operator": "++",
            "prefix": true,
            "argument": {
              "type": "Identifier",
              "name": "j",
              "start": 347,
              "end": 348
            },
            "start": 345,
            "end": 348
          }
        ],
        "start": 340,
        "end": 348
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "a",
                  "start": 354,
                  "end": 355
                },
                "property": {
                  "type": "Identifier",
                  "name": "push",
                  "start": 356,
                  "end": 360
                },
                "optional": false,
                "computed": false,
                "start": 354,
                "end": 360
              },
              "arguments": [
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Identifier",
                          "name": "i",
                          "start": 382,
                          "end": 383
                        },
                        "start": 375,
                        "end": 384
                      }
                    ],
                    "start": 373,
                    "end": 386
                  },
                  "expression": false,
                  "start": 361,
                  "end": 386
                }
              ],
              "optional": false,
              "start": 354,
              "end": 387
            },
            "start": 354,
            "end": 388
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "b",
                  "start": 391,
                  "end": 392
                },
                "property": {
                  "type": "Identifier",
                  "name": "push",
                  "start": 393,
                  "end": 397
                },
                "optional": false,
                "computed": false,
                "start": 391,
                "end": 397
              },
              "arguments": [
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Identifier",
                          "name": "j",
                          "start": 419,
                          "end": 420
                        },
                        "start": 412,
                        "end": 421
                      }
                    ],
                    "start": 410,
                    "end": 423
                  },
                  "expression": false,
                  "start": 398,
                  "end": 423
                }
              ],
              "optional": false,
              "start": 391,
              "end": 424
            },
            "start": 391,
            "end": 425
          }
        ],
        "start": 350,
        "end": 427
      },
      "start": 309,
      "end": 427
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "let",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "k",
              "start": 437,
              "end": 438
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 441,
              "end": 442
            },
            "start": 437,
            "end": 442
          }
        ],
        "start": 433,
        "end": 442
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "k",
          "start": 444,
          "end": 445
        },
        "operator": "<",
        "right": {
          "type": "Literal",
          "value": 5,
          "raw": "5",
          "start": 448,
          "end": 449
        },
        "start": 444,
        "end": 449
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "name": "k",
          "start": 453,
          "end": 454
        },
        "start": 451,
        "end": 454
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 460,
                  "end": 466
                },
                "property": {
                  "type": "Identifier",
                  "name": "sameValue",
                  "start": 467,
                  "end": 476
                },
                "optional": false,
                "computed": false,
                "start": 460,
                "end": 476
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "k",
                  "start": 477,
                  "end": 478
                },
                {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "a",
                      "start": 480,
                      "end": 481
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "k",
                      "start": 482,
                      "end": 483
                    },
                    "optional": false,
                    "computed": true,
                    "start": 480,
                    "end": 484
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 480,
                  "end": 486
                }
              ],
              "optional": false,
              "start": 460,
              "end": 487
            },
            "start": 460,
            "end": 488
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 491,
                  "end": 497
                },
                "property": {
                  "type": "Identifier",
                  "name": "sameValue",
                  "start": 498,
                  "end": 507
                },
                "optional": false,
                "computed": false,
                "start": 491,
                "end": 507
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Identifier",
                    "name": "k",
                    "start": 508,
                    "end": 509
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "value": 10,
                    "raw": "10",
                    "start": 512,
                    "end": 514
                  },
                  "start": 508,
                  "end": 514
                },
                {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "b",
                      "start": 516,
                      "end": 517
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "k",
                      "start": 518,
                      "end": 519
                    },
                    "optional": false,
                    "computed": true,
                    "start": 516,
                    "end": 520
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 516,
                  "end": 522
                }
              ],
              "optional": false,
              "start": 491,
              "end": 523
            },
            "start": 491,
            "end": 524
          }
        ],
        "start": 456,
        "end": 526
      },
      "start": 428,
      "end": 526
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 527
}