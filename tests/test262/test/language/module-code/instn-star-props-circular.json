{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportNamespaceSpecifier",
          "local": {
            "type": "Identifier",
            "name": "a",
            "start": 1069,
            "end": 1070
          },
          "start": 1064,
          "end": 1070
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./instn-star-props-circular-a_FIXTURE.js",
        "raw": "'./instn-star-props-circular-a_FIXTURE.js'",
        "start": 1076,
        "end": 1118
      },
      "phase": null,
      "attributes": [],
      "start": 1057,
      "end": 1119
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportNamespaceSpecifier",
          "local": {
            "type": "Identifier",
            "name": "b",
            "start": 1132,
            "end": 1133
          },
          "start": 1127,
          "end": 1133
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./instn-star-props-circular-b_FIXTURE.js",
        "raw": "'./instn-star-props-circular-b_FIXTURE.js'",
        "start": 1139,
        "end": 1181
      },
      "phase": null,
      "attributes": [],
      "start": 1120,
      "end": 1182
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 1184,
          "end": 1190
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "fromA",
              "raw": "'fromA'",
              "start": 1191,
              "end": 1198
            },
            "operator": "in",
            "right": {
              "type": "Identifier",
              "name": "a",
              "start": 1202,
              "end": 1203
            },
            "start": 1191,
            "end": 1203
          },
          {
            "type": "Literal",
            "value": "entry for binding from \"a\" in namespace of module A",
            "raw": "'entry for binding from \"a\" in namespace of module A'",
            "start": 1205,
            "end": 1258
          }
        ],
        "optional": false,
        "start": 1184,
        "end": 1259
      },
      "start": 1184,
      "end": 1260
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 1261,
          "end": 1267
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "fromB",
              "raw": "'fromB'",
              "start": 1268,
              "end": 1275
            },
            "operator": "in",
            "right": {
              "type": "Identifier",
              "name": "a",
              "start": 1279,
              "end": 1280
            },
            "start": 1268,
            "end": 1280
          },
          {
            "type": "Literal",
            "value": "entry for binding from \"b\" in namespace of module A",
            "raw": "'entry for binding from \"b\" in namespace of module A'",
            "start": 1282,
            "end": 1335
          }
        ],
        "optional": false,
        "start": 1261,
        "end": 1336
      },
      "start": 1261,
      "end": 1337
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 1339,
          "end": 1345
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "fromA",
              "raw": "'fromA'",
              "start": 1346,
              "end": 1353
            },
            "operator": "in",
            "right": {
              "type": "Identifier",
              "name": "b",
              "start": 1357,
              "end": 1358
            },
            "start": 1346,
            "end": 1358
          },
          {
            "type": "Literal",
            "value": "entry for binding from \"a\" in namespace of module B",
            "raw": "'entry for binding from \"a\" in namespace of module B'",
            "start": 1360,
            "end": 1413
          }
        ],
        "optional": false,
        "start": 1339,
        "end": 1414
      },
      "start": 1339,
      "end": 1415
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 1416,
          "end": 1422
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "fromB",
              "raw": "'fromB'",
              "start": 1423,
              "end": 1430
            },
            "operator": "in",
            "right": {
              "type": "Identifier",
              "name": "b",
              "start": 1434,
              "end": 1435
            },
            "start": 1423,
            "end": 1435
          },
          {
            "type": "Literal",
            "value": "entry for binding from \"b\" in namespace of module B",
            "raw": "'entry for binding from \"b\" in namespace of module B'",
            "start": 1437,
            "end": 1490
          }
        ],
        "optional": false,
        "start": 1416,
        "end": 1491
      },
      "start": 1416,
      "end": 1492
    }
  ],
  "sourceType": "module",
  "hashbang": null,
  "start": 0,
  "end": 1493
}