{
  "type": "Program",
  "body": [
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "ParenthesizedExpression",
        "expression": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Literal",
                  "value": 99,
                  "raw": "99",
                  "start": 985,
                  "end": 987
                },
                "start": 978,
                "end": 988
              }
            ],
            "start": 976,
            "end": 990
          },
          "expression": false,
          "start": 965,
          "end": 990
        },
        "start": 964,
        "end": 991
      },
      "start": 949,
      "end": 992
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "f",
            "start": 1000,
            "end": 1001
          },
          "start": 1000,
          "end": 1001
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./eval-export-dflt-expr-fn-anon.js",
        "raw": "'./eval-export-dflt-expr-fn-anon.js'",
        "start": 1007,
        "end": 1043
      },
      "phase": null,
      "attributes": [],
      "start": 993,
      "end": 1044
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1046,
            "end": 1052
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1053,
            "end": 1062
          },
          "optional": false,
          "computed": false,
          "start": 1046,
          "end": 1062
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f",
              "start": 1063,
              "end": 1064
            },
            "arguments": [],
            "optional": false,
            "start": 1063,
            "end": 1066
          },
          {
            "type": "Literal",
            "value": 99,
            "raw": "99",
            "start": 1068,
            "end": 1070
          },
          {
            "type": "Literal",
            "value": "binding initialized",
            "raw": "'binding initialized'",
            "start": 1072,
            "end": 1093
          }
        ],
        "optional": false,
        "start": 1046,
        "end": 1094
      },
      "start": 1046,
      "end": 1095
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1096,
            "end": 1102
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1103,
            "end": 1112
          },
          "optional": false,
          "computed": false,
          "start": 1096,
          "end": 1112
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "f",
              "start": 1113,
              "end": 1114
            },
            "property": {
              "type": "Identifier",
              "name": "name",
              "start": 1115,
              "end": 1119
            },
            "optional": false,
            "computed": false,
            "start": 1113,
            "end": 1119
          },
          {
            "type": "Literal",
            "value": "default",
            "raw": "'default'",
            "start": 1121,
            "end": 1130
          },
          {
            "type": "Literal",
            "value": "correct name is assigned",
            "raw": "'correct name is assigned'",
            "start": 1132,
            "end": 1158
          }
        ],
        "optional": false,
        "start": 1096,
        "end": 1159
      },
      "start": 1096,
      "end": 1160
    }
  ],
  "sourceType": "module",
  "hashbang": null,
  "start": 0,
  "end": 1161
}