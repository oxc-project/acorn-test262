{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 872,
            "end": 878
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "eval",
              "start": 881,
              "end": 885
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "{}{}",
                "raw": "'{}{}'",
                "start": 886,
                "end": 892
              }
            ],
            "optional": false,
            "start": 881,
            "end": 893
          },
          "start": 872,
          "end": 893
        }
      ],
      "start": 868,
      "end": 894
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 896,
            "end": 902
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 903,
            "end": 912
          },
          "optional": false,
          "computed": false,
          "start": 896,
          "end": 912
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "result",
            "start": 913,
            "end": 919
          },
          {
            "type": "Identifier",
            "name": "undefined",
            "start": 921,
            "end": 930
          }
        ],
        "optional": false,
        "start": 896,
        "end": 931
      },
      "start": 896,
      "end": 932
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 933
}