{
  "type": "Program",
  "start": 0,
  "end": 888,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 295,
      "end": 414,
      "id": {
        "type": "Identifier",
        "start": 304,
        "end": 311,
        "name": "__mFunc"
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 313,
        "end": 414,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 314,
            "end": 329,
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 318,
                "end": 328,
                "id": {
                  "type": "Identifier",
                  "start": 318,
                  "end": 325,
                  "name": "__accum"
                },
                "init": {
                  "type": "Literal",
                  "start": 326,
                  "end": 328,
                  "value": "",
                  "raw": "\"\""
                }
              }
            ]
          },
          {
            "type": "ForStatement",
            "start": 330,
            "end": 397,
            "init": {
              "type": "VariableDeclaration",
              "start": 335,
              "end": 344,
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 339,
                  "end": 344,
                  "id": {
                    "type": "Identifier",
                    "start": 339,
                    "end": 340,
                    "name": "i"
                  },
                  "init": {
                    "type": "Literal",
                    "start": 343,
                    "end": 344,
                    "value": 0,
                    "raw": "0"
                  }
                }
              ]
            },
            "test": {
              "type": "BinaryExpression",
              "start": 346,
              "end": 366,
              "left": {
                "type": "Identifier",
                "start": 346,
                "end": 347,
                "name": "i"
              },
              "operator": "<",
              "right": {
                "type": "MemberExpression",
                "start": 350,
                "end": 366,
                "object": {
                  "type": "Identifier",
                  "start": 350,
                  "end": 359,
                  "name": "arguments"
                },
                "property": {
                  "type": "Identifier",
                  "start": 360,
                  "end": 366,
                  "name": "length"
                },
                "optional": false,
                "computed": false
              }
            },
            "update": {
              "type": "UpdateExpression",
              "start": 368,
              "end": 371,
              "operator": "++",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "start": 370,
                "end": 371,
                "name": "i"
              }
            },
            "body": {
              "type": "BlockStatement",
              "start": 372,
              "end": 397,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 373,
                  "end": 396,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 373,
                    "end": 396,
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "start": 373,
                      "end": 380,
                      "name": "__accum"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "start": 384,
                      "end": 396,
                      "object": {
                        "type": "Identifier",
                        "start": 384,
                        "end": 393,
                        "name": "arguments"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 394,
                        "end": 395,
                        "name": "i"
                      },
                      "optional": false,
                      "computed": true
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "EmptyStatement",
            "start": 397,
            "end": 398
          },
          {
            "type": "ReturnStatement",
            "start": 398,
            "end": 413,
            "argument": {
              "type": "Identifier",
              "start": 405,
              "end": 412,
              "name": "__accum"
            }
          }
        ]
      },
      "expression": false
    },
    {
      "type": "EmptyStatement",
      "start": 414,
      "end": 415
    },
    {
      "type": "IfStatement",
      "start": 505,
      "end": 805,
      "test": {
        "type": "BinaryExpression",
        "start": 509,
        "end": 554,
        "left": {
          "type": "CallExpression",
          "start": 509,
          "end": 541,
          "callee": {
            "type": "Identifier",
            "start": 509,
            "end": 516,
            "name": "__mFunc"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 517,
              "end": 520,
              "value": "A",
              "raw": "\"A\""
            },
            {
              "type": "Literal",
              "start": 521,
              "end": 524,
              "value": "B",
              "raw": "\"B\""
            },
            {
              "type": "Literal",
              "start": 525,
              "end": 528,
              "value": "C",
              "raw": "\"C\""
            },
            {
              "type": "Literal",
              "start": 529,
              "end": 532,
              "value": "D",
              "raw": "\"D\""
            },
            {
              "type": "Literal",
              "start": 533,
              "end": 536,
              "value": "E",
              "raw": "\"E\""
            },
            {
              "type": "Literal",
              "start": 537,
              "end": 540,
              "value": "F",
              "raw": "\"F\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 546,
          "end": 554,
          "value": "ABCDEF",
          "raw": "\"ABCDEF\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 555,
        "end": 805,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 559,
            "end": 803,
            "argument": {
              "type": "NewExpression",
              "start": 565,
              "end": 802,
              "callee": {
                "type": "Identifier",
                "start": 569,
                "end": 581,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 582,
                  "end": 801,
                  "left": {
                    "type": "Literal",
                    "start": 582,
                    "end": 764,
                    "value": "#1: function __mFunc(){var __accum=\"\"; for (var i = 0; i < arguments.length; ++i){__accum += arguments[i]};return __accum;}; __mFunc(\"A\",\"B\",\"C\",\"D\",\"E\",\"F\") === \"ABCDEF\". Actual: ",
                    "raw": "'#1: function __mFunc(){var __accum=\"\"; for (var i = 0; i < arguments.length; ++i){__accum += arguments[i]};return __accum;}; __mFunc(\"A\",\"B\",\"C\",\"D\",\"E\",\"F\") === \"ABCDEF\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 767,
                    "end": 801,
                    "expression": {
                      "type": "CallExpression",
                      "start": 768,
                      "end": 800,
                      "callee": {
                        "type": "Identifier",
                        "start": 768,
                        "end": 775,
                        "name": "__mFunc"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 776,
                          "end": 779,
                          "value": "A",
                          "raw": "\"A\""
                        },
                        {
                          "type": "Literal",
                          "start": 780,
                          "end": 783,
                          "value": "B",
                          "raw": "\"B\""
                        },
                        {
                          "type": "Literal",
                          "start": 784,
                          "end": 787,
                          "value": "C",
                          "raw": "\"C\""
                        },
                        {
                          "type": "Literal",
                          "start": 788,
                          "end": 791,
                          "value": "D",
                          "raw": "\"D\""
                        },
                        {
                          "type": "Literal",
                          "start": 792,
                          "end": 795,
                          "value": "E",
                          "raw": "\"E\""
                        },
                        {
                          "type": "Literal",
                          "start": 796,
                          "end": 799,
                          "value": "F",
                          "raw": "\"F\""
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}