{
  "type": "Program",
  "start": 0,
  "end": 1026,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 334,
      "end": 346,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 338,
          "end": 345,
          "id": {
            "type": "Identifier",
            "start": 338,
            "end": 343,
            "name": "count"
          },
          "init": {
            "type": "Literal",
            "start": 344,
            "end": 345,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "start": 347,
      "end": 377,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 351,
          "end": 376,
          "id": {
            "type": "Identifier",
            "start": 351,
            "end": 356,
            "name": "knock"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 357,
            "end": 376,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 367,
              "end": 376,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 368,
                  "end": 375,
                  "expression": {
                    "type": "UpdateExpression",
                    "start": 368,
                    "end": 375,
                    "operator": "++",
                    "prefix": false,
                    "argument": {
                      "type": "Identifier",
                      "start": 368,
                      "end": 373,
                      "name": "count"
                    }
                  }
                }
              ]
            },
            "expression": false
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 467,
      "end": 475,
      "expression": {
        "type": "CallExpression",
        "start": 467,
        "end": 474,
        "callee": {
          "type": "Identifier",
          "start": 467,
          "end": 472,
          "name": "knock"
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "IfStatement",
      "start": 476,
      "end": 605,
      "test": {
        "type": "BinaryExpression",
        "start": 480,
        "end": 490,
        "left": {
          "type": "Identifier",
          "start": 480,
          "end": 485,
          "name": "count"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 489,
          "end": 490,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 492,
        "end": 605,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 496,
            "end": 603,
            "argument": {
              "type": "NewExpression",
              "start": 502,
              "end": 602,
              "callee": {
                "type": "Identifier",
                "start": 506,
                "end": 518,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 519,
                  "end": 601,
                  "left": {
                    "type": "Literal",
                    "start": 519,
                    "end": 591,
                    "value": "#1: count=0; knock=function(){count++}; knock(); count === 1. Actual: ",
                    "raw": "'#1: count=0; knock=function(){count++}; knock(); count === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 594,
                    "end": 601,
                    "expression": {
                      "type": "Identifier",
                      "start": 595,
                      "end": 600,
                      "name": "count"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 778,
      "end": 794,
      "expression": {
        "type": "CallExpression",
        "start": 778,
        "end": 793,
        "callee": {
          "type": "MemberExpression",
          "start": 778,
          "end": 791,
          "object": {
            "type": "ThisExpression",
            "start": 778,
            "end": 782
          },
          "property": {
            "type": "Literal",
            "start": 783,
            "end": 790,
            "value": "knock",
            "raw": "'knock'"
          },
          "optional": false,
          "computed": true
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "IfStatement",
      "start": 795,
      "end": 943,
      "test": {
        "type": "BinaryExpression",
        "start": 799,
        "end": 809,
        "left": {
          "type": "Identifier",
          "start": 799,
          "end": 804,
          "name": "count"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 808,
          "end": 809,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 811,
        "end": 943,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 815,
            "end": 941,
            "argument": {
              "type": "NewExpression",
              "start": 821,
              "end": 940,
              "callee": {
                "type": "Identifier",
                "start": 825,
                "end": 837,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 838,
                  "end": 939,
                  "left": {
                    "type": "Literal",
                    "start": 838,
                    "end": 929,
                    "value": "#2: count=0; knock=function(){count++}; knock(); this['knock'](); count === 2. Actual: ",
                    "raw": "'#2: count=0; knock=function(){count++}; knock(); this[\\'knock\\'](); count === 2. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 932,
                    "end": 939,
                    "expression": {
                      "type": "Identifier",
                      "start": 933,
                      "end": 938,
                      "name": "count"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}