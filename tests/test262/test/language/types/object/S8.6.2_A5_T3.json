{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "count",
            "start": 338,
            "end": 343
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 344,
            "end": 345
          },
          "start": 338,
          "end": 345
        }
      ],
      "start": 334,
      "end": 346
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "knock",
            "start": 351,
            "end": 356
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "prefix": false,
                    "argument": {
                      "type": "Identifier",
                      "name": "count",
                      "start": 368,
                      "end": 373
                    },
                    "start": 368,
                    "end": 375
                  },
                  "start": 368,
                  "end": 375
                }
              ],
              "start": 367,
              "end": 376
            },
            "expression": false,
            "start": 357,
            "end": 376
          },
          "start": 351,
          "end": 376
        }
      ],
      "start": 347,
      "end": 377
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "knock",
          "start": 467,
          "end": 472
        },
        "arguments": [],
        "optional": false,
        "start": 467,
        "end": 474
      },
      "start": 467,
      "end": 475
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "count",
          "start": 480,
          "end": 485
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 1,
          "raw": "1",
          "start": 489,
          "end": 490
        },
        "start": 480,
        "end": 490
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 506,
                "end": 518
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: count=0; knock=function(){count++}; knock(); count === 1. Actual: ",
                    "raw": "'#1: count=0; knock=function(){count++}; knock(); count === 1. Actual: '",
                    "start": 519,
                    "end": 591
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "count",
                      "start": 595,
                      "end": 600
                    },
                    "start": 594,
                    "end": 601
                  },
                  "start": 519,
                  "end": 601
                }
              ],
              "start": 502,
              "end": 602
            },
            "start": 496,
            "end": 603
          }
        ],
        "start": 492,
        "end": 605
      },
      "alternate": null,
      "start": 476,
      "end": 605
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "ThisExpression",
            "start": 778,
            "end": 782
          },
          "property": {
            "type": "Literal",
            "value": "knock",
            "raw": "'knock'",
            "start": 783,
            "end": 790
          },
          "optional": false,
          "computed": true,
          "start": 778,
          "end": 791
        },
        "arguments": [],
        "optional": false,
        "start": 778,
        "end": 793
      },
      "start": 778,
      "end": 794
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "count",
          "start": 799,
          "end": 804
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 2,
          "raw": "2",
          "start": 808,
          "end": 809
        },
        "start": 799,
        "end": 809
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 825,
                "end": 837
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: count=0; knock=function(){count++}; knock(); this['knock'](); count === 2. Actual: ",
                    "raw": "'#2: count=0; knock=function(){count++}; knock(); this[\\'knock\\'](); count === 2. Actual: '",
                    "start": 838,
                    "end": 929
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "count",
                      "start": 933,
                      "end": 938
                    },
                    "start": 932,
                    "end": 939
                  },
                  "start": 838,
                  "end": 939
                }
              ],
              "start": 821,
              "end": 940
            },
            "start": 815,
            "end": 941
          }
        ],
        "start": 811,
        "end": 943
      },
      "alternate": null,
      "start": 795,
      "end": 943
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1026
}