{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "str",
            "start": 319,
            "end": 322
          },
          "init": {
            "type": "Literal",
            "value": "",
            "raw": "''",
            "start": 325,
            "end": 327
          },
          "start": 319,
          "end": 327
        }
      ],
      "start": 315,
      "end": 328
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "typeof",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "Identifier",
              "name": "str",
              "start": 340,
              "end": 343
            },
            "start": 339,
            "end": 344
          },
          "prefix": true,
          "start": 333,
          "end": 344
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "string",
          "raw": "'string'",
          "start": 349,
          "end": 357
        },
        "start": 333,
        "end": 357
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 372,
                "end": 384
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var str = ''; typeof(str) === 'string'. Actual: ",
                    "raw": "'#1: var str = \\'\\'; typeof(str) === \\'string\\'. Actual: '",
                    "start": 385,
                    "end": 443
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "expression": {
                          "type": "Identifier",
                          "name": "str",
                          "start": 454,
                          "end": 457
                        },
                        "start": 453,
                        "end": 458
                      },
                      "prefix": true,
                      "start": 447,
                      "end": 458
                    },
                    "start": 446,
                    "end": 459
                  },
                  "start": 385,
                  "end": 459
                }
              ],
              "start": 368,
              "end": 460
            },
            "start": 362,
            "end": 461
          }
        ],
        "start": 358,
        "end": 463
      },
      "alternate": null,
      "start": 329,
      "end": 463
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "str",
            "start": 598,
            "end": 601
          },
          "init": {
            "type": "Literal",
            "value": "",
            "raw": "\"\"",
            "start": 604,
            "end": 606
          },
          "start": 598,
          "end": 606
        }
      ],
      "start": 594,
      "end": 607
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "UnaryExpression",
          "operator": "typeof",
          "argument": {
            "type": "ParenthesizedExpression",
            "expression": {
              "type": "Identifier",
              "name": "str",
              "start": 619,
              "end": 622
            },
            "start": 618,
            "end": 623
          },
          "prefix": true,
          "start": 612,
          "end": 623
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "string",
          "raw": "\"string\"",
          "start": 628,
          "end": 636
        },
        "start": 612,
        "end": 636
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 651,
                "end": 663
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: var str = \"\"; typeof(str) === \"string\". Actual: ",
                    "raw": "'#2: var str = \"\"; typeof(str) === \"string\". Actual: '",
                    "start": 664,
                    "end": 718
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "str",
                      "start": 722,
                      "end": 725
                    },
                    "start": 721,
                    "end": 726
                  },
                  "start": 664,
                  "end": 726
                }
              ],
              "start": 647,
              "end": 727
            },
            "start": 641,
            "end": 728
          }
        ],
        "start": 637,
        "end": 730
      },
      "alternate": null,
      "start": 608,
      "end": 730
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 791
}