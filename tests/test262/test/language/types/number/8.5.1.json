{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "value",
            "start": 1183,
            "end": 1188
          },
          "init": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 1191,
            "end": 1192
          },
          "start": 1183,
          "end": 1192
        }
      ],
      "start": 1179,
      "end": 1193
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "floatValues",
            "start": 1198,
            "end": 1209
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Array",
              "start": 1216,
              "end": 1221
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1076,
                "raw": "1076",
                "start": 1222,
                "end": 1226
              }
            ],
            "start": 1212,
            "end": 1227
          },
          "start": 1198,
          "end": 1227
        }
      ],
      "start": 1194,
      "end": 1228
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "power",
              "start": 1237,
              "end": 1242
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 1245,
              "end": 1246
            },
            "start": 1237,
            "end": 1246
          }
        ],
        "start": 1233,
        "end": 1246
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "power",
          "start": 1248,
          "end": 1253
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "value": 1075,
          "raw": "1075",
          "start": 1257,
          "end": 1261
        },
        "start": 1248,
        "end": 1261
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "power",
          "start": 1263,
          "end": 1268
        },
        "start": 1263,
        "end": 1270
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "floatValues",
                  "start": 1274,
                  "end": 1285
                },
                "property": {
                  "type": "Identifier",
                  "name": "power",
                  "start": 1286,
                  "end": 1291
                },
                "optional": false,
                "computed": true,
                "start": 1274,
                "end": 1292
              },
              "right": {
                "type": "Identifier",
                "name": "value",
                "start": 1295,
                "end": 1300
              },
              "start": 1274,
              "end": 1300
            },
            "start": 1274,
            "end": 1301
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "value",
                "start": 1484,
                "end": 1489
              },
              "right": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "value",
                  "start": 1492,
                  "end": 1497
                },
                "operator": "*",
                "right": {
                  "type": "Literal",
                  "value": 0.5,
                  "raw": "0.5",
                  "start": 1500,
                  "end": 1503
                },
                "start": 1492,
                "end": 1503
              },
              "start": 1484,
              "end": 1503
            },
            "start": 1484,
            "end": 1504
          }
        ],
        "start": 1271,
        "end": 1506
      },
      "start": 1229,
      "end": 1506
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "floatValues",
            "start": 1611,
            "end": 1622
          },
          "property": {
            "type": "Literal",
            "value": 1075,
            "raw": "1075",
            "start": 1623,
            "end": 1627
          },
          "optional": false,
          "computed": true,
          "start": 1611,
          "end": 1628
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 1633,
          "end": 1634
        },
        "start": 1611,
        "end": 1634
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1650,
                "end": 1662
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "Value after min denorm should round to 0",
                  "raw": "\"Value after min denorm should round to 0\"",
                  "start": 1663,
                  "end": 1705
                }
              ],
              "start": 1646,
              "end": 1706
            },
            "start": 1640,
            "end": 1707
          }
        ],
        "start": 1636,
        "end": 1709
      },
      "alternate": null,
      "start": 1608,
      "end": 1709
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "floatValues",
            "start": 1762,
            "end": 1773
          },
          "property": {
            "type": "Literal",
            "value": 1074,
            "raw": "1074",
            "start": 1774,
            "end": 1778
          },
          "optional": false,
          "computed": true,
          "start": 1762,
          "end": 1779
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 5e-324,
          "raw": "4.9406564584124654417656879286822e-324",
          "start": 1784,
          "end": 1822
        },
        "start": 1762,
        "end": 1822
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 1838,
                "end": 1850
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "Min denorm value is incorrect: ",
                    "raw": "\"Min denorm value is incorrect: \"",
                    "start": 1851,
                    "end": 1884
                  },
                  "operator": "+",
                  "right": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "floatValues",
                      "start": 1887,
                      "end": 1898
                    },
                    "property": {
                      "type": "Literal",
                      "value": 1074,
                      "raw": "1074",
                      "start": 1899,
                      "end": 1903
                    },
                    "optional": false,
                    "computed": true,
                    "start": 1887,
                    "end": 1904
                  },
                  "start": 1851,
                  "end": 1904
                }
              ],
              "start": 1834,
              "end": 1905
            },
            "start": 1828,
            "end": 1906
          }
        ],
        "start": 1824,
        "end": 1908
      },
      "alternate": null,
      "start": 1759,
      "end": 1908
    },
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "kind": "var",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "index",
              "start": 1983,
              "end": 1988
            },
            "init": {
              "type": "Literal",
              "value": 1074,
              "raw": "1074",
              "start": 1991,
              "end": 1995
            },
            "start": 1983,
            "end": 1995
          }
        ],
        "start": 1979,
        "end": 1995
      },
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "index",
          "start": 1997,
          "end": 2002
        },
        "operator": ">",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 2005,
          "end": 2006
        },
        "start": 1997,
        "end": 2006
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "--",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "index",
          "start": 2008,
          "end": 2013
        },
        "start": 2008,
        "end": 2015
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "floatValues",
                  "start": 2023,
                  "end": 2034
                },
                "property": {
                  "type": "Identifier",
                  "name": "index",
                  "start": 2035,
                  "end": 2040
                },
                "optional": false,
                "computed": true,
                "start": 2023,
                "end": 2041
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 2046,
                "end": 2047
              },
              "start": 2023,
              "end": 2047
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 2061,
                      "end": 2073
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "2**-",
                            "raw": "\"2**-\"",
                            "start": 2074,
                            "end": 2080
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "index",
                            "start": 2083,
                            "end": 2088
                          },
                          "start": 2074,
                          "end": 2088
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": " should not be 0",
                          "raw": "\" should not be 0\"",
                          "start": 2091,
                          "end": 2109
                        },
                        "start": 2074,
                        "end": 2109
                      }
                    ],
                    "start": 2057,
                    "end": 2110
                  },
                  "start": 2051,
                  "end": 2111
                }
              ],
              "start": 2048,
              "end": 2115
            },
            "alternate": null,
            "start": 2020,
            "end": 2115
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "floatValues",
                  "start": 2121,
                  "end": 2132
                },
                "property": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Identifier",
                    "name": "index",
                    "start": 2133,
                    "end": 2138
                  },
                  "operator": "-",
                  "right": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 2141,
                    "end": 2142
                  },
                  "start": 2133,
                  "end": 2142
                },
                "optional": false,
                "computed": true,
                "start": 2121,
                "end": 2143
              },
              "operator": "!==",
              "right": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "floatValues",
                      "start": 2149,
                      "end": 2160
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "index",
                      "start": 2161,
                      "end": 2166
                    },
                    "optional": false,
                    "computed": true,
                    "start": 2149,
                    "end": 2167
                  },
                  "operator": "*",
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 2170,
                    "end": 2171
                  },
                  "start": 2149,
                  "end": 2171
                },
                "start": 2148,
                "end": 2172
              },
              "start": 2121,
              "end": 2172
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 2186,
                      "end": 2198
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "Literal",
                          "value": "Value should be double adjacent value at index ",
                          "raw": "\"Value should be double adjacent value at index \"",
                          "start": 2199,
                          "end": 2248
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "name": "index",
                          "start": 2251,
                          "end": 2256
                        },
                        "start": 2199,
                        "end": 2256
                      }
                    ],
                    "start": 2182,
                    "end": 2257
                  },
                  "start": 2176,
                  "end": 2258
                }
              ],
              "start": 2173,
              "end": 2262
            },
            "alternate": null,
            "start": 2118,
            "end": 2262
          }
        ],
        "start": 2016,
        "end": 2264
      },
      "start": 1975,
      "end": 2264
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 1.7976931348623157e+308,
              "raw": "1.797693134862315708145274237317e+308",
              "start": 2333,
              "end": 2370
            },
            "operator": "<",
            "right": {
              "type": "Identifier",
              "name": "Infinity",
              "start": 2373,
              "end": 2381
            },
            "start": 2333,
            "end": 2381
          },
          "start": 2332,
          "end": 2382
        },
        "prefix": true,
        "start": 2331,
        "end": 2382
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2396,
                "end": 2408
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "Max Number value 1.797693134862315708145274237317e+308 should not overflow to infinity",
                  "raw": "\"Max Number value 1.797693134862315708145274237317e+308 should not overflow to infinity\"",
                  "start": 2409,
                  "end": 2497
                }
              ],
              "start": 2392,
              "end": 2498
            },
            "start": 2386,
            "end": 2499
          }
        ],
        "start": 2383,
        "end": 2501
      },
      "alternate": null,
      "start": 2328,
      "end": 2501
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 1e+400,
              "raw": "1.797693134862315808e+308",
              "start": 2579,
              "end": 2604
            },
            "operator": "===",
            "right": {
              "type": "UnaryExpression",
              "operator": "+",
              "argument": {
                "type": "Identifier",
                "name": "Infinity",
                "start": 2610,
                "end": 2618
              },
              "prefix": true,
              "start": 2609,
              "end": 2618
            },
            "start": 2579,
            "end": 2618
          },
          "start": 2578,
          "end": 2619
        },
        "prefix": true,
        "start": 2577,
        "end": 2619
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 2633,
                "end": 2645
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "1.797693134862315808e+308 did not resolve to Infinity",
                  "raw": "\"1.797693134862315808e+308 did not resolve to Infinity\"",
                  "start": 2646,
                  "end": 2701
                }
              ],
              "start": 2629,
              "end": 2702
            },
            "start": 2623,
            "end": 2703
          }
        ],
        "start": 2620,
        "end": 2705
      },
      "alternate": null,
      "start": 2574,
      "end": 2705
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2706
}