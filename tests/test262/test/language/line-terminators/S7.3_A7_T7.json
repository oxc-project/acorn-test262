{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 281,
            "end": 282
          },
          "init": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 283,
            "end": 284
          },
          "start": 281,
          "end": 284
        }
      ],
      "start": 277,
      "end": 285
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "z",
            "start": 290,
            "end": 291
          },
          "init": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 292,
            "end": 293
          },
          "start": 290,
          "end": 293
        }
      ],
      "start": 286,
      "end": 294
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 299,
            "end": 300
          },
          "init": {
            "type": "BinaryExpression",
            "left": {
              "type": "Identifier",
              "name": "y",
              "start": 303,
              "end": 304
            },
            "operator": "<<",
            "right": {
              "type": "Identifier",
              "name": "z",
              "start": 308,
              "end": 309
            },
            "start": 303,
            "end": 309
          },
          "start": 299,
          "end": 309
        }
      ],
      "start": 295,
      "end": 311
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 316,
          "end": 317
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 16,
          "raw": "16",
          "start": 322,
          "end": 324
        },
        "start": 316,
        "end": 324
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 340,
                "end": 352
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var\\nx\\n=\\ny\\n<<\\nz\\n; x === 16. Actual: ",
                    "raw": "'#1: var\\\\nx\\\\n=\\\\ny\\\\n<<\\\\nz\\\\n; x === 16. Actual: '",
                    "start": 353,
                    "end": 406
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 410,
                      "end": 411
                    },
                    "start": 409,
                    "end": 412
                  },
                  "start": 353,
                  "end": 412
                }
              ],
              "start": 336,
              "end": 413
            },
            "start": 330,
            "end": 414
          }
        ],
        "start": 326,
        "end": 416
      },
      "alternate": null,
      "start": 312,
      "end": 416
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 417,
          "end": 418
        },
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 419,
          "end": 420
        },
        "start": 417,
        "end": 420
      },
      "start": 417,
      "end": 421
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 438,
            "end": 439
          },
          "init": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 440,
            "end": 441
          },
          "start": 438,
          "end": 441
        }
      ],
      "start": 434,
      "end": 442
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "z",
            "start": 447,
            "end": 448
          },
          "init": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 449,
            "end": 450
          },
          "start": 447,
          "end": 450
        }
      ],
      "start": 443,
      "end": 451
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 456,
            "end": 457
          },
          "init": {
            "type": "BinaryExpression",
            "left": {
              "type": "Identifier",
              "name": "y",
              "start": 460,
              "end": 461
            },
            "operator": "<<",
            "right": {
              "type": "Identifier",
              "name": "z",
              "start": 465,
              "end": 466
            },
            "start": 460,
            "end": 466
          },
          "start": 456,
          "end": 466
        }
      ],
      "start": 452,
      "end": 468
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 473,
          "end": 474
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 16,
          "raw": "16",
          "start": 479,
          "end": 481
        },
        "start": 473,
        "end": 481
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 497,
                "end": 509
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: var\\nx\\n=\\ny\\n<<\\nz\\n; x ===16 ",
                  "raw": "'#2: var\\\\nx\\\\n=\\\\ny\\\\n<<\\\\nz\\\\n; x ===16 '",
                  "start": 510,
                  "end": 553
                }
              ],
              "start": 493,
              "end": 554
            },
            "start": 487,
            "end": 555
          }
        ],
        "start": 483,
        "end": 557
      },
      "alternate": null,
      "start": 469,
      "end": 557
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 558,
          "end": 559
        },
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 560,
          "end": 561
        },
        "start": 558,
        "end": 561
      },
      "start": 558,
      "end": 562
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 579,
            "end": 585
          },
          "init": null,
          "start": 579,
          "end": 585
        }
      ],
      "start": 575,
      "end": 586
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 591,
            "end": 592
          },
          "init": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 593,
            "end": 594
          },
          "start": 591,
          "end": 594
        }
      ],
      "start": 587,
      "end": 595
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "z",
            "start": 600,
            "end": 601
          },
          "init": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 602,
            "end": 603
          },
          "start": 600,
          "end": 603
        }
      ],
      "start": 596,
      "end": 604
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "eval",
          "start": 605,
          "end": 609
        },
        "arguments": [
          {
            "type": "Literal",
            "value": " var x = y << z ; result = x;",
            "raw": "\"\\u2028var\\u2028x\\u2028=\\u2028y\\u2028<<\\u2028z\\u2028; result = x;\"",
            "start": 610,
            "end": 676
          }
        ],
        "optional": false,
        "start": 605,
        "end": 677
      },
      "start": 605,
      "end": 678
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 683,
          "end": 689
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 16,
          "raw": "16",
          "start": 694,
          "end": 696
        },
        "start": 683,
        "end": 696
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 712,
                "end": 724
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: eval(\"\\u2028var\\u2028x\\u2028=\\u2028y\\u2028<<\\u2028z\\u2028; result = x;\"); result === 16. Actual: ",
                    "raw": "'#3: eval(\"\\\\u2028var\\\\u2028x\\\\u2028=\\\\u2028y\\\\u2028<<\\\\u2028z\\\\u2028; result = x;\"); result === 16. Actual: '",
                    "start": 725,
                    "end": 835
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "result",
                      "start": 839,
                      "end": 845
                    },
                    "start": 838,
                    "end": 846
                  },
                  "start": 725,
                  "end": 846
                }
              ],
              "start": 708,
              "end": 847
            },
            "start": 702,
            "end": 848
          }
        ],
        "start": 698,
        "end": 850
      },
      "alternate": null,
      "start": 679,
      "end": 850
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 851,
          "end": 857
        },
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 858,
          "end": 859
        },
        "start": 851,
        "end": 859
      },
      "start": 851,
      "end": 860
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 877,
            "end": 878
          },
          "init": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 879,
            "end": 880
          },
          "start": 877,
          "end": 880
        }
      ],
      "start": 873,
      "end": 881
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "z",
            "start": 886,
            "end": 887
          },
          "init": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 888,
            "end": 889
          },
          "start": 886,
          "end": 889
        }
      ],
      "start": 882,
      "end": 890
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "eval",
          "start": 891,
          "end": 895
        },
        "arguments": [
          {
            "type": "Literal",
            "value": " var x = y << z ; result = x;",
            "raw": "\"\\u2029var\\u2029x\\u2029=\\u2029y\\u2029<<\\u2029z\\u2029; result = x;\"",
            "start": 896,
            "end": 962
          }
        ],
        "optional": false,
        "start": 891,
        "end": 963
      },
      "start": 891,
      "end": 964
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 969,
          "end": 975
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 16,
          "raw": "16",
          "start": 980,
          "end": 982
        },
        "start": 969,
        "end": 982
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 998,
                "end": 1010
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: eval(\"\\u2029var\\u2029x\\u2029=\\u2029y\\u2029<<\\u2029z\\u2029; result = x;\"); result === 16. Actual: ",
                    "raw": "'#4: eval(\"\\\\u2029var\\\\u2029x\\\\u2029=\\\\u2029y\\\\u2029<<\\\\u2029z\\\\u2029; result = x;\"); result === 16. Actual: '",
                    "start": 1011,
                    "end": 1121
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "result",
                      "start": 1125,
                      "end": 1131
                    },
                    "start": 1124,
                    "end": 1132
                  },
                  "start": 1011,
                  "end": 1132
                }
              ],
              "start": 994,
              "end": 1133
            },
            "start": 988,
            "end": 1134
          }
        ],
        "start": 984,
        "end": 1136
      },
      "alternate": null,
      "start": 965,
      "end": 1136
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1137
}