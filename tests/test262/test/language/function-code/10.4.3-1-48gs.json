{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "global",
            "start": 355,
            "end": 361
          },
          "init": {
            "type": "ThisExpression",
            "start": 364,
            "end": 368
          },
          "start": 355,
          "end": 368
        }
      ],
      "start": 351,
      "end": 369
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "f1",
            "start": 375,
            "end": 377
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "f",
                    "start": 407,
                    "end": 408
                  },
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "Literal",
                          "value": "use strict",
                          "raw": "\"use strict\"",
                          "start": 421,
                          "end": 433
                        },
                        "directive": "use strict",
                        "start": 421,
                        "end": 434
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "ThisExpression",
                            "start": 457,
                            "end": 461
                          },
                          "prefix": true,
                          "start": 450,
                          "end": 461
                        },
                        "start": 443,
                        "end": 462
                      }
                    ],
                    "start": 411,
                    "end": 468
                  },
                  "expression": false,
                  "start": 398,
                  "end": 468
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "LogicalExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "f",
                            "start": 481,
                            "end": 482
                          },
                          "arguments": [],
                          "optional": false,
                          "start": 481,
                          "end": 484
                        },
                        "operator": "===",
                        "right": {
                          "type": "Literal",
                          "value": "undefined",
                          "raw": "\"undefined\"",
                          "start": 487,
                          "end": 498
                        },
                        "start": 481,
                        "end": 498
                      },
                      "start": 480,
                      "end": 499
                    },
                    "operator": "&&",
                    "right": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "ThisExpression",
                          "start": 504,
                          "end": 508
                        },
                        "operator": "===",
                        "right": {
                          "type": "Identifier",
                          "name": "global",
                          "start": 511,
                          "end": 517
                        },
                        "start": 504,
                        "end": 517
                      },
                      "start": 503,
                      "end": 518
                    },
                    "start": 480,
                    "end": 518
                  },
                  "start": 473,
                  "end": 519
                }
              ],
              "start": 392,
              "end": 521
            },
            "expression": false,
            "start": 380,
            "end": 521
          },
          "start": 375,
          "end": 521
        }
      ],
      "start": 371,
      "end": 521
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "f1",
            "start": 528,
            "end": 530
          },
          "arguments": [],
          "optional": false,
          "start": 528,
          "end": 532
        },
        "prefix": true,
        "start": 526,
        "end": 532
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Literal",
              "value": "'this' had incorrect value!",
              "raw": "\"'this' had incorrect value!\"",
              "start": 546,
              "end": 575
            },
            "start": 540,
            "end": 576
          }
        ],
        "start": 534,
        "end": 578
      },
      "alternate": null,
      "start": 522,
      "end": 578
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 579
}