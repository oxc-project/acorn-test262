{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "global",
            "start": 346,
            "end": 352
          },
          "init": {
            "type": "ThisExpression",
            "start": 355,
            "end": 359
          },
          "start": 346,
          "end": 359
        }
      ],
      "start": 342,
      "end": 360
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f1",
        "start": 371,
        "end": 373
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "left": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "FunctionExpression",
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "Literal",
                                "value": "use strict",
                                "raw": "\"use strict\"",
                                "start": 413,
                                "end": 425
                              },
                              "directive": "use strict",
                              "start": 413,
                              "end": 426
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "UnaryExpression",
                                "operator": "typeof",
                                "argument": {
                                  "type": "ThisExpression",
                                  "start": 449,
                                  "end": 453
                                },
                                "prefix": true,
                                "start": 442,
                                "end": 453
                              },
                              "start": 435,
                              "end": 454
                            }
                          ],
                          "start": 403,
                          "end": 460
                        },
                        "expression": false,
                        "start": 391,
                        "end": 460
                      },
                      "start": 390,
                      "end": 461
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 390,
                    "end": 463
                  },
                  "operator": "===",
                  "right": {
                    "type": "Literal",
                    "value": "undefined",
                    "raw": "\"undefined\"",
                    "start": 466,
                    "end": 477
                  },
                  "start": 390,
                  "end": 477
                },
                "start": 389,
                "end": 478
              },
              "operator": "&&",
              "right": {
                "type": "ParenthesizedExpression",
                "expression": {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "ThisExpression",
                    "start": 483,
                    "end": 487
                  },
                  "operator": "===",
                  "right": {
                    "type": "Identifier",
                    "name": "global",
                    "start": 490,
                    "end": 496
                  },
                  "start": 483,
                  "end": 496
                },
                "start": 482,
                "end": 497
              },
              "start": 389,
              "end": 497
            },
            "start": 382,
            "end": 498
          }
        ],
        "start": 376,
        "end": 500
      },
      "expression": false,
      "start": 362,
      "end": 500
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 502,
          "end": 508
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f1",
              "start": 509,
              "end": 511
            },
            "arguments": [],
            "optional": false,
            "start": 509,
            "end": 513
          },
          {
            "type": "Literal",
            "value": "f1() !== true",
            "raw": "'f1() !== true'",
            "start": 515,
            "end": 530
          }
        ],
        "optional": false,
        "start": 502,
        "end": 531
      },
      "start": 502,
      "end": 532
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 533
}