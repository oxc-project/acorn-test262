{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 298,
            "end": 299
          },
          "init": {
            "type": "Literal",
            "value": 3,
            "raw": "3",
            "start": 302,
            "end": 303
          },
          "start": 298,
          "end": 303
        }
      ],
      "start": 294,
      "end": 304
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "LogicalExpression",
        "left": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Literal",
                  "value": "ab",
                  "raw": "\"ab\"",
                  "start": 311,
                  "end": 315
                },
                "property": {
                  "type": "Identifier",
                  "name": "replace",
                  "start": 316,
                  "end": 323
                },
                "optional": false,
                "computed": false,
                "start": 311,
                "end": 323
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "b",
                  "raw": "\"b\"",
                  "start": 324,
                  "end": 327
                },
                {
                  "type": "CallExpression",
                  "callee": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "FunctionExpression",
                      "id": null,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "Literal",
                              "value": "use strict",
                              "raw": "\"use strict\"",
                              "start": 349,
                              "end": 361
                            },
                            "directive": "use strict",
                            "start": 349,
                            "end": 362
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "FunctionExpression",
                              "id": null,
                              "generator": false,
                              "async": false,
                              "params": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "x",
                                        "start": 396,
                                        "end": 397
                                      },
                                      "right": {
                                        "type": "ThisExpression",
                                        "start": 400,
                                        "end": 404
                                      },
                                      "start": 396,
                                      "end": 404
                                    },
                                    "start": 396,
                                    "end": 405
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "Literal",
                                      "value": "a",
                                      "raw": "\"a\"",
                                      "start": 421,
                                      "end": 424
                                    },
                                    "start": 414,
                                    "end": 425
                                  }
                                ],
                                "start": 386,
                                "end": 431
                              },
                              "expression": false,
                              "start": 374,
                              "end": 431
                            },
                            "start": 367,
                            "end": 431
                          }
                        ],
                        "start": 342,
                        "end": 433
                      },
                      "expression": false,
                      "start": 330,
                      "end": 433
                    },
                    "start": 329,
                    "end": 434
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 329,
                  "end": 436
                }
              ],
              "optional": false,
              "start": 311,
              "end": 437
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "value": "aa",
              "raw": "\"aa\"",
              "start": 440,
              "end": 444
            },
            "start": 311,
            "end": 444
          },
          "start": 310,
          "end": 445
        },
        "operator": "||",
        "right": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Identifier",
              "name": "x",
              "start": 450,
              "end": 451
            },
            "operator": "!==",
            "right": {
              "type": "Identifier",
              "name": "undefined",
              "start": 454,
              "end": 463
            },
            "start": 450,
            "end": 463
          },
          "start": 449,
          "end": 464
        },
        "start": 310,
        "end": 464
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Literal",
              "value": "'this' had incorrect value!",
              "raw": "\"'this' had incorrect value!\"",
              "start": 478,
              "end": 507
            },
            "start": 472,
            "end": 508
          }
        ],
        "start": 466,
        "end": 510
      },
      "alternate": null,
      "start": 305,
      "end": 510
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 511
}