{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "global",
            "start": 366,
            "end": 372
          },
          "init": {
            "type": "ThisExpression",
            "start": 375,
            "end": 379
          },
          "start": 366,
          "end": 379
        }
      ],
      "start": 362,
      "end": 380
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "FunctionDeclaration",
                      "id": {
                        "type": "Identifier",
                        "name": "f",
                        "start": 417,
                        "end": 418
                      },
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "Literal",
                              "value": "use strict",
                              "raw": "\"use strict\"",
                              "start": 431,
                              "end": 443
                            },
                            "directive": "use strict",
                            "start": 431,
                            "end": 444
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "UnaryExpression",
                              "operator": "typeof",
                              "argument": {
                                "type": "ThisExpression",
                                "start": 467,
                                "end": 471
                              },
                              "prefix": true,
                              "start": 460,
                              "end": 471
                            },
                            "start": 453,
                            "end": 472
                          }
                        ],
                        "start": 421,
                        "end": 478
                      },
                      "expression": false,
                      "start": 408,
                      "end": 478
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "LogicalExpression",
                        "left": {
                          "type": "ParenthesizedExpression",
                          "expression": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "f",
                                "start": 491,
                                "end": 492
                              },
                              "arguments": [],
                              "optional": false,
                              "start": 491,
                              "end": 494
                            },
                            "operator": "===",
                            "right": {
                              "type": "Literal",
                              "value": "undefined",
                              "raw": "\"undefined\"",
                              "start": 497,
                              "end": 508
                            },
                            "start": 491,
                            "end": 508
                          },
                          "start": 490,
                          "end": 509
                        },
                        "operator": "&&",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "expression": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "ThisExpression",
                              "start": 514,
                              "end": 518
                            },
                            "operator": "===",
                            "right": {
                              "type": "Identifier",
                              "name": "global",
                              "start": 521,
                              "end": 527
                            },
                            "start": 514,
                            "end": 527
                          },
                          "start": 513,
                          "end": 528
                        },
                        "start": 490,
                        "end": 528
                      },
                      "start": 483,
                      "end": 529
                    }
                  ],
                  "start": 402,
                  "end": 531
                },
                "expression": false,
                "start": 390,
                "end": 531
              },
              "start": 389,
              "end": 532
            },
            "arguments": [],
            "optional": false,
            "start": 389,
            "end": 534
          },
          "start": 388,
          "end": 535
        },
        "prefix": true,
        "start": 386,
        "end": 535
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Literal",
              "value": "'this' had incorrect value!",
              "raw": "\"'this' had incorrect value!\"",
              "start": 549,
              "end": 578
            },
            "start": 543,
            "end": 579
          }
        ],
        "start": 537,
        "end": 581
      },
      "alternate": null,
      "start": 382,
      "end": 581
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 582
}