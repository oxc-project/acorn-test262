{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 263,
            "end": 264
          },
          "init": null,
          "start": 263,
          "end": 264
        }
      ],
      "start": 259,
      "end": 265
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f",
        "start": 276,
        "end": 277
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "a",
          "start": 278,
          "end": 279
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 288,
                  "end": 289
                },
                "init": null,
                "start": 288,
                "end": 289
              }
            ],
            "start": 284,
            "end": 290
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "a",
                "start": 298,
                "end": 299
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 304,
                "end": 305
              },
              "start": 298,
              "end": 305
            },
            "consequent": {
              "type": "ReturnStatement",
              "argument": {
                "type": "Identifier",
                "name": "x",
                "start": 318,
                "end": 319
              },
              "start": 311,
              "end": 320
            },
            "alternate": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 337,
                      "end": 338
                    },
                    "operator": "===",
                    "right": {
                      "type": "Identifier",
                      "name": "undefined",
                      "start": 343,
                      "end": 352
                    },
                    "start": 337,
                    "end": 352
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "x",
                            "start": 362,
                            "end": 363
                          },
                          "right": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0",
                            "start": 366,
                            "end": 367
                          },
                          "start": 362,
                          "end": 367
                        },
                        "start": 362,
                        "end": 368
                      }
                    ],
                    "start": 354,
                    "end": 374
                  },
                  "alternate": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "x",
                            "start": 388,
                            "end": 389
                          },
                          "right": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "1",
                            "start": 392,
                            "end": 393
                          },
                          "start": 388,
                          "end": 393
                        },
                        "start": 388,
                        "end": 394
                      }
                    ],
                    "start": 380,
                    "end": 400
                  },
                  "start": 334,
                  "end": 400
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "f",
                      "start": 412,
                      "end": 413
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 414,
                        "end": 415
                      }
                    ],
                    "optional": false,
                    "start": 412,
                    "end": 416
                  },
                  "start": 405,
                  "end": 417
                }
              ],
              "start": 328,
              "end": 421
            },
            "start": 294,
            "end": 421
          }
        ],
        "start": 280,
        "end": 423
      },
      "expression": false,
      "start": 267,
      "end": 423
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "y",
          "start": 425,
          "end": 426
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "f",
            "start": 429,
            "end": 430
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "start": 431,
              "end": 432
            }
          ],
          "optional": false,
          "start": 429,
          "end": 433
        },
        "start": 425,
        "end": 433
      },
      "start": 425,
      "end": 434
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "BinaryExpression",
            "left": {
              "type": "Identifier",
              "name": "y",
              "start": 441,
              "end": 442
            },
            "operator": "===",
            "right": {
              "type": "Identifier",
              "name": "undefined",
              "start": 447,
              "end": 456
            },
            "start": 441,
            "end": 456
          },
          "start": 440,
          "end": 457
        },
        "prefix": true,
        "start": 439,
        "end": 457
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 472,
                "end": 484
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: Recursive function calls shares execution context",
                  "raw": "\"#1: Recursive function calls shares execution context\"",
                  "start": 485,
                  "end": 540
                }
              ],
              "start": 468,
              "end": 541
            },
            "start": 462,
            "end": 542
          }
        ],
        "start": 458,
        "end": 544
      },
      "alternate": null,
      "start": 436,
      "end": 544
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 545
}