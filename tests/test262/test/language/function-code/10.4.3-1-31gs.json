{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "f1",
            "start": 338,
            "end": 340
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "f",
                        "start": 365,
                        "end": 366
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "UnaryExpression",
                                "operator": "typeof",
                                "argument": {
                                  "type": "ThisExpression",
                                  "start": 405,
                                  "end": 409
                                },
                                "prefix": true,
                                "start": 398,
                                "end": 409
                              },
                              "start": 391,
                              "end": 410
                            }
                          ],
                          "start": 381,
                          "end": 416
                        },
                        "expression": false,
                        "start": 369,
                        "end": 416
                      },
                      "start": 365,
                      "end": 416
                    }
                  ],
                  "start": 361,
                  "end": 416
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "LogicalExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "f",
                            "start": 429,
                            "end": 430
                          },
                          "arguments": [],
                          "optional": false,
                          "start": 429,
                          "end": 432
                        },
                        "operator": "===",
                        "right": {
                          "type": "Literal",
                          "value": "undefined",
                          "raw": "\"undefined\"",
                          "start": 435,
                          "end": 446
                        },
                        "start": 429,
                        "end": 446
                      },
                      "start": 428,
                      "end": 447
                    },
                    "operator": "&&",
                    "right": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "ParenthesizedExpression",
                          "expression": {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                              "type": "ThisExpression",
                              "start": 460,
                              "end": 464
                            },
                            "prefix": true,
                            "start": 453,
                            "end": 464
                          },
                          "start": 452,
                          "end": 465
                        },
                        "operator": "===",
                        "right": {
                          "type": "Literal",
                          "value": "undefined",
                          "raw": "\"undefined\"",
                          "start": 468,
                          "end": 479
                        },
                        "start": 452,
                        "end": 479
                      },
                      "start": 451,
                      "end": 480
                    },
                    "start": 428,
                    "end": 480
                  },
                  "start": 421,
                  "end": 481
                }
              ],
              "start": 355,
              "end": 483
            },
            "expression": false,
            "start": 343,
            "end": 483
          },
          "start": 338,
          "end": 483
        }
      ],
      "start": 334,
      "end": 483
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "f1",
            "start": 490,
            "end": 492
          },
          "arguments": [],
          "optional": false,
          "start": 490,
          "end": 494
        },
        "prefix": true,
        "start": 488,
        "end": 494
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Literal",
              "value": "'this' had incorrect value!",
              "raw": "\"'this' had incorrect value!\"",
              "start": 508,
              "end": 537
            },
            "start": 502,
            "end": 538
          }
        ],
        "start": 496,
        "end": 540
      },
      "alternate": null,
      "start": 484,
      "end": 540
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 541
}