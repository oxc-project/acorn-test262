{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "o",
            "start": 247,
            "end": 248
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 251,
            "end": 253
          },
          "start": 247,
          "end": 253
        }
      ],
      "start": 243,
      "end": 254
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 259,
            "end": 260
          },
          "init": {
            "type": "Literal",
            "value": 2,
            "raw": "2",
            "start": 263,
            "end": 264
          },
          "start": 259,
          "end": 264
        }
      ],
      "start": 255,
      "end": 265
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "Object",
            "start": 266,
            "end": 272
          },
          "property": {
            "type": "Identifier",
            "name": "defineProperty",
            "start": 273,
            "end": 287
          },
          "optional": false,
          "computed": false,
          "start": 266,
          "end": 287
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "o",
            "start": 288,
            "end": 289
          },
          {
            "type": "Literal",
            "value": "foo",
            "raw": "\"foo\"",
            "start": 291,
            "end": 296
          },
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "set",
                  "start": 300,
                  "end": 303
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "stuff",
                      "start": 314,
                      "end": 319
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "x",
                            "start": 323,
                            "end": 324
                          },
                          "right": {
                            "type": "ThisExpression",
                            "start": 325,
                            "end": 329
                          },
                          "start": 323,
                          "end": 329
                        },
                        "start": 323,
                        "end": 330
                      }
                    ],
                    "start": 321,
                    "end": 332
                  },
                  "expression": false,
                  "start": 305,
                  "end": 332
                },
                "method": false,
                "shorthand": false,
                "computed": false,
                "start": 300,
                "end": 332
              }
            ],
            "start": 298,
            "end": 334
          }
        ],
        "optional": false,
        "start": 266,
        "end": 335
      },
      "start": 266,
      "end": 336
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "o",
            "start": 337,
            "end": 338
          },
          "property": {
            "type": "Identifier",
            "name": "foo",
            "start": 339,
            "end": 342
          },
          "optional": false,
          "computed": false,
          "start": 337,
          "end": 342
        },
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "start": 345,
          "end": 346
        },
        "start": 337,
        "end": 346
      },
      "start": 337,
      "end": 347
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 352,
          "end": 353
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "o",
          "start": 356,
          "end": 357
        },
        "start": 352,
        "end": 357
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Literal",
              "value": "'this' had incorrect value!",
              "raw": "\"'this' had incorrect value!\"",
              "start": 371,
              "end": 400
            },
            "start": 365,
            "end": 401
          }
        ],
        "start": 359,
        "end": 403
      },
      "alternate": null,
      "start": 348,
      "end": 403
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 404
}