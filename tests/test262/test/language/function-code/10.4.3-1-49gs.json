{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "global",
            "start": 354,
            "end": 360
          },
          "init": {
            "type": "ThisExpression",
            "start": 363,
            "end": 367
          },
          "start": 354,
          "end": 367
        }
      ],
      "start": 350,
      "end": 368
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "f1",
            "start": 374,
            "end": 376
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "f",
                        "start": 401,
                        "end": 402
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "Literal",
                                "value": "use strict",
                                "raw": "\"use strict\"",
                                "start": 427,
                                "end": 439
                              },
                              "directive": "use strict",
                              "start": 427,
                              "end": 440
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "UnaryExpression",
                                "operator": "typeof",
                                "argument": {
                                  "type": "ThisExpression",
                                  "start": 463,
                                  "end": 467
                                },
                                "prefix": true,
                                "start": 456,
                                "end": 467
                              },
                              "start": 449,
                              "end": 468
                            }
                          ],
                          "start": 417,
                          "end": 474
                        },
                        "expression": false,
                        "start": 405,
                        "end": 474
                      },
                      "start": 401,
                      "end": 474
                    }
                  ],
                  "start": 397,
                  "end": 474
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "LogicalExpression",
                    "left": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "f",
                            "start": 487,
                            "end": 488
                          },
                          "arguments": [],
                          "optional": false,
                          "start": 487,
                          "end": 490
                        },
                        "operator": "===",
                        "right": {
                          "type": "Literal",
                          "value": "undefined",
                          "raw": "\"undefined\"",
                          "start": 493,
                          "end": 504
                        },
                        "start": 487,
                        "end": 504
                      },
                      "start": 486,
                      "end": 505
                    },
                    "operator": "&&",
                    "right": {
                      "type": "ParenthesizedExpression",
                      "expression": {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "ThisExpression",
                          "start": 510,
                          "end": 514
                        },
                        "operator": "===",
                        "right": {
                          "type": "Identifier",
                          "name": "global",
                          "start": 517,
                          "end": 523
                        },
                        "start": 510,
                        "end": 523
                      },
                      "start": 509,
                      "end": 524
                    },
                    "start": 486,
                    "end": 524
                  },
                  "start": 479,
                  "end": 525
                }
              ],
              "start": 391,
              "end": 527
            },
            "expression": false,
            "start": 379,
            "end": 527
          },
          "start": 374,
          "end": 527
        }
      ],
      "start": 370,
      "end": 527
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "f1",
            "start": 534,
            "end": 536
          },
          "arguments": [],
          "optional": false,
          "start": 534,
          "end": 538
        },
        "prefix": true,
        "start": 532,
        "end": 538
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Literal",
              "value": "'this' had incorrect value!",
              "raw": "\"'this' had incorrect value!\"",
              "start": 552,
              "end": 581
            },
            "start": 546,
            "end": 582
          }
        ],
        "start": 540,
        "end": 584
      },
      "alternate": null,
      "start": 528,
      "end": 584
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 585
}