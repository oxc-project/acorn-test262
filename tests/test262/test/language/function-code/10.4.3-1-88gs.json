{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "o",
            "start": 348,
            "end": 349
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 352,
            "end": 354
          },
          "start": 348,
          "end": 354
        }
      ],
      "start": 344,
      "end": 355
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f",
        "start": 365,
        "end": 366
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "BinaryExpression",
              "left": {
                "type": "ThisExpression",
                "start": 378,
                "end": 382
              },
              "operator": "===",
              "right": {
                "type": "Identifier",
                "name": "o",
                "start": 385,
                "end": 386
              },
              "start": 378,
              "end": 386
            },
            "start": 371,
            "end": 387
          }
        ],
        "start": 369,
        "end": 388
      },
      "expression": false,
      "start": 356,
      "end": 388
    },
    {
      "type": "EmptyStatement",
      "start": 388,
      "end": 389
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "Literal",
                        "value": "use strict",
                        "raw": "\"use strict\"",
                        "start": 411,
                        "end": 423
                      },
                      "directive": "use strict",
                      "start": 411,
                      "end": 424
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "f",
                            "start": 432,
                            "end": 433
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "apply",
                            "start": 434,
                            "end": 439
                          },
                          "optional": false,
                          "computed": false,
                          "start": 432,
                          "end": 439
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "o",
                            "start": 440,
                            "end": 441
                          }
                        ],
                        "optional": false,
                        "start": 432,
                        "end": 442
                      },
                      "start": 425,
                      "end": 443
                    }
                  ],
                  "start": 410,
                  "end": 444
                },
                "expression": false,
                "start": 398,
                "end": 444
              },
              "start": 397,
              "end": 445
            },
            "arguments": [],
            "optional": false,
            "start": 397,
            "end": 447
          },
          "start": 396,
          "end": 448
        },
        "prefix": true,
        "start": 394,
        "end": 448
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Literal",
              "value": "'this' had incorrect value!",
              "raw": "\"'this' had incorrect value!\"",
              "start": 461,
              "end": 490
            },
            "start": 455,
            "end": 491
          }
        ],
        "start": 449,
        "end": 493
      },
      "alternate": null,
      "start": 390,
      "end": 493
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 494
}