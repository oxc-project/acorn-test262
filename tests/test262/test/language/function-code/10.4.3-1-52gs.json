{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "global",
            "start": 365,
            "end": 371
          },
          "init": {
            "type": "ThisExpression",
            "start": 374,
            "end": 378
          },
          "start": 365,
          "end": 378
        }
      ],
      "start": 361,
      "end": 379
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "CallExpression",
            "callee": {
              "type": "ParenthesizedExpression",
              "expression": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "kind": "var",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "f",
                            "start": 411,
                            "end": 412
                          },
                          "init": {
                            "type": "FunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "Literal",
                                    "value": "use strict",
                                    "raw": "\"use strict\"",
                                    "start": 437,
                                    "end": 449
                                  },
                                  "directive": "use strict",
                                  "start": 437,
                                  "end": 450
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "UnaryExpression",
                                    "operator": "typeof",
                                    "argument": {
                                      "type": "ThisExpression",
                                      "start": 473,
                                      "end": 477
                                    },
                                    "prefix": true,
                                    "start": 466,
                                    "end": 477
                                  },
                                  "start": 459,
                                  "end": 478
                                }
                              ],
                              "start": 427,
                              "end": 484
                            },
                            "expression": false,
                            "start": 415,
                            "end": 484
                          },
                          "start": 411,
                          "end": 484
                        }
                      ],
                      "start": 407,
                      "end": 484
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "LogicalExpression",
                        "left": {
                          "type": "ParenthesizedExpression",
                          "expression": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "f",
                                "start": 497,
                                "end": 498
                              },
                              "arguments": [],
                              "optional": false,
                              "start": 497,
                              "end": 500
                            },
                            "operator": "===",
                            "right": {
                              "type": "Literal",
                              "value": "undefined",
                              "raw": "\"undefined\"",
                              "start": 503,
                              "end": 514
                            },
                            "start": 497,
                            "end": 514
                          },
                          "start": 496,
                          "end": 515
                        },
                        "operator": "&&",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "expression": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "ThisExpression",
                              "start": 520,
                              "end": 524
                            },
                            "operator": "===",
                            "right": {
                              "type": "Identifier",
                              "name": "global",
                              "start": 527,
                              "end": 533
                            },
                            "start": 520,
                            "end": 533
                          },
                          "start": 519,
                          "end": 534
                        },
                        "start": 496,
                        "end": 534
                      },
                      "start": 489,
                      "end": 535
                    }
                  ],
                  "start": 401,
                  "end": 537
                },
                "expression": false,
                "start": 389,
                "end": 537
              },
              "start": 388,
              "end": 538
            },
            "arguments": [],
            "optional": false,
            "start": 388,
            "end": 540
          },
          "start": 387,
          "end": 541
        },
        "prefix": true,
        "start": 385,
        "end": 541
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Literal",
              "value": "'this' had incorrect value!",
              "raw": "\"'this' had incorrect value!\"",
              "start": 555,
              "end": 584
            },
            "start": 549,
            "end": 585
          }
        ],
        "start": 543,
        "end": 587
      },
      "alternate": null,
      "start": 381,
      "end": 587
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 588
}