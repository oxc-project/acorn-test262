{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "f",
            "start": 316,
            "end": 317
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Literal",
                    "value": "use strict",
                    "raw": "\"use strict\"",
                    "start": 338,
                    "end": 350
                  },
                  "directive": "use strict",
                  "start": 338,
                  "end": 351
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "UnaryExpression",
                    "operator": "typeof",
                    "argument": {
                      "type": "ThisExpression",
                      "start": 370,
                      "end": 374
                    },
                    "prefix": true,
                    "start": 363,
                    "end": 374
                  },
                  "start": 356,
                  "end": 375
                }
              ],
              "start": 332,
              "end": 377
            },
            "expression": false,
            "start": 320,
            "end": 377
          },
          "start": 316,
          "end": 377
        }
      ],
      "start": 312,
      "end": 377
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "f",
            "start": 382,
            "end": 383
          },
          "arguments": [],
          "optional": false,
          "start": 382,
          "end": 385
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "undefined",
          "raw": "\"undefined\"",
          "start": 390,
          "end": 401
        },
        "start": 382,
        "end": 401
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Literal",
              "value": "'this' had incorrect value!",
              "raw": "\"'this' had incorrect value!\"",
              "start": 415,
              "end": 444
            },
            "start": 409,
            "end": 445
          }
        ],
        "start": 403,
        "end": 447
      },
      "alternate": null,
      "start": 378,
      "end": 447
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 448
}