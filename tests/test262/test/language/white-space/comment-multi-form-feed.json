{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "eval",
          "start": 267,
          "end": 271
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "/*\f multi line \f comment \f*/",
            "raw": "\"/*\\u000C multi line \\u000C comment \\u000C*/\"",
            "start": 272,
            "end": 317
          }
        ],
        "optional": false,
        "start": 267,
        "end": 318
      },
      "start": 267,
      "end": 319
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 335,
            "end": 336
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 339,
            "end": 340
          },
          "start": 335,
          "end": 340
        }
      ],
      "start": 331,
      "end": 341
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "eval",
          "start": 342,
          "end": 346
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "/*\f multi line \f comment \f x = 1;*/",
            "raw": "\"/*\\u000C multi line \\u000C comment \\u000C x = 1;*/\"",
            "start": 347,
            "end": 399
          }
        ],
        "optional": false,
        "start": 342,
        "end": 400
      },
      "start": 342,
      "end": 401
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 406,
          "end": 407
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 412,
          "end": 413
        },
        "start": 406,
        "end": 413
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 429,
                "end": 441
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: var x = 0; eval(\"/*\\u000C multi line \\u000C comment \\u000C x = 1;*/\"); x === 0. Actual: ",
                    "raw": "'#1: var x = 0; eval(\"/*\\\\u000C multi line \\\\u000C comment \\\\u000C x = 1;*/\"); x === 0. Actual: '",
                    "start": 442,
                    "end": 539
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 543,
                      "end": 544
                    },
                    "start": 542,
                    "end": 545
                  },
                  "start": 442,
                  "end": 545
                }
              ],
              "start": 425,
              "end": 546
            },
            "start": 419,
            "end": 547
          }
        ],
        "start": 415,
        "end": 549
      },
      "alternate": null,
      "start": 402,
      "end": 549
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 550
}