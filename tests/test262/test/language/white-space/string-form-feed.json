{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 272,
            "end": 276
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "'\fstr\fing\f'",
              "raw": "\"'\\u000Cstr\\u000Cing\\u000C'\"",
              "start": 277,
              "end": 305
            }
          ],
          "optional": false,
          "start": 272,
          "end": 306
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "\fstr\fing\f",
          "raw": "\"\\u000Cstr\\u000Cing\\u000C\"",
          "start": 311,
          "end": 337
        },
        "start": 272,
        "end": 337
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 353,
                "end": 365
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: eval(\"'\\u000Cstr\\u000Cing\\u000C'\") === \"\\u000Cstr\\u000Cing\\u000C\"",
                  "raw": "'#1: eval(\"\\'\\\\u000Cstr\\\\u000Cing\\\\u000C\\'\") === \"\\\\u000Cstr\\\\u000Cing\\\\u000C\"'",
                  "start": 366,
                  "end": 445
                }
              ],
              "start": 349,
              "end": 446
            },
            "start": 343,
            "end": 447
          }
        ],
        "start": 339,
        "end": 449
      },
      "alternate": null,
      "start": 268,
      "end": 449
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 465,
            "end": 469
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "'\fstr\fing\f'",
              "raw": "\"'\\fstr\\fing\\f'\"",
              "start": 470,
              "end": 486
            }
          ],
          "optional": false,
          "start": 465,
          "end": 487
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": "\fstr\fing\f",
          "raw": "\"\\fstr\\fing\\f\"",
          "start": 492,
          "end": 506
        },
        "start": 465,
        "end": 506
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 522,
                "end": 534
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: eval(\"'\\fstr\\fing\\f'\") === \"\\fstr\\fing\\f\"",
                  "raw": "'#2: eval(\"\\'\\\\fstr\\\\fing\\\\f\\'\") === \"\\\\fstr\\\\fing\\\\f\"'",
                  "start": 535,
                  "end": 590
                }
              ],
              "start": 518,
              "end": 591
            },
            "start": 512,
            "end": 592
          }
        ],
        "start": 508,
        "end": 594
      },
      "alternate": null,
      "start": 461,
      "end": 594
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 595
}