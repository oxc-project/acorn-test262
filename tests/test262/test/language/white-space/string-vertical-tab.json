{
  "type": "Program",
  "start": 0,
  "end": 601,
  "body": [
    {
      "type": "IfStatement",
      "start": 274,
      "end": 455,
      "test": {
        "type": "BinaryExpression",
        "start": 278,
        "end": 343,
        "left": {
          "type": "CallExpression",
          "start": 278,
          "end": 312,
          "callee": {
            "type": "Identifier",
            "start": 278,
            "end": 282,
            "name": "eval"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 283,
              "end": 311,
              "value": "'\u000bstr\u000bing\u000b'",
              "raw": "\"'\\u000Bstr\\u000Bing\\u000B'\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 317,
          "end": 343,
          "value": "\u000bstr\u000bing\u000b",
          "raw": "\"\\u000Bstr\\u000Bing\\u000B\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 345,
        "end": 455,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 349,
            "end": 453,
            "argument": {
              "type": "NewExpression",
              "start": 355,
              "end": 452,
              "callee": {
                "type": "Identifier",
                "start": 359,
                "end": 371,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 372,
                  "end": 451,
                  "value": "#1: eval(\"'\\u000Bstr\\u000Bing\\u000B'\") === \"\\u000Bstr\\u000Bing\\u000B\"",
                  "raw": "'#1: eval(\"\\'\\\\u000Bstr\\\\u000Bing\\\\u000B\\'\") === \"\\\\u000Bstr\\\\u000Bing\\\\u000B\"'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 467,
      "end": 600,
      "test": {
        "type": "BinaryExpression",
        "start": 471,
        "end": 512,
        "left": {
          "type": "CallExpression",
          "start": 471,
          "end": 493,
          "callee": {
            "type": "Identifier",
            "start": 471,
            "end": 475,
            "name": "eval"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 476,
              "end": 492,
              "value": "'\u000bstr\u000bing\u000b'",
              "raw": "\"'\\vstr\\ving\\v'\""
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 498,
          "end": 512,
          "value": "\u000bstr\u000bing\u000b",
          "raw": "\"\\vstr\\ving\\v\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 514,
        "end": 600,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 518,
            "end": 598,
            "argument": {
              "type": "NewExpression",
              "start": 524,
              "end": 597,
              "callee": {
                "type": "Identifier",
                "start": 528,
                "end": 540,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 541,
                  "end": 596,
                  "value": "#2: eval(\"'\\vstr\\ving\\v'\") === \"\\vstr\\ving\\v\"",
                  "raw": "'#2: eval(\"\\'\\\\vstr\\\\ving\\\\v\\'\") === \"\\\\vstr\\\\ving\\\\v\"'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}