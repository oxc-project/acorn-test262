{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 446,
            "end": 452
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 453,
            "end": 462
          },
          "optional": false,
          "computed": false,
          "start": 446,
          "end": 462
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "arguments",
              "raw": "\"arguments\"",
              "start": 463,
              "end": 474
            },
            "operator": "in",
            "right": {
              "type": "ThisExpression",
              "start": 478,
              "end": 482
            },
            "start": 463,
            "end": 482
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 484,
            "end": 489
          },
          {
            "type": "Literal",
            "value": "No global 'arguments' binding",
            "raw": "\"No global 'arguments' binding\"",
            "start": 491,
            "end": 522
          }
        ],
        "optional": false,
        "start": 446,
        "end": 523
      },
      "start": 446,
      "end": 524
    },
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "o",
            "start": 530,
            "end": 531
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "kind": "init",
                "key": {
                  "type": "Identifier",
                  "name": "f",
                  "start": 538,
                  "end": 539
                },
                "value": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": true,
                  "async": false,
                  "params": [
                    {
                      "type": "AssignmentPattern",
                      "left": {
                        "type": "Identifier",
                        "name": "p",
                        "start": 540,
                        "end": 541
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "eval",
                          "start": 544,
                          "end": 548
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "var arguments",
                            "raw": "\"var arguments\"",
                            "start": 549,
                            "end": 564
                          }
                        ],
                        "optional": false,
                        "start": 544,
                        "end": 565
                      },
                      "start": 540,
                      "end": 565
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "FunctionDeclaration",
                        "id": {
                          "type": "Identifier",
                          "name": "arguments",
                          "start": 580,
                          "end": 589
                        },
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [],
                          "start": 592,
                          "end": 594
                        },
                        "expression": false,
                        "start": 571,
                        "end": 594
                      }
                    ],
                    "start": 567,
                    "end": 596
                  },
                  "expression": false,
                  "start": 539,
                  "end": 596
                },
                "method": true,
                "shorthand": false,
                "computed": false,
                "start": 536,
                "end": 596
              }
            ],
            "start": 534,
            "end": 597
          },
          "start": 530,
          "end": 597
        }
      ],
      "start": 526,
      "end": 598
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 599,
            "end": 605
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 606,
            "end": 612
          },
          "optional": false,
          "computed": false,
          "start": 599,
          "end": 612
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "SyntaxError",
            "start": 613,
            "end": 624
          },
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "o",
              "start": 626,
              "end": 627
            },
            "property": {
              "type": "Identifier",
              "name": "f",
              "start": 628,
              "end": 629
            },
            "optional": false,
            "computed": false,
            "start": 626,
            "end": 629
          }
        ],
        "optional": false,
        "start": 599,
        "end": 630
      },
      "start": 599,
      "end": 631
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 634,
            "end": 640
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 641,
            "end": 650
          },
          "optional": false,
          "computed": false,
          "start": 634,
          "end": 650
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "arguments",
              "raw": "\"arguments\"",
              "start": 651,
              "end": 662
            },
            "operator": "in",
            "right": {
              "type": "ThisExpression",
              "start": 666,
              "end": 670
            },
            "start": 651,
            "end": 670
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 672,
            "end": 677
          },
          {
            "type": "Literal",
            "value": "No global 'arguments' binding",
            "raw": "\"No global 'arguments' binding\"",
            "start": 679,
            "end": 710
          }
        ],
        "optional": false,
        "start": 634,
        "end": 711
      },
      "start": 634,
      "end": 712
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 713
}