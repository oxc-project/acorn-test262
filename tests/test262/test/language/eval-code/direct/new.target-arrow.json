{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "caught",
            "start": 623,
            "end": 629
          },
          "init": null,
          "start": 623,
          "end": 629
        }
      ],
      "start": 619,
      "end": 630
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "f",
            "start": 635,
            "end": 636
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "expression": true,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "eval",
                "start": 645,
                "end": 649
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "new.target;",
                  "raw": "'new.target;'",
                  "start": 650,
                  "end": 663
                }
              ],
              "optional": false,
              "start": 645,
              "end": 664
            },
            "id": null,
            "generator": false,
            "start": 639,
            "end": 664
          },
          "start": 635,
          "end": 664
        }
      ],
      "start": 631,
      "end": 665
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "f",
                "start": 675,
                "end": 676
              },
              "arguments": [],
              "optional": false,
              "start": 675,
              "end": 678
            },
            "start": 675,
            "end": 679
          }
        ],
        "start": 671,
        "end": 681
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "err",
          "start": 689,
          "end": 692
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "caught",
                  "start": 698,
                  "end": 704
                },
                "right": {
                  "type": "Identifier",
                  "name": "err",
                  "start": 707,
                  "end": 710
                },
                "start": 698,
                "end": 710
              },
              "start": 698,
              "end": 711
            }
          ],
          "start": 694,
          "end": 713
        },
        "start": 682,
        "end": 713
      },
      "finalizer": null,
      "start": 667,
      "end": 713
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 715,
            "end": 721
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 722,
            "end": 731
          },
          "optional": false,
          "computed": false,
          "start": 715,
          "end": 731
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "caught",
              "start": 739,
              "end": 745
            },
            "prefix": true,
            "start": 732,
            "end": 745
          },
          {
            "type": "Literal",
            "value": "object",
            "raw": "'object'",
            "start": 747,
            "end": 755
          }
        ],
        "optional": false,
        "start": 715,
        "end": 756
      },
      "start": 715,
      "end": 757
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 758,
            "end": 764
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 765,
            "end": 774
          },
          "optional": false,
          "computed": false,
          "start": 758,
          "end": 774
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "caught",
              "start": 775,
              "end": 781
            },
            "property": {
              "type": "Identifier",
              "name": "constructor",
              "start": 782,
              "end": 793
            },
            "optional": false,
            "computed": false,
            "start": 775,
            "end": 793
          },
          {
            "type": "Identifier",
            "name": "SyntaxError",
            "start": 795,
            "end": 806
          }
        ],
        "optional": false,
        "start": 758,
        "end": 807
      },
      "start": 758,
      "end": 808
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 809
}