{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "outside",
            "start": 447,
            "end": 454
          },
          "init": {
            "type": "Literal",
            "value": 23,
            "raw": "23",
            "start": 457,
            "end": 459
          },
          "start": 447,
          "end": 459
        }
      ],
      "start": 443,
      "end": 460
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "eval",
          "start": 462,
          "end": 466
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "let outside;",
            "raw": "'let outside;'",
            "start": 467,
            "end": 481
          }
        ],
        "optional": false,
        "start": 462,
        "end": 482
      },
      "start": 462,
      "end": 483
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "eval",
          "start": 484,
          "end": 488
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "\"use strict\"; let outside;",
            "raw": "'\"use strict\"; let outside;'",
            "start": 489,
            "end": 517
          }
        ],
        "optional": false,
        "start": 484,
        "end": 518
      },
      "start": 484,
      "end": 519
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "eval",
          "start": 521,
          "end": 525
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "let xNonStrict = 3;",
            "raw": "'let xNonStrict = 3;'",
            "start": 526,
            "end": 547
          }
        ],
        "optional": false,
        "start": 521,
        "end": 548
      },
      "start": 521,
      "end": 549
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 551,
            "end": 557
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 558,
            "end": 567
          },
          "optional": false,
          "computed": false,
          "start": 551,
          "end": 567
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "xNonStrict",
              "start": 575,
              "end": 585
            },
            "prefix": true,
            "start": 568,
            "end": 585
          },
          {
            "type": "Literal",
            "value": "undefined",
            "raw": "'undefined'",
            "start": 587,
            "end": 598
          }
        ],
        "optional": false,
        "start": 551,
        "end": 599
      },
      "start": 551,
      "end": 600
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 601,
            "end": 607
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 608,
            "end": 614
          },
          "optional": false,
          "computed": false,
          "start": 601,
          "end": 614
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "ReferenceError",
            "start": 615,
            "end": 629
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Identifier",
                    "name": "xNonStrict",
                    "start": 646,
                    "end": 656
                  },
                  "start": 646,
                  "end": 657
                }
              ],
              "start": 642,
              "end": 659
            },
            "expression": false,
            "start": 631,
            "end": 659
          }
        ],
        "optional": false,
        "start": 601,
        "end": 660
      },
      "start": 601,
      "end": 661
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "eval",
          "start": 663,
          "end": 667
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "\"use strict\"; let xStrict = 3;",
            "raw": "'\"use strict\"; let xStrict = 3;'",
            "start": 668,
            "end": 700
          }
        ],
        "optional": false,
        "start": 663,
        "end": 701
      },
      "start": 663,
      "end": 702
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 704,
            "end": 710
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 711,
            "end": 720
          },
          "optional": false,
          "computed": false,
          "start": 704,
          "end": 720
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "xStrict",
              "start": 728,
              "end": 735
            },
            "prefix": true,
            "start": 721,
            "end": 735
          },
          {
            "type": "Literal",
            "value": "undefined",
            "raw": "'undefined'",
            "start": 737,
            "end": 748
          }
        ],
        "optional": false,
        "start": 704,
        "end": 749
      },
      "start": 704,
      "end": 750
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 751,
            "end": 757
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 758,
            "end": 764
          },
          "optional": false,
          "computed": false,
          "start": 751,
          "end": 764
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "ReferenceError",
            "start": 765,
            "end": 779
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Identifier",
                    "name": "xStrict",
                    "start": 796,
                    "end": 803
                  },
                  "start": 796,
                  "end": 804
                }
              ],
              "start": 792,
              "end": 806
            },
            "expression": false,
            "start": 781,
            "end": 806
          }
        ],
        "optional": false,
        "start": 751,
        "end": 807
      },
      "start": 751,
      "end": 808
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 809
}