{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 260,
            "end": 261
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 264,
            "end": 266
          },
          "start": 260,
          "end": 266
        }
      ],
      "start": 256,
      "end": 267
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 272,
            "end": 276
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 277,
              "end": 278
            }
          ],
          "optional": false,
          "start": 272,
          "end": 279
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "x",
          "start": 284,
          "end": 285
        },
        "start": 272,
        "end": 285
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 301,
                "end": 313
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1: x = {}; eval(x) === x. Actual: ",
                    "raw": "'#1: x = {}; eval(x) === x. Actual: '",
                    "start": 314,
                    "end": 351
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "eval",
                        "start": 355,
                        "end": 359
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "x",
                          "start": 360,
                          "end": 361
                        }
                      ],
                      "optional": false,
                      "start": 355,
                      "end": 362
                    },
                    "start": 354,
                    "end": 363
                  },
                  "start": 314,
                  "end": 363
                }
              ],
              "start": 297,
              "end": 364
            },
            "start": 291,
            "end": 365
          }
        ],
        "start": 287,
        "end": 367
      },
      "alternate": null,
      "start": 268,
      "end": 367
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 379,
          "end": 380
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Number",
            "start": 387,
            "end": 393
          },
          "arguments": [
            {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 394,
              "end": 395
            }
          ],
          "start": 383,
          "end": 396
        },
        "start": 379,
        "end": 396
      },
      "start": 379,
      "end": 397
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 402,
            "end": 406
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 407,
              "end": 408
            }
          ],
          "optional": false,
          "start": 402,
          "end": 409
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "x",
          "start": 414,
          "end": 415
        },
        "start": 402,
        "end": 415
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 431,
                "end": 443
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2: x = new Number(1); eval(x) === x. Actual: ",
                    "raw": "'#2: x = new Number(1); eval(x) === x. Actual: '",
                    "start": 444,
                    "end": 492
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "eval",
                        "start": 496,
                        "end": 500
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "x",
                          "start": 501,
                          "end": 502
                        }
                      ],
                      "optional": false,
                      "start": 496,
                      "end": 503
                    },
                    "start": 495,
                    "end": 504
                  },
                  "start": 444,
                  "end": 504
                }
              ],
              "start": 427,
              "end": 505
            },
            "start": 421,
            "end": 506
          }
        ],
        "start": 417,
        "end": 508
      },
      "alternate": null,
      "start": 398,
      "end": 508
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 520,
          "end": 521
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "Boolean",
            "start": 528,
            "end": 535
          },
          "arguments": [
            {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 536,
              "end": 540
            }
          ],
          "start": 524,
          "end": 541
        },
        "start": 520,
        "end": 541
      },
      "start": 520,
      "end": 542
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 547,
            "end": 551
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 552,
              "end": 553
            }
          ],
          "optional": false,
          "start": 547,
          "end": 554
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "x",
          "start": 559,
          "end": 560
        },
        "start": 547,
        "end": 560
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 576,
                "end": 588
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#3: x = new Boolean(true); eval(x) === x. Actual: ",
                    "raw": "'#3: x = new Boolean(true); eval(x) === x. Actual: '",
                    "start": 589,
                    "end": 641
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "eval",
                        "start": 645,
                        "end": 649
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "x",
                          "start": 650,
                          "end": 651
                        }
                      ],
                      "optional": false,
                      "start": 645,
                      "end": 652
                    },
                    "start": 644,
                    "end": 653
                  },
                  "start": 589,
                  "end": 653
                }
              ],
              "start": 572,
              "end": 654
            },
            "start": 566,
            "end": 655
          }
        ],
        "start": 562,
        "end": 657
      },
      "alternate": null,
      "start": 543,
      "end": 657
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 669,
          "end": 670
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "String",
            "start": 677,
            "end": 683
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "1+1",
              "raw": "\"1+1\"",
              "start": 684,
              "end": 689
            }
          ],
          "start": 673,
          "end": 690
        },
        "start": 669,
        "end": 690
      },
      "start": 669,
      "end": 691
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "eval",
            "start": 696,
            "end": 700
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 701,
              "end": 702
            }
          ],
          "optional": false,
          "start": 696,
          "end": 703
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "name": "x",
          "start": 708,
          "end": 709
        },
        "start": 696,
        "end": 709
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 725,
                "end": 737
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#4: x = new String(\"1\"); eval(x) === x. Actual: ",
                    "raw": "'#4: x = new String(\"1\"); eval(x) === x. Actual: '",
                    "start": 738,
                    "end": 788
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "eval",
                        "start": 792,
                        "end": 796
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "x",
                          "start": 797,
                          "end": 798
                        }
                      ],
                      "optional": false,
                      "start": 792,
                      "end": 799
                    },
                    "start": 791,
                    "end": 800
                  },
                  "start": 738,
                  "end": 800
                }
              ],
              "start": 721,
              "end": 801
            },
            "start": 715,
            "end": 802
          }
        ],
        "start": 711,
        "end": 804
      },
      "alternate": null,
      "start": 692,
      "end": 804
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 805
}