{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "eval",
                "start": 340,
                "end": 344
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "return;",
                  "raw": "\"return;\"",
                  "start": 345,
                  "end": 354
                }
              ],
              "optional": false,
              "start": 340,
              "end": 355
            },
            "start": 340,
            "end": 356
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 369,
                "end": 381
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1.1: return must throw SyntaxError. Actual: ",
                    "raw": "'#1.1: return must throw SyntaxError. Actual: '",
                    "start": 382,
                    "end": 429
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "eval",
                        "start": 433,
                        "end": 437
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "return;",
                          "raw": "\"return;\"",
                          "start": 438,
                          "end": 447
                        }
                      ],
                      "optional": false,
                      "start": 433,
                      "end": 448
                    },
                    "start": 432,
                    "end": 449
                  },
                  "start": 382,
                  "end": 449
                }
              ],
              "start": 365,
              "end": 450
            },
            "start": 359,
            "end": 451
          }
        ],
        "start": 336,
        "end": 453
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 460,
          "end": 461
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "ParenthesizedExpression",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 472,
                      "end": 473
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "name": "SyntaxError",
                      "start": 485,
                      "end": 496
                    },
                    "start": 472,
                    "end": 496
                  },
                  "start": 471,
                  "end": 497
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 502,
                  "end": 506
                },
                "start": 471,
                "end": 506
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 524,
                        "end": 536
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "#1.2: return must throw SyntaxError. Actual: ",
                            "raw": "'#1.2: return must throw SyntaxError. Actual: '",
                            "start": 537,
                            "end": 584
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "expression": {
                              "type": "Identifier",
                              "name": "e",
                              "start": 588,
                              "end": 589
                            },
                            "start": 587,
                            "end": 590
                          },
                          "start": 537,
                          "end": 590
                        }
                      ],
                      "start": 520,
                      "end": 591
                    },
                    "start": 514,
                    "end": 592
                  }
                ],
                "start": 508,
                "end": 596
              },
              "alternate": null,
              "start": 467,
              "end": 596
            }
          ],
          "start": 463,
          "end": 600
        },
        "start": 454,
        "end": 600
      },
      "finalizer": null,
      "start": 332,
      "end": 600
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f",
        "start": 622,
        "end": 623
      },
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "eval",
                "start": 629,
                "end": 633
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "return;",
                  "raw": "\"return;\"",
                  "start": 634,
                  "end": 643
                }
              ],
              "optional": false,
              "start": 629,
              "end": 644
            },
            "start": 629,
            "end": 645
          }
        ],
        "start": 626,
        "end": 647
      },
      "expression": false,
      "start": 613,
      "end": 647
    },
    {
      "type": "EmptyStatement",
      "start": 647,
      "end": 648
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "f",
                "start": 658,
                "end": 659
              },
              "arguments": [],
              "optional": false,
              "start": 658,
              "end": 661
            },
            "start": 658,
            "end": 662
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 681,
                "end": 693
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#2.1: return must throw SyntaxError. Actual: ",
                    "raw": "'#2.1: return must throw SyntaxError. Actual: '",
                    "start": 694,
                    "end": 741
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "f",
                        "start": 745,
                        "end": 746
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 745,
                      "end": 748
                    },
                    "start": 744,
                    "end": 749
                  },
                  "start": 694,
                  "end": 749
                }
              ],
              "start": 677,
              "end": 750
            },
            "start": 671,
            "end": 751
          }
        ],
        "start": 654,
        "end": 753
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 760,
          "end": 761
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "ParenthesizedExpression",
                  "expression": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Identifier",
                      "name": "e",
                      "start": 772,
                      "end": 773
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "name": "SyntaxError",
                      "start": 785,
                      "end": 796
                    },
                    "start": 772,
                    "end": 796
                  },
                  "start": 771,
                  "end": 797
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 802,
                  "end": 806
                },
                "start": 771,
                "end": 806
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 824,
                        "end": 836
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "#2.2: return must throw SyntaxError. Actual: ",
                            "raw": "'#2.2: return must throw SyntaxError. Actual: '",
                            "start": 837,
                            "end": 884
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "expression": {
                              "type": "Identifier",
                              "name": "e",
                              "start": 888,
                              "end": 889
                            },
                            "start": 887,
                            "end": 890
                          },
                          "start": 837,
                          "end": 890
                        }
                      ],
                      "start": 820,
                      "end": 891
                    },
                    "start": 814,
                    "end": 892
                  }
                ],
                "start": 808,
                "end": 896
              },
              "alternate": null,
              "start": 767,
              "end": 896
            }
          ],
          "start": 763,
          "end": 900
        },
        "start": 754,
        "end": 900
      },
      "finalizer": null,
      "start": 650,
      "end": 900
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 901
}