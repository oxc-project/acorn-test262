{
  "type": "Program",
  "start": 0,
  "end": 1193,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 958,
      "end": 970,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 962,
          "end": 969,
          "id": {
            "type": "Identifier",
            "start": 962,
            "end": 969,
            "name": "initial"
          },
          "init": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 972,
      "end": 1060,
      "expression": {
        "type": "CallExpression",
        "start": 972,
        "end": 1059,
        "callee": {
          "type": "Identifier",
          "start": 972,
          "end": 976,
          "name": "eval"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 977,
            "end": 1058,
            "value": "initial = f; function f() { return \"first\"; } function f() { return \"second\"; }",
            "raw": "'initial = f; function f() { return \"first\"; } function f() { return \"second\"; }'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1062,
      "end": 1117,
      "expression": {
        "type": "CallExpression",
        "start": 1062,
        "end": 1116,
        "callee": {
          "type": "MemberExpression",
          "start": 1062,
          "end": 1078,
          "object": {
            "type": "Identifier",
            "start": 1062,
            "end": 1068,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1069,
            "end": 1078,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1079,
            "end": 1088,
            "callee": {
              "type": "Identifier",
              "start": 1079,
              "end": 1086,
              "name": "initial"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1090,
            "end": 1098,
            "value": "second",
            "raw": "'second'"
          },
          {
            "type": "Literal",
            "start": 1100,
            "end": 1115,
            "value": "initial value",
            "raw": "'initial value'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1118,
      "end": 1192,
      "expression": {
        "type": "CallExpression",
        "start": 1118,
        "end": 1191,
        "callee": {
          "type": "MemberExpression",
          "start": 1118,
          "end": 1134,
          "object": {
            "type": "Identifier",
            "start": 1118,
            "end": 1124,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1125,
            "end": 1134,
            "name": "sameValue"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1135,
            "end": 1138,
            "callee": {
              "type": "Identifier",
              "start": 1135,
              "end": 1136,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1140,
            "end": 1148,
            "value": "second",
            "raw": "'second'"
          },
          {
            "type": "Literal",
            "start": 1150,
            "end": 1190,
            "value": "value following declaration evaluation",
            "raw": "'value following declaration evaluation'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}