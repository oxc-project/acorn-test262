{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "eval",
                "start": 339,
                "end": 343
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "throw 1;",
                  "raw": "\"throw 1;\"",
                  "start": 344,
                  "end": 354
                }
              ],
              "optional": false,
              "start": 339,
              "end": 355
            },
            "start": 339,
            "end": 356
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 369,
                "end": 381
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": "#1.1: throw 1 must throw SyntaxError. Actual: ",
                    "raw": "'#1.1: throw 1 must throw SyntaxError. Actual: '",
                    "start": 382,
                    "end": 430
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "eval",
                        "start": 434,
                        "end": 438
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "throw 1;",
                          "raw": "\"throw 1;\"",
                          "start": 439,
                          "end": 449
                        }
                      ],
                      "optional": false,
                      "start": 434,
                      "end": 450
                    },
                    "start": 433,
                    "end": 451
                  },
                  "start": 382,
                  "end": 451
                }
              ],
              "start": 365,
              "end": 452
            },
            "start": 359,
            "end": 453
          }
        ],
        "start": 335,
        "end": 455
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 462,
          "end": 463
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 473,
                  "end": 474
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 479,
                  "end": 480
                },
                "start": 473,
                "end": 480
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Test262Error",
                        "start": 498,
                        "end": 510
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "#1.2: throw 1 must throw SyntaxError. Actual: ",
                            "raw": "'#1.2: throw 1 must throw SyntaxError. Actual: '",
                            "start": 511,
                            "end": 559
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "expression": {
                              "type": "Identifier",
                              "name": "e",
                              "start": 563,
                              "end": 564
                            },
                            "start": 562,
                            "end": 565
                          },
                          "start": 511,
                          "end": 565
                        }
                      ],
                      "start": 494,
                      "end": 566
                    },
                    "start": 488,
                    "end": 567
                  }
                ],
                "start": 482,
                "end": 571
              },
              "alternate": null,
              "start": 469,
              "end": 571
            }
          ],
          "start": 465,
          "end": 575
        },
        "start": 456,
        "end": 575
      },
      "finalizer": null,
      "start": 331,
      "end": 575
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 576
}