{
  "type": "Program",
  "start": 0,
  "end": 681,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 475,
      "end": 483,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 479,
          "end": 482,
          "id": {
            "type": "Identifier",
            "start": 479,
            "end": 482,
            "name": "err"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 485,
      "end": 573,
      "expression": {
        "type": "CallExpression",
        "start": 485,
        "end": 572,
        "callee": {
          "type": "Identifier",
          "start": 485,
          "end": 489,
          "name": "eval"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 490,
            "end": 571,
            "value": "  \"use strict\";  switch (1) {    default:      function f() {  }  }",
            "raw": "'\\\n  \"use strict\";\\\n  switch (1) {\\\n    default:\\\n      function f() {  }\\\n  }\\\n'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "TryStatement",
      "start": 575,
      "end": 628,
      "block": {
        "type": "BlockStatement",
        "start": 579,
        "end": 587,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 583,
            "end": 585,
            "expression": {
              "type": "Identifier",
              "start": 583,
              "end": 584,
              "name": "f"
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 588,
        "end": 628,
        "param": {
          "type": "Identifier",
          "start": 595,
          "end": 604,
          "name": "exception"
        },
        "body": {
          "type": "BlockStatement",
          "start": 606,
          "end": 628,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 610,
              "end": 626,
              "expression": {
                "type": "AssignmentExpression",
                "start": 610,
                "end": 625,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 610,
                  "end": 613,
                  "name": "err"
                },
                "right": {
                  "type": "Identifier",
                  "start": 616,
                  "end": 625,
                  "name": "exception"
                }
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 630,
      "end": 680,
      "expression": {
        "type": "CallExpression",
        "start": 630,
        "end": 679,
        "callee": {
          "type": "MemberExpression",
          "start": 630,
          "end": 646,
          "object": {
            "type": "Identifier",
            "start": 630,
            "end": 636,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 637,
            "end": 646,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 647,
            "end": 662,
            "object": {
              "type": "Identifier",
              "start": 647,
              "end": 650,
              "name": "err"
            },
            "property": {
              "type": "Identifier",
              "start": 651,
              "end": 662,
              "name": "constructor"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 664,
            "end": 678,
            "name": "ReferenceError"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}