{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "let",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "outside",
            "start": 476,
            "end": 483
          },
          "init": {
            "type": "Literal",
            "value": 23,
            "raw": "23",
            "start": 486,
            "end": 488
          },
          "start": 476,
          "end": 488
        }
      ],
      "start": 472,
      "end": 489
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "SequenceExpression",
            "expressions": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 492,
                "end": 493
              },
              {
                "type": "Identifier",
                "name": "eval",
                "start": 494,
                "end": 498
              }
            ],
            "start": 492,
            "end": 498
          },
          "start": 491,
          "end": 499
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "let outside;",
            "raw": "'let outside;'",
            "start": 500,
            "end": 514
          }
        ],
        "optional": false,
        "start": 491,
        "end": 515
      },
      "start": 491,
      "end": 516
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "SequenceExpression",
            "expressions": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 518,
                "end": 519
              },
              {
                "type": "Identifier",
                "name": "eval",
                "start": 520,
                "end": 524
              }
            ],
            "start": 518,
            "end": 524
          },
          "start": 517,
          "end": 525
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "\"use strict\"; let outside;",
            "raw": "'\"use strict\"; let outside;'",
            "start": 526,
            "end": 554
          }
        ],
        "optional": false,
        "start": 517,
        "end": 555
      },
      "start": 517,
      "end": 556
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "SequenceExpression",
            "expressions": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 559,
                "end": 560
              },
              {
                "type": "Identifier",
                "name": "eval",
                "start": 561,
                "end": 565
              }
            ],
            "start": 559,
            "end": 565
          },
          "start": 558,
          "end": 566
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "let xNonStrict = 3;",
            "raw": "'let xNonStrict = 3;'",
            "start": 567,
            "end": 588
          }
        ],
        "optional": false,
        "start": 558,
        "end": 589
      },
      "start": 558,
      "end": 590
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 592,
            "end": 598
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 599,
            "end": 608
          },
          "optional": false,
          "computed": false,
          "start": 592,
          "end": 608
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "xNonStrict",
              "start": 616,
              "end": 626
            },
            "prefix": true,
            "start": 609,
            "end": 626
          },
          {
            "type": "Literal",
            "value": "undefined",
            "raw": "'undefined'",
            "start": 628,
            "end": 639
          }
        ],
        "optional": false,
        "start": 592,
        "end": 640
      },
      "start": 592,
      "end": 641
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 642,
            "end": 648
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 649,
            "end": 655
          },
          "optional": false,
          "computed": false,
          "start": 642,
          "end": 655
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "ReferenceError",
            "start": 656,
            "end": 670
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Identifier",
                    "name": "xNonStrict",
                    "start": 687,
                    "end": 697
                  },
                  "start": 687,
                  "end": 698
                }
              ],
              "start": 683,
              "end": 700
            },
            "expression": false,
            "start": 672,
            "end": 700
          }
        ],
        "optional": false,
        "start": 642,
        "end": 701
      },
      "start": 642,
      "end": 702
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "ParenthesizedExpression",
          "expression": {
            "type": "SequenceExpression",
            "expressions": [
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 705,
                "end": 706
              },
              {
                "type": "Identifier",
                "name": "eval",
                "start": 707,
                "end": 711
              }
            ],
            "start": 705,
            "end": 711
          },
          "start": 704,
          "end": 712
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "\"use strict\"; let xStrict = 3;",
            "raw": "'\"use strict\"; let xStrict = 3;'",
            "start": 713,
            "end": 745
          }
        ],
        "optional": false,
        "start": 704,
        "end": 746
      },
      "start": 704,
      "end": 747
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 749,
            "end": 755
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 756,
            "end": 765
          },
          "optional": false,
          "computed": false,
          "start": 749,
          "end": 765
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "xStrict",
              "start": 773,
              "end": 780
            },
            "prefix": true,
            "start": 766,
            "end": 780
          },
          {
            "type": "Literal",
            "value": "undefined",
            "raw": "'undefined'",
            "start": 782,
            "end": 793
          }
        ],
        "optional": false,
        "start": 749,
        "end": 794
      },
      "start": 749,
      "end": 795
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 796,
            "end": 802
          },
          "property": {
            "type": "Identifier",
            "name": "throws",
            "start": 803,
            "end": 809
          },
          "optional": false,
          "computed": false,
          "start": 796,
          "end": 809
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "ReferenceError",
            "start": 810,
            "end": 824
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Identifier",
                    "name": "xStrict",
                    "start": 841,
                    "end": 848
                  },
                  "start": 841,
                  "end": 849
                }
              ],
              "start": 837,
              "end": 851
            },
            "expression": false,
            "start": 826,
            "end": 851
          }
        ],
        "optional": false,
        "start": 796,
        "end": 852
      },
      "start": 796,
      "end": 853
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 854
}