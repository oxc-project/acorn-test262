{
  "type": "Program",
  "start": 0,
  "end": 646,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 348,
      "end": 413,
      "expression": {
        "type": "CallExpression",
        "start": 348,
        "end": 412,
        "callee": {
          "type": "MemberExpression",
          "start": 348,
          "end": 361,
          "object": {
            "type": "Identifier",
            "start": 348,
            "end": 354,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 355,
            "end": 361,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 362,
            "end": 373,
            "name": "SyntaxError"
          },
          {
            "type": "FunctionExpression",
            "start": 375,
            "end": 411,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 386,
              "end": 411,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 390,
                  "end": 409,
                  "expression": {
                    "type": "CallExpression",
                    "start": 390,
                    "end": 408,
                    "callee": {
                      "type": "ParenthesizedExpression",
                      "start": 390,
                      "end": 398,
                      "expression": {
                        "type": "SequenceExpression",
                        "start": 391,
                        "end": 397,
                        "expressions": [
                          {
                            "type": "Literal",
                            "start": 391,
                            "end": 392,
                            "value": 0,
                            "raw": "0"
                          },
                          {
                            "type": "Identifier",
                            "start": 393,
                            "end": 397,
                            "name": "eval"
                          }
                        ]
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 399,
                        "end": 407,
                        "value": "break;",
                        "raw": "\"break;\""
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            },
            "expression": false
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 415,
      "end": 645,
      "expression": {
        "type": "CallExpression",
        "start": 415,
        "end": 644,
        "callee": {
          "type": "MemberExpression",
          "start": 415,
          "end": 428,
          "object": {
            "type": "Identifier",
            "start": 415,
            "end": 421,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 422,
            "end": 428,
            "name": "throws"
          },
          "optional": false,
          "computed": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 429,
            "end": 440,
            "name": "SyntaxError"
          },
          {
            "type": "FunctionExpression",
            "start": 442,
            "end": 643,
            "id": null,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 453,
              "end": 643,
              "body": [
                {
                  "type": "ForStatement",
                  "start": 457,
                  "end": 582,
                  "init": {
                    "type": "VariableDeclaration",
                    "start": 462,
                    "end": 471,
                    "kind": "var",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "start": 466,
                        "end": 471,
                        "id": {
                          "type": "Identifier",
                          "start": 466,
                          "end": 467,
                          "name": "i"
                        },
                        "init": {
                          "type": "Literal",
                          "start": 470,
                          "end": 471,
                          "value": 0,
                          "raw": "0"
                        }
                      }
                    ]
                  },
                  "test": {
                    "type": "BinaryExpression",
                    "start": 473,
                    "end": 479,
                    "left": {
                      "type": "Identifier",
                      "start": 473,
                      "end": 474,
                      "name": "i"
                    },
                    "operator": "<=",
                    "right": {
                      "type": "Literal",
                      "start": 478,
                      "end": 479,
                      "value": 1,
                      "raw": "1"
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "start": 481,
                    "end": 484,
                    "operator": "++",
                    "prefix": false,
                    "argument": {
                      "type": "Identifier",
                      "start": 481,
                      "end": 482,
                      "name": "i"
                    }
                  },
                  "body": {
                    "type": "BlockStatement",
                    "start": 486,
                    "end": 582,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 492,
                        "end": 511,
                        "expression": {
                          "type": "CallExpression",
                          "start": 492,
                          "end": 510,
                          "callee": {
                            "type": "ParenthesizedExpression",
                            "start": 492,
                            "end": 500,
                            "expression": {
                              "type": "SequenceExpression",
                              "start": 493,
                              "end": 499,
                              "expressions": [
                                {
                                  "type": "Literal",
                                  "start": 493,
                                  "end": 494,
                                  "value": 0,
                                  "raw": "0"
                                },
                                {
                                  "type": "Identifier",
                                  "start": 495,
                                  "end": 499,
                                  "name": "eval"
                                }
                              ]
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 501,
                              "end": 509,
                              "value": "break;",
                              "raw": "\"break;\""
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ThrowStatement",
                        "start": 516,
                        "end": 578,
                        "argument": {
                          "type": "NewExpression",
                          "start": 522,
                          "end": 577,
                          "callee": {
                            "type": "Identifier",
                            "start": 526,
                            "end": 538,
                            "name": "Test262Error"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 539,
                              "end": 576,
                              "value": "First iteration should not complete",
                              "raw": "\"First iteration should not complete\""
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ThrowStatement",
                  "start": 585,
                  "end": 641,
                  "argument": {
                    "type": "NewExpression",
                    "start": 591,
                    "end": 640,
                    "callee": {
                      "type": "Identifier",
                      "start": 595,
                      "end": 607,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 608,
                        "end": 639,
                        "value": "Iteration should not complete",
                        "raw": "\"Iteration should not complete\""
                      }
                    ]
                  }
                }
              ]
            },
            "expression": false
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}