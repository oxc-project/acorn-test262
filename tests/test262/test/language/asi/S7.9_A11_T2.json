{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 286,
            "end": 287
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 290,
            "end": 291
          },
          "start": 286,
          "end": 291
        }
      ],
      "start": 282,
      "end": 292
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "Literal",
        "value": false,
        "raw": "false",
        "start": 297,
        "end": 302
      },
      "consequent": {
        "type": "ExpressionStatement",
        "expression": {
          "type": "AssignmentExpression",
          "operator": "=",
          "left": {
            "type": "Identifier",
            "name": "x",
            "start": 304,
            "end": 305
          },
          "right": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 308,
            "end": 309
          },
          "start": 304,
          "end": 309
        },
        "start": 304,
        "end": 309
      },
      "alternate": null,
      "start": 293,
      "end": 309
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 314,
          "end": 315
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 320,
          "end": 321
        },
        "start": 314,
        "end": 321
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 337,
                "end": 349
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: Check If Statement for automatic semicolon insertion",
                  "raw": "'#1: Check If Statement for automatic semicolon insertion'",
                  "start": 350,
                  "end": 408
                }
              ],
              "start": 333,
              "end": 409
            },
            "start": 327,
            "end": 410
          }
        ],
        "start": 323,
        "end": 412
      },
      "alternate": null,
      "start": 310,
      "end": 412
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 413
}