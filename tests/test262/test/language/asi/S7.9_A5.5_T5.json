{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 310,
            "end": 311
          },
          "init": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 314,
              "end": 315
            },
            "operator": "+",
            "right": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "ParenthesizedExpression",
                    "expression": {
                      "type": "FunctionExpression",
                      "id": {
                        "type": "Identifier",
                        "name": "f",
                        "start": 328,
                        "end": 329
                      },
                      "generator": false,
                      "async": false,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "t",
                          "start": 331,
                          "end": 332
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "kind": "init",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "a",
                                    "start": 344,
                                    "end": 345
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "generator": false,
                                    "async": false,
                                    "params": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "BinaryExpression",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "t",
                                              "start": 366,
                                              "end": 367
                                            },
                                            "operator": "+",
                                            "right": {
                                              "type": "Literal",
                                              "value": 1,
                                              "raw": "1",
                                              "start": 370,
                                              "end": 371
                                            },
                                            "start": 366,
                                            "end": 371
                                          },
                                          "start": 359,
                                          "end": 371
                                        }
                                      ],
                                      "start": 357,
                                      "end": 373
                                    },
                                    "expression": false,
                                    "start": 347,
                                    "end": 373
                                  },
                                  "method": false,
                                  "shorthand": false,
                                  "computed": false,
                                  "start": 344,
                                  "end": 373
                                }
                              ],
                              "start": 342,
                              "end": 375
                            },
                            "start": 335,
                            "end": 375
                          }
                        ],
                        "start": 333,
                        "end": 377
                      },
                      "expression": false,
                      "start": 319,
                      "end": 377
                    },
                    "start": 318,
                    "end": 379
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "start": 381,
                        "end": 382
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "value": 3,
                        "raw": "3",
                        "start": 385,
                        "end": 386
                      },
                      "start": 381,
                      "end": 386
                    }
                  ],
                  "optional": false,
                  "start": 318,
                  "end": 387
                },
                "property": {
                  "type": "Identifier",
                  "name": "a",
                  "start": 389,
                  "end": 390
                },
                "optional": false,
                "computed": false,
                "start": 318,
                "end": 390
              },
              "arguments": [],
              "optional": false,
              "start": 318,
              "end": 393
            },
            "start": 314,
            "end": 393
          },
          "start": 310,
          "end": 393
        }
      ],
      "start": 306,
      "end": 393
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 399,
          "end": 400
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 7,
          "raw": "7",
          "start": 405,
          "end": 406
        },
        "start": 399,
        "end": 406
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 422,
                "end": 434
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: Check Function Expression for automatic semicolon insertion",
                  "raw": "'#1: Check Function Expression for automatic semicolon insertion'",
                  "start": 435,
                  "end": 500
                }
              ],
              "start": 418,
              "end": 501
            },
            "start": 412,
            "end": 502
          }
        ],
        "start": 408,
        "end": 504
      },
      "alternate": null,
      "start": 395,
      "end": 504
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 505
}