{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f",
        "start": 311,
        "end": 312
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "t",
          "start": 313,
          "end": 314
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "t",
              "start": 327,
              "end": 328
            },
            "start": 320,
            "end": 329
          }
        ],
        "start": 316,
        "end": 331
      },
      "expression": false,
      "start": 302,
      "end": 331
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 336,
            "end": 337
          },
          "init": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 340,
              "end": 341
            },
            "operator": "+",
            "right": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "f",
                "start": 344,
                "end": 345
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "start": 347,
                    "end": 348
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "value": 3,
                    "raw": "3",
                    "start": 351,
                    "end": 352
                  },
                  "start": 347,
                  "end": 352
                }
              ],
              "optional": false,
              "start": 344,
              "end": 353
            },
            "start": 340,
            "end": 353
          },
          "start": 336,
          "end": 353
        }
      ],
      "start": 332,
      "end": 353
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 358,
          "end": 359
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 6,
          "raw": "6",
          "start": 364,
          "end": 365
        },
        "start": 358,
        "end": 365
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 381,
                "end": 393
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: Check Function Expression for automatic semicolon insertion",
                  "raw": "'#1: Check Function Expression for automatic semicolon insertion'",
                  "start": 394,
                  "end": 459
                }
              ],
              "start": 377,
              "end": 460
            },
            "start": 371,
            "end": 461
          }
        ],
        "start": 367,
        "end": 463
      },
      "alternate": null,
      "start": 354,
      "end": 463
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 464
}