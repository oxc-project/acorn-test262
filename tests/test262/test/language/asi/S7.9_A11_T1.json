{
  "type": "Program",
  "start": 0,
  "end": 430,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 299,
      "end": 309,
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 303,
          "end": 308,
          "id": {
            "type": "Identifier",
            "start": 303,
            "end": 304,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 307,
            "end": 308,
            "value": 0,
            "raw": "0"
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "start": 310,
      "end": 326,
      "test": {
        "type": "Literal",
        "start": 314,
        "end": 319,
        "value": false,
        "raw": "false"
      },
      "consequent": {
        "type": "ExpressionStatement",
        "start": 321,
        "end": 326,
        "expression": {
          "type": "AssignmentExpression",
          "start": 321,
          "end": 326,
          "operator": "=",
          "left": {
            "type": "Identifier",
            "start": 321,
            "end": 322,
            "name": "x"
          },
          "right": {
            "type": "Literal",
            "start": 325,
            "end": 326,
            "value": 1,
            "raw": "1"
          }
        }
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 327,
      "end": 429,
      "test": {
        "type": "BinaryExpression",
        "start": 331,
        "end": 338,
        "left": {
          "type": "Identifier",
          "start": 331,
          "end": 332,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 337,
          "end": 338,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 340,
        "end": 429,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 344,
            "end": 427,
            "argument": {
              "type": "NewExpression",
              "start": 350,
              "end": 426,
              "callee": {
                "type": "Identifier",
                "start": 354,
                "end": 366,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 367,
                  "end": 425,
                  "value": "#1: Check If Statement for automatic semicolon insertion",
                  "raw": "'#1: Check If Statement for automatic semicolon insertion'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}