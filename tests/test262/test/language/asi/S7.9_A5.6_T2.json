{
  "type": "Program",
  "start": 0,
  "end": 1110,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 489,
      "end": 502,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 493,
          "end": 496,
          "id": {
            "type": "Identifier",
            "start": 493,
            "end": 494,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 495,
            "end": 496,
            "value": 0,
            "raw": "0"
          }
        },
        {
          "type": "VariableDeclarator",
          "start": 498,
          "end": 501,
          "id": {
            "type": "Identifier",
            "start": 498,
            "end": 499,
            "name": "y"
          },
          "init": {
            "type": "Literal",
            "start": 500,
            "end": 501,
            "value": 2,
            "raw": "2"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 504,
      "end": 505,
      "expression": {
        "type": "Identifier",
        "start": 504,
        "end": 505,
        "name": "x"
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 506,
      "end": 510,
      "expression": {
        "type": "UpdateExpression",
        "start": 506,
        "end": 510,
        "operator": "--",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 509,
          "end": 510,
          "name": "y"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 601,
      "end": 724,
      "test": {
        "type": "BinaryExpression",
        "start": 605,
        "end": 620,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 605,
          "end": 612,
          "expression": {
            "type": "BinaryExpression",
            "start": 606,
            "end": 611,
            "left": {
              "type": "Identifier",
              "start": 606,
              "end": 607,
              "name": "x"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 610,
              "end": 611,
              "value": 0,
              "raw": "0"
            }
          }
        },
        "operator": "&",
        "right": {
          "type": "ParenthesizedExpression",
          "start": 613,
          "end": 620,
          "expression": {
            "type": "BinaryExpression",
            "start": 614,
            "end": 619,
            "left": {
              "type": "Identifier",
              "start": 614,
              "end": 615,
              "name": "y"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 618,
              "end": 619,
              "value": 1,
              "raw": "1"
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 622,
        "end": 724,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 625,
            "end": 722,
            "argument": {
              "type": "NewExpression",
              "start": 631,
              "end": 721,
              "callee": {
                "type": "Identifier",
                "start": 635,
                "end": 647,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 648,
                  "end": 720,
                  "value": "#1: Check Postfix Increment Operator for automatic semicolon insertion",
                  "raw": "'#1: Check Postfix Increment Operator for automatic semicolon insertion'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 808,
      "end": 809,
      "expression": {
        "type": "Identifier",
        "start": 808,
        "end": 809,
        "name": "x"
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 810,
      "end": 813,
      "expression": {
        "type": "UpdateExpression",
        "start": 810,
        "end": 813,
        "operator": "--",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 812,
          "end": 813,
          "name": "y"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 904,
      "end": 1027,
      "test": {
        "type": "BinaryExpression",
        "start": 908,
        "end": 923,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 908,
          "end": 915,
          "expression": {
            "type": "BinaryExpression",
            "start": 909,
            "end": 914,
            "left": {
              "type": "Identifier",
              "start": 909,
              "end": 910,
              "name": "x"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 913,
              "end": 914,
              "value": 0,
              "raw": "0"
            }
          }
        },
        "operator": "&",
        "right": {
          "type": "ParenthesizedExpression",
          "start": 916,
          "end": 923,
          "expression": {
            "type": "BinaryExpression",
            "start": 917,
            "end": 922,
            "left": {
              "type": "Identifier",
              "start": 917,
              "end": 918,
              "name": "y"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 921,
              "end": 922,
              "value": 0,
              "raw": "0"
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 925,
        "end": 1027,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 928,
            "end": 1025,
            "argument": {
              "type": "NewExpression",
              "start": 934,
              "end": 1024,
              "callee": {
                "type": "Identifier",
                "start": 938,
                "end": 950,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 951,
                  "end": 1023,
                  "value": "#2: Check Postfix Increment Operator for automatic semicolon insertion",
                  "raw": "'#2: Check Postfix Increment Operator for automatic semicolon insertion'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}