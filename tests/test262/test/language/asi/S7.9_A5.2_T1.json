{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 310,
            "end": 311
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 314,
            "end": 315
          },
          "start": 310,
          "end": 315
        }
      ],
      "start": 306,
      "end": 316
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 321,
            "end": 322
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 325,
            "end": 326
          },
          "start": 321,
          "end": 326
        }
      ],
      "start": 317,
      "end": 327
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "Identifier",
        "name": "x",
        "start": 328,
        "end": 329
      },
      "start": 328,
      "end": 329
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "name": "y",
          "start": 332,
          "end": 333
        },
        "start": 330,
        "end": 333
      },
      "start": 330,
      "end": 333
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 338,
          "end": 339
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 0,
          "raw": "0",
          "start": 344,
          "end": 345
        },
        "start": 338,
        "end": 345
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 361,
                "end": 373
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: Check Prefix Increment Operator for automatic semicolon insertion",
                  "raw": "'#1: Check Prefix Increment Operator for automatic semicolon insertion'",
                  "start": 374,
                  "end": 445
                }
              ],
              "start": 357,
              "end": 446
            },
            "start": 351,
            "end": 447
          }
        ],
        "start": 347,
        "end": 449
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "y",
                "start": 463,
                "end": 464
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 469,
                "end": 470
              },
              "start": 463,
              "end": 470
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 488,
                      "end": 500
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "#2: Check Prefix Increment Operator for automatic semicolon insertion",
                        "raw": "'#2: Check Prefix Increment Operator for automatic semicolon insertion'",
                        "start": 501,
                        "end": 572
                      }
                    ],
                    "start": 484,
                    "end": 573
                  },
                  "start": 478,
                  "end": 574
                }
              ],
              "start": 472,
              "end": 578
            },
            "alternate": null,
            "start": 459,
            "end": 578
          }
        ],
        "start": 455,
        "end": 580
      },
      "start": 334,
      "end": 580
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 581
}