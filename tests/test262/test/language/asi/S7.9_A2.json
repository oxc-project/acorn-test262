{
  "type": "Program",
  "body": [
    {
      "type": "LabeledStatement",
      "label": {
        "type": "Identifier",
        "name": "label1",
        "start": 281,
        "end": 287
      },
      "body": {
        "type": "ForStatement",
        "init": {
          "type": "VariableDeclaration",
          "kind": "var",
          "declarations": [
            {
              "type": "VariableDeclarator",
              "id": {
                "type": "Identifier",
                "name": "i",
                "start": 298,
                "end": 299
              },
              "init": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 302,
                "end": 303
              },
              "start": 298,
              "end": 303
            }
          ],
          "start": 294,
          "end": 303
        },
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "Identifier",
            "name": "i",
            "start": 305,
            "end": 306
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 310,
            "end": 311
          },
          "start": 305,
          "end": 311
        },
        "update": {
          "type": "UpdateExpression",
          "operator": "++",
          "prefix": false,
          "argument": {
            "type": "Identifier",
            "name": "i",
            "start": 313,
            "end": 314
          },
          "start": 313,
          "end": 316
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ForStatement",
              "init": {
                "type": "VariableDeclaration",
                "kind": "var",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "j",
                      "start": 331,
                      "end": 332
                    },
                    "init": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 335,
                      "end": 336
                    },
                    "start": 331,
                    "end": 336
                  }
                ],
                "start": 327,
                "end": 336
              },
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "j",
                  "start": 338,
                  "end": 339
                },
                "operator": "<=",
                "right": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 343,
                  "end": 344
                },
                "start": 338,
                "end": 344
              },
              "update": {
                "type": "UpdateExpression",
                "operator": "++",
                "prefix": false,
                "argument": {
                  "type": "Identifier",
                  "name": "j",
                  "start": 346,
                  "end": 347
                },
                "start": 346,
                "end": 349
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "BreakStatement",
                    "label": {
                      "type": "Identifier",
                      "name": "label1",
                      "start": 363,
                      "end": 369
                    },
                    "start": 357,
                    "end": 370
                  }
                ],
                "start": 351,
                "end": 374
              },
              "start": 322,
              "end": 374
            },
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 387,
                  "end": 399
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "#1: Check break statement for automatic semicolon insertion",
                    "raw": "'#1: Check break statement for automatic semicolon insertion'",
                    "start": 400,
                    "end": 461
                  }
                ],
                "start": 383,
                "end": 462
              },
              "start": 377,
              "end": 463
            }
          ],
          "start": 318,
          "end": 465
        },
        "start": 289,
        "end": 465
      },
      "start": 281,
      "end": 465
    },
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 481,
            "end": 487
          },
          "init": {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 490,
            "end": 495
          },
          "start": 481,
          "end": 495
        }
      ],
      "start": 477,
      "end": 496
    },
    {
      "type": "LabeledStatement",
      "label": {
        "type": "Identifier",
        "name": "label2",
        "start": 497,
        "end": 503
      },
      "body": {
        "type": "ForStatement",
        "init": {
          "type": "VariableDeclaration",
          "kind": "var",
          "declarations": [
            {
              "type": "VariableDeclarator",
              "id": {
                "type": "Identifier",
                "name": "i",
                "start": 514,
                "end": 515
              },
              "init": {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 518,
                "end": 519
              },
              "start": 514,
              "end": 519
            }
          ],
          "start": 510,
          "end": 519
        },
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "Identifier",
            "name": "i",
            "start": 521,
            "end": 522
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 526,
            "end": 527
          },
          "start": 521,
          "end": 527
        },
        "update": {
          "type": "UpdateExpression",
          "operator": "++",
          "prefix": false,
          "argument": {
            "type": "Identifier",
            "name": "i",
            "start": 529,
            "end": 530
          },
          "start": 529,
          "end": 532
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ForStatement",
              "init": {
                "type": "VariableDeclaration",
                "kind": "var",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "j",
                      "start": 547,
                      "end": 548
                    },
                    "init": {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 551,
                      "end": 552
                    },
                    "start": 547,
                    "end": 552
                  }
                ],
                "start": 543,
                "end": 552
              },
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "j",
                  "start": 554,
                  "end": 555
                },
                "operator": "<=",
                "right": {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 559,
                  "end": 560
                },
                "start": 554,
                "end": 560
              },
              "update": {
                "type": "UpdateExpression",
                "operator": "++",
                "prefix": false,
                "argument": {
                  "type": "Identifier",
                  "name": "j",
                  "start": 562,
                  "end": 563
                },
                "start": 562,
                "end": 565
              },
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "BreakStatement",
                    "label": null,
                    "start": 573,
                    "end": 578
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "Identifier",
                      "name": "label2",
                      "start": 583,
                      "end": 589
                    },
                    "start": 583,
                    "end": 590
                  }
                ],
                "start": 567,
                "end": 594
              },
              "start": 538,
              "end": 594
            },
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "result",
                  "start": 597,
                  "end": 603
                },
                "right": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 606,
                  "end": 610
                },
                "start": 597,
                "end": 610
              },
              "start": 597,
              "end": 611
            }
          ],
          "start": 534,
          "end": 613
        },
        "start": 505,
        "end": 613
      },
      "start": 497,
      "end": 613
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "result",
          "start": 619,
          "end": 625
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": true,
          "raw": "true",
          "start": 630,
          "end": 634
        },
        "start": 619,
        "end": 634
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 650,
                "end": 662
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#2: Check break statement for automatic semicolon insertion",
                  "raw": "'#2: Check break statement for automatic semicolon insertion'",
                  "start": 663,
                  "end": 724
                }
              ],
              "start": 646,
              "end": 725
            },
            "start": 640,
            "end": 726
          }
        ],
        "start": 636,
        "end": 728
      },
      "alternate": null,
      "start": 615,
      "end": 728
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 729
}