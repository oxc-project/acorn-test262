{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 302,
            "end": 303
          },
          "init": {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 306,
            "end": 307
          },
          "start": 302,
          "end": 307
        }
      ],
      "start": 298,
      "end": 308
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "Literal",
        "value": false,
        "raw": "false",
        "start": 313,
        "end": 318
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "x",
                    "start": 322,
                    "end": 323
                  },
                  "right": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 326,
                    "end": 327
                  },
                  "start": 322,
                  "end": 327
                },
                "start": 322,
                "end": 327
              }
            ],
            "start": 321,
            "end": 328
          },
          {
            "type": "EmptyStatement",
            "start": 328,
            "end": 329
          }
        ],
        "start": 320,
        "end": 330
      },
      "alternate": {
        "type": "ExpressionStatement",
        "expression": {
          "type": "AssignmentExpression",
          "operator": "=",
          "left": {
            "type": "Identifier",
            "name": "x",
            "start": 336,
            "end": 337
          },
          "right": {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 341,
              "end": 342
            },
            "prefix": true,
            "start": 340,
            "end": 342
          },
          "start": 336,
          "end": 342
        },
        "start": 336,
        "end": 342
      },
      "start": 309,
      "end": 342
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 347,
          "end": 348
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "operator": "-",
          "argument": {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 354,
            "end": 355
          },
          "prefix": true,
          "start": 353,
          "end": 355
        },
        "start": 347,
        "end": 355
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 371,
                "end": 383
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: Check If Statement for automatic semicolon insertion",
                  "raw": "'#1: Check If Statement for automatic semicolon insertion'",
                  "start": 384,
                  "end": 442
                }
              ],
              "start": 367,
              "end": 443
            },
            "start": 361,
            "end": 444
          }
        ],
        "start": 357,
        "end": 446
      },
      "alternate": null,
      "start": 343,
      "end": 446
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 447
}