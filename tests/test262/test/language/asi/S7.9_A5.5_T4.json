{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 305,
            "end": 306
          },
          "init": {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 309,
              "end": 310
            },
            "operator": "+",
            "right": {
              "type": "MemberExpression",
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "ParenthesizedExpression",
                  "expression": {
                    "type": "FunctionExpression",
                    "id": null,
                    "generator": false,
                    "async": false,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "t",
                        "start": 324,
                        "end": 325
                      }
                    ],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "kind": "init",
                                "key": {
                                  "type": "Identifier",
                                  "name": "a",
                                  "start": 335,
                                  "end": 336
                                },
                                "value": {
                                  "type": "Identifier",
                                  "name": "t",
                                  "start": 337,
                                  "end": 338
                                },
                                "method": false,
                                "shorthand": false,
                                "computed": false,
                                "start": 335,
                                "end": 338
                              }
                            ],
                            "start": 334,
                            "end": 340
                          },
                          "start": 327,
                          "end": 340
                        }
                      ],
                      "start": 326,
                      "end": 342
                    },
                    "expression": false,
                    "start": 314,
                    "end": 342
                  },
                  "start": 313,
                  "end": 343
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "Literal",
                      "value": 2,
                      "raw": "2",
                      "start": 345,
                      "end": 346
                    },
                    "operator": "+",
                    "right": {
                      "type": "Literal",
                      "value": 3,
                      "raw": "3",
                      "start": 349,
                      "end": 350
                    },
                    "start": 345,
                    "end": 350
                  }
                ],
                "optional": false,
                "start": 313,
                "end": 351
              },
              "property": {
                "type": "Identifier",
                "name": "a",
                "start": 353,
                "end": 354
              },
              "optional": false,
              "computed": false,
              "start": 313,
              "end": 354
            },
            "start": 309,
            "end": 354
          },
          "start": 305,
          "end": 354
        }
      ],
      "start": 301,
      "end": 354
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "x",
          "start": 360,
          "end": 361
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "value": 6,
          "raw": "6",
          "start": 366,
          "end": 367
        },
        "start": 360,
        "end": 367
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Test262Error",
                "start": 383,
                "end": 395
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "#1: Check Function Expression for automatic semicolon insertion",
                  "raw": "'#1: Check Function Expression for automatic semicolon insertion'",
                  "start": 396,
                  "end": 461
                }
              ],
              "start": 379,
              "end": 462
            },
            "start": 373,
            "end": 463
          }
        ],
        "start": 369,
        "end": 465
      },
      "alternate": null,
      "start": 356,
      "end": 465
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 466
}