{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "threw",
            "start": 225,
            "end": 230
          },
          "init": {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 233,
            "end": 238
          },
          "start": 225,
          "end": 238
        }
      ],
      "start": 221,
      "end": 239
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "assert",
                "start": 249,
                "end": 255
              },
              "arguments": [
                {
                  "type": "ObjectExpression",
                  "properties": [],
                  "start": 256,
                  "end": 258
                }
              ],
              "optional": false,
              "start": 249,
              "end": 259
            },
            "start": 249,
            "end": 260
          }
        ],
        "start": 245,
        "end": 262
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "err",
          "start": 269,
          "end": 272
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "threw",
                  "start": 278,
                  "end": 283
                },
                "right": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "start": 286,
                  "end": 290
                },
                "start": 278,
                "end": 290
              },
              "start": 278,
              "end": 291
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "err",
                    "start": 298,
                    "end": 301
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "constructor",
                    "start": 302,
                    "end": 313
                  },
                  "optional": false,
                  "computed": false,
                  "start": 298,
                  "end": 313
                },
                "operator": "!==",
                "right": {
                  "type": "Identifier",
                  "name": "Test262Error",
                  "start": 318,
                  "end": 330
                },
                "start": 298,
                "end": 330
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Error",
                        "start": 348,
                        "end": 353
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "BinaryExpression",
                            "left": {
                              "type": "Literal",
                              "value": "Expected a Test262Error, but a \"",
                              "raw": "'Expected a Test262Error, but a \"'",
                              "start": 361,
                              "end": 395
                            },
                            "operator": "+",
                            "right": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "MemberExpression",
                                "object": {
                                  "type": "Identifier",
                                  "name": "err",
                                  "start": 398,
                                  "end": 401
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "constructor",
                                  "start": 402,
                                  "end": 413
                                },
                                "optional": false,
                                "computed": false,
                                "start": 398,
                                "end": 413
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "name",
                                "start": 414,
                                "end": 418
                              },
                              "optional": false,
                              "computed": false,
                              "start": 398,
                              "end": 418
                            },
                            "start": 361,
                            "end": 418
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "value": "\" was thrown.",
                            "raw": "'\" was thrown.'",
                            "start": 427,
                            "end": 442
                          },
                          "start": 361,
                          "end": 442
                        }
                      ],
                      "start": 344,
                      "end": 448
                    },
                    "start": 338,
                    "end": 449
                  }
                ],
                "start": 332,
                "end": 453
              },
              "alternate": null,
              "start": 294,
              "end": 453
            }
          ],
          "start": 274,
          "end": 455
        },
        "start": 263,
        "end": 455
      },
      "finalizer": null,
      "start": 241,
      "end": 455
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "left": {
          "type": "Identifier",
          "name": "threw",
          "start": 461,
          "end": 466
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "value": false,
          "raw": "false",
          "start": 471,
          "end": 476
        },
        "start": 461,
        "end": 476
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Error",
                "start": 492,
                "end": 497
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "Expected a Test262Error, but no error was thrown.",
                  "raw": "'Expected a Test262Error, but no error was thrown.'",
                  "start": 498,
                  "end": 549
                }
              ],
              "start": 488,
              "end": 550
            },
            "start": 482,
            "end": 551
          }
        ],
        "start": 478,
        "end": 553
      },
      "alternate": null,
      "start": 457,
      "end": 553
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 554
}