{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "function(){[native code]}",
                "raw": "'function(){[native code]}'",
                "start": 342,
                "end": 369
              },
              {
                "type": "Literal",
                "value": "function(){ [native code] }",
                "raw": "'function(){ [native code] }'",
                "start": 373,
                "end": 402
              },
              {
                "type": "Literal",
                "value": "function ( ) { [ native code ] }",
                "raw": "'function ( ) { [ native code ] }'",
                "start": 406,
                "end": 440
              },
              {
                "type": "Literal",
                "value": "function a(){ [native code] }",
                "raw": "'function a(){ [native code] }'",
                "start": 444,
                "end": 475
              },
              {
                "type": "Literal",
                "value": "function a(){ /* } */ [native code] }",
                "raw": "'function a(){ /* } */ [native code] }'",
                "start": 479,
                "end": 518
              },
              {
                "type": "TemplateLiteral",
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "value": {
                      "raw": "function a() {\n    // test\n    [native code]\n    /* test */\n  }",
                      "cooked": "function a() {\n    // test\n    [native code]\n    /* test */\n  }"
                    },
                    "tail": true,
                    "start": 523,
                    "end": 586
                  }
                ],
                "expressions": [],
                "start": 522,
                "end": 587
              },
              {
                "type": "Literal",
                "value": "function(a, b = function() { []; }) { [native code] }",
                "raw": "'function(a, b = function() { []; }) { [native code] }'",
                "start": 591,
                "end": 646
              },
              {
                "type": "Literal",
                "value": "function [Symbol.xyz]() { [native code] }",
                "raw": "'function [Symbol.xyz]() { [native code] }'",
                "start": 650,
                "end": 693
              },
              {
                "type": "Literal",
                "value": "function [x[y][z[d]()]]() { [native code] }",
                "raw": "'function [x[y][z[d]()]]() { [native code] }'",
                "start": 697,
                "end": 742
              },
              {
                "type": "Literal",
                "value": "function [\"]\"] () { [native code] }",
                "raw": "'function [\"]\"] () { [native code] }'",
                "start": 746,
                "end": 783
              },
              {
                "type": "Literal",
                "value": "function [']'] () { [native code] }",
                "raw": "'function [\\']\\'] () { [native code] }'",
                "start": 787,
                "end": 826
              },
              {
                "type": "Literal",
                "value": "/* test */ function() { [native code] }",
                "raw": "'/* test */ function() { [native code] }'",
                "start": 830,
                "end": 871
              },
              {
                "type": "Literal",
                "value": "function() { [native code] } /* test */",
                "raw": "'function() { [native code] } /* test */'",
                "start": 875,
                "end": 916
              },
              {
                "type": "Literal",
                "value": "function() { [native code] } // test",
                "raw": "'function() { [native code] } // test'",
                "start": 920,
                "end": 958
              }
            ],
            "start": 338,
            "end": 961
          },
          "property": {
            "type": "Identifier",
            "name": "forEach",
            "start": 962,
            "end": 969
          },
          "optional": false,
          "computed": false,
          "start": 338,
          "end": 969
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "expression": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "s",
                "start": 971,
                "end": 972
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "validateNativeFunctionSource",
                            "start": 991,
                            "end": 1019
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "s",
                              "start": 1020,
                              "end": 1021
                            }
                          ],
                          "optional": false,
                          "start": 991,
                          "end": 1022
                        },
                        "start": 991,
                        "end": 1023
                      }
                    ],
                    "start": 985,
                    "end": 1027
                  },
                  "handler": {
                    "type": "CatchClause",
                    "param": {
                      "type": "Identifier",
                      "name": "unused",
                      "start": 1035,
                      "end": 1041
                    },
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ThrowStatement",
                          "argument": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Error",
                              "start": 1059,
                              "end": 1064
                            },
                            "arguments": [
                              {
                                "type": "TemplateLiteral",
                                "quasis": [
                                  {
                                    "type": "TemplateElement",
                                    "value": {
                                      "raw": "",
                                      "cooked": ""
                                    },
                                    "tail": false,
                                    "start": 1066,
                                    "end": 1066
                                  },
                                  {
                                    "type": "TemplateElement",
                                    "value": {
                                      "raw": " should pass",
                                      "cooked": " should pass"
                                    },
                                    "tail": true,
                                    "start": 1086,
                                    "end": 1098
                                  }
                                ],
                                "expressions": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "object": {
                                        "type": "Identifier",
                                        "name": "JSON",
                                        "start": 1068,
                                        "end": 1072
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "stringify",
                                        "start": 1073,
                                        "end": 1082
                                      },
                                      "optional": false,
                                      "computed": false,
                                      "start": 1068,
                                      "end": 1082
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "s",
                                        "start": 1083,
                                        "end": 1084
                                      }
                                    ],
                                    "optional": false,
                                    "start": 1068,
                                    "end": 1085
                                  }
                                ],
                                "start": 1065,
                                "end": 1099
                              }
                            ],
                            "start": 1055,
                            "end": 1100
                          },
                          "start": 1049,
                          "end": 1101
                        }
                      ],
                      "start": 1043,
                      "end": 1105
                    },
                    "start": 1028,
                    "end": 1105
                  },
                  "finalizer": null,
                  "start": 981,
                  "end": 1105
                }
              ],
              "start": 977,
              "end": 1107
            },
            "id": null,
            "generator": false,
            "start": 970,
            "end": 1107
          }
        ],
        "optional": false,
        "start": 338,
        "end": 1108
      },
      "start": 338,
      "end": 1109
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "native code",
                "raw": "'native code'",
                "start": 1115,
                "end": 1128
              },
              {
                "type": "Literal",
                "value": "function() {}",
                "raw": "'function() {}'",
                "start": 1132,
                "end": 1147
              },
              {
                "type": "Literal",
                "value": "function(){ \"native code\" }",
                "raw": "'function(){ \"native code\" }'",
                "start": 1151,
                "end": 1180
              },
              {
                "type": "Literal",
                "value": "function(){ [] native code }",
                "raw": "'function(){ [] native code }'",
                "start": 1184,
                "end": 1214
              },
              {
                "type": "Literal",
                "value": "function()) { [native code] }",
                "raw": "'function()) { [native code] }'",
                "start": 1218,
                "end": 1249
              },
              {
                "type": "Literal",
                "value": "function(() { [native code] }",
                "raw": "'function(() { [native code] }'",
                "start": 1253,
                "end": 1284
              },
              {
                "type": "Literal",
                "value": "function []] () { [native code] }",
                "raw": "'function []] () { [native code] }'",
                "start": 1288,
                "end": 1323
              },
              {
                "type": "Literal",
                "value": "function [[] () { [native code] }",
                "raw": "'function [[] () { [native code] }'",
                "start": 1327,
                "end": 1362
              },
              {
                "type": "Literal",
                "value": "function [\"]] () { [native code] }",
                "raw": "'function [\"]] () { [native code] }'",
                "start": 1366,
                "end": 1402
              },
              {
                "type": "Literal",
                "value": "function [']] () { [native code] }",
                "raw": "'function [\\']] () { [native code] }'",
                "start": 1406,
                "end": 1443
              },
              {
                "type": "Literal",
                "value": "function() { [native code] /* }",
                "raw": "'function() { [native code] /* }'",
                "start": 1447,
                "end": 1480
              },
              {
                "type": "Literal",
                "value": "// function() { [native code] }",
                "raw": "'// function() { [native code] }'",
                "start": 1484,
                "end": 1517
              }
            ],
            "start": 1111,
            "end": 1520
          },
          "property": {
            "type": "Identifier",
            "name": "forEach",
            "start": 1521,
            "end": 1528
          },
          "optional": false,
          "computed": false,
          "start": 1111,
          "end": 1528
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "expression": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "s",
                "start": 1530,
                "end": 1531
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "let",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "fail",
                        "start": 1544,
                        "end": 1548
                      },
                      "init": {
                        "type": "Literal",
                        "value": false,
                        "raw": "false",
                        "start": 1551,
                        "end": 1556
                      },
                      "start": 1544,
                      "end": 1556
                    }
                  ],
                  "start": 1540,
                  "end": 1557
                },
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "validateNativeFunctionSource",
                            "start": 1570,
                            "end": 1598
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "s",
                              "start": 1599,
                              "end": 1600
                            }
                          ],
                          "optional": false,
                          "start": 1570,
                          "end": 1601
                        },
                        "start": 1570,
                        "end": 1602
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "fail",
                            "start": 1607,
                            "end": 1611
                          },
                          "right": {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "start": 1614,
                            "end": 1618
                          },
                          "start": 1607,
                          "end": 1618
                        },
                        "start": 1607,
                        "end": 1619
                      }
                    ],
                    "start": 1564,
                    "end": 1623
                  },
                  "handler": {
                    "type": "CatchClause",
                    "param": {
                      "type": "Identifier",
                      "name": "unused",
                      "start": 1631,
                      "end": 1637
                    },
                    "body": {
                      "type": "BlockStatement",
                      "body": [],
                      "start": 1639,
                      "end": 1641
                    },
                    "start": 1624,
                    "end": 1641
                  },
                  "finalizer": null,
                  "start": 1560,
                  "end": 1641
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "Identifier",
                    "name": "fail",
                    "start": 1648,
                    "end": 1652
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Error",
                            "start": 1670,
                            "end": 1675
                          },
                          "arguments": [
                            {
                              "type": "TemplateLiteral",
                              "quasis": [
                                {
                                  "type": "TemplateElement",
                                  "value": {
                                    "raw": "",
                                    "cooked": ""
                                  },
                                  "tail": false,
                                  "start": 1677,
                                  "end": 1677
                                },
                                {
                                  "type": "TemplateElement",
                                  "value": {
                                    "raw": " should fail",
                                    "cooked": " should fail"
                                  },
                                  "tail": true,
                                  "start": 1697,
                                  "end": 1709
                                }
                              ],
                              "expressions": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "object": {
                                      "type": "Identifier",
                                      "name": "JSON",
                                      "start": 1679,
                                      "end": 1683
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "stringify",
                                      "start": 1684,
                                      "end": 1693
                                    },
                                    "optional": false,
                                    "computed": false,
                                    "start": 1679,
                                    "end": 1693
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "s",
                                      "start": 1694,
                                      "end": 1695
                                    }
                                  ],
                                  "optional": false,
                                  "start": 1679,
                                  "end": 1696
                                }
                              ],
                              "start": 1676,
                              "end": 1710
                            }
                          ],
                          "start": 1666,
                          "end": 1711
                        },
                        "start": 1660,
                        "end": 1712
                      }
                    ],
                    "start": 1654,
                    "end": 1716
                  },
                  "alternate": null,
                  "start": 1644,
                  "end": 1716
                }
              ],
              "start": 1536,
              "end": 1718
            },
            "id": null,
            "generator": false,
            "start": 1529,
            "end": 1718
          }
        ],
        "optional": false,
        "start": 1111,
        "end": 1719
      },
      "start": 1111,
      "end": 1720
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1721
}