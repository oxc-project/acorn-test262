{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "thrown",
            "start": 319,
            "end": 325
          },
          "init": null,
          "start": 319,
          "end": 325
        }
      ],
      "start": 315,
      "end": 326
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertRelativeDateMs",
          "start": 328,
          "end": 348
        },
        "arguments": [
          {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Date",
              "start": 353,
              "end": 357
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1970,
                "raw": "1970",
                "start": 358,
                "end": 362
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 364,
                "end": 365
              }
            ],
            "start": 349,
            "end": 366
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 368,
            "end": 369
          }
        ],
        "optional": false,
        "start": 328,
        "end": 370
      },
      "start": 328,
      "end": 371
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertRelativeDateMs",
          "start": 372,
          "end": 392
        },
        "arguments": [
          {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Date",
              "start": 397,
              "end": 401
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1970,
                "raw": "1970",
                "start": 402,
                "end": 406
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 408,
                "end": 409
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 411,
                "end": 412
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 414,
                "end": 415
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 417,
                "end": 418
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 420,
                "end": 421
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 423,
                "end": 424
              }
            ],
            "start": 393,
            "end": 425
          },
          {
            "type": "Literal",
            "value": 0,
            "raw": "0",
            "start": 427,
            "end": 428
          }
        ],
        "optional": false,
        "start": 372,
        "end": 429
      },
      "start": 372,
      "end": 430
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertRelativeDateMs",
          "start": 431,
          "end": 451
        },
        "arguments": [
          {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Date",
              "start": 456,
              "end": 460
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1970,
                "raw": "1970",
                "start": 461,
                "end": 465
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 467,
                "end": 468
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 470,
                "end": 471
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 473,
                "end": 474
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 476,
                "end": 477
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 479,
                "end": 480
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 482,
                "end": 483
              }
            ],
            "start": 452,
            "end": 484
          },
          {
            "type": "Literal",
            "value": 1,
            "raw": "1",
            "start": 486,
            "end": 487
          }
        ],
        "optional": false,
        "start": 431,
        "end": 488
      },
      "start": 431,
      "end": 489
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertRelativeDateMs",
          "start": 490,
          "end": 510
        },
        "arguments": [
          {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Date",
              "start": 515,
              "end": 519
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1970,
                "raw": "1970",
                "start": 520,
                "end": 524
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 526,
                "end": 527
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 529,
                "end": 530
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 532,
                "end": 533
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 535,
                "end": 536
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 538,
                "end": 539
              },
              {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 542,
                  "end": 543
                },
                "prefix": true,
                "start": 541,
                "end": 543
              }
            ],
            "start": 511,
            "end": 544
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": 1,
              "raw": "1",
              "start": 547,
              "end": 548
            },
            "prefix": true,
            "start": 546,
            "end": 548
          }
        ],
        "optional": false,
        "start": 490,
        "end": 549
      },
      "start": 490,
      "end": 550
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertRelativeDateMs",
          "start": 551,
          "end": 571
        },
        "arguments": [
          {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Date",
              "start": 576,
              "end": 580
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1970,
                "raw": "1970",
                "start": 581,
                "end": 585
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 587,
                "end": 588
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 590,
                "end": 591
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 593,
                "end": 594
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 596,
                "end": 597
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 599,
                "end": 600
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 602,
                "end": 603
              }
            ],
            "start": 572,
            "end": 604
          },
          {
            "type": "Literal",
            "value": 1000,
            "raw": "1000",
            "start": 606,
            "end": 610
          }
        ],
        "optional": false,
        "start": 551,
        "end": 611
      },
      "start": 551,
      "end": 612
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertRelativeDateMs",
          "start": 613,
          "end": 633
        },
        "arguments": [
          {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Date",
              "start": 638,
              "end": 642
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1970,
                "raw": "1970",
                "start": 643,
                "end": 647
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 649,
                "end": 650
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 652,
                "end": 653
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 655,
                "end": 656
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 658,
                "end": 659
              },
              {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 662,
                  "end": 663
                },
                "prefix": true,
                "start": 661,
                "end": 663
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 665,
                "end": 666
              }
            ],
            "start": 634,
            "end": 667
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": 1000,
              "raw": "1000",
              "start": 670,
              "end": 674
            },
            "prefix": true,
            "start": 669,
            "end": 674
          }
        ],
        "optional": false,
        "start": 613,
        "end": 675
      },
      "start": 613,
      "end": 676
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertRelativeDateMs",
          "start": 677,
          "end": 697
        },
        "arguments": [
          {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Date",
              "start": 702,
              "end": 706
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1970,
                "raw": "1970",
                "start": 707,
                "end": 711
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 713,
                "end": 714
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 716,
                "end": 717
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 719,
                "end": 720
              },
              {
                "type": "Literal",
                "value": 2,
                "raw": "2",
                "start": 722,
                "end": 723
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 725,
                "end": 726
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 728,
                "end": 729
              }
            ],
            "start": 698,
            "end": 730
          },
          {
            "type": "Literal",
            "value": 120000,
            "raw": "120000",
            "start": 732,
            "end": 738
          }
        ],
        "optional": false,
        "start": 677,
        "end": 739
      },
      "start": 677,
      "end": 740
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertRelativeDateMs",
          "start": 741,
          "end": 761
        },
        "arguments": [
          {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Date",
              "start": 766,
              "end": 770
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 1970,
                "raw": "1970",
                "start": 771,
                "end": 775
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 777,
                "end": 778
              },
              {
                "type": "Literal",
                "value": 1,
                "raw": "1",
                "start": 780,
                "end": 781
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 783,
                "end": 784
              },
              {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "start": 787,
                  "end": 788
                },
                "prefix": true,
                "start": 786,
                "end": 788
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 790,
                "end": 791
              },
              {
                "type": "Literal",
                "value": 0,
                "raw": "0",
                "start": 793,
                "end": 794
              }
            ],
            "start": 762,
            "end": 795
          },
          {
            "type": "UnaryExpression",
            "operator": "-",
            "argument": {
              "type": "Literal",
              "value": 120000,
              "raw": "120000",
              "start": 798,
              "end": 804
            },
            "prefix": true,
            "start": 797,
            "end": 804
          }
        ],
        "optional": false,
        "start": 741,
        "end": 805
      },
      "start": 741,
      "end": 806
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertRelativeDateMs",
          "start": 807,
          "end": 827
        },
        "arguments": [
          {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Date",
              "start": 832,
              "end": 836
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 2016,
                "raw": "2016",
                "start": 837,
                "end": 841
              },
              {
                "type": "Literal",
                "value": 3,
                "raw": "3",
                "start": 843,
                "end": 844
              },
              {
                "type": "Literal",
                "value": 12,
                "raw": "12",
                "start": 846,
                "end": 848
              },
              {
                "type": "Literal",
                "value": 13,
                "raw": "13",
                "start": 850,
                "end": 852
              },
              {
                "type": "Literal",
                "value": 21,
                "raw": "21",
                "start": 854,
                "end": 856
              },
              {
                "type": "Literal",
                "value": 23,
                "raw": "23",
                "start": 858,
                "end": 860
              },
              {
                "type": "Literal",
                "value": 24,
                "raw": "24",
                "start": 862,
                "end": 864
              }
            ],
            "start": 828,
            "end": 865
          },
          {
            "type": "Literal",
            "value": 1460467283024,
            "raw": "1460467283024",
            "start": 867,
            "end": 880
          }
        ],
        "optional": false,
        "start": 807,
        "end": 881
      },
      "start": 807,
      "end": 882
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "thrown",
          "start": 884,
          "end": 890
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 893,
          "end": 897
        },
        "start": 884,
        "end": 897
      },
      "start": 884,
      "end": 898
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "assertRelativeDateMs",
                "start": 907,
                "end": 927
              },
              "arguments": [
                {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Date",
                    "start": 932,
                    "end": 936
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 1,
                      "raw": "1",
                      "start": 937,
                      "end": 938
                    }
                  ],
                  "start": 928,
                  "end": 939
                },
                {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 941,
                  "end": 942
                }
              ],
              "optional": false,
              "start": 907,
              "end": 943
            },
            "start": 907,
            "end": 944
          }
        ],
        "start": 903,
        "end": 946
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "err",
          "start": 954,
          "end": 957
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "thrown",
                  "start": 963,
                  "end": 969
                },
                "right": {
                  "type": "Identifier",
                  "name": "err",
                  "start": 972,
                  "end": 975
                },
                "start": 963,
                "end": 975
              },
              "start": 963,
              "end": 976
            }
          ],
          "start": 959,
          "end": 978
        },
        "start": 947,
        "end": 978
      },
      "finalizer": null,
      "start": 899,
      "end": 978
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "Identifier",
          "name": "thrown",
          "start": 984,
          "end": 990
        },
        "prefix": true,
        "start": 983,
        "end": 990
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Error",
                "start": 1006,
                "end": 1011
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "Expected error, but no error was thrown.",
                  "raw": "'Expected error, but no error was thrown.'",
                  "start": 1012,
                  "end": 1054
                }
              ],
              "start": 1002,
              "end": 1055
            },
            "start": 996,
            "end": 1056
          }
        ],
        "start": 992,
        "end": 1058
      },
      "alternate": {
        "type": "IfStatement",
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "thrown",
              "start": 1068,
              "end": 1074
            },
            "property": {
              "type": "Identifier",
              "name": "constructor",
              "start": 1075,
              "end": 1086
            },
            "optional": false,
            "computed": false,
            "start": 1068,
            "end": 1086
          },
          "operator": "!==",
          "right": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 1091,
            "end": 1103
          },
          "start": 1068,
          "end": 1103
        },
        "consequent": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Error",
                  "start": 1119,
                  "end": 1124
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "Expected error of type Test262Error.",
                    "raw": "'Expected error of type Test262Error.'",
                    "start": 1125,
                    "end": 1163
                  }
                ],
                "start": 1115,
                "end": 1164
              },
              "start": 1109,
              "end": 1165
            }
          ],
          "start": 1105,
          "end": 1167
        },
        "alternate": null,
        "start": 1064,
        "end": 1167
      },
      "start": 979,
      "end": 1167
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "thrown",
          "start": 1169,
          "end": 1175
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 1178,
          "end": 1182
        },
        "start": 1169,
        "end": 1182
      },
      "start": 1169,
      "end": 1183
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "assertRelativeDateMs",
                "start": 1192,
                "end": 1212
              },
              "arguments": [
                {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Date",
                    "start": 1217,
                    "end": 1221
                  },
                  "arguments": [
                    {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "start": 1223,
                        "end": 1224
                      },
                      "prefix": true,
                      "start": 1222,
                      "end": 1224
                    }
                  ],
                  "start": 1213,
                  "end": 1225
                },
                {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "start": 1227,
                  "end": 1228
                }
              ],
              "optional": false,
              "start": 1192,
              "end": 1229
            },
            "start": 1192,
            "end": 1230
          }
        ],
        "start": 1188,
        "end": 1232
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "err",
          "start": 1240,
          "end": 1243
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "thrown",
                  "start": 1249,
                  "end": 1255
                },
                "right": {
                  "type": "Identifier",
                  "name": "err",
                  "start": 1258,
                  "end": 1261
                },
                "start": 1249,
                "end": 1261
              },
              "start": 1249,
              "end": 1262
            }
          ],
          "start": 1245,
          "end": 1264
        },
        "start": 1233,
        "end": 1264
      },
      "finalizer": null,
      "start": 1184,
      "end": 1264
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "Identifier",
          "name": "thrown",
          "start": 1270,
          "end": 1276
        },
        "prefix": true,
        "start": 1269,
        "end": 1276
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Error",
                "start": 1292,
                "end": 1297
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "Expected error, but no error was thrown.",
                  "raw": "'Expected error, but no error was thrown.'",
                  "start": 1298,
                  "end": 1340
                }
              ],
              "start": 1288,
              "end": 1341
            },
            "start": 1282,
            "end": 1342
          }
        ],
        "start": 1278,
        "end": 1344
      },
      "alternate": {
        "type": "IfStatement",
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "thrown",
              "start": 1354,
              "end": 1360
            },
            "property": {
              "type": "Identifier",
              "name": "constructor",
              "start": 1361,
              "end": 1372
            },
            "optional": false,
            "computed": false,
            "start": 1354,
            "end": 1372
          },
          "operator": "!==",
          "right": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 1377,
            "end": 1389
          },
          "start": 1354,
          "end": 1389
        },
        "consequent": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Error",
                  "start": 1405,
                  "end": 1410
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "Expected error of type Test262Error.",
                    "raw": "'Expected error of type Test262Error.'",
                    "start": 1411,
                    "end": 1449
                  }
                ],
                "start": 1401,
                "end": 1450
              },
              "start": 1395,
              "end": 1451
            }
          ],
          "start": 1391,
          "end": 1453
        },
        "alternate": null,
        "start": 1350,
        "end": 1453
      },
      "start": 1265,
      "end": 1453
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "thrown",
          "start": 1455,
          "end": 1461
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 1464,
          "end": 1468
        },
        "start": 1455,
        "end": 1468
      },
      "start": 1455,
      "end": 1469
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "assertRelativeDateMs",
                "start": 1478,
                "end": 1498
              },
              "arguments": [
                {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Date",
                    "start": 1503,
                    "end": 1507
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 1970,
                      "raw": "1970",
                      "start": 1508,
                      "end": 1512
                    },
                    {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 1514,
                      "end": 1515
                    }
                  ],
                  "start": 1499,
                  "end": 1516
                },
                {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "start": 1518,
                  "end": 1519
                }
              ],
              "optional": false,
              "start": 1478,
              "end": 1520
            },
            "start": 1478,
            "end": 1521
          }
        ],
        "start": 1474,
        "end": 1523
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "err",
          "start": 1531,
          "end": 1534
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "thrown",
                  "start": 1540,
                  "end": 1546
                },
                "right": {
                  "type": "Identifier",
                  "name": "err",
                  "start": 1549,
                  "end": 1552
                },
                "start": 1540,
                "end": 1552
              },
              "start": 1540,
              "end": 1553
            }
          ],
          "start": 1536,
          "end": 1555
        },
        "start": 1524,
        "end": 1555
      },
      "finalizer": null,
      "start": 1470,
      "end": 1555
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "Identifier",
          "name": "thrown",
          "start": 1561,
          "end": 1567
        },
        "prefix": true,
        "start": 1560,
        "end": 1567
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Error",
                "start": 1583,
                "end": 1588
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "Expected error, but no error was thrown.",
                  "raw": "'Expected error, but no error was thrown.'",
                  "start": 1589,
                  "end": 1631
                }
              ],
              "start": 1579,
              "end": 1632
            },
            "start": 1573,
            "end": 1633
          }
        ],
        "start": 1569,
        "end": 1635
      },
      "alternate": {
        "type": "IfStatement",
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "thrown",
              "start": 1645,
              "end": 1651
            },
            "property": {
              "type": "Identifier",
              "name": "constructor",
              "start": 1652,
              "end": 1663
            },
            "optional": false,
            "computed": false,
            "start": 1645,
            "end": 1663
          },
          "operator": "!==",
          "right": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 1668,
            "end": 1680
          },
          "start": 1645,
          "end": 1680
        },
        "consequent": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Error",
                  "start": 1696,
                  "end": 1701
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "Expected error of type Test262Error.",
                    "raw": "'Expected error of type Test262Error.'",
                    "start": 1702,
                    "end": 1740
                  }
                ],
                "start": 1692,
                "end": 1741
              },
              "start": 1686,
              "end": 1742
            }
          ],
          "start": 1682,
          "end": 1744
        },
        "alternate": null,
        "start": 1641,
        "end": 1744
      },
      "start": 1556,
      "end": 1744
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "thrown",
          "start": 1746,
          "end": 1752
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 1755,
          "end": 1759
        },
        "start": 1746,
        "end": 1759
      },
      "start": 1746,
      "end": 1760
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "assertRelativeDateMs",
                "start": 1769,
                "end": 1789
              },
              "arguments": [
                {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Date",
                    "start": 1794,
                    "end": 1798
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 1970,
                      "raw": "1970",
                      "start": 1799,
                      "end": 1803
                    },
                    {
                      "type": "Literal",
                      "value": 0,
                      "raw": "0",
                      "start": 1805,
                      "end": 1806
                    }
                  ],
                  "start": 1790,
                  "end": 1807
                },
                {
                  "type": "UnaryExpression",
                  "operator": "-",
                  "argument": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "start": 1810,
                    "end": 1811
                  },
                  "prefix": true,
                  "start": 1809,
                  "end": 1811
                }
              ],
              "optional": false,
              "start": 1769,
              "end": 1812
            },
            "start": 1769,
            "end": 1813
          }
        ],
        "start": 1765,
        "end": 1815
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "err",
          "start": 1823,
          "end": 1826
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "thrown",
                  "start": 1832,
                  "end": 1838
                },
                "right": {
                  "type": "Identifier",
                  "name": "err",
                  "start": 1841,
                  "end": 1844
                },
                "start": 1832,
                "end": 1844
              },
              "start": 1832,
              "end": 1845
            }
          ],
          "start": 1828,
          "end": 1847
        },
        "start": 1816,
        "end": 1847
      },
      "finalizer": null,
      "start": 1761,
      "end": 1847
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "Identifier",
          "name": "thrown",
          "start": 1853,
          "end": 1859
        },
        "prefix": true,
        "start": 1852,
        "end": 1859
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Error",
                "start": 1875,
                "end": 1880
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "Expected error, but no error was thrown.",
                  "raw": "'Expected error, but no error was thrown.'",
                  "start": 1881,
                  "end": 1923
                }
              ],
              "start": 1871,
              "end": 1924
            },
            "start": 1865,
            "end": 1925
          }
        ],
        "start": 1861,
        "end": 1927
      },
      "alternate": {
        "type": "IfStatement",
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "thrown",
              "start": 1937,
              "end": 1943
            },
            "property": {
              "type": "Identifier",
              "name": "constructor",
              "start": 1944,
              "end": 1955
            },
            "optional": false,
            "computed": false,
            "start": 1937,
            "end": 1955
          },
          "operator": "!==",
          "right": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 1960,
            "end": 1972
          },
          "start": 1937,
          "end": 1972
        },
        "consequent": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Error",
                  "start": 1988,
                  "end": 1993
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "Expected error of type Test262Error.",
                    "raw": "'Expected error of type Test262Error.'",
                    "start": 1994,
                    "end": 2032
                  }
                ],
                "start": 1984,
                "end": 2033
              },
              "start": 1978,
              "end": 2034
            }
          ],
          "start": 1974,
          "end": 2036
        },
        "alternate": null,
        "start": 1933,
        "end": 2036
      },
      "start": 1848,
      "end": 2036
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "thrown",
          "start": 2038,
          "end": 2044
        },
        "right": {
          "type": "Literal",
          "value": null,
          "raw": "null",
          "start": 2047,
          "end": 2051
        },
        "start": 2038,
        "end": 2051
      },
      "start": 2038,
      "end": 2052
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "assertRelativeDateMs",
                "start": 2061,
                "end": 2081
              },
              "arguments": [
                {
                  "type": "NewExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "Date",
                    "start": 2086,
                    "end": 2090
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "invalid",
                      "raw": "'invalid'",
                      "start": 2091,
                      "end": 2100
                    }
                  ],
                  "start": 2082,
                  "end": 2101
                },
                {
                  "type": "Identifier",
                  "name": "NaN",
                  "start": 2103,
                  "end": 2106
                }
              ],
              "optional": false,
              "start": 2061,
              "end": 2107
            },
            "start": 2061,
            "end": 2108
          }
        ],
        "start": 2057,
        "end": 2110
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "err",
          "start": 2118,
          "end": 2121
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "thrown",
                  "start": 2127,
                  "end": 2133
                },
                "right": {
                  "type": "Identifier",
                  "name": "err",
                  "start": 2136,
                  "end": 2139
                },
                "start": 2127,
                "end": 2139
              },
              "start": 2127,
              "end": 2140
            }
          ],
          "start": 2123,
          "end": 2142
        },
        "start": 2111,
        "end": 2142
      },
      "finalizer": null,
      "start": 2053,
      "end": 2142
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "Identifier",
          "name": "thrown",
          "start": 2148,
          "end": 2154
        },
        "prefix": true,
        "start": 2147,
        "end": 2154
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Error",
                "start": 2170,
                "end": 2175
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "Expected error, but no error was thrown.",
                  "raw": "'Expected error, but no error was thrown.'",
                  "start": 2176,
                  "end": 2218
                }
              ],
              "start": 2166,
              "end": 2219
            },
            "start": 2160,
            "end": 2220
          }
        ],
        "start": 2156,
        "end": 2222
      },
      "alternate": {
        "type": "IfStatement",
        "test": {
          "type": "BinaryExpression",
          "left": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "thrown",
              "start": 2232,
              "end": 2238
            },
            "property": {
              "type": "Identifier",
              "name": "constructor",
              "start": 2239,
              "end": 2250
            },
            "optional": false,
            "computed": false,
            "start": 2232,
            "end": 2250
          },
          "operator": "!==",
          "right": {
            "type": "Identifier",
            "name": "Test262Error",
            "start": 2255,
            "end": 2267
          },
          "start": 2232,
          "end": 2267
        },
        "consequent": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Error",
                  "start": 2283,
                  "end": 2288
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "Expected error of type Test262Error.",
                    "raw": "'Expected error of type Test262Error.'",
                    "start": 2289,
                    "end": 2327
                  }
                ],
                "start": 2279,
                "end": 2328
              },
              "start": 2273,
              "end": 2329
            }
          ],
          "start": 2269,
          "end": 2331
        },
        "alternate": null,
        "start": 2228,
        "end": 2331
      },
      "start": 2143,
      "end": 2331
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 2332
}