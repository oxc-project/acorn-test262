{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "traps",
            "start": 324,
            "end": 329
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "allowProxyTraps",
              "start": 332,
              "end": 347
            },
            "arguments": [],
            "optional": false,
            "start": 332,
            "end": 349
          },
          "start": 324,
          "end": 349
        }
      ],
      "start": 320,
      "end": 350
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "assertTrapThrows",
        "start": 361,
        "end": 377
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "trap",
          "start": 378,
          "end": 382
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "UnaryExpression",
                "operator": "typeof",
                "argument": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "traps",
                    "start": 401,
                    "end": 406
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "trap",
                    "start": 407,
                    "end": 411
                  },
                  "optional": false,
                  "computed": true,
                  "start": 401,
                  "end": 412
                },
                "prefix": true,
                "start": 394,
                "end": 412
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "value": "function",
                "raw": "'function'",
                "start": 417,
                "end": 427
              },
              "start": 394,
              "end": 427
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 449,
                      "end": 461
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "trap ",
                            "raw": "'trap '",
                            "start": 462,
                            "end": 469
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "trap",
                            "start": 472,
                            "end": 476
                          },
                          "start": 462,
                          "end": 476
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": " is not a function",
                          "raw": "' is not a function'",
                          "start": 479,
                          "end": 499
                        },
                        "start": 462,
                        "end": 499
                      }
                    ],
                    "start": 445,
                    "end": 500
                  },
                  "start": 439,
                  "end": 501
                }
              ],
              "start": 429,
              "end": 507
            },
            "alternate": null,
            "start": 390,
            "end": 507
          },
          {
            "type": "VariableDeclaration",
            "kind": "var",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "failedToThrow",
                  "start": 516,
                  "end": 529
                },
                "init": {
                  "type": "Literal",
                  "value": false,
                  "raw": "false",
                  "start": 532,
                  "end": 537
                },
                "start": 516,
                "end": 537
              }
            ],
            "start": 512,
            "end": 538
          },
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "traps",
                        "start": 557,
                        "end": 562
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "trap",
                        "start": 563,
                        "end": 567
                      },
                      "optional": false,
                      "computed": true,
                      "start": 557,
                      "end": 568
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 557,
                    "end": 570
                  },
                  "start": 557,
                  "end": 571
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "failedToThrow",
                      "start": 580,
                      "end": 593
                    },
                    "right": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "start": 596,
                      "end": 600
                    },
                    "start": 580,
                    "end": 600
                  },
                  "start": 580,
                  "end": 601
                }
              ],
              "start": 547,
              "end": 607
            },
            "handler": {
              "type": "CatchClause",
              "param": {
                "type": "Identifier",
                "name": "e",
                "start": 615,
                "end": 616
              },
              "body": {
                "type": "BlockStatement",
                "body": [],
                "start": 618,
                "end": 620
              },
              "start": 608,
              "end": 620
            },
            "finalizer": null,
            "start": 543,
            "end": 620
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "Identifier",
              "name": "failedToThrow",
              "start": 629,
              "end": 642
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Test262Error",
                      "start": 664,
                      "end": 676
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "trap ",
                            "raw": "'trap '",
                            "start": 677,
                            "end": 684
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "trap",
                            "start": 687,
                            "end": 691
                          },
                          "start": 677,
                          "end": 691
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": " did not throw an error",
                          "raw": "' did not throw an error'",
                          "start": 694,
                          "end": 719
                        },
                        "start": 677,
                        "end": 719
                      }
                    ],
                    "start": 660,
                    "end": 720
                  },
                  "start": 654,
                  "end": 721
                }
              ],
              "start": 644,
              "end": 727
            },
            "alternate": null,
            "start": 625,
            "end": 727
          }
        ],
        "start": 384,
        "end": 729
      },
      "expression": false,
      "start": 352,
      "end": 729
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 731,
          "end": 747
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "getPrototypeOf",
            "raw": "'getPrototypeOf'",
            "start": 748,
            "end": 764
          }
        ],
        "optional": false,
        "start": 731,
        "end": 765
      },
      "start": 731,
      "end": 766
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 767,
          "end": 783
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "setPrototypeOf",
            "raw": "'setPrototypeOf'",
            "start": 784,
            "end": 800
          }
        ],
        "optional": false,
        "start": 767,
        "end": 801
      },
      "start": 767,
      "end": 802
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 803,
          "end": 819
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "isExtensible",
            "raw": "'isExtensible'",
            "start": 820,
            "end": 834
          }
        ],
        "optional": false,
        "start": 803,
        "end": 835
      },
      "start": 803,
      "end": 836
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 837,
          "end": 853
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "preventExtensions",
            "raw": "'preventExtensions'",
            "start": 854,
            "end": 873
          }
        ],
        "optional": false,
        "start": 837,
        "end": 874
      },
      "start": 837,
      "end": 875
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 876,
          "end": 892
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "getOwnPropertyDescriptor",
            "raw": "'getOwnPropertyDescriptor'",
            "start": 893,
            "end": 919
          }
        ],
        "optional": false,
        "start": 876,
        "end": 920
      },
      "start": 876,
      "end": 921
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 922,
          "end": 938
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "has",
            "raw": "'has'",
            "start": 939,
            "end": 944
          }
        ],
        "optional": false,
        "start": 922,
        "end": 945
      },
      "start": 922,
      "end": 946
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 947,
          "end": 963
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "get",
            "raw": "'get'",
            "start": 964,
            "end": 969
          }
        ],
        "optional": false,
        "start": 947,
        "end": 970
      },
      "start": 947,
      "end": 971
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 972,
          "end": 988
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "set",
            "raw": "'set'",
            "start": 989,
            "end": 994
          }
        ],
        "optional": false,
        "start": 972,
        "end": 995
      },
      "start": 972,
      "end": 996
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 997,
          "end": 1013
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "deleteProperty",
            "raw": "'deleteProperty'",
            "start": 1014,
            "end": 1030
          }
        ],
        "optional": false,
        "start": 997,
        "end": 1031
      },
      "start": 997,
      "end": 1032
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 1033,
          "end": 1049
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "defineProperty",
            "raw": "'defineProperty'",
            "start": 1050,
            "end": 1066
          }
        ],
        "optional": false,
        "start": 1033,
        "end": 1067
      },
      "start": 1033,
      "end": 1068
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 1069,
          "end": 1085
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "enumerate",
            "raw": "'enumerate'",
            "start": 1086,
            "end": 1097
          }
        ],
        "optional": false,
        "start": 1069,
        "end": 1098
      },
      "start": 1069,
      "end": 1099
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 1100,
          "end": 1116
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ownKeys",
            "raw": "'ownKeys'",
            "start": 1117,
            "end": 1126
          }
        ],
        "optional": false,
        "start": 1100,
        "end": 1127
      },
      "start": 1100,
      "end": 1128
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 1129,
          "end": 1145
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "apply",
            "raw": "'apply'",
            "start": 1146,
            "end": 1153
          }
        ],
        "optional": false,
        "start": 1129,
        "end": 1154
      },
      "start": 1129,
      "end": 1155
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assertTrapThrows",
          "start": 1156,
          "end": 1172
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "construct",
            "raw": "'construct'",
            "start": 1173,
            "end": 1184
          }
        ],
        "optional": false,
        "start": 1156,
        "end": 1185
      },
      "start": 1156,
      "end": 1186
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1187
}