{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "formatFn",
            "start": 485,
            "end": 493
          },
          "init": {
            "type": "MemberExpression",
            "object": {
              "type": "NewExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Intl",
                  "start": 500,
                  "end": 504
                },
                "property": {
                  "type": "Identifier",
                  "name": "DateTimeFormat",
                  "start": 505,
                  "end": 519
                },
                "optional": false,
                "computed": false,
                "start": 500,
                "end": 519
              },
              "arguments": [],
              "start": 496,
              "end": 521
            },
            "property": {
              "type": "Identifier",
              "name": "format",
              "start": 522,
              "end": 528
            },
            "optional": false,
            "computed": false,
            "start": 496,
            "end": 528
          },
          "start": 485,
          "end": 528
        }
      ],
      "start": 481,
      "end": 529
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 531,
            "end": 537
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 538,
            "end": 547
          },
          "optional": false,
          "computed": false,
          "start": 531,
          "end": 547
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Object",
                    "start": 548,
                    "end": 554
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "prototype",
                    "start": 555,
                    "end": 564
                  },
                  "optional": false,
                  "computed": false,
                  "start": 548,
                  "end": 564
                },
                "property": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 565,
                  "end": 573
                },
                "optional": false,
                "computed": false,
                "start": 548,
                "end": 573
              },
              "property": {
                "type": "Identifier",
                "name": "call",
                "start": 574,
                "end": 578
              },
              "optional": false,
              "computed": false,
              "start": 548,
              "end": 578
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "formatFn",
                "start": 579,
                "end": 587
              }
            ],
            "optional": false,
            "start": 548,
            "end": 588
          },
          {
            "type": "Literal",
            "value": "[object Function]",
            "raw": "\"[object Function]\"",
            "start": 590,
            "end": 609
          },
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "The [[Class]] internal property of a built-in function must be ",
              "raw": "\"The [[Class]] internal property of a built-in function must be \"",
              "start": 628,
              "end": 693
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "\"Function\".",
              "raw": "\"\\\"Function\\\".\"",
              "start": 713,
              "end": 728
            },
            "start": 628,
            "end": 728
          }
        ],
        "optional": false,
        "start": 531,
        "end": 729
      },
      "start": 531,
      "end": 730
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 732,
          "end": 738
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Object",
                "start": 739,
                "end": 745
              },
              "property": {
                "type": "Identifier",
                "name": "isExtensible",
                "start": 746,
                "end": 758
              },
              "optional": false,
              "computed": false,
              "start": 739,
              "end": 758
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "formatFn",
                "start": 759,
                "end": 767
              }
            ],
            "optional": false,
            "start": 739,
            "end": 768
          },
          {
            "type": "Literal",
            "value": "Built-in objects must be extensible.",
            "raw": "\"Built-in objects must be extensible.\"",
            "start": 777,
            "end": 815
          }
        ],
        "optional": false,
        "start": 732,
        "end": 816
      },
      "start": 732,
      "end": 817
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 819,
            "end": 825
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 826,
            "end": 835
          },
          "optional": false,
          "computed": false,
          "start": 819,
          "end": 835
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Object",
                "start": 836,
                "end": 842
              },
              "property": {
                "type": "Identifier",
                "name": "getPrototypeOf",
                "start": 843,
                "end": 857
              },
              "optional": false,
              "computed": false,
              "start": 836,
              "end": 857
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "formatFn",
                "start": 858,
                "end": 866
              }
            ],
            "optional": false,
            "start": 836,
            "end": 867
          },
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Function",
              "start": 869,
              "end": 877
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 878,
              "end": 887
            },
            "optional": false,
            "computed": false,
            "start": 869,
            "end": 887
          }
        ],
        "optional": false,
        "start": 819,
        "end": 888
      },
      "start": 819,
      "end": 889
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 891,
            "end": 897
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 898,
            "end": 907
          },
          "optional": false,
          "computed": false,
          "start": 891,
          "end": 907
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "formatFn",
                "start": 908,
                "end": 916
              },
              "property": {
                "type": "Identifier",
                "name": "hasOwnProperty",
                "start": 917,
                "end": 931
              },
              "optional": false,
              "computed": false,
              "start": 908,
              "end": 931
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "prototype",
                "raw": "\"prototype\"",
                "start": 932,
                "end": 943
              }
            ],
            "optional": false,
            "start": 908,
            "end": 944
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 946,
            "end": 951
          },
          {
            "type": "Literal",
            "value": "Built-in functions that aren't constructors must not have a prototype property.",
            "raw": "\"Built-in functions that aren't constructors must not have a prototype property.\"",
            "start": 970,
            "end": 1051
          }
        ],
        "optional": false,
        "start": 891,
        "end": 1052
      },
      "start": 891,
      "end": 1053
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1055,
            "end": 1061
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1062,
            "end": 1071
          },
          "optional": false,
          "computed": false,
          "start": 1055,
          "end": 1071
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "isConstructor",
              "start": 1072,
              "end": 1085
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "formatFn",
                "start": 1086,
                "end": 1094
              }
            ],
            "optional": false,
            "start": 1072,
            "end": 1095
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 1097,
            "end": 1102
          },
          {
            "type": "Literal",
            "value": "Built-in functions don't implement [[Construct]] unless explicitly specified.",
            "raw": "\"Built-in functions don't implement [[Construct]] unless explicitly specified.\"",
            "start": 1121,
            "end": 1200
          }
        ],
        "optional": false,
        "start": 1055,
        "end": 1201
      },
      "start": 1055,
      "end": 1202
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1203
}