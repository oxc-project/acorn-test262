{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "formatFn",
            "start": 483,
            "end": 491
          },
          "init": {
            "type": "MemberExpression",
            "object": {
              "type": "NewExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Intl",
                  "start": 498,
                  "end": 502
                },
                "property": {
                  "type": "Identifier",
                  "name": "NumberFormat",
                  "start": 503,
                  "end": 515
                },
                "optional": false,
                "computed": false,
                "start": 498,
                "end": 515
              },
              "arguments": [],
              "start": 494,
              "end": 517
            },
            "property": {
              "type": "Identifier",
              "name": "format",
              "start": 518,
              "end": 524
            },
            "optional": false,
            "computed": false,
            "start": 494,
            "end": 524
          },
          "start": 483,
          "end": 524
        }
      ],
      "start": 479,
      "end": 525
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 527,
            "end": 533
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 534,
            "end": 543
          },
          "optional": false,
          "computed": false,
          "start": 527,
          "end": 543
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "MemberExpression",
                "object": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Object",
                    "start": 544,
                    "end": 550
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "prototype",
                    "start": 551,
                    "end": 560
                  },
                  "optional": false,
                  "computed": false,
                  "start": 544,
                  "end": 560
                },
                "property": {
                  "type": "Identifier",
                  "name": "toString",
                  "start": 561,
                  "end": 569
                },
                "optional": false,
                "computed": false,
                "start": 544,
                "end": 569
              },
              "property": {
                "type": "Identifier",
                "name": "call",
                "start": 570,
                "end": 574
              },
              "optional": false,
              "computed": false,
              "start": 544,
              "end": 574
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "formatFn",
                "start": 575,
                "end": 583
              }
            ],
            "optional": false,
            "start": 544,
            "end": 584
          },
          {
            "type": "Literal",
            "value": "[object Function]",
            "raw": "\"[object Function]\"",
            "start": 586,
            "end": 605
          },
          {
            "type": "BinaryExpression",
            "left": {
              "type": "Literal",
              "value": "The [[Class]] internal property of a built-in function must be ",
              "raw": "\"The [[Class]] internal property of a built-in function must be \"",
              "start": 624,
              "end": 689
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "value": "\"Function\".",
              "raw": "\"\\\"Function\\\".\"",
              "start": 709,
              "end": 724
            },
            "start": 624,
            "end": 724
          }
        ],
        "optional": false,
        "start": 527,
        "end": 725
      },
      "start": 527,
      "end": 726
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 728,
          "end": 734
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Object",
                "start": 735,
                "end": 741
              },
              "property": {
                "type": "Identifier",
                "name": "isExtensible",
                "start": 742,
                "end": 754
              },
              "optional": false,
              "computed": false,
              "start": 735,
              "end": 754
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "formatFn",
                "start": 755,
                "end": 763
              }
            ],
            "optional": false,
            "start": 735,
            "end": 764
          },
          {
            "type": "Literal",
            "value": "Built-in objects must be extensible.",
            "raw": "\"Built-in objects must be extensible.\"",
            "start": 773,
            "end": 811
          }
        ],
        "optional": false,
        "start": 728,
        "end": 812
      },
      "start": 728,
      "end": 813
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 815,
            "end": 821
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 822,
            "end": 831
          },
          "optional": false,
          "computed": false,
          "start": 815,
          "end": 831
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Object",
                "start": 832,
                "end": 838
              },
              "property": {
                "type": "Identifier",
                "name": "getPrototypeOf",
                "start": 839,
                "end": 853
              },
              "optional": false,
              "computed": false,
              "start": 832,
              "end": 853
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "formatFn",
                "start": 854,
                "end": 862
              }
            ],
            "optional": false,
            "start": 832,
            "end": 863
          },
          {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "Function",
              "start": 865,
              "end": 873
            },
            "property": {
              "type": "Identifier",
              "name": "prototype",
              "start": 874,
              "end": 883
            },
            "optional": false,
            "computed": false,
            "start": 865,
            "end": 883
          }
        ],
        "optional": false,
        "start": 815,
        "end": 884
      },
      "start": 815,
      "end": 885
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 887,
            "end": 893
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 894,
            "end": 903
          },
          "optional": false,
          "computed": false,
          "start": 887,
          "end": 903
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "formatFn",
                "start": 904,
                "end": 912
              },
              "property": {
                "type": "Identifier",
                "name": "hasOwnProperty",
                "start": 913,
                "end": 927
              },
              "optional": false,
              "computed": false,
              "start": 904,
              "end": 927
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "prototype",
                "raw": "\"prototype\"",
                "start": 928,
                "end": 939
              }
            ],
            "optional": false,
            "start": 904,
            "end": 940
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 942,
            "end": 947
          },
          {
            "type": "Literal",
            "value": "Built-in functions that aren't constructors must not have a prototype property.",
            "raw": "\"Built-in functions that aren't constructors must not have a prototype property.\"",
            "start": 966,
            "end": 1047
          }
        ],
        "optional": false,
        "start": 887,
        "end": 1048
      },
      "start": 887,
      "end": 1049
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "assert",
            "start": 1051,
            "end": 1057
          },
          "property": {
            "type": "Identifier",
            "name": "sameValue",
            "start": 1058,
            "end": 1067
          },
          "optional": false,
          "computed": false,
          "start": 1051,
          "end": 1067
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "isConstructor",
              "start": 1068,
              "end": 1081
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "formatFn",
                "start": 1082,
                "end": 1090
              }
            ],
            "optional": false,
            "start": 1068,
            "end": 1091
          },
          {
            "type": "Literal",
            "value": false,
            "raw": "false",
            "start": 1093,
            "end": 1098
          },
          {
            "type": "Literal",
            "value": "Built-in functions don't implement [[Construct]] unless explicitly specified.",
            "raw": "\"Built-in functions don't implement [[Construct]] unless explicitly specified.\"",
            "start": 1117,
            "end": 1196
          }
        ],
        "optional": false,
        "start": 1051,
        "end": 1197
      },
      "start": 1051,
      "end": 1198
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1199
}