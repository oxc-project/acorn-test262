{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "var",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "nf",
            "start": 397,
            "end": 399
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Intl",
                "start": 406,
                "end": 410
              },
              "property": {
                "type": "Identifier",
                "name": "NumberFormat",
                "start": 411,
                "end": 423
              },
              "optional": false,
              "computed": false,
              "start": 406,
              "end": 423
            },
            "arguments": [],
            "start": 402,
            "end": 425
          },
          "start": 397,
          "end": 425
        }
      ],
      "start": 393,
      "end": 426
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "implicit",
            "start": 434,
            "end": 442
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "nf",
                "start": 445,
                "end": 447
              },
              "property": {
                "type": "Identifier",
                "name": "formatToParts",
                "start": 448,
                "end": 461
              },
              "optional": false,
              "computed": false,
              "start": 445,
              "end": 461
            },
            "arguments": [],
            "optional": false,
            "start": 445,
            "end": 463
          },
          "start": 434,
          "end": 463
        }
      ],
      "start": 428,
      "end": 464
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "explicit",
            "start": 471,
            "end": 479
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "nf",
                "start": 482,
                "end": 484
              },
              "property": {
                "type": "Identifier",
                "name": "formatToParts",
                "start": 485,
                "end": 498
              },
              "optional": false,
              "computed": false,
              "start": 482,
              "end": 498
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "undefined",
                "start": 499,
                "end": 508
              }
            ],
            "optional": false,
            "start": 482,
            "end": 509
          },
          "start": 471,
          "end": 509
        }
      ],
      "start": 465,
      "end": 510
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "resultNaN",
            "start": 683,
            "end": 692
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "nf",
                "start": 695,
                "end": 697
              },
              "property": {
                "type": "Identifier",
                "name": "format",
                "start": 698,
                "end": 704
              },
              "optional": false,
              "computed": false,
              "start": 695,
              "end": 704
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "NaN",
                "start": 705,
                "end": 708
              }
            ],
            "optional": false,
            "start": 695,
            "end": 709
          },
          "start": 683,
          "end": 709
        }
      ],
      "start": 677,
      "end": 710
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "result",
            "start": 717,
            "end": 723
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "name": "type",
                      "start": 729,
                      "end": 733
                    },
                    "value": {
                      "type": "Literal",
                      "value": "nan",
                      "raw": "'nan'",
                      "start": 735,
                      "end": 740
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "start": 729,
                    "end": 740
                  },
                  {
                    "type": "Property",
                    "kind": "init",
                    "key": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 742,
                      "end": 747
                    },
                    "value": {
                      "type": "Identifier",
                      "name": "resultNaN",
                      "start": 749,
                      "end": 758
                    },
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "start": 742,
                    "end": 758
                  }
                ],
                "start": 727,
                "end": 760
              }
            ],
            "start": 726,
            "end": 761
          },
          "start": 717,
          "end": 761
        }
      ],
      "start": 711,
      "end": 762
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 764,
          "end": 770
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "partsEquals",
              "start": 774,
              "end": 785
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "implicit",
                "start": 786,
                "end": 794
              },
              {
                "type": "Identifier",
                "name": "explicit",
                "start": 796,
                "end": 804
              }
            ],
            "optional": false,
            "start": 774,
            "end": 805
          },
          {
            "type": "Literal",
            "value": "formatToParts() should be equivalent to formatToParts(undefined)",
            "raw": "'formatToParts() should be equivalent to formatToParts(undefined)'",
            "start": 809,
            "end": 875
          }
        ],
        "optional": false,
        "start": 764,
        "end": 877
      },
      "start": 764,
      "end": 878
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "assert",
          "start": 880,
          "end": 886
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "partsEquals",
              "start": 890,
              "end": 901
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "implicit",
                "start": 902,
                "end": 910
              },
              {
                "type": "Identifier",
                "name": "result",
                "start": 912,
                "end": 918
              }
            ],
            "optional": false,
            "start": 890,
            "end": 919
          },
          {
            "type": "Literal",
            "value": "Both implicit and explicit calls should have the correct result",
            "raw": "'Both implicit and explicit calls should have the correct result'",
            "start": 923,
            "end": 988
          }
        ],
        "optional": false,
        "start": 880,
        "end": 990
      },
      "start": 880,
      "end": 991
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "partsEquals",
        "start": 1002,
        "end": 1013
      },
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "parts1",
          "start": 1014,
          "end": 1020
        },
        {
          "type": "Identifier",
          "name": "parts2",
          "start": 1022,
          "end": 1028
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "parts1",
                  "start": 1038,
                  "end": 1044
                },
                "property": {
                  "type": "Identifier",
                  "name": "length",
                  "start": 1045,
                  "end": 1051
                },
                "optional": false,
                "computed": false,
                "start": 1038,
                "end": 1051
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "parts2",
                  "start": 1056,
                  "end": 1062
                },
                "property": {
                  "type": "Identifier",
                  "name": "length",
                  "start": 1063,
                  "end": 1069
                },
                "optional": false,
                "computed": false,
                "start": 1056,
                "end": 1069
              },
              "start": 1038,
              "end": 1069
            },
            "consequent": {
              "type": "ReturnStatement",
              "argument": {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 1078,
                "end": 1083
              },
              "start": 1071,
              "end": 1084
            },
            "alternate": null,
            "start": 1034,
            "end": 1084
          },
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "kind": "var",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "i",
                    "start": 1096,
                    "end": 1097
                  },
                  "init": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0",
                    "start": 1100,
                    "end": 1101
                  },
                  "start": 1096,
                  "end": 1101
                }
              ],
              "start": 1092,
              "end": 1101
            },
            "test": {
              "type": "BinaryExpression",
              "left": {
                "type": "Identifier",
                "name": "i",
                "start": 1103,
                "end": 1104
              },
              "operator": "<",
              "right": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "parts1",
                  "start": 1107,
                  "end": 1113
                },
                "property": {
                  "type": "Identifier",
                  "name": "length",
                  "start": 1114,
                  "end": 1120
                },
                "optional": false,
                "computed": false,
                "start": 1107,
                "end": 1120
              },
              "start": 1103,
              "end": 1120
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "i",
                "start": 1122,
                "end": 1123
              },
              "start": 1122,
              "end": 1125
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "part1",
                        "start": 1137,
                        "end": 1142
                      },
                      "init": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "parts1",
                          "start": 1145,
                          "end": 1151
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "i",
                          "start": 1152,
                          "end": 1153
                        },
                        "optional": false,
                        "computed": true,
                        "start": 1145,
                        "end": 1154
                      },
                      "start": 1137,
                      "end": 1154
                    }
                  ],
                  "start": 1133,
                  "end": 1155
                },
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "part2",
                        "start": 1164,
                        "end": 1169
                      },
                      "init": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "parts2",
                          "start": 1172,
                          "end": 1178
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "i",
                          "start": 1179,
                          "end": 1180
                        },
                        "optional": false,
                        "computed": true,
                        "start": 1172,
                        "end": 1181
                      },
                      "start": 1164,
                      "end": 1181
                    }
                  ],
                  "start": 1160,
                  "end": 1182
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "part1",
                        "start": 1191,
                        "end": 1196
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "type",
                        "start": 1197,
                        "end": 1201
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1191,
                      "end": 1201
                    },
                    "operator": "!==",
                    "right": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "part2",
                        "start": 1206,
                        "end": 1211
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "type",
                        "start": 1212,
                        "end": 1216
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1206,
                      "end": 1216
                    },
                    "start": 1191,
                    "end": 1216
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 1225,
                      "end": 1230
                    },
                    "start": 1218,
                    "end": 1231
                  },
                  "alternate": null,
                  "start": 1187,
                  "end": 1231
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "left": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "part1",
                        "start": 1240,
                        "end": 1245
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "value",
                        "start": 1246,
                        "end": 1251
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1240,
                      "end": 1251
                    },
                    "operator": "!==",
                    "right": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "part2",
                        "start": 1256,
                        "end": 1261
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "value",
                        "start": 1262,
                        "end": 1267
                      },
                      "optional": false,
                      "computed": false,
                      "start": 1256,
                      "end": 1267
                    },
                    "start": 1240,
                    "end": 1267
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "start": 1276,
                      "end": 1281
                    },
                    "start": 1269,
                    "end": 1282
                  },
                  "alternate": null,
                  "start": 1236,
                  "end": 1282
                }
              ],
              "start": 1127,
              "end": 1286
            },
            "start": 1087,
            "end": 1286
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": true,
              "raw": "true",
              "start": 1296,
              "end": 1300
            },
            "start": 1289,
            "end": 1301
          }
        ],
        "start": 1030,
        "end": 1303
      },
      "expression": false,
      "start": 993,
      "end": 1303
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1304
}