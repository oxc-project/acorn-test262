{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "taintProperties",
          "start": 331,
          "end": 346
        },
        "arguments": [
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "dataLocale",
                "raw": "\"dataLocale\"",
                "start": 348,
                "end": 360
              },
              {
                "type": "Literal",
                "value": "nu",
                "raw": "\"nu\"",
                "start": 362,
                "end": 366
              },
              {
                "type": "Literal",
                "value": "ca",
                "raw": "\"ca\"",
                "start": 368,
                "end": 372
              },
              {
                "type": "Literal",
                "value": "co",
                "raw": "\"co\"",
                "start": 374,
                "end": 378
              },
              {
                "type": "Literal",
                "value": "locale",
                "raw": "\"locale\"",
                "start": 380,
                "end": 388
              }
            ],
            "start": 347,
            "end": 389
          }
        ],
        "optional": false,
        "start": 331,
        "end": 390
      },
      "start": 331,
      "end": 391
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "testWithIntlConstructors",
          "start": 393,
          "end": 417
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "Constructor",
                "start": 428,
                "end": 439
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "kind": "var",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "locale",
                        "start": 451,
                        "end": 457
                      },
                      "init": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Constructor",
                                "start": 464,
                                "end": 475
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "undefined",
                                  "start": 476,
                                  "end": 485
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "kind": "init",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "localeMatcher",
                                        "start": 488,
                                        "end": 501
                                      },
                                      "value": {
                                        "type": "Literal",
                                        "value": "lookup",
                                        "raw": "\"lookup\"",
                                        "start": 503,
                                        "end": 511
                                      },
                                      "method": false,
                                      "shorthand": false,
                                      "computed": false,
                                      "start": 488,
                                      "end": 511
                                    }
                                  ],
                                  "start": 487,
                                  "end": 512
                                }
                              ],
                              "start": 460,
                              "end": 513
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "resolvedOptions",
                              "start": 514,
                              "end": 529
                            },
                            "optional": false,
                            "computed": false,
                            "start": 460,
                            "end": 529
                          },
                          "arguments": [],
                          "optional": false,
                          "start": 460,
                          "end": 531
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "locale",
                          "start": 532,
                          "end": 538
                        },
                        "optional": false,
                        "computed": false,
                        "start": 460,
                        "end": 538
                      },
                      "start": 451,
                      "end": 538
                    }
                  ],
                  "start": 447,
                  "end": 539
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "assert",
                      "start": 544,
                      "end": 550
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "isCanonicalizedStructurallyValidLanguageTag",
                          "start": 551,
                          "end": 594
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "locale",
                            "start": 595,
                            "end": 601
                          }
                        ],
                        "optional": false,
                        "start": 551,
                        "end": 602
                      },
                      {
                        "type": "BinaryExpression",
                        "left": {
                          "type": "BinaryExpression",
                          "left": {
                            "type": "Literal",
                            "value": "Constructor returns invalid locale ",
                            "raw": "\"Constructor returns invalid locale \"",
                            "start": 604,
                            "end": 641
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "name": "locale",
                            "start": 644,
                            "end": 650
                          },
                          "start": 604,
                          "end": 650
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "value": ".",
                          "raw": "\".\"",
                          "start": 653,
                          "end": 656
                        },
                        "start": 604,
                        "end": 656
                      }
                    ],
                    "optional": false,
                    "start": 544,
                    "end": 657
                  },
                  "start": 544,
                  "end": 658
                }
              ],
              "start": 441,
              "end": 660
            },
            "expression": false,
            "start": 418,
            "end": 660
          }
        ],
        "optional": false,
        "start": 393,
        "end": 661
      },
      "start": 393,
      "end": 662
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 663
}