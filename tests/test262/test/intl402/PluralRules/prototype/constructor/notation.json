{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "validValues",
            "start": 456,
            "end": 467
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "standard",
                "raw": "\"standard\"",
                "start": 471,
                "end": 481
              },
              {
                "type": "Literal",
                "value": "compact",
                "raw": "\"compact\"",
                "start": 483,
                "end": 492
              },
              {
                "type": "Literal",
                "value": "scientific",
                "raw": "\"scientific\"",
                "start": 494,
                "end": 506
              },
              {
                "type": "Literal",
                "value": "engineering",
                "raw": "\"engineering\"",
                "start": 508,
                "end": 521
              },
              {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 527,
                  "end": 533
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "standard",
                    "raw": "\"standard\"",
                    "start": 534,
                    "end": 544
                  }
                ],
                "start": 523,
                "end": 545
              },
              {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 551,
                  "end": 557
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "compact",
                    "raw": "\"compact\"",
                    "start": 558,
                    "end": 567
                  }
                ],
                "start": 547,
                "end": 568
              },
              {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 574,
                  "end": 580
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "scientific",
                    "raw": "\"scientific\"",
                    "start": 581,
                    "end": 593
                  }
                ],
                "start": 570,
                "end": 594
              },
              {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "String",
                  "start": 600,
                  "end": 606
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "engineering",
                    "raw": "\"engineering\"",
                    "start": 607,
                    "end": 620
                  }
                ],
                "start": 596,
                "end": 621
              }
            ],
            "start": 470,
            "end": 622
          },
          "start": 456,
          "end": 622
        }
      ],
      "start": 450,
      "end": 623
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "invalidValues",
            "start": 630,
            "end": 643
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "COMPACT",
                "raw": "\"COMPACT\"",
                "start": 647,
                "end": 656
              },
              {
                "type": "Literal",
                "value": "ståndard",
                "raw": "\"ståndard\"",
                "start": 658,
                "end": 668
              },
              {
                "type": "Literal",
                "value": 123,
                "raw": "123",
                "start": 670,
                "end": 673
              },
              {
                "type": "Literal",
                "value": false,
                "raw": "false",
                "start": 675,
                "end": 680
              },
              {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Symbol",
                  "start": 682,
                  "end": 688
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "foo",
                    "raw": "\"foo\"",
                    "start": 689,
                    "end": 694
                  }
                ],
                "optional": false,
                "start": 682,
                "end": 695
              },
              {
                "type": "Literal",
                "value": null,
                "raw": "null",
                "start": 697,
                "end": 701
              },
              {
                "type": "ObjectExpression",
                "properties": [],
                "start": 703,
                "end": 705
              },
              {
                "type": "ArrayExpression",
                "elements": [],
                "start": 707,
                "end": 709
              },
              {
                "type": "Literal",
                "value": "",
                "raw": "\"\"",
                "start": 711,
                "end": 713
              }
            ],
            "start": 646,
            "end": 714
          },
          "start": 630,
          "end": 714
        }
      ],
      "start": 624,
      "end": 715
    },
    {
      "type": "ForOfStatement",
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "kind": "const",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "value",
              "start": 728,
              "end": 733
            },
            "init": null,
            "start": 728,
            "end": 733
          }
        ],
        "start": 722,
        "end": 733
      },
      "right": {
        "type": "Identifier",
        "name": "validValues",
        "start": 737,
        "end": 748
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "kind": "const",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "pr",
                  "start": 760,
                  "end": 762
                },
                "init": {
                  "type": "NewExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "Intl",
                      "start": 769,
                      "end": 773
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "PluralRules",
                      "start": 774,
                      "end": 785
                    },
                    "optional": false,
                    "computed": false,
                    "start": 769,
                    "end": 785
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "en",
                      "raw": "\"en\"",
                      "start": 786,
                      "end": 790
                    },
                    {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "kind": "init",
                          "key": {
                            "type": "Identifier",
                            "name": "notation",
                            "start": 794,
                            "end": 802
                          },
                          "value": {
                            "type": "Identifier",
                            "name": "value",
                            "start": 804,
                            "end": 809
                          },
                          "method": false,
                          "shorthand": false,
                          "computed": false,
                          "start": 794,
                          "end": 809
                        }
                      ],
                      "start": 792,
                      "end": 811
                    }
                  ],
                  "start": 765,
                  "end": 812
                },
                "start": 760,
                "end": 812
              }
            ],
            "start": 754,
            "end": 813
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "assert",
                "start": 816,
                "end": 822
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "left": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "pr",
                          "start": 823,
                          "end": 825
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "resolvedOptions",
                          "start": 826,
                          "end": 841
                        },
                        "optional": false,
                        "computed": false,
                        "start": 823,
                        "end": 841
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 823,
                      "end": 843
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "notation",
                      "start": 844,
                      "end": 852
                    },
                    "optional": false,
                    "computed": false,
                    "start": 823,
                    "end": 852
                  },
                  "operator": "===",
                  "right": {
                    "type": "Identifier",
                    "name": "value",
                    "start": 857,
                    "end": 862
                  },
                  "start": 823,
                  "end": 862
                },
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "Resolved options should have notation ",
                        "cooked": "Resolved options should have notation "
                      },
                      "tail": false,
                      "start": 865,
                      "end": 903
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": true,
                      "start": 911,
                      "end": 911
                    }
                  ],
                  "expressions": [
                    {
                      "type": "Identifier",
                      "name": "value",
                      "start": 905,
                      "end": 910
                    }
                  ],
                  "start": 864,
                  "end": 912
                }
              ],
              "optional": false,
              "start": 816,
              "end": 913
            },
            "start": 816,
            "end": 914
          }
        ],
        "start": 750,
        "end": 916
      },
      "start": 717,
      "end": 916
    },
    {
      "type": "ForOfStatement",
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "kind": "const",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "value",
              "start": 928,
              "end": 933
            },
            "init": null,
            "start": 928,
            "end": 933
          }
        ],
        "start": 922,
        "end": 933
      },
      "right": {
        "type": "Identifier",
        "name": "invalidValues",
        "start": 937,
        "end": 950
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "assert",
                  "start": 956,
                  "end": 962
                },
                "property": {
                  "type": "Identifier",
                  "name": "throws",
                  "start": 963,
                  "end": 969
                },
                "optional": false,
                "computed": false,
                "start": 956,
                "end": 969
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "RangeError",
                  "start": 970,
                  "end": 980
                },
                {
                  "type": "ArrowFunctionExpression",
                  "expression": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "Intl",
                              "start": 998,
                              "end": 1002
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "PluralRules",
                              "start": 1003,
                              "end": 1014
                            },
                            "optional": false,
                            "computed": false,
                            "start": 998,
                            "end": 1014
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "en",
                              "raw": "\"en\"",
                              "start": 1015,
                              "end": 1019
                            },
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "kind": "init",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "notation",
                                    "start": 1023,
                                    "end": 1031
                                  },
                                  "value": {
                                    "type": "Identifier",
                                    "name": "value",
                                    "start": 1033,
                                    "end": 1038
                                  },
                                  "method": false,
                                  "shorthand": false,
                                  "computed": false,
                                  "start": 1023,
                                  "end": 1038
                                }
                              ],
                              "start": 1021,
                              "end": 1040
                            }
                          ],
                          "start": 994,
                          "end": 1041
                        },
                        "start": 994,
                        "end": 1042
                      }
                    ],
                    "start": 988,
                    "end": 1046
                  },
                  "id": null,
                  "generator": false,
                  "start": 982,
                  "end": 1046
                },
                {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "Exception should be thrown for ",
                        "cooked": "Exception should be thrown for "
                      },
                      "tail": false,
                      "start": 1049,
                      "end": 1080
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": true,
                      "start": 1088,
                      "end": 1088
                    }
                  ],
                  "expressions": [
                    {
                      "type": "Identifier",
                      "name": "value",
                      "start": 1082,
                      "end": 1087
                    }
                  ],
                  "start": 1048,
                  "end": 1089
                }
              ],
              "optional": false,
              "start": 956,
              "end": 1090
            },
            "start": 956,
            "end": 1091
          }
        ],
        "start": 952,
        "end": 1093
      },
      "start": 917,
      "end": 1093
    }
  ],
  "sourceType": "script",
  "hashbang": null,
  "start": 0,
  "end": 1094
}