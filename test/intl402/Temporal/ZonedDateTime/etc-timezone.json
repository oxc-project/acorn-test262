{
  "type": "Program",
  "start": 0,
  "end": 1616,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 321,
      "end": 548,
      "expression": {
        "type": "CallExpression",
        "start": 321,
        "end": 547,
        "callee": {
          "type": "MemberExpression",
          "start": 321,
          "end": 365,
          "object": {
            "type": "ArrayExpression",
            "start": 321,
            "end": 357,
            "elements": [
              {
                "type": "Literal",
                "start": 322,
                "end": 323,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Literal",
                "start": 324,
                "end": 325,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 326,
                "end": 327,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 328,
                "end": 329,
                "value": 3,
                "raw": "3"
              },
              {
                "type": "Literal",
                "start": 330,
                "end": 331,
                "value": 4,
                "raw": "4"
              },
              {
                "type": "Literal",
                "start": 332,
                "end": 333,
                "value": 5,
                "raw": "5"
              },
              {
                "type": "Literal",
                "start": 334,
                "end": 335,
                "value": 6,
                "raw": "6"
              },
              {
                "type": "Literal",
                "start": 336,
                "end": 337,
                "value": 7,
                "raw": "7"
              },
              {
                "type": "Literal",
                "start": 338,
                "end": 339,
                "value": 8,
                "raw": "8"
              },
              {
                "type": "Literal",
                "start": 340,
                "end": 341,
                "value": 9,
                "raw": "9"
              },
              {
                "type": "Literal",
                "start": 342,
                "end": 344,
                "value": 10,
                "raw": "10"
              },
              {
                "type": "Literal",
                "start": 345,
                "end": 347,
                "value": 11,
                "raw": "11"
              },
              {
                "type": "Literal",
                "start": 348,
                "end": 350,
                "value": 12,
                "raw": "12"
              },
              {
                "type": "Literal",
                "start": 351,
                "end": 353,
                "value": 13,
                "raw": "13"
              },
              {
                "type": "Literal",
                "start": 354,
                "end": 356,
                "value": 14,
                "raw": "14"
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "start": 358,
            "end": 365,
            "name": "forEach"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "start": 366,
            "end": 546,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 367,
                "end": 368,
                "name": "n"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 373,
              "end": 546,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 377,
                  "end": 401,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 381,
                      "end": 400,
                      "id": {
                        "type": "Identifier",
                        "start": 381,
                        "end": 383,
                        "name": "tz"
                      },
                      "init": {
                        "type": "BinaryExpression",
                        "start": 386,
                        "end": 400,
                        "left": {
                          "type": "Literal",
                          "start": 386,
                          "end": 396,
                          "value": "Etc/GMT-",
                          "raw": "\"Etc/GMT-\""
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "start": 399,
                          "end": 400,
                          "name": "n"
                        }
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 404,
                  "end": 454,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 408,
                      "end": 453,
                      "id": {
                        "type": "Identifier",
                        "start": 408,
                        "end": 416,
                        "name": "instance"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 419,
                        "end": 453,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 423,
                          "end": 445,
                          "object": {
                            "type": "Identifier",
                            "start": 423,
                            "end": 431,
                            "name": "Temporal"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 432,
                            "end": 445,
                            "name": "ZonedDateTime"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 446,
                            "end": 448,
                            "value": "0n",
                            "raw": "0n",
                            "bigint": "0"
                          },
                          {
                            "type": "Identifier",
                            "start": 450,
                            "end": 452,
                            "name": "tz"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 457,
                  "end": 544,
                  "expression": {
                    "type": "CallExpression",
                    "start": 457,
                    "end": 543,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 457,
                      "end": 473,
                      "object": {
                        "type": "Identifier",
                        "start": 457,
                        "end": 463,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 464,
                        "end": 473,
                        "name": "sameValue"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "start": 479,
                        "end": 498,
                        "object": {
                          "type": "Identifier",
                          "start": 479,
                          "end": 487,
                          "name": "instance"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 488,
                          "end": 498,
                          "name": "timeZoneId"
                        },
                        "computed": false,
                        "optional": false
                      },
                      {
                        "type": "Identifier",
                        "start": 504,
                        "end": 506,
                        "name": "tz"
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 512,
                        "end": 539,
                        "left": {
                          "type": "Identifier",
                          "start": 512,
                          "end": 514,
                          "name": "tz"
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 517,
                          "end": 539,
                          "value": " is a valid timezone",
                          "raw": "\" is a valid timezone\""
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 550,
      "end": 582,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 554,
          "end": 581,
          "id": {
            "type": "Identifier",
            "start": 554,
            "end": 566,
            "name": "gmtMinus24TZ"
          },
          "init": {
            "type": "Literal",
            "start": 569,
            "end": 581,
            "value": "Etc/GMT-24",
            "raw": "\"Etc/GMT-24\""
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 583,
      "end": 716,
      "expression": {
        "type": "CallExpression",
        "start": 583,
        "end": 715,
        "callee": {
          "type": "MemberExpression",
          "start": 583,
          "end": 596,
          "object": {
            "type": "Identifier",
            "start": 583,
            "end": 589,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 590,
            "end": 596,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 600,
            "end": 610,
            "name": "RangeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 614,
            "end": 669,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 620,
              "end": 669,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 622,
                  "end": 667,
                  "expression": {
                    "type": "NewExpression",
                    "start": 622,
                    "end": 666,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 626,
                      "end": 648,
                      "object": {
                        "type": "Identifier",
                        "start": 626,
                        "end": 634,
                        "name": "Temporal"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 635,
                        "end": 648,
                        "name": "ZonedDateTime"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 649,
                        "end": 651,
                        "value": "0n",
                        "raw": "0n",
                        "bigint": "0"
                      },
                      {
                        "type": "Identifier",
                        "start": 653,
                        "end": 665,
                        "name": "gmtMinus24TZ"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "BinaryExpression",
            "start": 673,
            "end": 713,
            "left": {
              "type": "Identifier",
              "start": 673,
              "end": 685,
              "name": "gmtMinus24TZ"
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 688,
              "end": 713,
              "value": " is an invalid timezone",
              "raw": "\" is an invalid timezone\""
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 756,
      "end": 948,
      "expression": {
        "type": "CallExpression",
        "start": 756,
        "end": 947,
        "callee": {
          "type": "MemberExpression",
          "start": 756,
          "end": 783,
          "object": {
            "type": "ArrayExpression",
            "start": 756,
            "end": 775,
            "elements": [
              {
                "type": "Literal",
                "start": 757,
                "end": 758,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 759,
                "end": 760,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 761,
                "end": 762,
                "value": 3,
                "raw": "3"
              },
              {
                "type": "Literal",
                "start": 763,
                "end": 764,
                "value": 4,
                "raw": "4"
              },
              {
                "type": "Literal",
                "start": 765,
                "end": 766,
                "value": 5,
                "raw": "5"
              },
              {
                "type": "Literal",
                "start": 767,
                "end": 768,
                "value": 6,
                "raw": "6"
              },
              {
                "type": "Literal",
                "start": 769,
                "end": 770,
                "value": 7,
                "raw": "7"
              },
              {
                "type": "Literal",
                "start": 771,
                "end": 772,
                "value": 8,
                "raw": "8"
              },
              {
                "type": "Literal",
                "start": 773,
                "end": 774,
                "value": 9,
                "raw": "9"
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "start": 776,
            "end": 783,
            "name": "forEach"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "start": 784,
            "end": 946,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 785,
                "end": 786,
                "name": "n"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 791,
              "end": 946,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 795,
                  "end": 820,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 799,
                      "end": 819,
                      "id": {
                        "type": "Identifier",
                        "start": 799,
                        "end": 801,
                        "name": "tz"
                      },
                      "init": {
                        "type": "BinaryExpression",
                        "start": 804,
                        "end": 819,
                        "left": {
                          "type": "Literal",
                          "start": 804,
                          "end": 815,
                          "value": "Etc/GMT-0",
                          "raw": "\"Etc/GMT-0\""
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "start": 818,
                          "end": 819,
                          "name": "n"
                        }
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 823,
                  "end": 944,
                  "expression": {
                    "type": "CallExpression",
                    "start": 823,
                    "end": 943,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 823,
                      "end": 836,
                      "object": {
                        "type": "Identifier",
                        "start": 823,
                        "end": 829,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 830,
                        "end": 836,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 842,
                        "end": 852,
                        "name": "RangeError"
                      },
                      {
                        "type": "ArrowFunctionExpression",
                        "start": 858,
                        "end": 903,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 864,
                          "end": 903,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 866,
                              "end": 901,
                              "expression": {
                                "type": "NewExpression",
                                "start": 866,
                                "end": 900,
                                "callee": {
                                  "type": "MemberExpression",
                                  "start": 870,
                                  "end": 892,
                                  "object": {
                                    "type": "Identifier",
                                    "start": 870,
                                    "end": 878,
                                    "name": "Temporal"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 879,
                                    "end": 892,
                                    "name": "ZonedDateTime"
                                  },
                                  "computed": false,
                                  "optional": false
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "start": 893,
                                    "end": 895,
                                    "value": "0n",
                                    "raw": "0n",
                                    "bigint": "0"
                                  },
                                  {
                                    "type": "Identifier",
                                    "start": 897,
                                    "end": 899,
                                    "name": "tz"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 909,
                        "end": 939,
                        "left": {
                          "type": "Identifier",
                          "start": 909,
                          "end": 911,
                          "name": "tz"
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 914,
                          "end": 939,
                          "value": " is an invalid timezone",
                          "raw": "\" is an invalid timezone\""
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 988,
      "end": 1184,
      "expression": {
        "type": "CallExpression",
        "start": 988,
        "end": 1183,
        "callee": {
          "type": "MemberExpression",
          "start": 988,
          "end": 1017,
          "object": {
            "type": "ArrayExpression",
            "start": 988,
            "end": 1009,
            "elements": [
              {
                "type": "Literal",
                "start": 989,
                "end": 990,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Literal",
                "start": 991,
                "end": 992,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 993,
                "end": 994,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 995,
                "end": 996,
                "value": 3,
                "raw": "3"
              },
              {
                "type": "Literal",
                "start": 997,
                "end": 998,
                "value": 4,
                "raw": "4"
              },
              {
                "type": "Literal",
                "start": 999,
                "end": 1000,
                "value": 5,
                "raw": "5"
              },
              {
                "type": "Literal",
                "start": 1001,
                "end": 1002,
                "value": 6,
                "raw": "6"
              },
              {
                "type": "Literal",
                "start": 1003,
                "end": 1004,
                "value": 7,
                "raw": "7"
              },
              {
                "type": "Literal",
                "start": 1005,
                "end": 1006,
                "value": 8,
                "raw": "8"
              },
              {
                "type": "Literal",
                "start": 1007,
                "end": 1008,
                "value": 9,
                "raw": "9"
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "start": 1010,
            "end": 1017,
            "name": "forEach"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "start": 1018,
            "end": 1182,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1019,
                "end": 1020,
                "name": "n"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1025,
              "end": 1182,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 1029,
                  "end": 1054,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1033,
                      "end": 1053,
                      "id": {
                        "type": "Identifier",
                        "start": 1033,
                        "end": 1035,
                        "name": "tz"
                      },
                      "init": {
                        "type": "BinaryExpression",
                        "start": 1038,
                        "end": 1053,
                        "left": {
                          "type": "Literal",
                          "start": 1038,
                          "end": 1049,
                          "value": "Etc/GMT+0",
                          "raw": "\"Etc/GMT+0\""
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "start": 1052,
                          "end": 1053,
                          "name": "n"
                        }
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1057,
                  "end": 1180,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1057,
                    "end": 1179,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1057,
                      "end": 1070,
                      "object": {
                        "type": "Identifier",
                        "start": 1057,
                        "end": 1063,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1064,
                        "end": 1070,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1076,
                        "end": 1086,
                        "name": "RangeError"
                      },
                      {
                        "type": "ArrowFunctionExpression",
                        "start": 1092,
                        "end": 1137,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 1098,
                          "end": 1137,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 1100,
                              "end": 1135,
                              "expression": {
                                "type": "NewExpression",
                                "start": 1100,
                                "end": 1134,
                                "callee": {
                                  "type": "MemberExpression",
                                  "start": 1104,
                                  "end": 1126,
                                  "object": {
                                    "type": "Identifier",
                                    "start": 1104,
                                    "end": 1112,
                                    "name": "Temporal"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 1113,
                                    "end": 1126,
                                    "name": "ZonedDateTime"
                                  },
                                  "computed": false,
                                  "optional": false
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "start": 1127,
                                    "end": 1129,
                                    "value": "0n",
                                    "raw": "0n",
                                    "bigint": "0"
                                  },
                                  {
                                    "type": "Identifier",
                                    "start": 1131,
                                    "end": 1133,
                                    "name": "tz"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 1143,
                        "end": 1173,
                        "left": {
                          "type": "Identifier",
                          "start": 1143,
                          "end": 1145,
                          "name": "tz"
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1148,
                          "end": 1173,
                          "value": " is an invalid timezone",
                          "raw": "\" is an invalid timezone\""
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1229,
      "end": 1450,
      "expression": {
        "type": "CallExpression",
        "start": 1229,
        "end": 1449,
        "callee": {
          "type": "MemberExpression",
          "start": 1229,
          "end": 1267,
          "object": {
            "type": "ArrayExpression",
            "start": 1229,
            "end": 1259,
            "elements": [
              {
                "type": "Literal",
                "start": 1230,
                "end": 1231,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Literal",
                "start": 1232,
                "end": 1233,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 1234,
                "end": 1235,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 1236,
                "end": 1237,
                "value": 3,
                "raw": "3"
              },
              {
                "type": "Literal",
                "start": 1238,
                "end": 1239,
                "value": 4,
                "raw": "4"
              },
              {
                "type": "Literal",
                "start": 1240,
                "end": 1241,
                "value": 5,
                "raw": "5"
              },
              {
                "type": "Literal",
                "start": 1242,
                "end": 1243,
                "value": 6,
                "raw": "6"
              },
              {
                "type": "Literal",
                "start": 1244,
                "end": 1245,
                "value": 7,
                "raw": "7"
              },
              {
                "type": "Literal",
                "start": 1246,
                "end": 1247,
                "value": 8,
                "raw": "8"
              },
              {
                "type": "Literal",
                "start": 1248,
                "end": 1249,
                "value": 9,
                "raw": "9"
              },
              {
                "type": "Literal",
                "start": 1250,
                "end": 1252,
                "value": 10,
                "raw": "10"
              },
              {
                "type": "Literal",
                "start": 1253,
                "end": 1255,
                "value": 11,
                "raw": "11"
              },
              {
                "type": "Literal",
                "start": 1256,
                "end": 1258,
                "value": 12,
                "raw": "12"
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "start": 1260,
            "end": 1267,
            "name": "forEach"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "start": 1268,
            "end": 1448,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1269,
                "end": 1270,
                "name": "n"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1275,
              "end": 1448,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 1279,
                  "end": 1303,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1283,
                      "end": 1302,
                      "id": {
                        "type": "Identifier",
                        "start": 1283,
                        "end": 1285,
                        "name": "tz"
                      },
                      "init": {
                        "type": "BinaryExpression",
                        "start": 1288,
                        "end": 1302,
                        "left": {
                          "type": "Literal",
                          "start": 1288,
                          "end": 1298,
                          "value": "Etc/GMT+",
                          "raw": "\"Etc/GMT+\""
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "start": 1301,
                          "end": 1302,
                          "name": "n"
                        }
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 1306,
                  "end": 1356,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1310,
                      "end": 1355,
                      "id": {
                        "type": "Identifier",
                        "start": 1310,
                        "end": 1318,
                        "name": "instance"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 1321,
                        "end": 1355,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 1325,
                          "end": 1347,
                          "object": {
                            "type": "Identifier",
                            "start": 1325,
                            "end": 1333,
                            "name": "Temporal"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 1334,
                            "end": 1347,
                            "name": "ZonedDateTime"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1348,
                            "end": 1350,
                            "value": "0n",
                            "raw": "0n",
                            "bigint": "0"
                          },
                          {
                            "type": "Identifier",
                            "start": 1352,
                            "end": 1354,
                            "name": "tz"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1359,
                  "end": 1446,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1359,
                    "end": 1445,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1359,
                      "end": 1375,
                      "object": {
                        "type": "Identifier",
                        "start": 1359,
                        "end": 1365,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1366,
                        "end": 1375,
                        "name": "sameValue"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "start": 1381,
                        "end": 1400,
                        "object": {
                          "type": "Identifier",
                          "start": 1381,
                          "end": 1389,
                          "name": "instance"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1390,
                          "end": 1400,
                          "name": "timeZoneId"
                        },
                        "computed": false,
                        "optional": false
                      },
                      {
                        "type": "Identifier",
                        "start": 1406,
                        "end": 1408,
                        "name": "tz"
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 1414,
                        "end": 1441,
                        "left": {
                          "type": "Identifier",
                          "start": 1414,
                          "end": 1416,
                          "name": "tz"
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1419,
                          "end": 1441,
                          "value": " is a valid timezone",
                          "raw": "\" is a valid timezone\""
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1452,
      "end": 1483,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1456,
          "end": 1482,
          "id": {
            "type": "Identifier",
            "start": 1456,
            "end": 1467,
            "name": "gmtPlus24TZ"
          },
          "init": {
            "type": "Literal",
            "start": 1470,
            "end": 1482,
            "value": "Etc/GMT+24",
            "raw": "\"Etc/GMT+24\""
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 1484,
      "end": 1615,
      "expression": {
        "type": "CallExpression",
        "start": 1484,
        "end": 1614,
        "callee": {
          "type": "MemberExpression",
          "start": 1484,
          "end": 1497,
          "object": {
            "type": "Identifier",
            "start": 1484,
            "end": 1490,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1491,
            "end": 1497,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1501,
            "end": 1511,
            "name": "RangeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 1515,
            "end": 1569,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1521,
              "end": 1569,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1523,
                  "end": 1567,
                  "expression": {
                    "type": "NewExpression",
                    "start": 1523,
                    "end": 1566,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1527,
                      "end": 1549,
                      "object": {
                        "type": "Identifier",
                        "start": 1527,
                        "end": 1535,
                        "name": "Temporal"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1536,
                        "end": 1549,
                        "name": "ZonedDateTime"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1550,
                        "end": 1552,
                        "value": "0n",
                        "raw": "0n",
                        "bigint": "0"
                      },
                      {
                        "type": "Identifier",
                        "start": 1554,
                        "end": 1565,
                        "name": "gmtPlus24TZ"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "BinaryExpression",
            "start": 1573,
            "end": 1612,
            "left": {
              "type": "Identifier",
              "start": 1573,
              "end": 1584,
              "name": "gmtPlus24TZ"
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 1587,
              "end": 1612,
              "value": " is an invalid timezone",
              "raw": "\" is an invalid timezone\""
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}