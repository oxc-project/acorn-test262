{
  "type": "Program",
  "start": 0,
  "end": 678,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 318,
      "end": 382,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 324,
          "end": 381,
          "id": {
            "type": "Identifier",
            "start": 324,
            "end": 332,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 335,
            "end": 381,
            "callee": {
              "type": "MemberExpression",
              "start": 339,
              "end": 357,
              "object": {
                "type": "Identifier",
                "start": 339,
                "end": 347,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 348,
                "end": 357,
                "name": "PlainDate"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 358,
                "end": 362,
                "value": 1989,
                "raw": "1989",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 364,
                "end": 365,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 367,
                "end": 368,
                "value": 7,
                "raw": "7",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 370,
                "end": 380,
                "value": "japanese",
                "raw": "\"japanese\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 384,
      "end": 427,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 390,
          "end": 426,
          "id": {
            "type": "Identifier",
            "start": 390,
            "end": 397,
            "name": "result1"
          },
          "init": {
            "type": "CallExpression",
            "start": 400,
            "end": 426,
            "callee": {
              "type": "MemberExpression",
              "start": 400,
              "end": 413,
              "object": {
                "type": "Identifier",
                "start": 400,
                "end": 408,
                "name": "instance"
              },
              "property": {
                "type": "Identifier",
                "start": 409,
                "end": 413,
                "name": "with"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 414,
                "end": 425,
                "properties": [
                  {
                    "type": "Property",
                    "start": 416,
                    "end": 423,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 416,
                      "end": 419,
                      "name": "day"
                    },
                    "value": {
                      "type": "Literal",
                      "start": 421,
                      "end": 423,
                      "value": 10,
                      "raw": "10",
                      "regex": null,
                      "bigint": null
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 428,
      "end": 528,
      "expression": {
        "type": "CallExpression",
        "start": 428,
        "end": 527,
        "callee": {
          "type": "MemberExpression",
          "start": 428,
          "end": 447,
          "object": {
            "type": "Identifier",
            "start": 428,
            "end": 434,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 435,
            "end": 447,
            "name": "notSameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 448,
            "end": 459,
            "object": {
              "type": "Identifier",
              "start": 448,
              "end": 455,
              "name": "result1"
            },
            "property": {
              "type": "Identifier",
              "start": 456,
              "end": 459,
              "name": "era"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "MemberExpression",
            "start": 461,
            "end": 473,
            "object": {
              "type": "Identifier",
              "start": 461,
              "end": 469,
              "name": "instance"
            },
            "property": {
              "type": "Identifier",
              "start": 470,
              "end": 473,
              "name": "era"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 475,
            "end": 526,
            "value": "resulting day should have crossed an era boundary",
            "raw": "\"resulting day should have crossed an era boundary\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 530,
      "end": 574,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 536,
          "end": 573,
          "id": {
            "type": "Identifier",
            "start": 536,
            "end": 543,
            "name": "result2"
          },
          "init": {
            "type": "CallExpression",
            "start": 546,
            "end": 573,
            "callee": {
              "type": "MemberExpression",
              "start": 546,
              "end": 559,
              "object": {
                "type": "Identifier",
                "start": 546,
                "end": 554,
                "name": "instance"
              },
              "property": {
                "type": "Identifier",
                "start": 555,
                "end": 559,
                "name": "with"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 560,
                "end": 572,
                "properties": [
                  {
                    "type": "Property",
                    "start": 562,
                    "end": 570,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 562,
                      "end": 567,
                      "name": "month"
                    },
                    "value": {
                      "type": "Literal",
                      "start": 569,
                      "end": 570,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 575,
      "end": 677,
      "expression": {
        "type": "CallExpression",
        "start": 575,
        "end": 676,
        "callee": {
          "type": "MemberExpression",
          "start": 575,
          "end": 594,
          "object": {
            "type": "Identifier",
            "start": 575,
            "end": 581,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 582,
            "end": 594,
            "name": "notSameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 595,
            "end": 606,
            "object": {
              "type": "Identifier",
              "start": 595,
              "end": 602,
              "name": "result2"
            },
            "property": {
              "type": "Identifier",
              "start": 603,
              "end": 606,
              "name": "era"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "MemberExpression",
            "start": 608,
            "end": 620,
            "object": {
              "type": "Identifier",
              "start": 608,
              "end": 616,
              "name": "instance"
            },
            "property": {
              "type": "Identifier",
              "start": 617,
              "end": 620,
              "name": "era"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 622,
            "end": 675,
            "value": "resulting month should have crossed an era boundary",
            "raw": "\"resulting month should have crossed an era boundary\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}