{
  "type": "Program",
  "start": 0,
  "end": 2607,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 805,
      "end": 1769,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 811,
          "end": 1768,
          "id": {
            "type": "Identifier",
            "start": 811,
            "end": 817,
            "name": "inputs"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 820,
            "end": 1768,
            "elements": [
              {
                "type": "Literal",
                "start": 826,
                "end": 840,
                "value": "Hello world!",
                "raw": "\"Hello world!\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 857,
                "end": 912,
                "value": "Jedovatou mambu objevila žena v zahrádkářské kolonii.",
                "raw": "\"Jedovatou mambu objevila žena v zahrádkářské kolonii.\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 927,
                "end": 971,
                "value": "Việt Nam: Nhất thể hóa sẽ khác Trung Quốc?",
                "raw": "\"Việt Nam: Nhất thể hóa sẽ khác Trung Quốc?\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 992,
                "end": 1054,
                "value": "Σοβαρές ενστάσεις Κομισιόν για τον προϋπολογισμό της Ιταλίας",
                "raw": "\"Σοβαρές ενστάσεις Κομισιόν για τον προϋπολογισμό της Ιταλίας\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1069,
                "end": 1135,
                "value": "Решение Индии о покупке российских С-400 расценили как вызов США",
                "raw": "\"Решение Индии о покупке российских С-400 расценили как вызов США\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1153,
                "end": 1188,
                "value": "הרופא שהציל נשים והנערה ששועבדה ע",
                "raw": "\"הרופא שהציל נשים והנערה ששועבדה ע\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1206,
                "end": 1259,
                "value": "ترامب للملك سلمان: أنا جاد للغاية.. عليك دفع المزيد",
                "raw": "\"ترامب للملك سلمان: أنا جاد للغاية.. عليك دفع المزيد\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1275,
                "end": 1344,
                "value": "भारत की एस 400 मिसाइल के मुकाबले पाक की थाड, जानें कौन कितना ताकतवर",
                "raw": "\"भारत की एस 400 मिसाइल के मुकाबले पाक की थाड, जानें कौन कितना ताकतवर\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1361,
                "end": 1421,
                "value": "ரெட் அலர்ட் எச்சரிக்கை; புதுச்சேரியில் நாளை அரசு விடுமுறை!",
                "raw": "\"ரெட் அலர்ட் எச்சரிக்கை; புதுச்சேரியில் நாளை அரசு விடுமுறை!\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1436,
                "end": 1503,
                "value": "'ఉత్తర్వులు అందే వరకు ఓటర్ల తుది జాబితాను వెబ్‌సైట్లో పెట్టవద్దు'",
                "raw": "\"'ఉత్తర్వులు అందే వరకు ఓటర్ల తుది జాబితాను వెబ్‌సైట్లో పెట్టవద్దు'\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1519,
                "end": 1548,
                "value": "台北》抹黑柯P失敗？朱學恒酸：姚文智氣pupu嗆大老闆",
                "raw": "\"台北》抹黑柯P失敗？朱學恒酸：姚文智氣pupu嗆大老闆\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1565,
                "end": 1635,
                "value": "วัดไทรตีระฆังเบาลงช่วงเข้าพรรษา เจ้าอาวาสเผยคนร้องเรียนรับผลกรรมแล้ว",
                "raw": "\"วัดไทรตีระฆังเบาลงช่วงเข้าพรรษา เจ้าอาวาสเผยคนร้องเรียนรับผลกรรมแล้ว\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1650,
                "end": 1706,
                "value": "九州北部の一部が暴風域に入りました(日直予報士 2018年10月06日) - 日本気象協会 tenki.jp",
                "raw": "\"九州北部の一部が暴風域に入りました(日直予報士 2018年10月06日) - 日本気象協会 tenki.jp\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1725,
                "end": 1755,
                "value": "법원 “다스 지분 처분권·수익권 모두 MB가 보유”",
                "raw": "\"법원 “다스 지분 처분권·수익권 모두 MB가 보유”\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 1771,
      "end": 1798,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1777,
          "end": 1797,
          "id": {
            "type": "Identifier",
            "start": 1777,
            "end": 1788,
            "name": "granularity"
          },
          "init": {
            "type": "Literal",
            "start": 1791,
            "end": 1797,
            "value": "word",
            "raw": "\"word\"",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 1799,
      "end": 1862,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1805,
          "end": 1861,
          "id": {
            "type": "Identifier",
            "start": 1805,
            "end": 1814,
            "name": "segmenter"
          },
          "init": {
            "type": "NewExpression",
            "start": 1817,
            "end": 1861,
            "callee": {
              "type": "MemberExpression",
              "start": 1821,
              "end": 1835,
              "object": {
                "type": "Identifier",
                "start": 1821,
                "end": 1825,
                "name": "Intl"
              },
              "property": {
                "type": "Identifier",
                "start": 1826,
                "end": 1835,
                "name": "Segmenter"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 1836,
                "end": 1845,
                "name": "undefined"
              },
              {
                "type": "ObjectExpression",
                "start": 1847,
                "end": 1860,
                "properties": [
                  {
                    "type": "Property",
                    "start": 1848,
                    "end": 1859,
                    "method": false,
                    "shorthand": true,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 1848,
                      "end": 1859,
                      "name": "granularity"
                    },
                    "value": {
                      "type": "Identifier",
                      "start": 1848,
                      "end": 1859,
                      "name": "granularity"
                    },
                    "kind": "init"
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 1863,
      "end": 2606,
      "expression": {
        "type": "CallExpression",
        "start": 1863,
        "end": 2605,
        "callee": {
          "type": "MemberExpression",
          "start": 1863,
          "end": 1877,
          "object": {
            "type": "Identifier",
            "start": 1863,
            "end": 1869,
            "name": "inputs"
          },
          "property": {
            "type": "Identifier",
            "start": 1870,
            "end": 1877,
            "name": "forEach"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 1878,
            "end": 2604,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1887,
                "end": 1892,
                "name": "input"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1894,
              "end": 2604,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 1898,
                  "end": 1939,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1904,
                      "end": 1938,
                      "id": {
                        "type": "Identifier",
                        "start": 1904,
                        "end": 1911,
                        "name": "segment"
                      },
                      "init": {
                        "type": "CallExpression",
                        "start": 1914,
                        "end": 1938,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 1914,
                          "end": 1931,
                          "object": {
                            "type": "Identifier",
                            "start": 1914,
                            "end": 1923,
                            "name": "segmenter"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 1924,
                            "end": 1931,
                            "name": "segment"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1932,
                            "end": 1937,
                            "name": "input"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ],
                  "kind": "const"
                },
                {
                  "type": "ForStatement",
                  "start": 1942,
                  "end": 2602,
                  "init": {
                    "type": "VariableDeclaration",
                    "start": 1947,
                    "end": 1960,
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "start": 1951,
                        "end": 1960,
                        "id": {
                          "type": "Identifier",
                          "start": 1951,
                          "end": 1956,
                          "name": "index"
                        },
                        "init": {
                          "type": "Literal",
                          "start": 1959,
                          "end": 1960,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    ],
                    "kind": "let"
                  },
                  "test": {
                    "type": "BinaryExpression",
                    "start": 1962,
                    "end": 1982,
                    "left": {
                      "type": "Identifier",
                      "start": 1962,
                      "end": 1967,
                      "name": "index"
                    },
                    "operator": "<",
                    "right": {
                      "type": "MemberExpression",
                      "start": 1970,
                      "end": 1982,
                      "object": {
                        "type": "Identifier",
                        "start": 1970,
                        "end": 1975,
                        "name": "input"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1976,
                        "end": 1982,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "start": 1984,
                    "end": 1991,
                    "operator": "++",
                    "prefix": false,
                    "argument": {
                      "type": "Identifier",
                      "start": 1984,
                      "end": 1989,
                      "name": "index"
                    }
                  },
                  "body": {
                    "type": "BlockStatement",
                    "start": 1993,
                    "end": 2602,
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "start": 1999,
                        "end": 2040,
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "start": 2005,
                            "end": 2039,
                            "id": {
                              "type": "Identifier",
                              "start": 2005,
                              "end": 2011,
                              "name": "result"
                            },
                            "init": {
                              "type": "CallExpression",
                              "start": 2014,
                              "end": 2039,
                              "callee": {
                                "type": "MemberExpression",
                                "start": 2014,
                                "end": 2032,
                                "object": {
                                  "type": "Identifier",
                                  "start": 2014,
                                  "end": 2021,
                                  "name": "segment"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 2022,
                                  "end": 2032,
                                  "name": "containing"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "start": 2033,
                                  "end": 2038,
                                  "name": "index"
                                }
                              ],
                              "optional": false
                            }
                          }
                        ],
                        "kind": "const"
                      },
                      {
                        "type": "VariableDeclaration",
                        "start": 2045,
                        "end": 2148,
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "start": 2051,
                            "end": 2147,
                            "id": {
                              "type": "Identifier",
                              "start": 2051,
                              "end": 2054,
                              "name": "msg"
                            },
                            "init": {
                              "type": "BinaryExpression",
                              "start": 2057,
                              "end": 2147,
                              "left": {
                                "type": "BinaryExpression",
                                "start": 2057,
                                "end": 2140,
                                "left": {
                                  "type": "BinaryExpression",
                                  "start": 2057,
                                  "end": 2132,
                                  "left": {
                                    "type": "BinaryExpression",
                                    "start": 2057,
                                    "end": 2107,
                                    "left": {
                                      "type": "BinaryExpression",
                                      "start": 2057,
                                      "end": 2099,
                                      "left": {
                                        "type": "BinaryExpression",
                                        "start": 2057,
                                        "end": 2086,
                                        "left": {
                                          "type": "Literal",
                                          "start": 2057,
                                          "end": 2072,
                                          "value": "granularity: ",
                                          "raw": "\"granularity: \"",
                                          "regex": null,
                                          "bigint": null
                                        },
                                        "operator": "+",
                                        "right": {
                                          "type": "Identifier",
                                          "start": 2075,
                                          "end": 2086,
                                          "name": "granularity"
                                        }
                                      },
                                      "operator": "+",
                                      "right": {
                                        "type": "Literal",
                                        "start": 2089,
                                        "end": 2099,
                                        "value": " input: ",
                                        "raw": "\" input: \"",
                                        "regex": null,
                                        "bigint": null
                                      }
                                    },
                                    "operator": "+",
                                    "right": {
                                      "type": "Identifier",
                                      "start": 2102,
                                      "end": 2107,
                                      "name": "input"
                                    }
                                  },
                                  "operator": "+",
                                  "right": {
                                    "type": "Literal",
                                    "start": 2118,
                                    "end": 2132,
                                    "value": " containing(",
                                    "raw": "\" containing(\"",
                                    "regex": null,
                                    "bigint": null
                                  }
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Identifier",
                                  "start": 2135,
                                  "end": 2140,
                                  "name": "index"
                                }
                              },
                              "operator": "+",
                              "right": {
                                "type": "Literal",
                                "start": 2143,
                                "end": 2147,
                                "value": ") ",
                                "raw": "\") \"",
                                "regex": null,
                                "bigint": null
                              }
                            }
                          }
                        ],
                        "kind": "const"
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 2153,
                        "end": 2215,
                        "expression": {
                          "type": "CallExpression",
                          "start": 2153,
                          "end": 2214,
                          "callee": {
                            "type": "MemberExpression",
                            "start": 2153,
                            "end": 2169,
                            "object": {
                              "type": "Identifier",
                              "start": 2153,
                              "end": 2159,
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 2160,
                              "end": 2169,
                              "name": "sameValue"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 2170,
                              "end": 2174,
                              "value": true,
                              "raw": "true",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "BinaryExpression",
                              "start": 2176,
                              "end": 2193,
                              "left": {
                                "type": "MemberExpression",
                                "start": 2176,
                                "end": 2188,
                                "object": {
                                  "type": "Identifier",
                                  "start": 2176,
                                  "end": 2182,
                                  "name": "result"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 2183,
                                  "end": 2188,
                                  "name": "index"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "operator": ">=",
                              "right": {
                                "type": "Literal",
                                "start": 2192,
                                "end": 2193,
                                "value": 0,
                                "raw": "0",
                                "regex": null,
                                "bigint": null
                              }
                            },
                            {
                              "type": "BinaryExpression",
                              "start": 2195,
                              "end": 2213,
                              "left": {
                                "type": "Identifier",
                                "start": 2195,
                                "end": 2198,
                                "name": "msg"
                              },
                              "operator": "+",
                              "right": {
                                "type": "Literal",
                                "start": 2201,
                                "end": 2213,
                                "value": "index >= 0",
                                "raw": "\"index >= 0\"",
                                "regex": null,
                                "bigint": null
                              }
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 2220,
                        "end": 2313,
                        "expression": {
                          "type": "CallExpression",
                          "start": 2220,
                          "end": 2312,
                          "callee": {
                            "type": "MemberExpression",
                            "start": 2220,
                            "end": 2236,
                            "object": {
                              "type": "Identifier",
                              "start": 2220,
                              "end": 2226,
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 2227,
                              "end": 2236,
                              "name": "sameValue"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 2237,
                              "end": 2241,
                              "value": true,
                              "raw": "true",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "BinaryExpression",
                              "start": 2243,
                              "end": 2270,
                              "left": {
                                "type": "MemberExpression",
                                "start": 2243,
                                "end": 2255,
                                "object": {
                                  "type": "Identifier",
                                  "start": 2243,
                                  "end": 2249,
                                  "name": "result"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 2250,
                                  "end": 2255,
                                  "name": "index"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "operator": "<",
                              "right": {
                                "type": "MemberExpression",
                                "start": 2258,
                                "end": 2270,
                                "object": {
                                  "type": "Identifier",
                                  "start": 2258,
                                  "end": 2263,
                                  "name": "input"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 2264,
                                  "end": 2270,
                                  "name": "length"
                                },
                                "computed": false,
                                "optional": false
                              }
                            },
                            {
                              "type": "BinaryExpression",
                              "start": 2280,
                              "end": 2311,
                              "left": {
                                "type": "BinaryExpression",
                                "start": 2280,
                                "end": 2296,
                                "left": {
                                  "type": "Identifier",
                                  "start": 2280,
                                  "end": 2283,
                                  "name": "msg"
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "start": 2286,
                                  "end": 2296,
                                  "value": "index < ",
                                  "raw": "\"index < \"",
                                  "regex": null,
                                  "bigint": null
                                }
                              },
                              "operator": "+",
                              "right": {
                                "type": "MemberExpression",
                                "start": 2299,
                                "end": 2311,
                                "object": {
                                  "type": "Identifier",
                                  "start": 2299,
                                  "end": 2304,
                                  "name": "input"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 2305,
                                  "end": 2311,
                                  "name": "length"
                                },
                                "computed": false,
                                "optional": false
                              }
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 2318,
                        "end": 2381,
                        "expression": {
                          "type": "CallExpression",
                          "start": 2318,
                          "end": 2380,
                          "callee": {
                            "type": "MemberExpression",
                            "start": 2318,
                            "end": 2334,
                            "object": {
                              "type": "Identifier",
                              "start": 2318,
                              "end": 2324,
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 2325,
                              "end": 2334,
                              "name": "sameValue"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 2335,
                              "end": 2343,
                              "value": "string",
                              "raw": "\"string\"",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "UnaryExpression",
                              "start": 2345,
                              "end": 2364,
                              "operator": "typeof",
                              "prefix": true,
                              "argument": {
                                "type": "MemberExpression",
                                "start": 2352,
                                "end": 2364,
                                "object": {
                                  "type": "Identifier",
                                  "start": 2352,
                                  "end": 2358,
                                  "name": "result"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 2359,
                                  "end": 2364,
                                  "name": "input"
                                },
                                "computed": false,
                                "optional": false
                              }
                            },
                            {
                              "type": "BinaryExpression",
                              "start": 2366,
                              "end": 2379,
                              "left": {
                                "type": "Identifier",
                                "start": 2366,
                                "end": 2369,
                                "name": "msg"
                              },
                              "operator": "+",
                              "right": {
                                "type": "Literal",
                                "start": 2372,
                                "end": 2379,
                                "value": "input",
                                "raw": "\"input\"",
                                "regex": null,
                                "bigint": null
                              }
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 2386,
                        "end": 2486,
                        "expression": {
                          "type": "CallExpression",
                          "start": 2386,
                          "end": 2485,
                          "callee": {
                            "type": "MemberExpression",
                            "start": 2386,
                            "end": 2402,
                            "object": {
                              "type": "Identifier",
                              "start": 2386,
                              "end": 2392,
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 2393,
                              "end": 2402,
                              "name": "sameValue"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 2403,
                              "end": 2412,
                              "value": "boolean",
                              "raw": "\"boolean\"",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "UnaryExpression",
                              "start": 2414,
                              "end": 2438,
                              "operator": "typeof",
                              "prefix": true,
                              "argument": {
                                "type": "MemberExpression",
                                "start": 2421,
                                "end": 2438,
                                "object": {
                                  "type": "Identifier",
                                  "start": 2421,
                                  "end": 2427,
                                  "name": "result"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 2428,
                                  "end": 2438,
                                  "name": "isWordLike"
                                },
                                "computed": false,
                                "optional": false
                              }
                            },
                            {
                              "type": "BinaryExpression",
                              "start": 2448,
                              "end": 2484,
                              "left": {
                                "type": "Identifier",
                                "start": 2448,
                                "end": 2451,
                                "name": "msg"
                              },
                              "operator": "+",
                              "right": {
                                "type": "Literal",
                                "start": 2454,
                                "end": 2484,
                                "value": "isWordLike should be boolean",
                                "raw": "\"isWordLike should be boolean\"",
                                "regex": null,
                                "bigint": null
                              }
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 2491,
                        "end": 2598,
                        "expression": {
                          "type": "CallExpression",
                          "start": 2491,
                          "end": 2597,
                          "callee": {
                            "type": "MemberExpression",
                            "start": 2491,
                            "end": 2510,
                            "object": {
                              "type": "Identifier",
                              "start": 2491,
                              "end": 2497,
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 2498,
                              "end": 2510,
                              "name": "compareArray"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            {
                              "type": "CallExpression",
                              "start": 2511,
                              "end": 2545,
                              "callee": {
                                "type": "MemberExpression",
                                "start": 2511,
                                "end": 2537,
                                "object": {
                                  "type": "Identifier",
                                  "start": 2511,
                                  "end": 2517,
                                  "name": "Object"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 2518,
                                  "end": 2537,
                                  "name": "getOwnPropertyNames"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "start": 2538,
                                  "end": 2544,
                                  "name": "result"
                                }
                              ],
                              "optional": false
                            },
                            {
                              "type": "ArrayExpression",
                              "start": 2553,
                              "end": 2596,
                              "elements": [
                                {
                                  "type": "Literal",
                                  "start": 2554,
                                  "end": 2563,
                                  "value": "segment",
                                  "raw": "\"segment\"",
                                  "regex": null,
                                  "bigint": null
                                },
                                {
                                  "type": "Literal",
                                  "start": 2565,
                                  "end": 2572,
                                  "value": "index",
                                  "raw": "\"index\"",
                                  "regex": null,
                                  "bigint": null
                                },
                                {
                                  "type": "Literal",
                                  "start": 2574,
                                  "end": 2581,
                                  "value": "input",
                                  "raw": "\"input\"",
                                  "regex": null,
                                  "bigint": null
                                },
                                {
                                  "type": "Literal",
                                  "start": 2583,
                                  "end": 2595,
                                  "value": "isWordLike",
                                  "raw": "\"isWordLike\"",
                                  "regex": null,
                                  "bigint": null
                                }
                              ]
                            }
                          ],
                          "optional": false
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}