{
  "type": "Program",
  "start": 0,
  "end": 1623,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 265,
      "end": 1075,
      "id": {
        "type": "Identifier",
        "start": 274,
        "end": 288,
        "name": "checkCollation"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 289,
          "end": 305,
          "name": "extensionCoValue"
        },
        {
          "type": "Identifier",
          "start": 307,
          "end": 317,
          "name": "usageValue"
        },
        {
          "type": "Identifier",
          "start": 319,
          "end": 337,
          "name": "expectedCollations"
        },
        {
          "type": "Identifier",
          "start": 339,
          "end": 352,
          "name": "expectedUsage"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 354,
        "end": 1075,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 360,
            "end": 456,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 364,
                "end": 455,
                "id": {
                  "type": "Identifier",
                  "start": 364,
                  "end": 377,
                  "name": "requestLocale"
                },
                "init": {
                  "type": "ConditionalExpression",
                  "start": 380,
                  "end": 455,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 380,
                    "end": 410,
                    "left": {
                      "type": "Identifier",
                      "start": 380,
                      "end": 396,
                      "name": "extensionCoValue"
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "start": 401,
                      "end": 410,
                      "name": "undefined"
                    }
                  },
                  "consequent": {
                    "type": "BinaryExpression",
                    "start": 413,
                    "end": 445,
                    "left": {
                      "type": "Literal",
                      "start": 413,
                      "end": 426,
                      "value": "de-DE-u-co-",
                      "raw": "\"de-DE-u-co-\""
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 429,
                      "end": 445,
                      "name": "extensionCoValue"
                    }
                  },
                  "alternate": {
                    "type": "Literal",
                    "start": 448,
                    "end": 455,
                    "value": "de-DE",
                    "raw": "\"de-DE\""
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "start": 461,
            "end": 536,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 465,
                "end": 535,
                "id": {
                  "type": "Identifier",
                  "start": 465,
                  "end": 472,
                  "name": "options"
                },
                "init": {
                  "type": "ConditionalExpression",
                  "start": 475,
                  "end": 535,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 475,
                    "end": 499,
                    "left": {
                      "type": "Identifier",
                      "start": 475,
                      "end": 485,
                      "name": "usageValue"
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "start": 490,
                      "end": 499,
                      "name": "undefined"
                    }
                  },
                  "consequent": {
                    "type": "ObjectExpression",
                    "start": 502,
                    "end": 523,
                    "properties": [
                      {
                        "type": "Property",
                        "start": 504,
                        "end": 521,
                        "method": false,
                        "shorthand": false,
                        "computed": false,
                        "key": {
                          "type": "Identifier",
                          "start": 504,
                          "end": 509,
                          "name": "usage"
                        },
                        "value": {
                          "type": "Identifier",
                          "start": 511,
                          "end": 521,
                          "name": "usageValue"
                        },
                        "kind": "init"
                      }
                    ]
                  },
                  "alternate": {
                    "type": "Identifier",
                    "start": 526,
                    "end": 535,
                    "name": "undefined"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "start": 541,
            "end": 600,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 545,
                "end": 599,
                "id": {
                  "type": "Identifier",
                  "start": 545,
                  "end": 553,
                  "name": "collator"
                },
                "init": {
                  "type": "NewExpression",
                  "start": 556,
                  "end": 599,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 560,
                    "end": 573,
                    "object": {
                      "type": "Identifier",
                      "start": 560,
                      "end": 564,
                      "name": "Intl"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 565,
                      "end": 573,
                      "name": "Collator"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "ArrayExpression",
                      "start": 574,
                      "end": 589,
                      "elements": [
                        {
                          "type": "Identifier",
                          "start": 575,
                          "end": 588,
                          "name": "requestLocale"
                        }
                      ]
                    },
                    {
                      "type": "Identifier",
                      "start": 591,
                      "end": 598,
                      "name": "options"
                    }
                  ]
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "start": 606,
            "end": 659,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 610,
                "end": 658,
                "id": {
                  "type": "Identifier",
                  "start": 610,
                  "end": 619,
                  "name": "collation"
                },
                "init": {
                  "type": "MemberExpression",
                  "start": 622,
                  "end": 658,
                  "object": {
                    "type": "CallExpression",
                    "start": 622,
                    "end": 648,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 622,
                      "end": 646,
                      "object": {
                        "type": "Identifier",
                        "start": 622,
                        "end": 630,
                        "name": "collator"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 631,
                        "end": 646,
                        "name": "resolvedOptions"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [],
                    "optional": false
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 649,
                    "end": 658,
                    "name": "collation"
                  },
                  "computed": false,
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "start": 664,
            "end": 907,
            "expression": {
              "type": "CallExpression",
              "start": 664,
              "end": 906,
              "callee": {
                "type": "MemberExpression",
                "start": 664,
                "end": 683,
                "object": {
                  "type": "Identifier",
                  "start": 664,
                  "end": 670,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 671,
                  "end": 683,
                  "name": "notSameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "start": 684,
                  "end": 721,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 684,
                    "end": 710,
                    "object": {
                      "type": "Identifier",
                      "start": 684,
                      "end": 702,
                      "name": "expectedCollations"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 703,
                      "end": 710,
                      "name": "indexOf"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 711,
                      "end": 720,
                      "name": "collation"
                    }
                  ],
                  "optional": false
                },
                {
                  "type": "UnaryExpression",
                  "start": 723,
                  "end": 725,
                  "operator": "-",
                  "prefix": true,
                  "argument": {
                    "type": "Literal",
                    "start": 724,
                    "end": 725,
                    "value": 1,
                    "raw": "1"
                  }
                },
                {
                  "type": "BinaryExpression",
                  "start": 727,
                  "end": 905,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 727,
                    "end": 899,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 727,
                      "end": 887,
                      "left": {
                        "type": "BinaryExpression",
                        "start": 727,
                        "end": 873,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 727,
                          "end": 839,
                          "left": {
                            "type": "ParenthesizedExpression",
                            "start": 727,
                            "end": 821,
                            "expression": {
                              "type": "ConditionalExpression",
                              "start": 728,
                              "end": 820,
                              "test": {
                                "type": "BinaryExpression",
                                "start": 728,
                                "end": 758,
                                "left": {
                                  "type": "Identifier",
                                  "start": 728,
                                  "end": 744,
                                  "name": "extensionCoValue"
                                },
                                "operator": "===",
                                "right": {
                                  "type": "Identifier",
                                  "start": 749,
                                  "end": 758,
                                  "name": "undefined"
                                }
                              },
                              "consequent": {
                                "type": "Literal",
                                "start": 761,
                                "end": 780,
                                "value": "Default collation",
                                "raw": "\"Default collation\""
                              },
                              "alternate": {
                                "type": "BinaryExpression",
                                "start": 783,
                                "end": 820,
                                "left": {
                                  "type": "Literal",
                                  "start": 783,
                                  "end": 801,
                                  "value": "Collation for \"",
                                  "raw": "\"Collation for \\\"\""
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Identifier",
                                  "start": 804,
                                  "end": 820,
                                  "name": "extensionCoValue"
                                }
                              }
                            }
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "start": 824,
                            "end": 839,
                            "value": "\" should be ",
                            "raw": "\"\\\" should be \""
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "CallExpression",
                          "start": 842,
                          "end": 873,
                          "callee": {
                            "type": "MemberExpression",
                            "start": 842,
                            "end": 865,
                            "object": {
                              "type": "Identifier",
                              "start": 842,
                              "end": 860,
                              "name": "expectedCollations"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 861,
                              "end": 865,
                              "name": "join"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 866,
                              "end": 872,
                              "value": " or ",
                              "raw": "\" or \""
                            }
                          ],
                          "optional": false
                        }
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 876,
                        "end": 887,
                        "value": ", but is ",
                        "raw": "\", but is \""
                      }
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 890,
                      "end": 899,
                      "name": "collation"
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 902,
                    "end": 905,
                    "value": ".",
                    "raw": "\".\""
                  }
                }
              ],
              "optional": false
            }
          },
          {
            "type": "VariableDeclaration",
            "start": 913,
            "end": 958,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 917,
                "end": 957,
                "id": {
                  "type": "Identifier",
                  "start": 917,
                  "end": 922,
                  "name": "usage"
                },
                "init": {
                  "type": "MemberExpression",
                  "start": 925,
                  "end": 957,
                  "object": {
                    "type": "CallExpression",
                    "start": 925,
                    "end": 951,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 925,
                      "end": 949,
                      "object": {
                        "type": "Identifier",
                        "start": 925,
                        "end": 933,
                        "name": "collator"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 934,
                        "end": 949,
                        "name": "resolvedOptions"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [],
                    "optional": false
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 952,
                    "end": 957,
                    "name": "usage"
                  },
                  "computed": false,
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "start": 963,
            "end": 1073,
            "expression": {
              "type": "CallExpression",
              "start": 963,
              "end": 1072,
              "callee": {
                "type": "MemberExpression",
                "start": 963,
                "end": 979,
                "object": {
                  "type": "Identifier",
                  "start": 963,
                  "end": 969,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 970,
                  "end": 979,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 980,
                  "end": 985,
                  "name": "usage"
                },
                {
                  "type": "Identifier",
                  "start": 987,
                  "end": 1000,
                  "name": "expectedUsage"
                },
                {
                  "type": "BinaryExpression",
                  "start": 1002,
                  "end": 1071,
                  "left": {
                    "type": "ParenthesizedExpression",
                    "start": 1002,
                    "end": 1056,
                    "expression": {
                      "type": "ConditionalExpression",
                      "start": 1003,
                      "end": 1055,
                      "test": {
                        "type": "BinaryExpression",
                        "start": 1003,
                        "end": 1027,
                        "left": {
                          "type": "Identifier",
                          "start": 1003,
                          "end": 1013,
                          "name": "usageValue"
                        },
                        "operator": "===",
                        "right": {
                          "type": "Identifier",
                          "start": 1018,
                          "end": 1027,
                          "name": "undefined"
                        }
                      },
                      "consequent": {
                        "type": "Literal",
                        "start": 1030,
                        "end": 1045,
                        "value": "Default usage",
                        "raw": "\"Default usage\""
                      },
                      "alternate": {
                        "type": "Literal",
                        "start": 1048,
                        "end": 1055,
                        "value": "Usage",
                        "raw": "\"Usage\""
                      }
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 1059,
                    "end": 1071,
                    "value": " mismatch.",
                    "raw": "\" mismatch.\""
                  }
                }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1077,
      "end": 1135,
      "expression": {
        "type": "CallExpression",
        "start": 1077,
        "end": 1134,
        "callee": {
          "type": "Identifier",
          "start": 1077,
          "end": 1091,
          "name": "checkCollation"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1092,
            "end": 1101,
            "name": "undefined"
          },
          {
            "type": "Identifier",
            "start": 1103,
            "end": 1112,
            "name": "undefined"
          },
          {
            "type": "ArrayExpression",
            "start": 1114,
            "end": 1125,
            "elements": [
              {
                "type": "Literal",
                "start": 1115,
                "end": 1124,
                "value": "default",
                "raw": "\"default\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1127,
            "end": 1133,
            "value": "sort",
            "raw": "\"sort\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1137,
      "end": 1206,
      "expression": {
        "type": "CallExpression",
        "start": 1137,
        "end": 1205,
        "callee": {
          "type": "Identifier",
          "start": 1137,
          "end": 1151,
          "name": "checkCollation"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1152,
            "end": 1161,
            "value": "phonebk",
            "raw": "\"phonebk\""
          },
          {
            "type": "Identifier",
            "start": 1163,
            "end": 1172,
            "name": "undefined"
          },
          {
            "type": "ArrayExpression",
            "start": 1174,
            "end": 1196,
            "elements": [
              {
                "type": "Literal",
                "start": 1175,
                "end": 1184,
                "value": "phonebk",
                "raw": "\"phonebk\""
              },
              {
                "type": "Literal",
                "start": 1186,
                "end": 1195,
                "value": "default",
                "raw": "\"default\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1198,
            "end": 1204,
            "value": "sort",
            "raw": "\"sort\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1208,
      "end": 1266,
      "expression": {
        "type": "CallExpression",
        "start": 1208,
        "end": 1265,
        "callee": {
          "type": "Identifier",
          "start": 1208,
          "end": 1222,
          "name": "checkCollation"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1223,
            "end": 1232,
            "value": "invalid",
            "raw": "\"invalid\""
          },
          {
            "type": "Identifier",
            "start": 1234,
            "end": 1243,
            "name": "undefined"
          },
          {
            "type": "ArrayExpression",
            "start": 1245,
            "end": 1256,
            "elements": [
              {
                "type": "Literal",
                "start": 1246,
                "end": 1255,
                "value": "default",
                "raw": "\"default\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1258,
            "end": 1264,
            "value": "sort",
            "raw": "\"sort\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1268,
      "end": 1327,
      "expression": {
        "type": "CallExpression",
        "start": 1268,
        "end": 1326,
        "callee": {
          "type": "Identifier",
          "start": 1268,
          "end": 1282,
          "name": "checkCollation"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1283,
            "end": 1293,
            "value": "standard",
            "raw": "\"standard\""
          },
          {
            "type": "Identifier",
            "start": 1295,
            "end": 1304,
            "name": "undefined"
          },
          {
            "type": "ArrayExpression",
            "start": 1306,
            "end": 1317,
            "elements": [
              {
                "type": "Literal",
                "start": 1307,
                "end": 1316,
                "value": "default",
                "raw": "\"default\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1319,
            "end": 1325,
            "value": "sort",
            "raw": "\"sort\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1329,
      "end": 1389,
      "expression": {
        "type": "CallExpression",
        "start": 1329,
        "end": 1388,
        "callee": {
          "type": "Identifier",
          "start": 1329,
          "end": 1343,
          "name": "checkCollation"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1344,
            "end": 1354,
            "value": "standard",
            "raw": "\"standard\""
          },
          {
            "type": "Literal",
            "start": 1356,
            "end": 1364,
            "value": "search",
            "raw": "\"search\""
          },
          {
            "type": "ArrayExpression",
            "start": 1366,
            "end": 1377,
            "elements": [
              {
                "type": "Literal",
                "start": 1367,
                "end": 1376,
                "value": "default",
                "raw": "\"default\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1379,
            "end": 1387,
            "value": "search",
            "raw": "\"search\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1391,
      "end": 1447,
      "expression": {
        "type": "CallExpression",
        "start": 1391,
        "end": 1446,
        "callee": {
          "type": "Identifier",
          "start": 1391,
          "end": 1405,
          "name": "checkCollation"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1406,
            "end": 1416,
            "value": "standard",
            "raw": "\"standard\""
          },
          {
            "type": "Literal",
            "start": 1418,
            "end": 1424,
            "value": "sort",
            "raw": "\"sort\""
          },
          {
            "type": "ArrayExpression",
            "start": 1426,
            "end": 1437,
            "elements": [
              {
                "type": "Literal",
                "start": 1427,
                "end": 1436,
                "value": "default",
                "raw": "\"default\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1439,
            "end": 1445,
            "value": "sort",
            "raw": "\"sort\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1449,
      "end": 1506,
      "expression": {
        "type": "CallExpression",
        "start": 1449,
        "end": 1505,
        "callee": {
          "type": "Identifier",
          "start": 1449,
          "end": 1463,
          "name": "checkCollation"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1464,
            "end": 1472,
            "value": "search",
            "raw": "\"search\""
          },
          {
            "type": "Identifier",
            "start": 1474,
            "end": 1483,
            "name": "undefined"
          },
          {
            "type": "ArrayExpression",
            "start": 1485,
            "end": 1496,
            "elements": [
              {
                "type": "Literal",
                "start": 1486,
                "end": 1495,
                "value": "default",
                "raw": "\"default\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1498,
            "end": 1504,
            "value": "sort",
            "raw": "\"sort\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1508,
      "end": 1566,
      "expression": {
        "type": "CallExpression",
        "start": 1508,
        "end": 1565,
        "callee": {
          "type": "Identifier",
          "start": 1508,
          "end": 1522,
          "name": "checkCollation"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1523,
            "end": 1531,
            "value": "search",
            "raw": "\"search\""
          },
          {
            "type": "Literal",
            "start": 1533,
            "end": 1541,
            "value": "search",
            "raw": "\"search\""
          },
          {
            "type": "ArrayExpression",
            "start": 1543,
            "end": 1554,
            "elements": [
              {
                "type": "Literal",
                "start": 1544,
                "end": 1553,
                "value": "default",
                "raw": "\"default\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1556,
            "end": 1564,
            "value": "search",
            "raw": "\"search\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1568,
      "end": 1622,
      "expression": {
        "type": "CallExpression",
        "start": 1568,
        "end": 1621,
        "callee": {
          "type": "Identifier",
          "start": 1568,
          "end": 1582,
          "name": "checkCollation"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1583,
            "end": 1591,
            "value": "search",
            "raw": "\"search\""
          },
          {
            "type": "Literal",
            "start": 1593,
            "end": 1599,
            "value": "sort",
            "raw": "\"sort\""
          },
          {
            "type": "ArrayExpression",
            "start": 1601,
            "end": 1612,
            "elements": [
              {
                "type": "Literal",
                "start": 1602,
                "end": 1611,
                "value": "default",
                "raw": "\"default\""
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1614,
            "end": 1620,
            "value": "sort",
            "raw": "\"sort\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}