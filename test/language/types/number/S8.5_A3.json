{
  "type": "Program",
  "start": 0,
  "end": 740,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 230,
      "end": 240,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 234,
          "end": 239,
          "id": {
            "type": "Identifier",
            "start": 234,
            "end": 235,
            "name": "x"
          },
          "init": {
            "type": "Identifier",
            "start": 236,
            "end": 239,
            "name": "NaN"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 309,
      "end": 430,
      "test": {
        "type": "BinaryExpression",
        "start": 313,
        "end": 335,
        "left": {
          "type": "UnaryExpression",
          "start": 313,
          "end": 322,
          "operator": "typeof",
          "prefix": true,
          "argument": {
            "type": "ParenthesizedExpression",
            "start": 319,
            "end": 322,
            "expression": {
              "type": "Identifier",
              "start": 320,
              "end": 321,
              "name": "x"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 327,
          "end": 335,
          "value": "number",
          "raw": "\"number\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 336,
        "end": 430,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 340,
            "end": 428,
            "argument": {
              "type": "NewExpression",
              "start": 346,
              "end": 427,
              "callee": {
                "type": "Identifier",
                "start": 350,
                "end": 362,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 363,
                  "end": 426,
                  "left": {
                    "type": "Literal",
                    "start": 363,
                    "end": 412,
                    "value": "#1: var x=NaN; typeof(x) === \"number\". Actual: ",
                    "raw": "'#1: var x=NaN; typeof(x) === \"number\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 415,
                    "end": 426,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 416,
                      "end": 425,
                      "operator": "typeof",
                      "prefix": true,
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "start": 422,
                        "end": 425,
                        "expression": {
                          "type": "Identifier",
                          "start": 423,
                          "end": 424,
                          "name": "x"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 561,
      "end": 677,
      "test": {
        "type": "BinaryExpression",
        "start": 565,
        "end": 589,
        "left": {
          "type": "UnaryExpression",
          "start": 565,
          "end": 576,
          "operator": "typeof",
          "prefix": true,
          "argument": {
            "type": "ParenthesizedExpression",
            "start": 571,
            "end": 576,
            "expression": {
              "type": "Identifier",
              "start": 572,
              "end": 575,
              "name": "NaN"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 581,
          "end": 589,
          "value": "number",
          "raw": "\"number\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 590,
        "end": 677,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 594,
            "end": 675,
            "argument": {
              "type": "NewExpression",
              "start": 600,
              "end": 674,
              "callee": {
                "type": "Identifier",
                "start": 604,
                "end": 616,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 617,
                  "end": 673,
                  "left": {
                    "type": "Literal",
                    "start": 617,
                    "end": 657,
                    "value": "#2: typeof(NaN) === \"number\". Actual: ",
                    "raw": "'#2: typeof(NaN) === \"number\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 660,
                    "end": 673,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 661,
                      "end": 672,
                      "operator": "typeof",
                      "prefix": true,
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "start": 667,
                        "end": 672,
                        "expression": {
                          "type": "Identifier",
                          "start": 668,
                          "end": 671,
                          "name": "NaN"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}