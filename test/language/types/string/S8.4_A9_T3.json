{
  "type": "Program",
  "start": 0,
  "end": 1395,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 299,
      "end": 310,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 303,
          "end": 309,
          "id": {
            "type": "Identifier",
            "start": 303,
            "end": 306,
            "name": "str"
          },
          "init": {
            "type": "Literal",
            "start": 307,
            "end": 309,
            "value": "",
            "raw": "\"\"",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 311,
      "end": 333,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 315,
          "end": 332,
          "id": {
            "type": "Identifier",
            "start": 315,
            "end": 321,
            "name": "strObj"
          },
          "init": {
            "type": "NewExpression",
            "start": 322,
            "end": 332,
            "callee": {
              "type": "Identifier",
              "start": 326,
              "end": 332,
              "name": "String"
            },
            "arguments": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 407,
      "end": 528,
      "test": {
        "type": "BinaryExpression",
        "start": 411,
        "end": 449,
        "left": {
          "type": "MemberExpression",
          "start": 411,
          "end": 426,
          "object": {
            "type": "Identifier",
            "start": 411,
            "end": 414,
            "name": "str"
          },
          "property": {
            "type": "Identifier",
            "start": 415,
            "end": 426,
            "name": "constructor"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "start": 431,
          "end": 449,
          "object": {
            "type": "Identifier",
            "start": 431,
            "end": 437,
            "name": "strObj"
          },
          "property": {
            "type": "Identifier",
            "start": 438,
            "end": 449,
            "name": "constructor"
          },
          "computed": false,
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 450,
        "end": 528,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 454,
            "end": 526,
            "argument": {
              "type": "NewExpression",
              "start": 460,
              "end": 525,
              "callee": {
                "type": "Identifier",
                "start": 464,
                "end": 476,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 477,
                  "end": 524,
                  "value": "#1: \"\".constructor === new String.constructor",
                  "raw": "'#1: \"\".constructor === new String.constructor'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 667,
      "end": 776,
      "test": {
        "type": "BinaryExpression",
        "start": 671,
        "end": 684,
        "left": {
          "type": "Identifier",
          "start": 671,
          "end": 674,
          "name": "str"
        },
        "operator": "!=",
        "right": {
          "type": "Identifier",
          "start": 678,
          "end": 684,
          "name": "strObj"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 685,
        "end": 776,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 689,
            "end": 774,
            "argument": {
              "type": "NewExpression",
              "start": 695,
              "end": 773,
              "callee": {
                "type": "Identifier",
                "start": 699,
                "end": 711,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 712,
                  "end": 772,
                  "value": "#2: values of str=\"\"; and strObj=new String(\"\"); are equal",
                  "raw": "'#2: values of str=\"\"; and strObj=new String(\"\"); are equal'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 915,
      "end": 1030,
      "test": {
        "type": "BinaryExpression",
        "start": 919,
        "end": 933,
        "left": {
          "type": "Identifier",
          "start": 919,
          "end": 922,
          "name": "str"
        },
        "operator": "===",
        "right": {
          "type": "Identifier",
          "start": 927,
          "end": 933,
          "name": "strObj"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 934,
        "end": 1030,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 938,
            "end": 1028,
            "argument": {
              "type": "NewExpression",
              "start": 944,
              "end": 1027,
              "callee": {
                "type": "Identifier",
                "start": 948,
                "end": 960,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 961,
                  "end": 1026,
                  "value": "#3: objects of str=\"\"; and strObj=new String(\"\"); are different",
                  "raw": "'#3: objects of str=\"\"; and strObj=new String(\"\"); are different'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1186,
      "end": 1312,
      "test": {
        "type": "BinaryExpression",
        "start": 1190,
        "end": 1217,
        "left": {
          "type": "UnaryExpression",
          "start": 1190,
          "end": 1200,
          "operator": "typeof",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "start": 1197,
            "end": 1200,
            "name": "str"
          }
        },
        "operator": "==",
        "right": {
          "type": "UnaryExpression",
          "start": 1204,
          "end": 1217,
          "operator": "typeof",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "start": 1211,
            "end": 1217,
            "name": "strObj"
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1218,
        "end": 1312,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1222,
            "end": 1310,
            "argument": {
              "type": "NewExpression",
              "start": 1228,
              "end": 1309,
              "callee": {
                "type": "Identifier",
                "start": 1232,
                "end": 1244,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1245,
                  "end": 1308,
                  "value": "#4: types of str=\"\"; and strObj=new String(\"\"); are different",
                  "raw": "'#4: types of str=\"\"; and strObj=new String(\"\"); are different'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}