{
  "type": "Program",
  "start": 0,
  "end": 2387,
  "body": [
    {
      "type": "IfStatement",
      "start": 301,
      "end": 428,
      "test": {
        "type": "BinaryExpression",
        "start": 305,
        "end": 347,
        "left": {
          "type": "Literal",
          "start": 305,
          "end": 312,
          "value": "\u0001F",
          "raw": "'\\x01F'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 317,
          "end": 347,
          "left": {
            "type": "CallExpression",
            "start": 317,
            "end": 341,
            "callee": {
              "type": "MemberExpression",
              "start": 317,
              "end": 336,
              "object": {
                "type": "Identifier",
                "start": 317,
                "end": 323,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 324,
                "end": 336,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 337,
                "end": 340,
                "value": "1",
                "raw": "'1'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 344,
            "end": 347,
            "value": "F",
            "raw": "'F'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 349,
        "end": 428,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 353,
            "end": 426,
            "argument": {
              "type": "NewExpression",
              "start": 359,
              "end": 425,
              "callee": {
                "type": "Identifier",
                "start": 363,
                "end": 375,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 376,
                  "end": 424,
                  "value": "#1: '\u0001F' === String.fromCharCode('1') + 'F'",
                  "raw": "\"#1: '\\x01F' === String.fromCharCode('1') + 'F'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 440,
      "end": 567,
      "test": {
        "type": "BinaryExpression",
        "start": 444,
        "end": 486,
        "left": {
          "type": "Literal",
          "start": 444,
          "end": 451,
          "value": "\u0002E",
          "raw": "'\\x02E'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 456,
          "end": 486,
          "left": {
            "type": "CallExpression",
            "start": 456,
            "end": 480,
            "callee": {
              "type": "MemberExpression",
              "start": 456,
              "end": 475,
              "object": {
                "type": "Identifier",
                "start": 456,
                "end": 462,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 463,
                "end": 475,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 476,
                "end": 479,
                "value": "2",
                "raw": "'2'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 483,
            "end": 486,
            "value": "E",
            "raw": "'E'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 488,
        "end": 567,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 492,
            "end": 565,
            "argument": {
              "type": "NewExpression",
              "start": 498,
              "end": 564,
              "callee": {
                "type": "Identifier",
                "start": 502,
                "end": 514,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 515,
                  "end": 563,
                  "value": "#2: '\u0002E' === String.fromCharCode('2') + 'E'",
                  "raw": "\"#2: '\\x02E' === String.fromCharCode('2') + 'E'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 579,
      "end": 706,
      "test": {
        "type": "BinaryExpression",
        "start": 583,
        "end": 625,
        "left": {
          "type": "Literal",
          "start": 583,
          "end": 590,
          "value": "\u0003D",
          "raw": "'\\x03D'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 595,
          "end": 625,
          "left": {
            "type": "CallExpression",
            "start": 595,
            "end": 619,
            "callee": {
              "type": "MemberExpression",
              "start": 595,
              "end": 614,
              "object": {
                "type": "Identifier",
                "start": 595,
                "end": 601,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 602,
                "end": 614,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 615,
                "end": 618,
                "value": "3",
                "raw": "'3'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 622,
            "end": 625,
            "value": "D",
            "raw": "'D'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 627,
        "end": 706,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 631,
            "end": 704,
            "argument": {
              "type": "NewExpression",
              "start": 637,
              "end": 703,
              "callee": {
                "type": "Identifier",
                "start": 641,
                "end": 653,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 654,
                  "end": 702,
                  "value": "#3: '\u0003D' === String.fromCharCode('3') + 'D'",
                  "raw": "\"#3: '\\x03D' === String.fromCharCode('3') + 'D'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 718,
      "end": 845,
      "test": {
        "type": "BinaryExpression",
        "start": 722,
        "end": 764,
        "left": {
          "type": "Literal",
          "start": 722,
          "end": 729,
          "value": "\u0004C",
          "raw": "'\\x04C'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 734,
          "end": 764,
          "left": {
            "type": "CallExpression",
            "start": 734,
            "end": 758,
            "callee": {
              "type": "MemberExpression",
              "start": 734,
              "end": 753,
              "object": {
                "type": "Identifier",
                "start": 734,
                "end": 740,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 741,
                "end": 753,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 754,
                "end": 757,
                "value": "4",
                "raw": "'4'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 761,
            "end": 764,
            "value": "C",
            "raw": "'C'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 766,
        "end": 845,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 770,
            "end": 843,
            "argument": {
              "type": "NewExpression",
              "start": 776,
              "end": 842,
              "callee": {
                "type": "Identifier",
                "start": 780,
                "end": 792,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 793,
                  "end": 841,
                  "value": "#4: '\u0004C' === String.fromCharCode('4') + 'C'",
                  "raw": "\"#4: '\\x04C' === String.fromCharCode('4') + 'C'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 857,
      "end": 984,
      "test": {
        "type": "BinaryExpression",
        "start": 861,
        "end": 903,
        "left": {
          "type": "Literal",
          "start": 861,
          "end": 868,
          "value": "\u0005B",
          "raw": "'\\x05B'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 873,
          "end": 903,
          "left": {
            "type": "CallExpression",
            "start": 873,
            "end": 897,
            "callee": {
              "type": "MemberExpression",
              "start": 873,
              "end": 892,
              "object": {
                "type": "Identifier",
                "start": 873,
                "end": 879,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 880,
                "end": 892,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 893,
                "end": 896,
                "value": "5",
                "raw": "'5'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 900,
            "end": 903,
            "value": "B",
            "raw": "'B'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 905,
        "end": 984,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 909,
            "end": 982,
            "argument": {
              "type": "NewExpression",
              "start": 915,
              "end": 981,
              "callee": {
                "type": "Identifier",
                "start": 919,
                "end": 931,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 932,
                  "end": 980,
                  "value": "#5: '\u0005B' === String.fromCharCode('5') + 'B'",
                  "raw": "\"#5: '\\x05B' === String.fromCharCode('5') + 'B'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 996,
      "end": 1123,
      "test": {
        "type": "BinaryExpression",
        "start": 1000,
        "end": 1042,
        "left": {
          "type": "Literal",
          "start": 1000,
          "end": 1007,
          "value": "\u0006A",
          "raw": "'\\x06A'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 1012,
          "end": 1042,
          "left": {
            "type": "CallExpression",
            "start": 1012,
            "end": 1036,
            "callee": {
              "type": "MemberExpression",
              "start": 1012,
              "end": 1031,
              "object": {
                "type": "Identifier",
                "start": 1012,
                "end": 1018,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 1019,
                "end": 1031,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1032,
                "end": 1035,
                "value": "6",
                "raw": "'6'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1039,
            "end": 1042,
            "value": "A",
            "raw": "'A'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1044,
        "end": 1123,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1048,
            "end": 1121,
            "argument": {
              "type": "NewExpression",
              "start": 1054,
              "end": 1120,
              "callee": {
                "type": "Identifier",
                "start": 1058,
                "end": 1070,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1071,
                  "end": 1119,
                  "value": "#6: '\u0006A' === String.fromCharCode('6') + 'A'",
                  "raw": "\"#6: '\\x06A' === String.fromCharCode('6') + 'A'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1135,
      "end": 1262,
      "test": {
        "type": "BinaryExpression",
        "start": 1139,
        "end": 1181,
        "left": {
          "type": "Literal",
          "start": 1139,
          "end": 1146,
          "value": "\u00079",
          "raw": "'\\x079'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 1151,
          "end": 1181,
          "left": {
            "type": "CallExpression",
            "start": 1151,
            "end": 1175,
            "callee": {
              "type": "MemberExpression",
              "start": 1151,
              "end": 1170,
              "object": {
                "type": "Identifier",
                "start": 1151,
                "end": 1157,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 1158,
                "end": 1170,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1171,
                "end": 1174,
                "value": "7",
                "raw": "'7'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1178,
            "end": 1181,
            "value": "9",
            "raw": "'9'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1183,
        "end": 1262,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1187,
            "end": 1260,
            "argument": {
              "type": "NewExpression",
              "start": 1193,
              "end": 1259,
              "callee": {
                "type": "Identifier",
                "start": 1197,
                "end": 1209,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1210,
                  "end": 1258,
                  "value": "#7: '\u00079' === String.fromCharCode('7') + '9'",
                  "raw": "\"#7: '\\x079' === String.fromCharCode('7') + '9'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1274,
      "end": 1401,
      "test": {
        "type": "BinaryExpression",
        "start": 1278,
        "end": 1320,
        "left": {
          "type": "Literal",
          "start": 1278,
          "end": 1285,
          "value": "\b8",
          "raw": "'\\x088'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 1290,
          "end": 1320,
          "left": {
            "type": "CallExpression",
            "start": 1290,
            "end": 1314,
            "callee": {
              "type": "MemberExpression",
              "start": 1290,
              "end": 1309,
              "object": {
                "type": "Identifier",
                "start": 1290,
                "end": 1296,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 1297,
                "end": 1309,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1310,
                "end": 1313,
                "value": "8",
                "raw": "'8'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1317,
            "end": 1320,
            "value": "8",
            "raw": "'8'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1322,
        "end": 1401,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1326,
            "end": 1399,
            "argument": {
              "type": "NewExpression",
              "start": 1332,
              "end": 1398,
              "callee": {
                "type": "Identifier",
                "start": 1336,
                "end": 1348,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1349,
                  "end": 1397,
                  "value": "#8: '\b8' === String.fromCharCode('8') + '8'",
                  "raw": "\"#8: '\\x088' === String.fromCharCode('8') + '8'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1413,
      "end": 1540,
      "test": {
        "type": "BinaryExpression",
        "start": 1417,
        "end": 1459,
        "left": {
          "type": "Literal",
          "start": 1417,
          "end": 1424,
          "value": "\t7",
          "raw": "'\\x097'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 1429,
          "end": 1459,
          "left": {
            "type": "CallExpression",
            "start": 1429,
            "end": 1453,
            "callee": {
              "type": "MemberExpression",
              "start": 1429,
              "end": 1448,
              "object": {
                "type": "Identifier",
                "start": 1429,
                "end": 1435,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 1436,
                "end": 1448,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1449,
                "end": 1452,
                "value": "9",
                "raw": "'9'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1456,
            "end": 1459,
            "value": "7",
            "raw": "'7'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1461,
        "end": 1540,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1465,
            "end": 1538,
            "argument": {
              "type": "NewExpression",
              "start": 1471,
              "end": 1537,
              "callee": {
                "type": "Identifier",
                "start": 1475,
                "end": 1487,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1488,
                  "end": 1536,
                  "value": "#9: '\t7' === String.fromCharCode('9') + '7'",
                  "raw": "\"#9: '\\x097' === String.fromCharCode('9') + '7'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1552,
      "end": 1681,
      "test": {
        "type": "BinaryExpression",
        "start": 1556,
        "end": 1599,
        "left": {
          "type": "Literal",
          "start": 1556,
          "end": 1563,
          "value": "\n6",
          "raw": "'\\x0A6'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 1568,
          "end": 1599,
          "left": {
            "type": "CallExpression",
            "start": 1568,
            "end": 1593,
            "callee": {
              "type": "MemberExpression",
              "start": 1568,
              "end": 1587,
              "object": {
                "type": "Identifier",
                "start": 1568,
                "end": 1574,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 1575,
                "end": 1587,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1588,
                "end": 1592,
                "value": "10",
                "raw": "'10'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1596,
            "end": 1599,
            "value": "6",
            "raw": "'6'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1601,
        "end": 1681,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1605,
            "end": 1679,
            "argument": {
              "type": "NewExpression",
              "start": 1611,
              "end": 1678,
              "callee": {
                "type": "Identifier",
                "start": 1615,
                "end": 1627,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1628,
                  "end": 1677,
                  "value": "#A: '\n6' === String.fromCharCode('10') + '6'",
                  "raw": "\"#A: '\\x0A6' === String.fromCharCode('10') + '6'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1693,
      "end": 1822,
      "test": {
        "type": "BinaryExpression",
        "start": 1697,
        "end": 1740,
        "left": {
          "type": "Literal",
          "start": 1697,
          "end": 1704,
          "value": "\u000b5",
          "raw": "'\\x0B5'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 1709,
          "end": 1740,
          "left": {
            "type": "CallExpression",
            "start": 1709,
            "end": 1734,
            "callee": {
              "type": "MemberExpression",
              "start": 1709,
              "end": 1728,
              "object": {
                "type": "Identifier",
                "start": 1709,
                "end": 1715,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 1716,
                "end": 1728,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1729,
                "end": 1733,
                "value": "11",
                "raw": "'11'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1737,
            "end": 1740,
            "value": "5",
            "raw": "'5'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1742,
        "end": 1822,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1746,
            "end": 1820,
            "argument": {
              "type": "NewExpression",
              "start": 1752,
              "end": 1819,
              "callee": {
                "type": "Identifier",
                "start": 1756,
                "end": 1768,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1769,
                  "end": 1818,
                  "value": "#B: '\u000b5' === String.fromCharCode('11') + '5'",
                  "raw": "\"#B: '\\x0B5' === String.fromCharCode('11') + '5'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1834,
      "end": 1963,
      "test": {
        "type": "BinaryExpression",
        "start": 1838,
        "end": 1881,
        "left": {
          "type": "Literal",
          "start": 1838,
          "end": 1845,
          "value": "\f4",
          "raw": "'\\x0C4'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 1850,
          "end": 1881,
          "left": {
            "type": "CallExpression",
            "start": 1850,
            "end": 1875,
            "callee": {
              "type": "MemberExpression",
              "start": 1850,
              "end": 1869,
              "object": {
                "type": "Identifier",
                "start": 1850,
                "end": 1856,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 1857,
                "end": 1869,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1870,
                "end": 1874,
                "value": "12",
                "raw": "'12'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1878,
            "end": 1881,
            "value": "4",
            "raw": "'4'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1883,
        "end": 1963,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1887,
            "end": 1961,
            "argument": {
              "type": "NewExpression",
              "start": 1893,
              "end": 1960,
              "callee": {
                "type": "Identifier",
                "start": 1897,
                "end": 1909,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1910,
                  "end": 1959,
                  "value": "#C: '\f4' === String.fromCharCode('12') + '4'",
                  "raw": "\"#C: '\\x0C4' === String.fromCharCode('12') + '4'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1975,
      "end": 2104,
      "test": {
        "type": "BinaryExpression",
        "start": 1979,
        "end": 2022,
        "left": {
          "type": "Literal",
          "start": 1979,
          "end": 1986,
          "value": "\r3",
          "raw": "'\\x0D3'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 1991,
          "end": 2022,
          "left": {
            "type": "CallExpression",
            "start": 1991,
            "end": 2016,
            "callee": {
              "type": "MemberExpression",
              "start": 1991,
              "end": 2010,
              "object": {
                "type": "Identifier",
                "start": 1991,
                "end": 1997,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 1998,
                "end": 2010,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 2011,
                "end": 2015,
                "value": "13",
                "raw": "'13'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 2019,
            "end": 2022,
            "value": "3",
            "raw": "'3'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2024,
        "end": 2104,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2028,
            "end": 2102,
            "argument": {
              "type": "NewExpression",
              "start": 2034,
              "end": 2101,
              "callee": {
                "type": "Identifier",
                "start": 2038,
                "end": 2050,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 2051,
                  "end": 2100,
                  "value": "#D: '\r3' === String.fromCharCode('13') + '3'",
                  "raw": "\"#D: '\\x0D3' === String.fromCharCode('13') + '3'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2116,
      "end": 2245,
      "test": {
        "type": "BinaryExpression",
        "start": 2120,
        "end": 2163,
        "left": {
          "type": "Literal",
          "start": 2120,
          "end": 2127,
          "value": "\u000e2",
          "raw": "'\\x0E2'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 2132,
          "end": 2163,
          "left": {
            "type": "CallExpression",
            "start": 2132,
            "end": 2157,
            "callee": {
              "type": "MemberExpression",
              "start": 2132,
              "end": 2151,
              "object": {
                "type": "Identifier",
                "start": 2132,
                "end": 2138,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 2139,
                "end": 2151,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 2152,
                "end": 2156,
                "value": "14",
                "raw": "'14'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 2160,
            "end": 2163,
            "value": "2",
            "raw": "'2'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2165,
        "end": 2245,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2169,
            "end": 2243,
            "argument": {
              "type": "NewExpression",
              "start": 2175,
              "end": 2242,
              "callee": {
                "type": "Identifier",
                "start": 2179,
                "end": 2191,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 2192,
                  "end": 2241,
                  "value": "#E: '\u000e2' === String.fromCharCode('14') + '2'",
                  "raw": "\"#E: '\\x0E2' === String.fromCharCode('14') + '2'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2257,
      "end": 2386,
      "test": {
        "type": "BinaryExpression",
        "start": 2261,
        "end": 2304,
        "left": {
          "type": "Literal",
          "start": 2261,
          "end": 2268,
          "value": "\u000f1",
          "raw": "'\\x0F1'",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 2273,
          "end": 2304,
          "left": {
            "type": "CallExpression",
            "start": 2273,
            "end": 2298,
            "callee": {
              "type": "MemberExpression",
              "start": 2273,
              "end": 2292,
              "object": {
                "type": "Identifier",
                "start": 2273,
                "end": 2279,
                "name": "String"
              },
              "property": {
                "type": "Identifier",
                "start": 2280,
                "end": 2292,
                "name": "fromCharCode"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 2293,
                "end": 2297,
                "value": "15",
                "raw": "'15'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 2301,
            "end": 2304,
            "value": "1",
            "raw": "'1'",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2306,
        "end": 2386,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2310,
            "end": 2384,
            "argument": {
              "type": "NewExpression",
              "start": 2316,
              "end": 2383,
              "callee": {
                "type": "Identifier",
                "start": 2320,
                "end": 2332,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 2333,
                  "end": 2382,
                  "value": "#F: '\u000f1' === String.fromCharCode('15') + '1'",
                  "raw": "\"#F: '\\x0F1' === String.fromCharCode('15') + '1'\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}