{
  "type": "Program",
  "start": 0,
  "end": 999,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 290,
      "end": 575,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 294,
          "end": 574,
          "id": {
            "type": "Identifier",
            "start": 294,
            "end": 307,
            "name": "CharacterCode"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 310,
            "end": 574,
            "elements": [
              {
                "type": "Literal",
                "start": 311,
                "end": 317,
                "value": 1072,
                "raw": "0x0430",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 319,
                "end": 325,
                "value": 1073,
                "raw": "0x0431",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 327,
                "end": 333,
                "value": 1074,
                "raw": "0x0432",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 335,
                "end": 341,
                "value": 1075,
                "raw": "0x0433",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 343,
                "end": 349,
                "value": 1076,
                "raw": "0x0434",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 351,
                "end": 357,
                "value": 1077,
                "raw": "0x0435",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 359,
                "end": 365,
                "value": 1078,
                "raw": "0x0436",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 367,
                "end": 373,
                "value": 1079,
                "raw": "0x0437",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 375,
                "end": 381,
                "value": 1080,
                "raw": "0x0438",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 383,
                "end": 389,
                "value": 1081,
                "raw": "0x0439",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 391,
                "end": 397,
                "value": 1082,
                "raw": "0x043A",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 399,
                "end": 405,
                "value": 1083,
                "raw": "0x043B",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 407,
                "end": 413,
                "value": 1084,
                "raw": "0x043C",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 415,
                "end": 421,
                "value": 1085,
                "raw": "0x043D",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 423,
                "end": 429,
                "value": 1086,
                "raw": "0x043E",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 431,
                "end": 437,
                "value": 1087,
                "raw": "0x043F",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 439,
                "end": 445,
                "value": 1088,
                "raw": "0x0440",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 447,
                "end": 453,
                "value": 1089,
                "raw": "0x0441",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 455,
                "end": 461,
                "value": 1090,
                "raw": "0x0442",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 463,
                "end": 469,
                "value": 1091,
                "raw": "0x0443",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 471,
                "end": 477,
                "value": 1092,
                "raw": "0x0444",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 479,
                "end": 485,
                "value": 1093,
                "raw": "0x0445",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 487,
                "end": 493,
                "value": 1094,
                "raw": "0x0446",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 495,
                "end": 501,
                "value": 1095,
                "raw": "0x0447",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 503,
                "end": 509,
                "value": 1096,
                "raw": "0x0448",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 511,
                "end": 517,
                "value": 1097,
                "raw": "0x0449",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 519,
                "end": 525,
                "value": 1098,
                "raw": "0x044A",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 527,
                "end": 533,
                "value": 1099,
                "raw": "0x044B",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 535,
                "end": 541,
                "value": 1100,
                "raw": "0x044C",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 543,
                "end": 549,
                "value": 1101,
                "raw": "0x044D",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 551,
                "end": 557,
                "value": 1102,
                "raw": "0x044E",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 559,
                "end": 565,
                "value": 1103,
                "raw": "0x044F",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 567,
                "end": 573,
                "value": 1105,
                "raw": "0x0451",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 576,
      "end": 800,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 580,
          "end": 799,
          "id": {
            "type": "Identifier",
            "start": 580,
            "end": 598,
            "name": "NonEscapeCharacter"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 601,
            "end": 799,
            "elements": [
              {
                "type": "Literal",
                "start": 602,
                "end": 606,
                "value": "а",
                "raw": "\"\\а\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 608,
                "end": 612,
                "value": "б",
                "raw": "\"\\б\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 614,
                "end": 618,
                "value": "в",
                "raw": "\"\\в\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 620,
                "end": 624,
                "value": "г",
                "raw": "\"\\г\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 626,
                "end": 630,
                "value": "д",
                "raw": "\"\\д\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 632,
                "end": 636,
                "value": "е",
                "raw": "\"\\е\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 638,
                "end": 642,
                "value": "ж",
                "raw": "\"\\ж\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 644,
                "end": 648,
                "value": "з",
                "raw": "\"\\з\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 650,
                "end": 654,
                "value": "и",
                "raw": "\"\\и\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 656,
                "end": 660,
                "value": "й",
                "raw": "\"\\й\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 662,
                "end": 666,
                "value": "к",
                "raw": "\"\\к\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 668,
                "end": 672,
                "value": "л",
                "raw": "\"\\л\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 674,
                "end": 678,
                "value": "м",
                "raw": "\"\\м\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 680,
                "end": 684,
                "value": "н",
                "raw": "\"\\н\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 686,
                "end": 690,
                "value": "о",
                "raw": "\"\\о\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 692,
                "end": 696,
                "value": "п",
                "raw": "\"\\п\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 698,
                "end": 702,
                "value": "р",
                "raw": "\"\\р\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 704,
                "end": 708,
                "value": "с",
                "raw": "\"\\с\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 710,
                "end": 714,
                "value": "т",
                "raw": "\"\\т\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 716,
                "end": 720,
                "value": "у",
                "raw": "\"\\у\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 722,
                "end": 726,
                "value": "ф",
                "raw": "\"\\ф\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 728,
                "end": 732,
                "value": "х",
                "raw": "\"\\х\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 734,
                "end": 738,
                "value": "ц",
                "raw": "\"\\ц\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 740,
                "end": 744,
                "value": "ч",
                "raw": "\"\\ч\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 746,
                "end": 750,
                "value": "ш",
                "raw": "\"\\ш\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 752,
                "end": 756,
                "value": "щ",
                "raw": "\"\\щ\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 758,
                "end": 762,
                "value": "ъ",
                "raw": "\"\\ъ\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 764,
                "end": 768,
                "value": "ы",
                "raw": "\"\\ы\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 770,
                "end": 774,
                "value": "ь",
                "raw": "\"\\ь\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 776,
                "end": 780,
                "value": "э",
                "raw": "\"\\э\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 782,
                "end": 786,
                "value": "ю",
                "raw": "\"\\ю\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 788,
                "end": 792,
                "value": "я",
                "raw": "\"\\я\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 794,
                "end": 798,
                "value": "ё",
                "raw": "\"\\ё\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ForStatement",
      "start": 801,
      "end": 998,
      "init": {
        "type": "VariableDeclaration",
        "start": 806,
        "end": 819,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 810,
            "end": 819,
            "id": {
              "type": "Identifier",
              "start": 810,
              "end": 815,
              "name": "index"
            },
            "init": {
              "type": "Literal",
              "start": 818,
              "end": 819,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 821,
        "end": 832,
        "left": {
          "type": "Identifier",
          "start": 821,
          "end": 826,
          "name": "index"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 830,
          "end": 832,
          "value": 32,
          "raw": "32",
          "regex": null,
          "bigint": null
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 834,
        "end": 841,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 834,
          "end": 839,
          "name": "index"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 843,
        "end": 998,
        "body": [
          {
            "type": "IfStatement",
            "start": 847,
            "end": 996,
            "test": {
              "type": "BinaryExpression",
              "start": 851,
              "end": 922,
              "left": {
                "type": "CallExpression",
                "start": 851,
                "end": 892,
                "callee": {
                  "type": "MemberExpression",
                  "start": 851,
                  "end": 870,
                  "object": {
                    "type": "Identifier",
                    "start": 851,
                    "end": 857,
                    "name": "String"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 858,
                    "end": 870,
                    "name": "fromCharCode"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 871,
                    "end": 891,
                    "object": {
                      "type": "Identifier",
                      "start": 871,
                      "end": 884,
                      "name": "CharacterCode"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 885,
                      "end": 890,
                      "name": "index"
                    },
                    "computed": true,
                    "optional": false
                  }
                ],
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "start": 897,
                "end": 922,
                "object": {
                  "type": "Identifier",
                  "start": 897,
                  "end": 915,
                  "name": "NonEscapeCharacter"
                },
                "property": {
                  "type": "Identifier",
                  "start": 916,
                  "end": 921,
                  "name": "index"
                },
                "computed": true,
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 924,
              "end": 996,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 930,
                  "end": 992,
                  "argument": {
                    "type": "NewExpression",
                    "start": 936,
                    "end": 991,
                    "callee": {
                      "type": "Identifier",
                      "start": 940,
                      "end": 952,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 953,
                        "end": 990,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 953,
                          "end": 984,
                          "left": {
                            "type": "Literal",
                            "start": 953,
                            "end": 956,
                            "value": "#",
                            "raw": "'#'",
                            "regex": null,
                            "bigint": null
                          },
                          "operator": "+",
                          "right": {
                            "type": "MemberExpression",
                            "start": 959,
                            "end": 984,
                            "object": {
                              "type": "Identifier",
                              "start": 959,
                              "end": 977,
                              "name": "NonEscapeCharacter"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 978,
                              "end": 983,
                              "name": "index"
                            },
                            "computed": true,
                            "optional": false
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 987,
                          "end": 990,
                          "value": " ",
                          "raw": "' '",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}