{
  "type": "Program",
  "start": 0,
  "end": 1435,
  "body": [
    {
      "type": "IfStatement",
      "start": 266,
      "end": 327,
      "test": {
        "type": "BinaryExpression",
        "start": 270,
        "end": 279,
        "left": {
          "type": "Literal",
          "start": 270,
          "end": 273,
          "value": 0,
          "raw": "0X0",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 278,
          "end": 279,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 281,
        "end": 327,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 285,
            "end": 325,
            "argument": {
              "type": "NewExpression",
              "start": 291,
              "end": 324,
              "callee": {
                "type": "Identifier",
                "start": 295,
                "end": 307,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 308,
                  "end": 323,
                  "value": "#0: 0X0 === 0",
                  "raw": "'#0: 0X0 === 0'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 339,
      "end": 400,
      "test": {
        "type": "BinaryExpression",
        "start": 343,
        "end": 352,
        "left": {
          "type": "Literal",
          "start": 343,
          "end": 346,
          "value": 1,
          "raw": "0X1",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 351,
          "end": 352,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 354,
        "end": 400,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 358,
            "end": 398,
            "argument": {
              "type": "NewExpression",
              "start": 364,
              "end": 397,
              "callee": {
                "type": "Identifier",
                "start": 368,
                "end": 380,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 381,
                  "end": 396,
                  "value": "#1: 0X1 === 1",
                  "raw": "'#1: 0X1 === 1'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 412,
      "end": 473,
      "test": {
        "type": "BinaryExpression",
        "start": 416,
        "end": 425,
        "left": {
          "type": "Literal",
          "start": 416,
          "end": 419,
          "value": 2,
          "raw": "0X2",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 424,
          "end": 425,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 427,
        "end": 473,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 431,
            "end": 471,
            "argument": {
              "type": "NewExpression",
              "start": 437,
              "end": 470,
              "callee": {
                "type": "Identifier",
                "start": 441,
                "end": 453,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 454,
                  "end": 469,
                  "value": "#2: 0X2 === 2",
                  "raw": "'#2: 0X2 === 2'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 485,
      "end": 546,
      "test": {
        "type": "BinaryExpression",
        "start": 489,
        "end": 498,
        "left": {
          "type": "Literal",
          "start": 489,
          "end": 492,
          "value": 3,
          "raw": "0X3",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 497,
          "end": 498,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 500,
        "end": 546,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 504,
            "end": 544,
            "argument": {
              "type": "NewExpression",
              "start": 510,
              "end": 543,
              "callee": {
                "type": "Identifier",
                "start": 514,
                "end": 526,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 527,
                  "end": 542,
                  "value": "#3: 0X3 === 3",
                  "raw": "'#3: 0X3 === 3'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 558,
      "end": 619,
      "test": {
        "type": "BinaryExpression",
        "start": 562,
        "end": 571,
        "left": {
          "type": "Literal",
          "start": 562,
          "end": 565,
          "value": 4,
          "raw": "0X4",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 570,
          "end": 571,
          "value": 4,
          "raw": "4",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 573,
        "end": 619,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 577,
            "end": 617,
            "argument": {
              "type": "NewExpression",
              "start": 583,
              "end": 616,
              "callee": {
                "type": "Identifier",
                "start": 587,
                "end": 599,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 600,
                  "end": 615,
                  "value": "#4: 0X4 === 4",
                  "raw": "'#4: 0X4 === 4'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 631,
      "end": 692,
      "test": {
        "type": "BinaryExpression",
        "start": 635,
        "end": 644,
        "left": {
          "type": "Literal",
          "start": 635,
          "end": 638,
          "value": 5,
          "raw": "0X5",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 643,
          "end": 644,
          "value": 5,
          "raw": "5",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 646,
        "end": 692,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 650,
            "end": 690,
            "argument": {
              "type": "NewExpression",
              "start": 656,
              "end": 689,
              "callee": {
                "type": "Identifier",
                "start": 660,
                "end": 672,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 673,
                  "end": 688,
                  "value": "#5: 0X5 === 5",
                  "raw": "'#5: 0X5 === 5'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 704,
      "end": 765,
      "test": {
        "type": "BinaryExpression",
        "start": 708,
        "end": 717,
        "left": {
          "type": "Literal",
          "start": 708,
          "end": 711,
          "value": 6,
          "raw": "0X6",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 716,
          "end": 717,
          "value": 6,
          "raw": "6",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 719,
        "end": 765,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 723,
            "end": 763,
            "argument": {
              "type": "NewExpression",
              "start": 729,
              "end": 762,
              "callee": {
                "type": "Identifier",
                "start": 733,
                "end": 745,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 746,
                  "end": 761,
                  "value": "#6: 0X6 === 6",
                  "raw": "'#6: 0X6 === 6'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 777,
      "end": 838,
      "test": {
        "type": "BinaryExpression",
        "start": 781,
        "end": 790,
        "left": {
          "type": "Literal",
          "start": 781,
          "end": 784,
          "value": 7,
          "raw": "0X7",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 789,
          "end": 790,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 792,
        "end": 838,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 796,
            "end": 836,
            "argument": {
              "type": "NewExpression",
              "start": 802,
              "end": 835,
              "callee": {
                "type": "Identifier",
                "start": 806,
                "end": 818,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 819,
                  "end": 834,
                  "value": "#7: 0X7 === 7",
                  "raw": "'#7: 0X7 === 7'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 850,
      "end": 911,
      "test": {
        "type": "BinaryExpression",
        "start": 854,
        "end": 863,
        "left": {
          "type": "Literal",
          "start": 854,
          "end": 857,
          "value": 8,
          "raw": "0X8",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 862,
          "end": 863,
          "value": 8,
          "raw": "8",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 865,
        "end": 911,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 869,
            "end": 909,
            "argument": {
              "type": "NewExpression",
              "start": 875,
              "end": 908,
              "callee": {
                "type": "Identifier",
                "start": 879,
                "end": 891,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 892,
                  "end": 907,
                  "value": "#8: 0X8 === 8",
                  "raw": "'#8: 0X8 === 8'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 923,
      "end": 984,
      "test": {
        "type": "BinaryExpression",
        "start": 927,
        "end": 936,
        "left": {
          "type": "Literal",
          "start": 927,
          "end": 930,
          "value": 9,
          "raw": "0X9",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 935,
          "end": 936,
          "value": 9,
          "raw": "9",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 938,
        "end": 984,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 942,
            "end": 982,
            "argument": {
              "type": "NewExpression",
              "start": 948,
              "end": 981,
              "callee": {
                "type": "Identifier",
                "start": 952,
                "end": 964,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 965,
                  "end": 980,
                  "value": "#9: 0X9 === 9",
                  "raw": "'#9: 0X9 === 9'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 996,
      "end": 1059,
      "test": {
        "type": "BinaryExpression",
        "start": 1000,
        "end": 1010,
        "left": {
          "type": "Literal",
          "start": 1000,
          "end": 1003,
          "value": 10,
          "raw": "0XA",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1008,
          "end": 1010,
          "value": 10,
          "raw": "10",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1012,
        "end": 1059,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1016,
            "end": 1057,
            "argument": {
              "type": "NewExpression",
              "start": 1022,
              "end": 1056,
              "callee": {
                "type": "Identifier",
                "start": 1026,
                "end": 1038,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1039,
                  "end": 1055,
                  "value": "#A: 0XA === 10",
                  "raw": "'#A: 0XA === 10'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1071,
      "end": 1134,
      "test": {
        "type": "BinaryExpression",
        "start": 1075,
        "end": 1085,
        "left": {
          "type": "Literal",
          "start": 1075,
          "end": 1078,
          "value": 11,
          "raw": "0XB",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1083,
          "end": 1085,
          "value": 11,
          "raw": "11",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1087,
        "end": 1134,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1091,
            "end": 1132,
            "argument": {
              "type": "NewExpression",
              "start": 1097,
              "end": 1131,
              "callee": {
                "type": "Identifier",
                "start": 1101,
                "end": 1113,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1114,
                  "end": 1130,
                  "value": "#B: 0XB === 11",
                  "raw": "'#B: 0XB === 11'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1146,
      "end": 1209,
      "test": {
        "type": "BinaryExpression",
        "start": 1150,
        "end": 1160,
        "left": {
          "type": "Literal",
          "start": 1150,
          "end": 1153,
          "value": 12,
          "raw": "0XC",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1158,
          "end": 1160,
          "value": 12,
          "raw": "12",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1162,
        "end": 1209,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1166,
            "end": 1207,
            "argument": {
              "type": "NewExpression",
              "start": 1172,
              "end": 1206,
              "callee": {
                "type": "Identifier",
                "start": 1176,
                "end": 1188,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1189,
                  "end": 1205,
                  "value": "#C: 0XC === 12",
                  "raw": "'#C: 0XC === 12'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1221,
      "end": 1284,
      "test": {
        "type": "BinaryExpression",
        "start": 1225,
        "end": 1235,
        "left": {
          "type": "Literal",
          "start": 1225,
          "end": 1228,
          "value": 13,
          "raw": "0XD",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1233,
          "end": 1235,
          "value": 13,
          "raw": "13",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1237,
        "end": 1284,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1241,
            "end": 1282,
            "argument": {
              "type": "NewExpression",
              "start": 1247,
              "end": 1281,
              "callee": {
                "type": "Identifier",
                "start": 1251,
                "end": 1263,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1264,
                  "end": 1280,
                  "value": "#D: 0XD === 13",
                  "raw": "'#D: 0XD === 13'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1296,
      "end": 1359,
      "test": {
        "type": "BinaryExpression",
        "start": 1300,
        "end": 1310,
        "left": {
          "type": "Literal",
          "start": 1300,
          "end": 1303,
          "value": 14,
          "raw": "0XE",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1308,
          "end": 1310,
          "value": 14,
          "raw": "14",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1312,
        "end": 1359,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1316,
            "end": 1357,
            "argument": {
              "type": "NewExpression",
              "start": 1322,
              "end": 1356,
              "callee": {
                "type": "Identifier",
                "start": 1326,
                "end": 1338,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1339,
                  "end": 1355,
                  "value": "#E: 0XE === 14",
                  "raw": "'#E: 0XE === 14'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1371,
      "end": 1434,
      "test": {
        "type": "BinaryExpression",
        "start": 1375,
        "end": 1385,
        "left": {
          "type": "Literal",
          "start": 1375,
          "end": 1378,
          "value": 15,
          "raw": "0XF",
          "regex": null,
          "bigint": null
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1383,
          "end": 1385,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1387,
        "end": 1434,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1391,
            "end": 1432,
            "argument": {
              "type": "NewExpression",
              "start": 1397,
              "end": 1431,
              "callee": {
                "type": "Identifier",
                "start": 1401,
                "end": 1413,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1414,
                  "end": 1430,
                  "value": "#F: 0XF === 15",
                  "raw": "'#F: 0XF === 15'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}