{
  "type": "Program",
  "start": 0,
  "end": 1144,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 276,
      "end": 285,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 280,
          "end": 284,
          "id": {
            "type": "Identifier",
            "start": 280,
            "end": 281,
            "name": "y"
          },
          "init": {
            "type": "Literal",
            "start": 282,
            "end": 284,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 286,
      "end": 295,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 290,
          "end": 294,
          "id": {
            "type": "Identifier",
            "start": 290,
            "end": 291,
            "name": "z"
          },
          "init": {
            "type": "Literal",
            "start": 292,
            "end": 294,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 296,
      "end": 311,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 300,
          "end": 309,
          "id": {
            "type": "Identifier",
            "start": 300,
            "end": 301,
            "name": "x"
          },
          "init": {
            "type": "BinaryExpression",
            "start": 304,
            "end": 309,
            "left": {
              "type": "Identifier",
              "start": 304,
              "end": 305,
              "name": "y"
            },
            "operator": "%",
            "right": {
              "type": "Identifier",
              "start": 308,
              "end": 309,
              "name": "z"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 312,
      "end": 413,
      "test": {
        "type": "BinaryExpression",
        "start": 316,
        "end": 323,
        "left": {
          "type": "Identifier",
          "start": 316,
          "end": 317,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 322,
          "end": 323,
          "value": 6,
          "raw": "6",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 325,
        "end": 413,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 329,
            "end": 411,
            "argument": {
              "type": "NewExpression",
              "start": 335,
              "end": 410,
              "callee": {
                "type": "Identifier",
                "start": 339,
                "end": 351,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 352,
                  "end": 409,
                  "left": {
                    "type": "Literal",
                    "start": 352,
                    "end": 403,
                    "value": "#1: var\\nx\\n=\\ny\\n%\\nz\\n; x === 6. Actual: ",
                    "raw": "'#1: var\\\\nx\\\\n=\\\\ny\\\\n%\\\\nz\\\\n; x === 6. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 406,
                    "end": 409,
                    "expression": {
                      "type": "Identifier",
                      "start": 407,
                      "end": 408,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 414,
      "end": 418,
      "expression": {
        "type": "AssignmentExpression",
        "start": 414,
        "end": 417,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 414,
          "end": 415,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 416,
          "end": 417,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 431,
      "end": 440,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 435,
          "end": 439,
          "id": {
            "type": "Identifier",
            "start": 435,
            "end": 436,
            "name": "y"
          },
          "init": {
            "type": "Literal",
            "start": 437,
            "end": 439,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 441,
      "end": 450,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 445,
          "end": 449,
          "id": {
            "type": "Identifier",
            "start": 445,
            "end": 446,
            "name": "z"
          },
          "init": {
            "type": "Literal",
            "start": 447,
            "end": 449,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 451,
      "end": 466,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 455,
          "end": 464,
          "id": {
            "type": "Identifier",
            "start": 455,
            "end": 456,
            "name": "x"
          },
          "init": {
            "type": "BinaryExpression",
            "start": 459,
            "end": 464,
            "left": {
              "type": "Identifier",
              "start": 459,
              "end": 460,
              "name": "y"
            },
            "operator": "%",
            "right": {
              "type": "Identifier",
              "start": 463,
              "end": 464,
              "name": "z"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 467,
      "end": 568,
      "test": {
        "type": "BinaryExpression",
        "start": 471,
        "end": 478,
        "left": {
          "type": "Identifier",
          "start": 471,
          "end": 472,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 477,
          "end": 478,
          "value": 6,
          "raw": "6",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 480,
        "end": 568,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 484,
            "end": 566,
            "argument": {
              "type": "NewExpression",
              "start": 490,
              "end": 565,
              "callee": {
                "type": "Identifier",
                "start": 494,
                "end": 506,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 507,
                  "end": 564,
                  "left": {
                    "type": "Literal",
                    "start": 507,
                    "end": 558,
                    "value": "#2: var\\nx\\n=\\ny\\n%\\nz\\n; x === 6. Actual: ",
                    "raw": "'#2: var\\\\nx\\\\n=\\\\ny\\\\n%\\\\nz\\\\n; x === 6. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 561,
                    "end": 564,
                    "expression": {
                      "type": "Identifier",
                      "start": 562,
                      "end": 563,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 569,
      "end": 573,
      "expression": {
        "type": "AssignmentExpression",
        "start": 569,
        "end": 572,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 569,
          "end": 570,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 571,
          "end": 572,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 586,
      "end": 597,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 590,
          "end": 596,
          "id": {
            "type": "Identifier",
            "start": 590,
            "end": 596,
            "name": "result"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 598,
      "end": 607,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 602,
          "end": 606,
          "id": {
            "type": "Identifier",
            "start": 602,
            "end": 603,
            "name": "y"
          },
          "init": {
            "type": "Literal",
            "start": 604,
            "end": 606,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 608,
      "end": 617,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 612,
          "end": 616,
          "id": {
            "type": "Identifier",
            "start": 612,
            "end": 613,
            "name": "z"
          },
          "init": {
            "type": "Literal",
            "start": 614,
            "end": 616,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 618,
      "end": 690,
      "expression": {
        "type": "CallExpression",
        "start": 618,
        "end": 689,
        "callee": {
          "type": "Identifier",
          "start": 618,
          "end": 622,
          "name": "eval"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 623,
            "end": 688,
            "value": " var x = y % z ; result = x;",
            "raw": "\"\\u2028var\\u2028x\\u2028=\\u2028y\\u2028%\\u2028z\\u2028; result = x;\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "IfStatement",
      "start": 691,
      "end": 859,
      "test": {
        "type": "BinaryExpression",
        "start": 695,
        "end": 707,
        "left": {
          "type": "Identifier",
          "start": 695,
          "end": 701,
          "name": "result"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 706,
          "end": 707,
          "value": 6,
          "raw": "6",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 709,
        "end": 859,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 713,
            "end": 857,
            "argument": {
              "type": "NewExpression",
              "start": 719,
              "end": 856,
              "callee": {
                "type": "Identifier",
                "start": 723,
                "end": 735,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 736,
                  "end": 855,
                  "left": {
                    "type": "Literal",
                    "start": 736,
                    "end": 844,
                    "value": "#3: eval(\"\\u2028var\\u2028x\\u2028=\\u2028y\\u2028%\\u2028z\\u2028; result = x;\"); result === 6. Actual: ",
                    "raw": "'#3: eval(\"\\\\u2028var\\\\u2028x\\\\u2028=\\\\u2028y\\\\u2028%\\\\u2028z\\\\u2028; result = x;\"); result === 6. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 847,
                    "end": 855,
                    "expression": {
                      "type": "Identifier",
                      "start": 848,
                      "end": 854,
                      "name": "result"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 860,
      "end": 869,
      "expression": {
        "type": "AssignmentExpression",
        "start": 860,
        "end": 868,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 860,
          "end": 866,
          "name": "result"
        },
        "right": {
          "type": "Literal",
          "start": 867,
          "end": 868,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 882,
      "end": 891,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 886,
          "end": 890,
          "id": {
            "type": "Identifier",
            "start": 886,
            "end": 887,
            "name": "y"
          },
          "init": {
            "type": "Literal",
            "start": 888,
            "end": 890,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 892,
      "end": 901,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 896,
          "end": 900,
          "id": {
            "type": "Identifier",
            "start": 896,
            "end": 897,
            "name": "z"
          },
          "init": {
            "type": "Literal",
            "start": 898,
            "end": 900,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 902,
      "end": 974,
      "expression": {
        "type": "CallExpression",
        "start": 902,
        "end": 973,
        "callee": {
          "type": "Identifier",
          "start": 902,
          "end": 906,
          "name": "eval"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 907,
            "end": 972,
            "value": " var x = y % z ; result = x;",
            "raw": "\"\\u2029var\\u2029x\\u2029=\\u2029y\\u2029%\\u2029z\\u2029; result = x;\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "IfStatement",
      "start": 975,
      "end": 1143,
      "test": {
        "type": "BinaryExpression",
        "start": 979,
        "end": 991,
        "left": {
          "type": "Identifier",
          "start": 979,
          "end": 985,
          "name": "result"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 990,
          "end": 991,
          "value": 6,
          "raw": "6",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 993,
        "end": 1143,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 997,
            "end": 1141,
            "argument": {
              "type": "NewExpression",
              "start": 1003,
              "end": 1140,
              "callee": {
                "type": "Identifier",
                "start": 1007,
                "end": 1019,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1020,
                  "end": 1139,
                  "left": {
                    "type": "Literal",
                    "start": 1020,
                    "end": 1128,
                    "value": "#4: eval(\"\\u2029var\\u2029x\\u2029=\\u2029y\\u2029%\\u2029z\\u2029; result = x;\"); result === 6. Actual: ",
                    "raw": "'#4: eval(\"\\\\u2029var\\\\u2029x\\\\u2029=\\\\u2029y\\\\u2029%\\\\u2029z\\\\u2029; result = x;\"); result === 6. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1131,
                    "end": 1139,
                    "expression": {
                      "type": "Identifier",
                      "start": 1132,
                      "end": 1138,
                      "name": "result"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}