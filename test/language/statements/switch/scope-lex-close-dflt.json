{
  "type": "Program",
  "start": 0,
  "end": 1437,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 795,
      "end": 813,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 799,
          "end": 812,
          "id": {
            "type": "Identifier",
            "start": 799,
            "end": 800,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 803,
            "end": 812,
            "value": "outside",
            "raw": "'outside'",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 814,
      "end": 866,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 818,
          "end": 830,
          "id": {
            "type": "Identifier",
            "start": 818,
            "end": 830,
            "name": "probeDefault"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 832,
          "end": 854,
          "id": {
            "type": "Identifier",
            "start": 832,
            "end": 854,
            "name": "probeDefaultBeforeCase"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 856,
          "end": 865,
          "id": {
            "type": "Identifier",
            "start": 856,
            "end": 865,
            "name": "probeCase"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "SwitchStatement",
      "start": 868,
      "end": 963,
      "discriminant": {
        "type": "Literal",
        "start": 876,
        "end": 880,
        "value": null,
        "raw": "null",
        "regex": null,
        "bigint": null
      },
      "cases": [
        {
          "type": "SwitchCase",
          "start": 886,
          "end": 961,
          "consequent": [
            {
              "type": "VariableDeclaration",
              "start": 899,
              "end": 916,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 903,
                  "end": 915,
                  "id": {
                    "type": "Identifier",
                    "start": 903,
                    "end": 904,
                    "name": "x"
                  },
                  "init": {
                    "type": "Literal",
                    "start": 907,
                    "end": 915,
                    "value": "inside",
                    "raw": "'inside'",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "kind": "let"
            },
            {
              "type": "ExpressionStatement",
              "start": 921,
              "end": 961,
              "expression": {
                "type": "AssignmentExpression",
                "start": 921,
                "end": 960,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 921,
                  "end": 933,
                  "name": "probeDefault"
                },
                "right": {
                  "type": "FunctionExpression",
                  "start": 936,
                  "end": 960,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 947,
                    "end": 960,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 949,
                        "end": 958,
                        "argument": {
                          "type": "Identifier",
                          "start": 956,
                          "end": 957,
                          "name": "x"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ],
          "test": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 965,
      "end": 1039,
      "expression": {
        "type": "CallExpression",
        "start": 965,
        "end": 1038,
        "callee": {
          "type": "MemberExpression",
          "start": 965,
          "end": 981,
          "object": {
            "type": "Identifier",
            "start": 965,
            "end": 971,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 972,
            "end": 981,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 982,
            "end": 996,
            "callee": {
              "type": "Identifier",
              "start": 982,
              "end": 994,
              "name": "probeDefault"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 998,
            "end": 1006,
            "value": "inside",
            "raw": "'inside'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1008,
            "end": 1037,
            "value": "from lone `default` clause`",
            "raw": "'from lone `default` clause`'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1040,
      "end": 1071,
      "expression": {
        "type": "CallExpression",
        "start": 1040,
        "end": 1070,
        "callee": {
          "type": "MemberExpression",
          "start": 1040,
          "end": 1056,
          "object": {
            "type": "Identifier",
            "start": 1040,
            "end": 1046,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1047,
            "end": 1056,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1057,
            "end": 1058,
            "name": "x"
          },
          {
            "type": "Literal",
            "start": 1060,
            "end": 1069,
            "value": "outside",
            "raw": "'outside'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "SwitchStatement",
      "start": 1073,
      "end": 1230,
      "discriminant": {
        "type": "Literal",
        "start": 1081,
        "end": 1085,
        "value": null,
        "raw": "null",
        "regex": null,
        "bigint": null
      },
      "cases": [
        {
          "type": "SwitchCase",
          "start": 1091,
          "end": 1176,
          "consequent": [
            {
              "type": "VariableDeclaration",
              "start": 1104,
              "end": 1121,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 1108,
                  "end": 1120,
                  "id": {
                    "type": "Identifier",
                    "start": 1108,
                    "end": 1109,
                    "name": "x"
                  },
                  "init": {
                    "type": "Literal",
                    "start": 1112,
                    "end": 1120,
                    "value": "inside",
                    "raw": "'inside'",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "kind": "let"
            },
            {
              "type": "ExpressionStatement",
              "start": 1126,
              "end": 1176,
              "expression": {
                "type": "AssignmentExpression",
                "start": 1126,
                "end": 1175,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 1126,
                  "end": 1148,
                  "name": "probeDefaultBeforeCase"
                },
                "right": {
                  "type": "FunctionExpression",
                  "start": 1151,
                  "end": 1175,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 1162,
                    "end": 1175,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 1164,
                        "end": 1173,
                        "argument": {
                          "type": "Identifier",
                          "start": 1171,
                          "end": 1172,
                          "name": "x"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ],
          "test": null
        },
        {
          "type": "SwitchCase",
          "start": 1179,
          "end": 1228,
          "consequent": [
            {
              "type": "ExpressionStatement",
              "start": 1191,
              "end": 1228,
              "expression": {
                "type": "AssignmentExpression",
                "start": 1191,
                "end": 1227,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 1191,
                  "end": 1200,
                  "name": "probeCase"
                },
                "right": {
                  "type": "FunctionExpression",
                  "start": 1203,
                  "end": 1227,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 1214,
                    "end": 1227,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 1216,
                        "end": 1225,
                        "argument": {
                          "type": "Identifier",
                          "start": 1223,
                          "end": 1224,
                          "name": "x"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ],
          "test": {
            "type": "Literal",
            "start": 1184,
            "end": 1185,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1232,
      "end": 1342,
      "expression": {
        "type": "CallExpression",
        "start": 1232,
        "end": 1341,
        "callee": {
          "type": "MemberExpression",
          "start": 1232,
          "end": 1248,
          "object": {
            "type": "Identifier",
            "start": 1232,
            "end": 1238,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1239,
            "end": 1248,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1252,
            "end": 1276,
            "callee": {
              "type": "Identifier",
              "start": 1252,
              "end": 1274,
              "name": "probeDefaultBeforeCase"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1280,
            "end": 1288,
            "value": "inside",
            "raw": "'inside'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1292,
            "end": 1339,
            "value": "from `default` clause preceding `case` clause",
            "raw": "'from `default` clause preceding `case` clause'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1343,
      "end": 1436,
      "expression": {
        "type": "CallExpression",
        "start": 1343,
        "end": 1435,
        "callee": {
          "type": "MemberExpression",
          "start": 1343,
          "end": 1359,
          "object": {
            "type": "Identifier",
            "start": 1343,
            "end": 1349,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1350,
            "end": 1359,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1363,
            "end": 1374,
            "callee": {
              "type": "Identifier",
              "start": 1363,
              "end": 1372,
              "name": "probeCase"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1376,
            "end": 1384,
            "value": "inside",
            "raw": "'inside'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1386,
            "end": 1433,
            "value": "from `case` clause following `default` clause",
            "raw": "'from `case` clause following `default` clause'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}