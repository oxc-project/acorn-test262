{
  "type": "Program",
  "start": 0,
  "end": 2029,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 337,
      "end": 645,
      "id": {
        "type": "Identifier",
        "start": 346,
        "end": 356,
        "name": "SwitchTest"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 357,
          "end": 362,
          "name": "value"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 363,
        "end": 645,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 367,
            "end": 382,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 371,
                "end": 381,
                "id": {
                  "type": "Identifier",
                  "start": 371,
                  "end": 377,
                  "name": "result"
                },
                "init": {
                  "type": "Literal",
                  "start": 380,
                  "end": 381,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "SwitchStatement",
            "start": 388,
            "end": 623,
            "discriminant": {
              "type": "Identifier",
              "start": 395,
              "end": 400,
              "name": "value"
            },
            "cases": [
              {
                "type": "SwitchCase",
                "start": 408,
                "end": 434,
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 422,
                    "end": 434,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 422,
                      "end": 433,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 422,
                        "end": 428,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 432,
                        "end": 433,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                ],
                "test": {
                  "type": "Literal",
                  "start": 413,
                  "end": 414,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              },
              {
                "type": "SwitchCase",
                "start": 439,
                "end": 478,
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 453,
                    "end": 465,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 453,
                      "end": 464,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 453,
                        "end": 459,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 463,
                        "end": 464,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  },
                  {
                    "type": "BreakStatement",
                    "start": 472,
                    "end": 478,
                    "label": null
                  }
                ],
                "test": {
                  "type": "Literal",
                  "start": 444,
                  "end": 445,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              },
              {
                "type": "SwitchCase",
                "start": 483,
                "end": 509,
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 497,
                    "end": 509,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 497,
                      "end": 508,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 497,
                        "end": 503,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 507,
                        "end": 508,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                ],
                "test": {
                  "type": "Literal",
                  "start": 488,
                  "end": 489,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              },
              {
                "type": "SwitchCase",
                "start": 514,
                "end": 541,
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 528,
                    "end": 541,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 528,
                      "end": 540,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 528,
                        "end": 534,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 538,
                        "end": 540,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                ],
                "test": {
                  "type": "Literal",
                  "start": 519,
                  "end": 520,
                  "value": 3,
                  "raw": "3",
                  "regex": null,
                  "bigint": null
                }
              },
              {
                "type": "SwitchCase",
                "start": 546,
                "end": 587,
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 561,
                    "end": 574,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 561,
                      "end": 573,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 561,
                        "end": 567,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 571,
                        "end": 573,
                        "value": 32,
                        "raw": "32",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  },
                  {
                    "type": "BreakStatement",
                    "start": 581,
                    "end": 587,
                    "label": null
                  }
                ],
                "test": null
              },
              {
                "type": "SwitchCase",
                "start": 592,
                "end": 619,
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "start": 606,
                    "end": 619,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 606,
                      "end": 618,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 606,
                        "end": 612,
                        "name": "result"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 616,
                        "end": 618,
                        "value": 64,
                        "raw": "64",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                ],
                "test": {
                  "type": "Literal",
                  "start": 597,
                  "end": 598,
                  "value": 4,
                  "raw": "4",
                  "regex": null,
                  "bigint": null
                }
              }
            ]
          },
          {
            "type": "ReturnStatement",
            "start": 629,
            "end": 643,
            "argument": {
              "type": "Identifier",
              "start": 636,
              "end": 642,
              "name": "result"
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 655,
      "end": 782,
      "test": {
        "type": "UnaryExpression",
        "start": 658,
        "end": 680,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 659,
          "end": 680,
          "expression": {
            "type": "BinaryExpression",
            "start": 660,
            "end": 679,
            "left": {
              "type": "CallExpression",
              "start": 660,
              "end": 673,
              "callee": {
                "type": "Identifier",
                "start": 660,
                "end": 670,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 671,
                  "end": 672,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 678,
              "end": 679,
              "value": 6,
              "raw": "6",
              "regex": null,
              "bigint": null
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 681,
        "end": 782,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 685,
            "end": 780,
            "argument": {
              "type": "NewExpression",
              "start": 691,
              "end": 779,
              "callee": {
                "type": "Identifier",
                "start": 695,
                "end": 707,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 708,
                  "end": 776,
                  "left": {
                    "type": "Literal",
                    "start": 708,
                    "end": 761,
                    "value": "#1: SwitchTest(0) === 6. Actual:  SwitchTest(0) ===",
                    "raw": "\"#1: SwitchTest(0) === 6. Actual:  SwitchTest(0) ===\"",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 763,
                    "end": 776,
                    "callee": {
                      "type": "Identifier",
                      "start": 763,
                      "end": 773,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 774,
                        "end": 775,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 784,
      "end": 911,
      "test": {
        "type": "UnaryExpression",
        "start": 787,
        "end": 809,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 788,
          "end": 809,
          "expression": {
            "type": "BinaryExpression",
            "start": 789,
            "end": 808,
            "left": {
              "type": "CallExpression",
              "start": 789,
              "end": 802,
              "callee": {
                "type": "Identifier",
                "start": 789,
                "end": 799,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 800,
                  "end": 801,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 807,
              "end": 808,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 810,
        "end": 911,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 814,
            "end": 909,
            "argument": {
              "type": "NewExpression",
              "start": 820,
              "end": 908,
              "callee": {
                "type": "Identifier",
                "start": 824,
                "end": 836,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 837,
                  "end": 905,
                  "left": {
                    "type": "Literal",
                    "start": 837,
                    "end": 890,
                    "value": "#2: SwitchTest(1) === 4. Actual:  SwitchTest(1) ===",
                    "raw": "\"#2: SwitchTest(1) === 4. Actual:  SwitchTest(1) ===\"",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 892,
                    "end": 905,
                    "callee": {
                      "type": "Identifier",
                      "start": 892,
                      "end": 902,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 903,
                        "end": 904,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 913,
      "end": 1042,
      "test": {
        "type": "UnaryExpression",
        "start": 916,
        "end": 939,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 917,
          "end": 939,
          "expression": {
            "type": "BinaryExpression",
            "start": 918,
            "end": 938,
            "left": {
              "type": "CallExpression",
              "start": 918,
              "end": 931,
              "callee": {
                "type": "Identifier",
                "start": 918,
                "end": 928,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 929,
                  "end": 930,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 936,
              "end": 938,
              "value": 56,
              "raw": "56",
              "regex": null,
              "bigint": null
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 940,
        "end": 1042,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 944,
            "end": 1040,
            "argument": {
              "type": "NewExpression",
              "start": 950,
              "end": 1039,
              "callee": {
                "type": "Identifier",
                "start": 954,
                "end": 966,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 967,
                  "end": 1036,
                  "left": {
                    "type": "Literal",
                    "start": 967,
                    "end": 1021,
                    "value": "#3: SwitchTest(2) === 56. Actual:  SwitchTest(2) ===",
                    "raw": "\"#3: SwitchTest(2) === 56. Actual:  SwitchTest(2) ===\"",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1023,
                    "end": 1036,
                    "callee": {
                      "type": "Identifier",
                      "start": 1023,
                      "end": 1033,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1034,
                        "end": 1035,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1044,
      "end": 1173,
      "test": {
        "type": "UnaryExpression",
        "start": 1047,
        "end": 1070,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1048,
          "end": 1070,
          "expression": {
            "type": "BinaryExpression",
            "start": 1049,
            "end": 1069,
            "left": {
              "type": "CallExpression",
              "start": 1049,
              "end": 1062,
              "callee": {
                "type": "Identifier",
                "start": 1049,
                "end": 1059,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1060,
                  "end": 1061,
                  "value": 3,
                  "raw": "3",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1067,
              "end": 1069,
              "value": 48,
              "raw": "48",
              "regex": null,
              "bigint": null
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1071,
        "end": 1173,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1075,
            "end": 1171,
            "argument": {
              "type": "NewExpression",
              "start": 1081,
              "end": 1170,
              "callee": {
                "type": "Identifier",
                "start": 1085,
                "end": 1097,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1098,
                  "end": 1167,
                  "left": {
                    "type": "Literal",
                    "start": 1098,
                    "end": 1152,
                    "value": "#4: SwitchTest(3) === 48. Actual:  SwitchTest(3) ===",
                    "raw": "\"#4: SwitchTest(3) === 48. Actual:  SwitchTest(3) ===\"",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1154,
                    "end": 1167,
                    "callee": {
                      "type": "Identifier",
                      "start": 1154,
                      "end": 1164,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1165,
                        "end": 1166,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1175,
      "end": 1304,
      "test": {
        "type": "UnaryExpression",
        "start": 1178,
        "end": 1201,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1179,
          "end": 1201,
          "expression": {
            "type": "BinaryExpression",
            "start": 1180,
            "end": 1200,
            "left": {
              "type": "CallExpression",
              "start": 1180,
              "end": 1193,
              "callee": {
                "type": "Identifier",
                "start": 1180,
                "end": 1190,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1191,
                  "end": 1192,
                  "value": 4,
                  "raw": "4",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1198,
              "end": 1200,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1202,
        "end": 1304,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1206,
            "end": 1302,
            "argument": {
              "type": "NewExpression",
              "start": 1212,
              "end": 1301,
              "callee": {
                "type": "Identifier",
                "start": 1216,
                "end": 1228,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1229,
                  "end": 1298,
                  "left": {
                    "type": "Literal",
                    "start": 1229,
                    "end": 1283,
                    "value": "#5: SwitchTest(4) === 64. Actual:  SwitchTest(4) ===",
                    "raw": "\"#5: SwitchTest(4) === 64. Actual:  SwitchTest(4) ===\"",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1285,
                    "end": 1298,
                    "callee": {
                      "type": "Identifier",
                      "start": 1285,
                      "end": 1295,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1296,
                        "end": 1297,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1306,
      "end": 1447,
      "test": {
        "type": "UnaryExpression",
        "start": 1309,
        "end": 1335,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1310,
          "end": 1335,
          "expression": {
            "type": "BinaryExpression",
            "start": 1311,
            "end": 1334,
            "left": {
              "type": "CallExpression",
              "start": 1311,
              "end": 1327,
              "callee": {
                "type": "Identifier",
                "start": 1311,
                "end": 1321,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1322,
                  "end": 1326,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1332,
              "end": 1334,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1336,
        "end": 1447,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1340,
            "end": 1445,
            "argument": {
              "type": "NewExpression",
              "start": 1346,
              "end": 1444,
              "callee": {
                "type": "Identifier",
                "start": 1350,
                "end": 1362,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1363,
                  "end": 1441,
                  "left": {
                    "type": "Literal",
                    "start": 1363,
                    "end": 1423,
                    "value": "#6: SwitchTest(true) === 32. Actual:  SwitchTest(true) ===",
                    "raw": "\"#6: SwitchTest(true) === 32. Actual:  SwitchTest(true) ===\"",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1425,
                    "end": 1441,
                    "callee": {
                      "type": "Identifier",
                      "start": 1425,
                      "end": 1435,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1436,
                        "end": 1440,
                        "value": true,
                        "raw": "true",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1449,
      "end": 1594,
      "test": {
        "type": "UnaryExpression",
        "start": 1452,
        "end": 1479,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1453,
          "end": 1479,
          "expression": {
            "type": "BinaryExpression",
            "start": 1454,
            "end": 1478,
            "left": {
              "type": "CallExpression",
              "start": 1454,
              "end": 1471,
              "callee": {
                "type": "Identifier",
                "start": 1454,
                "end": 1464,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1465,
                  "end": 1470,
                  "value": false,
                  "raw": "false",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1476,
              "end": 1478,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1480,
        "end": 1594,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1484,
            "end": 1592,
            "argument": {
              "type": "NewExpression",
              "start": 1490,
              "end": 1591,
              "callee": {
                "type": "Identifier",
                "start": 1494,
                "end": 1506,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1507,
                  "end": 1588,
                  "left": {
                    "type": "Literal",
                    "start": 1507,
                    "end": 1569,
                    "value": "#7: SwitchTest(false) === 32. Actual:  SwitchTest(false) ===",
                    "raw": "\"#7: SwitchTest(false) === 32. Actual:  SwitchTest(false) ===\"",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1571,
                    "end": 1588,
                    "callee": {
                      "type": "Identifier",
                      "start": 1571,
                      "end": 1581,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1582,
                        "end": 1587,
                        "value": false,
                        "raw": "false",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1596,
      "end": 1737,
      "test": {
        "type": "UnaryExpression",
        "start": 1599,
        "end": 1625,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1600,
          "end": 1625,
          "expression": {
            "type": "BinaryExpression",
            "start": 1601,
            "end": 1624,
            "left": {
              "type": "CallExpression",
              "start": 1601,
              "end": 1617,
              "callee": {
                "type": "Identifier",
                "start": 1601,
                "end": 1611,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1612,
                  "end": 1616,
                  "value": null,
                  "raw": "null",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1622,
              "end": 1624,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1626,
        "end": 1737,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1630,
            "end": 1735,
            "argument": {
              "type": "NewExpression",
              "start": 1636,
              "end": 1734,
              "callee": {
                "type": "Identifier",
                "start": 1640,
                "end": 1652,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1653,
                  "end": 1731,
                  "left": {
                    "type": "Literal",
                    "start": 1653,
                    "end": 1713,
                    "value": "#8: SwitchTest(null) === 32. Actual:  SwitchTest(null) ===",
                    "raw": "\"#8: SwitchTest(null) === 32. Actual:  SwitchTest(null) ===\"",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1715,
                    "end": 1731,
                    "callee": {
                      "type": "Identifier",
                      "start": 1715,
                      "end": 1725,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1726,
                        "end": 1730,
                        "value": null,
                        "raw": "null",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1739,
      "end": 1888,
      "test": {
        "type": "UnaryExpression",
        "start": 1742,
        "end": 1770,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1743,
          "end": 1770,
          "expression": {
            "type": "BinaryExpression",
            "start": 1744,
            "end": 1769,
            "left": {
              "type": "CallExpression",
              "start": 1744,
              "end": 1762,
              "callee": {
                "type": "Identifier",
                "start": 1744,
                "end": 1754,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "UnaryExpression",
                  "start": 1755,
                  "end": 1761,
                  "operator": "void",
                  "prefix": true,
                  "argument": {
                    "type": "Literal",
                    "start": 1760,
                    "end": 1761,
                    "value": 0,
                    "raw": "0",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1767,
              "end": 1769,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1771,
        "end": 1888,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1775,
            "end": 1886,
            "argument": {
              "type": "NewExpression",
              "start": 1781,
              "end": 1885,
              "callee": {
                "type": "Identifier",
                "start": 1785,
                "end": 1797,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1798,
                  "end": 1882,
                  "left": {
                    "type": "Literal",
                    "start": 1798,
                    "end": 1862,
                    "value": "#9: SwitchTest(void 0) === 32. Actual:  SwitchTest(void 0) ===",
                    "raw": "\"#9: SwitchTest(void 0) === 32. Actual:  SwitchTest(void 0) ===\"",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1864,
                    "end": 1882,
                    "callee": {
                      "type": "Identifier",
                      "start": 1864,
                      "end": 1874,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "start": 1875,
                        "end": 1881,
                        "operator": "void",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1880,
                          "end": 1881,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1890,
      "end": 2028,
      "test": {
        "type": "UnaryExpression",
        "start": 1893,
        "end": 1918,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 1894,
          "end": 1918,
          "expression": {
            "type": "BinaryExpression",
            "start": 1895,
            "end": 1917,
            "left": {
              "type": "CallExpression",
              "start": 1895,
              "end": 1910,
              "callee": {
                "type": "Identifier",
                "start": 1895,
                "end": 1905,
                "name": "SwitchTest"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1906,
                  "end": 1909,
                  "value": "0",
                  "raw": "'0'",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 1915,
              "end": 1917,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1919,
        "end": 2028,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1923,
            "end": 2026,
            "argument": {
              "type": "NewExpression",
              "start": 1929,
              "end": 2025,
              "callee": {
                "type": "Identifier",
                "start": 1933,
                "end": 1945,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1946,
                  "end": 2022,
                  "left": {
                    "type": "Literal",
                    "start": 1946,
                    "end": 2005,
                    "value": "#10: SwitchTest('0') === 32. Actual:  SwitchTest('0') ===",
                    "raw": "\"#10: SwitchTest('0') === 32. Actual:  SwitchTest('0') ===\"",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 2007,
                    "end": 2022,
                    "callee": {
                      "type": "Identifier",
                      "start": 2007,
                      "end": 2017,
                      "name": "SwitchTest"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 2018,
                        "end": 2021,
                        "value": "0",
                        "raw": "'0'",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}