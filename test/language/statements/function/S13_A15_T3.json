{
  "type": "Program",
  "start": 0,
  "end": 1203,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 325,
      "end": 383,
      "expression": {
        "type": "AssignmentExpression",
        "start": 325,
        "end": 382,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 325,
          "end": 335,
          "name": "THE_ANSWER"
        },
        "right": {
          "type": "Literal",
          "start": 336,
          "end": 382,
          "value": "Answer to Life, the Universe, and Everything",
          "raw": "\"Answer to Life, the Universe, and Everything\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 385,
      "end": 412,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 389,
          "end": 411,
          "id": {
            "type": "Identifier",
            "start": 389,
            "end": 398,
            "name": "arguments"
          },
          "init": {
            "type": "Identifier",
            "start": 401,
            "end": 411,
            "name": "THE_ANSWER"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "start": 414,
      "end": 470,
      "id": {
        "type": "Identifier",
        "start": 423,
        "end": 429,
        "name": "__func"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 430,
          "end": 439,
          "name": "arguments"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 440,
        "end": 470,
        "body": [
          {
            "type": "ReturnStatement",
            "start": 446,
            "end": 463,
            "argument": {
              "type": "Identifier",
              "start": 453,
              "end": 462,
              "name": "arguments"
            }
          }
        ]
      }
    },
    {
      "type": "EmptyStatement",
      "start": 470,
      "end": 471
    },
    {
      "type": "IfStatement",
      "start": 562,
      "end": 711,
      "test": {
        "type": "BinaryExpression",
        "start": 566,
        "end": 597,
        "left": {
          "type": "UnaryExpression",
          "start": 566,
          "end": 581,
          "operator": "typeof",
          "prefix": true,
          "argument": {
            "type": "CallExpression",
            "start": 573,
            "end": 581,
            "callee": {
              "type": "Identifier",
              "start": 573,
              "end": 579,
              "name": "__func"
            },
            "arguments": [],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 586,
          "end": 597,
          "value": "undefined",
          "raw": "\"undefined\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 599,
        "end": 711,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 602,
            "end": 709,
            "argument": {
              "type": "NewExpression",
              "start": 608,
              "end": 708,
              "callee": {
                "type": "Identifier",
                "start": 612,
                "end": 624,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 625,
                  "end": 707,
                  "left": {
                    "type": "Literal",
                    "start": 625,
                    "end": 691,
                    "value": "#1: typeof __func() === \"undefined\". Actual: typeof __func() ===",
                    "raw": "'#1: typeof __func() === \"undefined\". Actual: typeof __func() ==='",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "UnaryExpression",
                    "start": 692,
                    "end": 707,
                    "operator": "typeof",
                    "prefix": true,
                    "argument": {
                      "type": "CallExpression",
                      "start": 699,
                      "end": 707,
                      "callee": {
                        "type": "Identifier",
                        "start": 699,
                        "end": 705,
                        "name": "__func"
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 884,
      "end": 1120,
      "test": {
        "type": "BinaryExpression",
        "start": 888,
        "end": 947,
        "left": {
          "type": "CallExpression",
          "start": 888,
          "end": 919,
          "callee": {
            "type": "Identifier",
            "start": 888,
            "end": 894,
            "name": "__func"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 895,
              "end": 918,
              "value": "The Ultimate Question",
              "raw": "\"The Ultimate Question\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 924,
          "end": 947,
          "value": "The Ultimate Question",
          "raw": "\"The Ultimate Question\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 949,
        "end": 1120,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 952,
            "end": 1118,
            "argument": {
              "type": "NewExpression",
              "start": 958,
              "end": 1117,
              "callee": {
                "type": "Identifier",
                "start": 962,
                "end": 974,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 975,
                  "end": 1116,
                  "left": {
                    "type": "Literal",
                    "start": 975,
                    "end": 1084,
                    "value": "#2: __func(\"The Ultimate Question\") === \"The Ultimate Question\". Actual: __func(\"The Ultimate Question\")===",
                    "raw": "'#2: __func(\"The Ultimate Question\") === \"The Ultimate Question\". Actual: __func(\"The Ultimate Question\")==='",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 1085,
                    "end": 1116,
                    "callee": {
                      "type": "Identifier",
                      "start": 1085,
                      "end": 1091,
                      "name": "__func"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1092,
                        "end": 1115,
                        "value": "The Ultimate Question",
                        "raw": "\"The Ultimate Question\"",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}