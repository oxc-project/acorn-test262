{
  "type": "Program",
  "start": 0,
  "end": 1697,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1450,
      "end": 1469,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1454,
          "end": 1468,
          "id": {
            "type": "Identifier",
            "start": 1454,
            "end": 1464,
            "name": "iterations"
          },
          "init": {
            "type": "Literal",
            "start": 1467,
            "end": 1468,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1470,
      "end": 1518,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1474,
          "end": 1517,
          "id": {
            "type": "Identifier",
            "start": 1474,
            "end": 1478,
            "name": "iter"
          },
          "init": {
            "type": "CallExpression",
            "start": 1481,
            "end": 1517,
            "callee": {
              "type": "FunctionExpression",
              "start": 1481,
              "end": 1515,
              "id": null,
              "expression": false,
              "generator": true,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1493,
                "end": 1515,
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "start": 1497,
                    "end": 1513,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1497,
                      "end": 1512,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 1497,
                        "end": 1507,
                        "name": "iterations"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 1511,
                        "end": 1512,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                ]
              }
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1520,
      "end": 1538,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1524,
          "end": 1537,
          "id": {
            "type": "Identifier",
            "start": 1524,
            "end": 1533,
            "name": "callCount"
          },
          "init": {
            "type": "Literal",
            "start": 1536,
            "end": 1537,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "start": 1539,
      "end": 1621,
      "id": {
        "type": "Identifier",
        "start": 1548,
        "end": 1549,
        "name": "f"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "ArrayPattern",
          "start": 1550,
          "end": 1552,
          "elements": []
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 1554,
        "end": 1621,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1558,
            "end": 1590,
            "expression": {
              "type": "CallExpression",
              "start": 1558,
              "end": 1589,
              "callee": {
                "type": "MemberExpression",
                "start": 1558,
                "end": 1574,
                "object": {
                  "type": "Identifier",
                  "start": 1558,
                  "end": 1564,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1565,
                  "end": 1574,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1575,
                  "end": 1585,
                  "name": "iterations"
                },
                {
                  "type": "Literal",
                  "start": 1587,
                  "end": 1588,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 1593,
            "end": 1619,
            "expression": {
              "type": "AssignmentExpression",
              "start": 1593,
              "end": 1618,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 1593,
                "end": 1602,
                "name": "callCount"
              },
              "right": {
                "type": "BinaryExpression",
                "start": 1605,
                "end": 1618,
                "left": {
                  "type": "Identifier",
                  "start": 1605,
                  "end": 1614,
                  "name": "callCount"
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "start": 1617,
                  "end": 1618,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          }
        ]
      }
    },
    {
      "type": "EmptyStatement",
      "start": 1621,
      "end": 1622
    },
    {
      "type": "ExpressionStatement",
      "start": 1623,
      "end": 1631,
      "expression": {
        "type": "CallExpression",
        "start": 1623,
        "end": 1630,
        "callee": {
          "type": "Identifier",
          "start": 1623,
          "end": 1624,
          "name": "f"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1625,
            "end": 1629,
            "name": "iter"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1632,
      "end": 1696,
      "expression": {
        "type": "CallExpression",
        "start": 1632,
        "end": 1695,
        "callee": {
          "type": "MemberExpression",
          "start": 1632,
          "end": 1648,
          "object": {
            "type": "Identifier",
            "start": 1632,
            "end": 1638,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1639,
            "end": 1648,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1649,
            "end": 1658,
            "name": "callCount"
          },
          {
            "type": "Literal",
            "start": 1660,
            "end": 1661,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1663,
            "end": 1694,
            "value": "function invoked exactly once",
            "raw": "'function invoked exactly once'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}