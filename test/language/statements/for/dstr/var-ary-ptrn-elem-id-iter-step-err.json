{
  "type": "Program",
  "start": 0,
  "end": 1776,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1549,
      "end": 1560,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1553,
          "end": 1559,
          "id": {
            "type": "Identifier",
            "start": 1553,
            "end": 1554,
            "name": "g"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 1557,
            "end": 1559,
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1561,
      "end": 1674,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1561,
        "end": 1673,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 1561,
          "end": 1579,
          "object": {
            "type": "Identifier",
            "start": 1561,
            "end": 1562,
            "name": "g"
          },
          "property": {
            "type": "MemberExpression",
            "start": 1563,
            "end": 1578,
            "object": {
              "type": "Identifier",
              "start": 1563,
              "end": 1569,
              "name": "Symbol"
            },
            "property": {
              "type": "Identifier",
              "start": 1570,
              "end": 1578,
              "name": "iterator"
            },
            "computed": false,
            "optional": false
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "FunctionExpression",
          "start": 1582,
          "end": 1673,
          "id": null,
          "expression": false,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 1593,
            "end": 1673,
            "body": [
              {
                "type": "ReturnStatement",
                "start": 1597,
                "end": 1671,
                "argument": {
                  "type": "ObjectExpression",
                  "start": 1604,
                  "end": 1670,
                  "properties": [
                    {
                      "type": "Property",
                      "start": 1610,
                      "end": 1666,
                      "method": false,
                      "shorthand": false,
                      "computed": false,
                      "key": {
                        "type": "Identifier",
                        "start": 1610,
                        "end": 1614,
                        "name": "next"
                      },
                      "value": {
                        "type": "FunctionExpression",
                        "start": 1616,
                        "end": 1666,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 1627,
                          "end": 1666,
                          "body": [
                            {
                              "type": "ThrowStatement",
                              "start": 1635,
                              "end": 1660,
                              "argument": {
                                "type": "NewExpression",
                                "start": 1641,
                                "end": 1659,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 1645,
                                  "end": 1657,
                                  "name": "Test262Error"
                                },
                                "arguments": []
                              }
                            }
                          ]
                        }
                      },
                      "kind": "init"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1676,
      "end": 1775,
      "expression": {
        "type": "CallExpression",
        "start": 1676,
        "end": 1774,
        "callee": {
          "type": "MemberExpression",
          "start": 1676,
          "end": 1689,
          "object": {
            "type": "Identifier",
            "start": 1676,
            "end": 1682,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1683,
            "end": 1689,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1690,
            "end": 1702,
            "name": "Test262Error"
          },
          {
            "type": "FunctionExpression",
            "start": 1704,
            "end": 1773,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1715,
              "end": 1773,
              "body": [
                {
                  "type": "ForStatement",
                  "start": 1719,
                  "end": 1771,
                  "init": {
                    "type": "VariableDeclaration",
                    "start": 1724,
                    "end": 1735,
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "start": 1728,
                        "end": 1735,
                        "id": {
                          "type": "ArrayPattern",
                          "start": 1728,
                          "end": 1731,
                          "elements": [
                            {
                              "type": "Identifier",
                              "start": 1729,
                              "end": 1730,
                              "name": "x"
                            }
                          ]
                        },
                        "init": {
                          "type": "Identifier",
                          "start": 1734,
                          "end": 1735,
                          "name": "g"
                        }
                      }
                    ],
                    "kind": "var"
                  },
                  "test": {
                    "type": "BinaryExpression",
                    "start": 1737,
                    "end": 1750,
                    "left": {
                      "type": "Identifier",
                      "start": 1737,
                      "end": 1746,
                      "name": "iterCount"
                    },
                    "operator": "<",
                    "right": {
                      "type": "Literal",
                      "start": 1749,
                      "end": 1750,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "update": null,
                  "body": {
                    "type": "BlockStatement",
                    "start": 1754,
                    "end": 1771,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 1760,
                        "end": 1767,
                        "argument": null
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}