{
  "type": "Program",
  "start": 0,
  "end": 1527,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1015,
      "end": 1033,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1019,
          "end": 1032,
          "id": {
            "type": "Identifier",
            "start": 1019,
            "end": 1020,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 1023,
            "end": 1032,
            "value": "outside",
            "raw": "'outside'",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 1034,
      "end": 1049,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1038,
          "end": 1048,
          "id": {
            "type": "Identifier",
            "start": 1038,
            "end": 1041,
            "name": "run"
          },
          "init": {
            "type": "Literal",
            "start": 1044,
            "end": 1048,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1050,
      "end": 1086,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1054,
          "end": 1063,
          "id": {
            "type": "Identifier",
            "start": 1054,
            "end": 1063,
            "name": "probeTest"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1065,
          "end": 1074,
          "id": {
            "type": "Identifier",
            "start": 1065,
            "end": 1074,
            "name": "probeIncr"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1076,
          "end": 1085,
          "id": {
            "type": "Identifier",
            "start": 1076,
            "end": 1085,
            "name": "probeBody"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ForStatement",
      "start": 1088,
      "end": 1264,
      "init": {
        "type": "VariableDeclaration",
        "start": 1098,
        "end": 1114,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1102,
            "end": 1114,
            "id": {
              "type": "Identifier",
              "start": 1102,
              "end": 1103,
              "name": "x"
            },
            "init": {
              "type": "Literal",
              "start": 1106,
              "end": 1114,
              "value": "inside",
              "raw": "'inside'",
              "regex": null,
              "bigint": null
            }
          }
        ],
        "kind": "let"
      },
      "test": {
        "type": "LogicalExpression",
        "start": 1120,
        "end": 1165,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1120,
          "end": 1158,
          "expression": {
            "type": "AssignmentExpression",
            "start": 1121,
            "end": 1157,
            "operator": "=",
            "left": {
              "type": "Identifier",
              "start": 1121,
              "end": 1130,
              "name": "probeTest"
            },
            "right": {
              "type": "FunctionExpression",
              "start": 1133,
              "end": 1157,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1144,
                "end": 1157,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 1146,
                    "end": 1155,
                    "argument": {
                      "type": "Identifier",
                      "start": 1153,
                      "end": 1154,
                      "name": "x"
                    }
                  }
                ]
              }
            }
          }
        },
        "operator": "&&",
        "right": {
          "type": "Identifier",
          "start": 1162,
          "end": 1165,
          "name": "run"
        }
      },
      "update": {
        "type": "AssignmentExpression",
        "start": 1171,
        "end": 1207,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1171,
          "end": 1180,
          "name": "probeIncr"
        },
        "right": {
          "type": "FunctionExpression",
          "start": 1183,
          "end": 1207,
          "id": null,
          "expression": false,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 1194,
            "end": 1207,
            "body": [
              {
                "type": "ReturnStatement",
                "start": 1196,
                "end": 1205,
                "argument": {
                  "type": "Identifier",
                  "start": 1203,
                  "end": 1204,
                  "name": "x"
                }
              }
            ]
          }
        }
      },
      "body": {
        "type": "ExpressionStatement",
        "start": 1214,
        "end": 1264,
        "expression": {
          "type": "SequenceExpression",
          "start": 1214,
          "end": 1263,
          "expressions": [
            {
              "type": "AssignmentExpression",
              "start": 1214,
              "end": 1250,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 1214,
                "end": 1223,
                "name": "probeBody"
              },
              "right": {
                "type": "FunctionExpression",
                "start": 1226,
                "end": 1250,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 1237,
                  "end": 1250,
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 1239,
                      "end": 1248,
                      "argument": {
                        "type": "Identifier",
                        "start": 1246,
                        "end": 1247,
                        "name": "x"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "AssignmentExpression",
              "start": 1252,
              "end": 1263,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 1252,
                "end": 1255,
                "name": "run"
              },
              "right": {
                "type": "Literal",
                "start": 1258,
                "end": 1263,
                "value": false,
                "raw": "false",
                "regex": null,
                "bigint": null
              }
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1266,
      "end": 1339,
      "expression": {
        "type": "CallExpression",
        "start": 1266,
        "end": 1338,
        "callee": {
          "type": "MemberExpression",
          "start": 1266,
          "end": 1282,
          "object": {
            "type": "Identifier",
            "start": 1266,
            "end": 1272,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1273,
            "end": 1282,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1283,
            "end": 1294,
            "callee": {
              "type": "Identifier",
              "start": 1283,
              "end": 1292,
              "name": "probeBody"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1296,
            "end": 1304,
            "value": "inside",
            "raw": "'inside'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1306,
            "end": 1337,
            "value": "reference from statement body",
            "raw": "'reference from statement body'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1340,
      "end": 1419,
      "expression": {
        "type": "CallExpression",
        "start": 1340,
        "end": 1418,
        "callee": {
          "type": "MemberExpression",
          "start": 1340,
          "end": 1356,
          "object": {
            "type": "Identifier",
            "start": 1340,
            "end": 1346,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1347,
            "end": 1356,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1357,
            "end": 1368,
            "callee": {
              "type": "Identifier",
              "start": 1357,
              "end": 1366,
              "name": "probeIncr"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1370,
            "end": 1378,
            "value": "inside",
            "raw": "'inside'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1380,
            "end": 1417,
            "value": "reference from \"increment\" position",
            "raw": "'reference from \"increment\" position'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1420,
      "end": 1494,
      "expression": {
        "type": "CallExpression",
        "start": 1420,
        "end": 1493,
        "callee": {
          "type": "MemberExpression",
          "start": 1420,
          "end": 1436,
          "object": {
            "type": "Identifier",
            "start": 1420,
            "end": 1426,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1427,
            "end": 1436,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1437,
            "end": 1448,
            "callee": {
              "type": "Identifier",
              "start": 1437,
              "end": 1446,
              "name": "probeTest"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1450,
            "end": 1458,
            "value": "inside",
            "raw": "'inside'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1460,
            "end": 1492,
            "value": "reference from \"test\" position",
            "raw": "'reference from \"test\" position'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1495,
      "end": 1526,
      "expression": {
        "type": "CallExpression",
        "start": 1495,
        "end": 1525,
        "callee": {
          "type": "MemberExpression",
          "start": 1495,
          "end": 1511,
          "object": {
            "type": "Identifier",
            "start": 1495,
            "end": 1501,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1502,
            "end": 1511,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1512,
            "end": 1513,
            "name": "x"
          },
          {
            "type": "Literal",
            "start": 1515,
            "end": 1524,
            "value": "outside",
            "raw": "'outside'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}