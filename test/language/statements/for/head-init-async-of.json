{
  "type": "Program",
  "start": 0,
  "end": 419,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 309,
      "end": 319,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 313,
          "end": 318,
          "id": {
            "type": "Identifier",
            "start": 313,
            "end": 314,
            "name": "i"
          },
          "init": {
            "type": "Literal",
            "start": 317,
            "end": 318,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 320,
      "end": 336,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 324,
          "end": 335,
          "id": {
            "type": "Identifier",
            "start": 324,
            "end": 331,
            "name": "counter"
          },
          "init": {
            "type": "Literal",
            "start": 334,
            "end": 335,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ForStatement",
      "start": 337,
      "end": 387,
      "init": {
        "type": "ArrowFunctionExpression",
        "start": 342,
        "end": 356,
        "id": null,
        "expression": false,
        "generator": false,
        "async": true,
        "params": [
          {
            "type": "Identifier",
            "start": 348,
            "end": 350,
            "name": "of"
          }
        ],
        "body": {
          "type": "BlockStatement",
          "start": 354,
          "end": 356,
          "body": []
        }
      },
      "test": {
        "type": "BinaryExpression",
        "start": 358,
        "end": 364,
        "left": {
          "type": "Identifier",
          "start": 358,
          "end": 359,
          "name": "i"
        },
        "operator": "<",
        "right": {
          "type": "Literal",
          "start": 362,
          "end": 364,
          "value": 10,
          "raw": "10"
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 366,
        "end": 369,
        "operator": "++",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "start": 368,
          "end": 369,
          "name": "i"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 371,
        "end": 387,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 375,
            "end": 385,
            "expression": {
              "type": "UpdateExpression",
              "start": 375,
              "end": 384,
              "operator": "++",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "start": 377,
                "end": 384,
                "name": "counter"
              }
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 388,
      "end": 418,
      "expression": {
        "type": "CallExpression",
        "start": 388,
        "end": 417,
        "callee": {
          "type": "MemberExpression",
          "start": 388,
          "end": 404,
          "object": {
            "type": "Identifier",
            "start": 388,
            "end": 394,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 395,
            "end": 404,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 405,
            "end": 412,
            "name": "counter"
          },
          {
            "type": "Literal",
            "start": 414,
            "end": 416,
            "value": 10,
            "raw": "10"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}