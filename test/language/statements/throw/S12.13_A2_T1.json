{
  "type": "Program",
  "start": 0,
  "end": 460,
  "body": [
    {
      "type": "TryStatement",
      "start": 317,
      "end": 459,
      "block": {
        "type": "BlockStatement",
        "start": 320,
        "end": 342,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 324,
            "end": 340,
            "argument": {
              "type": "Identifier",
              "start": 330,
              "end": 339,
              "name": "undefined"
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 343,
        "end": 459,
        "param": {
          "type": "Identifier",
          "start": 349,
          "end": 350,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 351,
          "end": 459,
          "body": [
            {
              "type": "IfStatement",
              "start": 355,
              "end": 457,
              "test": {
                "type": "BinaryExpression",
                "start": 359,
                "end": 372,
                "left": {
                  "type": "Identifier",
                  "start": 359,
                  "end": 360,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Identifier",
                  "start": 363,
                  "end": 372,
                  "name": "undefined"
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 374,
                "end": 457,
                "argument": {
                  "type": "NewExpression",
                  "start": 380,
                  "end": 456,
                  "callee": {
                    "type": "Identifier",
                    "start": 384,
                    "end": 396,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 397,
                      "end": 453,
                      "left": {
                        "type": "Literal",
                        "start": 397,
                        "end": 450,
                        "value": "#1: Exception === undefined. Actual:  Exception ===",
                        "raw": "'#1: Exception === undefined. Actual:  Exception ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 452,
                        "end": 453,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}