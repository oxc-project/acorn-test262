{
  "type": "Program",
  "start": 0,
  "end": 1750,
  "body": [
    {
      "type": "TryStatement",
      "start": 247,
      "end": 379,
      "block": {
        "type": "BlockStatement",
        "start": 250,
        "end": 267,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 254,
            "end": 265,
            "argument": {
              "type": "BinaryExpression",
              "start": 260,
              "end": 264,
              "left": {
                "type": "Literal",
                "start": 260,
                "end": 262,
                "value": 10,
                "raw": "10",
                "regex": null,
                "bigint": null
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "start": 263,
                "end": 264,
                "value": 3,
                "raw": "3",
                "regex": null,
                "bigint": null
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 268,
        "end": 379,
        "param": {
          "type": "Identifier",
          "start": 274,
          "end": 275,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 276,
          "end": 379,
          "body": [
            {
              "type": "IfStatement",
              "start": 280,
              "end": 377,
              "test": {
                "type": "BinaryExpression",
                "start": 284,
                "end": 290,
                "left": {
                  "type": "Identifier",
                  "start": 284,
                  "end": 285,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 288,
                  "end": 290,
                  "value": 13,
                  "raw": "13",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 292,
                "end": 377,
                "argument": {
                  "type": "NewExpression",
                  "start": 298,
                  "end": 376,
                  "callee": {
                    "type": "Identifier",
                    "start": 302,
                    "end": 314,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 315,
                      "end": 375,
                      "left": {
                        "type": "Literal",
                        "start": 315,
                        "end": 372,
                        "value": "#1: Exception ===13(operaton +). Actual:  Exception ===",
                        "raw": "'#1: Exception ===13(operaton +). Actual:  Exception ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 374,
                        "end": 375,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "VariableDeclaration",
      "start": 392,
      "end": 401,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 396,
          "end": 400,
          "id": {
            "type": "Identifier",
            "start": 396,
            "end": 397,
            "name": "b"
          },
          "init": {
            "type": "Literal",
            "start": 398,
            "end": 400,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 402,
      "end": 410,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 406,
          "end": 409,
          "id": {
            "type": "Identifier",
            "start": 406,
            "end": 407,
            "name": "a"
          },
          "init": {
            "type": "Literal",
            "start": 408,
            "end": 409,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 411,
      "end": 542,
      "block": {
        "type": "BlockStatement",
        "start": 414,
        "end": 430,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 418,
            "end": 428,
            "argument": {
              "type": "BinaryExpression",
              "start": 424,
              "end": 427,
              "left": {
                "type": "Identifier",
                "start": 424,
                "end": 425,
                "name": "a"
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "start": 426,
                "end": 427,
                "name": "b"
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 431,
        "end": 542,
        "param": {
          "type": "Identifier",
          "start": 437,
          "end": 438,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 439,
          "end": 542,
          "body": [
            {
              "type": "IfStatement",
              "start": 443,
              "end": 540,
              "test": {
                "type": "BinaryExpression",
                "start": 447,
                "end": 453,
                "left": {
                  "type": "Identifier",
                  "start": 447,
                  "end": 448,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 451,
                  "end": 453,
                  "value": 13,
                  "raw": "13",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 455,
                "end": 540,
                "argument": {
                  "type": "NewExpression",
                  "start": 461,
                  "end": 539,
                  "callee": {
                    "type": "Identifier",
                    "start": 465,
                    "end": 477,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 478,
                      "end": 538,
                      "left": {
                        "type": "Literal",
                        "start": 478,
                        "end": 535,
                        "value": "#2: Exception ===13(operaton +). Actual:  Exception ===",
                        "raw": "'#2: Exception ===13(operaton +). Actual:  Exception ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 537,
                        "end": 538,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 555,
      "end": 696,
      "block": {
        "type": "BlockStatement",
        "start": 558,
        "end": 580,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 562,
            "end": 578,
            "argument": {
              "type": "BinaryExpression",
              "start": 568,
              "end": 577,
              "left": {
                "type": "Literal",
                "start": 568,
                "end": 572,
                "value": 3.15,
                "raw": "3.15",
                "regex": null,
                "bigint": null
              },
              "operator": "-",
              "right": {
                "type": "Literal",
                "start": 573,
                "end": 577,
                "value": 1.02,
                "raw": "1.02",
                "regex": null,
                "bigint": null
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 581,
        "end": 696,
        "param": {
          "type": "Identifier",
          "start": 587,
          "end": 588,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 589,
          "end": 696,
          "body": [
            {
              "type": "IfStatement",
              "start": 593,
              "end": 694,
              "test": {
                "type": "BinaryExpression",
                "start": 597,
                "end": 605,
                "left": {
                  "type": "Identifier",
                  "start": 597,
                  "end": 598,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 601,
                  "end": 605,
                  "value": 2.13,
                  "raw": "2.13",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 607,
                "end": 694,
                "argument": {
                  "type": "NewExpression",
                  "start": 613,
                  "end": 693,
                  "callee": {
                    "type": "Identifier",
                    "start": 617,
                    "end": 629,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 630,
                      "end": 692,
                      "left": {
                        "type": "Literal",
                        "start": 630,
                        "end": 689,
                        "value": "#3: Exception ===2.13(operaton -). Actual:  Exception ===",
                        "raw": "'#3: Exception ===2.13(operaton -). Actual:  Exception ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 691,
                        "end": 692,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 709,
      "end": 838,
      "block": {
        "type": "BlockStatement",
        "start": 712,
        "end": 728,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 716,
            "end": 726,
            "argument": {
              "type": "BinaryExpression",
              "start": 722,
              "end": 725,
              "left": {
                "type": "Literal",
                "start": 722,
                "end": 723,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              },
              "operator": "*",
              "right": {
                "type": "Literal",
                "start": 724,
                "end": 725,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 729,
        "end": 838,
        "param": {
          "type": "Identifier",
          "start": 735,
          "end": 736,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 737,
          "end": 838,
          "body": [
            {
              "type": "IfStatement",
              "start": 741,
              "end": 836,
              "test": {
                "type": "BinaryExpression",
                "start": 745,
                "end": 750,
                "left": {
                  "type": "Identifier",
                  "start": 745,
                  "end": 746,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 749,
                  "end": 750,
                  "value": 4,
                  "raw": "4",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 752,
                "end": 836,
                "argument": {
                  "type": "NewExpression",
                  "start": 758,
                  "end": 835,
                  "callee": {
                    "type": "Identifier",
                    "start": 762,
                    "end": 774,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 775,
                      "end": 834,
                      "left": {
                        "type": "Literal",
                        "start": 775,
                        "end": 831,
                        "value": "#4: Exception ===4(operaton *). Actual:  Exception ===",
                        "raw": "'#4: Exception ===4(operaton *). Actual:  Exception ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 833,
                        "end": 834,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 851,
      "end": 1003,
      "block": {
        "type": "BlockStatement",
        "start": 854,
        "end": 877,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 858,
            "end": 875,
            "argument": {
              "type": "BinaryExpression",
              "start": 864,
              "end": 874,
              "left": {
                "type": "Literal",
                "start": 864,
                "end": 865,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "start": 866,
                "end": 874,
                "name": "Infinity"
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 878,
        "end": 1003,
        "param": {
          "type": "Identifier",
          "start": 884,
          "end": 885,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 886,
          "end": 1003,
          "body": [
            {
              "type": "IfStatement",
              "start": 890,
              "end": 1001,
              "test": {
                "type": "BinaryExpression",
                "start": 894,
                "end": 907,
                "left": {
                  "type": "Identifier",
                  "start": 894,
                  "end": 895,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "UnaryExpression",
                  "start": 898,
                  "end": 907,
                  "operator": "+",
                  "prefix": true,
                  "argument": {
                    "type": "Identifier",
                    "start": 899,
                    "end": 907,
                    "name": "Infinity"
                  }
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 909,
                "end": 1001,
                "argument": {
                  "type": "NewExpression",
                  "start": 915,
                  "end": 1000,
                  "callee": {
                    "type": "Identifier",
                    "start": 919,
                    "end": 931,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 932,
                      "end": 999,
                      "left": {
                        "type": "Literal",
                        "start": 932,
                        "end": 996,
                        "value": "#5: Exception ===+Infinity(operaton +). Actual:  Exception ===",
                        "raw": "'#5: Exception ===+Infinity(operaton +). Actual:  Exception ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 998,
                        "end": 999,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 1016,
      "end": 1168,
      "block": {
        "type": "BlockStatement",
        "start": 1019,
        "end": 1042,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1023,
            "end": 1040,
            "argument": {
              "type": "BinaryExpression",
              "start": 1029,
              "end": 1039,
              "left": {
                "type": "Literal",
                "start": 1029,
                "end": 1030,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "operator": "-",
              "right": {
                "type": "Identifier",
                "start": 1031,
                "end": 1039,
                "name": "Infinity"
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1043,
        "end": 1168,
        "param": {
          "type": "Identifier",
          "start": 1049,
          "end": 1050,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1051,
          "end": 1168,
          "body": [
            {
              "type": "IfStatement",
              "start": 1055,
              "end": 1166,
              "test": {
                "type": "BinaryExpression",
                "start": 1059,
                "end": 1072,
                "left": {
                  "type": "Identifier",
                  "start": 1059,
                  "end": 1060,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "UnaryExpression",
                  "start": 1063,
                  "end": 1072,
                  "operator": "-",
                  "prefix": true,
                  "argument": {
                    "type": "Identifier",
                    "start": 1064,
                    "end": 1072,
                    "name": "Infinity"
                  }
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 1074,
                "end": 1166,
                "argument": {
                  "type": "NewExpression",
                  "start": 1080,
                  "end": 1165,
                  "callee": {
                    "type": "Identifier",
                    "start": 1084,
                    "end": 1096,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 1097,
                      "end": 1164,
                      "left": {
                        "type": "Literal",
                        "start": 1097,
                        "end": 1161,
                        "value": "#6: Exception ===-Infinity(operaton -). Actual:  Exception ===",
                        "raw": "'#6: Exception ===-Infinity(operaton -). Actual:  Exception ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1163,
                        "end": 1164,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 1181,
      "end": 1311,
      "block": {
        "type": "BlockStatement",
        "start": 1184,
        "end": 1201,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1188,
            "end": 1199,
            "argument": {
              "type": "BinaryExpression",
              "start": 1194,
              "end": 1198,
              "left": {
                "type": "Literal",
                "start": 1194,
                "end": 1196,
                "value": 10,
                "raw": "10",
                "regex": null,
                "bigint": null
              },
              "operator": "/",
              "right": {
                "type": "Literal",
                "start": 1197,
                "end": 1198,
                "value": 5,
                "raw": "5",
                "regex": null,
                "bigint": null
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1202,
        "end": 1311,
        "param": {
          "type": "Identifier",
          "start": 1208,
          "end": 1209,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1210,
          "end": 1311,
          "body": [
            {
              "type": "IfStatement",
              "start": 1214,
              "end": 1309,
              "test": {
                "type": "BinaryExpression",
                "start": 1218,
                "end": 1223,
                "left": {
                  "type": "Identifier",
                  "start": 1218,
                  "end": 1219,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 1222,
                  "end": 1223,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 1225,
                "end": 1309,
                "argument": {
                  "type": "NewExpression",
                  "start": 1231,
                  "end": 1308,
                  "callee": {
                    "type": "Identifier",
                    "start": 1235,
                    "end": 1247,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 1248,
                      "end": 1307,
                      "left": {
                        "type": "Literal",
                        "start": 1248,
                        "end": 1304,
                        "value": "#7: Exception ===2(operaton /). Actual:  Exception ===",
                        "raw": "'#7: Exception ===2(operaton /). Actual:  Exception ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1306,
                        "end": 1307,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 1324,
      "end": 1455,
      "block": {
        "type": "BlockStatement",
        "start": 1327,
        "end": 1344,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1331,
            "end": 1342,
            "argument": {
              "type": "BinaryExpression",
              "start": 1337,
              "end": 1341,
              "left": {
                "type": "Literal",
                "start": 1337,
                "end": 1338,
                "value": 8,
                "raw": "8",
                "regex": null,
                "bigint": null
              },
              "operator": ">>",
              "right": {
                "type": "Literal",
                "start": 1340,
                "end": 1341,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1345,
        "end": 1455,
        "param": {
          "type": "Identifier",
          "start": 1351,
          "end": 1352,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1353,
          "end": 1455,
          "body": [
            {
              "type": "IfStatement",
              "start": 1357,
              "end": 1453,
              "test": {
                "type": "BinaryExpression",
                "start": 1361,
                "end": 1366,
                "left": {
                  "type": "Identifier",
                  "start": 1361,
                  "end": 1362,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 1365,
                  "end": 1366,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 1368,
                "end": 1453,
                "argument": {
                  "type": "NewExpression",
                  "start": 1374,
                  "end": 1452,
                  "callee": {
                    "type": "Identifier",
                    "start": 1378,
                    "end": 1390,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 1391,
                      "end": 1451,
                      "left": {
                        "type": "Literal",
                        "start": 1391,
                        "end": 1448,
                        "value": "#8: Exception ===2(operaton >>). Actual:  Exception ===",
                        "raw": "'#8: Exception ===2(operaton >>). Actual:  Exception ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1450,
                        "end": 1451,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 1468,
      "end": 1599,
      "block": {
        "type": "BlockStatement",
        "start": 1471,
        "end": 1488,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1475,
            "end": 1486,
            "argument": {
              "type": "BinaryExpression",
              "start": 1481,
              "end": 1485,
              "left": {
                "type": "Literal",
                "start": 1481,
                "end": 1482,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              },
              "operator": "<<",
              "right": {
                "type": "Literal",
                "start": 1484,
                "end": 1485,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1489,
        "end": 1599,
        "param": {
          "type": "Identifier",
          "start": 1495,
          "end": 1496,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1497,
          "end": 1599,
          "body": [
            {
              "type": "IfStatement",
              "start": 1501,
              "end": 1597,
              "test": {
                "type": "BinaryExpression",
                "start": 1505,
                "end": 1510,
                "left": {
                  "type": "Identifier",
                  "start": 1505,
                  "end": 1506,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 1509,
                  "end": 1510,
                  "value": 8,
                  "raw": "8",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 1512,
                "end": 1597,
                "argument": {
                  "type": "NewExpression",
                  "start": 1518,
                  "end": 1596,
                  "callee": {
                    "type": "Identifier",
                    "start": 1522,
                    "end": 1534,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 1535,
                      "end": 1595,
                      "left": {
                        "type": "Literal",
                        "start": 1535,
                        "end": 1592,
                        "value": "#9: Exception ===8(operaton <<). Actual:  Exception ===",
                        "raw": "'#9: Exception ===8(operaton <<). Actual:  Exception ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1594,
                        "end": 1595,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 1613,
      "end": 1749,
      "block": {
        "type": "BlockStatement",
        "start": 1616,
        "end": 1636,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1620,
            "end": 1634,
            "argument": {
              "type": "BinaryExpression",
              "start": 1626,
              "end": 1633,
              "left": {
                "type": "Literal",
                "start": 1626,
                "end": 1629,
                "value": 123,
                "raw": "123",
                "regex": null,
                "bigint": null
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 1630,
                "end": 1633,
                "value": 100,
                "raw": "100",
                "regex": null,
                "bigint": null
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1637,
        "end": 1749,
        "param": {
          "type": "Identifier",
          "start": 1643,
          "end": 1644,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1645,
          "end": 1749,
          "body": [
            {
              "type": "IfStatement",
              "start": 1649,
              "end": 1747,
              "test": {
                "type": "BinaryExpression",
                "start": 1653,
                "end": 1659,
                "left": {
                  "type": "Identifier",
                  "start": 1653,
                  "end": 1654,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 1657,
                  "end": 1659,
                  "value": 23,
                  "raw": "23",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 1661,
                "end": 1747,
                "argument": {
                  "type": "NewExpression",
                  "start": 1667,
                  "end": 1746,
                  "callee": {
                    "type": "Identifier",
                    "start": 1671,
                    "end": 1683,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 1684,
                      "end": 1745,
                      "left": {
                        "type": "Literal",
                        "start": 1684,
                        "end": 1742,
                        "value": "#10: Exception ===23(operaton %). Actual:  Exception ===",
                        "raw": "'#10: Exception ===23(operaton %). Actual:  Exception ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1744,
                        "end": 1745,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}