{
  "type": "Program",
  "start": 0,
  "end": 2119,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1855,
      "end": 1873,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1859,
          "end": 1872,
          "id": {
            "type": "Identifier",
            "start": 1859,
            "end": 1868,
            "name": "following"
          },
          "init": {
            "type": "Literal",
            "start": 1871,
            "end": 1872,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1874,
      "end": 1949,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1878,
          "end": 1948,
          "id": {
            "type": "Identifier",
            "start": 1878,
            "end": 1882,
            "name": "iter"
          },
          "init": {
            "type": "CallExpression",
            "start": 1884,
            "end": 1948,
            "callee": {
              "type": "FunctionExpression",
              "start": 1884,
              "end": 1946,
              "id": null,
              "expression": false,
              "generator": true,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1897,
                "end": 1946,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 1901,
                    "end": 1926,
                    "argument": {
                      "type": "NewExpression",
                      "start": 1907,
                      "end": 1925,
                      "callee": {
                        "type": "Identifier",
                        "start": 1911,
                        "end": 1923,
                        "name": "Test262Error"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "start": 1929,
                    "end": 1944,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1929,
                      "end": 1943,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 1929,
                        "end": 1938,
                        "name": "following"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 1942,
                        "end": 1943,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  }
                ]
              }
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1951,
      "end": 2039,
      "expression": {
        "type": "CallExpression",
        "start": 1951,
        "end": 2038,
        "callee": {
          "type": "MemberExpression",
          "start": 1951,
          "end": 1964,
          "object": {
            "type": "Identifier",
            "start": 1951,
            "end": 1957,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1958,
            "end": 1964,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1965,
            "end": 1977,
            "name": "Test262Error"
          },
          {
            "type": "FunctionExpression",
            "start": 1979,
            "end": 2037,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1990,
              "end": 2037,
              "body": [
                {
                  "type": "ForOfStatement",
                  "start": 1994,
                  "end": 2035,
                  "await": false,
                  "left": {
                    "type": "VariableDeclaration",
                    "start": 1999,
                    "end": 2006,
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "start": 2003,
                        "end": 2006,
                        "id": {
                          "type": "ArrayPattern",
                          "start": 2003,
                          "end": 2006,
                          "elements": [
                            null
                          ]
                        },
                        "init": null
                      }
                    ],
                    "kind": "let"
                  },
                  "right": {
                    "type": "ArrayExpression",
                    "start": 2010,
                    "end": 2016,
                    "elements": [
                      {
                        "type": "Identifier",
                        "start": 2011,
                        "end": 2015,
                        "name": "iter"
                      }
                    ]
                  },
                  "body": {
                    "type": "BlockStatement",
                    "start": 2018,
                    "end": 2035,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 2024,
                        "end": 2031,
                        "argument": null
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2041,
      "end": 2053,
      "expression": {
        "type": "CallExpression",
        "start": 2041,
        "end": 2052,
        "callee": {
          "type": "MemberExpression",
          "start": 2041,
          "end": 2050,
          "object": {
            "type": "Identifier",
            "start": 2041,
            "end": 2045,
            "name": "iter"
          },
          "property": {
            "type": "Identifier",
            "start": 2046,
            "end": 2050,
            "name": "next"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2054,
      "end": 2118,
      "expression": {
        "type": "CallExpression",
        "start": 2054,
        "end": 2117,
        "callee": {
          "type": "MemberExpression",
          "start": 2054,
          "end": 2070,
          "object": {
            "type": "Identifier",
            "start": 2054,
            "end": 2060,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2061,
            "end": 2070,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 2071,
            "end": 2080,
            "name": "following"
          },
          {
            "type": "Literal",
            "start": 2082,
            "end": 2083,
            "value": 0,
            "raw": "0"
          },
          {
            "type": "Literal",
            "start": 2085,
            "end": 2116,
            "value": "Iterator was properly closed.",
            "raw": "'Iterator was properly closed.'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}