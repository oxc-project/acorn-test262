{
  "type": "Program",
  "start": 0,
  "end": 2011,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1747,
      "end": 1765,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1751,
          "end": 1764,
          "id": {
            "type": "Identifier",
            "start": 1751,
            "end": 1760,
            "name": "following"
          },
          "init": {
            "type": "Literal",
            "start": 1763,
            "end": 1764,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1766,
      "end": 1841,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1770,
          "end": 1840,
          "id": {
            "type": "Identifier",
            "start": 1770,
            "end": 1774,
            "name": "iter"
          },
          "init": {
            "type": "CallExpression",
            "start": 1776,
            "end": 1840,
            "callee": {
              "type": "FunctionExpression",
              "start": 1776,
              "end": 1838,
              "id": null,
              "expression": false,
              "generator": true,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1789,
                "end": 1838,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 1793,
                    "end": 1818,
                    "argument": {
                      "type": "NewExpression",
                      "start": 1799,
                      "end": 1817,
                      "callee": {
                        "type": "Identifier",
                        "start": 1803,
                        "end": 1815,
                        "name": "Test262Error"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "start": 1821,
                    "end": 1836,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1821,
                      "end": 1835,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 1821,
                        "end": 1830,
                        "name": "following"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 1834,
                        "end": 1835,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  }
                ]
              }
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1843,
      "end": 1931,
      "expression": {
        "type": "CallExpression",
        "start": 1843,
        "end": 1930,
        "callee": {
          "type": "MemberExpression",
          "start": 1843,
          "end": 1856,
          "object": {
            "type": "Identifier",
            "start": 1843,
            "end": 1849,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1850,
            "end": 1856,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1857,
            "end": 1869,
            "name": "Test262Error"
          },
          {
            "type": "FunctionExpression",
            "start": 1871,
            "end": 1929,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1882,
              "end": 1929,
              "body": [
                {
                  "type": "ForOfStatement",
                  "start": 1886,
                  "end": 1927,
                  "await": false,
                  "left": {
                    "type": "VariableDeclaration",
                    "start": 1891,
                    "end": 1898,
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "start": 1895,
                        "end": 1898,
                        "id": {
                          "type": "ArrayPattern",
                          "start": 1895,
                          "end": 1898,
                          "elements": [
                            null
                          ]
                        },
                        "init": null
                      }
                    ],
                    "kind": "var"
                  },
                  "right": {
                    "type": "ArrayExpression",
                    "start": 1902,
                    "end": 1908,
                    "elements": [
                      {
                        "type": "Identifier",
                        "start": 1903,
                        "end": 1907,
                        "name": "iter"
                      }
                    ]
                  },
                  "body": {
                    "type": "BlockStatement",
                    "start": 1910,
                    "end": 1927,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 1916,
                        "end": 1923,
                        "argument": null
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1933,
      "end": 1945,
      "expression": {
        "type": "CallExpression",
        "start": 1933,
        "end": 1944,
        "callee": {
          "type": "MemberExpression",
          "start": 1933,
          "end": 1942,
          "object": {
            "type": "Identifier",
            "start": 1933,
            "end": 1937,
            "name": "iter"
          },
          "property": {
            "type": "Identifier",
            "start": 1938,
            "end": 1942,
            "name": "next"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1946,
      "end": 2010,
      "expression": {
        "type": "CallExpression",
        "start": 1946,
        "end": 2009,
        "callee": {
          "type": "MemberExpression",
          "start": 1946,
          "end": 1962,
          "object": {
            "type": "Identifier",
            "start": 1946,
            "end": 1952,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1953,
            "end": 1962,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1963,
            "end": 1972,
            "name": "following"
          },
          {
            "type": "Literal",
            "start": 1974,
            "end": 1975,
            "value": 0,
            "raw": "0"
          },
          {
            "type": "Literal",
            "start": 1977,
            "end": 2008,
            "value": "Iterator was properly closed.",
            "raw": "'Iterator was properly closed.'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}