{
  "type": "Program",
  "start": 0,
  "end": 1280,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1128,
      "end": 1144,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1132,
          "end": 1143,
          "id": {
            "type": "Identifier",
            "start": 1132,
            "end": 1139,
            "name": "counter"
          },
          "init": {
            "type": "Literal",
            "start": 1142,
            "end": 1143,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1146,
      "end": 1248,
      "expression": {
        "type": "CallExpression",
        "start": 1146,
        "end": 1247,
        "callee": {
          "type": "MemberExpression",
          "start": 1146,
          "end": 1159,
          "object": {
            "type": "Identifier",
            "start": 1146,
            "end": 1152,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1153,
            "end": 1159,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1160,
            "end": 1169,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1171,
            "end": 1246,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1182,
              "end": 1246,
              "body": [
                {
                  "type": "ForOfStatement",
                  "start": 1186,
                  "end": 1228,
                  "await": false,
                  "left": {
                    "type": "ArrayPattern",
                    "start": 1191,
                    "end": 1193,
                    "elements": []
                  },
                  "right": {
                    "type": "ArrayExpression",
                    "start": 1197,
                    "end": 1203,
                    "elements": [
                      {
                        "type": "Literal",
                        "start": 1198,
                        "end": 1202,
                        "value": true,
                        "raw": "true",
                        "regex": null,
                        "bigint": null
                      }
                    ]
                  },
                  "body": {
                    "type": "BlockStatement",
                    "start": 1205,
                    "end": 1228,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1211,
                        "end": 1224,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 1211,
                          "end": 1223,
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "start": 1211,
                            "end": 1218,
                            "name": "counter"
                          },
                          "right": {
                            "type": "Literal",
                            "start": 1222,
                            "end": 1223,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1231,
                  "end": 1244,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1231,
                    "end": 1243,
                    "operator": "+=",
                    "left": {
                      "type": "Identifier",
                      "start": 1231,
                      "end": 1238,
                      "name": "counter"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 1242,
                      "end": 1243,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1250,
      "end": 1279,
      "expression": {
        "type": "CallExpression",
        "start": 1250,
        "end": 1278,
        "callee": {
          "type": "MemberExpression",
          "start": 1250,
          "end": 1266,
          "object": {
            "type": "Identifier",
            "start": 1250,
            "end": 1256,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1257,
            "end": 1266,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1267,
            "end": 1274,
            "name": "counter"
          },
          {
            "type": "Literal",
            "start": 1276,
            "end": 1277,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}