{
  "type": "Program",
  "start": 0,
  "end": 2811,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 2531,
      "end": 2550,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 2535,
          "end": 2549,
          "id": {
            "type": "Identifier",
            "start": 2535,
            "end": 2545,
            "name": "iterations"
          },
          "init": {
            "type": "Literal",
            "start": 2548,
            "end": 2549,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 2551,
      "end": 2599,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 2555,
          "end": 2598,
          "id": {
            "type": "Identifier",
            "start": 2555,
            "end": 2559,
            "name": "iter"
          },
          "init": {
            "type": "CallExpression",
            "start": 2562,
            "end": 2598,
            "callee": {
              "type": "FunctionExpression",
              "start": 2562,
              "end": 2596,
              "id": null,
              "expression": false,
              "generator": true,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 2574,
                "end": 2596,
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "start": 2578,
                    "end": 2594,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 2578,
                      "end": 2593,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 2578,
                        "end": 2588,
                        "name": "iterations"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 2592,
                        "end": 2593,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  }
                ]
              }
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 2601,
      "end": 2619,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 2605,
          "end": 2618,
          "id": {
            "type": "Identifier",
            "start": 2605,
            "end": 2614,
            "name": "callCount"
          },
          "init": {
            "type": "Literal",
            "start": 2617,
            "end": 2618,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ClassDeclaration",
      "start": 2620,
      "end": 2723,
      "id": {
        "type": "Identifier",
        "start": 2626,
        "end": 2627,
        "name": "C"
      },
      "superClass": null,
      "body": {
        "type": "ClassBody",
        "start": 2628,
        "end": 2723,
        "body": [
          {
            "type": "MethodDefinition",
            "start": 2632,
            "end": 2721,
            "static": false,
            "computed": false,
            "key": {
              "type": "Identifier",
              "start": 2632,
              "end": 2638,
              "name": "method"
            },
            "kind": "method",
            "value": {
              "type": "FunctionExpression",
              "start": 2638,
              "end": 2721,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "ArrayPattern",
                  "start": 2639,
                  "end": 2646,
                  "elements": [
                    {
                      "type": "RestElement",
                      "start": 2640,
                      "end": 2645,
                      "argument": {
                        "type": "ArrayPattern",
                        "start": 2643,
                        "end": 2645,
                        "elements": []
                      }
                    }
                  ]
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 2648,
                "end": 2721,
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "start": 2654,
                    "end": 2686,
                    "expression": {
                      "type": "CallExpression",
                      "start": 2654,
                      "end": 2685,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 2654,
                        "end": 2670,
                        "object": {
                          "type": "Identifier",
                          "start": 2654,
                          "end": 2660,
                          "name": "assert"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 2661,
                          "end": 2670,
                          "name": "sameValue"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 2671,
                          "end": 2681,
                          "name": "iterations"
                        },
                        {
                          "type": "Literal",
                          "start": 2683,
                          "end": 2684,
                          "value": 1,
                          "raw": "1"
                        }
                      ],
                      "optional": false
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "start": 2691,
                    "end": 2717,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 2691,
                      "end": 2716,
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "start": 2691,
                        "end": 2700,
                        "name": "callCount"
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "start": 2703,
                        "end": 2716,
                        "left": {
                          "type": "Identifier",
                          "start": 2703,
                          "end": 2712,
                          "name": "callCount"
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 2715,
                          "end": 2716,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "type": "EmptyStatement",
      "start": 2723,
      "end": 2724
    },
    {
      "type": "ExpressionStatement",
      "start": 2726,
      "end": 2747,
      "expression": {
        "type": "CallExpression",
        "start": 2726,
        "end": 2746,
        "callee": {
          "type": "MemberExpression",
          "start": 2726,
          "end": 2740,
          "object": {
            "type": "NewExpression",
            "start": 2726,
            "end": 2733,
            "callee": {
              "type": "Identifier",
              "start": 2730,
              "end": 2731,
              "name": "C"
            },
            "arguments": []
          },
          "property": {
            "type": "Identifier",
            "start": 2734,
            "end": 2740,
            "name": "method"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 2741,
            "end": 2745,
            "name": "iter"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2748,
      "end": 2810,
      "expression": {
        "type": "CallExpression",
        "start": 2748,
        "end": 2809,
        "callee": {
          "type": "MemberExpression",
          "start": 2748,
          "end": 2764,
          "object": {
            "type": "Identifier",
            "start": 2748,
            "end": 2754,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2755,
            "end": 2764,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 2765,
            "end": 2774,
            "name": "callCount"
          },
          {
            "type": "Literal",
            "start": 2776,
            "end": 2777,
            "value": 1,
            "raw": "1"
          },
          {
            "type": "Literal",
            "start": 2779,
            "end": 2808,
            "value": "method invoked exactly once",
            "raw": "'method invoked exactly once'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}