{
  "type": "Program",
  "start": 0,
  "end": 1283,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 943,
      "end": 953,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 947,
          "end": 952,
          "id": {
            "type": "Identifier",
            "start": 947,
            "end": 948,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 951,
            "end": 952,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 956,
      "end": 1062,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 960,
          "end": 1061,
          "id": {
            "type": "Identifier",
            "start": 960,
            "end": 961,
            "name": "C"
          },
          "init": {
            "type": "ClassExpression",
            "start": 964,
            "end": 1061,
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "start": 970,
              "end": 1061,
              "body": [
                {
                  "type": "PropertyDefinition",
                  "start": 974,
                  "end": 1011,
                  "static": false,
                  "computed": true,
                  "key": {
                    "type": "LogicalExpression",
                    "start": 975,
                    "end": 981,
                    "left": {
                      "type": "Identifier",
                      "start": 975,
                      "end": 976,
                      "name": "x"
                    },
                    "operator": "&&",
                    "right": {
                      "type": "Literal",
                      "start": 980,
                      "end": 981,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "value": {
                    "type": "ArrowFunctionExpression",
                    "start": 985,
                    "end": 1010,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 991,
                      "end": 1010,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 997,
                          "end": 1006,
                          "argument": {
                            "type": "Literal",
                            "start": 1004,
                            "end": 1005,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "PropertyDefinition",
                  "start": 1015,
                  "end": 1059,
                  "static": true,
                  "computed": true,
                  "key": {
                    "type": "LogicalExpression",
                    "start": 1023,
                    "end": 1029,
                    "left": {
                      "type": "Identifier",
                      "start": 1023,
                      "end": 1024,
                      "name": "x"
                    },
                    "operator": "&&",
                    "right": {
                      "type": "Literal",
                      "start": 1028,
                      "end": 1029,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "value": {
                    "type": "ArrowFunctionExpression",
                    "start": 1033,
                    "end": 1058,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1039,
                      "end": 1058,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1045,
                          "end": 1054,
                          "argument": {
                            "type": "Literal",
                            "start": 1052,
                            "end": 1053,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 1064,
      "end": 1080,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1068,
          "end": 1079,
          "id": {
            "type": "Identifier",
            "start": 1068,
            "end": 1069,
            "name": "c"
          },
          "init": {
            "type": "NewExpression",
            "start": 1072,
            "end": 1079,
            "callee": {
              "type": "Identifier",
              "start": 1076,
              "end": 1077,
              "name": "C"
            },
            "arguments": []
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 1082,
      "end": 1121,
      "expression": {
        "type": "CallExpression",
        "start": 1082,
        "end": 1120,
        "callee": {
          "type": "MemberExpression",
          "start": 1082,
          "end": 1098,
          "object": {
            "type": "Identifier",
            "start": 1082,
            "end": 1088,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1089,
            "end": 1098,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1102,
            "end": 1113,
            "callee": {
              "type": "MemberExpression",
              "start": 1102,
              "end": 1111,
              "object": {
                "type": "Identifier",
                "start": 1102,
                "end": 1103,
                "name": "c"
              },
              "property": {
                "type": "LogicalExpression",
                "start": 1104,
                "end": 1110,
                "left": {
                  "type": "Identifier",
                  "start": 1104,
                  "end": 1105,
                  "name": "x"
                },
                "operator": "&&",
                "right": {
                  "type": "Literal",
                  "start": 1109,
                  "end": 1110,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1117,
            "end": 1118,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1122,
      "end": 1161,
      "expression": {
        "type": "CallExpression",
        "start": 1122,
        "end": 1160,
        "callee": {
          "type": "MemberExpression",
          "start": 1122,
          "end": 1138,
          "object": {
            "type": "Identifier",
            "start": 1122,
            "end": 1128,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1129,
            "end": 1138,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1142,
            "end": 1153,
            "callee": {
              "type": "MemberExpression",
              "start": 1142,
              "end": 1151,
              "object": {
                "type": "Identifier",
                "start": 1142,
                "end": 1143,
                "name": "C"
              },
              "property": {
                "type": "LogicalExpression",
                "start": 1144,
                "end": 1150,
                "left": {
                  "type": "Identifier",
                  "start": 1144,
                  "end": 1145,
                  "name": "x"
                },
                "operator": "&&",
                "right": {
                  "type": "Literal",
                  "start": 1149,
                  "end": 1150,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1157,
            "end": 1158,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1162,
      "end": 1209,
      "expression": {
        "type": "CallExpression",
        "start": 1162,
        "end": 1208,
        "callee": {
          "type": "MemberExpression",
          "start": 1162,
          "end": 1178,
          "object": {
            "type": "Identifier",
            "start": 1162,
            "end": 1168,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1169,
            "end": 1178,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1182,
            "end": 1201,
            "callee": {
              "type": "MemberExpression",
              "start": 1182,
              "end": 1199,
              "object": {
                "type": "Identifier",
                "start": 1182,
                "end": 1183,
                "name": "c"
              },
              "property": {
                "type": "CallExpression",
                "start": 1184,
                "end": 1198,
                "callee": {
                  "type": "Identifier",
                  "start": 1184,
                  "end": 1190,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "LogicalExpression",
                    "start": 1191,
                    "end": 1197,
                    "left": {
                      "type": "Identifier",
                      "start": 1191,
                      "end": 1192,
                      "name": "x"
                    },
                    "operator": "&&",
                    "right": {
                      "type": "Literal",
                      "start": 1196,
                      "end": 1197,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ],
                "optional": false
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1205,
            "end": 1206,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1210,
      "end": 1257,
      "expression": {
        "type": "CallExpression",
        "start": 1210,
        "end": 1256,
        "callee": {
          "type": "MemberExpression",
          "start": 1210,
          "end": 1226,
          "object": {
            "type": "Identifier",
            "start": 1210,
            "end": 1216,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1217,
            "end": 1226,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1230,
            "end": 1249,
            "callee": {
              "type": "MemberExpression",
              "start": 1230,
              "end": 1247,
              "object": {
                "type": "Identifier",
                "start": 1230,
                "end": 1231,
                "name": "C"
              },
              "property": {
                "type": "CallExpression",
                "start": 1232,
                "end": 1246,
                "callee": {
                  "type": "Identifier",
                  "start": 1232,
                  "end": 1238,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "LogicalExpression",
                    "start": 1239,
                    "end": 1245,
                    "left": {
                      "type": "Identifier",
                      "start": 1239,
                      "end": 1240,
                      "name": "x"
                    },
                    "operator": "&&",
                    "right": {
                      "type": "Literal",
                      "start": 1244,
                      "end": 1245,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ],
                "optional": false
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1253,
            "end": 1254,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1259,
      "end": 1282,
      "expression": {
        "type": "CallExpression",
        "start": 1259,
        "end": 1281,
        "callee": {
          "type": "MemberExpression",
          "start": 1259,
          "end": 1275,
          "object": {
            "type": "Identifier",
            "start": 1259,
            "end": 1265,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1266,
            "end": 1275,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1276,
            "end": 1277,
            "name": "x"
          },
          {
            "type": "Literal",
            "start": 1279,
            "end": 1280,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}