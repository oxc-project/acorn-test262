{
  "type": "Program",
  "start": 0,
  "end": 1231,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 949,
      "end": 1019,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 953,
          "end": 1018,
          "id": {
            "type": "Identifier",
            "start": 953,
            "end": 954,
            "name": "C"
          },
          "init": {
            "type": "ClassExpression",
            "start": 957,
            "end": 1018,
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "start": 963,
              "end": 1018,
              "body": [
                {
                  "type": "PropertyDefinition",
                  "start": 967,
                  "end": 986,
                  "static": false,
                  "computed": true,
                  "key": {
                    "type": "ConditionalExpression",
                    "start": 968,
                    "end": 980,
                    "test": {
                      "type": "Literal",
                      "start": 968,
                      "end": 972,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 975,
                      "end": 976,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 979,
                      "end": 980,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "value": {
                    "type": "Literal",
                    "start": 984,
                    "end": 985,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                },
                {
                  "type": "PropertyDefinition",
                  "start": 990,
                  "end": 1016,
                  "static": true,
                  "computed": true,
                  "key": {
                    "type": "ConditionalExpression",
                    "start": 998,
                    "end": 1010,
                    "test": {
                      "type": "Literal",
                      "start": 998,
                      "end": 1002,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 1005,
                      "end": 1006,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 1009,
                      "end": 1010,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "value": {
                    "type": "Literal",
                    "start": 1014,
                    "end": 1015,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 1021,
      "end": 1037,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1025,
          "end": 1036,
          "id": {
            "type": "Identifier",
            "start": 1025,
            "end": 1026,
            "name": "c"
          },
          "init": {
            "type": "NewExpression",
            "start": 1029,
            "end": 1036,
            "callee": {
              "type": "Identifier",
              "start": 1033,
              "end": 1034,
              "name": "C"
            },
            "arguments": []
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 1039,
      "end": 1082,
      "expression": {
        "type": "CallExpression",
        "start": 1039,
        "end": 1081,
        "callee": {
          "type": "MemberExpression",
          "start": 1039,
          "end": 1055,
          "object": {
            "type": "Identifier",
            "start": 1039,
            "end": 1045,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1046,
            "end": 1055,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1059,
            "end": 1074,
            "object": {
              "type": "Identifier",
              "start": 1059,
              "end": 1060,
              "name": "c"
            },
            "property": {
              "type": "ConditionalExpression",
              "start": 1061,
              "end": 1073,
              "test": {
                "type": "Literal",
                "start": 1061,
                "end": 1065,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              },
              "consequent": {
                "type": "Literal",
                "start": 1068,
                "end": 1069,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "alternate": {
                "type": "Literal",
                "start": 1072,
                "end": 1073,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1078,
            "end": 1079,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1083,
      "end": 1126,
      "expression": {
        "type": "CallExpression",
        "start": 1083,
        "end": 1125,
        "callee": {
          "type": "MemberExpression",
          "start": 1083,
          "end": 1099,
          "object": {
            "type": "Identifier",
            "start": 1083,
            "end": 1089,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1090,
            "end": 1099,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1103,
            "end": 1118,
            "object": {
              "type": "Identifier",
              "start": 1103,
              "end": 1104,
              "name": "C"
            },
            "property": {
              "type": "ConditionalExpression",
              "start": 1105,
              "end": 1117,
              "test": {
                "type": "Literal",
                "start": 1105,
                "end": 1109,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              },
              "consequent": {
                "type": "Literal",
                "start": 1112,
                "end": 1113,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "alternate": {
                "type": "Literal",
                "start": 1116,
                "end": 1117,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1122,
            "end": 1123,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1127,
      "end": 1178,
      "expression": {
        "type": "CallExpression",
        "start": 1127,
        "end": 1177,
        "callee": {
          "type": "MemberExpression",
          "start": 1127,
          "end": 1143,
          "object": {
            "type": "Identifier",
            "start": 1127,
            "end": 1133,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1134,
            "end": 1143,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1147,
            "end": 1170,
            "object": {
              "type": "Identifier",
              "start": 1147,
              "end": 1148,
              "name": "c"
            },
            "property": {
              "type": "CallExpression",
              "start": 1149,
              "end": 1169,
              "callee": {
                "type": "Identifier",
                "start": 1149,
                "end": 1155,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "start": 1156,
                  "end": 1168,
                  "test": {
                    "type": "Literal",
                    "start": 1156,
                    "end": 1160,
                    "value": true,
                    "raw": "true",
                    "regex": null,
                    "bigint": null
                  },
                  "consequent": {
                    "type": "Literal",
                    "start": 1163,
                    "end": 1164,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  "alternate": {
                    "type": "Literal",
                    "start": 1167,
                    "end": 1168,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "optional": false
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1174,
            "end": 1175,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1179,
      "end": 1230,
      "expression": {
        "type": "CallExpression",
        "start": 1179,
        "end": 1229,
        "callee": {
          "type": "MemberExpression",
          "start": 1179,
          "end": 1195,
          "object": {
            "type": "Identifier",
            "start": 1179,
            "end": 1185,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1186,
            "end": 1195,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1199,
            "end": 1222,
            "object": {
              "type": "Identifier",
              "start": 1199,
              "end": 1200,
              "name": "C"
            },
            "property": {
              "type": "CallExpression",
              "start": 1201,
              "end": 1221,
              "callee": {
                "type": "Identifier",
                "start": 1201,
                "end": 1207,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "start": 1208,
                  "end": 1220,
                  "test": {
                    "type": "Literal",
                    "start": 1208,
                    "end": 1212,
                    "value": true,
                    "raw": "true",
                    "regex": null,
                    "bigint": null
                  },
                  "consequent": {
                    "type": "Literal",
                    "start": 1215,
                    "end": 1216,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  "alternate": {
                    "type": "Literal",
                    "start": 1219,
                    "end": 1220,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "optional": false
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1226,
            "end": 1227,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}