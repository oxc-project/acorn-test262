{
  "type": "Program",
  "start": 0,
  "end": 1529,
  "body": [
    {
      "type": "ClassDeclaration",
      "start": 904,
      "end": 1106,
      "id": {
        "type": "Identifier",
        "start": 910,
        "end": 911,
        "name": "C"
      },
      "superClass": null,
      "body": {
        "type": "ClassBody",
        "start": 912,
        "end": 1106,
        "body": [
          {
            "type": "MethodDefinition",
            "start": 916,
            "end": 956,
            "static": false,
            "computed": true,
            "key": {
              "type": "ConditionalExpression",
              "start": 921,
              "end": 933,
              "test": {
                "type": "Literal",
                "start": 921,
                "end": 925,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              },
              "consequent": {
                "type": "Literal",
                "start": 928,
                "end": 929,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "alternate": {
                "type": "Literal",
                "start": 932,
                "end": 933,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            },
            "kind": "get",
            "value": {
              "type": "FunctionExpression",
              "start": 934,
              "end": 956,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 937,
                "end": 956,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 943,
                    "end": 952,
                    "argument": {
                      "type": "Literal",
                      "start": 950,
                      "end": 951,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ]
              }
            }
          },
          {
            "type": "MethodDefinition",
            "start": 960,
            "end": 1001,
            "static": false,
            "computed": true,
            "key": {
              "type": "ConditionalExpression",
              "start": 965,
              "end": 977,
              "test": {
                "type": "Literal",
                "start": 965,
                "end": 969,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              },
              "consequent": {
                "type": "Literal",
                "start": 972,
                "end": 973,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "alternate": {
                "type": "Literal",
                "start": 976,
                "end": 977,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            },
            "kind": "set",
            "value": {
              "type": "FunctionExpression",
              "start": 978,
              "end": 1001,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 979,
                  "end": 980,
                  "name": "v"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 982,
                "end": 1001,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 988,
                    "end": 997,
                    "argument": {
                      "type": "Literal",
                      "start": 995,
                      "end": 996,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ]
              }
            }
          },
          {
            "type": "MethodDefinition",
            "start": 1005,
            "end": 1052,
            "static": true,
            "computed": true,
            "key": {
              "type": "ConditionalExpression",
              "start": 1017,
              "end": 1029,
              "test": {
                "type": "Literal",
                "start": 1017,
                "end": 1021,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              },
              "consequent": {
                "type": "Literal",
                "start": 1024,
                "end": 1025,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "alternate": {
                "type": "Literal",
                "start": 1028,
                "end": 1029,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            },
            "kind": "get",
            "value": {
              "type": "FunctionExpression",
              "start": 1030,
              "end": 1052,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1033,
                "end": 1052,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 1039,
                    "end": 1048,
                    "argument": {
                      "type": "Literal",
                      "start": 1046,
                      "end": 1047,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ]
              }
            }
          },
          {
            "type": "MethodDefinition",
            "start": 1056,
            "end": 1104,
            "static": true,
            "computed": true,
            "key": {
              "type": "ConditionalExpression",
              "start": 1068,
              "end": 1080,
              "test": {
                "type": "Literal",
                "start": 1068,
                "end": 1072,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              },
              "consequent": {
                "type": "Literal",
                "start": 1075,
                "end": 1076,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "alternate": {
                "type": "Literal",
                "start": 1079,
                "end": 1080,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            },
            "kind": "set",
            "value": {
              "type": "FunctionExpression",
              "start": 1081,
              "end": 1104,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 1082,
                  "end": 1083,
                  "name": "v"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 1085,
                "end": 1104,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 1091,
                    "end": 1100,
                    "argument": {
                      "type": "Literal",
                      "start": 1098,
                      "end": 1099,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "type": "EmptyStatement",
      "start": 1106,
      "end": 1107
    },
    {
      "type": "VariableDeclaration",
      "start": 1109,
      "end": 1125,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1113,
          "end": 1124,
          "id": {
            "type": "Identifier",
            "start": 1113,
            "end": 1114,
            "name": "c"
          },
          "init": {
            "type": "NewExpression",
            "start": 1117,
            "end": 1124,
            "callee": {
              "type": "Identifier",
              "start": 1121,
              "end": 1122,
              "name": "C"
            },
            "arguments": []
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 1127,
      "end": 1170,
      "expression": {
        "type": "CallExpression",
        "start": 1127,
        "end": 1169,
        "callee": {
          "type": "MemberExpression",
          "start": 1127,
          "end": 1143,
          "object": {
            "type": "Identifier",
            "start": 1127,
            "end": 1133,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1134,
            "end": 1143,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1147,
            "end": 1162,
            "object": {
              "type": "Identifier",
              "start": 1147,
              "end": 1148,
              "name": "c"
            },
            "property": {
              "type": "ConditionalExpression",
              "start": 1149,
              "end": 1161,
              "test": {
                "type": "Literal",
                "start": 1149,
                "end": 1153,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              },
              "consequent": {
                "type": "Literal",
                "start": 1156,
                "end": 1157,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "alternate": {
                "type": "Literal",
                "start": 1160,
                "end": 1161,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1166,
            "end": 1167,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1171,
      "end": 1218,
      "expression": {
        "type": "CallExpression",
        "start": 1171,
        "end": 1217,
        "callee": {
          "type": "MemberExpression",
          "start": 1171,
          "end": 1187,
          "object": {
            "type": "Identifier",
            "start": 1171,
            "end": 1177,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1178,
            "end": 1187,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "start": 1191,
            "end": 1210,
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "start": 1191,
              "end": 1206,
              "object": {
                "type": "Identifier",
                "start": 1191,
                "end": 1192,
                "name": "c"
              },
              "property": {
                "type": "ConditionalExpression",
                "start": 1193,
                "end": 1205,
                "test": {
                  "type": "Literal",
                  "start": 1193,
                  "end": 1197,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                },
                "consequent": {
                  "type": "Literal",
                  "start": 1200,
                  "end": 1201,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "alternate": {
                  "type": "Literal",
                  "start": 1204,
                  "end": 1205,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              },
              "computed": true,
              "optional": false
            },
            "right": {
              "type": "Literal",
              "start": 1209,
              "end": 1210,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1214,
            "end": 1215,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1220,
      "end": 1263,
      "expression": {
        "type": "CallExpression",
        "start": 1220,
        "end": 1262,
        "callee": {
          "type": "MemberExpression",
          "start": 1220,
          "end": 1236,
          "object": {
            "type": "Identifier",
            "start": 1220,
            "end": 1226,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1227,
            "end": 1236,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1240,
            "end": 1255,
            "object": {
              "type": "Identifier",
              "start": 1240,
              "end": 1241,
              "name": "C"
            },
            "property": {
              "type": "ConditionalExpression",
              "start": 1242,
              "end": 1254,
              "test": {
                "type": "Literal",
                "start": 1242,
                "end": 1246,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              },
              "consequent": {
                "type": "Literal",
                "start": 1249,
                "end": 1250,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "alternate": {
                "type": "Literal",
                "start": 1253,
                "end": 1254,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1259,
            "end": 1260,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1264,
      "end": 1311,
      "expression": {
        "type": "CallExpression",
        "start": 1264,
        "end": 1310,
        "callee": {
          "type": "MemberExpression",
          "start": 1264,
          "end": 1280,
          "object": {
            "type": "Identifier",
            "start": 1264,
            "end": 1270,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1271,
            "end": 1280,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "start": 1284,
            "end": 1303,
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "start": 1284,
              "end": 1299,
              "object": {
                "type": "Identifier",
                "start": 1284,
                "end": 1285,
                "name": "C"
              },
              "property": {
                "type": "ConditionalExpression",
                "start": 1286,
                "end": 1298,
                "test": {
                  "type": "Literal",
                  "start": 1286,
                  "end": 1290,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                },
                "consequent": {
                  "type": "Literal",
                  "start": 1293,
                  "end": 1294,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "alternate": {
                  "type": "Literal",
                  "start": 1297,
                  "end": 1298,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              },
              "computed": true,
              "optional": false
            },
            "right": {
              "type": "Literal",
              "start": 1302,
              "end": 1303,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1307,
            "end": 1308,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1312,
      "end": 1363,
      "expression": {
        "type": "CallExpression",
        "start": 1312,
        "end": 1362,
        "callee": {
          "type": "MemberExpression",
          "start": 1312,
          "end": 1328,
          "object": {
            "type": "Identifier",
            "start": 1312,
            "end": 1318,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1319,
            "end": 1328,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1332,
            "end": 1355,
            "object": {
              "type": "Identifier",
              "start": 1332,
              "end": 1333,
              "name": "c"
            },
            "property": {
              "type": "CallExpression",
              "start": 1334,
              "end": 1354,
              "callee": {
                "type": "Identifier",
                "start": 1334,
                "end": 1340,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "start": 1341,
                  "end": 1353,
                  "test": {
                    "type": "Literal",
                    "start": 1341,
                    "end": 1345,
                    "value": true,
                    "raw": "true",
                    "regex": null,
                    "bigint": null
                  },
                  "consequent": {
                    "type": "Literal",
                    "start": 1348,
                    "end": 1349,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  "alternate": {
                    "type": "Literal",
                    "start": 1352,
                    "end": 1353,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "optional": false
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1359,
            "end": 1360,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1364,
      "end": 1419,
      "expression": {
        "type": "CallExpression",
        "start": 1364,
        "end": 1418,
        "callee": {
          "type": "MemberExpression",
          "start": 1364,
          "end": 1380,
          "object": {
            "type": "Identifier",
            "start": 1364,
            "end": 1370,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1371,
            "end": 1380,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "start": 1384,
            "end": 1411,
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "start": 1384,
              "end": 1407,
              "object": {
                "type": "Identifier",
                "start": 1384,
                "end": 1385,
                "name": "c"
              },
              "property": {
                "type": "CallExpression",
                "start": 1386,
                "end": 1406,
                "callee": {
                  "type": "Identifier",
                  "start": 1386,
                  "end": 1392,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "start": 1393,
                    "end": 1405,
                    "test": {
                      "type": "Literal",
                      "start": 1393,
                      "end": 1397,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 1400,
                      "end": 1401,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 1404,
                      "end": 1405,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ],
                "optional": false
              },
              "computed": true,
              "optional": false
            },
            "right": {
              "type": "Literal",
              "start": 1410,
              "end": 1411,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1415,
            "end": 1416,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1421,
      "end": 1472,
      "expression": {
        "type": "CallExpression",
        "start": 1421,
        "end": 1471,
        "callee": {
          "type": "MemberExpression",
          "start": 1421,
          "end": 1437,
          "object": {
            "type": "Identifier",
            "start": 1421,
            "end": 1427,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1428,
            "end": 1437,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1441,
            "end": 1464,
            "object": {
              "type": "Identifier",
              "start": 1441,
              "end": 1442,
              "name": "C"
            },
            "property": {
              "type": "CallExpression",
              "start": 1443,
              "end": 1463,
              "callee": {
                "type": "Identifier",
                "start": 1443,
                "end": 1449,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "start": 1450,
                  "end": 1462,
                  "test": {
                    "type": "Literal",
                    "start": 1450,
                    "end": 1454,
                    "value": true,
                    "raw": "true",
                    "regex": null,
                    "bigint": null
                  },
                  "consequent": {
                    "type": "Literal",
                    "start": 1457,
                    "end": 1458,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  "alternate": {
                    "type": "Literal",
                    "start": 1461,
                    "end": 1462,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "optional": false
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1468,
            "end": 1469,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1473,
      "end": 1528,
      "expression": {
        "type": "CallExpression",
        "start": 1473,
        "end": 1527,
        "callee": {
          "type": "MemberExpression",
          "start": 1473,
          "end": 1489,
          "object": {
            "type": "Identifier",
            "start": 1473,
            "end": 1479,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1480,
            "end": 1489,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "start": 1493,
            "end": 1520,
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "start": 1493,
              "end": 1516,
              "object": {
                "type": "Identifier",
                "start": 1493,
                "end": 1494,
                "name": "C"
              },
              "property": {
                "type": "CallExpression",
                "start": 1495,
                "end": 1515,
                "callee": {
                  "type": "Identifier",
                  "start": 1495,
                  "end": 1501,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "start": 1502,
                    "end": 1514,
                    "test": {
                      "type": "Literal",
                      "start": 1502,
                      "end": 1506,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 1509,
                      "end": 1510,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 1513,
                      "end": 1514,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ],
                "optional": false
              },
              "computed": true,
              "optional": false
            },
            "right": {
              "type": "Literal",
              "start": 1519,
              "end": 1520,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1524,
            "end": 1525,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}