{
  "type": "Program",
  "start": 0,
  "end": 1481,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 310,
      "end": 375,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 314,
          "end": 325,
          "id": {
            "type": "Identifier",
            "start": 314,
            "end": 325,
            "name": "__evaluated"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 327,
          "end": 350,
          "id": {
            "type": "Identifier",
            "start": 327,
            "end": 350,
            "name": "__in__do__before__break"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 352,
          "end": 374,
          "id": {
            "type": "Identifier",
            "start": 352,
            "end": 374,
            "name": "__in__do__after__break"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 377,
      "end": 470,
      "expression": {
        "type": "AssignmentExpression",
        "start": 377,
        "end": 469,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 377,
          "end": 388,
          "name": "__evaluated"
        },
        "right": {
          "type": "CallExpression",
          "start": 391,
          "end": 469,
          "callee": {
            "type": "Identifier",
            "start": 391,
            "end": 395,
            "name": "eval"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 396,
              "end": 468,
              "value": "while(1) {__in__do__before__break=1; break; __in__do__after__break=2;}",
              "raw": "\"while(1) {__in__do__before__break=1; break; __in__do__after__break=2;}\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 561,
      "end": 726,
      "test": {
        "type": "BinaryExpression",
        "start": 565,
        "end": 594,
        "left": {
          "type": "Identifier",
          "start": 565,
          "end": 588,
          "name": "__in__do__before__break"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 593,
          "end": 594,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 596,
        "end": 726,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 599,
            "end": 724,
            "argument": {
              "type": "NewExpression",
              "start": 605,
              "end": 723,
              "callee": {
                "type": "Identifier",
                "start": 609,
                "end": 621,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 622,
                  "end": 720,
                  "left": {
                    "type": "Literal",
                    "start": 622,
                    "end": 695,
                    "value": "#1: __in__do__before__break === 1. Actual:  __in__do__before__break ===",
                    "raw": "'#1: __in__do__before__break === 1. Actual:  __in__do__before__break ==='",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 697,
                    "end": 720,
                    "name": "__in__do__before__break"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 899,
      "end": 1108,
      "test": {
        "type": "BinaryExpression",
        "start": 903,
        "end": 948,
        "left": {
          "type": "UnaryExpression",
          "start": 903,
          "end": 932,
          "operator": "typeof",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "start": 910,
            "end": 932,
            "name": "__in__do__after__break"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 937,
          "end": 948,
          "value": "undefined",
          "raw": "\"undefined\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 950,
        "end": 1108,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 953,
            "end": 1106,
            "argument": {
              "type": "NewExpression",
              "start": 959,
              "end": 1105,
              "callee": {
                "type": "Identifier",
                "start": 963,
                "end": 975,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 976,
                  "end": 1102,
                  "left": {
                    "type": "Literal",
                    "start": 976,
                    "end": 1071,
                    "value": "#2: typeof __in__do__after__break === \"undefined\". Actual:  typeof __in__do__after__break ===",
                    "raw": "'#2: typeof __in__do__after__break === \"undefined\". Actual:  typeof __in__do__after__break ==='",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "UnaryExpression",
                    "start": 1073,
                    "end": 1102,
                    "operator": "typeof",
                    "prefix": true,
                    "argument": {
                      "type": "Identifier",
                      "start": 1080,
                      "end": 1102,
                      "name": "__in__do__after__break"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1281,
      "end": 1398,
      "test": {
        "type": "BinaryExpression",
        "start": 1285,
        "end": 1302,
        "left": {
          "type": "Identifier",
          "start": 1285,
          "end": 1296,
          "name": "__evaluated"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1301,
          "end": 1302,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1304,
        "end": 1398,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1307,
            "end": 1396,
            "argument": {
              "type": "NewExpression",
              "start": 1313,
              "end": 1395,
              "callee": {
                "type": "Identifier",
                "start": 1317,
                "end": 1329,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1330,
                  "end": 1392,
                  "left": {
                    "type": "Literal",
                    "start": 1330,
                    "end": 1379,
                    "value": "#3: __evaluated === 1. Actual:  __evaluated ===",
                    "raw": "'#3: __evaluated === 1. Actual:  __evaluated ==='",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 1381,
                    "end": 1392,
                    "name": "__evaluated"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}