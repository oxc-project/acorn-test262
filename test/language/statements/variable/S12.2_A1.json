{
  "type": "Program",
  "start": 0,
  "end": 1982,
  "body": [
    {
      "type": "TryStatement",
      "start": 597,
      "end": 897,
      "block": {
        "type": "BlockStatement",
        "start": 601,
        "end": 791,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 604,
            "end": 614,
            "expression": {
              "type": "AssignmentExpression",
              "start": 604,
              "end": 613,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 604,
                "end": 607,
                "name": "__x"
              },
              "right": {
                "type": "Identifier",
                "start": 610,
                "end": 613,
                "name": "__x"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 619,
            "end": 654,
            "expression": {
              "type": "AssignmentExpression",
              "start": 619,
              "end": 653,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 619,
                "end": 622,
                "name": "__y"
              },
              "right": {
                "type": "ConditionalExpression",
                "start": 625,
                "end": 653,
                "test": {
                  "type": "Identifier",
                  "start": 625,
                  "end": 628,
                  "name": "__x"
                },
                "consequent": {
                  "type": "Literal",
                  "start": 631,
                  "end": 644,
                  "value": "good fellow",
                  "raw": "\"good fellow\"",
                  "regex": null,
                  "bigint": null
                },
                "alternate": {
                  "type": "Literal",
                  "start": 647,
                  "end": 653,
                  "value": "liar",
                  "raw": "\"liar\"",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 705,
            "end": 731,
            "expression": {
              "type": "AssignmentExpression",
              "start": 705,
              "end": 730,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 705,
                "end": 708,
                "name": "__z"
              },
              "right": {
                "type": "ConditionalExpression",
                "start": 711,
                "end": 730,
                "test": {
                  "type": "BinaryExpression",
                  "start": 711,
                  "end": 722,
                  "left": {
                    "type": "Identifier",
                    "start": 711,
                    "end": 714,
                    "name": "__z"
                  },
                  "operator": "===",
                  "right": {
                    "type": "Identifier",
                    "start": 719,
                    "end": 722,
                    "name": "__x"
                  }
                },
                "consequent": {
                  "type": "Literal",
                  "start": 725,
                  "end": 726,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "alternate": {
                  "type": "Literal",
                  "start": 729,
                  "end": 730,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 792,
        "end": 897,
        "param": {
          "type": "Identifier",
          "start": 799,
          "end": 800,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 802,
          "end": 897,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 805,
              "end": 895,
              "argument": {
                "type": "NewExpression",
                "start": 811,
                "end": 894,
                "callee": {
                  "type": "Identifier",
                  "start": 815,
                  "end": 827,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 828,
                    "end": 893,
                    "value": "#1: Using declarated variable before it declaration is admitted",
                    "raw": "'#1: Using declarated variable before it declaration is admitted'",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1070,
      "end": 1169,
      "expression": {
        "type": "CallExpression",
        "start": 1070,
        "end": 1168,
        "callee": {
          "type": "MemberExpression",
          "start": 1070,
          "end": 1083,
          "object": {
            "type": "Identifier",
            "start": 1070,
            "end": 1076,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1077,
            "end": 1083,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1084,
            "end": 1098,
            "name": "ReferenceError"
          },
          {
            "type": "FunctionExpression",
            "start": 1100,
            "end": 1167,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1111,
              "end": 1167,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1117,
                  "end": 1165,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1117,
                    "end": 1164,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1117,
                      "end": 1139,
                      "name": "__something__undefined"
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 1142,
                      "end": 1164,
                      "name": "__something__undefined"
                    }
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "IfStatement",
      "start": 1342,
      "end": 1487,
      "test": {
        "type": "BinaryExpression",
        "start": 1346,
        "end": 1374,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1346,
          "end": 1362,
          "expression": {
            "type": "BinaryExpression",
            "start": 1347,
            "end": 1361,
            "left": {
              "type": "Identifier",
              "start": 1347,
              "end": 1350,
              "name": "__y"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1355,
              "end": 1361,
              "value": "liar",
              "raw": "\"liar\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "&",
        "right": {
          "type": "ParenthesizedExpression",
          "start": 1363,
          "end": 1374,
          "expression": {
            "type": "BinaryExpression",
            "start": 1364,
            "end": 1373,
            "left": {
              "type": "Identifier",
              "start": 1364,
              "end": 1367,
              "name": "__z"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1372,
              "end": 1373,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1376,
        "end": 1487,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1379,
            "end": 1485,
            "argument": {
              "type": "NewExpression",
              "start": 1385,
              "end": 1484,
              "callee": {
                "type": "Identifier",
                "start": 1389,
                "end": 1401,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1402,
                  "end": 1481,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 1402,
                    "end": 1477,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 1402,
                      "end": 1462,
                      "left": {
                        "type": "Literal",
                        "start": 1402,
                        "end": 1458,
                        "value": "#3: (__y === \"liar\") and (__z === 1). Actual:  __y ===",
                        "raw": "'#3: (__y === \"liar\") and (__z === 1). Actual:  __y ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1459,
                        "end": 1462,
                        "name": "__y"
                      }
                    },
                    "operator": "+",
                    "right": {
                      "type": "Literal",
                      "start": 1463,
                      "end": 1477,
                      "value": " and __z ===",
                      "raw": "' and __z ==='",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 1478,
                    "end": 1481,
                    "name": "__z"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 1571,
      "end": 1624,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1575,
          "end": 1578,
          "id": {
            "type": "Identifier",
            "start": 1575,
            "end": 1578,
            "name": "__x"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1580,
          "end": 1590,
          "id": {
            "type": "Identifier",
            "start": 1580,
            "end": 1583,
            "name": "__y"
          },
          "init": {
            "type": "Literal",
            "start": 1586,
            "end": 1590,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        },
        {
          "type": "VariableDeclarator",
          "start": 1592,
          "end": 1623,
          "id": {
            "type": "Identifier",
            "start": 1592,
            "end": 1595,
            "name": "__z"
          },
          "init": {
            "type": "ConditionalExpression",
            "start": 1598,
            "end": 1623,
            "test": {
              "type": "Identifier",
              "start": 1598,
              "end": 1601,
              "name": "__y"
            },
            "consequent": {
              "type": "Literal",
              "start": 1604,
              "end": 1613,
              "value": "smeagol",
              "raw": "\"smeagol\"",
              "regex": null,
              "bigint": null
            },
            "alternate": {
              "type": "Literal",
              "start": 1616,
              "end": 1623,
              "value": "golum",
              "raw": "\"golum\"",
              "regex": null,
              "bigint": null
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 1715,
      "end": 1899,
      "test": {
        "type": "BinaryExpression",
        "start": 1719,
        "end": 1742,
        "left": {
          "type": "UnaryExpression",
          "start": 1719,
          "end": 1723,
          "operator": "!",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "start": 1720,
            "end": 1723,
            "name": "__y"
          }
        },
        "operator": "&",
        "right": {
          "type": "UnaryExpression",
          "start": 1724,
          "end": 1742,
          "operator": "!",
          "prefix": true,
          "argument": {
            "type": "ParenthesizedExpression",
            "start": 1725,
            "end": 1742,
            "expression": {
              "type": "AssignmentExpression",
              "start": 1726,
              "end": 1741,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 1726,
                "end": 1729,
                "name": "__z"
              },
              "right": {
                "type": "Literal",
                "start": 1732,
                "end": 1741,
                "value": "smeagol",
                "raw": "\"smeagol\"",
                "regex": null,
                "bigint": null
              }
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1744,
        "end": 1899,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1747,
            "end": 1897,
            "argument": {
              "type": "NewExpression",
              "start": 1753,
              "end": 1896,
              "callee": {
                "type": "Identifier",
                "start": 1757,
                "end": 1769,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1770,
                  "end": 1895,
                  "value": "#4: A variable with an Initialiser is assigned the value of its AssignmentExpression when the VariableStatement is executed",
                  "raw": "'#4: A variable with an Initialiser is assigned the value of its AssignmentExpression when the VariableStatement is executed'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}