{
  "type": "Program",
  "start": 0,
  "end": 1220,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 997,
      "end": 1015,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1001,
          "end": 1014,
          "id": {
            "type": "Identifier",
            "start": 1001,
            "end": 1010,
            "name": "callCount"
          },
          "init": {
            "type": "Literal",
            "start": 1013,
            "end": 1014,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "start": 1016,
      "end": 1093,
      "id": {
        "type": "Identifier",
        "start": 1032,
        "end": 1033,
        "name": "f"
      },
      "expression": false,
      "generator": true,
      "async": true,
      "params": [
        {
          "type": "AssignmentPattern",
          "start": 1034,
          "end": 1056,
          "left": {
            "type": "Identifier",
            "start": 1034,
            "end": 1035,
            "name": "a"
          },
          "right": {
            "type": "CallExpression",
            "start": 1038,
            "end": 1056,
            "callee": {
              "type": "Identifier",
              "start": 1038,
              "end": 1042,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1043,
                "end": 1055,
                "value": "var a = 42",
                "raw": "\"var a = 42\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 1058,
        "end": 1093,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1065,
            "end": 1091,
            "expression": {
              "type": "AssignmentExpression",
              "start": 1065,
              "end": 1090,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 1065,
                "end": 1074,
                "name": "callCount"
              },
              "right": {
                "type": "BinaryExpression",
                "start": 1077,
                "end": 1090,
                "left": {
                  "type": "Identifier",
                  "start": 1077,
                  "end": 1086,
                  "name": "callCount"
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "start": 1089,
                  "end": 1090,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1095,
      "end": 1145,
      "expression": {
        "type": "CallExpression",
        "start": 1095,
        "end": 1144,
        "callee": {
          "type": "MemberExpression",
          "start": 1095,
          "end": 1108,
          "object": {
            "type": "Identifier",
            "start": 1095,
            "end": 1101,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1102,
            "end": 1108,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1109,
            "end": 1120,
            "name": "SyntaxError"
          },
          {
            "type": "FunctionExpression",
            "start": 1122,
            "end": 1143,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1133,
              "end": 1143,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1137,
                  "end": 1141,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1137,
                    "end": 1140,
                    "callee": {
                      "type": "Identifier",
                      "start": 1137,
                      "end": 1138,
                      "name": "f"
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1147,
      "end": 1219,
      "expression": {
        "type": "CallExpression",
        "start": 1147,
        "end": 1218,
        "callee": {
          "type": "MemberExpression",
          "start": 1147,
          "end": 1163,
          "object": {
            "type": "Identifier",
            "start": 1147,
            "end": 1153,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1154,
            "end": 1163,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1164,
            "end": 1173,
            "name": "callCount"
          },
          {
            "type": "Literal",
            "start": 1175,
            "end": 1176,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1178,
            "end": 1217,
            "value": "generator function body not evaluated",
            "raw": "'generator function body not evaluated'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}