{
  "type": "Program",
  "start": 0,
  "end": 894,
  "body": [
    {
      "type": "TryStatement",
      "start": 376,
      "end": 541,
      "block": {
        "type": "BlockStatement",
        "start": 380,
        "end": 433,
        "body": [
          {
            "type": "ForInStatement",
            "start": 383,
            "end": 430,
            "left": {
              "type": "Identifier",
              "start": 387,
              "end": 392,
              "name": "__key"
            },
            "right": {
              "type": "Identifier",
              "start": 396,
              "end": 405,
              "name": "undefined"
            },
            "body": {
              "type": "BlockStatement",
              "start": 406,
              "end": 430,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 413,
                  "end": 427,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 417,
                      "end": 426,
                      "id": {
                        "type": "Identifier",
                        "start": 417,
                        "end": 420,
                        "name": "key"
                      },
                      "init": {
                        "type": "Identifier",
                        "start": 421,
                        "end": 426,
                        "name": "__key"
                      }
                    }
                  ],
                  "kind": "var"
                }
              ]
            }
          },
          {
            "type": "EmptyStatement",
            "start": 430,
            "end": 431
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 434,
        "end": 541,
        "param": {
          "type": "Identifier",
          "start": 441,
          "end": 442,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 444,
          "end": 541,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 447,
              "end": 539,
              "argument": {
                "type": "NewExpression",
                "start": 453,
                "end": 538,
                "callee": {
                  "type": "Identifier",
                  "start": 457,
                  "end": 469,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 470,
                    "end": 537,
                    "value": "#1: \"for(key in undefined){}\" does not lead to throwing exception",
                    "raw": "'#1: \"for(key in undefined){}\" does not lead to throwing exception'",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "IfStatement",
      "start": 715,
      "end": 811,
      "test": {
        "type": "BinaryExpression",
        "start": 719,
        "end": 734,
        "left": {
          "type": "Identifier",
          "start": 719,
          "end": 722,
          "name": "key"
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 725,
          "end": 734,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 736,
        "end": 811,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 739,
            "end": 809,
            "argument": {
              "type": "NewExpression",
              "start": 745,
              "end": 808,
              "callee": {
                "type": "Identifier",
                "start": 749,
                "end": 761,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 762,
                  "end": 807,
                  "left": {
                    "type": "Literal",
                    "start": 762,
                    "end": 803,
                    "value": "#2: key === undefined. Actual: key === ",
                    "raw": "'#2: key === undefined. Actual: key === '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 804,
                    "end": 807,
                    "name": "key"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}