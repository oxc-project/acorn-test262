{
  "type": "Program",
  "start": 0,
  "end": 1405,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1024,
      "end": 1099,
      "expression": {
        "type": "CallExpression",
        "start": 1024,
        "end": 1098,
        "callee": {
          "type": "MemberExpression",
          "start": 1024,
          "end": 1040,
          "object": {
            "type": "Identifier",
            "start": 1024,
            "end": 1030,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1031,
            "end": 1040,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1041,
            "end": 1086,
            "callee": {
              "type": "Identifier",
              "start": 1041,
              "end": 1045,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1046,
                "end": 1085,
                "value": "1; for (var a in { x: 0 }) { break; }",
                "raw": "'1; for (var a in { x: 0 }) { break; }'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 1088,
            "end": 1097,
            "name": "undefined"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1100,
      "end": 1170,
      "expression": {
        "type": "CallExpression",
        "start": 1100,
        "end": 1169,
        "callee": {
          "type": "MemberExpression",
          "start": 1100,
          "end": 1116,
          "object": {
            "type": "Identifier",
            "start": 1100,
            "end": 1106,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1107,
            "end": 1116,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1117,
            "end": 1165,
            "callee": {
              "type": "Identifier",
              "start": 1117,
              "end": 1121,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1122,
                "end": 1164,
                "value": "2; for (var b in { x: 0 }) { 3; break; }",
                "raw": "'2; for (var b in { x: 0 }) { 3; break; }'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1167,
            "end": 1168,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1172,
      "end": 1290,
      "expression": {
        "type": "CallExpression",
        "start": 1172,
        "end": 1289,
        "callee": {
          "type": "MemberExpression",
          "start": 1172,
          "end": 1188,
          "object": {
            "type": "Identifier",
            "start": 1172,
            "end": 1178,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1179,
            "end": 1188,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1192,
            "end": 1274,
            "callee": {
              "type": "Identifier",
              "start": 1192,
              "end": 1196,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1197,
                "end": 1273,
                "value": "4; outer: do { for (var a in { x: 0 }) { continue outer; } } while (false)",
                "raw": "'4; outer: do { for (var a in { x: 0 }) { continue outer; } } while (false)'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 1278,
            "end": 1287,
            "name": "undefined"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1291,
      "end": 1404,
      "expression": {
        "type": "CallExpression",
        "start": 1291,
        "end": 1403,
        "callee": {
          "type": "MemberExpression",
          "start": 1291,
          "end": 1307,
          "object": {
            "type": "Identifier",
            "start": 1291,
            "end": 1297,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1298,
            "end": 1307,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1311,
            "end": 1396,
            "callee": {
              "type": "Identifier",
              "start": 1311,
              "end": 1315,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1316,
                "end": 1395,
                "value": "5; outer: do { for (var b in { x: 0 }) { 6; continue outer; } } while (false)",
                "raw": "'5; outer: do { for (var b in { x: 0 }) { 6; continue outer; } } while (false)'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1400,
            "end": 1401,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}