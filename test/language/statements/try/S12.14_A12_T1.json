{
  "type": "Program",
  "start": 0,
  "end": 604,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 324,
      "end": 330,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 328,
          "end": 329,
          "id": {
            "type": "Identifier",
            "start": 328,
            "end": 329,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 331,
      "end": 356,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 335,
          "end": 355,
          "id": {
            "type": "Identifier",
            "start": 335,
            "end": 341,
            "name": "mycars"
          },
          "init": {
            "type": "NewExpression",
            "start": 344,
            "end": 355,
            "callee": {
              "type": "Identifier",
              "start": 348,
              "end": 353,
              "name": "Array"
            },
            "arguments": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 357,
      "end": 376,
      "expression": {
        "type": "AssignmentExpression",
        "start": 357,
        "end": 375,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 357,
          "end": 366,
          "object": {
            "type": "Identifier",
            "start": 357,
            "end": 363,
            "name": "mycars"
          },
          "property": {
            "type": "Literal",
            "start": 364,
            "end": 365,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 369,
          "end": 375,
          "value": "Saab",
          "raw": "\"Saab\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 377,
      "end": 397,
      "expression": {
        "type": "AssignmentExpression",
        "start": 377,
        "end": 396,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 377,
          "end": 386,
          "object": {
            "type": "Identifier",
            "start": 377,
            "end": 383,
            "name": "mycars"
          },
          "property": {
            "type": "Literal",
            "start": 384,
            "end": 385,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 389,
          "end": 396,
          "value": "Volvo",
          "raw": "\"Volvo\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 398,
      "end": 416,
      "expression": {
        "type": "AssignmentExpression",
        "start": 398,
        "end": 415,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 398,
          "end": 407,
          "object": {
            "type": "Identifier",
            "start": 398,
            "end": 404,
            "name": "mycars"
          },
          "property": {
            "type": "Literal",
            "start": 405,
            "end": 406,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 410,
          "end": 415,
          "value": "BMW",
          "raw": "\"BMW\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "TryStatement",
      "start": 429,
      "end": 603,
      "block": {
        "type": "BlockStatement",
        "start": 432,
        "end": 499,
        "body": [
          {
            "type": "ForInStatement",
            "start": 436,
            "end": 497,
            "left": {
              "type": "Identifier",
              "start": 441,
              "end": 442,
              "name": "x"
            },
            "right": {
              "type": "Identifier",
              "start": 446,
              "end": 452,
              "name": "mycars"
            },
            "body": {
              "type": "BlockStatement",
              "start": 453,
              "end": 497,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 459,
                  "end": 493,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 463,
                    "end": 480,
                    "left": {
                      "type": "MemberExpression",
                      "start": 463,
                      "end": 472,
                      "object": {
                        "type": "Identifier",
                        "start": 463,
                        "end": 469,
                        "name": "mycars"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 470,
                        "end": 471,
                        "name": "x"
                      },
                      "computed": true,
                      "optional": false
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "start": 475,
                      "end": 480,
                      "value": "BMW",
                      "raw": "\"BMW\"",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "consequent": {
                    "type": "ThrowStatement",
                    "start": 482,
                    "end": 493,
                    "argument": {
                      "type": "Literal",
                      "start": 488,
                      "end": 492,
                      "value": "ex",
                      "raw": "\"ex\"",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "alternate": null
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 500,
        "end": 603,
        "param": {
          "type": "Identifier",
          "start": 506,
          "end": 507,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 508,
          "end": 603,
          "body": [
            {
              "type": "IfStatement",
              "start": 512,
              "end": 601,
              "test": {
                "type": "BinaryExpression",
                "start": 515,
                "end": 523,
                "left": {
                  "type": "Identifier",
                  "start": 515,
                  "end": 516,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 519,
                  "end": 523,
                  "value": "ex",
                  "raw": "\"ex\"",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 524,
                "end": 601,
                "argument": {
                  "type": "NewExpression",
                  "start": 530,
                  "end": 600,
                  "callee": {
                    "type": "Identifier",
                    "start": 534,
                    "end": 546,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 547,
                      "end": 597,
                      "left": {
                        "type": "Literal",
                        "start": 547,
                        "end": 594,
                        "value": "#1: Exception ===\"ex\". Actual:  Exception ===",
                        "raw": "'#1: Exception ===\"ex\". Actual:  Exception ==='",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 596,
                        "end": 597,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}