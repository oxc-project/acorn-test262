{
  "type": "Program",
  "start": 0,
  "end": 1660,
  "body": [
    {
      "type": "TryStatement",
      "start": 299,
      "end": 474,
      "block": {
        "type": "BlockStatement",
        "start": 302,
        "end": 331,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 306,
            "end": 329,
            "argument": {
              "type": "ParenthesizedExpression",
              "start": 312,
              "end": 328,
              "expression": {
                "type": "CallExpression",
                "start": 313,
                "end": 327,
                "callee": {
                  "type": "Identifier",
                  "start": 313,
                  "end": 318,
                  "name": "Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 319,
                    "end": 326,
                    "value": "hello",
                    "raw": "\"hello\""
                  }
                ],
                "optional": false
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 332,
        "end": 474,
        "param": {
          "type": "Identifier",
          "start": 338,
          "end": 339,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 340,
          "end": 474,
          "body": [
            {
              "type": "IfStatement",
              "start": 344,
              "end": 472,
              "test": {
                "type": "BinaryExpression",
                "start": 348,
                "end": 377,
                "left": {
                  "type": "CallExpression",
                  "start": 348,
                  "end": 360,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 348,
                    "end": 358,
                    "object": {
                      "type": "Identifier",
                      "start": 348,
                      "end": 349,
                      "name": "e"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 350,
                      "end": 358,
                      "name": "toString"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 363,
                  "end": 377,
                  "value": "Error: hello",
                  "raw": "\"Error: hello\""
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 379,
                "end": 472,
                "argument": {
                  "type": "NewExpression",
                  "start": 385,
                  "end": 471,
                  "callee": {
                    "type": "Identifier",
                    "start": 389,
                    "end": 401,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 402,
                      "end": 470,
                      "left": {
                        "type": "Literal",
                        "start": 402,
                        "end": 468,
                        "value": "#1: Exception.toString()===\"Error: hello\". Actual: Exception is ",
                        "raw": "'#1: Exception.toString()===\"Error: hello\". Actual: Exception is '"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 469,
                        "end": 470,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 487,
      "end": 666,
      "block": {
        "type": "BlockStatement",
        "start": 490,
        "end": 523,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 494,
            "end": 521,
            "argument": {
              "type": "ParenthesizedExpression",
              "start": 500,
              "end": 520,
              "expression": {
                "type": "NewExpression",
                "start": 501,
                "end": 519,
                "callee": {
                  "type": "Identifier",
                  "start": 505,
                  "end": 510,
                  "name": "Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 511,
                    "end": 518,
                    "value": "hello",
                    "raw": "\"hello\""
                  }
                ]
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 524,
        "end": 666,
        "param": {
          "type": "Identifier",
          "start": 530,
          "end": 531,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 532,
          "end": 666,
          "body": [
            {
              "type": "IfStatement",
              "start": 536,
              "end": 664,
              "test": {
                "type": "BinaryExpression",
                "start": 540,
                "end": 569,
                "left": {
                  "type": "CallExpression",
                  "start": 540,
                  "end": 552,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 540,
                    "end": 550,
                    "object": {
                      "type": "Identifier",
                      "start": 540,
                      "end": 541,
                      "name": "e"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 542,
                      "end": 550,
                      "name": "toString"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 555,
                  "end": 569,
                  "value": "Error: hello",
                  "raw": "\"Error: hello\""
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 571,
                "end": 664,
                "argument": {
                  "type": "NewExpression",
                  "start": 577,
                  "end": 663,
                  "callee": {
                    "type": "Identifier",
                    "start": 581,
                    "end": 593,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 594,
                      "end": 662,
                      "left": {
                        "type": "Literal",
                        "start": 594,
                        "end": 660,
                        "value": "#2: Exception.toString()===\"Error: hello\". Actual: Exception is ",
                        "raw": "'#2: Exception.toString()===\"Error: hello\". Actual: Exception is '"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 661,
                        "end": 662,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "VariableDeclaration",
      "start": 679,
      "end": 688,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 683,
          "end": 687,
          "id": {
            "type": "Identifier",
            "start": 683,
            "end": 685,
            "name": "c3"
          },
          "init": {
            "type": "Literal",
            "start": 686,
            "end": 687,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 689,
      "end": 860,
      "block": {
        "type": "BlockStatement",
        "start": 692,
        "end": 717,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 696,
            "end": 715,
            "argument": {
              "type": "CallExpression",
              "start": 702,
              "end": 714,
              "callee": {
                "type": "Identifier",
                "start": 702,
                "end": 711,
                "name": "EvalError"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 712,
                  "end": 713,
                  "value": 1,
                  "raw": "1"
                }
              ],
              "optional": false
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 718,
        "end": 860,
        "param": {
          "type": "Identifier",
          "start": 724,
          "end": 725,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 726,
          "end": 860,
          "body": [
            {
              "type": "IfStatement",
              "start": 730,
              "end": 858,
              "test": {
                "type": "BinaryExpression",
                "start": 734,
                "end": 763,
                "left": {
                  "type": "CallExpression",
                  "start": 734,
                  "end": 746,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 734,
                    "end": 744,
                    "object": {
                      "type": "Identifier",
                      "start": 734,
                      "end": 735,
                      "name": "e"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 736,
                      "end": 744,
                      "name": "toString"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 749,
                  "end": 763,
                  "value": "EvalError: 1",
                  "raw": "\"EvalError: 1\""
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 765,
                "end": 858,
                "argument": {
                  "type": "NewExpression",
                  "start": 771,
                  "end": 857,
                  "callee": {
                    "type": "Identifier",
                    "start": 775,
                    "end": 787,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 788,
                      "end": 856,
                      "left": {
                        "type": "Literal",
                        "start": 788,
                        "end": 854,
                        "value": "#3: Exception.toString()===\"EvalError: 1\". Actual: Exception is ",
                        "raw": "'#3: Exception.toString()===\"EvalError: 1\". Actual: Exception is '"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 855,
                        "end": 856,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 873,
      "end": 1047,
      "block": {
        "type": "BlockStatement",
        "start": 876,
        "end": 902,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 880,
            "end": 900,
            "argument": {
              "type": "CallExpression",
              "start": 886,
              "end": 899,
              "callee": {
                "type": "Identifier",
                "start": 886,
                "end": 896,
                "name": "RangeError"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 897,
                  "end": 898,
                  "value": 1,
                  "raw": "1"
                }
              ],
              "optional": false
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 903,
        "end": 1047,
        "param": {
          "type": "Identifier",
          "start": 909,
          "end": 910,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 911,
          "end": 1047,
          "body": [
            {
              "type": "IfStatement",
              "start": 915,
              "end": 1045,
              "test": {
                "type": "BinaryExpression",
                "start": 919,
                "end": 949,
                "left": {
                  "type": "CallExpression",
                  "start": 919,
                  "end": 931,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 919,
                    "end": 929,
                    "object": {
                      "type": "Identifier",
                      "start": 919,
                      "end": 920,
                      "name": "e"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 921,
                      "end": 929,
                      "name": "toString"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 934,
                  "end": 949,
                  "value": "RangeError: 1",
                  "raw": "\"RangeError: 1\""
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 951,
                "end": 1045,
                "argument": {
                  "type": "NewExpression",
                  "start": 957,
                  "end": 1044,
                  "callee": {
                    "type": "Identifier",
                    "start": 961,
                    "end": 973,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 974,
                      "end": 1043,
                      "left": {
                        "type": "Literal",
                        "start": 974,
                        "end": 1041,
                        "value": "#4: Exception.toString()===\"RangeError: 1\". Actual: Exception is ",
                        "raw": "'#4: Exception.toString()===\"RangeError: 1\". Actual: Exception is '"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1042,
                        "end": 1043,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 1060,
      "end": 1246,
      "block": {
        "type": "BlockStatement",
        "start": 1063,
        "end": 1093,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1067,
            "end": 1091,
            "argument": {
              "type": "CallExpression",
              "start": 1073,
              "end": 1090,
              "callee": {
                "type": "Identifier",
                "start": 1073,
                "end": 1087,
                "name": "ReferenceError"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1088,
                  "end": 1089,
                  "value": 1,
                  "raw": "1"
                }
              ],
              "optional": false
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1094,
        "end": 1246,
        "param": {
          "type": "Identifier",
          "start": 1100,
          "end": 1101,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1102,
          "end": 1246,
          "body": [
            {
              "type": "IfStatement",
              "start": 1106,
              "end": 1244,
              "test": {
                "type": "BinaryExpression",
                "start": 1110,
                "end": 1144,
                "left": {
                  "type": "CallExpression",
                  "start": 1110,
                  "end": 1122,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1110,
                    "end": 1120,
                    "object": {
                      "type": "Identifier",
                      "start": 1110,
                      "end": 1111,
                      "name": "e"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1112,
                      "end": 1120,
                      "name": "toString"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 1125,
                  "end": 1144,
                  "value": "ReferenceError: 1",
                  "raw": "\"ReferenceError: 1\""
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 1146,
                "end": 1244,
                "argument": {
                  "type": "NewExpression",
                  "start": 1152,
                  "end": 1243,
                  "callee": {
                    "type": "Identifier",
                    "start": 1156,
                    "end": 1168,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 1169,
                      "end": 1242,
                      "left": {
                        "type": "Literal",
                        "start": 1169,
                        "end": 1240,
                        "value": "#5: Exception.toString()===\"ReferenceError: 1\". Actual: Exception is ",
                        "raw": "'#5: Exception.toString()===\"ReferenceError: 1\". Actual: Exception is '"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1241,
                        "end": 1242,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "VariableDeclaration",
      "start": 1259,
      "end": 1268,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1263,
          "end": 1267,
          "id": {
            "type": "Identifier",
            "start": 1263,
            "end": 1265,
            "name": "c6"
          },
          "init": {
            "type": "Literal",
            "start": 1266,
            "end": 1267,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 1269,
      "end": 1440,
      "block": {
        "type": "BlockStatement",
        "start": 1272,
        "end": 1297,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1276,
            "end": 1295,
            "argument": {
              "type": "CallExpression",
              "start": 1282,
              "end": 1294,
              "callee": {
                "type": "Identifier",
                "start": 1282,
                "end": 1291,
                "name": "TypeError"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1292,
                  "end": 1293,
                  "value": 1,
                  "raw": "1"
                }
              ],
              "optional": false
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1298,
        "end": 1440,
        "param": {
          "type": "Identifier",
          "start": 1304,
          "end": 1305,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1306,
          "end": 1440,
          "body": [
            {
              "type": "IfStatement",
              "start": 1310,
              "end": 1438,
              "test": {
                "type": "BinaryExpression",
                "start": 1314,
                "end": 1343,
                "left": {
                  "type": "CallExpression",
                  "start": 1314,
                  "end": 1326,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1314,
                    "end": 1324,
                    "object": {
                      "type": "Identifier",
                      "start": 1314,
                      "end": 1315,
                      "name": "e"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1316,
                      "end": 1324,
                      "name": "toString"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 1329,
                  "end": 1343,
                  "value": "TypeError: 1",
                  "raw": "\"TypeError: 1\""
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 1345,
                "end": 1438,
                "argument": {
                  "type": "NewExpression",
                  "start": 1351,
                  "end": 1437,
                  "callee": {
                    "type": "Identifier",
                    "start": 1355,
                    "end": 1367,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 1368,
                      "end": 1436,
                      "left": {
                        "type": "Literal",
                        "start": 1368,
                        "end": 1434,
                        "value": "#6: Exception.toString()===\"TypeError: 1\". Actual: Exception is ",
                        "raw": "'#6: Exception.toString()===\"TypeError: 1\". Actual: Exception is '"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1435,
                        "end": 1436,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 1453,
      "end": 1659,
      "block": {
        "type": "BlockStatement",
        "start": 1456,
        "end": 1506,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1460,
            "end": 1503,
            "argument": {
              "type": "CallExpression",
              "start": 1466,
              "end": 1502,
              "callee": {
                "type": "Identifier",
                "start": 1466,
                "end": 1474,
                "name": "URIError"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1475,
                  "end": 1484,
                  "value": "message",
                  "raw": "\"message\""
                },
                {
                  "type": "Literal",
                  "start": 1486,
                  "end": 1496,
                  "value": "fileName",
                  "raw": "\"fileName\""
                },
                {
                  "type": "Literal",
                  "start": 1498,
                  "end": 1501,
                  "value": "1",
                  "raw": "\"1\""
                }
              ],
              "optional": false
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1507,
        "end": 1659,
        "param": {
          "type": "Identifier",
          "start": 1513,
          "end": 1514,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1515,
          "end": 1659,
          "body": [
            {
              "type": "IfStatement",
              "start": 1519,
              "end": 1657,
              "test": {
                "type": "BinaryExpression",
                "start": 1523,
                "end": 1557,
                "left": {
                  "type": "CallExpression",
                  "start": 1523,
                  "end": 1535,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 1523,
                    "end": 1533,
                    "object": {
                      "type": "Identifier",
                      "start": 1523,
                      "end": 1524,
                      "name": "e"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1525,
                      "end": 1533,
                      "name": "toString"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [],
                  "optional": false
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 1538,
                  "end": 1557,
                  "value": "URIError: message",
                  "raw": "\"URIError: message\""
                }
              },
              "consequent": {
                "type": "ThrowStatement",
                "start": 1559,
                "end": 1657,
                "argument": {
                  "type": "NewExpression",
                  "start": 1565,
                  "end": 1656,
                  "callee": {
                    "type": "Identifier",
                    "start": 1569,
                    "end": 1581,
                    "name": "Test262Error"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 1582,
                      "end": 1655,
                      "left": {
                        "type": "Literal",
                        "start": 1582,
                        "end": 1653,
                        "value": "#7: Exception.toString()===\"URIError: message\". Actual: Exception is ",
                        "raw": "'#7: Exception.toString()===\"URIError: message\". Actual: Exception is '"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1654,
                        "end": 1655,
                        "name": "e"
                      }
                    }
                  ]
                }
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}