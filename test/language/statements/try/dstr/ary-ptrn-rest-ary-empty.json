{
  "type": "Program",
  "start": 0,
  "end": 1330,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1096,
      "end": 1115,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1100,
          "end": 1114,
          "id": {
            "type": "Identifier",
            "start": 1100,
            "end": 1110,
            "name": "iterations"
          },
          "init": {
            "type": "Literal",
            "start": 1113,
            "end": 1114,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1116,
      "end": 1164,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1120,
          "end": 1163,
          "id": {
            "type": "Identifier",
            "start": 1120,
            "end": 1124,
            "name": "iter"
          },
          "init": {
            "type": "CallExpression",
            "start": 1127,
            "end": 1163,
            "callee": {
              "type": "FunctionExpression",
              "start": 1127,
              "end": 1161,
              "id": null,
              "expression": false,
              "generator": true,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1139,
                "end": 1161,
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "start": 1143,
                    "end": 1159,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1143,
                      "end": 1158,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 1143,
                        "end": 1153,
                        "name": "iterations"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 1157,
                        "end": 1158,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  }
                ]
              }
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1166,
      "end": 1187,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1170,
          "end": 1186,
          "id": {
            "type": "Identifier",
            "start": 1170,
            "end": 1178,
            "name": "ranCatch"
          },
          "init": {
            "type": "Literal",
            "start": 1181,
            "end": 1186,
            "value": false,
            "raw": "false"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 1189,
      "end": 1284,
      "block": {
        "type": "BlockStatement",
        "start": 1193,
        "end": 1210,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1197,
            "end": 1208,
            "argument": {
              "type": "Identifier",
              "start": 1203,
              "end": 1207,
              "name": "iter"
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1211,
        "end": 1284,
        "param": {
          "type": "ArrayPattern",
          "start": 1218,
          "end": 1225,
          "elements": [
            {
              "type": "RestElement",
              "start": 1219,
              "end": 1224,
              "argument": {
                "type": "ArrayPattern",
                "start": 1222,
                "end": 1224,
                "elements": []
              }
            }
          ]
        },
        "body": {
          "type": "BlockStatement",
          "start": 1227,
          "end": 1284,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 1231,
              "end": 1263,
              "expression": {
                "type": "CallExpression",
                "start": 1231,
                "end": 1262,
                "callee": {
                  "type": "MemberExpression",
                  "start": 1231,
                  "end": 1247,
                  "object": {
                    "type": "Identifier",
                    "start": 1231,
                    "end": 1237,
                    "name": "assert"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1238,
                    "end": 1247,
                    "name": "sameValue"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 1248,
                    "end": 1258,
                    "name": "iterations"
                  },
                  {
                    "type": "Literal",
                    "start": 1260,
                    "end": 1261,
                    "value": 1,
                    "raw": "1"
                  }
                ],
                "optional": false
              }
            },
            {
              "type": "ExpressionStatement",
              "start": 1266,
              "end": 1282,
              "expression": {
                "type": "AssignmentExpression",
                "start": 1266,
                "end": 1281,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 1266,
                  "end": 1274,
                  "name": "ranCatch"
                },
                "right": {
                  "type": "Literal",
                  "start": 1277,
                  "end": 1281,
                  "value": true,
                  "raw": "true"
                }
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1286,
      "end": 1329,
      "expression": {
        "type": "CallExpression",
        "start": 1286,
        "end": 1328,
        "callee": {
          "type": "Identifier",
          "start": 1286,
          "end": 1292,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1293,
            "end": 1301,
            "name": "ranCatch"
          },
          {
            "type": "Literal",
            "start": 1303,
            "end": 1327,
            "value": "executed `catch` block",
            "raw": "'executed `catch` block'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}