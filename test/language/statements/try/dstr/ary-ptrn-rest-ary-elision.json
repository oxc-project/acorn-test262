{
  "type": "Program",
  "start": 0,
  "end": 1899,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1620,
      "end": 1634,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1624,
          "end": 1633,
          "id": {
            "type": "Identifier",
            "start": 1624,
            "end": 1629,
            "name": "first"
          },
          "init": {
            "type": "Literal",
            "start": 1632,
            "end": 1633,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1635,
      "end": 1650,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1639,
          "end": 1649,
          "id": {
            "type": "Identifier",
            "start": 1639,
            "end": 1645,
            "name": "second"
          },
          "init": {
            "type": "Literal",
            "start": 1648,
            "end": 1649,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "start": 1651,
      "end": 1706,
      "id": {
        "type": "Identifier",
        "start": 1661,
        "end": 1662,
        "name": "g"
      },
      "expression": false,
      "generator": true,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 1665,
        "end": 1706,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1669,
            "end": 1680,
            "expression": {
              "type": "AssignmentExpression",
              "start": 1669,
              "end": 1679,
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "start": 1669,
                "end": 1674,
                "name": "first"
              },
              "right": {
                "type": "Literal",
                "start": 1678,
                "end": 1679,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 1683,
            "end": 1689,
            "expression": {
              "type": "YieldExpression",
              "start": 1683,
              "end": 1688,
              "delegate": false,
              "argument": null
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 1692,
            "end": 1704,
            "expression": {
              "type": "AssignmentExpression",
              "start": 1692,
              "end": 1703,
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "start": 1692,
                "end": 1698,
                "name": "second"
              },
              "right": {
                "type": "Literal",
                "start": 1702,
                "end": 1703,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            }
          }
        ]
      }
    },
    {
      "type": "EmptyStatement",
      "start": 1706,
      "end": 1707
    },
    {
      "type": "VariableDeclaration",
      "start": 1709,
      "end": 1730,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1713,
          "end": 1729,
          "id": {
            "type": "Identifier",
            "start": 1713,
            "end": 1721,
            "name": "ranCatch"
          },
          "init": {
            "type": "Literal",
            "start": 1724,
            "end": 1729,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 1732,
      "end": 1853,
      "block": {
        "type": "BlockStatement",
        "start": 1736,
        "end": 1752,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1740,
            "end": 1750,
            "argument": {
              "type": "CallExpression",
              "start": 1746,
              "end": 1749,
              "callee": {
                "type": "Identifier",
                "start": 1746,
                "end": 1747,
                "name": "g"
              },
              "arguments": [],
              "optional": false
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1753,
        "end": 1853,
        "param": {
          "type": "ArrayPattern",
          "start": 1760,
          "end": 1768,
          "elements": [
            {
              "type": "RestElement",
              "start": 1761,
              "end": 1767,
              "argument": {
                "type": "ArrayPattern",
                "start": 1764,
                "end": 1767,
                "elements": [
                  null
                ]
              }
            }
          ]
        },
        "body": {
          "type": "BlockStatement",
          "start": 1770,
          "end": 1853,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 1774,
              "end": 1801,
              "expression": {
                "type": "CallExpression",
                "start": 1774,
                "end": 1800,
                "callee": {
                  "type": "MemberExpression",
                  "start": 1774,
                  "end": 1790,
                  "object": {
                    "type": "Identifier",
                    "start": 1774,
                    "end": 1780,
                    "name": "assert"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1781,
                    "end": 1790,
                    "name": "sameValue"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 1791,
                    "end": 1796,
                    "name": "first"
                  },
                  {
                    "type": "Literal",
                    "start": 1798,
                    "end": 1799,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  }
                ],
                "optional": false
              }
            },
            {
              "type": "ExpressionStatement",
              "start": 1804,
              "end": 1832,
              "expression": {
                "type": "CallExpression",
                "start": 1804,
                "end": 1831,
                "callee": {
                  "type": "MemberExpression",
                  "start": 1804,
                  "end": 1820,
                  "object": {
                    "type": "Identifier",
                    "start": 1804,
                    "end": 1810,
                    "name": "assert"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1811,
                    "end": 1820,
                    "name": "sameValue"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 1821,
                    "end": 1827,
                    "name": "second"
                  },
                  {
                    "type": "Literal",
                    "start": 1829,
                    "end": 1830,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  }
                ],
                "optional": false
              }
            },
            {
              "type": "ExpressionStatement",
              "start": 1835,
              "end": 1851,
              "expression": {
                "type": "AssignmentExpression",
                "start": 1835,
                "end": 1850,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 1835,
                  "end": 1843,
                  "name": "ranCatch"
                },
                "right": {
                  "type": "Literal",
                  "start": 1846,
                  "end": 1850,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1855,
      "end": 1898,
      "expression": {
        "type": "CallExpression",
        "start": 1855,
        "end": 1897,
        "callee": {
          "type": "Identifier",
          "start": 1855,
          "end": 1861,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1862,
            "end": 1870,
            "name": "ranCatch"
          },
          {
            "type": "Literal",
            "start": 1872,
            "end": 1896,
            "value": "executed `catch` block",
            "raw": "'executed `catch` block'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}