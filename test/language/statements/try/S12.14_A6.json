{
  "type": "Program",
  "start": 0,
  "end": 1200,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 343,
      "end": 352,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 347,
          "end": 351,
          "id": {
            "type": "Identifier",
            "start": 347,
            "end": 349,
            "name": "c1"
          },
          "init": {
            "type": "Literal",
            "start": 350,
            "end": 351,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 353,
      "end": 463,
      "block": {
        "type": "BlockStatement",
        "start": 357,
        "end": 440,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 361,
            "end": 367,
            "expression": {
              "type": "AssignmentExpression",
              "start": 361,
              "end": 366,
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "start": 361,
                "end": 363,
                "name": "c1"
              },
              "right": {
                "type": "Literal",
                "start": 365,
                "end": 366,
                "value": 1,
                "raw": "1"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 370,
            "end": 372,
            "expression": {
              "type": "Identifier",
              "start": 370,
              "end": 371,
              "name": "y"
            }
          },
          {
            "type": "ThrowStatement",
            "start": 375,
            "end": 438,
            "argument": {
              "type": "NewExpression",
              "start": 381,
              "end": 437,
              "callee": {
                "type": "Identifier",
                "start": 385,
                "end": 397,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 398,
                  "end": 436,
                  "value": "#1.1: \"y\" lead to throwing exception",
                  "raw": "'#1.1: \"y\" lead to throwing exception'"
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 441,
        "end": 463,
        "param": {
          "type": "Identifier",
          "start": 448,
          "end": 449,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 451,
          "end": 463,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 455,
              "end": 461,
              "expression": {
                "type": "AssignmentExpression",
                "start": 455,
                "end": 460,
                "operator": "*=",
                "left": {
                  "type": "Identifier",
                  "start": 455,
                  "end": 457,
                  "name": "c1"
                },
                "right": {
                  "type": "Literal",
                  "start": 459,
                  "end": 460,
                  "value": 2,
                  "raw": "2"
                }
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "IfStatement",
      "start": 464,
      "end": 576,
      "test": {
        "type": "BinaryExpression",
        "start": 468,
        "end": 474,
        "left": {
          "type": "Identifier",
          "start": 468,
          "end": 470,
          "name": "c1"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 473,
          "end": 474,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 475,
        "end": 576,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 479,
            "end": 573,
            "argument": {
              "type": "NewExpression",
              "start": 485,
              "end": 572,
              "callee": {
                "type": "Identifier",
                "start": 489,
                "end": 501,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 502,
                  "end": 571,
                  "value": "#1.2: Sequence evaluation of commands try/catch is 1. try, 2. catch",
                  "raw": "'#1.2: Sequence evaluation of commands try/catch is 1. try, 2. catch'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 589,
      "end": 598,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 593,
          "end": 597,
          "id": {
            "type": "Identifier",
            "start": 593,
            "end": 595,
            "name": "c2"
          },
          "init": {
            "type": "Literal",
            "start": 596,
            "end": 597,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 599,
      "end": 634,
      "block": {
        "type": "BlockStatement",
        "start": 602,
        "end": 614,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 606,
            "end": 612,
            "expression": {
              "type": "AssignmentExpression",
              "start": 606,
              "end": 611,
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "start": 606,
                "end": 608,
                "name": "c2"
              },
              "right": {
                "type": "Literal",
                "start": 610,
                "end": 611,
                "value": 1,
                "raw": "1"
              }
            }
          }
        ]
      },
      "handler": null,
      "finalizer": {
        "type": "BlockStatement",
        "start": 622,
        "end": 634,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 626,
            "end": 632,
            "expression": {
              "type": "AssignmentExpression",
              "start": 626,
              "end": 631,
              "operator": "*=",
              "left": {
                "type": "Identifier",
                "start": 626,
                "end": 628,
                "name": "c2"
              },
              "right": {
                "type": "Literal",
                "start": 630,
                "end": 631,
                "value": 2,
                "raw": "2"
              }
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 635,
      "end": 748,
      "test": {
        "type": "BinaryExpression",
        "start": 639,
        "end": 645,
        "left": {
          "type": "Identifier",
          "start": 639,
          "end": 641,
          "name": "c2"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 644,
          "end": 645,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 646,
        "end": 748,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 650,
            "end": 746,
            "argument": {
              "type": "NewExpression",
              "start": 656,
              "end": 745,
              "callee": {
                "type": "Identifier",
                "start": 660,
                "end": 672,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 673,
                  "end": 744,
                  "value": "#2: Sequence evaluation of commands try/finally is 1. try, 2. finally",
                  "raw": "'#2: Sequence evaluation of commands try/finally is 1. try, 2. finally'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 761,
      "end": 770,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 765,
          "end": 769,
          "id": {
            "type": "Identifier",
            "start": 765,
            "end": 767,
            "name": "c3"
          },
          "init": {
            "type": "Literal",
            "start": 768,
            "end": 769,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 771,
      "end": 833,
      "block": {
        "type": "BlockStatement",
        "start": 774,
        "end": 790,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 778,
            "end": 783,
            "expression": {
              "type": "AssignmentExpression",
              "start": 778,
              "end": 782,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 778,
                "end": 780,
                "name": "c3"
              },
              "right": {
                "type": "Literal",
                "start": 781,
                "end": 782,
                "value": 1,
                "raw": "1"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 786,
            "end": 788,
            "expression": {
              "type": "Identifier",
              "start": 786,
              "end": 787,
              "name": "z"
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 791,
        "end": 813,
        "param": {
          "type": "Identifier",
          "start": 797,
          "end": 800,
          "name": "err"
        },
        "body": {
          "type": "BlockStatement",
          "start": 801,
          "end": 813,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 805,
              "end": 811,
              "expression": {
                "type": "AssignmentExpression",
                "start": 805,
                "end": 810,
                "operator": "*=",
                "left": {
                  "type": "Identifier",
                  "start": 805,
                  "end": 807,
                  "name": "c3"
                },
                "right": {
                  "type": "Literal",
                  "start": 809,
                  "end": 810,
                  "value": 2,
                  "raw": "2"
                }
              }
            }
          ]
        }
      },
      "finalizer": {
        "type": "BlockStatement",
        "start": 821,
        "end": 833,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 825,
            "end": 831,
            "expression": {
              "type": "AssignmentExpression",
              "start": 825,
              "end": 830,
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "start": 825,
                "end": 827,
                "name": "c3"
              },
              "right": {
                "type": "Literal",
                "start": 829,
                "end": 830,
                "value": 1,
                "raw": "1"
              }
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 834,
      "end": 979,
      "test": {
        "type": "BinaryExpression",
        "start": 838,
        "end": 844,
        "left": {
          "type": "Identifier",
          "start": 838,
          "end": 840,
          "name": "c3"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 843,
          "end": 844,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 845,
        "end": 979,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 849,
            "end": 977,
            "argument": {
              "type": "NewExpression",
              "start": 855,
              "end": 976,
              "callee": {
                "type": "Identifier",
                "start": 859,
                "end": 871,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 872,
                  "end": 975,
                  "value": "#3: Sequence evaluation of commands try/catch/finally(with exception) is 1. try, 2. catch, 3. finally",
                  "raw": "'#3: Sequence evaluation of commands try/catch/finally(with exception) is 1. try, 2. catch, 3. finally'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 993,
      "end": 1002,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 997,
          "end": 1001,
          "id": {
            "type": "Identifier",
            "start": 997,
            "end": 999,
            "name": "c4"
          },
          "init": {
            "type": "Literal",
            "start": 1000,
            "end": 1001,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 1003,
      "end": 1060,
      "block": {
        "type": "BlockStatement",
        "start": 1006,
        "end": 1017,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1010,
            "end": 1015,
            "expression": {
              "type": "AssignmentExpression",
              "start": 1010,
              "end": 1014,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 1010,
                "end": 1012,
                "name": "c4"
              },
              "right": {
                "type": "Literal",
                "start": 1013,
                "end": 1014,
                "value": 1,
                "raw": "1"
              }
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1018,
        "end": 1040,
        "param": {
          "type": "Identifier",
          "start": 1024,
          "end": 1027,
          "name": "err"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1028,
          "end": 1040,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 1032,
              "end": 1038,
              "expression": {
                "type": "AssignmentExpression",
                "start": 1032,
                "end": 1037,
                "operator": "*=",
                "left": {
                  "type": "Identifier",
                  "start": 1032,
                  "end": 1034,
                  "name": "c4"
                },
                "right": {
                  "type": "Literal",
                  "start": 1036,
                  "end": 1037,
                  "value": 3,
                  "raw": "3"
                }
              }
            }
          ]
        }
      },
      "finalizer": {
        "type": "BlockStatement",
        "start": 1048,
        "end": 1060,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1052,
            "end": 1058,
            "expression": {
              "type": "AssignmentExpression",
              "start": 1052,
              "end": 1057,
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "start": 1052,
                "end": 1054,
                "name": "c4"
              },
              "right": {
                "type": "Literal",
                "start": 1056,
                "end": 1057,
                "value": 1,
                "raw": "1"
              }
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 1061,
      "end": 1199,
      "test": {
        "type": "BinaryExpression",
        "start": 1065,
        "end": 1071,
        "left": {
          "type": "Identifier",
          "start": 1065,
          "end": 1067,
          "name": "c4"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1070,
          "end": 1071,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1072,
        "end": 1199,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1076,
            "end": 1197,
            "argument": {
              "type": "NewExpression",
              "start": 1082,
              "end": 1196,
              "callee": {
                "type": "Identifier",
                "start": 1086,
                "end": 1098,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1099,
                  "end": 1195,
                  "value": "#4: Sequence evaluation of commands try/catch/finally(without exception) is 1. try, 2. finally",
                  "raw": "'#4: Sequence evaluation of commands try/catch/finally(without exception) is 1. try, 2. finally'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}