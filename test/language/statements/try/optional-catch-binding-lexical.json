{
  "type": "Program",
  "start": 0,
  "end": 931,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 667,
      "end": 677,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 671,
          "end": 676,
          "id": {
            "type": "Identifier",
            "start": 671,
            "end": 672,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 675,
            "end": 676,
            "value": 1,
            "raw": "1"
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 678,
      "end": 699,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 682,
          "end": 698,
          "id": {
            "type": "Identifier",
            "start": 682,
            "end": 690,
            "name": "ranCatch"
          },
          "init": {
            "type": "Literal",
            "start": 693,
            "end": 698,
            "value": false,
            "raw": "false"
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "TryStatement",
      "start": 701,
      "end": 806,
      "block": {
        "type": "BlockStatement",
        "start": 705,
        "end": 742,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 711,
            "end": 717,
            "expression": {
              "type": "AssignmentExpression",
              "start": 711,
              "end": 716,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 711,
                "end": 712,
                "name": "x"
              },
              "right": {
                "type": "Literal",
                "start": 715,
                "end": 716,
                "value": 2,
                "raw": "2"
              }
            }
          },
          {
            "type": "ThrowStatement",
            "start": 722,
            "end": 740,
            "argument": {
              "type": "NewExpression",
              "start": 728,
              "end": 739,
              "callee": {
                "type": "Identifier",
                "start": 732,
                "end": 737,
                "name": "Error"
              },
              "arguments": []
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 743,
        "end": 806,
        "param": null,
        "body": {
          "type": "BlockStatement",
          "start": 749,
          "end": 806,
          "body": [
            {
              "type": "VariableDeclaration",
              "start": 755,
              "end": 765,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 759,
                  "end": 764,
                  "id": {
                    "type": "Identifier",
                    "start": 759,
                    "end": 760,
                    "name": "x"
                  },
                  "init": {
                    "type": "Literal",
                    "start": 763,
                    "end": 764,
                    "value": 3,
                    "raw": "3"
                  }
                }
              ],
              "kind": "let"
            },
            {
              "type": "VariableDeclaration",
              "start": 770,
              "end": 783,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 774,
                  "end": 782,
                  "id": {
                    "type": "Identifier",
                    "start": 774,
                    "end": 775,
                    "name": "y"
                  },
                  "init": {
                    "type": "Literal",
                    "start": 778,
                    "end": 782,
                    "value": true,
                    "raw": "true"
                  }
                }
              ],
              "kind": "let"
            },
            {
              "type": "ExpressionStatement",
              "start": 788,
              "end": 804,
              "expression": {
                "type": "AssignmentExpression",
                "start": 788,
                "end": 803,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 788,
                  "end": 796,
                  "name": "ranCatch"
                },
                "right": {
                  "type": "Literal",
                  "start": 799,
                  "end": 803,
                  "value": true,
                  "raw": "true"
                }
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 808,
      "end": 851,
      "expression": {
        "type": "CallExpression",
        "start": 808,
        "end": 850,
        "callee": {
          "type": "Identifier",
          "start": 808,
          "end": 814,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 815,
            "end": 823,
            "name": "ranCatch"
          },
          {
            "type": "Literal",
            "start": 825,
            "end": 849,
            "value": "executed `catch` block",
            "raw": "'executed `catch` block'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 852,
      "end": 875,
      "expression": {
        "type": "CallExpression",
        "start": 852,
        "end": 874,
        "callee": {
          "type": "MemberExpression",
          "start": 852,
          "end": 868,
          "object": {
            "type": "Identifier",
            "start": 852,
            "end": 858,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 859,
            "end": 868,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 869,
            "end": 870,
            "name": "x"
          },
          {
            "type": "Literal",
            "start": 872,
            "end": 873,
            "value": 2,
            "raw": "2"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 877,
      "end": 930,
      "expression": {
        "type": "CallExpression",
        "start": 877,
        "end": 929,
        "callee": {
          "type": "MemberExpression",
          "start": 877,
          "end": 890,
          "object": {
            "type": "Identifier",
            "start": 877,
            "end": 883,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 884,
            "end": 890,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 891,
            "end": 905,
            "name": "ReferenceError"
          },
          {
            "type": "FunctionExpression",
            "start": 907,
            "end": 928,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 918,
              "end": 928,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 924,
                  "end": 926,
                  "expression": {
                    "type": "Identifier",
                    "start": 924,
                    "end": 925,
                    "name": "y"
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}