{
  "type": "Program",
  "start": 0,
  "end": 1426,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 252,
      "end": 317,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 256,
          "end": 267,
          "id": {
            "type": "Identifier",
            "start": 256,
            "end": 267,
            "name": "__evaluated"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 269,
          "end": 292,
          "id": {
            "type": "Identifier",
            "start": 269,
            "end": 292,
            "name": "__in__do__before__break"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 294,
          "end": 316,
          "id": {
            "type": "Identifier",
            "start": 294,
            "end": 316,
            "name": "__in__do__after__break"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 319,
      "end": 415,
      "expression": {
        "type": "AssignmentExpression",
        "start": 319,
        "end": 414,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 319,
          "end": 330,
          "name": "__evaluated"
        },
        "right": {
          "type": "CallExpression",
          "start": 333,
          "end": 414,
          "callee": {
            "type": "Identifier",
            "start": 333,
            "end": 337,
            "name": "eval"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 338,
              "end": 413,
              "value": "do {__in__do__before__break=1; break; __in__do__after__break=2;} while(0)",
              "raw": "\"do {__in__do__before__break=1; break; __in__do__after__break=2;} while(0)\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 506,
      "end": 671,
      "test": {
        "type": "BinaryExpression",
        "start": 510,
        "end": 539,
        "left": {
          "type": "Identifier",
          "start": 510,
          "end": 533,
          "name": "__in__do__before__break"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 538,
          "end": 539,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 541,
        "end": 671,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 544,
            "end": 669,
            "argument": {
              "type": "NewExpression",
              "start": 550,
              "end": 668,
              "callee": {
                "type": "Identifier",
                "start": 554,
                "end": 566,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 567,
                  "end": 665,
                  "left": {
                    "type": "Literal",
                    "start": 567,
                    "end": 640,
                    "value": "#1: __in__do__before__break === 1. Actual:  __in__do__before__break ===",
                    "raw": "'#1: __in__do__before__break === 1. Actual:  __in__do__before__break ==='",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 642,
                    "end": 665,
                    "name": "__in__do__before__break"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 844,
      "end": 1053,
      "test": {
        "type": "BinaryExpression",
        "start": 848,
        "end": 893,
        "left": {
          "type": "UnaryExpression",
          "start": 848,
          "end": 877,
          "operator": "typeof",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "start": 855,
            "end": 877,
            "name": "__in__do__after__break"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 882,
          "end": 893,
          "value": "undefined",
          "raw": "\"undefined\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 895,
        "end": 1053,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 898,
            "end": 1051,
            "argument": {
              "type": "NewExpression",
              "start": 904,
              "end": 1050,
              "callee": {
                "type": "Identifier",
                "start": 908,
                "end": 920,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 921,
                  "end": 1047,
                  "left": {
                    "type": "Literal",
                    "start": 921,
                    "end": 1016,
                    "value": "#2: typeof __in__do__after__break === \"undefined\". Actual:  typeof __in__do__after__break ===",
                    "raw": "'#2: typeof __in__do__after__break === \"undefined\". Actual:  typeof __in__do__after__break ==='",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "UnaryExpression",
                    "start": 1018,
                    "end": 1047,
                    "operator": "typeof",
                    "prefix": true,
                    "argument": {
                      "type": "Identifier",
                      "start": 1025,
                      "end": 1047,
                      "name": "__in__do__after__break"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1226,
      "end": 1343,
      "test": {
        "type": "BinaryExpression",
        "start": 1230,
        "end": 1247,
        "left": {
          "type": "Identifier",
          "start": 1230,
          "end": 1241,
          "name": "__evaluated"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1246,
          "end": 1247,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1249,
        "end": 1343,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1252,
            "end": 1341,
            "argument": {
              "type": "NewExpression",
              "start": 1258,
              "end": 1340,
              "callee": {
                "type": "Identifier",
                "start": 1262,
                "end": 1274,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1275,
                  "end": 1337,
                  "left": {
                    "type": "Literal",
                    "start": 1275,
                    "end": 1324,
                    "value": "#3: __evaluated === 1. Actual:  __evaluated ===",
                    "raw": "'#3: __evaluated === 1. Actual:  __evaluated ==='",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 1326,
                    "end": 1337,
                    "name": "__evaluated"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}