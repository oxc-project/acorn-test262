{
  "type": "Program",
  "start": 0,
  "end": 1280,
  "body": [
    {
      "type": "LabeledStatement",
      "start": 347,
      "end": 607,
      "body": {
        "type": "DoWhileStatement",
        "start": 356,
        "end": 607,
        "body": {
          "type": "BlockStatement",
          "start": 359,
          "end": 593,
          "body": [
            {
              "type": "VariableDeclaration",
              "start": 365,
              "end": 400,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 369,
                  "end": 399,
                  "id": {
                    "type": "Identifier",
                    "start": 369,
                    "end": 392,
                    "name": "__in__do__before__break"
                  },
                  "init": {
                    "type": "Literal",
                    "start": 393,
                    "end": 399,
                    "value": "once",
                    "raw": "\"once\"",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "kind": "var"
            },
            {
              "type": "LabeledStatement",
              "start": 405,
              "end": 548,
              "body": {
                "type": "DoWhileStatement",
                "start": 413,
                "end": 548,
                "body": {
                  "type": "BlockStatement",
                  "start": 416,
                  "end": 537,
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "start": 426,
                      "end": 463,
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "start": 430,
                          "end": 462,
                          "id": {
                            "type": "Identifier",
                            "start": 430,
                            "end": 457,
                            "name": "__in__do__IN__before__break"
                          },
                          "init": {
                            "type": "Literal",
                            "start": 458,
                            "end": 462,
                            "value": "in",
                            "raw": "\"in\"",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "BreakStatement",
                      "start": 472,
                      "end": 485,
                      "label": {
                        "type": "Identifier",
                        "start": 478,
                        "end": 484,
                        "name": "do_out"
                      }
                    },
                    {
                      "type": "VariableDeclaration",
                      "start": 494,
                      "end": 531,
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "start": 498,
                          "end": 530,
                          "id": {
                            "type": "Identifier",
                            "start": 498,
                            "end": 524,
                            "name": "__in__do__IN__after__break"
                          },
                          "init": {
                            "type": "Literal",
                            "start": 525,
                            "end": 530,
                            "value": "the",
                            "raw": "\"the\"",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ],
                      "kind": "var"
                    }
                  ]
                },
                "test": {
                  "type": "Literal",
                  "start": 545,
                  "end": 546,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              },
              "label": {
                "type": "Identifier",
                "start": 405,
                "end": 410,
                "name": "do_in"
              }
            },
            {
              "type": "VariableDeclaration",
              "start": 553,
              "end": 591,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 557,
                  "end": 590,
                  "id": {
                    "type": "Identifier",
                    "start": 557,
                    "end": 579,
                    "name": "__in__do__after__break"
                  },
                  "init": {
                    "type": "Literal",
                    "start": 580,
                    "end": 590,
                    "value": "lifetime",
                    "raw": "\"lifetime\"",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "kind": "var"
            }
          ]
        },
        "test": {
          "type": "BinaryExpression",
          "start": 600,
          "end": 605,
          "left": {
            "type": "Literal",
            "start": 600,
            "end": 601,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          },
          "operator": "===",
          "right": {
            "type": "Literal",
            "start": 604,
            "end": 605,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "label": {
        "type": "Identifier",
        "start": 347,
        "end": 353,
        "name": "do_out"
      }
    },
    {
      "type": "IfStatement",
      "start": 698,
      "end": 1197,
      "test": {
        "type": "UnaryExpression",
        "start": 702,
        "end": 811,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "ParenthesizedExpression",
          "start": 703,
          "end": 811,
          "expression": {
            "type": "LogicalExpression",
            "start": 704,
            "end": 810,
            "left": {
              "type": "LogicalExpression",
              "start": 704,
              "end": 785,
              "left": {
                "type": "LogicalExpression",
                "start": 704,
                "end": 756,
                "left": {
                  "type": "Identifier",
                  "start": 704,
                  "end": 727,
                  "name": "__in__do__before__break"
                },
                "operator": "&&",
                "right": {
                  "type": "Identifier",
                  "start": 729,
                  "end": 756,
                  "name": "__in__do__IN__before__break"
                }
              },
              "operator": "&&",
              "right": {
                "type": "UnaryExpression",
                "start": 758,
                "end": 785,
                "operator": "!",
                "prefix": true,
                "argument": {
                  "type": "Identifier",
                  "start": 759,
                  "end": 785,
                  "name": "__in__do__IN__after__break"
                }
              }
            },
            "operator": "&&",
            "right": {
              "type": "UnaryExpression",
              "start": 787,
              "end": 810,
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "start": 788,
                "end": 810,
                "name": "__in__do__after__break"
              }
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 813,
        "end": 1197,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 816,
            "end": 1195,
            "argument": {
              "type": "NewExpression",
              "start": 822,
              "end": 1194,
              "callee": {
                "type": "Identifier",
                "start": 826,
                "end": 838,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 839,
                  "end": 1192,
                  "left": {
                    "type": "Literal",
                    "start": 839,
                    "end": 1082,
                    "value": "#1: (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break)===true. Actual:  (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break)===",
                    "raw": "'#1: (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break)===true. Actual:  (__in__do__before__break&&__in__do__IN__before__break&&!__in__do__IN__after__break&&!__in__do__after__break)==='",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1084,
                    "end": 1192,
                    "expression": {
                      "type": "LogicalExpression",
                      "start": 1085,
                      "end": 1191,
                      "left": {
                        "type": "LogicalExpression",
                        "start": 1085,
                        "end": 1166,
                        "left": {
                          "type": "LogicalExpression",
                          "start": 1085,
                          "end": 1137,
                          "left": {
                            "type": "Identifier",
                            "start": 1085,
                            "end": 1108,
                            "name": "__in__do__before__break"
                          },
                          "operator": "&&",
                          "right": {
                            "type": "Identifier",
                            "start": 1110,
                            "end": 1137,
                            "name": "__in__do__IN__before__break"
                          }
                        },
                        "operator": "&&",
                        "right": {
                          "type": "UnaryExpression",
                          "start": 1139,
                          "end": 1166,
                          "operator": "!",
                          "prefix": true,
                          "argument": {
                            "type": "Identifier",
                            "start": 1140,
                            "end": 1166,
                            "name": "__in__do__IN__after__break"
                          }
                        }
                      },
                      "operator": "&&",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 1168,
                        "end": 1191,
                        "operator": "!",
                        "prefix": true,
                        "argument": {
                          "type": "Identifier",
                          "start": 1169,
                          "end": 1191,
                          "name": "__in__do__after__break"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}