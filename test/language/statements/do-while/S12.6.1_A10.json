{
  "type": "Program",
  "start": 0,
  "end": 886,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 363,
      "end": 377,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 367,
          "end": 376,
          "id": {
            "type": "Identifier",
            "start": 367,
            "end": 372,
            "name": "check"
          },
          "init": {
            "type": "Literal",
            "start": 375,
            "end": 376,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "DoWhileStatement",
      "start": 378,
      "end": 529,
      "body": {
        "type": "BlockStatement",
        "start": 381,
        "end": 506,
        "body": [
          {
            "type": "IfStatement",
            "start": 389,
            "end": 504,
            "test": {
              "type": "BinaryExpression",
              "start": 392,
              "end": 416,
              "left": {
                "type": "UnaryExpression",
                "start": 392,
                "end": 401,
                "operator": "typeof",
                "prefix": true,
                "argument": {
                  "type": "ParenthesizedExpression",
                  "start": 398,
                  "end": 401,
                  "expression": {
                    "type": "Identifier",
                    "start": 399,
                    "end": 400,
                    "name": "f"
                  }
                }
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "start": 406,
                "end": 416,
                "value": "function",
                "raw": "\"function\"",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 417,
              "end": 458,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 423,
                  "end": 434,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 423,
                    "end": 433,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 423,
                      "end": 428,
                      "name": "check"
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "start": 431,
                      "end": 433,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 432,
                        "end": 433,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                },
                {
                  "type": "BreakStatement",
                  "start": 447,
                  "end": 453,
                  "label": null
                }
              ]
            },
            "alternate": {
              "type": "BlockStatement",
              "start": 464,
              "end": 504,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 470,
                  "end": 480,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 470,
                    "end": 479,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 470,
                      "end": 475,
                      "name": "check"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 478,
                      "end": 479,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                },
                {
                  "type": "BreakStatement",
                  "start": 493,
                  "end": 499,
                  "label": null
                }
              ]
            }
          }
        ]
      },
      "test": {
        "type": "FunctionExpression",
        "start": 513,
        "end": 527,
        "id": {
          "type": "Identifier",
          "start": 522,
          "end": 523,
          "name": "f"
        },
        "expression": false,
        "generator": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "start": 525,
          "end": 527,
          "body": []
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 620,
      "end": 803,
      "test": {
        "type": "BinaryExpression",
        "start": 624,
        "end": 635,
        "left": {
          "type": "Identifier",
          "start": 624,
          "end": 629,
          "name": "check"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 634,
          "end": 635,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 637,
        "end": 803,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 640,
            "end": 801,
            "argument": {
              "type": "NewExpression",
              "start": 646,
              "end": 800,
              "callee": {
                "type": "Identifier",
                "start": 650,
                "end": 662,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 663,
                  "end": 799,
                  "value": "#1: FunctionExpression within a \"do-while\" statement is allowed, but no function with the given name will appear in the global context",
                  "raw": "'#1: FunctionExpression within a \"do-while\" statement is allowed, but no function with the given name will appear in the global context'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}