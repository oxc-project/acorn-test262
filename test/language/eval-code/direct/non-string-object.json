{
  "type": "Program",
  "start": 0,
  "end": 805,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 256,
      "end": 267,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 260,
          "end": 266,
          "id": {
            "type": "Identifier",
            "start": 260,
            "end": 261,
            "name": "x"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 264,
            "end": 266,
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 268,
      "end": 367,
      "test": {
        "type": "BinaryExpression",
        "start": 272,
        "end": 285,
        "left": {
          "type": "CallExpression",
          "start": 272,
          "end": 279,
          "callee": {
            "type": "Identifier",
            "start": 272,
            "end": 276,
            "name": "eval"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 277,
              "end": 278,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 284,
          "end": 285,
          "name": "x"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 287,
        "end": 367,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 291,
            "end": 365,
            "argument": {
              "type": "NewExpression",
              "start": 297,
              "end": 364,
              "callee": {
                "type": "Identifier",
                "start": 301,
                "end": 313,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 314,
                  "end": 363,
                  "left": {
                    "type": "Literal",
                    "start": 314,
                    "end": 351,
                    "value": "#1: x = {}; eval(x) === x. Actual: ",
                    "raw": "'#1: x = {}; eval(x) === x. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 354,
                    "end": 363,
                    "expression": {
                      "type": "CallExpression",
                      "start": 355,
                      "end": 362,
                      "callee": {
                        "type": "Identifier",
                        "start": 355,
                        "end": 359,
                        "name": "eval"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 360,
                          "end": 361,
                          "name": "x"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 379,
      "end": 397,
      "expression": {
        "type": "AssignmentExpression",
        "start": 379,
        "end": 396,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 379,
          "end": 380,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 383,
          "end": 396,
          "callee": {
            "type": "Identifier",
            "start": 387,
            "end": 393,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 394,
              "end": 395,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 398,
      "end": 508,
      "test": {
        "type": "BinaryExpression",
        "start": 402,
        "end": 415,
        "left": {
          "type": "CallExpression",
          "start": 402,
          "end": 409,
          "callee": {
            "type": "Identifier",
            "start": 402,
            "end": 406,
            "name": "eval"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 407,
              "end": 408,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 414,
          "end": 415,
          "name": "x"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 417,
        "end": 508,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 421,
            "end": 506,
            "argument": {
              "type": "NewExpression",
              "start": 427,
              "end": 505,
              "callee": {
                "type": "Identifier",
                "start": 431,
                "end": 443,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 444,
                  "end": 504,
                  "left": {
                    "type": "Literal",
                    "start": 444,
                    "end": 492,
                    "value": "#2: x = new Number(1); eval(x) === x. Actual: ",
                    "raw": "'#2: x = new Number(1); eval(x) === x. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 495,
                    "end": 504,
                    "expression": {
                      "type": "CallExpression",
                      "start": 496,
                      "end": 503,
                      "callee": {
                        "type": "Identifier",
                        "start": 496,
                        "end": 500,
                        "name": "eval"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 501,
                          "end": 502,
                          "name": "x"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 520,
      "end": 542,
      "expression": {
        "type": "AssignmentExpression",
        "start": 520,
        "end": 541,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 520,
          "end": 521,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 524,
          "end": 541,
          "callee": {
            "type": "Identifier",
            "start": 528,
            "end": 535,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 536,
              "end": 540,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 543,
      "end": 657,
      "test": {
        "type": "BinaryExpression",
        "start": 547,
        "end": 560,
        "left": {
          "type": "CallExpression",
          "start": 547,
          "end": 554,
          "callee": {
            "type": "Identifier",
            "start": 547,
            "end": 551,
            "name": "eval"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 552,
              "end": 553,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 559,
          "end": 560,
          "name": "x"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 562,
        "end": 657,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 566,
            "end": 655,
            "argument": {
              "type": "NewExpression",
              "start": 572,
              "end": 654,
              "callee": {
                "type": "Identifier",
                "start": 576,
                "end": 588,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 589,
                  "end": 653,
                  "left": {
                    "type": "Literal",
                    "start": 589,
                    "end": 641,
                    "value": "#3: x = new Boolean(true); eval(x) === x. Actual: ",
                    "raw": "'#3: x = new Boolean(true); eval(x) === x. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 644,
                    "end": 653,
                    "expression": {
                      "type": "CallExpression",
                      "start": 645,
                      "end": 652,
                      "callee": {
                        "type": "Identifier",
                        "start": 645,
                        "end": 649,
                        "name": "eval"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 650,
                          "end": 651,
                          "name": "x"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 669,
      "end": 691,
      "expression": {
        "type": "AssignmentExpression",
        "start": 669,
        "end": 690,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 669,
          "end": 670,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 673,
          "end": 690,
          "callee": {
            "type": "Identifier",
            "start": 677,
            "end": 683,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 684,
              "end": 689,
              "value": "1+1",
              "raw": "\"1+1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 692,
      "end": 804,
      "test": {
        "type": "BinaryExpression",
        "start": 696,
        "end": 709,
        "left": {
          "type": "CallExpression",
          "start": 696,
          "end": 703,
          "callee": {
            "type": "Identifier",
            "start": 696,
            "end": 700,
            "name": "eval"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 701,
              "end": 702,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 708,
          "end": 709,
          "name": "x"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 711,
        "end": 804,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 715,
            "end": 802,
            "argument": {
              "type": "NewExpression",
              "start": 721,
              "end": 801,
              "callee": {
                "type": "Identifier",
                "start": 725,
                "end": 737,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 738,
                  "end": 800,
                  "left": {
                    "type": "Literal",
                    "start": 738,
                    "end": 788,
                    "value": "#4: x = new String(\"1\"); eval(x) === x. Actual: ",
                    "raw": "'#4: x = new String(\"1\"); eval(x) === x. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 791,
                    "end": 800,
                    "expression": {
                      "type": "CallExpression",
                      "start": 792,
                      "end": 799,
                      "callee": {
                        "type": "Identifier",
                        "start": 792,
                        "end": 796,
                        "name": "eval"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 797,
                          "end": 798,
                          "name": "x"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}