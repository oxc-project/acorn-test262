{
  "type": "Program",
  "start": 0,
  "end": 790,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 603,
      "end": 614,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 607,
          "end": 613,
          "id": {
            "type": "Identifier",
            "start": 607,
            "end": 613,
            "name": "caught"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 615,
      "end": 646,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 619,
          "end": 645,
          "id": {
            "type": "Identifier",
            "start": 619,
            "end": 620,
            "name": "f"
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "start": 623,
            "end": 645,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 629,
              "end": 645,
              "callee": {
                "type": "Identifier",
                "start": 629,
                "end": 633,
                "name": "eval"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 634,
                  "end": 644,
                  "value": "super();",
                  "raw": "'super();'",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 648,
      "end": 694,
      "block": {
        "type": "BlockStatement",
        "start": 652,
        "end": 662,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 656,
            "end": 660,
            "expression": {
              "type": "CallExpression",
              "start": 656,
              "end": 659,
              "callee": {
                "type": "Identifier",
                "start": 656,
                "end": 657,
                "name": "f"
              },
              "arguments": [],
              "optional": false
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 663,
        "end": 694,
        "param": {
          "type": "Identifier",
          "start": 670,
          "end": 673,
          "name": "err"
        },
        "body": {
          "type": "BlockStatement",
          "start": 675,
          "end": 694,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 679,
              "end": 692,
              "expression": {
                "type": "AssignmentExpression",
                "start": 679,
                "end": 691,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 679,
                  "end": 685,
                  "name": "caught"
                },
                "right": {
                  "type": "Identifier",
                  "start": 688,
                  "end": 691,
                  "name": "err"
                }
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 696,
      "end": 738,
      "expression": {
        "type": "CallExpression",
        "start": 696,
        "end": 737,
        "callee": {
          "type": "MemberExpression",
          "start": 696,
          "end": 712,
          "object": {
            "type": "Identifier",
            "start": 696,
            "end": 702,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 703,
            "end": 712,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 713,
            "end": 726,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "Identifier",
              "start": 720,
              "end": 726,
              "name": "caught"
            }
          },
          {
            "type": "Literal",
            "start": 728,
            "end": 736,
            "value": "object",
            "raw": "'object'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 739,
      "end": 789,
      "expression": {
        "type": "CallExpression",
        "start": 739,
        "end": 788,
        "callee": {
          "type": "MemberExpression",
          "start": 739,
          "end": 755,
          "object": {
            "type": "Identifier",
            "start": 739,
            "end": 745,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 746,
            "end": 755,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 756,
            "end": 774,
            "object": {
              "type": "Identifier",
              "start": 756,
              "end": 762,
              "name": "caught"
            },
            "property": {
              "type": "Identifier",
              "start": 763,
              "end": 774,
              "name": "constructor"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 776,
            "end": 787,
            "name": "SyntaxError"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}