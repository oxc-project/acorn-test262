{
  "type": "Program",
  "start": 0,
  "end": 579,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 351,
      "end": 369,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 355,
          "end": 368,
          "id": {
            "type": "Identifier",
            "start": 355,
            "end": 361,
            "name": "global"
          },
          "init": {
            "type": "ThisExpression",
            "start": 364,
            "end": 368
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "start": 371,
      "end": 521,
      "id": {
        "type": "Identifier",
        "start": 380,
        "end": 382,
        "name": "f1"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 385,
        "end": 521,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 391,
            "end": 468,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 395,
                "end": 468,
                "id": {
                  "type": "Identifier",
                  "start": 395,
                  "end": 396,
                  "name": "f"
                },
                "init": {
                  "type": "FunctionExpression",
                  "start": 399,
                  "end": 468,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 411,
                    "end": 468,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 421,
                        "end": 434,
                        "expression": {
                          "type": "Literal",
                          "start": 421,
                          "end": 433,
                          "value": "use strict",
                          "raw": "\"use strict\""
                        },
                        "directive": "use strict"
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 443,
                        "end": 462,
                        "argument": {
                          "type": "UnaryExpression",
                          "start": 450,
                          "end": 461,
                          "operator": "typeof",
                          "prefix": true,
                          "argument": {
                            "type": "ThisExpression",
                            "start": 457,
                            "end": 461
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ReturnStatement",
            "start": 473,
            "end": 519,
            "argument": {
              "type": "LogicalExpression",
              "start": 480,
              "end": 518,
              "left": {
                "type": "ParenthesizedExpression",
                "start": 480,
                "end": 499,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 481,
                  "end": 498,
                  "left": {
                    "type": "CallExpression",
                    "start": 481,
                    "end": 484,
                    "callee": {
                      "type": "Identifier",
                      "start": 481,
                      "end": 482,
                      "name": "f"
                    },
                    "arguments": [],
                    "optional": false
                  },
                  "operator": "===",
                  "right": {
                    "type": "Literal",
                    "start": 487,
                    "end": 498,
                    "value": "undefined",
                    "raw": "\"undefined\""
                  }
                }
              },
              "operator": "&&",
              "right": {
                "type": "ParenthesizedExpression",
                "start": 503,
                "end": 518,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 504,
                  "end": 517,
                  "left": {
                    "type": "ThisExpression",
                    "start": 504,
                    "end": 508
                  },
                  "operator": "===",
                  "right": {
                    "type": "Identifier",
                    "start": 511,
                    "end": 517,
                    "name": "global"
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 522,
      "end": 578,
      "test": {
        "type": "UnaryExpression",
        "start": 526,
        "end": 532,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "CallExpression",
          "start": 528,
          "end": 532,
          "callee": {
            "type": "Identifier",
            "start": 528,
            "end": 530,
            "name": "f1"
          },
          "arguments": [],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 534,
        "end": 578,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 540,
            "end": 576,
            "argument": {
              "type": "Literal",
              "start": 546,
              "end": 575,
              "value": "'this' had incorrect value!",
              "raw": "\"'this' had incorrect value!\""
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}