{
  "type": "Program",
  "start": 0,
  "end": 569,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 351,
      "end": 511,
      "id": {
        "type": "Identifier",
        "start": 360,
        "end": 362,
        "name": "f1"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 365,
        "end": 511,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 371,
            "end": 384,
            "expression": {
              "type": "Literal",
              "start": 371,
              "end": 383,
              "value": "use strict",
              "raw": "\"use strict\"",
              "regex": null,
              "bigint": null
            },
            "directive": "use strict"
          },
          {
            "type": "VariableDeclaration",
            "start": 389,
            "end": 444,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 393,
                "end": 444,
                "id": {
                  "type": "Identifier",
                  "start": 393,
                  "end": 394,
                  "name": "f"
                },
                "init": {
                  "type": "FunctionExpression",
                  "start": 397,
                  "end": 444,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 409,
                    "end": 444,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 419,
                        "end": 438,
                        "argument": {
                          "type": "UnaryExpression",
                          "start": 426,
                          "end": 437,
                          "operator": "typeof",
                          "prefix": true,
                          "argument": {
                            "type": "ThisExpression",
                            "start": 433,
                            "end": 437
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ReturnStatement",
            "start": 449,
            "end": 509,
            "argument": {
              "type": "LogicalExpression",
              "start": 456,
              "end": 508,
              "left": {
                "type": "ParenthesizedExpression",
                "start": 456,
                "end": 475,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 457,
                  "end": 474,
                  "left": {
                    "type": "CallExpression",
                    "start": 457,
                    "end": 460,
                    "callee": {
                      "type": "Identifier",
                      "start": 457,
                      "end": 458,
                      "name": "f"
                    },
                    "arguments": [],
                    "optional": false
                  },
                  "operator": "===",
                  "right": {
                    "type": "Literal",
                    "start": 463,
                    "end": 474,
                    "value": "undefined",
                    "raw": "\"undefined\"",
                    "regex": null,
                    "bigint": null
                  }
                }
              },
              "operator": "&&",
              "right": {
                "type": "ParenthesizedExpression",
                "start": 479,
                "end": 508,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 480,
                  "end": 507,
                  "left": {
                    "type": "ParenthesizedExpression",
                    "start": 480,
                    "end": 493,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 481,
                      "end": 492,
                      "operator": "typeof",
                      "prefix": true,
                      "argument": {
                        "type": "ThisExpression",
                        "start": 488,
                        "end": 492
                      }
                    }
                  },
                  "operator": "===",
                  "right": {
                    "type": "Literal",
                    "start": 496,
                    "end": 507,
                    "value": "undefined",
                    "raw": "\"undefined\"",
                    "regex": null,
                    "bigint": null
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 512,
      "end": 568,
      "test": {
        "type": "UnaryExpression",
        "start": 516,
        "end": 522,
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "CallExpression",
          "start": 518,
          "end": 522,
          "callee": {
            "type": "Identifier",
            "start": 518,
            "end": 520,
            "name": "f1"
          },
          "arguments": [],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 524,
        "end": 568,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 530,
            "end": 566,
            "argument": {
              "type": "Literal",
              "start": 536,
              "end": 565,
              "value": "'this' had incorrect value!",
              "raw": "\"'this' had incorrect value!\"",
              "regex": null,
              "bigint": null
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}