{
  "type": "Program",
  "start": 0,
  "end": 404,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 243,
      "end": 254,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 247,
          "end": 253,
          "id": {
            "type": "Identifier",
            "start": 247,
            "end": 248,
            "name": "o"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 251,
            "end": 253,
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 255,
      "end": 265,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 259,
          "end": 264,
          "id": {
            "type": "Identifier",
            "start": 259,
            "end": 260,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 263,
            "end": 264,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 266,
      "end": 336,
      "expression": {
        "type": "CallExpression",
        "start": 266,
        "end": 335,
        "callee": {
          "type": "MemberExpression",
          "start": 266,
          "end": 287,
          "object": {
            "type": "Identifier",
            "start": 266,
            "end": 272,
            "name": "Object"
          },
          "property": {
            "type": "Identifier",
            "start": 273,
            "end": 287,
            "name": "defineProperty"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 288,
            "end": 289,
            "name": "o"
          },
          {
            "type": "Literal",
            "start": 291,
            "end": 296,
            "value": "foo",
            "raw": "\"foo\"",
            "regex": null,
            "bigint": null
          },
          {
            "type": "ObjectExpression",
            "start": 298,
            "end": 334,
            "properties": [
              {
                "type": "Property",
                "start": 300,
                "end": 332,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 300,
                  "end": 303,
                  "name": "set"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 305,
                  "end": 332,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "start": 314,
                      "end": 319,
                      "name": "stuff"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "start": 321,
                    "end": 332,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 323,
                        "end": 330,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 323,
                          "end": 329,
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "start": 323,
                            "end": 324,
                            "name": "x"
                          },
                          "right": {
                            "type": "ThisExpression",
                            "start": 325,
                            "end": 329
                          }
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              }
            ]
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 337,
      "end": 347,
      "expression": {
        "type": "AssignmentExpression",
        "start": 337,
        "end": 346,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 337,
          "end": 342,
          "object": {
            "type": "Identifier",
            "start": 337,
            "end": 338,
            "name": "o"
          },
          "property": {
            "type": "Identifier",
            "start": 339,
            "end": 342,
            "name": "foo"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 345,
          "end": 346,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 348,
      "end": 403,
      "test": {
        "type": "BinaryExpression",
        "start": 352,
        "end": 357,
        "left": {
          "type": "Identifier",
          "start": 352,
          "end": 353,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 356,
          "end": 357,
          "name": "o"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 359,
        "end": 403,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 365,
            "end": 401,
            "argument": {
              "type": "Literal",
              "start": 371,
              "end": 400,
              "value": "'this' had incorrect value!",
              "raw": "\"'this' had incorrect value!\"",
              "regex": null,
              "bigint": null
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}