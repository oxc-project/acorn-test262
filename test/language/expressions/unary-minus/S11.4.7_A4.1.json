{
  "type": "Program",
  "start": 0,
  "end": 483,
  "body": [
    {
      "type": "IfStatement",
      "start": 244,
      "end": 347,
      "test": {
        "type": "BinaryExpression",
        "start": 248,
        "end": 268,
        "left": {
          "type": "CallExpression",
          "start": 248,
          "end": 259,
          "callee": {
            "type": "Identifier",
            "start": 248,
            "end": 253,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "start": 254,
              "end": 258,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "start": 255,
                "end": 258,
                "name": "NaN"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 264,
          "end": 268,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 270,
        "end": 347,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 274,
            "end": 345,
            "argument": {
              "type": "NewExpression",
              "start": 280,
              "end": 344,
              "callee": {
                "type": "Identifier",
                "start": 284,
                "end": 296,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 297,
                  "end": 343,
                  "left": {
                    "type": "Literal",
                    "start": 297,
                    "end": 334,
                    "value": "#1: -NaN === Not-a-Number. Actual: ",
                    "raw": "'#1: -NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 337,
                    "end": 343,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 338,
                      "end": 342,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 339,
                        "end": 342,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 359,
      "end": 371,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 363,
          "end": 370,
          "id": {
            "type": "Identifier",
            "start": 363,
            "end": 364,
            "name": "x"
          },
          "init": {
            "type": "Identifier",
            "start": 367,
            "end": 370,
            "name": "NaN"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 373,
      "end": 482,
      "test": {
        "type": "BinaryExpression",
        "start": 377,
        "end": 394,
        "left": {
          "type": "CallExpression",
          "start": 377,
          "end": 386,
          "callee": {
            "type": "Identifier",
            "start": 377,
            "end": 382,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "start": 383,
              "end": 385,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "start": 384,
                "end": 385,
                "name": "x"
              }
            }
          ],
          "optional": false
        },
        "operator": "!=",
        "right": {
          "type": "Literal",
          "start": 390,
          "end": 394,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 396,
        "end": 482,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 400,
            "end": 480,
            "argument": {
              "type": "NewExpression",
              "start": 406,
              "end": 479,
              "callee": {
                "type": "Identifier",
                "start": 410,
                "end": 422,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 423,
                  "end": 478,
                  "left": {
                    "type": "Literal",
                    "start": 423,
                    "end": 471,
                    "value": "#2: var x = NaN; -x === Not-a-Number. Actual: ",
                    "raw": "'#2: var x = NaN; -x === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 474,
                    "end": 478,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 475,
                      "end": 477,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 476,
                        "end": 477,
                        "name": "x"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}