{
  "type": "Program",
  "start": 0,
  "end": 504,
  "body": [
    {
      "type": "TryStatement",
      "start": 267,
      "end": 503,
      "block": {
        "type": "BlockStatement",
        "start": 271,
        "end": 358,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 275,
            "end": 278,
            "expression": {
              "type": "UnaryExpression",
              "start": 275,
              "end": 277,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "start": 276,
                "end": 277,
                "name": "x"
              }
            }
          },
          {
            "type": "ThrowStatement",
            "start": 281,
            "end": 354,
            "argument": {
              "type": "NewExpression",
              "start": 287,
              "end": 353,
              "callee": {
                "type": "Identifier",
                "start": 291,
                "end": 303,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 304,
                  "end": 352,
                  "left": {
                    "type": "Literal",
                    "start": 304,
                    "end": 345,
                    "value": "#1.1: -x throw ReferenceError. Actual: ",
                    "raw": "'#1.1: -x throw ReferenceError. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 348,
                    "end": 352,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 349,
                      "end": 351,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 350,
                        "end": 351,
                        "name": "x"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 359,
        "end": 503,
        "param": {
          "type": "Identifier",
          "start": 366,
          "end": 367,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 369,
          "end": 503,
          "body": [
            {
              "type": "IfStatement",
              "start": 373,
              "end": 501,
              "test": {
                "type": "BinaryExpression",
                "start": 377,
                "end": 415,
                "left": {
                  "type": "ParenthesizedExpression",
                  "start": 377,
                  "end": 406,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 378,
                    "end": 405,
                    "left": {
                      "type": "Identifier",
                      "start": 378,
                      "end": 379,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 391,
                      "end": 405,
                      "name": "ReferenceError"
                    }
                  }
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 411,
                  "end": 415,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 417,
                "end": 501,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 423,
                    "end": 495,
                    "argument": {
                      "type": "NewExpression",
                      "start": 429,
                      "end": 494,
                      "callee": {
                        "type": "Identifier",
                        "start": 433,
                        "end": 445,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 446,
                          "end": 493,
                          "left": {
                            "type": "Literal",
                            "start": 446,
                            "end": 487,
                            "value": "#1.2: -x throw ReferenceError. Actual: ",
                            "raw": "'#1.2: -x throw ReferenceError. Actual: '",
                            "regex": null,
                            "bigint": null
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "start": 490,
                            "end": 493,
                            "expression": {
                              "type": "Identifier",
                              "start": 491,
                              "end": 492,
                              "name": "e"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}