{
  "type": "Program",
  "start": 0,
  "end": 541,
  "body": [
    {
      "type": "IfStatement",
      "start": 272,
      "end": 372,
      "test": {
        "type": "BinaryExpression",
        "start": 276,
        "end": 295,
        "left": {
          "type": "CallExpression",
          "start": 276,
          "end": 286,
          "callee": {
            "type": "Identifier",
            "start": 276,
            "end": 281,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "start": 282,
              "end": 285,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "ObjectExpression",
                "start": 283,
                "end": 285,
                "properties": []
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 291,
          "end": 295,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 297,
        "end": 372,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 301,
            "end": 370,
            "argument": {
              "type": "NewExpression",
              "start": 307,
              "end": 369,
              "callee": {
                "type": "Identifier",
                "start": 311,
                "end": 323,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 324,
                  "end": 368,
                  "left": {
                    "type": "Literal",
                    "start": 324,
                    "end": 360,
                    "value": "#1: -{} === Not-a-Number. Actual: ",
                    "raw": "'#1: -{} === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 363,
                    "end": 368,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 364,
                      "end": 367,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "ObjectExpression",
                        "start": 365,
                        "end": 367,
                        "properties": []
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 386,
      "end": 540,
      "test": {
        "type": "BinaryExpression",
        "start": 390,
        "end": 427,
        "left": {
          "type": "CallExpression",
          "start": 390,
          "end": 418,
          "callee": {
            "type": "Identifier",
            "start": 390,
            "end": 395,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "start": 396,
              "end": 417,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "FunctionExpression",
                "start": 397,
                "end": 417,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 407,
                  "end": 417,
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 408,
                      "end": 416,
                      "argument": {
                        "type": "Literal",
                        "start": 415,
                        "end": 416,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  ]
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 423,
          "end": 427,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 429,
        "end": 540,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 433,
            "end": 538,
            "argument": {
              "type": "NewExpression",
              "start": 439,
              "end": 537,
              "callee": {
                "type": "Identifier",
                "start": 443,
                "end": 455,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 456,
                  "end": 536,
                  "left": {
                    "type": "Literal",
                    "start": 456,
                    "end": 510,
                    "value": "#2: -function(){return 1} === Not-a-Number. Actual: ",
                    "raw": "'#2: -function(){return 1} === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 513,
                    "end": 536,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 514,
                      "end": 535,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "FunctionExpression",
                        "start": 515,
                        "end": 535,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 525,
                          "end": 535,
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "start": 526,
                              "end": 534,
                              "argument": {
                                "type": "Literal",
                                "start": 533,
                                "end": 534,
                                "value": 1,
                                "raw": "1",
                                "regex": null,
                                "bigint": null
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}