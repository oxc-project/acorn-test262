{
  "type": "Program",
  "start": 0,
  "end": 858,
  "body": [
    {
      "type": "IfStatement",
      "start": 433,
      "end": 506,
      "test": {
        "type": "BinaryExpression",
        "start": 437,
        "end": 452,
        "left": {
          "type": "BinaryExpression",
          "start": 437,
          "end": 443,
          "left": {
            "type": "Literal",
            "start": 437,
            "end": 438,
            "value": 1,
            "raw": "1"
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "start": 442,
            "end": 443,
            "value": 1,
            "raw": "1"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 448,
          "end": 452,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 454,
        "end": 506,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 458,
            "end": 504,
            "argument": {
              "type": "NewExpression",
              "start": 464,
              "end": 503,
              "callee": {
                "type": "Identifier",
                "start": 468,
                "end": 480,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 481,
                  "end": 502,
                  "value": "#1: 1 <= 1 === true",
                  "raw": "'#1: 1 <= 1 === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 518,
      "end": 615,
      "test": {
        "type": "BinaryExpression",
        "start": 522,
        "end": 549,
        "left": {
          "type": "BinaryExpression",
          "start": 522,
          "end": 540,
          "left": {
            "type": "NewExpression",
            "start": 522,
            "end": 535,
            "callee": {
              "type": "Identifier",
              "start": 526,
              "end": 532,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 533,
                "end": 534,
                "value": 1,
                "raw": "1"
              }
            ]
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "start": 539,
            "end": 540,
            "value": 1,
            "raw": "1"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 545,
          "end": 549,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 551,
        "end": 615,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 555,
            "end": 613,
            "argument": {
              "type": "NewExpression",
              "start": 561,
              "end": 612,
              "callee": {
                "type": "Identifier",
                "start": 565,
                "end": 577,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 578,
                  "end": 611,
                  "value": "#2: new Number(1) <= 1 === true",
                  "raw": "'#2: new Number(1) <= 1 === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 627,
      "end": 724,
      "test": {
        "type": "BinaryExpression",
        "start": 631,
        "end": 658,
        "left": {
          "type": "BinaryExpression",
          "start": 631,
          "end": 649,
          "left": {
            "type": "Literal",
            "start": 631,
            "end": 632,
            "value": 1,
            "raw": "1"
          },
          "operator": "<=",
          "right": {
            "type": "NewExpression",
            "start": 636,
            "end": 649,
            "callee": {
              "type": "Identifier",
              "start": 640,
              "end": 646,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 647,
                "end": 648,
                "value": 1,
                "raw": "1"
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 654,
          "end": 658,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 660,
        "end": 724,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 664,
            "end": 722,
            "argument": {
              "type": "NewExpression",
              "start": 670,
              "end": 721,
              "callee": {
                "type": "Identifier",
                "start": 674,
                "end": 686,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 687,
                  "end": 720,
                  "value": "#3: 1 <= new Number(1) === true",
                  "raw": "'#3: 1 <= new Number(1) === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 736,
      "end": 857,
      "test": {
        "type": "BinaryExpression",
        "start": 740,
        "end": 779,
        "left": {
          "type": "BinaryExpression",
          "start": 740,
          "end": 770,
          "left": {
            "type": "NewExpression",
            "start": 740,
            "end": 753,
            "callee": {
              "type": "Identifier",
              "start": 744,
              "end": 750,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 751,
                "end": 752,
                "value": 1,
                "raw": "1"
              }
            ]
          },
          "operator": "<=",
          "right": {
            "type": "NewExpression",
            "start": 757,
            "end": 770,
            "callee": {
              "type": "Identifier",
              "start": 761,
              "end": 767,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 768,
                "end": 769,
                "value": 1,
                "raw": "1"
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 775,
          "end": 779,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 781,
        "end": 857,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 785,
            "end": 855,
            "argument": {
              "type": "NewExpression",
              "start": 791,
              "end": 854,
              "callee": {
                "type": "Identifier",
                "start": 795,
                "end": 807,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 808,
                  "end": 853,
                  "value": "#4: new Number(1) <= new Number(1) === true",
                  "raw": "'#4: new Number(1) <= new Number(1) === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}