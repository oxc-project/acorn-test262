{
  "type": "Program",
  "start": 0,
  "end": 916,
  "body": [
    {
      "type": "IfStatement",
      "start": 435,
      "end": 520,
      "test": {
        "type": "BinaryExpression",
        "start": 439,
        "end": 460,
        "left": {
          "type": "BinaryExpression",
          "start": 439,
          "end": 451,
          "left": {
            "type": "Literal",
            "start": 439,
            "end": 443,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "start": 447,
            "end": 451,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 456,
          "end": 460,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 462,
        "end": 520,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 466,
            "end": 518,
            "argument": {
              "type": "NewExpression",
              "start": 472,
              "end": 517,
              "callee": {
                "type": "Identifier",
                "start": 476,
                "end": 488,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 489,
                  "end": 516,
                  "value": "#1: true <= true === true",
                  "raw": "'#1: true <= true === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 532,
      "end": 643,
      "test": {
        "type": "BinaryExpression",
        "start": 536,
        "end": 570,
        "left": {
          "type": "BinaryExpression",
          "start": 536,
          "end": 561,
          "left": {
            "type": "NewExpression",
            "start": 536,
            "end": 553,
            "callee": {
              "type": "Identifier",
              "start": 540,
              "end": 547,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 548,
                "end": 552,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "start": 557,
            "end": 561,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 566,
          "end": 570,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 572,
        "end": 643,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 576,
            "end": 641,
            "argument": {
              "type": "NewExpression",
              "start": 582,
              "end": 640,
              "callee": {
                "type": "Identifier",
                "start": 586,
                "end": 598,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 599,
                  "end": 639,
                  "value": "#2: new Boolean(true) <= true === true",
                  "raw": "'#2: new Boolean(true) <= true === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 655,
      "end": 766,
      "test": {
        "type": "BinaryExpression",
        "start": 659,
        "end": 693,
        "left": {
          "type": "BinaryExpression",
          "start": 659,
          "end": 684,
          "left": {
            "type": "Literal",
            "start": 659,
            "end": 663,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          "operator": "<=",
          "right": {
            "type": "NewExpression",
            "start": 667,
            "end": 684,
            "callee": {
              "type": "Identifier",
              "start": 671,
              "end": 678,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 679,
                "end": 683,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 689,
          "end": 693,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 695,
        "end": 766,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 699,
            "end": 764,
            "argument": {
              "type": "NewExpression",
              "start": 705,
              "end": 763,
              "callee": {
                "type": "Identifier",
                "start": 709,
                "end": 721,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 722,
                  "end": 762,
                  "value": "#3: true <= new Boolean(true) === true",
                  "raw": "'#3: true <= new Boolean(true) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 778,
      "end": 915,
      "test": {
        "type": "BinaryExpression",
        "start": 782,
        "end": 829,
        "left": {
          "type": "BinaryExpression",
          "start": 782,
          "end": 820,
          "left": {
            "type": "NewExpression",
            "start": 782,
            "end": 799,
            "callee": {
              "type": "Identifier",
              "start": 786,
              "end": 793,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 794,
                "end": 798,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "<=",
          "right": {
            "type": "NewExpression",
            "start": 803,
            "end": 820,
            "callee": {
              "type": "Identifier",
              "start": 807,
              "end": 814,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 815,
                "end": 819,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 825,
          "end": 829,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 831,
        "end": 915,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 835,
            "end": 913,
            "argument": {
              "type": "NewExpression",
              "start": 841,
              "end": 912,
              "callee": {
                "type": "Identifier",
                "start": 845,
                "end": 857,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 858,
                  "end": 911,
                  "value": "#4: new Boolean(true) <= new Boolean(true) === true",
                  "raw": "'#4: new Boolean(true) <= new Boolean(true) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}