{
  "type": "Program",
  "start": 0,
  "end": 948,
  "body": [
    {
      "type": "IfStatement",
      "start": 471,
      "end": 568,
      "test": {
        "type": "BinaryExpression",
        "start": 475,
        "end": 502,
        "left": {
          "type": "BinaryExpression",
          "start": 475,
          "end": 492,
          "left": {
            "type": "Literal",
            "start": 475,
            "end": 479,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          "operator": "<=",
          "right": {
            "type": "Identifier",
            "start": 483,
            "end": 492,
            "name": "undefined"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 497,
          "end": 502,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 504,
        "end": 568,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 508,
            "end": 566,
            "argument": {
              "type": "NewExpression",
              "start": 514,
              "end": 565,
              "callee": {
                "type": "Identifier",
                "start": 518,
                "end": 530,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 531,
                  "end": 564,
                  "value": "#1: true <= undefined === false",
                  "raw": "'#1: true <= undefined === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 580,
      "end": 677,
      "test": {
        "type": "BinaryExpression",
        "start": 584,
        "end": 611,
        "left": {
          "type": "BinaryExpression",
          "start": 584,
          "end": 601,
          "left": {
            "type": "Identifier",
            "start": 584,
            "end": 593,
            "name": "undefined"
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "start": 597,
            "end": 601,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 606,
          "end": 611,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 613,
        "end": 677,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 617,
            "end": 675,
            "argument": {
              "type": "NewExpression",
              "start": 623,
              "end": 674,
              "callee": {
                "type": "Identifier",
                "start": 627,
                "end": 639,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 640,
                  "end": 673,
                  "value": "#2: undefined <= true === false",
                  "raw": "'#2: undefined <= true === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 689,
      "end": 812,
      "test": {
        "type": "BinaryExpression",
        "start": 693,
        "end": 733,
        "left": {
          "type": "BinaryExpression",
          "start": 693,
          "end": 723,
          "left": {
            "type": "NewExpression",
            "start": 693,
            "end": 710,
            "callee": {
              "type": "Identifier",
              "start": 697,
              "end": 704,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 705,
                "end": 709,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "<=",
          "right": {
            "type": "Identifier",
            "start": 714,
            "end": 723,
            "name": "undefined"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 728,
          "end": 733,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 735,
        "end": 812,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 739,
            "end": 810,
            "argument": {
              "type": "NewExpression",
              "start": 745,
              "end": 809,
              "callee": {
                "type": "Identifier",
                "start": 749,
                "end": 761,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 762,
                  "end": 808,
                  "value": "#3: new Boolean(true) <= undefined === false",
                  "raw": "'#3: new Boolean(true) <= undefined === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 824,
      "end": 947,
      "test": {
        "type": "BinaryExpression",
        "start": 828,
        "end": 868,
        "left": {
          "type": "BinaryExpression",
          "start": 828,
          "end": 858,
          "left": {
            "type": "Identifier",
            "start": 828,
            "end": 837,
            "name": "undefined"
          },
          "operator": "<=",
          "right": {
            "type": "NewExpression",
            "start": 841,
            "end": 858,
            "callee": {
              "type": "Identifier",
              "start": 845,
              "end": 852,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 853,
                "end": 857,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 863,
          "end": 868,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 870,
        "end": 947,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 874,
            "end": 945,
            "argument": {
              "type": "NewExpression",
              "start": 880,
              "end": 944,
              "callee": {
                "type": "Identifier",
                "start": 884,
                "end": 896,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 897,
                  "end": 943,
                  "value": "#4: undefined <= new Boolean(true) === false",
                  "raw": "'#4: undefined <= new Boolean(true) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}