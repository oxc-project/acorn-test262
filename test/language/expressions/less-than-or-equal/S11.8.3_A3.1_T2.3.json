{
  "type": "Program",
  "start": 0,
  "end": 870,
  "body": [
    {
      "type": "IfStatement",
      "start": 465,
      "end": 546,
      "test": {
        "type": "BinaryExpression",
        "start": 469,
        "end": 488,
        "left": {
          "type": "BinaryExpression",
          "start": 469,
          "end": 478,
          "left": {
            "type": "Literal",
            "start": 469,
            "end": 470,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "start": 474,
            "end": 478,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 483,
          "end": 488,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 490,
        "end": 546,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 494,
            "end": 544,
            "argument": {
              "type": "NewExpression",
              "start": 500,
              "end": 543,
              "callee": {
                "type": "Identifier",
                "start": 504,
                "end": 516,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 517,
                  "end": 542,
                  "value": "#1: 1 <= null === false",
                  "raw": "'#1: 1 <= null === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 558,
      "end": 637,
      "test": {
        "type": "BinaryExpression",
        "start": 562,
        "end": 580,
        "left": {
          "type": "BinaryExpression",
          "start": 562,
          "end": 571,
          "left": {
            "type": "Literal",
            "start": 562,
            "end": 566,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "start": 570,
            "end": 571,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 576,
          "end": 580,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 582,
        "end": 637,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 586,
            "end": 635,
            "argument": {
              "type": "NewExpression",
              "start": 592,
              "end": 634,
              "callee": {
                "type": "Identifier",
                "start": 596,
                "end": 608,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 609,
                  "end": 633,
                  "value": "#2: null <= 1 === true",
                  "raw": "'#2: null <= 1 === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 649,
      "end": 754,
      "test": {
        "type": "BinaryExpression",
        "start": 653,
        "end": 684,
        "left": {
          "type": "BinaryExpression",
          "start": 653,
          "end": 674,
          "left": {
            "type": "NewExpression",
            "start": 653,
            "end": 666,
            "callee": {
              "type": "Identifier",
              "start": 657,
              "end": 663,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 664,
                "end": 665,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "start": 670,
            "end": 674,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 679,
          "end": 684,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 686,
        "end": 754,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 690,
            "end": 752,
            "argument": {
              "type": "NewExpression",
              "start": 696,
              "end": 751,
              "callee": {
                "type": "Identifier",
                "start": 700,
                "end": 712,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 713,
                  "end": 750,
                  "value": "#3: new Number(1) <= null === false",
                  "raw": "'#3: new Number(1) <= null === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 766,
      "end": 869,
      "test": {
        "type": "BinaryExpression",
        "start": 770,
        "end": 800,
        "left": {
          "type": "BinaryExpression",
          "start": 770,
          "end": 791,
          "left": {
            "type": "Literal",
            "start": 770,
            "end": 774,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          },
          "operator": "<=",
          "right": {
            "type": "NewExpression",
            "start": 778,
            "end": 791,
            "callee": {
              "type": "Identifier",
              "start": 782,
              "end": 788,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 789,
                "end": 790,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 796,
          "end": 800,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 802,
        "end": 869,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 806,
            "end": 867,
            "argument": {
              "type": "NewExpression",
              "start": 812,
              "end": 866,
              "callee": {
                "type": "Identifier",
                "start": 816,
                "end": 828,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 829,
                  "end": 865,
                  "value": "#4: null <= new Number(1) === true",
                  "raw": "'#4: null <= new Number(1) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}