{
  "type": "Program",
  "start": 0,
  "end": 2609,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 907,
      "end": 974,
      "expression": {
        "type": "CallExpression",
        "start": 907,
        "end": 973,
        "callee": {
          "type": "MemberExpression",
          "start": 907,
          "end": 923,
          "object": {
            "type": "Identifier",
            "start": 907,
            "end": 913,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 914,
            "end": 923,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 924,
            "end": 931,
            "left": {
              "type": "Literal",
              "start": 924,
              "end": 926,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 930,
              "end": 931,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 933,
            "end": 937,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 939,
            "end": 972,
            "value": "The result of (0n <= 0) is true",
            "raw": "'The result of (0n <= 0) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 975,
      "end": 1042,
      "expression": {
        "type": "CallExpression",
        "start": 975,
        "end": 1041,
        "callee": {
          "type": "MemberExpression",
          "start": 975,
          "end": 991,
          "object": {
            "type": "Identifier",
            "start": 975,
            "end": 981,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 982,
            "end": 991,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 992,
            "end": 999,
            "left": {
              "type": "Literal",
              "start": 992,
              "end": 993,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 997,
              "end": 999,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1001,
            "end": 1005,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1007,
            "end": 1040,
            "value": "The result of (0 <= 0n) is true",
            "raw": "'The result of (0 <= 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1043,
      "end": 1112,
      "expression": {
        "type": "CallExpression",
        "start": 1043,
        "end": 1111,
        "callee": {
          "type": "MemberExpression",
          "start": 1043,
          "end": 1059,
          "object": {
            "type": "Identifier",
            "start": 1043,
            "end": 1049,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1050,
            "end": 1059,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1060,
            "end": 1068,
            "left": {
              "type": "Literal",
              "start": 1060,
              "end": 1062,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<=",
            "right": {
              "type": "UnaryExpression",
              "start": 1066,
              "end": 1068,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1067,
                "end": 1068,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            }
          },
          {
            "type": "Literal",
            "start": 1070,
            "end": 1074,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1076,
            "end": 1110,
            "value": "The result of (0n <= -0) is true",
            "raw": "'The result of (0n <= -0) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1113,
      "end": 1182,
      "expression": {
        "type": "CallExpression",
        "start": 1113,
        "end": 1181,
        "callee": {
          "type": "MemberExpression",
          "start": 1113,
          "end": 1129,
          "object": {
            "type": "Identifier",
            "start": 1113,
            "end": 1119,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1120,
            "end": 1129,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1130,
            "end": 1138,
            "left": {
              "type": "UnaryExpression",
              "start": 1130,
              "end": 1132,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1131,
                "end": 1132,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 1136,
              "end": 1138,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1140,
            "end": 1144,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1146,
            "end": 1180,
            "value": "The result of (-0 <= 0n) is true",
            "raw": "'The result of (-0 <= 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1183,
      "end": 1276,
      "expression": {
        "type": "CallExpression",
        "start": 1183,
        "end": 1275,
        "callee": {
          "type": "MemberExpression",
          "start": 1183,
          "end": 1199,
          "object": {
            "type": "Identifier",
            "start": 1183,
            "end": 1189,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1190,
            "end": 1199,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1200,
            "end": 1220,
            "left": {
              "type": "Literal",
              "start": 1200,
              "end": 1202,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 1206,
              "end": 1220,
              "value": 1e-12,
              "raw": "0.000000000001",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1222,
            "end": 1226,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1228,
            "end": 1274,
            "value": "The result of (0n <= 0.000000000001) is true",
            "raw": "'The result of (0n <= 0.000000000001) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1277,
      "end": 1372,
      "expression": {
        "type": "CallExpression",
        "start": 1277,
        "end": 1371,
        "callee": {
          "type": "MemberExpression",
          "start": 1277,
          "end": 1293,
          "object": {
            "type": "Identifier",
            "start": 1277,
            "end": 1283,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1284,
            "end": 1293,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1294,
            "end": 1314,
            "left": {
              "type": "Literal",
              "start": 1294,
              "end": 1308,
              "value": 1e-12,
              "raw": "0.000000000001",
              "regex": null,
              "bigint": null
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 1312,
              "end": 1314,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1316,
            "end": 1321,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1323,
            "end": 1370,
            "value": "The result of (0.000000000001 <= 0n) is false",
            "raw": "'The result of (0.000000000001 <= 0n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1373,
      "end": 1440,
      "expression": {
        "type": "CallExpression",
        "start": 1373,
        "end": 1439,
        "callee": {
          "type": "MemberExpression",
          "start": 1373,
          "end": 1389,
          "object": {
            "type": "Identifier",
            "start": 1373,
            "end": 1379,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1380,
            "end": 1389,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1390,
            "end": 1397,
            "left": {
              "type": "Literal",
              "start": 1390,
              "end": 1392,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 1396,
              "end": 1397,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1399,
            "end": 1403,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1405,
            "end": 1438,
            "value": "The result of (0n <= 1) is true",
            "raw": "'The result of (0n <= 1) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1441,
      "end": 1510,
      "expression": {
        "type": "CallExpression",
        "start": 1441,
        "end": 1509,
        "callee": {
          "type": "MemberExpression",
          "start": 1441,
          "end": 1457,
          "object": {
            "type": "Identifier",
            "start": 1441,
            "end": 1447,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1448,
            "end": 1457,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1458,
            "end": 1465,
            "left": {
              "type": "Literal",
              "start": 1458,
              "end": 1459,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 1463,
              "end": 1465,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1467,
            "end": 1472,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1474,
            "end": 1508,
            "value": "The result of (1 <= 0n) is false",
            "raw": "'The result of (1 <= 0n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1511,
      "end": 1580,
      "expression": {
        "type": "CallExpression",
        "start": 1511,
        "end": 1579,
        "callee": {
          "type": "MemberExpression",
          "start": 1511,
          "end": 1527,
          "object": {
            "type": "Identifier",
            "start": 1511,
            "end": 1517,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1518,
            "end": 1527,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1528,
            "end": 1535,
            "left": {
              "type": "Literal",
              "start": 1528,
              "end": 1530,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 1534,
              "end": 1535,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1537,
            "end": 1542,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1544,
            "end": 1578,
            "value": "The result of (1n <= 0) is false",
            "raw": "'The result of (1n <= 0) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1581,
      "end": 1648,
      "expression": {
        "type": "CallExpression",
        "start": 1581,
        "end": 1647,
        "callee": {
          "type": "MemberExpression",
          "start": 1581,
          "end": 1597,
          "object": {
            "type": "Identifier",
            "start": 1581,
            "end": 1587,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1588,
            "end": 1597,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1598,
            "end": 1605,
            "left": {
              "type": "Literal",
              "start": 1598,
              "end": 1599,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 1603,
              "end": 1605,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1607,
            "end": 1611,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1613,
            "end": 1646,
            "value": "The result of (0 <= 1n) is true",
            "raw": "'The result of (0 <= 1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1649,
      "end": 1744,
      "expression": {
        "type": "CallExpression",
        "start": 1649,
        "end": 1743,
        "callee": {
          "type": "MemberExpression",
          "start": 1649,
          "end": 1665,
          "object": {
            "type": "Identifier",
            "start": 1649,
            "end": 1655,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1656,
            "end": 1665,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1666,
            "end": 1686,
            "left": {
              "type": "Literal",
              "start": 1666,
              "end": 1668,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 1672,
              "end": 1686,
              "value": 0.999999999999,
              "raw": "0.999999999999",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1688,
            "end": 1693,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1695,
            "end": 1742,
            "value": "The result of (1n <= 0.999999999999) is false",
            "raw": "'The result of (1n <= 0.999999999999) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1745,
      "end": 1838,
      "expression": {
        "type": "CallExpression",
        "start": 1745,
        "end": 1837,
        "callee": {
          "type": "MemberExpression",
          "start": 1745,
          "end": 1761,
          "object": {
            "type": "Identifier",
            "start": 1745,
            "end": 1751,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1752,
            "end": 1761,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1762,
            "end": 1782,
            "left": {
              "type": "Literal",
              "start": 1762,
              "end": 1776,
              "value": 0.999999999999,
              "raw": "0.999999999999",
              "regex": null,
              "bigint": null
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 1780,
              "end": 1782,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1784,
            "end": 1788,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1790,
            "end": 1836,
            "value": "The result of (0.999999999999 <= 1n) is true",
            "raw": "'The result of (0.999999999999 <= 1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1839,
      "end": 1906,
      "expression": {
        "type": "CallExpression",
        "start": 1839,
        "end": 1905,
        "callee": {
          "type": "MemberExpression",
          "start": 1839,
          "end": 1855,
          "object": {
            "type": "Identifier",
            "start": 1839,
            "end": 1845,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1846,
            "end": 1855,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1856,
            "end": 1863,
            "left": {
              "type": "Literal",
              "start": 1856,
              "end": 1858,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 1862,
              "end": 1863,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1865,
            "end": 1869,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1871,
            "end": 1904,
            "value": "The result of (1n <= 1) is true",
            "raw": "'The result of (1n <= 1) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1907,
      "end": 1974,
      "expression": {
        "type": "CallExpression",
        "start": 1907,
        "end": 1973,
        "callee": {
          "type": "MemberExpression",
          "start": 1907,
          "end": 1923,
          "object": {
            "type": "Identifier",
            "start": 1907,
            "end": 1913,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1914,
            "end": 1923,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1924,
            "end": 1931,
            "left": {
              "type": "Literal",
              "start": 1924,
              "end": 1925,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 1929,
              "end": 1931,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1933,
            "end": 1937,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1939,
            "end": 1972,
            "value": "The result of (1 <= 1n) is true",
            "raw": "'The result of (1 <= 1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1975,
      "end": 2072,
      "expression": {
        "type": "CallExpression",
        "start": 1975,
        "end": 2071,
        "callee": {
          "type": "MemberExpression",
          "start": 1975,
          "end": 1991,
          "object": {
            "type": "Identifier",
            "start": 1975,
            "end": 1981,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1982,
            "end": 1991,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1992,
            "end": 2014,
            "left": {
              "type": "Literal",
              "start": 1992,
              "end": 1994,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<=",
            "right": {
              "type": "MemberExpression",
              "start": 1998,
              "end": 2014,
              "object": {
                "type": "Identifier",
                "start": 1998,
                "end": 2004,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 2005,
                "end": 2014,
                "name": "MIN_VALUE"
              },
              "computed": false,
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 2016,
            "end": 2020,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2022,
            "end": 2070,
            "value": "The result of (0n <= Number.MIN_VALUE) is true",
            "raw": "'The result of (0n <= Number.MIN_VALUE) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2073,
      "end": 2172,
      "expression": {
        "type": "CallExpression",
        "start": 2073,
        "end": 2171,
        "callee": {
          "type": "MemberExpression",
          "start": 2073,
          "end": 2089,
          "object": {
            "type": "Identifier",
            "start": 2073,
            "end": 2079,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2080,
            "end": 2089,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2090,
            "end": 2112,
            "left": {
              "type": "MemberExpression",
              "start": 2090,
              "end": 2106,
              "object": {
                "type": "Identifier",
                "start": 2090,
                "end": 2096,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 2097,
                "end": 2106,
                "name": "MIN_VALUE"
              },
              "computed": false,
              "optional": false
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 2110,
              "end": 2112,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 2114,
            "end": 2119,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2121,
            "end": 2170,
            "value": "The result of (Number.MIN_VALUE <= 0n) is false",
            "raw": "'The result of (Number.MIN_VALUE <= 0n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2174,
      "end": 2283,
      "expression": {
        "type": "CallExpression",
        "start": 2174,
        "end": 2282,
        "callee": {
          "type": "MemberExpression",
          "start": 2174,
          "end": 2190,
          "object": {
            "type": "Identifier",
            "start": 2174,
            "end": 2180,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2181,
            "end": 2190,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2194,
            "end": 2217,
            "left": {
              "type": "Literal",
              "start": 2194,
              "end": 2196,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<=",
            "right": {
              "type": "UnaryExpression",
              "start": 2200,
              "end": 2217,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "MemberExpression",
                "start": 2201,
                "end": 2217,
                "object": {
                  "type": "Identifier",
                  "start": 2201,
                  "end": 2207,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 2208,
                  "end": 2217,
                  "name": "MIN_VALUE"
                },
                "computed": false,
                "optional": false
              }
            }
          },
          {
            "type": "Literal",
            "start": 2221,
            "end": 2226,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2230,
            "end": 2280,
            "value": "The result of (0n <= -Number.MIN_VALUE) is false",
            "raw": "'The result of (0n <= -Number.MIN_VALUE) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2285,
      "end": 2384,
      "expression": {
        "type": "CallExpression",
        "start": 2285,
        "end": 2383,
        "callee": {
          "type": "MemberExpression",
          "start": 2285,
          "end": 2301,
          "object": {
            "type": "Identifier",
            "start": 2285,
            "end": 2291,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2292,
            "end": 2301,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2302,
            "end": 2325,
            "left": {
              "type": "UnaryExpression",
              "start": 2302,
              "end": 2319,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "MemberExpression",
                "start": 2303,
                "end": 2319,
                "object": {
                  "type": "Identifier",
                  "start": 2303,
                  "end": 2309,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 2310,
                  "end": 2319,
                  "name": "MIN_VALUE"
                },
                "computed": false,
                "optional": false
              }
            },
            "operator": "<=",
            "right": {
              "type": "Literal",
              "start": 2323,
              "end": 2325,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 2327,
            "end": 2331,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2333,
            "end": 2382,
            "value": "The result of (-Number.MIN_VALUE <= 0n) is true",
            "raw": "'The result of (-Number.MIN_VALUE <= 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2386,
      "end": 2495,
      "expression": {
        "type": "CallExpression",
        "start": 2386,
        "end": 2494,
        "callee": {
          "type": "MemberExpression",
          "start": 2386,
          "end": 2402,
          "object": {
            "type": "Identifier",
            "start": 2386,
            "end": 2392,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2393,
            "end": 2402,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2406,
            "end": 2430,
            "left": {
              "type": "UnaryExpression",
              "start": 2406,
              "end": 2410,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2407,
                "end": 2410,
                "value": null,
                "raw": "10n",
                "regex": null,
                "bigint": "10"
              }
            },
            "operator": "<=",
            "right": {
              "type": "MemberExpression",
              "start": 2414,
              "end": 2430,
              "object": {
                "type": "Identifier",
                "start": 2414,
                "end": 2420,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 2421,
                "end": 2430,
                "name": "MIN_VALUE"
              },
              "computed": false,
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 2434,
            "end": 2438,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2442,
            "end": 2492,
            "value": "The result of (-10n <= Number.MIN_VALUE) is true",
            "raw": "'The result of (-10n <= Number.MIN_VALUE) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2497,
      "end": 2608,
      "expression": {
        "type": "CallExpression",
        "start": 2497,
        "end": 2607,
        "callee": {
          "type": "MemberExpression",
          "start": 2497,
          "end": 2513,
          "object": {
            "type": "Identifier",
            "start": 2497,
            "end": 2503,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2504,
            "end": 2513,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2517,
            "end": 2541,
            "left": {
              "type": "MemberExpression",
              "start": 2517,
              "end": 2533,
              "object": {
                "type": "Identifier",
                "start": 2517,
                "end": 2523,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 2524,
                "end": 2533,
                "name": "MIN_VALUE"
              },
              "computed": false,
              "optional": false
            },
            "operator": "<=",
            "right": {
              "type": "UnaryExpression",
              "start": 2537,
              "end": 2541,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2538,
                "end": 2541,
                "value": null,
                "raw": "10n",
                "regex": null,
                "bigint": "10"
              }
            }
          },
          {
            "type": "Literal",
            "start": 2545,
            "end": 2550,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2554,
            "end": 2605,
            "value": "The result of (Number.MIN_VALUE <= -10n) is false",
            "raw": "'The result of (Number.MIN_VALUE <= -10n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}