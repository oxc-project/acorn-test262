{
  "type": "Program",
  "start": 0,
  "end": 899,
  "body": [
    {
      "type": "IfStatement",
      "start": 466,
      "end": 553,
      "test": {
        "type": "BinaryExpression",
        "start": 470,
        "end": 492,
        "left": {
          "type": "BinaryExpression",
          "start": 470,
          "end": 482,
          "left": {
            "type": "Literal",
            "start": 470,
            "end": 474,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "start": 478,
            "end": 482,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 487,
          "end": 492,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 494,
        "end": 553,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 498,
            "end": 551,
            "argument": {
              "type": "NewExpression",
              "start": 504,
              "end": 550,
              "callee": {
                "type": "Identifier",
                "start": 508,
                "end": 520,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 521,
                  "end": 549,
                  "value": "#1: true <= null === false",
                  "raw": "'#1: true <= null === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 565,
      "end": 650,
      "test": {
        "type": "BinaryExpression",
        "start": 569,
        "end": 590,
        "left": {
          "type": "BinaryExpression",
          "start": 569,
          "end": 581,
          "left": {
            "type": "Literal",
            "start": 569,
            "end": 573,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "start": 577,
            "end": 581,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 586,
          "end": 590,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 592,
        "end": 650,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 596,
            "end": 648,
            "argument": {
              "type": "NewExpression",
              "start": 602,
              "end": 647,
              "callee": {
                "type": "Identifier",
                "start": 606,
                "end": 618,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 619,
                  "end": 646,
                  "value": "#2: null <= true === true",
                  "raw": "'#2: null <= true === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 662,
      "end": 775,
      "test": {
        "type": "BinaryExpression",
        "start": 666,
        "end": 701,
        "left": {
          "type": "BinaryExpression",
          "start": 666,
          "end": 691,
          "left": {
            "type": "NewExpression",
            "start": 666,
            "end": 683,
            "callee": {
              "type": "Identifier",
              "start": 670,
              "end": 677,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 678,
                "end": 682,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "<=",
          "right": {
            "type": "Literal",
            "start": 687,
            "end": 691,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 696,
          "end": 701,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 703,
        "end": 775,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 707,
            "end": 773,
            "argument": {
              "type": "NewExpression",
              "start": 713,
              "end": 772,
              "callee": {
                "type": "Identifier",
                "start": 717,
                "end": 729,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 730,
                  "end": 771,
                  "value": "#3: new Boolean(true) <= null === false",
                  "raw": "'#3: new Boolean(true) <= null === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 787,
      "end": 898,
      "test": {
        "type": "BinaryExpression",
        "start": 791,
        "end": 825,
        "left": {
          "type": "BinaryExpression",
          "start": 791,
          "end": 816,
          "left": {
            "type": "Literal",
            "start": 791,
            "end": 795,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          },
          "operator": "<=",
          "right": {
            "type": "NewExpression",
            "start": 799,
            "end": 816,
            "callee": {
              "type": "Identifier",
              "start": 803,
              "end": 810,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 811,
                "end": 815,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 821,
          "end": 825,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 827,
        "end": 898,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 831,
            "end": 896,
            "argument": {
              "type": "NewExpression",
              "start": 837,
              "end": 895,
              "callee": {
                "type": "Identifier",
                "start": 841,
                "end": 853,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 854,
                  "end": 894,
                  "value": "#4: null <= new Boolean(true) === true",
                  "raw": "'#4: null <= new Boolean(true) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}