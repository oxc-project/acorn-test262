{
  "type": "Program",
  "start": 0,
  "end": 1566,
  "body": [
    {
      "type": "IfStatement",
      "start": 331,
      "end": 463,
      "test": {
        "type": "BinaryExpression",
        "start": 335,
        "end": 374,
        "left": {
          "type": "CallExpression",
          "start": 335,
          "end": 365,
          "callee": {
            "type": "Identifier",
            "start": 335,
            "end": 340,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 341,
              "end": 364,
              "left": {
                "type": "MemberExpression",
                "start": 341,
                "end": 351,
                "object": {
                  "type": "Identifier",
                  "start": 341,
                  "end": 347,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 348,
                  "end": 351,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "start": 354,
                "end": 364,
                "object": {
                  "type": "Identifier",
                  "start": 354,
                  "end": 360,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 361,
                  "end": 364,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 370,
          "end": 374,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 376,
        "end": 463,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 380,
            "end": 461,
            "argument": {
              "type": "NewExpression",
              "start": 386,
              "end": 460,
              "callee": {
                "type": "Identifier",
                "start": 390,
                "end": 402,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 403,
                  "end": 459,
                  "left": {
                    "type": "Literal",
                    "start": 403,
                    "end": 445,
                    "value": "#1: NaN / NaN === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN / NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 448,
                    "end": 459,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 449,
                      "end": 458,
                      "left": {
                        "type": "Identifier",
                        "start": 449,
                        "end": 452,
                        "name": "NaN"
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "start": 455,
                        "end": 458,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 477,
      "end": 600,
      "test": {
        "type": "BinaryExpression",
        "start": 481,
        "end": 512,
        "left": {
          "type": "CallExpression",
          "start": 481,
          "end": 503,
          "callee": {
            "type": "Identifier",
            "start": 481,
            "end": 486,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 487,
              "end": 502,
              "left": {
                "type": "MemberExpression",
                "start": 487,
                "end": 497,
                "object": {
                  "type": "Identifier",
                  "start": 487,
                  "end": 493,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 494,
                  "end": 497,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "/",
              "right": {
                "type": "UnaryExpression",
                "start": 500,
                "end": 502,
                "operator": "+",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 501,
                  "end": 502,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 508,
          "end": 512,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 514,
        "end": 600,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 518,
            "end": 597,
            "argument": {
              "type": "NewExpression",
              "start": 524,
              "end": 596,
              "callee": {
                "type": "Identifier",
                "start": 528,
                "end": 540,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 541,
                  "end": 595,
                  "left": {
                    "type": "Literal",
                    "start": 541,
                    "end": 582,
                    "value": "#2: NaN / +0 === Not-a-Number. Actual: ",
                    "raw": "'#2: NaN / +0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 585,
                    "end": 595,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 586,
                      "end": 594,
                      "left": {
                        "type": "Identifier",
                        "start": 586,
                        "end": 589,
                        "name": "NaN"
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 592,
                        "end": 594,
                        "operator": "+",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 593,
                          "end": 594,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 613,
      "end": 736,
      "test": {
        "type": "BinaryExpression",
        "start": 617,
        "end": 648,
        "left": {
          "type": "CallExpression",
          "start": 617,
          "end": 639,
          "callee": {
            "type": "Identifier",
            "start": 617,
            "end": 622,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 623,
              "end": 638,
              "left": {
                "type": "MemberExpression",
                "start": 623,
                "end": 633,
                "object": {
                  "type": "Identifier",
                  "start": 623,
                  "end": 629,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 630,
                  "end": 633,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "/",
              "right": {
                "type": "UnaryExpression",
                "start": 636,
                "end": 638,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 637,
                  "end": 638,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 644,
          "end": 648,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 650,
        "end": 736,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 654,
            "end": 733,
            "argument": {
              "type": "NewExpression",
              "start": 660,
              "end": 732,
              "callee": {
                "type": "Identifier",
                "start": 664,
                "end": 676,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 677,
                  "end": 731,
                  "left": {
                    "type": "Literal",
                    "start": 677,
                    "end": 718,
                    "value": "#3: NaN / -0 === Not-a-Number. Actual: ",
                    "raw": "'#3: NaN / -0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 721,
                    "end": 731,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 722,
                      "end": 730,
                      "left": {
                        "type": "Identifier",
                        "start": 722,
                        "end": 725,
                        "name": "NaN"
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 728,
                        "end": 730,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 729,
                          "end": 730,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 749,
      "end": 905,
      "test": {
        "type": "BinaryExpression",
        "start": 753,
        "end": 806,
        "left": {
          "type": "CallExpression",
          "start": 753,
          "end": 797,
          "callee": {
            "type": "Identifier",
            "start": 753,
            "end": 758,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 759,
              "end": 796,
              "left": {
                "type": "MemberExpression",
                "start": 759,
                "end": 769,
                "object": {
                  "type": "Identifier",
                  "start": 759,
                  "end": 765,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 766,
                  "end": 769,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "start": 772,
                "end": 796,
                "object": {
                  "type": "Identifier",
                  "start": 772,
                  "end": 778,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 779,
                  "end": 796,
                  "name": "POSITIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 802,
          "end": 806,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 808,
        "end": 905,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 812,
            "end": 903,
            "argument": {
              "type": "NewExpression",
              "start": 818,
              "end": 902,
              "callee": {
                "type": "Identifier",
                "start": 822,
                "end": 834,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 835,
                  "end": 901,
                  "left": {
                    "type": "Literal",
                    "start": 835,
                    "end": 882,
                    "value": "#4: NaN / Infinity === Not-a-Number. Actual: ",
                    "raw": "'#4: NaN / Infinity === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 885,
                    "end": 901,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 886,
                      "end": 900,
                      "left": {
                        "type": "Identifier",
                        "start": 886,
                        "end": 889,
                        "name": "NaN"
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "start": 892,
                        "end": 900,
                        "name": "Infinity"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 918,
      "end": 1077,
      "test": {
        "type": "BinaryExpression",
        "start": 922,
        "end": 975,
        "left": {
          "type": "CallExpression",
          "start": 922,
          "end": 966,
          "callee": {
            "type": "Identifier",
            "start": 922,
            "end": 927,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 928,
              "end": 965,
              "left": {
                "type": "MemberExpression",
                "start": 928,
                "end": 938,
                "object": {
                  "type": "Identifier",
                  "start": 928,
                  "end": 934,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 935,
                  "end": 938,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "start": 941,
                "end": 965,
                "object": {
                  "type": "Identifier",
                  "start": 941,
                  "end": 947,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 948,
                  "end": 965,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 971,
          "end": 975,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 977,
        "end": 1077,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 981,
            "end": 1074,
            "argument": {
              "type": "NewExpression",
              "start": 987,
              "end": 1073,
              "callee": {
                "type": "Identifier",
                "start": 991,
                "end": 1003,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1004,
                  "end": 1072,
                  "left": {
                    "type": "Literal",
                    "start": 1004,
                    "end": 1052,
                    "value": "#5: NaN / -Infinity === Not-a-Number. Actual: ",
                    "raw": "'#5: NaN / -Infinity === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1055,
                    "end": 1072,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1056,
                      "end": 1071,
                      "left": {
                        "type": "Identifier",
                        "start": 1056,
                        "end": 1059,
                        "name": "NaN"
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 1062,
                        "end": 1071,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Identifier",
                          "start": 1063,
                          "end": 1071,
                          "name": "Infinity"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1090,
      "end": 1254,
      "test": {
        "type": "BinaryExpression",
        "start": 1094,
        "end": 1139,
        "left": {
          "type": "CallExpression",
          "start": 1094,
          "end": 1130,
          "callee": {
            "type": "Identifier",
            "start": 1094,
            "end": 1099,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1100,
              "end": 1129,
              "left": {
                "type": "MemberExpression",
                "start": 1100,
                "end": 1110,
                "object": {
                  "type": "Identifier",
                  "start": 1100,
                  "end": 1106,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1107,
                  "end": 1110,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "start": 1113,
                "end": 1129,
                "object": {
                  "type": "Identifier",
                  "start": 1113,
                  "end": 1119,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1120,
                  "end": 1129,
                  "name": "MAX_VALUE"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1135,
          "end": 1139,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1141,
        "end": 1254,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1145,
            "end": 1252,
            "argument": {
              "type": "NewExpression",
              "start": 1151,
              "end": 1251,
              "callee": {
                "type": "Identifier",
                "start": 1155,
                "end": 1167,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1168,
                  "end": 1250,
                  "left": {
                    "type": "Literal",
                    "start": 1168,
                    "end": 1223,
                    "value": "#6: NaN / Number.MAX_VALUE === Not-a-Number. Actual: ",
                    "raw": "'#6: NaN / Number.MAX_VALUE === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1226,
                    "end": 1250,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1227,
                      "end": 1249,
                      "left": {
                        "type": "Identifier",
                        "start": 1227,
                        "end": 1230,
                        "name": "NaN"
                      },
                      "operator": "/",
                      "right": {
                        "type": "MemberExpression",
                        "start": 1233,
                        "end": 1249,
                        "object": {
                          "type": "Identifier",
                          "start": 1233,
                          "end": 1239,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1240,
                          "end": 1249,
                          "name": "MAX_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1267,
      "end": 1432,
      "test": {
        "type": "BinaryExpression",
        "start": 1271,
        "end": 1316,
        "left": {
          "type": "CallExpression",
          "start": 1271,
          "end": 1307,
          "callee": {
            "type": "Identifier",
            "start": 1271,
            "end": 1276,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1277,
              "end": 1306,
              "left": {
                "type": "MemberExpression",
                "start": 1277,
                "end": 1287,
                "object": {
                  "type": "Identifier",
                  "start": 1277,
                  "end": 1283,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1284,
                  "end": 1287,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "/",
              "right": {
                "type": "MemberExpression",
                "start": 1290,
                "end": 1306,
                "object": {
                  "type": "Identifier",
                  "start": 1290,
                  "end": 1296,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1297,
                  "end": 1306,
                  "name": "MIN_VALUE"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1312,
          "end": 1316,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1318,
        "end": 1432,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1322,
            "end": 1429,
            "argument": {
              "type": "NewExpression",
              "start": 1328,
              "end": 1428,
              "callee": {
                "type": "Identifier",
                "start": 1332,
                "end": 1344,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1345,
                  "end": 1427,
                  "left": {
                    "type": "Literal",
                    "start": 1345,
                    "end": 1400,
                    "value": "#7: NaN / Number.MIN_VALUE === Not-a-Number. Actual: ",
                    "raw": "'#7: NaN / Number.MIN_VALUE === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1403,
                    "end": 1427,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1404,
                      "end": 1426,
                      "left": {
                        "type": "Identifier",
                        "start": 1404,
                        "end": 1407,
                        "name": "NaN"
                      },
                      "operator": "/",
                      "right": {
                        "type": "MemberExpression",
                        "start": 1410,
                        "end": 1426,
                        "object": {
                          "type": "Identifier",
                          "start": 1410,
                          "end": 1416,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1417,
                          "end": 1426,
                          "name": "MIN_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1444,
      "end": 1565,
      "test": {
        "type": "BinaryExpression",
        "start": 1448,
        "end": 1478,
        "left": {
          "type": "CallExpression",
          "start": 1448,
          "end": 1469,
          "callee": {
            "type": "Identifier",
            "start": 1448,
            "end": 1453,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1454,
              "end": 1468,
              "left": {
                "type": "MemberExpression",
                "start": 1454,
                "end": 1464,
                "object": {
                  "type": "Identifier",
                  "start": 1454,
                  "end": 1460,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1461,
                  "end": 1464,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "/",
              "right": {
                "type": "Literal",
                "start": 1467,
                "end": 1468,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1474,
          "end": 1478,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1480,
        "end": 1565,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1484,
            "end": 1561,
            "argument": {
              "type": "NewExpression",
              "start": 1490,
              "end": 1560,
              "callee": {
                "type": "Identifier",
                "start": 1494,
                "end": 1506,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1507,
                  "end": 1559,
                  "left": {
                    "type": "Literal",
                    "start": 1507,
                    "end": 1547,
                    "value": "#8: NaN / 1 === Not-a-Number. Actual: ",
                    "raw": "'#8: NaN / 1 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1550,
                    "end": 1559,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1551,
                      "end": 1558,
                      "left": {
                        "type": "Identifier",
                        "start": 1551,
                        "end": 1554,
                        "name": "NaN"
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "start": 1557,
                        "end": 1558,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}