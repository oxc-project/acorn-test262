{
  "type": "Program",
  "start": 0,
  "end": 903,
  "body": [
    {
      "type": "IfStatement",
      "start": 356,
      "end": 481,
      "test": {
        "type": "BinaryExpression",
        "start": 360,
        "end": 397,
        "left": {
          "type": "BinaryExpression",
          "start": 360,
          "end": 368,
          "left": {
            "type": "Literal",
            "start": 360,
            "end": 361,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": "/",
          "right": {
            "type": "Literal",
            "start": 364,
            "end": 368,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "start": 373,
          "end": 397,
          "object": {
            "type": "Identifier",
            "start": 373,
            "end": 379,
            "name": "Number"
          },
          "property": {
            "type": "Identifier",
            "start": 380,
            "end": 397,
            "name": "POSITIVE_INFINITY"
          },
          "computed": false,
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 399,
        "end": 481,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 403,
            "end": 479,
            "argument": {
              "type": "NewExpression",
              "start": 409,
              "end": 478,
              "callee": {
                "type": "Identifier",
                "start": 413,
                "end": 425,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 426,
                  "end": 477,
                  "left": {
                    "type": "Literal",
                    "start": 426,
                    "end": 464,
                    "value": "#1: 1 / null === +Infinity. Actual: ",
                    "raw": "'#1: 1 / null === +Infinity. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 467,
                    "end": 477,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 468,
                      "end": 476,
                      "left": {
                        "type": "Literal",
                        "start": 468,
                        "end": 469,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "start": 472,
                        "end": 476,
                        "value": null,
                        "raw": "null",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 493,
      "end": 587,
      "test": {
        "type": "BinaryExpression",
        "start": 497,
        "end": 511,
        "left": {
          "type": "BinaryExpression",
          "start": 497,
          "end": 505,
          "left": {
            "type": "Literal",
            "start": 497,
            "end": 501,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          },
          "operator": "/",
          "right": {
            "type": "Literal",
            "start": 504,
            "end": 505,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 510,
          "end": 511,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 513,
        "end": 587,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 517,
            "end": 585,
            "argument": {
              "type": "NewExpression",
              "start": 523,
              "end": 584,
              "callee": {
                "type": "Identifier",
                "start": 527,
                "end": 539,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 540,
                  "end": 583,
                  "left": {
                    "type": "Literal",
                    "start": 540,
                    "end": 570,
                    "value": "#2: null / 1 === 0. Actual: ",
                    "raw": "'#2: null / 1 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 573,
                    "end": 583,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 574,
                      "end": 582,
                      "left": {
                        "type": "Literal",
                        "start": 574,
                        "end": 578,
                        "value": null,
                        "raw": "null",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "start": 581,
                        "end": 582,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 599,
      "end": 760,
      "test": {
        "type": "BinaryExpression",
        "start": 603,
        "end": 652,
        "left": {
          "type": "BinaryExpression",
          "start": 603,
          "end": 623,
          "left": {
            "type": "NewExpression",
            "start": 603,
            "end": 616,
            "callee": {
              "type": "Identifier",
              "start": 607,
              "end": 613,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 614,
                "end": 615,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "/",
          "right": {
            "type": "Literal",
            "start": 619,
            "end": 623,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "start": 628,
          "end": 652,
          "object": {
            "type": "Identifier",
            "start": 628,
            "end": 634,
            "name": "Number"
          },
          "property": {
            "type": "Identifier",
            "start": 635,
            "end": 652,
            "name": "POSITIVE_INFINITY"
          },
          "computed": false,
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 654,
        "end": 760,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 658,
            "end": 758,
            "argument": {
              "type": "NewExpression",
              "start": 664,
              "end": 757,
              "callee": {
                "type": "Identifier",
                "start": 668,
                "end": 680,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 681,
                  "end": 756,
                  "left": {
                    "type": "Literal",
                    "start": 681,
                    "end": 731,
                    "value": "#3: new Number(1) / null === +Infinity. Actual: ",
                    "raw": "'#3: new Number(1) / null === +Infinity. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 734,
                    "end": 756,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 735,
                      "end": 755,
                      "left": {
                        "type": "NewExpression",
                        "start": 735,
                        "end": 748,
                        "callee": {
                          "type": "Identifier",
                          "start": 739,
                          "end": 745,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 746,
                            "end": 747,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "start": 751,
                        "end": 755,
                        "value": null,
                        "raw": "null",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 772,
      "end": 902,
      "test": {
        "type": "BinaryExpression",
        "start": 776,
        "end": 802,
        "left": {
          "type": "BinaryExpression",
          "start": 776,
          "end": 796,
          "left": {
            "type": "Literal",
            "start": 776,
            "end": 780,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          },
          "operator": "/",
          "right": {
            "type": "NewExpression",
            "start": 783,
            "end": 796,
            "callee": {
              "type": "Identifier",
              "start": 787,
              "end": 793,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 794,
                "end": 795,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 801,
          "end": 802,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 804,
        "end": 902,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 808,
            "end": 900,
            "argument": {
              "type": "NewExpression",
              "start": 814,
              "end": 899,
              "callee": {
                "type": "Identifier",
                "start": 818,
                "end": 830,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 831,
                  "end": 898,
                  "left": {
                    "type": "Literal",
                    "start": 831,
                    "end": 873,
                    "value": "#4: null / new Number(1) === 0. Actual: ",
                    "raw": "'#4: null / new Number(1) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 876,
                    "end": 898,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 877,
                      "end": 897,
                      "left": {
                        "type": "Literal",
                        "start": 877,
                        "end": 881,
                        "value": null,
                        "raw": "null",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "/",
                      "right": {
                        "type": "NewExpression",
                        "start": 884,
                        "end": 897,
                        "callee": {
                          "type": "Identifier",
                          "start": 888,
                          "end": 894,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 895,
                            "end": 896,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}