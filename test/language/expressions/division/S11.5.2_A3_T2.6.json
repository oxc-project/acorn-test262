{
  "type": "Program",
  "start": 0,
  "end": 1014,
  "body": [
    {
      "type": "IfStatement",
      "start": 361,
      "end": 497,
      "test": {
        "type": "BinaryExpression",
        "start": 365,
        "end": 396,
        "left": {
          "type": "CallExpression",
          "start": 365,
          "end": 387,
          "callee": {
            "type": "Identifier",
            "start": 365,
            "end": 370,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 371,
              "end": 386,
              "left": {
                "type": "Literal",
                "start": 371,
                "end": 374,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              },
              "operator": "/",
              "right": {
                "type": "Identifier",
                "start": 377,
                "end": 386,
                "name": "undefined"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 392,
          "end": 396,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 398,
        "end": 497,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 402,
            "end": 495,
            "argument": {
              "type": "NewExpression",
              "start": 408,
              "end": 494,
              "callee": {
                "type": "Identifier",
                "start": 412,
                "end": 424,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 425,
                  "end": 493,
                  "left": {
                    "type": "Literal",
                    "start": 425,
                    "end": 473,
                    "value": "#1: \"1\" / undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: \"1\" / undefined === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 476,
                    "end": 493,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 477,
                      "end": 492,
                      "left": {
                        "type": "Literal",
                        "start": 477,
                        "end": 480,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "start": 483,
                        "end": 492,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 509,
      "end": 645,
      "test": {
        "type": "BinaryExpression",
        "start": 513,
        "end": 544,
        "left": {
          "type": "CallExpression",
          "start": 513,
          "end": 535,
          "callee": {
            "type": "Identifier",
            "start": 513,
            "end": 518,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 519,
              "end": 534,
              "left": {
                "type": "Identifier",
                "start": 519,
                "end": 528,
                "name": "undefined"
              },
              "operator": "/",
              "right": {
                "type": "Literal",
                "start": 531,
                "end": 534,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 540,
          "end": 544,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 546,
        "end": 645,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 550,
            "end": 643,
            "argument": {
              "type": "NewExpression",
              "start": 556,
              "end": 642,
              "callee": {
                "type": "Identifier",
                "start": 560,
                "end": 572,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 573,
                  "end": 641,
                  "left": {
                    "type": "Literal",
                    "start": 573,
                    "end": 621,
                    "value": "#2: undefined / \"1\" === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined / \"1\" === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 624,
                    "end": 641,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 625,
                      "end": 640,
                      "left": {
                        "type": "Identifier",
                        "start": 625,
                        "end": 634,
                        "name": "undefined"
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "start": 637,
                        "end": 640,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 657,
      "end": 829,
      "test": {
        "type": "BinaryExpression",
        "start": 661,
        "end": 704,
        "left": {
          "type": "CallExpression",
          "start": 661,
          "end": 695,
          "callee": {
            "type": "Identifier",
            "start": 661,
            "end": 666,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 667,
              "end": 694,
              "left": {
                "type": "NewExpression",
                "start": 667,
                "end": 682,
                "callee": {
                  "type": "Identifier",
                  "start": 671,
                  "end": 677,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 678,
                    "end": 681,
                    "value": "1",
                    "raw": "\"1\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              "operator": "/",
              "right": {
                "type": "Identifier",
                "start": 685,
                "end": 694,
                "name": "undefined"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 700,
          "end": 704,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 706,
        "end": 829,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 710,
            "end": 827,
            "argument": {
              "type": "NewExpression",
              "start": 716,
              "end": 826,
              "callee": {
                "type": "Identifier",
                "start": 720,
                "end": 732,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 733,
                  "end": 825,
                  "left": {
                    "type": "Literal",
                    "start": 733,
                    "end": 793,
                    "value": "#3: new String(\"1\") / undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: new String(\"1\") / undefined === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 796,
                    "end": 825,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 797,
                      "end": 824,
                      "left": {
                        "type": "NewExpression",
                        "start": 797,
                        "end": 812,
                        "callee": {
                          "type": "Identifier",
                          "start": 801,
                          "end": 807,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 808,
                            "end": 811,
                            "value": "1",
                            "raw": "\"1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      "operator": "/",
                      "right": {
                        "type": "Identifier",
                        "start": 815,
                        "end": 824,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 841,
      "end": 1013,
      "test": {
        "type": "BinaryExpression",
        "start": 845,
        "end": 888,
        "left": {
          "type": "CallExpression",
          "start": 845,
          "end": 879,
          "callee": {
            "type": "Identifier",
            "start": 845,
            "end": 850,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 851,
              "end": 878,
              "left": {
                "type": "Identifier",
                "start": 851,
                "end": 860,
                "name": "undefined"
              },
              "operator": "/",
              "right": {
                "type": "NewExpression",
                "start": 863,
                "end": 878,
                "callee": {
                  "type": "Identifier",
                  "start": 867,
                  "end": 873,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 874,
                    "end": 877,
                    "value": "1",
                    "raw": "\"1\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 884,
          "end": 888,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 890,
        "end": 1013,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 894,
            "end": 1011,
            "argument": {
              "type": "NewExpression",
              "start": 900,
              "end": 1010,
              "callee": {
                "type": "Identifier",
                "start": 904,
                "end": 916,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 917,
                  "end": 1009,
                  "left": {
                    "type": "Literal",
                    "start": 917,
                    "end": 977,
                    "value": "#4: undefined / new String(\"1\") === Not-a-Number. Actual: ",
                    "raw": "'#4: undefined / new String(\"1\") === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 980,
                    "end": 1009,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 981,
                      "end": 1008,
                      "left": {
                        "type": "Identifier",
                        "start": 981,
                        "end": 990,
                        "name": "undefined"
                      },
                      "operator": "/",
                      "right": {
                        "type": "NewExpression",
                        "start": 993,
                        "end": 1008,
                        "callee": {
                          "type": "Identifier",
                          "start": 997,
                          "end": 1003,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1004,
                            "end": 1007,
                            "value": "1",
                            "raw": "\"1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}