{
  "type": "Program",
  "start": 0,
  "end": 1922,
  "body": [
    {
      "type": "IfStatement",
      "start": 384,
      "end": 603,
      "test": {
        "type": "BinaryExpression",
        "start": 388,
        "end": 401,
        "left": {
          "type": "BinaryExpression",
          "start": 388,
          "end": 394,
          "left": {
            "type": "UnaryExpression",
            "start": 388,
            "end": 390,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 389,
              "end": 390,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "/",
          "right": {
            "type": "Literal",
            "start": 393,
            "end": 394,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 399,
          "end": 401,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 400,
            "end": 401,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 403,
        "end": 475,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 407,
            "end": 473,
            "argument": {
              "type": "NewExpression",
              "start": 413,
              "end": 472,
              "callee": {
                "type": "Identifier",
                "start": 417,
                "end": 429,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 430,
                  "end": 471,
                  "left": {
                    "type": "Literal",
                    "start": 430,
                    "end": 460,
                    "value": "#1.1: -0 / 1 === 0. Actual: ",
                    "raw": "'#1.1: -0 / 1 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 463,
                    "end": 471,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 464,
                      "end": 470,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 464,
                        "end": 466,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 465,
                          "end": 466,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "start": 469,
                        "end": 470,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 481,
        "end": 603,
        "body": [
          {
            "type": "IfStatement",
            "start": 485,
            "end": 601,
            "test": {
              "type": "BinaryExpression",
              "start": 489,
              "end": 530,
              "left": {
                "type": "BinaryExpression",
                "start": 489,
                "end": 501,
                "left": {
                  "type": "Literal",
                  "start": 489,
                  "end": 490,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "operator": "/",
                "right": {
                  "type": "ParenthesizedExpression",
                  "start": 493,
                  "end": 501,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 494,
                    "end": 500,
                    "left": {
                      "type": "UnaryExpression",
                      "start": 494,
                      "end": 496,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 495,
                        "end": 496,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    },
                    "operator": "/",
                    "right": {
                      "type": "Literal",
                      "start": 499,
                      "end": 500,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                }
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "start": 506,
                "end": 530,
                "object": {
                  "type": "Identifier",
                  "start": 506,
                  "end": 512,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 513,
                  "end": 530,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 532,
              "end": 601,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 538,
                  "end": 597,
                  "argument": {
                    "type": "NewExpression",
                    "start": 544,
                    "end": 596,
                    "callee": {
                      "type": "Identifier",
                      "start": 548,
                      "end": 560,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 561,
                        "end": 595,
                        "value": "#1.2: -0 / 1 === - 0. Actual: +0",
                        "raw": "'#1.2: -0 / 1 === - 0. Actual: +0'",
                        "regex": null,
                        "bigint": null
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 615,
      "end": 839,
      "test": {
        "type": "BinaryExpression",
        "start": 619,
        "end": 633,
        "left": {
          "type": "BinaryExpression",
          "start": 619,
          "end": 626,
          "left": {
            "type": "UnaryExpression",
            "start": 619,
            "end": 621,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 620,
              "end": 621,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "/",
          "right": {
            "type": "UnaryExpression",
            "start": 624,
            "end": 626,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 625,
              "end": 626,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 631,
          "end": 633,
          "operator": "+",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 632,
            "end": 633,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 635,
        "end": 709,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 639,
            "end": 707,
            "argument": {
              "type": "NewExpression",
              "start": 645,
              "end": 706,
              "callee": {
                "type": "Identifier",
                "start": 649,
                "end": 661,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 662,
                  "end": 705,
                  "left": {
                    "type": "Literal",
                    "start": 662,
                    "end": 693,
                    "value": "#2.1: -0 / -1 === 0. Actual: ",
                    "raw": "'#2.1: -0 / -1 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 696,
                    "end": 705,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 697,
                      "end": 704,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 697,
                        "end": 699,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 698,
                          "end": 699,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 702,
                        "end": 704,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 703,
                          "end": 704,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 715,
        "end": 839,
        "body": [
          {
            "type": "IfStatement",
            "start": 719,
            "end": 837,
            "test": {
              "type": "BinaryExpression",
              "start": 723,
              "end": 765,
              "left": {
                "type": "BinaryExpression",
                "start": 723,
                "end": 736,
                "left": {
                  "type": "Literal",
                  "start": 723,
                  "end": 724,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "operator": "/",
                "right": {
                  "type": "ParenthesizedExpression",
                  "start": 727,
                  "end": 736,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 728,
                    "end": 735,
                    "left": {
                      "type": "UnaryExpression",
                      "start": 728,
                      "end": 730,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 729,
                        "end": 730,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    },
                    "operator": "/",
                    "right": {
                      "type": "UnaryExpression",
                      "start": 733,
                      "end": 735,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 734,
                        "end": 735,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "start": 741,
                "end": 765,
                "object": {
                  "type": "Identifier",
                  "start": 741,
                  "end": 747,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 748,
                  "end": 765,
                  "name": "POSITIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 767,
              "end": 837,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 773,
                  "end": 833,
                  "argument": {
                    "type": "NewExpression",
                    "start": 779,
                    "end": 832,
                    "callee": {
                      "type": "Identifier",
                      "start": 783,
                      "end": 795,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 796,
                        "end": 831,
                        "value": "#2.2: -0 / -1 === + 0. Actual: -0",
                        "raw": "'#2.2: -0 / -1 === + 0. Actual: -0'",
                        "regex": null,
                        "bigint": null
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 851,
      "end": 1070,
      "test": {
        "type": "BinaryExpression",
        "start": 855,
        "end": 868,
        "left": {
          "type": "BinaryExpression",
          "start": 855,
          "end": 861,
          "left": {
            "type": "UnaryExpression",
            "start": 855,
            "end": 857,
            "operator": "+",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 856,
              "end": 857,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "/",
          "right": {
            "type": "Literal",
            "start": 860,
            "end": 861,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 866,
          "end": 868,
          "operator": "+",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 867,
            "end": 868,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 870,
        "end": 942,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 874,
            "end": 940,
            "argument": {
              "type": "NewExpression",
              "start": 880,
              "end": 939,
              "callee": {
                "type": "Identifier",
                "start": 884,
                "end": 896,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 897,
                  "end": 938,
                  "left": {
                    "type": "Literal",
                    "start": 897,
                    "end": 927,
                    "value": "#3.1: +0 / 1 === 0. Actual: ",
                    "raw": "'#3.1: +0 / 1 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 930,
                    "end": 938,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 931,
                      "end": 937,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 931,
                        "end": 933,
                        "operator": "+",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 932,
                          "end": 933,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "start": 936,
                        "end": 937,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 948,
        "end": 1070,
        "body": [
          {
            "type": "IfStatement",
            "start": 952,
            "end": 1068,
            "test": {
              "type": "BinaryExpression",
              "start": 956,
              "end": 997,
              "left": {
                "type": "BinaryExpression",
                "start": 956,
                "end": 968,
                "left": {
                  "type": "Literal",
                  "start": 956,
                  "end": 957,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "operator": "/",
                "right": {
                  "type": "ParenthesizedExpression",
                  "start": 960,
                  "end": 968,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 961,
                    "end": 967,
                    "left": {
                      "type": "UnaryExpression",
                      "start": 961,
                      "end": 963,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 962,
                        "end": 963,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    },
                    "operator": "/",
                    "right": {
                      "type": "Literal",
                      "start": 966,
                      "end": 967,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                }
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "start": 973,
                "end": 997,
                "object": {
                  "type": "Identifier",
                  "start": 973,
                  "end": 979,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 980,
                  "end": 997,
                  "name": "POSITIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 999,
              "end": 1068,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 1005,
                  "end": 1064,
                  "argument": {
                    "type": "NewExpression",
                    "start": 1011,
                    "end": 1063,
                    "callee": {
                      "type": "Identifier",
                      "start": 1015,
                      "end": 1027,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1028,
                        "end": 1062,
                        "value": "#3.2: +0 / 1 === + 0. Actual: -0",
                        "raw": "'#3.2: +0 / 1 === + 0. Actual: -0'",
                        "regex": null,
                        "bigint": null
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 1082,
      "end": 1306,
      "test": {
        "type": "BinaryExpression",
        "start": 1086,
        "end": 1100,
        "left": {
          "type": "BinaryExpression",
          "start": 1086,
          "end": 1093,
          "left": {
            "type": "UnaryExpression",
            "start": 1086,
            "end": 1088,
            "operator": "+",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1087,
              "end": 1088,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "/",
          "right": {
            "type": "UnaryExpression",
            "start": 1091,
            "end": 1093,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1092,
              "end": 1093,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1098,
          "end": 1100,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1099,
            "end": 1100,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1102,
        "end": 1176,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1106,
            "end": 1174,
            "argument": {
              "type": "NewExpression",
              "start": 1112,
              "end": 1173,
              "callee": {
                "type": "Identifier",
                "start": 1116,
                "end": 1128,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1129,
                  "end": 1172,
                  "left": {
                    "type": "Literal",
                    "start": 1129,
                    "end": 1160,
                    "value": "#4.1: +0 / -1 === 0. Actual: ",
                    "raw": "'#4.1: +0 / -1 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1163,
                    "end": 1172,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1164,
                      "end": 1171,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1164,
                        "end": 1166,
                        "operator": "+",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1165,
                          "end": 1166,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 1169,
                        "end": 1171,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1170,
                          "end": 1171,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 1182,
        "end": 1306,
        "body": [
          {
            "type": "IfStatement",
            "start": 1186,
            "end": 1304,
            "test": {
              "type": "BinaryExpression",
              "start": 1190,
              "end": 1232,
              "left": {
                "type": "BinaryExpression",
                "start": 1190,
                "end": 1203,
                "left": {
                  "type": "Literal",
                  "start": 1190,
                  "end": 1191,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "operator": "/",
                "right": {
                  "type": "ParenthesizedExpression",
                  "start": 1194,
                  "end": 1203,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1195,
                    "end": 1202,
                    "left": {
                      "type": "UnaryExpression",
                      "start": 1195,
                      "end": 1197,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 1196,
                        "end": 1197,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    },
                    "operator": "/",
                    "right": {
                      "type": "UnaryExpression",
                      "start": 1200,
                      "end": 1202,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 1201,
                        "end": 1202,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "start": 1208,
                "end": 1232,
                "object": {
                  "type": "Identifier",
                  "start": 1208,
                  "end": 1214,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1215,
                  "end": 1232,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1234,
              "end": 1304,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 1240,
                  "end": 1300,
                  "argument": {
                    "type": "NewExpression",
                    "start": 1246,
                    "end": 1299,
                    "callee": {
                      "type": "Identifier",
                      "start": 1250,
                      "end": 1262,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1263,
                        "end": 1298,
                        "value": "#4.2: +0 / -1 === - 0. Actual: +0",
                        "raw": "'#4.2: +0 / -1 === - 0. Actual: +0'",
                        "regex": null,
                        "bigint": null
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 1318,
      "end": 1615,
      "test": {
        "type": "BinaryExpression",
        "start": 1322,
        "end": 1351,
        "left": {
          "type": "BinaryExpression",
          "start": 1322,
          "end": 1344,
          "left": {
            "type": "UnaryExpression",
            "start": 1322,
            "end": 1324,
            "operator": "+",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1323,
              "end": 1324,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "/",
          "right": {
            "type": "UnaryExpression",
            "start": 1327,
            "end": 1344,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "MemberExpression",
              "start": 1328,
              "end": 1344,
              "object": {
                "type": "Identifier",
                "start": 1328,
                "end": 1334,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 1335,
                "end": 1344,
                "name": "MAX_VALUE"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1349,
          "end": 1351,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1350,
            "end": 1351,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1353,
        "end": 1455,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1357,
            "end": 1453,
            "argument": {
              "type": "NewExpression",
              "start": 1363,
              "end": 1452,
              "callee": {
                "type": "Identifier",
                "start": 1367,
                "end": 1379,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1380,
                  "end": 1451,
                  "left": {
                    "type": "Literal",
                    "start": 1380,
                    "end": 1425,
                    "value": "#5.1: 0 / -Number.MAX_VALUE === 0. Actual: ",
                    "raw": "'#5.1: 0 / -Number.MAX_VALUE === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1428,
                    "end": 1451,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1429,
                      "end": 1450,
                      "left": {
                        "type": "Literal",
                        "start": 1429,
                        "end": 1430,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "/",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 1433,
                        "end": 1450,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "MemberExpression",
                          "start": 1434,
                          "end": 1450,
                          "object": {
                            "type": "Identifier",
                            "start": 1434,
                            "end": 1440,
                            "name": "Number"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 1441,
                            "end": 1450,
                            "name": "MAX_VALUE"
                          },
                          "computed": false,
                          "optional": false
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 1461,
        "end": 1615,
        "body": [
          {
            "type": "IfStatement",
            "start": 1465,
            "end": 1613,
            "test": {
              "type": "BinaryExpression",
              "start": 1469,
              "end": 1526,
              "left": {
                "type": "BinaryExpression",
                "start": 1469,
                "end": 1497,
                "left": {
                  "type": "Literal",
                  "start": 1469,
                  "end": 1470,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "operator": "/",
                "right": {
                  "type": "ParenthesizedExpression",
                  "start": 1473,
                  "end": 1497,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1474,
                    "end": 1496,
                    "left": {
                      "type": "UnaryExpression",
                      "start": 1474,
                      "end": 1476,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 1475,
                        "end": 1476,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    },
                    "operator": "/",
                    "right": {
                      "type": "UnaryExpression",
                      "start": 1479,
                      "end": 1496,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "MemberExpression",
                        "start": 1480,
                        "end": 1496,
                        "object": {
                          "type": "Identifier",
                          "start": 1480,
                          "end": 1486,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1487,
                          "end": 1496,
                          "name": "MAX_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      }
                    }
                  }
                }
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "start": 1502,
                "end": 1526,
                "object": {
                  "type": "Identifier",
                  "start": 1502,
                  "end": 1508,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1509,
                  "end": 1526,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1528,
              "end": 1613,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 1534,
                  "end": 1609,
                  "argument": {
                    "type": "NewExpression",
                    "start": 1540,
                    "end": 1608,
                    "callee": {
                      "type": "Identifier",
                      "start": 1544,
                      "end": 1556,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1557,
                        "end": 1607,
                        "value": "#5.2: +0 / -Number.MAX_VALUE === - 0. Actual: +0",
                        "raw": "'#5.2: +0 / -Number.MAX_VALUE === - 0. Actual: +0'",
                        "regex": null,
                        "bigint": null
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 1627,
      "end": 1921,
      "test": {
        "type": "BinaryExpression",
        "start": 1631,
        "end": 1659,
        "left": {
          "type": "BinaryExpression",
          "start": 1631,
          "end": 1652,
          "left": {
            "type": "UnaryExpression",
            "start": 1631,
            "end": 1633,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1632,
              "end": 1633,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "/",
          "right": {
            "type": "MemberExpression",
            "start": 1636,
            "end": 1652,
            "object": {
              "type": "Identifier",
              "start": 1636,
              "end": 1642,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 1643,
              "end": 1652,
              "name": "MIN_VALUE"
            },
            "computed": false,
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1657,
          "end": 1659,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1658,
            "end": 1659,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1661,
        "end": 1763,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1665,
            "end": 1761,
            "argument": {
              "type": "NewExpression",
              "start": 1671,
              "end": 1760,
              "callee": {
                "type": "Identifier",
                "start": 1675,
                "end": 1687,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1688,
                  "end": 1759,
                  "left": {
                    "type": "Literal",
                    "start": 1688,
                    "end": 1733,
                    "value": "#6.1: -0 / Number.MIN_VALUE === 0. Actual: ",
                    "raw": "'#6.1: -0 / Number.MIN_VALUE === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1736,
                    "end": 1759,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1737,
                      "end": 1758,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1737,
                        "end": 1739,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1738,
                          "end": 1739,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "/",
                      "right": {
                        "type": "MemberExpression",
                        "start": 1742,
                        "end": 1758,
                        "object": {
                          "type": "Identifier",
                          "start": 1742,
                          "end": 1748,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1749,
                          "end": 1758,
                          "name": "MIN_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 1769,
        "end": 1921,
        "body": [
          {
            "type": "IfStatement",
            "start": 1773,
            "end": 1919,
            "test": {
              "type": "BinaryExpression",
              "start": 1777,
              "end": 1833,
              "left": {
                "type": "BinaryExpression",
                "start": 1777,
                "end": 1804,
                "left": {
                  "type": "Literal",
                  "start": 1777,
                  "end": 1778,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "operator": "/",
                "right": {
                  "type": "ParenthesizedExpression",
                  "start": 1781,
                  "end": 1804,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1782,
                    "end": 1803,
                    "left": {
                      "type": "UnaryExpression",
                      "start": 1782,
                      "end": 1784,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 1783,
                        "end": 1784,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    },
                    "operator": "/",
                    "right": {
                      "type": "MemberExpression",
                      "start": 1787,
                      "end": 1803,
                      "object": {
                        "type": "Identifier",
                        "start": 1787,
                        "end": 1793,
                        "name": "Number"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1794,
                        "end": 1803,
                        "name": "MIN_VALUE"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              },
              "operator": "!==",
              "right": {
                "type": "MemberExpression",
                "start": 1809,
                "end": 1833,
                "object": {
                  "type": "Identifier",
                  "start": 1809,
                  "end": 1815,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1816,
                  "end": 1833,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1835,
              "end": 1919,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 1841,
                  "end": 1915,
                  "argument": {
                    "type": "NewExpression",
                    "start": 1847,
                    "end": 1914,
                    "callee": {
                      "type": "Identifier",
                      "start": 1851,
                      "end": 1863,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1864,
                        "end": 1913,
                        "value": "#6.2: -0 / Number.MIN_VALUE === - 0. Actual: +0",
                        "raw": "'#6.2: -0 / Number.MIN_VALUE === - 0. Actual: +0'",
                        "regex": null,
                        "bigint": null
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}