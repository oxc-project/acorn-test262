{
  "type": "Program",
  "start": 0,
  "end": 1293,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 307,
      "end": 313,
      "expression": {
        "type": "AssignmentExpression",
        "start": 307,
        "end": 312,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 307,
          "end": 308,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 311,
          "end": 312,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 314,
      "end": 394,
      "test": {
        "type": "BinaryExpression",
        "start": 318,
        "end": 325,
        "left": {
          "type": "Identifier",
          "start": 318,
          "end": 319,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 324,
          "end": 325,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 327,
        "end": 394,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 331,
            "end": 392,
            "argument": {
              "type": "NewExpression",
              "start": 337,
              "end": 391,
              "callee": {
                "type": "Identifier",
                "start": 341,
                "end": 353,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 354,
                  "end": 390,
                  "left": {
                    "type": "Literal",
                    "start": 354,
                    "end": 384,
                    "value": "#1: x = 1; x === 1. Actual: ",
                    "raw": "'#1: x = 1; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 387,
                    "end": 390,
                    "expression": {
                      "type": "Identifier",
                      "start": 388,
                      "end": 389,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 406,
      "end": 416,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 410,
          "end": 415,
          "id": {
            "type": "Identifier",
            "start": 410,
            "end": 411,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 414,
            "end": 415,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 417,
      "end": 501,
      "test": {
        "type": "BinaryExpression",
        "start": 421,
        "end": 428,
        "left": {
          "type": "Identifier",
          "start": 421,
          "end": 422,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 427,
          "end": 428,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 430,
        "end": 501,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 434,
            "end": 499,
            "argument": {
              "type": "NewExpression",
              "start": 440,
              "end": 498,
              "callee": {
                "type": "Identifier",
                "start": 444,
                "end": 456,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 457,
                  "end": 497,
                  "left": {
                    "type": "Literal",
                    "start": 457,
                    "end": 491,
                    "value": "#2: var x = 1; x === 1. Actual: ",
                    "raw": "'#2: var x = 1; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 494,
                    "end": 497,
                    "expression": {
                      "type": "Identifier",
                      "start": 495,
                      "end": 496,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 513,
      "end": 519,
      "expression": {
        "type": "AssignmentExpression",
        "start": 513,
        "end": 518,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 513,
          "end": 514,
          "name": "y"
        },
        "right": {
          "type": "Literal",
          "start": 517,
          "end": 518,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 520,
      "end": 526,
      "expression": {
        "type": "AssignmentExpression",
        "start": 520,
        "end": 525,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 520,
          "end": 521,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 524,
          "end": 525,
          "name": "y"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 527,
      "end": 614,
      "test": {
        "type": "BinaryExpression",
        "start": 531,
        "end": 538,
        "left": {
          "type": "Identifier",
          "start": 531,
          "end": 532,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 537,
          "end": 538,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 540,
        "end": 614,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 544,
            "end": 612,
            "argument": {
              "type": "NewExpression",
              "start": 550,
              "end": 611,
              "callee": {
                "type": "Identifier",
                "start": 554,
                "end": 566,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 567,
                  "end": 610,
                  "left": {
                    "type": "Literal",
                    "start": 567,
                    "end": 604,
                    "value": "#3: y = 1; x = y; x === 1. Actual: ",
                    "raw": "'#3: y = 1; x = y; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 607,
                    "end": 610,
                    "expression": {
                      "type": "Identifier",
                      "start": 608,
                      "end": 609,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 626,
      "end": 636,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 630,
          "end": 635,
          "id": {
            "type": "Identifier",
            "start": 630,
            "end": 631,
            "name": "y"
          },
          "init": {
            "type": "Literal",
            "start": 634,
            "end": 635,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 637,
      "end": 647,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 641,
          "end": 646,
          "id": {
            "type": "Identifier",
            "start": 641,
            "end": 642,
            "name": "x"
          },
          "init": {
            "type": "Identifier",
            "start": 645,
            "end": 646,
            "name": "y"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 648,
      "end": 743,
      "test": {
        "type": "BinaryExpression",
        "start": 652,
        "end": 659,
        "left": {
          "type": "Identifier",
          "start": 652,
          "end": 653,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 658,
          "end": 659,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 661,
        "end": 743,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 665,
            "end": 741,
            "argument": {
              "type": "NewExpression",
              "start": 671,
              "end": 740,
              "callee": {
                "type": "Identifier",
                "start": 675,
                "end": 687,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 688,
                  "end": 739,
                  "left": {
                    "type": "Literal",
                    "start": 688,
                    "end": 733,
                    "value": "#4: var y = 1; var x = y; x === 1. Actual: ",
                    "raw": "'#4: var y = 1; var x = y; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 736,
                    "end": 739,
                    "expression": {
                      "type": "Identifier",
                      "start": 737,
                      "end": 738,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 755,
      "end": 782,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 759,
          "end": 781,
          "id": {
            "type": "Identifier",
            "start": 759,
            "end": 766,
            "name": "objectx"
          },
          "init": {
            "type": "NewExpression",
            "start": 769,
            "end": 781,
            "callee": {
              "type": "Identifier",
              "start": 773,
              "end": 779,
              "name": "Object"
            },
            "arguments": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 783,
      "end": 810,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 787,
          "end": 809,
          "id": {
            "type": "Identifier",
            "start": 787,
            "end": 794,
            "name": "objecty"
          },
          "init": {
            "type": "NewExpression",
            "start": 797,
            "end": 809,
            "callee": {
              "type": "Identifier",
              "start": 801,
              "end": 807,
              "name": "Object"
            },
            "arguments": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 811,
      "end": 830,
      "expression": {
        "type": "AssignmentExpression",
        "start": 811,
        "end": 829,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 811,
          "end": 823,
          "object": {
            "type": "Identifier",
            "start": 811,
            "end": 818,
            "name": "objecty"
          },
          "property": {
            "type": "Identifier",
            "start": 819,
            "end": 823,
            "name": "prop"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 826,
          "end": 829,
          "value": 1.1,
          "raw": "1.1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 831,
      "end": 859,
      "expression": {
        "type": "AssignmentExpression",
        "start": 831,
        "end": 858,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 831,
          "end": 843,
          "object": {
            "type": "Identifier",
            "start": 831,
            "end": 838,
            "name": "objectx"
          },
          "property": {
            "type": "Identifier",
            "start": 839,
            "end": 843,
            "name": "prop"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 846,
          "end": 858,
          "object": {
            "type": "Identifier",
            "start": 846,
            "end": 853,
            "name": "objecty"
          },
          "property": {
            "type": "Identifier",
            "start": 854,
            "end": 858,
            "name": "prop"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 860,
      "end": 1292,
      "test": {
        "type": "BinaryExpression",
        "start": 864,
        "end": 893,
        "left": {
          "type": "MemberExpression",
          "start": 864,
          "end": 876,
          "object": {
            "type": "Identifier",
            "start": 864,
            "end": 871,
            "name": "objectx"
          },
          "property": {
            "type": "Identifier",
            "start": 872,
            "end": 876,
            "name": "prop"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "start": 881,
          "end": 893,
          "object": {
            "type": "Identifier",
            "start": 881,
            "end": 888,
            "name": "objecty"
          },
          "property": {
            "type": "Identifier",
            "start": 889,
            "end": 893,
            "name": "prop"
          },
          "computed": false,
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 895,
        "end": 1091,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 899,
            "end": 1089,
            "argument": {
              "type": "NewExpression",
              "start": 905,
              "end": 1088,
              "callee": {
                "type": "Identifier",
                "start": 909,
                "end": 921,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 922,
                  "end": 1087,
                  "left": {
                    "type": "Literal",
                    "start": 922,
                    "end": 1070,
                    "value": "#5: var objectx = new Object(); var objecty = new Object(); objecty.prop = 1; objectx.prop = objecty.prop; objectx.prop === objecty.prop. Actual: ",
                    "raw": "'#5: var objectx = new Object(); var objecty = new Object(); objecty.prop = 1; objectx.prop = objecty.prop; objectx.prop === objecty.prop. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1073,
                    "end": 1087,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1074,
                      "end": 1086,
                      "object": {
                        "type": "Identifier",
                        "start": 1074,
                        "end": 1081,
                        "name": "objectx"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1082,
                        "end": 1086,
                        "name": "prop"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 1097,
        "end": 1292,
        "body": [
          {
            "type": "IfStatement",
            "start": 1101,
            "end": 1289,
            "test": {
              "type": "BinaryExpression",
              "start": 1105,
              "end": 1124,
              "left": {
                "type": "Identifier",
                "start": 1105,
                "end": 1112,
                "name": "objectx"
              },
              "operator": "===",
              "right": {
                "type": "Identifier",
                "start": 1117,
                "end": 1124,
                "name": "objecty"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1126,
              "end": 1289,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 1132,
                  "end": 1285,
                  "argument": {
                    "type": "NewExpression",
                    "start": 1138,
                    "end": 1284,
                    "callee": {
                      "type": "Identifier",
                      "start": 1142,
                      "end": 1154,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1155,
                        "end": 1283,
                        "value": "#5: var objectx = new Object(); var objecty = new Object(); objecty.prop = 1; objectx.prop = objecty.prop; objectx !== objecty",
                        "raw": "'#5: var objectx = new Object(); var objecty = new Object(); objecty.prop = 1; objectx.prop = objecty.prop; objectx !== objecty'",
                        "regex": null,
                        "bigint": null
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}