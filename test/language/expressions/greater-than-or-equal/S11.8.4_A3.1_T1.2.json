{
  "type": "Program",
  "start": 0,
  "end": 863,
  "body": [
    {
      "type": "IfStatement",
      "start": 438,
      "end": 511,
      "test": {
        "type": "BinaryExpression",
        "start": 442,
        "end": 457,
        "left": {
          "type": "BinaryExpression",
          "start": 442,
          "end": 448,
          "left": {
            "type": "Literal",
            "start": 442,
            "end": 443,
            "value": 1,
            "raw": "1"
          },
          "operator": ">=",
          "right": {
            "type": "Literal",
            "start": 447,
            "end": 448,
            "value": 1,
            "raw": "1"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 453,
          "end": 457,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 459,
        "end": 511,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 463,
            "end": 509,
            "argument": {
              "type": "NewExpression",
              "start": 469,
              "end": 508,
              "callee": {
                "type": "Identifier",
                "start": 473,
                "end": 485,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 486,
                  "end": 507,
                  "value": "#1: 1 >= 1 === true",
                  "raw": "'#1: 1 >= 1 === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 523,
      "end": 620,
      "test": {
        "type": "BinaryExpression",
        "start": 527,
        "end": 554,
        "left": {
          "type": "BinaryExpression",
          "start": 527,
          "end": 545,
          "left": {
            "type": "NewExpression",
            "start": 527,
            "end": 540,
            "callee": {
              "type": "Identifier",
              "start": 531,
              "end": 537,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 538,
                "end": 539,
                "value": 1,
                "raw": "1"
              }
            ]
          },
          "operator": ">=",
          "right": {
            "type": "Literal",
            "start": 544,
            "end": 545,
            "value": 1,
            "raw": "1"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 550,
          "end": 554,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 556,
        "end": 620,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 560,
            "end": 618,
            "argument": {
              "type": "NewExpression",
              "start": 566,
              "end": 617,
              "callee": {
                "type": "Identifier",
                "start": 570,
                "end": 582,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 583,
                  "end": 616,
                  "value": "#2: new Number(1) >= 1 === true",
                  "raw": "'#2: new Number(1) >= 1 === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 632,
      "end": 729,
      "test": {
        "type": "BinaryExpression",
        "start": 636,
        "end": 663,
        "left": {
          "type": "BinaryExpression",
          "start": 636,
          "end": 654,
          "left": {
            "type": "Literal",
            "start": 636,
            "end": 637,
            "value": 1,
            "raw": "1"
          },
          "operator": ">=",
          "right": {
            "type": "NewExpression",
            "start": 641,
            "end": 654,
            "callee": {
              "type": "Identifier",
              "start": 645,
              "end": 651,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 652,
                "end": 653,
                "value": 1,
                "raw": "1"
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 659,
          "end": 663,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 665,
        "end": 729,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 669,
            "end": 727,
            "argument": {
              "type": "NewExpression",
              "start": 675,
              "end": 726,
              "callee": {
                "type": "Identifier",
                "start": 679,
                "end": 691,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 692,
                  "end": 725,
                  "value": "#3: 1 >= new Number(1) === true",
                  "raw": "'#3: 1 >= new Number(1) === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 741,
      "end": 862,
      "test": {
        "type": "BinaryExpression",
        "start": 745,
        "end": 784,
        "left": {
          "type": "BinaryExpression",
          "start": 745,
          "end": 775,
          "left": {
            "type": "NewExpression",
            "start": 745,
            "end": 758,
            "callee": {
              "type": "Identifier",
              "start": 749,
              "end": 755,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 756,
                "end": 757,
                "value": 1,
                "raw": "1"
              }
            ]
          },
          "operator": ">=",
          "right": {
            "type": "NewExpression",
            "start": 762,
            "end": 775,
            "callee": {
              "type": "Identifier",
              "start": 766,
              "end": 772,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 773,
                "end": 774,
                "value": 1,
                "raw": "1"
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 780,
          "end": 784,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 786,
        "end": 862,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 790,
            "end": 860,
            "argument": {
              "type": "NewExpression",
              "start": 796,
              "end": 859,
              "callee": {
                "type": "Identifier",
                "start": 800,
                "end": 812,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 813,
                  "end": 858,
                  "value": "#4: new Number(1) >= new Number(1) === true",
                  "raw": "'#4: new Number(1) >= new Number(1) === true'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}