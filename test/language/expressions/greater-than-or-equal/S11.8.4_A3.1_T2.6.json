{
  "type": "Program",
  "start": 0,
  "end": 940,
  "body": [
    {
      "type": "IfStatement",
      "start": 475,
      "end": 570,
      "test": {
        "type": "BinaryExpression",
        "start": 479,
        "end": 505,
        "left": {
          "type": "BinaryExpression",
          "start": 479,
          "end": 495,
          "left": {
            "type": "Literal",
            "start": 479,
            "end": 482,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          },
          "operator": ">=",
          "right": {
            "type": "Identifier",
            "start": 486,
            "end": 495,
            "name": "undefined"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 500,
          "end": 505,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 507,
        "end": 570,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 511,
            "end": 568,
            "argument": {
              "type": "NewExpression",
              "start": 517,
              "end": 567,
              "callee": {
                "type": "Identifier",
                "start": 521,
                "end": 533,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 534,
                  "end": 566,
                  "value": "#1: \"1\" >= undefined === false",
                  "raw": "'#1: \"1\" >= undefined === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 582,
      "end": 677,
      "test": {
        "type": "BinaryExpression",
        "start": 586,
        "end": 612,
        "left": {
          "type": "BinaryExpression",
          "start": 586,
          "end": 602,
          "left": {
            "type": "Identifier",
            "start": 586,
            "end": 595,
            "name": "undefined"
          },
          "operator": ">=",
          "right": {
            "type": "Literal",
            "start": 599,
            "end": 602,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 607,
          "end": 612,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 614,
        "end": 677,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 618,
            "end": 675,
            "argument": {
              "type": "NewExpression",
              "start": 624,
              "end": 674,
              "callee": {
                "type": "Identifier",
                "start": 628,
                "end": 640,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 641,
                  "end": 673,
                  "value": "#2: undefined >= \"1\" === false",
                  "raw": "'#2: undefined >= \"1\" === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 689,
      "end": 808,
      "test": {
        "type": "BinaryExpression",
        "start": 693,
        "end": 731,
        "left": {
          "type": "BinaryExpression",
          "start": 693,
          "end": 721,
          "left": {
            "type": "NewExpression",
            "start": 693,
            "end": 708,
            "callee": {
              "type": "Identifier",
              "start": 697,
              "end": 703,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 704,
                "end": 707,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": ">=",
          "right": {
            "type": "Identifier",
            "start": 712,
            "end": 721,
            "name": "undefined"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 726,
          "end": 731,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 733,
        "end": 808,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 737,
            "end": 806,
            "argument": {
              "type": "NewExpression",
              "start": 743,
              "end": 805,
              "callee": {
                "type": "Identifier",
                "start": 747,
                "end": 759,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 760,
                  "end": 804,
                  "value": "#3: new String(\"1\") >= undefined === false",
                  "raw": "'#3: new String(\"1\") >= undefined === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 820,
      "end": 939,
      "test": {
        "type": "BinaryExpression",
        "start": 824,
        "end": 862,
        "left": {
          "type": "BinaryExpression",
          "start": 824,
          "end": 852,
          "left": {
            "type": "Identifier",
            "start": 824,
            "end": 833,
            "name": "undefined"
          },
          "operator": ">=",
          "right": {
            "type": "NewExpression",
            "start": 837,
            "end": 852,
            "callee": {
              "type": "Identifier",
              "start": 841,
              "end": 847,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 848,
                "end": 851,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 857,
          "end": 862,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 864,
        "end": 939,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 868,
            "end": 937,
            "argument": {
              "type": "NewExpression",
              "start": 874,
              "end": 936,
              "callee": {
                "type": "Identifier",
                "start": 878,
                "end": 890,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 891,
                  "end": 935,
                  "value": "#4: undefined >= new String(\"1\") === false",
                  "raw": "'#4: undefined >= new String(\"1\") === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}