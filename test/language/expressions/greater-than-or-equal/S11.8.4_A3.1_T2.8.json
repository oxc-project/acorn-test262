{
  "type": "Program",
  "start": 0,
  "end": 953,
  "body": [
    {
      "type": "IfStatement",
      "start": 476,
      "end": 573,
      "test": {
        "type": "BinaryExpression",
        "start": 480,
        "end": 507,
        "left": {
          "type": "BinaryExpression",
          "start": 480,
          "end": 497,
          "left": {
            "type": "Literal",
            "start": 480,
            "end": 484,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          "operator": ">=",
          "right": {
            "type": "Identifier",
            "start": 488,
            "end": 497,
            "name": "undefined"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 502,
          "end": 507,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 509,
        "end": 573,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 513,
            "end": 571,
            "argument": {
              "type": "NewExpression",
              "start": 519,
              "end": 570,
              "callee": {
                "type": "Identifier",
                "start": 523,
                "end": 535,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 536,
                  "end": 569,
                  "value": "#1: true >= undefined === false",
                  "raw": "'#1: true >= undefined === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 585,
      "end": 682,
      "test": {
        "type": "BinaryExpression",
        "start": 589,
        "end": 616,
        "left": {
          "type": "BinaryExpression",
          "start": 589,
          "end": 606,
          "left": {
            "type": "Identifier",
            "start": 589,
            "end": 598,
            "name": "undefined"
          },
          "operator": ">=",
          "right": {
            "type": "Literal",
            "start": 602,
            "end": 606,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 611,
          "end": 616,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 618,
        "end": 682,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 622,
            "end": 680,
            "argument": {
              "type": "NewExpression",
              "start": 628,
              "end": 679,
              "callee": {
                "type": "Identifier",
                "start": 632,
                "end": 644,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 645,
                  "end": 678,
                  "value": "#2: undefined >= true === false",
                  "raw": "'#2: undefined >= true === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 694,
      "end": 817,
      "test": {
        "type": "BinaryExpression",
        "start": 698,
        "end": 738,
        "left": {
          "type": "BinaryExpression",
          "start": 698,
          "end": 728,
          "left": {
            "type": "NewExpression",
            "start": 698,
            "end": 715,
            "callee": {
              "type": "Identifier",
              "start": 702,
              "end": 709,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 710,
                "end": 714,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": ">=",
          "right": {
            "type": "Identifier",
            "start": 719,
            "end": 728,
            "name": "undefined"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 733,
          "end": 738,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 740,
        "end": 817,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 744,
            "end": 815,
            "argument": {
              "type": "NewExpression",
              "start": 750,
              "end": 814,
              "callee": {
                "type": "Identifier",
                "start": 754,
                "end": 766,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 767,
                  "end": 813,
                  "value": "#3: new Boolean(true) >= undefined === false",
                  "raw": "'#3: new Boolean(true) >= undefined === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 829,
      "end": 952,
      "test": {
        "type": "BinaryExpression",
        "start": 833,
        "end": 873,
        "left": {
          "type": "BinaryExpression",
          "start": 833,
          "end": 863,
          "left": {
            "type": "Identifier",
            "start": 833,
            "end": 842,
            "name": "undefined"
          },
          "operator": ">=",
          "right": {
            "type": "NewExpression",
            "start": 846,
            "end": 863,
            "callee": {
              "type": "Identifier",
              "start": 850,
              "end": 857,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 858,
                "end": 862,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 868,
          "end": 873,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 875,
        "end": 952,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 879,
            "end": 950,
            "argument": {
              "type": "NewExpression",
              "start": 885,
              "end": 949,
              "callee": {
                "type": "Identifier",
                "start": 889,
                "end": 901,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 902,
                  "end": 948,
                  "value": "#4: undefined >= new Boolean(true) === false",
                  "raw": "'#4: undefined >= new Boolean(true) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}