{
  "type": "Program",
  "start": 0,
  "end": 958,
  "body": [
    {
      "type": "IfStatement",
      "start": 437,
      "end": 522,
      "test": {
        "type": "BinaryExpression",
        "start": 441,
        "end": 452,
        "left": {
          "type": "BinaryExpression",
          "start": 441,
          "end": 446,
          "left": {
            "type": "Literal",
            "start": 441,
            "end": 442,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 445,
            "end": 446,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 451,
          "end": 452,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 454,
        "end": 522,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 458,
            "end": 520,
            "argument": {
              "type": "NewExpression",
              "start": 464,
              "end": 519,
              "callee": {
                "type": "Identifier",
                "start": 468,
                "end": 480,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 481,
                  "end": 518,
                  "left": {
                    "type": "Literal",
                    "start": 481,
                    "end": 508,
                    "value": "#1: 1 + 1 === 2. Actual: ",
                    "raw": "'#1: 1 + 1 === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 511,
                    "end": 518,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 512,
                      "end": 517,
                      "left": {
                        "type": "Literal",
                        "start": 512,
                        "end": 513,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 516,
                        "end": 517,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 534,
      "end": 655,
      "test": {
        "type": "BinaryExpression",
        "start": 538,
        "end": 561,
        "left": {
          "type": "BinaryExpression",
          "start": 538,
          "end": 555,
          "left": {
            "type": "NewExpression",
            "start": 538,
            "end": 551,
            "callee": {
              "type": "Identifier",
              "start": 542,
              "end": 548,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 549,
                "end": 550,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 554,
            "end": 555,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 560,
          "end": 561,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 563,
        "end": 655,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 567,
            "end": 653,
            "argument": {
              "type": "NewExpression",
              "start": 573,
              "end": 652,
              "callee": {
                "type": "Identifier",
                "start": 577,
                "end": 589,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 590,
                  "end": 651,
                  "left": {
                    "type": "Literal",
                    "start": 590,
                    "end": 629,
                    "value": "#2: new Number(1) + 1 === 2. Actual: ",
                    "raw": "'#2: new Number(1) + 1 === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 632,
                    "end": 651,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 633,
                      "end": 650,
                      "left": {
                        "type": "NewExpression",
                        "start": 633,
                        "end": 646,
                        "callee": {
                          "type": "Identifier",
                          "start": 637,
                          "end": 643,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 644,
                            "end": 645,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 649,
                        "end": 650,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 667,
      "end": 788,
      "test": {
        "type": "BinaryExpression",
        "start": 671,
        "end": 694,
        "left": {
          "type": "BinaryExpression",
          "start": 671,
          "end": 688,
          "left": {
            "type": "Literal",
            "start": 671,
            "end": 672,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": "+",
          "right": {
            "type": "NewExpression",
            "start": 675,
            "end": 688,
            "callee": {
              "type": "Identifier",
              "start": 679,
              "end": 685,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 686,
                "end": 687,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 693,
          "end": 694,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 696,
        "end": 788,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 700,
            "end": 786,
            "argument": {
              "type": "NewExpression",
              "start": 706,
              "end": 785,
              "callee": {
                "type": "Identifier",
                "start": 710,
                "end": 722,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 723,
                  "end": 784,
                  "left": {
                    "type": "Literal",
                    "start": 723,
                    "end": 762,
                    "value": "#3: 1 + new Number(1) === 2. Actual: ",
                    "raw": "'#3: 1 + new Number(1) === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 765,
                    "end": 784,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 766,
                      "end": 783,
                      "left": {
                        "type": "Literal",
                        "start": 766,
                        "end": 767,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "NewExpression",
                        "start": 770,
                        "end": 783,
                        "callee": {
                          "type": "Identifier",
                          "start": 774,
                          "end": 780,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 781,
                            "end": 782,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 800,
      "end": 957,
      "test": {
        "type": "BinaryExpression",
        "start": 804,
        "end": 839,
        "left": {
          "type": "BinaryExpression",
          "start": 804,
          "end": 833,
          "left": {
            "type": "NewExpression",
            "start": 804,
            "end": 817,
            "callee": {
              "type": "Identifier",
              "start": 808,
              "end": 814,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 815,
                "end": 816,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "NewExpression",
            "start": 820,
            "end": 833,
            "callee": {
              "type": "Identifier",
              "start": 824,
              "end": 830,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 831,
                "end": 832,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 838,
          "end": 839,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 841,
        "end": 957,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 845,
            "end": 955,
            "argument": {
              "type": "NewExpression",
              "start": 851,
              "end": 954,
              "callee": {
                "type": "Identifier",
                "start": 855,
                "end": 867,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 868,
                  "end": 953,
                  "left": {
                    "type": "Literal",
                    "start": 868,
                    "end": 919,
                    "value": "#4: new Number(1) + new Number(1) === 2. Actual: ",
                    "raw": "'#4: new Number(1) + new Number(1) === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 922,
                    "end": 953,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 923,
                      "end": 952,
                      "left": {
                        "type": "NewExpression",
                        "start": 923,
                        "end": 936,
                        "callee": {
                          "type": "Identifier",
                          "start": 927,
                          "end": 933,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 934,
                            "end": 935,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "NewExpression",
                        "start": 939,
                        "end": 952,
                        "callee": {
                          "type": "Identifier",
                          "start": 943,
                          "end": 949,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 950,
                            "end": 951,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}