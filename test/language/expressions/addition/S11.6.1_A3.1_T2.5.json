{
  "type": "Program",
  "start": 0,
  "end": 997,
  "body": [
    {
      "type": "IfStatement",
      "start": 470,
      "end": 573,
      "test": {
        "type": "BinaryExpression",
        "start": 474,
        "end": 491,
        "left": {
          "type": "BinaryExpression",
          "start": 474,
          "end": 485,
          "left": {
            "type": "Literal",
            "start": 474,
            "end": 478,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 481,
            "end": 485,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 490,
          "end": 491,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 493,
        "end": 573,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 497,
            "end": 571,
            "argument": {
              "type": "NewExpression",
              "start": 503,
              "end": 570,
              "callee": {
                "type": "Identifier",
                "start": 507,
                "end": 519,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 520,
                  "end": 569,
                  "left": {
                    "type": "Literal",
                    "start": 520,
                    "end": 553,
                    "value": "#1: true + null === 1. Actual: ",
                    "raw": "'#1: true + null === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 556,
                    "end": 569,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 557,
                      "end": 568,
                      "left": {
                        "type": "Literal",
                        "start": 557,
                        "end": 561,
                        "value": true,
                        "raw": "true",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 564,
                        "end": 568,
                        "value": null,
                        "raw": "null",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 585,
      "end": 688,
      "test": {
        "type": "BinaryExpression",
        "start": 589,
        "end": 606,
        "left": {
          "type": "BinaryExpression",
          "start": 589,
          "end": 600,
          "left": {
            "type": "Literal",
            "start": 589,
            "end": 593,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 596,
            "end": 600,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 605,
          "end": 606,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 608,
        "end": 688,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 612,
            "end": 686,
            "argument": {
              "type": "NewExpression",
              "start": 618,
              "end": 685,
              "callee": {
                "type": "Identifier",
                "start": 622,
                "end": 634,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 635,
                  "end": 684,
                  "left": {
                    "type": "Literal",
                    "start": 635,
                    "end": 668,
                    "value": "#2: null + true === 1. Actual: ",
                    "raw": "'#2: null + true === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 671,
                    "end": 684,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 672,
                      "end": 683,
                      "left": {
                        "type": "Literal",
                        "start": 672,
                        "end": 676,
                        "value": null,
                        "raw": "null",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 679,
                        "end": 683,
                        "value": true,
                        "raw": "true",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 700,
      "end": 842,
      "test": {
        "type": "BinaryExpression",
        "start": 704,
        "end": 734,
        "left": {
          "type": "BinaryExpression",
          "start": 704,
          "end": 728,
          "left": {
            "type": "NewExpression",
            "start": 704,
            "end": 721,
            "callee": {
              "type": "Identifier",
              "start": 708,
              "end": 715,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 716,
                "end": 720,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 724,
            "end": 728,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 733,
          "end": 734,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 736,
        "end": 842,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 740,
            "end": 840,
            "argument": {
              "type": "NewExpression",
              "start": 746,
              "end": 839,
              "callee": {
                "type": "Identifier",
                "start": 750,
                "end": 762,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 763,
                  "end": 838,
                  "left": {
                    "type": "Literal",
                    "start": 763,
                    "end": 809,
                    "value": "#3: new Boolean(true) + null === 1. Actual: ",
                    "raw": "'#3: new Boolean(true) + null === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 812,
                    "end": 838,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 813,
                      "end": 837,
                      "left": {
                        "type": "NewExpression",
                        "start": 813,
                        "end": 830,
                        "callee": {
                          "type": "Identifier",
                          "start": 817,
                          "end": 824,
                          "name": "Boolean"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 825,
                            "end": 829,
                            "value": true,
                            "raw": "true",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 833,
                        "end": 837,
                        "value": null,
                        "raw": "null",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 854,
      "end": 996,
      "test": {
        "type": "BinaryExpression",
        "start": 858,
        "end": 888,
        "left": {
          "type": "BinaryExpression",
          "start": 858,
          "end": 882,
          "left": {
            "type": "Literal",
            "start": 858,
            "end": 862,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          },
          "operator": "+",
          "right": {
            "type": "NewExpression",
            "start": 865,
            "end": 882,
            "callee": {
              "type": "Identifier",
              "start": 869,
              "end": 876,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 877,
                "end": 881,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 887,
          "end": 888,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 890,
        "end": 996,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 894,
            "end": 994,
            "argument": {
              "type": "NewExpression",
              "start": 900,
              "end": 993,
              "callee": {
                "type": "Identifier",
                "start": 904,
                "end": 916,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 917,
                  "end": 992,
                  "left": {
                    "type": "Literal",
                    "start": 917,
                    "end": 963,
                    "value": "#4: null + new Boolean(true) === 1. Actual: ",
                    "raw": "'#4: null + new Boolean(true) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 966,
                    "end": 992,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 967,
                      "end": 991,
                      "left": {
                        "type": "Literal",
                        "start": 967,
                        "end": 971,
                        "value": null,
                        "raw": "null",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "NewExpression",
                        "start": 974,
                        "end": 991,
                        "callee": {
                          "type": "Identifier",
                          "start": 978,
                          "end": 985,
                          "name": "Boolean"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 986,
                            "end": 990,
                            "value": true,
                            "raw": "true",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}