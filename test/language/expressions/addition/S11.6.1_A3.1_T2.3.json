{
  "type": "Program",
  "start": 0,
  "end": 1103,
  "body": [
    {
      "type": "IfStatement",
      "start": 474,
      "end": 604,
      "test": {
        "type": "BinaryExpression",
        "start": 478,
        "end": 507,
        "left": {
          "type": "CallExpression",
          "start": 478,
          "end": 498,
          "callee": {
            "type": "Identifier",
            "start": 478,
            "end": 483,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 484,
              "end": 497,
              "left": {
                "type": "Literal",
                "start": 484,
                "end": 485,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "start": 488,
                "end": 497,
                "name": "undefined"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 503,
          "end": 507,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 509,
        "end": 604,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 513,
            "end": 602,
            "argument": {
              "type": "NewExpression",
              "start": 519,
              "end": 601,
              "callee": {
                "type": "Identifier",
                "start": 523,
                "end": 535,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 536,
                  "end": 600,
                  "left": {
                    "type": "Literal",
                    "start": 536,
                    "end": 582,
                    "value": "#1: 1 + undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: 1 + undefined === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 585,
                    "end": 600,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 586,
                      "end": 599,
                      "left": {
                        "type": "Literal",
                        "start": 586,
                        "end": 587,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 590,
                        "end": 599,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 616,
      "end": 746,
      "test": {
        "type": "BinaryExpression",
        "start": 620,
        "end": 649,
        "left": {
          "type": "CallExpression",
          "start": 620,
          "end": 640,
          "callee": {
            "type": "Identifier",
            "start": 620,
            "end": 625,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 626,
              "end": 639,
              "left": {
                "type": "Identifier",
                "start": 626,
                "end": 635,
                "name": "undefined"
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "start": 638,
                "end": 639,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 645,
          "end": 649,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 651,
        "end": 746,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 655,
            "end": 744,
            "argument": {
              "type": "NewExpression",
              "start": 661,
              "end": 743,
              "callee": {
                "type": "Identifier",
                "start": 665,
                "end": 677,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 678,
                  "end": 742,
                  "left": {
                    "type": "Literal",
                    "start": 678,
                    "end": 724,
                    "value": "#2: undefined + 1 === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined + 1 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 727,
                    "end": 742,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 728,
                      "end": 741,
                      "left": {
                        "type": "Identifier",
                        "start": 728,
                        "end": 737,
                        "name": "undefined"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 740,
                        "end": 741,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 758,
      "end": 924,
      "test": {
        "type": "BinaryExpression",
        "start": 762,
        "end": 803,
        "left": {
          "type": "CallExpression",
          "start": 762,
          "end": 794,
          "callee": {
            "type": "Identifier",
            "start": 762,
            "end": 767,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 768,
              "end": 793,
              "left": {
                "type": "NewExpression",
                "start": 768,
                "end": 781,
                "callee": {
                  "type": "Identifier",
                  "start": 772,
                  "end": 778,
                  "name": "Number"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 779,
                    "end": 780,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "start": 784,
                "end": 793,
                "name": "undefined"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 799,
          "end": 803,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 805,
        "end": 924,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 809,
            "end": 922,
            "argument": {
              "type": "NewExpression",
              "start": 815,
              "end": 921,
              "callee": {
                "type": "Identifier",
                "start": 819,
                "end": 831,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 832,
                  "end": 920,
                  "left": {
                    "type": "Literal",
                    "start": 832,
                    "end": 890,
                    "value": "#3: new Number(1) + undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: new Number(1) + undefined === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 893,
                    "end": 920,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 894,
                      "end": 919,
                      "left": {
                        "type": "NewExpression",
                        "start": 894,
                        "end": 907,
                        "callee": {
                          "type": "Identifier",
                          "start": 898,
                          "end": 904,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 905,
                            "end": 906,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 910,
                        "end": 919,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 936,
      "end": 1102,
      "test": {
        "type": "BinaryExpression",
        "start": 940,
        "end": 981,
        "left": {
          "type": "CallExpression",
          "start": 940,
          "end": 972,
          "callee": {
            "type": "Identifier",
            "start": 940,
            "end": 945,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 946,
              "end": 971,
              "left": {
                "type": "Identifier",
                "start": 946,
                "end": 955,
                "name": "undefined"
              },
              "operator": "+",
              "right": {
                "type": "NewExpression",
                "start": 958,
                "end": 971,
                "callee": {
                  "type": "Identifier",
                  "start": 962,
                  "end": 968,
                  "name": "Number"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 969,
                    "end": 970,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 977,
          "end": 981,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 983,
        "end": 1102,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 987,
            "end": 1100,
            "argument": {
              "type": "NewExpression",
              "start": 993,
              "end": 1099,
              "callee": {
                "type": "Identifier",
                "start": 997,
                "end": 1009,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1010,
                  "end": 1098,
                  "left": {
                    "type": "Literal",
                    "start": 1010,
                    "end": 1068,
                    "value": "#4: undefined + new Number(1) === Not-a-Number. Actual: ",
                    "raw": "'#4: undefined + new Number(1) === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1071,
                    "end": 1098,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1072,
                      "end": 1097,
                      "left": {
                        "type": "Identifier",
                        "start": 1072,
                        "end": 1081,
                        "name": "undefined"
                      },
                      "operator": "+",
                      "right": {
                        "type": "NewExpression",
                        "start": 1084,
                        "end": 1097,
                        "callee": {
                          "type": "Identifier",
                          "start": 1088,
                          "end": 1094,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1095,
                            "end": 1096,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}