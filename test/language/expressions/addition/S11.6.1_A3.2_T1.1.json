{
  "type": "Program",
  "start": 0,
  "end": 1292,
  "body": [
    {
      "type": "IfStatement",
      "start": 470,
      "end": 573,
      "test": {
        "type": "BinaryExpression",
        "start": 474,
        "end": 492,
        "left": {
          "type": "BinaryExpression",
          "start": 474,
          "end": 483,
          "left": {
            "type": "Literal",
            "start": 474,
            "end": 477,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 480,
            "end": 483,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 488,
          "end": 492,
          "value": "11",
          "raw": "\"11\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 494,
        "end": 573,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 498,
            "end": 571,
            "argument": {
              "type": "NewExpression",
              "start": 504,
              "end": 570,
              "callee": {
                "type": "Identifier",
                "start": 508,
                "end": 520,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 521,
                  "end": 569,
                  "left": {
                    "type": "Literal",
                    "start": 521,
                    "end": 555,
                    "value": "#1: \"1\" + \"1\" === \"11\". Actual: ",
                    "raw": "'#1: \"1\" + \"1\" === \"11\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 558,
                    "end": 569,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 559,
                      "end": 568,
                      "left": {
                        "type": "Literal",
                        "start": 559,
                        "end": 562,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 565,
                        "end": 568,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 585,
      "end": 724,
      "test": {
        "type": "BinaryExpression",
        "start": 589,
        "end": 619,
        "left": {
          "type": "BinaryExpression",
          "start": 589,
          "end": 610,
          "left": {
            "type": "NewExpression",
            "start": 589,
            "end": 604,
            "callee": {
              "type": "Identifier",
              "start": 593,
              "end": 599,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 600,
                "end": 603,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 607,
            "end": 610,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 615,
          "end": 619,
          "value": "11",
          "raw": "\"11\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 621,
        "end": 724,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 625,
            "end": 722,
            "argument": {
              "type": "NewExpression",
              "start": 631,
              "end": 721,
              "callee": {
                "type": "Identifier",
                "start": 635,
                "end": 647,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 648,
                  "end": 720,
                  "left": {
                    "type": "Literal",
                    "start": 648,
                    "end": 694,
                    "value": "#2: new String(\"1\") + \"1\" === \"11\". Actual: ",
                    "raw": "'#2: new String(\"1\") + \"1\" === \"11\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 697,
                    "end": 720,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 698,
                      "end": 719,
                      "left": {
                        "type": "NewExpression",
                        "start": 698,
                        "end": 713,
                        "callee": {
                          "type": "Identifier",
                          "start": 702,
                          "end": 708,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 709,
                            "end": 712,
                            "value": "1",
                            "raw": "\"1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 716,
                        "end": 719,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 736,
      "end": 875,
      "test": {
        "type": "BinaryExpression",
        "start": 740,
        "end": 770,
        "left": {
          "type": "BinaryExpression",
          "start": 740,
          "end": 761,
          "left": {
            "type": "Literal",
            "start": 740,
            "end": 743,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          },
          "operator": "+",
          "right": {
            "type": "NewExpression",
            "start": 746,
            "end": 761,
            "callee": {
              "type": "Identifier",
              "start": 750,
              "end": 756,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 757,
                "end": 760,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 766,
          "end": 770,
          "value": "11",
          "raw": "\"11\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 772,
        "end": 875,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 776,
            "end": 873,
            "argument": {
              "type": "NewExpression",
              "start": 782,
              "end": 872,
              "callee": {
                "type": "Identifier",
                "start": 786,
                "end": 798,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 799,
                  "end": 871,
                  "left": {
                    "type": "Literal",
                    "start": 799,
                    "end": 845,
                    "value": "#3: \"1\" + new String(\"1\") === \"11\". Actual: ",
                    "raw": "'#3: \"1\" + new String(\"1\") === \"11\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 848,
                    "end": 871,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 849,
                      "end": 870,
                      "left": {
                        "type": "Literal",
                        "start": 849,
                        "end": 852,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "NewExpression",
                        "start": 855,
                        "end": 870,
                        "callee": {
                          "type": "Identifier",
                          "start": 859,
                          "end": 865,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 866,
                            "end": 869,
                            "value": "1",
                            "raw": "\"1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 887,
      "end": 1062,
      "test": {
        "type": "BinaryExpression",
        "start": 891,
        "end": 933,
        "left": {
          "type": "BinaryExpression",
          "start": 891,
          "end": 924,
          "left": {
            "type": "NewExpression",
            "start": 891,
            "end": 906,
            "callee": {
              "type": "Identifier",
              "start": 895,
              "end": 901,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 902,
                "end": 905,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "NewExpression",
            "start": 909,
            "end": 924,
            "callee": {
              "type": "Identifier",
              "start": 913,
              "end": 919,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 920,
                "end": 923,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 929,
          "end": 933,
          "value": "11",
          "raw": "\"11\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 935,
        "end": 1062,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 939,
            "end": 1060,
            "argument": {
              "type": "NewExpression",
              "start": 945,
              "end": 1059,
              "callee": {
                "type": "Identifier",
                "start": 949,
                "end": 961,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 962,
                  "end": 1058,
                  "left": {
                    "type": "Literal",
                    "start": 962,
                    "end": 1020,
                    "value": "#4: new String(\"1\") + new String(\"1\") === \"11\". Actual: ",
                    "raw": "'#4: new String(\"1\") + new String(\"1\") === \"11\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1023,
                    "end": 1058,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1024,
                      "end": 1057,
                      "left": {
                        "type": "NewExpression",
                        "start": 1024,
                        "end": 1039,
                        "callee": {
                          "type": "Identifier",
                          "start": 1028,
                          "end": 1034,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1035,
                            "end": 1038,
                            "value": "1",
                            "raw": "\"1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "NewExpression",
                        "start": 1042,
                        "end": 1057,
                        "callee": {
                          "type": "Identifier",
                          "start": 1046,
                          "end": 1052,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1053,
                            "end": 1056,
                            "value": "1",
                            "raw": "\"1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1074,
      "end": 1176,
      "test": {
        "type": "BinaryExpression",
        "start": 1078,
        "end": 1095,
        "left": {
          "type": "BinaryExpression",
          "start": 1078,
          "end": 1087,
          "left": {
            "type": "Literal",
            "start": 1078,
            "end": 1081,
            "value": "x",
            "raw": "\"x\"",
            "regex": null,
            "bigint": null
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1084,
            "end": 1087,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1091,
          "end": 1095,
          "value": "x1",
          "raw": "\"x1\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1097,
        "end": 1176,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1101,
            "end": 1174,
            "argument": {
              "type": "NewExpression",
              "start": 1107,
              "end": 1173,
              "callee": {
                "type": "Identifier",
                "start": 1111,
                "end": 1123,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1124,
                  "end": 1172,
                  "left": {
                    "type": "Literal",
                    "start": 1124,
                    "end": 1158,
                    "value": "#5: \"x\" + \"1\" === \"x1\". Actual: ",
                    "raw": "'#5: \"x\" + \"1\" === \"x1\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1161,
                    "end": 1172,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1162,
                      "end": 1171,
                      "left": {
                        "type": "Literal",
                        "start": 1162,
                        "end": 1165,
                        "value": "x",
                        "raw": "\"x\"",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 1168,
                        "end": 1171,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1188,
      "end": 1291,
      "test": {
        "type": "BinaryExpression",
        "start": 1192,
        "end": 1210,
        "left": {
          "type": "BinaryExpression",
          "start": 1192,
          "end": 1201,
          "left": {
            "type": "Literal",
            "start": 1192,
            "end": 1195,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1198,
            "end": 1201,
            "value": "x",
            "raw": "\"x\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1206,
          "end": 1210,
          "value": "1x",
          "raw": "\"1x\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1212,
        "end": 1291,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1216,
            "end": 1289,
            "argument": {
              "type": "NewExpression",
              "start": 1222,
              "end": 1288,
              "callee": {
                "type": "Identifier",
                "start": 1226,
                "end": 1238,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1239,
                  "end": 1287,
                  "left": {
                    "type": "Literal",
                    "start": 1239,
                    "end": 1273,
                    "value": "#6: \"1\" + \"x\" === \"1x\". Actual: ",
                    "raw": "'#6: \"1\" + \"x\" === \"1x\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1276,
                    "end": 1287,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1277,
                      "end": 1286,
                      "left": {
                        "type": "Literal",
                        "start": 1277,
                        "end": 1280,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 1283,
                        "end": 1286,
                        "value": "x",
                        "raw": "\"x\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}