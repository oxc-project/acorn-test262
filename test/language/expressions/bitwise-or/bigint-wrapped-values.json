{
  "type": "Program",
  "start": 0,
  "end": 1398,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 330,
      "end": 409,
      "expression": {
        "type": "CallExpression",
        "start": 330,
        "end": 408,
        "callee": {
          "type": "MemberExpression",
          "start": 330,
          "end": 346,
          "object": {
            "type": "Identifier",
            "start": 330,
            "end": 336,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 337,
            "end": 346,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 347,
            "end": 362,
            "left": {
              "type": "CallExpression",
              "start": 347,
              "end": 357,
              "callee": {
                "type": "Identifier",
                "start": 347,
                "end": 353,
                "name": "Object"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 354,
                  "end": 356,
                  "value": null,
                  "raw": "2n",
                  "regex": null,
                  "bigint": "2"
                }
              ],
              "optional": false
            },
            "operator": "|",
            "right": {
              "type": "Literal",
              "start": 360,
              "end": 362,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 364,
            "end": 366,
            "value": null,
            "raw": "3n",
            "regex": null,
            "bigint": "3"
          },
          {
            "type": "Literal",
            "start": 368,
            "end": 407,
            "value": "The result of (Object(2n) | 1n) is 3n",
            "raw": "'The result of (Object(2n) | 1n) is 3n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 410,
      "end": 489,
      "expression": {
        "type": "CallExpression",
        "start": 410,
        "end": 488,
        "callee": {
          "type": "MemberExpression",
          "start": 410,
          "end": 426,
          "object": {
            "type": "Identifier",
            "start": 410,
            "end": 416,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 417,
            "end": 426,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 427,
            "end": 442,
            "left": {
              "type": "Literal",
              "start": 427,
              "end": 429,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "|",
            "right": {
              "type": "CallExpression",
              "start": 432,
              "end": 442,
              "callee": {
                "type": "Identifier",
                "start": 432,
                "end": 438,
                "name": "Object"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 439,
                  "end": 441,
                  "value": null,
                  "raw": "2n",
                  "regex": null,
                  "bigint": "2"
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 444,
            "end": 446,
            "value": null,
            "raw": "3n",
            "regex": null,
            "bigint": "3"
          },
          {
            "type": "Literal",
            "start": 448,
            "end": 487,
            "value": "The result of (1n | Object(2n)) is 3n",
            "raw": "'The result of (1n | Object(2n)) is 3n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 491,
      "end": 658,
      "expression": {
        "type": "CallExpression",
        "start": 491,
        "end": 657,
        "callee": {
          "type": "MemberExpression",
          "start": 491,
          "end": 507,
          "object": {
            "type": "Identifier",
            "start": 491,
            "end": 497,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 498,
            "end": 507,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 508,
            "end": 572,
            "left": {
              "type": "ObjectExpression",
              "start": 508,
              "end": 567,
              "properties": [
                {
                  "type": "Property",
                  "start": 512,
                  "end": 565,
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "key": {
                    "type": "MemberExpression",
                    "start": 513,
                    "end": 531,
                    "object": {
                      "type": "Identifier",
                      "start": 513,
                      "end": 519,
                      "name": "Symbol"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 520,
                      "end": 531,
                      "name": "toPrimitive"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 534,
                    "end": 565,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 545,
                      "end": 565,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 551,
                          "end": 561,
                          "argument": {
                            "type": "Literal",
                            "start": 558,
                            "end": 560,
                            "value": null,
                            "raw": "2n",
                            "regex": null,
                            "bigint": "2"
                          }
                        }
                      ]
                    }
                  },
                  "kind": "init"
                }
              ]
            },
            "operator": "|",
            "right": {
              "type": "Literal",
              "start": 570,
              "end": 572,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 574,
            "end": 576,
            "value": null,
            "raw": "3n",
            "regex": null,
            "bigint": "3"
          },
          {
            "type": "Literal",
            "start": 578,
            "end": 656,
            "value": "The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) | 1n) is 3n",
            "raw": "'The result of (({[Symbol.toPrimitive]: function() {return 2n;}}) | 1n) is 3n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 660,
      "end": 825,
      "expression": {
        "type": "CallExpression",
        "start": 660,
        "end": 824,
        "callee": {
          "type": "MemberExpression",
          "start": 660,
          "end": 676,
          "object": {
            "type": "Identifier",
            "start": 660,
            "end": 666,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 667,
            "end": 676,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 677,
            "end": 741,
            "left": {
              "type": "Literal",
              "start": 677,
              "end": 679,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "|",
            "right": {
              "type": "ObjectExpression",
              "start": 682,
              "end": 741,
              "properties": [
                {
                  "type": "Property",
                  "start": 686,
                  "end": 739,
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "key": {
                    "type": "MemberExpression",
                    "start": 687,
                    "end": 705,
                    "object": {
                      "type": "Identifier",
                      "start": 687,
                      "end": 693,
                      "name": "Symbol"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 694,
                      "end": 705,
                      "name": "toPrimitive"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 708,
                    "end": 739,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 719,
                      "end": 739,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 725,
                          "end": 735,
                          "argument": {
                            "type": "Literal",
                            "start": 732,
                            "end": 734,
                            "value": null,
                            "raw": "2n",
                            "regex": null,
                            "bigint": "2"
                          }
                        }
                      ]
                    }
                  },
                  "kind": "init"
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 743,
            "end": 745,
            "value": null,
            "raw": "3n",
            "regex": null,
            "bigint": "3"
          },
          {
            "type": "Literal",
            "start": 747,
            "end": 823,
            "value": "The result of (1n | {[Symbol.toPrimitive]: function() {return 2n;}}) is 3n",
            "raw": "'The result of (1n | {[Symbol.toPrimitive]: function() {return 2n;}}) is 3n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 827,
      "end": 968,
      "expression": {
        "type": "CallExpression",
        "start": 827,
        "end": 967,
        "callee": {
          "type": "MemberExpression",
          "start": 827,
          "end": 843,
          "object": {
            "type": "Identifier",
            "start": 827,
            "end": 833,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 834,
            "end": 843,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 844,
            "end": 895,
            "left": {
              "type": "ObjectExpression",
              "start": 844,
              "end": 890,
              "properties": [
                {
                  "type": "Property",
                  "start": 848,
                  "end": 888,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 848,
                    "end": 855,
                    "name": "valueOf"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 857,
                    "end": 888,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 868,
                      "end": 888,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 874,
                          "end": 884,
                          "argument": {
                            "type": "Literal",
                            "start": 881,
                            "end": 883,
                            "value": null,
                            "raw": "2n",
                            "regex": null,
                            "bigint": "2"
                          }
                        }
                      ]
                    }
                  },
                  "kind": "init"
                }
              ]
            },
            "operator": "|",
            "right": {
              "type": "Literal",
              "start": 893,
              "end": 895,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 897,
            "end": 899,
            "value": null,
            "raw": "3n",
            "regex": null,
            "bigint": "3"
          },
          {
            "type": "Literal",
            "start": 901,
            "end": 966,
            "value": "The result of (({valueOf: function() {return 2n;}}) | 1n) is 3n",
            "raw": "'The result of (({valueOf: function() {return 2n;}}) | 1n) is 3n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 970,
      "end": 1109,
      "expression": {
        "type": "CallExpression",
        "start": 970,
        "end": 1108,
        "callee": {
          "type": "MemberExpression",
          "start": 970,
          "end": 986,
          "object": {
            "type": "Identifier",
            "start": 970,
            "end": 976,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 977,
            "end": 986,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 987,
            "end": 1038,
            "left": {
              "type": "Literal",
              "start": 987,
              "end": 989,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "|",
            "right": {
              "type": "ObjectExpression",
              "start": 992,
              "end": 1038,
              "properties": [
                {
                  "type": "Property",
                  "start": 996,
                  "end": 1036,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 996,
                    "end": 1003,
                    "name": "valueOf"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1005,
                    "end": 1036,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1016,
                      "end": 1036,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1022,
                          "end": 1032,
                          "argument": {
                            "type": "Literal",
                            "start": 1029,
                            "end": 1031,
                            "value": null,
                            "raw": "2n",
                            "regex": null,
                            "bigint": "2"
                          }
                        }
                      ]
                    }
                  },
                  "kind": "init"
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1040,
            "end": 1042,
            "value": null,
            "raw": "3n",
            "regex": null,
            "bigint": "3"
          },
          {
            "type": "Literal",
            "start": 1044,
            "end": 1107,
            "value": "The result of (1n | {valueOf: function() {return 2n;}}) is 3n",
            "raw": "'The result of (1n | {valueOf: function() {return 2n;}}) is 3n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1111,
      "end": 1254,
      "expression": {
        "type": "CallExpression",
        "start": 1111,
        "end": 1253,
        "callee": {
          "type": "MemberExpression",
          "start": 1111,
          "end": 1127,
          "object": {
            "type": "Identifier",
            "start": 1111,
            "end": 1117,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1118,
            "end": 1127,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1128,
            "end": 1180,
            "left": {
              "type": "ObjectExpression",
              "start": 1128,
              "end": 1175,
              "properties": [
                {
                  "type": "Property",
                  "start": 1132,
                  "end": 1173,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 1132,
                    "end": 1140,
                    "name": "toString"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1142,
                    "end": 1173,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1153,
                      "end": 1173,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1159,
                          "end": 1169,
                          "argument": {
                            "type": "Literal",
                            "start": 1166,
                            "end": 1168,
                            "value": null,
                            "raw": "2n",
                            "regex": null,
                            "bigint": "2"
                          }
                        }
                      ]
                    }
                  },
                  "kind": "init"
                }
              ]
            },
            "operator": "|",
            "right": {
              "type": "Literal",
              "start": 1178,
              "end": 1180,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1182,
            "end": 1184,
            "value": null,
            "raw": "3n",
            "regex": null,
            "bigint": "3"
          },
          {
            "type": "Literal",
            "start": 1186,
            "end": 1252,
            "value": "The result of (({toString: function() {return 2n;}}) | 1n) is 3n",
            "raw": "'The result of (({toString: function() {return 2n;}}) | 1n) is 3n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1256,
      "end": 1397,
      "expression": {
        "type": "CallExpression",
        "start": 1256,
        "end": 1396,
        "callee": {
          "type": "MemberExpression",
          "start": 1256,
          "end": 1272,
          "object": {
            "type": "Identifier",
            "start": 1256,
            "end": 1262,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1263,
            "end": 1272,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1273,
            "end": 1325,
            "left": {
              "type": "Literal",
              "start": 1273,
              "end": 1275,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "|",
            "right": {
              "type": "ObjectExpression",
              "start": 1278,
              "end": 1325,
              "properties": [
                {
                  "type": "Property",
                  "start": 1282,
                  "end": 1323,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 1282,
                    "end": 1290,
                    "name": "toString"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1292,
                    "end": 1323,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1303,
                      "end": 1323,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1309,
                          "end": 1319,
                          "argument": {
                            "type": "Literal",
                            "start": 1316,
                            "end": 1318,
                            "value": null,
                            "raw": "2n",
                            "regex": null,
                            "bigint": "2"
                          }
                        }
                      ]
                    }
                  },
                  "kind": "init"
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1327,
            "end": 1329,
            "value": null,
            "raw": "3n",
            "regex": null,
            "bigint": "3"
          },
          {
            "type": "Literal",
            "start": 1331,
            "end": 1395,
            "value": "The result of (1n | {toString: function() {return 2n;}}) is 3n",
            "raw": "'The result of (1n | {toString: function() {return 2n;}}) is 3n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}