{
  "type": "Program",
  "start": 0,
  "end": 1584,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 377,
      "end": 383,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 381,
          "end": 382,
          "id": {
            "type": "Identifier",
            "start": 381,
            "end": 382,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 395,
      "end": 404,
      "expression": {
        "type": "AssignmentExpression",
        "start": 395,
        "end": 403,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 395,
          "end": 396,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 399,
          "end": 403,
          "value": true,
          "raw": "true"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 405,
      "end": 414,
      "expression": {
        "type": "AssignmentExpression",
        "start": 405,
        "end": 413,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 405,
          "end": 406,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 412,
          "end": 413,
          "value": 1,
          "raw": "1"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 415,
      "end": 508,
      "test": {
        "type": "BinaryExpression",
        "start": 419,
        "end": 426,
        "left": {
          "type": "Identifier",
          "start": 419,
          "end": 420,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 425,
          "end": 426,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 428,
        "end": 508,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 432,
            "end": 506,
            "argument": {
              "type": "NewExpression",
              "start": 438,
              "end": 505,
              "callee": {
                "type": "Identifier",
                "start": 442,
                "end": 454,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 455,
                  "end": 504,
                  "left": {
                    "type": "Literal",
                    "start": 455,
                    "end": 498,
                    "value": "#1: x = true; x >>>= 1; x === 0. Actual: ",
                    "raw": "'#1: x = true; x >>>= 1; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 501,
                    "end": 504,
                    "expression": {
                      "type": "Identifier",
                      "start": 502,
                      "end": 503,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 520,
      "end": 526,
      "expression": {
        "type": "AssignmentExpression",
        "start": 520,
        "end": 525,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 520,
          "end": 521,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 524,
          "end": 525,
          "value": 1,
          "raw": "1"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 527,
      "end": 539,
      "expression": {
        "type": "AssignmentExpression",
        "start": 527,
        "end": 538,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 527,
          "end": 528,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 534,
          "end": 538,
          "value": true,
          "raw": "true"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 540,
      "end": 633,
      "test": {
        "type": "BinaryExpression",
        "start": 544,
        "end": 551,
        "left": {
          "type": "Identifier",
          "start": 544,
          "end": 545,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 550,
          "end": 551,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 553,
        "end": 633,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 557,
            "end": 631,
            "argument": {
              "type": "NewExpression",
              "start": 563,
              "end": 630,
              "callee": {
                "type": "Identifier",
                "start": 567,
                "end": 579,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 580,
                  "end": 629,
                  "left": {
                    "type": "Literal",
                    "start": 580,
                    "end": 623,
                    "value": "#2: x = 1; x >>>= true; x === 0. Actual: ",
                    "raw": "'#2: x = 1; x >>>= true; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 626,
                    "end": 629,
                    "expression": {
                      "type": "Identifier",
                      "start": 627,
                      "end": 628,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 645,
      "end": 667,
      "expression": {
        "type": "AssignmentExpression",
        "start": 645,
        "end": 666,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 645,
          "end": 646,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 649,
          "end": 666,
          "callee": {
            "type": "Identifier",
            "start": 653,
            "end": 660,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 661,
              "end": 665,
              "value": true,
              "raw": "true"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 668,
      "end": 677,
      "expression": {
        "type": "AssignmentExpression",
        "start": 668,
        "end": 676,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 668,
          "end": 669,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 675,
          "end": 676,
          "value": 1,
          "raw": "1"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 678,
      "end": 784,
      "test": {
        "type": "BinaryExpression",
        "start": 682,
        "end": 689,
        "left": {
          "type": "Identifier",
          "start": 682,
          "end": 683,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 688,
          "end": 689,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 691,
        "end": 784,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 695,
            "end": 782,
            "argument": {
              "type": "NewExpression",
              "start": 701,
              "end": 781,
              "callee": {
                "type": "Identifier",
                "start": 705,
                "end": 717,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 718,
                  "end": 780,
                  "left": {
                    "type": "Literal",
                    "start": 718,
                    "end": 774,
                    "value": "#3: x = new Boolean(true); x >>>= 1; x === 0. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x >>>= 1; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 777,
                    "end": 780,
                    "expression": {
                      "type": "Identifier",
                      "start": 778,
                      "end": 779,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 796,
      "end": 802,
      "expression": {
        "type": "AssignmentExpression",
        "start": 796,
        "end": 801,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 796,
          "end": 797,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 800,
          "end": 801,
          "value": 1,
          "raw": "1"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 803,
      "end": 828,
      "expression": {
        "type": "AssignmentExpression",
        "start": 803,
        "end": 827,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 803,
          "end": 804,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 810,
          "end": 827,
          "callee": {
            "type": "Identifier",
            "start": 814,
            "end": 821,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 822,
              "end": 826,
              "value": true,
              "raw": "true"
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 829,
      "end": 935,
      "test": {
        "type": "BinaryExpression",
        "start": 833,
        "end": 840,
        "left": {
          "type": "Identifier",
          "start": 833,
          "end": 834,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 839,
          "end": 840,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 842,
        "end": 935,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 846,
            "end": 933,
            "argument": {
              "type": "NewExpression",
              "start": 852,
              "end": 932,
              "callee": {
                "type": "Identifier",
                "start": 856,
                "end": 868,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 869,
                  "end": 931,
                  "left": {
                    "type": "Literal",
                    "start": 869,
                    "end": 925,
                    "value": "#4: x = 1; x >>>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = 1; x >>>= new Boolean(true); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 928,
                    "end": 931,
                    "expression": {
                      "type": "Identifier",
                      "start": 929,
                      "end": 930,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 947,
      "end": 956,
      "expression": {
        "type": "AssignmentExpression",
        "start": 947,
        "end": 955,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 947,
          "end": 948,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 951,
          "end": 955,
          "value": true,
          "raw": "true"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 957,
      "end": 978,
      "expression": {
        "type": "AssignmentExpression",
        "start": 957,
        "end": 977,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 957,
          "end": 958,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 964,
          "end": 977,
          "callee": {
            "type": "Identifier",
            "start": 968,
            "end": 974,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 975,
              "end": 976,
              "value": 1,
              "raw": "1"
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 979,
      "end": 1084,
      "test": {
        "type": "BinaryExpression",
        "start": 983,
        "end": 990,
        "left": {
          "type": "Identifier",
          "start": 983,
          "end": 984,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 989,
          "end": 990,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 992,
        "end": 1084,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 996,
            "end": 1082,
            "argument": {
              "type": "NewExpression",
              "start": 1002,
              "end": 1081,
              "callee": {
                "type": "Identifier",
                "start": 1006,
                "end": 1018,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1019,
                  "end": 1080,
                  "left": {
                    "type": "Literal",
                    "start": 1019,
                    "end": 1074,
                    "value": "#5: x = true; x >>>= new Number(1); x === 0. Actual: ",
                    "raw": "'#5: x = true; x >>>= new Number(1); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1077,
                    "end": 1080,
                    "expression": {
                      "type": "Identifier",
                      "start": 1078,
                      "end": 1079,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1096,
      "end": 1114,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1096,
        "end": 1113,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1096,
          "end": 1097,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1100,
          "end": 1113,
          "callee": {
            "type": "Identifier",
            "start": 1104,
            "end": 1110,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1111,
              "end": 1112,
              "value": 1,
              "raw": "1"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1115,
      "end": 1127,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1115,
        "end": 1126,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 1115,
          "end": 1116,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1122,
          "end": 1126,
          "value": true,
          "raw": "true"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1128,
      "end": 1233,
      "test": {
        "type": "BinaryExpression",
        "start": 1132,
        "end": 1139,
        "left": {
          "type": "Identifier",
          "start": 1132,
          "end": 1133,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1138,
          "end": 1139,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1141,
        "end": 1233,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1145,
            "end": 1231,
            "argument": {
              "type": "NewExpression",
              "start": 1151,
              "end": 1230,
              "callee": {
                "type": "Identifier",
                "start": 1155,
                "end": 1167,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1168,
                  "end": 1229,
                  "left": {
                    "type": "Literal",
                    "start": 1168,
                    "end": 1223,
                    "value": "#6: x = new Number(1); x >>>= true; x === 0. Actual: ",
                    "raw": "'#6: x = new Number(1); x >>>= true; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1226,
                    "end": 1229,
                    "expression": {
                      "type": "Identifier",
                      "start": 1227,
                      "end": 1228,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1245,
      "end": 1267,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1245,
        "end": 1266,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1245,
          "end": 1246,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1249,
          "end": 1266,
          "callee": {
            "type": "Identifier",
            "start": 1253,
            "end": 1260,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1261,
              "end": 1265,
              "value": true,
              "raw": "true"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1268,
      "end": 1289,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1268,
        "end": 1288,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 1268,
          "end": 1269,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1275,
          "end": 1288,
          "callee": {
            "type": "Identifier",
            "start": 1279,
            "end": 1285,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1286,
              "end": 1287,
              "value": 1,
              "raw": "1"
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1290,
      "end": 1408,
      "test": {
        "type": "BinaryExpression",
        "start": 1294,
        "end": 1301,
        "left": {
          "type": "Identifier",
          "start": 1294,
          "end": 1295,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1300,
          "end": 1301,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1303,
        "end": 1408,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1307,
            "end": 1406,
            "argument": {
              "type": "NewExpression",
              "start": 1313,
              "end": 1405,
              "callee": {
                "type": "Identifier",
                "start": 1317,
                "end": 1329,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1330,
                  "end": 1404,
                  "left": {
                    "type": "Literal",
                    "start": 1330,
                    "end": 1398,
                    "value": "#7: x = new Boolean(true); x >>>= new Number(1); x === 0. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x >>>= new Number(1); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1401,
                    "end": 1404,
                    "expression": {
                      "type": "Identifier",
                      "start": 1402,
                      "end": 1403,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1420,
      "end": 1438,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1420,
        "end": 1437,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1420,
          "end": 1421,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1424,
          "end": 1437,
          "callee": {
            "type": "Identifier",
            "start": 1428,
            "end": 1434,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1435,
              "end": 1436,
              "value": 1,
              "raw": "1"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1439,
      "end": 1464,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1439,
        "end": 1463,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 1439,
          "end": 1440,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1446,
          "end": 1463,
          "callee": {
            "type": "Identifier",
            "start": 1450,
            "end": 1457,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1458,
              "end": 1462,
              "value": true,
              "raw": "true"
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1465,
      "end": 1583,
      "test": {
        "type": "BinaryExpression",
        "start": 1469,
        "end": 1476,
        "left": {
          "type": "Identifier",
          "start": 1469,
          "end": 1470,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1475,
          "end": 1476,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1478,
        "end": 1583,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1482,
            "end": 1581,
            "argument": {
              "type": "NewExpression",
              "start": 1488,
              "end": 1580,
              "callee": {
                "type": "Identifier",
                "start": 1492,
                "end": 1504,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1505,
                  "end": 1579,
                  "left": {
                    "type": "Literal",
                    "start": 1505,
                    "end": 1573,
                    "value": "#8: x = new Number(1); x >>>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#8: x = new Number(1); x >>>= new Boolean(true); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1576,
                    "end": 1579,
                    "expression": {
                      "type": "Identifier",
                      "start": 1577,
                      "end": 1578,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}