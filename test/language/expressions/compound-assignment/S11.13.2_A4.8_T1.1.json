{
  "type": "Program",
  "start": 0,
  "end": 956,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 321,
      "end": 327,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 325,
          "end": 326,
          "id": {
            "type": "Identifier",
            "start": 325,
            "end": 326,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 339,
      "end": 348,
      "expression": {
        "type": "AssignmentExpression",
        "start": 339,
        "end": 347,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 339,
          "end": 340,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 343,
          "end": 347,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 349,
      "end": 361,
      "expression": {
        "type": "AssignmentExpression",
        "start": 349,
        "end": 360,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 349,
          "end": 350,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 356,
          "end": 360,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 362,
      "end": 458,
      "test": {
        "type": "BinaryExpression",
        "start": 366,
        "end": 373,
        "left": {
          "type": "Identifier",
          "start": 366,
          "end": 367,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 372,
          "end": 373,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 375,
        "end": 458,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 379,
            "end": 456,
            "argument": {
              "type": "NewExpression",
              "start": 385,
              "end": 455,
              "callee": {
                "type": "Identifier",
                "start": 389,
                "end": 401,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 402,
                  "end": 454,
                  "left": {
                    "type": "Literal",
                    "start": 402,
                    "end": 448,
                    "value": "#1: x = true; x >>>= true; x === 0. Actual: ",
                    "raw": "'#1: x = true; x >>>= true; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 451,
                    "end": 454,
                    "expression": {
                      "type": "Identifier",
                      "start": 452,
                      "end": 453,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 470,
      "end": 492,
      "expression": {
        "type": "AssignmentExpression",
        "start": 470,
        "end": 491,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 470,
          "end": 471,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 474,
          "end": 491,
          "callee": {
            "type": "Identifier",
            "start": 478,
            "end": 485,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 486,
              "end": 490,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 493,
      "end": 505,
      "expression": {
        "type": "AssignmentExpression",
        "start": 493,
        "end": 504,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 493,
          "end": 494,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 500,
          "end": 504,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 506,
      "end": 615,
      "test": {
        "type": "BinaryExpression",
        "start": 510,
        "end": 517,
        "left": {
          "type": "Identifier",
          "start": 510,
          "end": 511,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 516,
          "end": 517,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 519,
        "end": 615,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 523,
            "end": 613,
            "argument": {
              "type": "NewExpression",
              "start": 529,
              "end": 612,
              "callee": {
                "type": "Identifier",
                "start": 533,
                "end": 545,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 546,
                  "end": 611,
                  "left": {
                    "type": "Literal",
                    "start": 546,
                    "end": 605,
                    "value": "#2: x = new Boolean(true); x >>>= true; x === 0. Actual: ",
                    "raw": "'#2: x = new Boolean(true); x >>>= true; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 608,
                    "end": 611,
                    "expression": {
                      "type": "Identifier",
                      "start": 609,
                      "end": 610,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 627,
      "end": 636,
      "expression": {
        "type": "AssignmentExpression",
        "start": 627,
        "end": 635,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 627,
          "end": 628,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 631,
          "end": 635,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 637,
      "end": 662,
      "expression": {
        "type": "AssignmentExpression",
        "start": 637,
        "end": 661,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 637,
          "end": 638,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 644,
          "end": 661,
          "callee": {
            "type": "Identifier",
            "start": 648,
            "end": 655,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 656,
              "end": 660,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 663,
      "end": 772,
      "test": {
        "type": "BinaryExpression",
        "start": 667,
        "end": 674,
        "left": {
          "type": "Identifier",
          "start": 667,
          "end": 668,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 673,
          "end": 674,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 676,
        "end": 772,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 680,
            "end": 770,
            "argument": {
              "type": "NewExpression",
              "start": 686,
              "end": 769,
              "callee": {
                "type": "Identifier",
                "start": 690,
                "end": 702,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 703,
                  "end": 768,
                  "left": {
                    "type": "Literal",
                    "start": 703,
                    "end": 762,
                    "value": "#3: x = true; x >>>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#3: x = true; x >>>= new Boolean(true); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 765,
                    "end": 768,
                    "expression": {
                      "type": "Identifier",
                      "start": 766,
                      "end": 767,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 784,
      "end": 806,
      "expression": {
        "type": "AssignmentExpression",
        "start": 784,
        "end": 805,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 784,
          "end": 785,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 788,
          "end": 805,
          "callee": {
            "type": "Identifier",
            "start": 792,
            "end": 799,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 800,
              "end": 804,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 807,
      "end": 832,
      "expression": {
        "type": "AssignmentExpression",
        "start": 807,
        "end": 831,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 807,
          "end": 808,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 814,
          "end": 831,
          "callee": {
            "type": "Identifier",
            "start": 818,
            "end": 825,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 826,
              "end": 830,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 833,
      "end": 955,
      "test": {
        "type": "BinaryExpression",
        "start": 837,
        "end": 844,
        "left": {
          "type": "Identifier",
          "start": 837,
          "end": 838,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 843,
          "end": 844,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 846,
        "end": 955,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 850,
            "end": 953,
            "argument": {
              "type": "NewExpression",
              "start": 856,
              "end": 952,
              "callee": {
                "type": "Identifier",
                "start": 860,
                "end": 872,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 873,
                  "end": 951,
                  "left": {
                    "type": "Literal",
                    "start": 873,
                    "end": 945,
                    "value": "#4: x = new Boolean(true); x >>>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = new Boolean(true); x >>>= new Boolean(true); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 948,
                    "end": 951,
                    "expression": {
                      "type": "Identifier",
                      "start": 949,
                      "end": 950,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}