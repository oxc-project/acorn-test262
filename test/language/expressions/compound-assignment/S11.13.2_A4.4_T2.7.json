{
  "type": "Program",
  "start": 0,
  "end": 1676,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 373,
      "end": 379,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 377,
          "end": 378,
          "id": {
            "type": "Identifier",
            "start": 377,
            "end": 378,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 391,
      "end": 400,
      "expression": {
        "type": "AssignmentExpression",
        "start": 391,
        "end": 399,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 391,
          "end": 392,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 395,
          "end": 399,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 401,
      "end": 410,
      "expression": {
        "type": "AssignmentExpression",
        "start": 401,
        "end": 409,
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "start": 401,
          "end": 402,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 406,
          "end": 409,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 411,
      "end": 516,
      "test": {
        "type": "BinaryExpression",
        "start": 415,
        "end": 428,
        "left": {
          "type": "Identifier",
          "start": 415,
          "end": 416,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 421,
          "end": 428,
          "value": "true1",
          "raw": "\"true1\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 430,
        "end": 516,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 434,
            "end": 514,
            "argument": {
              "type": "NewExpression",
              "start": 440,
              "end": 513,
              "callee": {
                "type": "Identifier",
                "start": 444,
                "end": 456,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 457,
                  "end": 512,
                  "left": {
                    "type": "Literal",
                    "start": 457,
                    "end": 506,
                    "value": "#1: x = true; x += \"1\"; x === \"true1\". Actual: ",
                    "raw": "'#1: x = true; x += \"1\"; x === \"true1\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 509,
                    "end": 512,
                    "expression": {
                      "type": "Identifier",
                      "start": 510,
                      "end": 511,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 528,
      "end": 536,
      "expression": {
        "type": "AssignmentExpression",
        "start": 528,
        "end": 535,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 528,
          "end": 529,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 532,
          "end": 535,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 537,
      "end": 547,
      "expression": {
        "type": "AssignmentExpression",
        "start": 537,
        "end": 546,
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "start": 537,
          "end": 538,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 542,
          "end": 546,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 548,
      "end": 653,
      "test": {
        "type": "BinaryExpression",
        "start": 552,
        "end": 565,
        "left": {
          "type": "Identifier",
          "start": 552,
          "end": 553,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 558,
          "end": 565,
          "value": "1true",
          "raw": "\"1true\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 567,
        "end": 653,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 571,
            "end": 651,
            "argument": {
              "type": "NewExpression",
              "start": 577,
              "end": 650,
              "callee": {
                "type": "Identifier",
                "start": 581,
                "end": 593,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 594,
                  "end": 649,
                  "left": {
                    "type": "Literal",
                    "start": 594,
                    "end": 643,
                    "value": "#2: x = \"1\"; x += true; x === \"1true\". Actual: ",
                    "raw": "'#2: x = \"1\"; x += true; x === \"1true\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 646,
                    "end": 649,
                    "expression": {
                      "type": "Identifier",
                      "start": 647,
                      "end": 648,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 665,
      "end": 687,
      "expression": {
        "type": "AssignmentExpression",
        "start": 665,
        "end": 686,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 665,
          "end": 666,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 669,
          "end": 686,
          "callee": {
            "type": "Identifier",
            "start": 673,
            "end": 680,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 681,
              "end": 685,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 688,
      "end": 697,
      "expression": {
        "type": "AssignmentExpression",
        "start": 688,
        "end": 696,
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "start": 688,
          "end": 689,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 693,
          "end": 696,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 698,
      "end": 816,
      "test": {
        "type": "BinaryExpression",
        "start": 702,
        "end": 715,
        "left": {
          "type": "Identifier",
          "start": 702,
          "end": 703,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 708,
          "end": 715,
          "value": "true1",
          "raw": "\"true1\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 717,
        "end": 816,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 721,
            "end": 814,
            "argument": {
              "type": "NewExpression",
              "start": 727,
              "end": 813,
              "callee": {
                "type": "Identifier",
                "start": 731,
                "end": 743,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 744,
                  "end": 812,
                  "left": {
                    "type": "Literal",
                    "start": 744,
                    "end": 806,
                    "value": "#3: x = new Boolean(true); x += \"1\"; x === \"true1\". Actual: ",
                    "raw": "'#3: x = new Boolean(true); x += \"1\"; x === \"true1\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 809,
                    "end": 812,
                    "expression": {
                      "type": "Identifier",
                      "start": 810,
                      "end": 811,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 828,
      "end": 836,
      "expression": {
        "type": "AssignmentExpression",
        "start": 828,
        "end": 835,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 828,
          "end": 829,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 832,
          "end": 835,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 837,
      "end": 860,
      "expression": {
        "type": "AssignmentExpression",
        "start": 837,
        "end": 859,
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "start": 837,
          "end": 838,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 842,
          "end": 859,
          "callee": {
            "type": "Identifier",
            "start": 846,
            "end": 853,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 854,
              "end": 858,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 861,
      "end": 979,
      "test": {
        "type": "BinaryExpression",
        "start": 865,
        "end": 878,
        "left": {
          "type": "Identifier",
          "start": 865,
          "end": 866,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 871,
          "end": 878,
          "value": "1true",
          "raw": "\"1true\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 880,
        "end": 979,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 884,
            "end": 977,
            "argument": {
              "type": "NewExpression",
              "start": 890,
              "end": 976,
              "callee": {
                "type": "Identifier",
                "start": 894,
                "end": 906,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 907,
                  "end": 975,
                  "left": {
                    "type": "Literal",
                    "start": 907,
                    "end": 969,
                    "value": "#4: x = \"1\"; x += new Boolean(true); x === \"1true\". Actual: ",
                    "raw": "'#4: x = \"1\"; x += new Boolean(true); x === \"1true\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 972,
                    "end": 975,
                    "expression": {
                      "type": "Identifier",
                      "start": 973,
                      "end": 974,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 991,
      "end": 1000,
      "expression": {
        "type": "AssignmentExpression",
        "start": 991,
        "end": 999,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 991,
          "end": 992,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 995,
          "end": 999,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1001,
      "end": 1022,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1001,
        "end": 1021,
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "start": 1001,
          "end": 1002,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1006,
          "end": 1021,
          "callee": {
            "type": "Identifier",
            "start": 1010,
            "end": 1016,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1017,
              "end": 1020,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1023,
      "end": 1140,
      "test": {
        "type": "BinaryExpression",
        "start": 1027,
        "end": 1040,
        "left": {
          "type": "Identifier",
          "start": 1027,
          "end": 1028,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1033,
          "end": 1040,
          "value": "true1",
          "raw": "\"true1\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1042,
        "end": 1140,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1046,
            "end": 1138,
            "argument": {
              "type": "NewExpression",
              "start": 1052,
              "end": 1137,
              "callee": {
                "type": "Identifier",
                "start": 1056,
                "end": 1068,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1069,
                  "end": 1136,
                  "left": {
                    "type": "Literal",
                    "start": 1069,
                    "end": 1130,
                    "value": "#5: x = true; x += new String(\"1\"); x === \"true1\". Actual: ",
                    "raw": "'#5: x = true; x += new String(\"1\"); x === \"true1\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1133,
                    "end": 1136,
                    "expression": {
                      "type": "Identifier",
                      "start": 1134,
                      "end": 1135,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1152,
      "end": 1172,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1152,
        "end": 1171,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1152,
          "end": 1153,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1156,
          "end": 1171,
          "callee": {
            "type": "Identifier",
            "start": 1160,
            "end": 1166,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1167,
              "end": 1170,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1173,
      "end": 1183,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1173,
        "end": 1182,
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "start": 1173,
          "end": 1174,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1178,
          "end": 1182,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1184,
      "end": 1301,
      "test": {
        "type": "BinaryExpression",
        "start": 1188,
        "end": 1201,
        "left": {
          "type": "Identifier",
          "start": 1188,
          "end": 1189,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1194,
          "end": 1201,
          "value": "1true",
          "raw": "\"1true\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1203,
        "end": 1301,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1207,
            "end": 1299,
            "argument": {
              "type": "NewExpression",
              "start": 1213,
              "end": 1298,
              "callee": {
                "type": "Identifier",
                "start": 1217,
                "end": 1229,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1230,
                  "end": 1297,
                  "left": {
                    "type": "Literal",
                    "start": 1230,
                    "end": 1291,
                    "value": "#6: x = new String(\"1\"); x += true; x === \"1true\". Actual: ",
                    "raw": "'#6: x = new String(\"1\"); x += true; x === \"1true\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1294,
                    "end": 1297,
                    "expression": {
                      "type": "Identifier",
                      "start": 1295,
                      "end": 1296,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1313,
      "end": 1335,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1313,
        "end": 1334,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1313,
          "end": 1314,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1317,
          "end": 1334,
          "callee": {
            "type": "Identifier",
            "start": 1321,
            "end": 1328,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1329,
              "end": 1333,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1336,
      "end": 1357,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1336,
        "end": 1356,
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "start": 1336,
          "end": 1337,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1341,
          "end": 1356,
          "callee": {
            "type": "Identifier",
            "start": 1345,
            "end": 1351,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1352,
              "end": 1355,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1358,
      "end": 1488,
      "test": {
        "type": "BinaryExpression",
        "start": 1362,
        "end": 1375,
        "left": {
          "type": "Identifier",
          "start": 1362,
          "end": 1363,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1368,
          "end": 1375,
          "value": "true1",
          "raw": "\"true1\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1377,
        "end": 1488,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1381,
            "end": 1486,
            "argument": {
              "type": "NewExpression",
              "start": 1387,
              "end": 1485,
              "callee": {
                "type": "Identifier",
                "start": 1391,
                "end": 1403,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1404,
                  "end": 1484,
                  "left": {
                    "type": "Literal",
                    "start": 1404,
                    "end": 1478,
                    "value": "#7: x = new Boolean(true); x += new String(\"1\"); x === \"true1\". Actual: ",
                    "raw": "'#7: x = new Boolean(true); x += new String(\"1\"); x === \"true1\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1481,
                    "end": 1484,
                    "expression": {
                      "type": "Identifier",
                      "start": 1482,
                      "end": 1483,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1500,
      "end": 1520,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1500,
        "end": 1519,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1500,
          "end": 1501,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1504,
          "end": 1519,
          "callee": {
            "type": "Identifier",
            "start": 1508,
            "end": 1514,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1515,
              "end": 1518,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1521,
      "end": 1544,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1521,
        "end": 1543,
        "operator": "+=",
        "left": {
          "type": "Identifier",
          "start": 1521,
          "end": 1522,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1526,
          "end": 1543,
          "callee": {
            "type": "Identifier",
            "start": 1530,
            "end": 1537,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1538,
              "end": 1542,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1545,
      "end": 1675,
      "test": {
        "type": "BinaryExpression",
        "start": 1549,
        "end": 1562,
        "left": {
          "type": "Identifier",
          "start": 1549,
          "end": 1550,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1555,
          "end": 1562,
          "value": "1true",
          "raw": "\"1true\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1564,
        "end": 1675,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1568,
            "end": 1673,
            "argument": {
              "type": "NewExpression",
              "start": 1574,
              "end": 1672,
              "callee": {
                "type": "Identifier",
                "start": 1578,
                "end": 1590,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1591,
                  "end": 1671,
                  "left": {
                    "type": "Literal",
                    "start": 1591,
                    "end": 1665,
                    "value": "#8: x = new String(\"1\"); x += new Boolean(true); x === \"1true\". Actual: ",
                    "raw": "'#8: x = new String(\"1\"); x += new Boolean(true); x === \"1true\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1668,
                    "end": 1671,
                    "expression": {
                      "type": "Identifier",
                      "start": 1669,
                      "end": 1670,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}