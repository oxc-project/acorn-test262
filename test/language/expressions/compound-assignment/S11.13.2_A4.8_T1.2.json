{
  "type": "Program",
  "start": 0,
  "end": 888,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 309,
      "end": 315,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 313,
          "end": 314,
          "id": {
            "type": "Identifier",
            "start": 313,
            "end": 314,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 327,
      "end": 333,
      "expression": {
        "type": "AssignmentExpression",
        "start": 327,
        "end": 332,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 327,
          "end": 328,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 331,
          "end": 332,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 334,
      "end": 343,
      "expression": {
        "type": "AssignmentExpression",
        "start": 334,
        "end": 342,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 334,
          "end": 335,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 341,
          "end": 342,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 344,
      "end": 434,
      "test": {
        "type": "BinaryExpression",
        "start": 348,
        "end": 355,
        "left": {
          "type": "Identifier",
          "start": 348,
          "end": 349,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 354,
          "end": 355,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 357,
        "end": 434,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 361,
            "end": 432,
            "argument": {
              "type": "NewExpression",
              "start": 367,
              "end": 431,
              "callee": {
                "type": "Identifier",
                "start": 371,
                "end": 383,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 384,
                  "end": 430,
                  "left": {
                    "type": "Literal",
                    "start": 384,
                    "end": 424,
                    "value": "#1: x = 1; x >>>= 1; x === 0. Actual: ",
                    "raw": "'#1: x = 1; x >>>= 1; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 427,
                    "end": 430,
                    "expression": {
                      "type": "Identifier",
                      "start": 428,
                      "end": 429,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 446,
      "end": 464,
      "expression": {
        "type": "AssignmentExpression",
        "start": 446,
        "end": 463,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 446,
          "end": 447,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 450,
          "end": 463,
          "callee": {
            "type": "Identifier",
            "start": 454,
            "end": 460,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 461,
              "end": 462,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 465,
      "end": 474,
      "expression": {
        "type": "AssignmentExpression",
        "start": 465,
        "end": 473,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 465,
          "end": 466,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 472,
          "end": 473,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 475,
      "end": 577,
      "test": {
        "type": "BinaryExpression",
        "start": 479,
        "end": 486,
        "left": {
          "type": "Identifier",
          "start": 479,
          "end": 480,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 485,
          "end": 486,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 488,
        "end": 577,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 492,
            "end": 575,
            "argument": {
              "type": "NewExpression",
              "start": 498,
              "end": 574,
              "callee": {
                "type": "Identifier",
                "start": 502,
                "end": 514,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 515,
                  "end": 573,
                  "left": {
                    "type": "Literal",
                    "start": 515,
                    "end": 567,
                    "value": "#2: x = new Number(1); x >>>= 1; x === 0. Actual: ",
                    "raw": "'#2: x = new Number(1); x >>>= 1; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 570,
                    "end": 573,
                    "expression": {
                      "type": "Identifier",
                      "start": 571,
                      "end": 572,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 589,
      "end": 595,
      "expression": {
        "type": "AssignmentExpression",
        "start": 589,
        "end": 594,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 589,
          "end": 590,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 593,
          "end": 594,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 596,
      "end": 617,
      "expression": {
        "type": "AssignmentExpression",
        "start": 596,
        "end": 616,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 596,
          "end": 597,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 603,
          "end": 616,
          "callee": {
            "type": "Identifier",
            "start": 607,
            "end": 613,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 614,
              "end": 615,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 618,
      "end": 720,
      "test": {
        "type": "BinaryExpression",
        "start": 622,
        "end": 629,
        "left": {
          "type": "Identifier",
          "start": 622,
          "end": 623,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 628,
          "end": 629,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 631,
        "end": 720,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 635,
            "end": 718,
            "argument": {
              "type": "NewExpression",
              "start": 641,
              "end": 717,
              "callee": {
                "type": "Identifier",
                "start": 645,
                "end": 657,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 658,
                  "end": 716,
                  "left": {
                    "type": "Literal",
                    "start": 658,
                    "end": 710,
                    "value": "#3: x = 1; x >>>= new Number(1); x === 0. Actual: ",
                    "raw": "'#3: x = 1; x >>>= new Number(1); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 713,
                    "end": 716,
                    "expression": {
                      "type": "Identifier",
                      "start": 714,
                      "end": 715,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 732,
      "end": 750,
      "expression": {
        "type": "AssignmentExpression",
        "start": 732,
        "end": 749,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 732,
          "end": 733,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 736,
          "end": 749,
          "callee": {
            "type": "Identifier",
            "start": 740,
            "end": 746,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 747,
              "end": 748,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 751,
      "end": 772,
      "expression": {
        "type": "AssignmentExpression",
        "start": 751,
        "end": 771,
        "operator": ">>>=",
        "left": {
          "type": "Identifier",
          "start": 751,
          "end": 752,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 758,
          "end": 771,
          "callee": {
            "type": "Identifier",
            "start": 762,
            "end": 768,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 769,
              "end": 770,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 773,
      "end": 887,
      "test": {
        "type": "BinaryExpression",
        "start": 777,
        "end": 784,
        "left": {
          "type": "Identifier",
          "start": 777,
          "end": 778,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 783,
          "end": 784,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 786,
        "end": 887,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 790,
            "end": 885,
            "argument": {
              "type": "NewExpression",
              "start": 796,
              "end": 884,
              "callee": {
                "type": "Identifier",
                "start": 800,
                "end": 812,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 813,
                  "end": 883,
                  "left": {
                    "type": "Literal",
                    "start": 813,
                    "end": 877,
                    "value": "#4: x = new Number(1); x >>>= new Number(1); x === 0. Actual: ",
                    "raw": "'#4: x = new Number(1); x >>>= new Number(1); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 880,
                    "end": 883,
                    "expression": {
                      "type": "Identifier",
                      "start": 881,
                      "end": 882,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}