{
  "type": "Program",
  "start": 0,
  "end": 1160,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 307,
      "end": 313,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 311,
          "end": 312,
          "id": {
            "type": "Identifier",
            "start": 311,
            "end": 312,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 325,
      "end": 333,
      "expression": {
        "type": "AssignmentExpression",
        "start": 325,
        "end": 332,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 325,
          "end": 326,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 329,
          "end": 332,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 334,
      "end": 344,
      "expression": {
        "type": "AssignmentExpression",
        "start": 334,
        "end": 343,
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "start": 334,
          "end": 335,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 340,
          "end": 343,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 345,
      "end": 438,
      "test": {
        "type": "BinaryExpression",
        "start": 349,
        "end": 356,
        "left": {
          "type": "Identifier",
          "start": 349,
          "end": 350,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 355,
          "end": 356,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 358,
        "end": 438,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 362,
            "end": 436,
            "argument": {
              "type": "NewExpression",
              "start": 368,
              "end": 435,
              "callee": {
                "type": "Identifier",
                "start": 372,
                "end": 384,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 385,
                  "end": 434,
                  "left": {
                    "type": "Literal",
                    "start": 385,
                    "end": 428,
                    "value": "#1: x = \"1\"; x <<= \"1\"; x === 2. Actual: ",
                    "raw": "'#1: x = \"1\"; x <<= \"1\"; x === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 431,
                    "end": 434,
                    "expression": {
                      "type": "Identifier",
                      "start": 432,
                      "end": 433,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 450,
      "end": 470,
      "expression": {
        "type": "AssignmentExpression",
        "start": 450,
        "end": 469,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 450,
          "end": 451,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 454,
          "end": 469,
          "callee": {
            "type": "Identifier",
            "start": 458,
            "end": 464,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 465,
              "end": 468,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 471,
      "end": 481,
      "expression": {
        "type": "AssignmentExpression",
        "start": 471,
        "end": 480,
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "start": 471,
          "end": 472,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 477,
          "end": 480,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 482,
      "end": 587,
      "test": {
        "type": "BinaryExpression",
        "start": 486,
        "end": 493,
        "left": {
          "type": "Identifier",
          "start": 486,
          "end": 487,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 492,
          "end": 493,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 495,
        "end": 587,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 499,
            "end": 585,
            "argument": {
              "type": "NewExpression",
              "start": 505,
              "end": 584,
              "callee": {
                "type": "Identifier",
                "start": 509,
                "end": 521,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 522,
                  "end": 583,
                  "left": {
                    "type": "Literal",
                    "start": 522,
                    "end": 577,
                    "value": "#2: x = new String(\"1\"); x <<= \"1\"; x === 2. Actual: ",
                    "raw": "'#2: x = new String(\"1\"); x <<= \"1\"; x === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 580,
                    "end": 583,
                    "expression": {
                      "type": "Identifier",
                      "start": 581,
                      "end": 582,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 599,
      "end": 607,
      "expression": {
        "type": "AssignmentExpression",
        "start": 599,
        "end": 606,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 599,
          "end": 600,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 603,
          "end": 606,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 608,
      "end": 630,
      "expression": {
        "type": "AssignmentExpression",
        "start": 608,
        "end": 629,
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "start": 608,
          "end": 609,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 614,
          "end": 629,
          "callee": {
            "type": "Identifier",
            "start": 618,
            "end": 624,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 625,
              "end": 628,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 631,
      "end": 736,
      "test": {
        "type": "BinaryExpression",
        "start": 635,
        "end": 642,
        "left": {
          "type": "Identifier",
          "start": 635,
          "end": 636,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 641,
          "end": 642,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 644,
        "end": 736,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 648,
            "end": 734,
            "argument": {
              "type": "NewExpression",
              "start": 654,
              "end": 733,
              "callee": {
                "type": "Identifier",
                "start": 658,
                "end": 670,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 671,
                  "end": 732,
                  "left": {
                    "type": "Literal",
                    "start": 671,
                    "end": 726,
                    "value": "#3: x = \"1\"; x <<= new String(\"1\"); x === 2. Actual: ",
                    "raw": "'#3: x = \"1\"; x <<= new String(\"1\"); x === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 729,
                    "end": 732,
                    "expression": {
                      "type": "Identifier",
                      "start": 730,
                      "end": 731,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 748,
      "end": 768,
      "expression": {
        "type": "AssignmentExpression",
        "start": 748,
        "end": 767,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 748,
          "end": 749,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 752,
          "end": 767,
          "callee": {
            "type": "Identifier",
            "start": 756,
            "end": 762,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 763,
              "end": 766,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 769,
      "end": 791,
      "expression": {
        "type": "AssignmentExpression",
        "start": 769,
        "end": 790,
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "start": 769,
          "end": 770,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 775,
          "end": 790,
          "callee": {
            "type": "Identifier",
            "start": 779,
            "end": 785,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 786,
              "end": 789,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 792,
      "end": 909,
      "test": {
        "type": "BinaryExpression",
        "start": 796,
        "end": 803,
        "left": {
          "type": "Identifier",
          "start": 796,
          "end": 797,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 802,
          "end": 803,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 805,
        "end": 909,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 809,
            "end": 907,
            "argument": {
              "type": "NewExpression",
              "start": 815,
              "end": 906,
              "callee": {
                "type": "Identifier",
                "start": 819,
                "end": 831,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 832,
                  "end": 905,
                  "left": {
                    "type": "Literal",
                    "start": 832,
                    "end": 899,
                    "value": "#4: x = new String(\"1\"); x <<= new String(\"1\"); x === 2. Actual: ",
                    "raw": "'#4: x = new String(\"1\"); x <<= new String(\"1\"); x === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 902,
                    "end": 905,
                    "expression": {
                      "type": "Identifier",
                      "start": 903,
                      "end": 904,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 921,
      "end": 929,
      "expression": {
        "type": "AssignmentExpression",
        "start": 921,
        "end": 928,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 921,
          "end": 922,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 925,
          "end": 928,
          "value": "x",
          "raw": "\"x\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 930,
      "end": 940,
      "expression": {
        "type": "AssignmentExpression",
        "start": 930,
        "end": 939,
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "start": 930,
          "end": 931,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 936,
          "end": 939,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 941,
      "end": 1034,
      "test": {
        "type": "BinaryExpression",
        "start": 945,
        "end": 952,
        "left": {
          "type": "Identifier",
          "start": 945,
          "end": 946,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 951,
          "end": 952,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 954,
        "end": 1034,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 958,
            "end": 1032,
            "argument": {
              "type": "NewExpression",
              "start": 964,
              "end": 1031,
              "callee": {
                "type": "Identifier",
                "start": 968,
                "end": 980,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 981,
                  "end": 1030,
                  "left": {
                    "type": "Literal",
                    "start": 981,
                    "end": 1024,
                    "value": "#5: x = \"x\"; x <<= \"1\"; x === 0. Actual: ",
                    "raw": "'#5: x = \"x\"; x <<= \"1\"; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1027,
                    "end": 1030,
                    "expression": {
                      "type": "Identifier",
                      "start": 1028,
                      "end": 1029,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1046,
      "end": 1054,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1046,
        "end": 1053,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1046,
          "end": 1047,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1050,
          "end": 1053,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1055,
      "end": 1065,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1055,
        "end": 1064,
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "start": 1055,
          "end": 1056,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1061,
          "end": 1064,
          "value": "x",
          "raw": "\"x\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1066,
      "end": 1159,
      "test": {
        "type": "BinaryExpression",
        "start": 1070,
        "end": 1077,
        "left": {
          "type": "Identifier",
          "start": 1070,
          "end": 1071,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1076,
          "end": 1077,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1079,
        "end": 1159,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1083,
            "end": 1157,
            "argument": {
              "type": "NewExpression",
              "start": 1089,
              "end": 1156,
              "callee": {
                "type": "Identifier",
                "start": 1093,
                "end": 1105,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1106,
                  "end": 1155,
                  "left": {
                    "type": "Literal",
                    "start": 1106,
                    "end": 1149,
                    "value": "#6: x = \"1\"; x <<= \"x\"; x === 1. Actual: ",
                    "raw": "'#6: x = \"1\"; x <<= \"x\"; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1152,
                    "end": 1155,
                    "expression": {
                      "type": "Identifier",
                      "start": 1153,
                      "end": 1154,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}